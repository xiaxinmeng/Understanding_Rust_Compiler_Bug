{"sha": "ceeb21ef31825ce5f7fca47797e2c724f406c444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VlYjIxZWYzMTgyNWNlNWY3ZmNhNDc3OTdlMmM3MjRmNDA2YzQ0NA==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2015-12-08T10:01:45Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2015-12-08T10:01:45Z"}, "message": "builtin-return-1.c: Add an inline assembly read to make sure dummy is not optimized away by LTO.\n\n2015-12-08  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n            Joern Rennecke  <joern.rennecke@embecosm.com>\n\n    gcc/testsuite/\n    * gcc.dg/torture/stackalign/builtin-return-1.c: Add an\n    inline assembly read to make sure dummy is not optimized\n    away by LTO.\n\nCo-Authored-By: Joern Rennecke <joern.rennecke@embecosm.com>\n\nFrom-SVN: r231401", "tree": {"sha": "443318d3f76e52f67ff301ab8d5e0a2c6710b7ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/443318d3f76e52f67ff301ab8d5e0a2c6710b7ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ceeb21ef31825ce5f7fca47797e2c724f406c444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceeb21ef31825ce5f7fca47797e2c724f406c444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceeb21ef31825ce5f7fca47797e2c724f406c444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceeb21ef31825ce5f7fca47797e2c724f406c444/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b688993056d4aefe23171f2a4760293999c8e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b688993056d4aefe23171f2a4760293999c8e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b688993056d4aefe23171f2a4760293999c8e42"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "b84899fc60bf028e62e790a361f68fe9b9311455", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ceeb21ef31825ce5f7fca47797e2c724f406c444/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ceeb21ef31825ce5f7fca47797e2c724f406c444/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ceeb21ef31825ce5f7fca47797e2c724f406c444", "patch": "@@ -1,3 +1,10 @@\n+2015-12-08  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* gcc.dg/torture/stackalign/builtin-return-1.c: Add an\n+\tinline assembly read to make sure dummy is not optimized\n+\taway by LTO.\n+\n 2015-12-08  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR tree-optimization/68766"}, {"sha": "ec4fd8a9ef33a5e755bdb33e4faa41cab0f16a60", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-return-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ceeb21ef31825ce5f7fca47797e2c724f406c444/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-return-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ceeb21ef31825ce5f7fca47797e2c724f406c444/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-return-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-return-1.c?ref=ceeb21ef31825ce5f7fca47797e2c724f406c444", "patch": "@@ -26,15 +26,13 @@ int bar(int n)\n \t\t\t\t   STACK_ARGUMENTS_SIZE));\n }\n \n-char *g;\n-\n int main(void)\n {\n   /* Allocate 64 bytes on the stack to make sure that __builtin_apply\n      can read at least 64 bytes above the return address.  */\n   char dummy[64];\n \n-  g = dummy;\n+  __asm__ (\"\" : : \"\" (dummy));\n \n   if (bar(1) != 2)\n     abort();"}]}