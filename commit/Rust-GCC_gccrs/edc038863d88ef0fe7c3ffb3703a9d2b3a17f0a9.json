{"sha": "edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "node_id": "C_kwDOANBUbNoAKGVkYzAzODg2M2Q4OGVmMGZlN2MzZmZiMzcwM2E5ZDJiM2ExN2YwYTk", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2023-01-04T17:03:53Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2023-01-04T17:04:42Z"}, "message": "Avoid quadratic behaviour of LTO symbol promotion\n\nLTO partitioning does renaming of symbols that ends up in same partition\nand clash with assembler name.  This is done for \"ordinary\" symbols (such\nas static functions) but also for symbols that are kept only as master\nclones holding bodies of functions to be specialized later.\nThis is done only becuase we stream bodies to named section and clash\nin names would mean that ltrans will load wrong body and crash.\n\nMartin recently added bit to stream body for clones that are needed\nsince this makes it easier to bookeep what summaries are output.  THis\nhowever triggers mass renaming of inline clones that is very slow\nand unnecesary since their bodies are never streamed.\n\nBootstrapped/regtested x86_64-linux, comitted.\n\ngcc/lto/ChangeLog:\n\n2023-01-04  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* lto-partition.cc (may_need_named_section_p): Clones with no body\n\tneed no remaning.", "tree": {"sha": "dd2080e936fcac967916ad6f446ac005aaefcfa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd2080e936fcac967916ad6f446ac005aaefcfa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9/comments", "author": null, "committer": null, "parents": [{"sha": "96cba8ebe512887025a9e8b74833074d8aa844c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cba8ebe512887025a9e8b74833074d8aa844c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cba8ebe512887025a9e8b74833074d8aa844c8"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "b96d1dd473d68aaebc7bec29b5cee4857a40bbc0", "filename": "gcc/lto/lto-partition.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9/gcc%2Flto%2Flto-partition.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9/gcc%2Flto%2Flto-partition.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.cc?ref=edc038863d88ef0fe7c3ffb3703a9d2b3a17f0a9", "patch": "@@ -1035,15 +1035,18 @@ promote_symbol (symtab_node *node)\n /* Return true if NODE needs named section even if it won't land in\n    the partition symbol table.\n \n-   FIXME: we should really not use named sections for inline clones\n-   and master clones.  */\n+   FIXME: we should really not use named sections for master clones.  */\n \n static bool\n may_need_named_section_p (lto_symtab_encoder_t encoder, symtab_node *node)\n {\n   struct cgraph_node *cnode = dyn_cast <cgraph_node *> (node);\n+  /* We do not need to handle variables since we never clone them.  */\n   if (!cnode)\n     return false;\n+  /* Only master clones will have bodies streamed.  */\n+  if (cnode->clone_of)\n+    return false;\n   if (node->real_symbol_p ())\n     return false;\n   return (!encoder"}]}