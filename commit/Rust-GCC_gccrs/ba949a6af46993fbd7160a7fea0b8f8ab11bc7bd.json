{"sha": "ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "node_id": "C_kwDOANBUbNoAKGJhOTQ5YTZhZjQ2OTkzZmJkNzE2MGE3ZmVhMGI4ZjhhYjExYmM3YmQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-28T00:16:52Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-28T00:16:52Z"}, "message": "Daily bump.", "tree": {"sha": "6aa3ff1522f3062ba1d439f93c0d0356653cbc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aa3ff1522f3062ba1d439f93c0d0356653cbc6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/comments", "author": null, "committer": null, "parents": [{"sha": "e3947ea7f31518422d9d6b39f081dd4bb2e8f08f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3947ea7f31518422d9d6b39f081dd4bb2e8f08f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3947ea7f31518422d9d6b39f081dd4bb2e8f08f"}], "stats": {"total": 164, "additions": 163, "deletions": 1}, "files": [{"sha": "a93b56ce00dfaa144cbbc302e58fb0fc2ca4a284", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1,3 +1,47 @@\n+2022-04-27  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/loongarch.md: Add fdiv define_expand template,\n+\tthen generate floating-point division and floating-point reciprocal\n+\tinstructions.\n+\n+2022-04-27  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/loongarch.md: Add '(clobber (mem:BLK (scratch)))'\n+\tto PLV instruction templates.\n+\n+2022-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/104492\n+\t* gimple-ssa-warn-access.cc\n+\t(pass_waccess::warn_invalid_pointer): Exclude equality compare\n+\tdiagnostics for all kind of invalidations.\n+\t(pass_waccess::check_dangling_uses): Fix post-dominator query.\n+\t(pass_waccess::check_pointer_uses): Likewise.\n+\n+2022-04-27  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR target/102024\n+\t* config/s390/s390-protos.h (s390_function_arg_vector): Remove\n+\tprototype.\n+\t* config/s390/s390.cc (s390_single_field_struct_p): New function.\n+\t(s390_function_arg_vector): Invoke s390_single_field_struct_p.\n+\t(s390_function_arg_float): Likewise.\n+\n+2022-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/105396\n+\t* asan.cc (asan_redzone_buffer::emit_redzone_byte): Handle the case\n+\twhere offset is bigger than off but smaller than m_prev_offset + 32\n+\tbits by pushing one or more 0 bytes.  Sink the\n+\tm_shadow_bytes.safe_push (value); flush_if_full (); statements from\n+\tall cases to the end of the function.\n+\n+2022-04-27  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/105271\n+\t* config/rs6000/rs6000-builtins.def (NEG_V2DI): Move to [power8-vector]\n+\tstanza.\n+\n 2022-04-26  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config/gcn/gcn.cc (gcn_print_lds_decl): Make \"gang-private"}, {"sha": "04ee20dc4e29bf17e0c6cfecabe6b83851e5bb51", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1 +1 @@\n-20220427\n+20220428"}, {"sha": "3a7b8ed8f92d56fd258cdce072ab45d3dcd492a5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1,3 +1,14 @@\n+2022-04-27  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* tracebak.c: Add support for ARM RTEMS. Add support for RTEMS to PPC\n+\tELF.  Add support for RTEMS to SPARC.  Merge aarch64 support of Linux\n+\tand RTEMS.\n+\n+2022-04-27  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\tPR ada/104027\n+\t* gnat1drv.adb: Remove the goto End_Of_Program.\n+\n 2022-03-24  Pascal Obry  <obry@adacore.com>\n \n \tPR ada/104767"}, {"sha": "3ef9e8959a96c15bc31e10dff086cc2bb569b018", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1,3 +1,12 @@\n+2022-04-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.cc (strip_typedefs): Add default argument comments.\n+\n+2022-04-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105398\n+\t* pt.cc (uses_template_parms): Return false for any NAMESPACE_DECL.\n+\n 2022-04-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/102629"}, {"sha": "9b6e55a0f352aa460fce09acb6e27dcb8a55e2d9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1,3 +1,19 @@\n+2022-04-27  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/103662\n+\tPR fortran/105379\n+\t* array.cc (compare_bounds): Use bool as return type.\n+\tSupport non-constant expressions.\n+\t(gfc_compare_array_spec): Update call to compare_bounds.\n+\n+2022-04-27  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/102043\n+\tPR fortran/105381\n+\t* trans-array.cc (non_negative_strides_array_p): Inline variable\n+\torig_decl and merge nested if conditions.  Add condition to not\n+\trecurse if the next argument is the same as the current.\n+\n 2022-04-25  Jakub Jelinek  <jakub@redhat.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "d3022f1a6d7527f73fa5b9544521b894284c0b82", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1,3 +1,64 @@\n+2022-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* gfortran.dg/pr70673.f90: Removed second invalid\n+\tline.\n+\n+2022-04-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105398\n+\t* g++.dg/cpp1y/lambda-generic-enum2.C: New test.\n+\n+2022-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/104492\n+\t* g++.dg/warn/pr104492.C: New test.\n+\n+2022-04-27  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/70673\n+\tPR fortran/78054\n+\t* gfortran.dg/pr70673.f90: Remove invalid statement.\n+\t* gfortran.dg/pr70673_2.f90: New test to check that\n+\tICE does not re-appear.\n+\n+2022-04-27  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/103662\n+\tPR fortran/105379\n+\t* gfortran.dg/class_dummy_8.f90: New test.\n+\t* gfortran.dg/class_dummy_9.f90: New test.\n+\n+2022-04-27  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/102043\n+\tPR fortran/105381\n+\t* gfortran.dg/character_array_dummy_1.f90: New test.\n+\n+2022-04-27  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\tPR tree-optimization/105374\n+\t* gcc.target/arm/simd/pr105374.C: New.\n+\n+2022-04-27  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR target/102024\n+\t* g++.target/s390/pr102024-1.C: New test.\n+\t* g++.target/s390/pr102024-2.C: New test.\n+\t* g++.target/s390/pr102024-3.C: New test.\n+\t* g++.target/s390/pr102024-4.C: New test.\n+\t* g++.target/s390/pr102024-5.C: New test.\n+\t* g++.target/s390/pr102024-6.C: New test.\n+\n+2022-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/105396\n+\t* gcc.dg/asan/pr105396.c: New test.\n+\n+2022-04-27  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/105271\n+\t* gcc.target/powerpc/pr105271.c: New test.\n+\n 2022-04-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/102629"}, {"sha": "461cc8a708624401e8b53c1a7a4a93a4bfd7bfc1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ba949a6af46993fbd7160a7fea0b8f8ab11bc7bd", "patch": "@@ -1,3 +1,24 @@\n+2022-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/abi/post/x86_64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt: Update.\n+\t* config/abi/post/i486-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/s390x-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/powerpc-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/powerpc64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/powerpc64-linux-gnu/32/baseline_symbols.txt: Update.\n+\n+2022-04-27  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* python/libstdcxx/v6/printers.py (SharedPointerPrinter): Add\n+\tsupport for atomic<shared_ptr<T>> and atomic<weak_ptr<T>>.\n+\t(StdAtomicPrinter): New printer.\n+\t(build_libstdcxx_dictionary): Register new printer.\n+\t* testsuite/libstdc++-prettyprinters/cxx11.cc: Test std::atomic.\n+\t* testsuite/libstdc++-prettyprinters/cxx20.cc: Test atomic smart\n+\tpointers.\n+\n 2022-04-26  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/shared_ptr_atomic.h (atomic<shared_ptr>): Add"}]}