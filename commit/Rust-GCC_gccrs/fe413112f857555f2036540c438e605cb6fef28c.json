{"sha": "fe413112f857555f2036540c438e605cb6fef28c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0MTMxMTJmODU3NTU1ZjIwMzY1NDBjNDM4ZTYwNWNiNmZlZjI4Yw==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-08-07T03:38:33Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-08-07T03:38:33Z"}, "message": "acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): New macro, calls...\n\n2001-08-06  Phil Edwards  <pme@sources.redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE):  New macro, calls...\n\t(GLIBCPP_CHECK_SETRLIMIT):  ...this new macro, which also uses...\n\t(GLIBCPP_CHECK_SETRLIMIT_ancilliary):  ...this new macro.\n\t* configure.in (AM_CONFIG_HEADER):  Also generate testsuite_hooks.h.\n\tCall GLIBCPP_CONFIGURE_TESTSUITE.\n\t* aclocal.m4:  Regenerate.\n\t* config.h.in:  Regenerate.\n\t* configure:  Regenerate.\n\n\t* testsuite/lib/libstdc++-v3-dg.exp:  Download new header instead\n\tof old header.\n\n\t* testsuite_flags.in:  Add build dir's testsuite to INCLUDES.\n\t* testsuite/debug_assert.h:  Removed; contents merged into...\n\t* testsuite/testsuite_hooks.h.in:  ...here.  New file.\n\t* testsuite/17_intro/header_ciso646.cc:  No longer include\n\tdebug_assert.h, include testsuite_hooks.h instead.\n\t* testsuite/17_intro/header_fstream.cc:  Likewise.\n\t* testsuite/17_intro/header_iomanip.cc:  Likewise.\n\t* testsuite/17_intro/header_ios.cc:  Likewise.\n\t* testsuite/17_intro/header_iosfwd.cc:  Likewise.\n\t* testsuite/17_intro/header_iostream.cc:  Likewise.\n\t* testsuite/17_intro/header_istream.cc:  Likewise.\n\t* testsuite/17_intro/header_ostream.cc:  Likewise.\n\t* testsuite/17_intro/header_sstream.cc:  Likewise.\n\t* testsuite/17_intro/header_streambuf.cc:  Likewise.\n\t* testsuite/18_support/numeric_limits.cc:  Likewise.\n\t* testsuite/19_diagnostics/stdexceptions.cc:  Likewise.\n\t* testsuite/20_util/allocator_members.cc:  Likewise.\n\t* testsuite/20_util/auto_ptr.cc:  Likewise.\n\t* testsuite/20_util/pairs.cc:  Likewise.\n\t* testsuite/21_strings/append.cc:  Likewise.\n\t* testsuite/21_strings/capacity.cc:  Likewise.\n\t* testsuite/21_strings/char_traits_requirements.cc:  Likewise.\n\t* testsuite/21_strings/compare.cc:  Likewise.\n\t* testsuite/21_strings/ctor_copy_dtor.cc:  Likewise.  Also set up\n\tcall to (disabled) __set_testsuite_memlimit() wrapper.\n\t* testsuite/21_strings/element_access.cc:  Likewise.\n\t* testsuite/21_strings/find.cc:  Likewise.\n\t* testsuite/21_strings/insert.cc:  Likewise.  Also set up call to\n\t(disabled) __set_testsuite_memlimit() wrapper.\n\t* testsuite/21_strings/inserters_extractors.cc:  Likewise.\n\t* testsuite/21_strings/invariants.cc:  Likewise.\n\t* testsuite/21_strings/nonmember.cc:  Likewise.\n\t* testsuite/21_strings/operations.cc:  Likewise.\n\t* testsuite/21_strings/replace.cc:  Likewise.\n\t* testsuite/21_strings/rfind.cc:  Likewise.\n\t* testsuite/21_strings/substr.cc:  Likewise.\n\t* testsuite/22_locale/codecvt_char_char.cc:  Likewise.\n\t* testsuite/22_locale/codecvt_unicode_char.cc:  Likewise.\n\t* testsuite/22_locale/codecvt_unicode_wchar_t.cc:  Likewise.\n\t* testsuite/22_locale/codecvt_wchar_t_char.cc:  Likewise.\n\t* testsuite/22_locale/ctor_copy_dtor.cc:  Likewise.\n\t* testsuite/22_locale/ctype_char_members.cc:  Likewise.\n\t* testsuite/22_locale/ctype_wchar_t_members.cc:  Likewise.\n\t* testsuite/22_locale/facet.cc:  Likewise.\n\t* testsuite/22_locale/global_templates.cc:  Likewise.\n\t* testsuite/22_locale/members.cc:  Likewise.\n\t* testsuite/22_locale/numpunct_byname.cc:  Likewise.\n\t* testsuite/22_locale/numpunct_char_members.cc:  Likewise.\n\t* testsuite/22_locale/operators.cc:  Likewise.\n\t* testsuite/22_locale/static_members.cc:  Likewise.\n\t* testsuite/23_containers/bitset_ctor.cc:  Likewise.\n\t* testsuite/23_containers/bitset_members.cc:  Likewise.\n\t* testsuite/23_containers/bitset_shift.cc:  Likewise.\n\t* testsuite/23_containers/vector_capacity.cc:  Likewise.\n\t* testsuite/23_containers/vector_ctor.cc:  Likewise.\n\t* testsuite/23_containers/vector_element_access.cc:  Likewise.\n\t* testsuite/23_containers/vector_modifiers.cc:  Likewise.\n\t* testsuite/24_iterators/istreambuf_iterator.cc:  Likewise.\n\t* testsuite/24_iterators/iterator.cc:  Likewise.\n\t* testsuite/24_iterators/ostreambuf_iterator.cc:  Likewise.\n\t* testsuite/25_algorithms/binary_search.cc:  Likewise.\n\t* testsuite/25_algorithms/copy.cc:  Likewise.\n\t* testsuite/25_algorithms/heap.cc:  Likewise.\n\t* testsuite/25_algorithms/lower_bound.cc:  Likewise.\n\t* testsuite/25_algorithms/min_max.cc:  Likewise.\n\t* testsuite/25_algorithms/partition.cc:  Likewise.\n\t* testsuite/25_algorithms/rotate.cc:  Likewise.\n\t* testsuite/25_algorithms/sort.cc:  Likewise.\n\t* testsuite/26_numerics/c_math.cc:  Likewise.\n\t* testsuite/26_numerics/complex_inserters_extractors.cc:  Likewise.\n\t* testsuite/26_numerics/complex_value.cc:  Likewise.\n\t* testsuite/27_io/filebuf.cc:  Likewise.\n\t* testsuite/27_io/filebuf_members.cc:  Likewise.\n\t* testsuite/27_io/filebuf_virtuals.cc:  Likewise.\n\t* testsuite/27_io/fpos.cc:  Likewise.\n\t* testsuite/27_io/fstream_members.cc:  Likewise.\n\t* testsuite/27_io/ifstream_members.cc:  Likewise.\n\t* testsuite/27_io/ios_base_callbacks.cc:  Likewise.\n\t* testsuite/27_io/ios_base_members_static.cc:  Likewise.\n\t* testsuite/27_io/ios_base_storage.cc:  Likewise.\n\t* testsuite/27_io/ios_ctor.cc:  Likewise.\n\t* testsuite/27_io/ios_init.cc:  Likewise.\n\t* testsuite/27_io/ios_manip_basefield.cc:  Likewise.\n\t* testsuite/27_io/ios_manip_fmtflags.cc:  Likewise.\n\t* testsuite/27_io/ios_members.cc:  Likewise.\n\t* testsuite/27_io/istream_extractor_arith.cc:  Likewise.\n\t* testsuite/27_io/istream_extractor_char.cc:  Likewise.\n\t* testsuite/27_io/istream_extractor_other.cc:  Likewise.\n\t* testsuite/27_io/istream_manip.cc:  Likewise.\n\t* testsuite/27_io/istream_seeks.cc:  Likewise.\n\t* testsuite/27_io/istream_sentry.cc:  Likewise.\n\t* testsuite/27_io/istream_unformatted.cc:  Likewise.\n\t* testsuite/27_io/istringstream_members.cc:  Likewise.\n\t* testsuite/27_io/narrow_stream_objects.cc:  Likewise.\n\t* testsuite/27_io/ofstream_members.cc:  Likewise.\n\t* testsuite/27_io/ostream_inserter_arith.cc:  Likewise.\n\t* testsuite/27_io/ostream_inserter_char.cc:  Likewise.\n\t* testsuite/27_io/ostream_inserter_other.cc:  Likewise.\n\t* testsuite/27_io/ostream_manip.cc:  Likewise.\n\t* testsuite/27_io/ostream_seeks.cc:  Likewise.\n\t* testsuite/27_io/ostream_unformatted.cc:  Likewise.\n\t* testsuite/27_io/ostringstream_members.cc:  Likewise.\n\t* testsuite/27_io/streambuf.cc:  Likewise.\n\t* testsuite/27_io/stringbuf.cc:  Likewise.\n\t* testsuite/27_io/stringbuf_virtuals.cc:  Likewise.\n\t* testsuite/27_io/stringstream.cc:  Likewise.\n\t* testsuite/27_io/stringstream_members.cc:  Likewise.\n\t* testsuite/27_io/wide_stream_objects.cc:  Likewise.\n\nFrom-SVN: r44679", "tree": {"sha": "2cc8d52f70fb8011ea511b775c4f1dbebc72ea34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cc8d52f70fb8011ea511b775c4f1dbebc72ea34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe413112f857555f2036540c438e605cb6fef28c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe413112f857555f2036540c438e605cb6fef28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe413112f857555f2036540c438e605cb6fef28c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe413112f857555f2036540c438e605cb6fef28c/comments", "author": null, "committer": null, "parents": [{"sha": "47907859fdd0b39ecb2a78c068872470f823329f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47907859fdd0b39ecb2a78c068872470f823329f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47907859fdd0b39ecb2a78c068872470f823329f"}], "stats": {"total": 2605, "additions": 1542, "deletions": 1063}, "files": [{"sha": "6d3fcfacf3cff4370eda7707288d2da5b5894507", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -1,3 +1,126 @@\n+2001-08-06  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE):  New macro, calls...\n+\t(GLIBCPP_CHECK_SETRLIMIT):  ...this new macro, which also uses...\n+\t(GLIBCPP_CHECK_SETRLIMIT_ancilliary):  ...this new macro.\n+\t* configure.in (AM_CONFIG_HEADER):  Also generate testsuite_hooks.h.\n+\tCall GLIBCPP_CONFIGURE_TESTSUITE.\n+\t* aclocal.m4:  Regenerate.\n+\t* config.h.in:  Regenerate.\n+\t* configure:  Regenerate.\n+\n+\t* testsuite/lib/libstdc++-v3-dg.exp:  Download new header instead\n+\tof old header.\n+\n+\t* testsuite_flags.in:  Add build dir's testsuite to INCLUDES.\n+\t* testsuite/debug_assert.h:  Removed; contents merged into...\n+\t* testsuite/testsuite_hooks.h.in:  ...here.  New file.\n+\t* testsuite/17_intro/header_ciso646.cc:  No longer include\n+\tdebug_assert.h, include testsuite_hooks.h instead.\n+\t* testsuite/17_intro/header_fstream.cc:  Likewise.\n+\t* testsuite/17_intro/header_iomanip.cc:  Likewise.\n+\t* testsuite/17_intro/header_ios.cc:  Likewise.\n+\t* testsuite/17_intro/header_iosfwd.cc:  Likewise.\n+\t* testsuite/17_intro/header_iostream.cc:  Likewise.\n+\t* testsuite/17_intro/header_istream.cc:  Likewise.\n+\t* testsuite/17_intro/header_ostream.cc:  Likewise.\n+\t* testsuite/17_intro/header_sstream.cc:  Likewise.\n+\t* testsuite/17_intro/header_streambuf.cc:  Likewise.\n+\t* testsuite/18_support/numeric_limits.cc:  Likewise.\n+\t* testsuite/19_diagnostics/stdexceptions.cc:  Likewise.\n+\t* testsuite/20_util/allocator_members.cc:  Likewise.\n+\t* testsuite/20_util/auto_ptr.cc:  Likewise.\n+\t* testsuite/20_util/pairs.cc:  Likewise.\n+\t* testsuite/21_strings/append.cc:  Likewise.\n+\t* testsuite/21_strings/capacity.cc:  Likewise.\n+\t* testsuite/21_strings/char_traits_requirements.cc:  Likewise.\n+\t* testsuite/21_strings/compare.cc:  Likewise.\n+\t* testsuite/21_strings/ctor_copy_dtor.cc:  Likewise.  Also set up\n+\tcall to (disabled) __set_testsuite_memlimit() wrapper.\n+\t* testsuite/21_strings/element_access.cc:  Likewise.\n+\t* testsuite/21_strings/find.cc:  Likewise.\n+\t* testsuite/21_strings/insert.cc:  Likewise.  Also set up call to\n+\t(disabled) __set_testsuite_memlimit() wrapper.\n+\t* testsuite/21_strings/inserters_extractors.cc:  Likewise.\n+\t* testsuite/21_strings/invariants.cc:  Likewise.\n+\t* testsuite/21_strings/nonmember.cc:  Likewise.\n+\t* testsuite/21_strings/operations.cc:  Likewise.\n+\t* testsuite/21_strings/replace.cc:  Likewise.\n+\t* testsuite/21_strings/rfind.cc:  Likewise.\n+\t* testsuite/21_strings/substr.cc:  Likewise.\n+\t* testsuite/22_locale/codecvt_char_char.cc:  Likewise.\n+\t* testsuite/22_locale/codecvt_unicode_char.cc:  Likewise.\n+\t* testsuite/22_locale/codecvt_unicode_wchar_t.cc:  Likewise.\n+\t* testsuite/22_locale/codecvt_wchar_t_char.cc:  Likewise.\n+\t* testsuite/22_locale/ctor_copy_dtor.cc:  Likewise.\n+\t* testsuite/22_locale/ctype_char_members.cc:  Likewise.\n+\t* testsuite/22_locale/ctype_wchar_t_members.cc:  Likewise.\n+\t* testsuite/22_locale/facet.cc:  Likewise.\n+\t* testsuite/22_locale/global_templates.cc:  Likewise.\n+\t* testsuite/22_locale/members.cc:  Likewise.\n+\t* testsuite/22_locale/numpunct_byname.cc:  Likewise.\n+\t* testsuite/22_locale/numpunct_char_members.cc:  Likewise.\n+\t* testsuite/22_locale/operators.cc:  Likewise.\n+\t* testsuite/22_locale/static_members.cc:  Likewise.\n+\t* testsuite/23_containers/bitset_ctor.cc:  Likewise.\n+\t* testsuite/23_containers/bitset_members.cc:  Likewise.\n+\t* testsuite/23_containers/bitset_shift.cc:  Likewise.\n+\t* testsuite/23_containers/vector_capacity.cc:  Likewise.\n+\t* testsuite/23_containers/vector_ctor.cc:  Likewise.\n+\t* testsuite/23_containers/vector_element_access.cc:  Likewise.\n+\t* testsuite/23_containers/vector_modifiers.cc:  Likewise.\n+\t* testsuite/24_iterators/istreambuf_iterator.cc:  Likewise.\n+\t* testsuite/24_iterators/iterator.cc:  Likewise.\n+\t* testsuite/24_iterators/ostreambuf_iterator.cc:  Likewise.\n+\t* testsuite/25_algorithms/binary_search.cc:  Likewise.\n+\t* testsuite/25_algorithms/copy.cc:  Likewise.\n+\t* testsuite/25_algorithms/heap.cc:  Likewise.\n+\t* testsuite/25_algorithms/lower_bound.cc:  Likewise.\n+\t* testsuite/25_algorithms/min_max.cc:  Likewise.\n+\t* testsuite/25_algorithms/partition.cc:  Likewise.\n+\t* testsuite/25_algorithms/rotate.cc:  Likewise.\n+\t* testsuite/25_algorithms/sort.cc:  Likewise.\n+\t* testsuite/26_numerics/c_math.cc:  Likewise.\n+\t* testsuite/26_numerics/complex_inserters_extractors.cc:  Likewise.\n+\t* testsuite/26_numerics/complex_value.cc:  Likewise.\n+\t* testsuite/27_io/filebuf.cc:  Likewise.\n+\t* testsuite/27_io/filebuf_members.cc:  Likewise.\n+\t* testsuite/27_io/filebuf_virtuals.cc:  Likewise.\n+\t* testsuite/27_io/fpos.cc:  Likewise.\n+\t* testsuite/27_io/fstream_members.cc:  Likewise.\n+\t* testsuite/27_io/ifstream_members.cc:  Likewise.\n+\t* testsuite/27_io/ios_base_callbacks.cc:  Likewise.\n+\t* testsuite/27_io/ios_base_members_static.cc:  Likewise.\n+\t* testsuite/27_io/ios_base_storage.cc:  Likewise.\n+\t* testsuite/27_io/ios_ctor.cc:  Likewise.\n+\t* testsuite/27_io/ios_init.cc:  Likewise.\n+\t* testsuite/27_io/ios_manip_basefield.cc:  Likewise.\n+\t* testsuite/27_io/ios_manip_fmtflags.cc:  Likewise.\n+\t* testsuite/27_io/ios_members.cc:  Likewise.\n+\t* testsuite/27_io/istream_extractor_arith.cc:  Likewise.\n+\t* testsuite/27_io/istream_extractor_char.cc:  Likewise.\n+\t* testsuite/27_io/istream_extractor_other.cc:  Likewise.\n+\t* testsuite/27_io/istream_manip.cc:  Likewise.\n+\t* testsuite/27_io/istream_seeks.cc:  Likewise.\n+\t* testsuite/27_io/istream_sentry.cc:  Likewise.\n+\t* testsuite/27_io/istream_unformatted.cc:  Likewise.\n+\t* testsuite/27_io/istringstream_members.cc:  Likewise.\n+\t* testsuite/27_io/narrow_stream_objects.cc:  Likewise.\n+\t* testsuite/27_io/ofstream_members.cc:  Likewise.\n+\t* testsuite/27_io/ostream_inserter_arith.cc:  Likewise.\n+\t* testsuite/27_io/ostream_inserter_char.cc:  Likewise.\n+\t* testsuite/27_io/ostream_inserter_other.cc:  Likewise.\n+\t* testsuite/27_io/ostream_manip.cc:  Likewise.\n+\t* testsuite/27_io/ostream_seeks.cc:  Likewise.\n+\t* testsuite/27_io/ostream_unformatted.cc:  Likewise.\n+\t* testsuite/27_io/ostringstream_members.cc:  Likewise.\n+\t* testsuite/27_io/streambuf.cc:  Likewise.\n+\t* testsuite/27_io/stringbuf.cc:  Likewise.\n+\t* testsuite/27_io/stringbuf_virtuals.cc:  Likewise.\n+\t* testsuite/27_io/stringstream.cc:  Likewise.\n+\t* testsuite/27_io/stringstream_members.cc:  Likewise.\n+\t* testsuite/27_io/wide_stream_objects.cc:  Likewise.\n+\n 2001-07-31  Loren J. Rittle  <ljrittle@acm.org>\n \n         * src/gen-num-limits.cc:  Use __LONG_LONG_MAX__."}, {"sha": "f28f756c596a3b1f81504775a13e6062fd41efd5", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -1761,6 +1761,44 @@ dnl string, '#' otherwise\n   AC_SUBST(ifGNUmake)\n ])\n \n+\n+dnl Check for headers for, and arguments to, the setrlimit() function.\n+dnl Used only in testsuite_hooks.h.\n+AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT_ancilliary, [\n+  AC_TRY_COMPILE([#include <sys/resource.h>\n+                  #include <unistd.h>\n+                 ], [ int f = RLIMIT_$1 ; ],\n+                 [glibcpp_mresult=1], [glibcpp_mresult=0])\n+  AC_DEFINE_UNQUOTED(HAVE_MEMLIMIT_$1, $glibcpp_mresult,\n+                     [Only used in build directory testsuite_hooks.h.])\n+])\n+AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n+  setrlimit_have_needed_headers=yes\n+  AC_CHECK_HEADERS(sys/resource.h unistd.h,\n+                   [],\n+                   setrlimit_have_needed_headers=no)\n+  # If don't have the headers, then we can't run the tests now, and we\n+  # won't be seeing any of these during testsuite compilation.\n+  if test $setrlimit_have_needed_headers = yes; then\n+    # Can't do these in a loop, else the resulting syntax is wrong.\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(DATA)\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(RSS)\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(VMEM)\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(AS)\n+  fi\n+])\n+\n+\n+dnl\n+dnl Does any necessary configuration of the testsuite directory.  Generates\n+dnl the testsuite_hooks.h header.\n+dnl\n+dnl GLIBCPP_CONFIGURE_TESTSUITE  [no args]\n+AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n+  GLIBCPP_CHECK_SETRLIMIT\n+])\n+\n+\n sinclude(../libtool.m4)\n dnl The lines below arrange for aclocal not to bring an installed\n dnl libtool.m4 into aclocal.m4, while still arranging for automake to"}, {"sha": "b8e0f1a9367e308dadacf1b89f74f85ca2db7c77", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -1773,6 +1773,44 @@ dnl string, '#' otherwise\n   AC_SUBST(ifGNUmake)\n ])\n \n+\n+dnl Check for headers for, and arguments to, the setrlimit() function.\n+dnl Used only in testsuite_hooks.h.\n+AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT_ancilliary, [\n+  AC_TRY_COMPILE([#include <sys/resource.h>\n+                  #include <unistd.h>\n+                 ], [ int f = RLIMIT_$1 ; ],\n+                 [glibcpp_mresult=1], [glibcpp_mresult=0])\n+  AC_DEFINE_UNQUOTED(HAVE_MEMLIMIT_$1, $glibcpp_mresult,\n+                     [Only used in build directory testsuite_hooks.h.])\n+])\n+AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n+  setrlimit_have_needed_headers=yes\n+  AC_CHECK_HEADERS(sys/resource.h unistd.h,\n+                   [],\n+                   setrlimit_have_needed_headers=no)\n+  # If don't have the headers, then we can't run the tests now, and we\n+  # won't be seeing any of these during testsuite compilation.\n+  if test $setrlimit_have_needed_headers = yes; then\n+    # Can't do these in a loop, else the resulting syntax is wrong.\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(DATA)\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(RSS)\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(VMEM)\n+    GLIBCPP_CHECK_SETRLIMIT_ancilliary(AS)\n+  fi\n+])\n+\n+\n+dnl\n+dnl Does any necessary configuration of the testsuite directory.  Generates\n+dnl the testsuite_hooks.h header.\n+dnl\n+dnl GLIBCPP_CONFIGURE_TESTSUITE  [no args]\n+AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n+  GLIBCPP_CHECK_SETRLIMIT\n+])\n+\n+\n sinclude(../libtool.m4)\n dnl The lines below arrange for aclocal not to bring an installed\n dnl libtool.m4 into aclocal.m4, while still arranging for automake to"}, {"sha": "85d30923ebf00180d11dac3ea61f691cd78c1b93", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -681,6 +681,9 @@\n /* Define if you have the <sys/machine.h> header file.  */\n #undef HAVE_SYS_MACHINE_H\n \n+/* Define if you have the <sys/resource.h> header file.  */\n+#undef HAVE_SYS_RESOURCE_H\n+\n /* Define if you have the <unistd.h> header file.  */\n #undef HAVE_UNISTD_H\n \n@@ -702,6 +705,18 @@\n /* Define if sigsetjmp is available.   */\n #undef HAVE_SIGSETJMP\n \n+/* Only used in build directory testsuite_hooks.h. */\n+#undef HAVE_MEMLIMIT_DATA\n+\n+/* Only used in build directory testsuite_hooks.h. */\n+#undef HAVE_MEMLIMIT_RSS\n+\n+/* Only used in build directory testsuite_hooks.h. */\n+#undef HAVE_MEMLIMIT_VMEM\n+\n+/* Only used in build directory testsuite_hooks.h. */\n+#undef HAVE_MEMLIMIT_AS\n+\n //\n // Systems that have certain non-standard functions prefixed with an\n // underscore, we'll handle those here. Must come after config.h.in."}, {"sha": "9ccf925171ccc954439db23884787a18dc42edd7", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1082, "deletions": 905, "changes": 1987, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=fe413112f857555f2036540c438e605cb6fef28c"}, {"sha": "521567390d490c758955ac9dee6e968dcb158a62", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -58,7 +58,7 @@ AC_SUBST(enable_shared)\n AC_SUBST(enable_static)\n GLIBCPP_CHECK_GNU_MAKE\n \n-AM_CONFIG_HEADER(config.h)\n+AM_CONFIG_HEADER(config.h testsuite/testsuite_hooks.h)\n \n # Check for c++ or library specific bits that don't require linking.\n GLIBCPP_CHECK_COMPILER_VERSION\n@@ -222,6 +222,10 @@ else\n   AC_FUNC_MMAP\n fi\n \n+# Enable/configure some pieces which may require knowledge about the\n+# compiler situation (native/cross), which we just finished discovering.\n+GLIBCPP_CONFIGURE_TESTSUITE\n+\n # Propagate the target-specific source directories through the build chain.\n OS_INC_SRCDIR=$os_include_dir/bits\n ATOMICITY_INC_SRCDIR=$ATOMICITYH/bits"}, {"sha": "8513b0864efcd68b8b33373e3a10a2917d3834ec", "filename": "libstdc++-v3/testsuite/17_intro/header_ciso646.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ciso646.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ciso646.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ciso646.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n // { dg-do link }\n \n #include <ciso646>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n // 2.11 Keywords"}, {"sha": "9f41f5057199714f23e27839fa8cfea4720d4841", "filename": "libstdc++-v3/testsuite/17_intro/header_fstream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_fstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_fstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_fstream.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, fstream\n \n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "130e9767753ff42b45343c8a95ad91c55fcd01c9", "filename": "libstdc++-v3/testsuite/17_intro/header_iomanip.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iomanip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iomanip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iomanip.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, iomanip\n \n #include <iomanip>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "bde8a85c6f4d65abb012588c20d9a167ceab457f", "filename": "libstdc++-v3/testsuite/17_intro/header_ios.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ios.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, ios\n \n #include <ios>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "d98467027746d7541f44fdbcf5f6694db93513cb", "filename": "libstdc++-v3/testsuite/17_intro/header_iosfwd.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iosfwd.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iosfwd.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iosfwd.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, iosfwd\n \n #include <iosfwd> \n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "59b72fcce7b9407aaaf9e73db395d676398c5f53", "filename": "libstdc++-v3/testsuite/17_intro/header_iostream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iostream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iostream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_iostream.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, iostream\n \n #include <iostream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "daa7f16d1aa63deca5bd637b66aff7300439e81b", "filename": "libstdc++-v3/testsuite/17_intro/header_istream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_istream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_istream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_istream.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, istream\n \n #include <istream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "7af23d55800158b967a4d0517ab1a044656d76c3", "filename": "libstdc++-v3/testsuite/17_intro/header_ostream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ostream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ostream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_ostream.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, ostream\n \n #include <ostream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "b546c5498cefb69962637152826103759bd582d4", "filename": "libstdc++-v3/testsuite/17_intro/header_sstream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_sstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_sstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_sstream.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, sstream\n \n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "de5b8abfd868bc38c584cf68a8082a82dbe23738", "filename": "libstdc++-v3/testsuite/17_intro/header_streambuf.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_streambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_streambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheader_streambuf.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 17.4.1.2 Headers, streambuf\n \n #include <streambuf>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n int main(void)"}, {"sha": "6faaa92d5f2ceefd93142c0666f2d4b44d9d6cb3", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 18.2.1.1 template class numeric_limits\n \n #include <limits>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n template<typename T>"}, {"sha": "c118580ce5072da2118d5d1e6e8b28cbf4c6a7e9", "filename": "libstdc++-v3/testsuite/19_diagnostics/stdexceptions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fstdexceptions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fstdexceptions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fstdexceptions.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // libstdc++/1972\n void test01()"}, {"sha": "5d6cdd7160060683ca5e5736b2ba2255695a6544", "filename": "libstdc++-v3/testsuite/20_util/allocator_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <memory>\n #include <cstdlib>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n struct gnu { };\n "}, {"sha": "a1c3de2374e2e4b78357253dbb8643dd69196819", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // 20.4.5 Template class auto_ptr [lib.auto.ptr]\n \n #include <memory>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n struct A\n {"}, {"sha": "451ef19703b5577bc5e230143a218c76ab1a1572", "filename": "libstdc++-v3/testsuite/20_util/pairs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpairs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpairs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpairs.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 20.2.2 Pairs\n \n #include <utility>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n class gnu_obj\n {"}, {"sha": "c518e9526713f7cb3e1120e60eb06d59f22d2ed1", "filename": "libstdc++-v3/testsuite/21_strings/append.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fappend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fappend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fappend.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "ed47e4e26f2c10e81778a05e1a814b55e70cc762", "filename": "libstdc++-v3/testsuite/21_strings/capacity.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <cstdio>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n template<typename T>\n   struct A { };"}, {"sha": "d2406ed3599af6ed6fc515e4fe6682bdd60fb5c1", "filename": "libstdc++-v3/testsuite/21_strings/char_traits_requirements.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits_requirements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits_requirements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits_requirements.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 21.1.1 Characher traits requirements\n \n #include <string>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int test01(void)\n {"}, {"sha": "d06dbfda4f9c41eae5a9511dfb6a4d5600a0d019", "filename": "libstdc++-v3/testsuite/21_strings/compare.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n // things would be sorted in a dictionary.\n \n #include <string>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n enum want_value {lt=0, z=1, gt=2};\n "}, {"sha": "355ce4d5dcd0ec5ca8b3ad80f29d744dbd9e52b8", "filename": "libstdc++-v3/testsuite/21_strings/ctor_copy_dtor.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fctor_copy_dtor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fctor_copy_dtor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fctor_copy_dtor.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n #include <new>\n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int test01(void)\n {\n@@ -196,6 +196,7 @@ void test03()\n \n int main()\n { \n+  __set_testsuite_memlimit();\n   test01();\n   test02();\n   test03();"}, {"sha": "d9525ba61b102192c5f8e895abc51c8d5bd3233f", "filename": "libstdc++-v3/testsuite/21_strings/element_access.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Felement_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Felement_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Felement_access.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "c6a4c1cbac8d3ad8ab95eaf4b33733bbb4375125", "filename": "libstdc++-v3/testsuite/21_strings/find.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Ffind.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Ffind.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Ffind.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "3c8dff0d5dc2e56533dee80597fda05f252ad493", "filename": "libstdc++-v3/testsuite/21_strings/insert.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finsert.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finsert.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finsert.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int test01(void)\n {\n@@ -189,6 +189,7 @@ int test01(void)\n \n int main()\n { \n+  __set_testsuite_memlimit();\n   test01();\n   return 0;\n }"}, {"sha": "b83e5aa4e60340ffcc07a108ae2047ea77425905", "filename": "libstdc++-v3/testsuite/21_strings/inserters_extractors.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finserters_extractors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finserters_extractors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finserters_extractors.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -30,7 +30,7 @@\n #include <fstream>\n #include <iostream>\n #include <iomanip>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "d6dd05d68319f32416c2e27905aa0aa3fbd74810", "filename": "libstdc++-v3/testsuite/21_strings/invariants.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finvariants.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finvariants.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Finvariants.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // Do a quick sanity check on known problems with element access and\n // ref-counted strings. These should all pass, regardless of the"}, {"sha": "451611e94f0c8c138404cacfab45cb7b6dfc141b", "filename": "libstdc++-v3/testsuite/21_strings/nonmember.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fnonmember.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fnonmember.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fnonmember.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -111,7 +111,7 @@ template<class charT, class traits, class Allocator>\n */\n \n #include <string>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int test01(void)\n {"}, {"sha": "b6c68ebcb9e682766970894935fc30a617c923a9", "filename": "libstdc++-v3/testsuite/21_strings/operations.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Foperations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Foperations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Foperations.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <cstdio>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int test01(void)\n {"}, {"sha": "b4aac625ea18370661aeb8490446e0a1dc2e6d86", "filename": "libstdc++-v3/testsuite/21_strings/replace.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Freplace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Freplace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Freplace.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "af720f3820d60a34d6571ed7230be4d38021bdc1", "filename": "libstdc++-v3/testsuite/21_strings/rfind.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Frfind.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Frfind.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Frfind.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -20,7 +20,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // 21.3.6.2 basic_string rfind\n bool test01(void)"}, {"sha": "0ec6ee3545313971d6f44d89e410024aae2d21be", "filename": "libstdc++-v3/testsuite/21_strings/substr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fsubstr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fsubstr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fsubstr.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "01542666ebe5886347c100b611740f470a72b20c", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_char_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_char_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_char_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_char_char.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 22.2.1.5 - Template class codecvt [lib.locale.codecvt]\n \n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // Required instantiation, degenerate conversion.\n // codecvt<char, char, mbstate_t>"}, {"sha": "8118c176a0bca22c9a5e3ba7e6f302a2d54c0b96", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_unicode_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_unicode_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_unicode_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_unicode_char.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 22.2.1.5 - Template class codecvt [lib.locale.codecvt]\n \n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n using namespace std;\n "}, {"sha": "4547e01cee5afb3311ecb9a295e4977e637aaa39", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_unicode_wchar_t.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_unicode_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_unicode_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_unicode_wchar_t.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 22.2.1.5 - Template class codecvt [lib.locale.codecvt]\n \n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n using namespace std;\n "}, {"sha": "92235e8486f4fec244dd496e63c7c2fbc488c9d5", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_wchar_t_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_wchar_t_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_wchar_t_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_wchar_t_char.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <cwchar> // for mbstate_t\n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n // Need to explicitly set the state(mbstate_t) to zero."}, {"sha": "eda1cdb5013ca57c868bb630382a1b7e03a6eb54", "filename": "libstdc++-v3/testsuite/22_locale/ctor_copy_dtor.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctor_copy_dtor.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n #include <cwchar> // for mbstate_t\n #include <locale>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n void test00()"}, {"sha": "d13f97e13d9dd3922ec567e52ea83aca1013335a", "filename": "libstdc++-v3/testsuite/22_locale/ctype_char_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_char_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_char_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_char_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <locale>\n // NB: Don't include any other headers in this file.\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n class gnu_ctype: public std::ctype<char> { };\n "}, {"sha": "107a4d5e3c31c07376b5c7d40604671374a3d48a", "filename": "libstdc++-v3/testsuite/22_locale/ctype_wchar_t_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_wchar_t_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_wchar_t_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_wchar_t_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <locale>\n // NB: Don't include any other headers in this file.\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n #if _GLIBCPP_USE_WCHAR_T\n class gnu_ctype: public std::ctype<wchar_t> {};"}, {"sha": "7f4d9953da4bca7485d0a6423f8826e844f79f89", "filename": "libstdc++-v3/testsuite/22_locale/facet.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ffacet.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ffacet.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ffacet.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -25,7 +25,7 @@\n #include <stdexcept>\n #include <string>\n #include <iterator>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // 1 a class if a facet if it is publicly derived from another facet\n typedef std::istreambuf_iterator<char>\t\tinput_iterator;"}, {"sha": "49886aa18bf0e89edc8c19664d22e66d993af383", "filename": "libstdc++-v3/testsuite/22_locale/global_templates.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <cwchar> // for mbstate_t\n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n typedef std::codecvt<char, char, std::mbstate_t> ccodecvt;\n "}, {"sha": "3b579782d48557337a248f93793bc823681083f5", "filename": "libstdc++-v3/testsuite/22_locale/members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmembers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmembers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmembers.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <locale>\n #include <string>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // XXX This test is not working for non-glibc locale models.\n // { dg-do run { xfail *-*-* } }"}, {"sha": "5fbbcc251bef29aec140a6c743e3ee8a07266b94", "filename": "libstdc++-v3/testsuite/22_locale/numpunct_byname.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct_byname.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct_byname.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct_byname.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 22.2.3.2 Template class numpunct_byname\n \n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "853f7819e2382286034edff5ecbe65acc73b99de", "filename": "libstdc++-v3/testsuite/22_locale/numpunct_char_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct_char_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct_char_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnumpunct_char_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 22.2.3.1.1 nunpunct members\n \n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // XXX This test is not working for non-glibc locale models.\n // { dg-do run { xfail *-*-* } }"}, {"sha": "2b9cd337da721b834f10d244c86bd11844c49ad0", "filename": "libstdc++-v3/testsuite/22_locale/operators.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Foperators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Foperators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Foperators.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <cwchar> // for mbstate_t\n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n typedef std::codecvt<char, char, std::mbstate_t> ccodecvt;\n class gnu_codecvt: public ccodecvt { }; "}, {"sha": "16e856a2ee4c696d91e7a300a180ed4b2aeb3ee8", "filename": "libstdc++-v3/testsuite/22_locale/static_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fstatic_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fstatic_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fstatic_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <cwchar> // for mbstate_t\n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n typedef std::codecvt<char, char, std::mbstate_t> ccodecvt;\n class gnu_codecvt: public ccodecvt { }; "}, {"sha": "8f9008ff058bac5b7582093e2ecb9339ac8b4df6", "filename": "libstdc++-v3/testsuite/23_containers/bitset_ctor.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_ctor.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <bitset>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "cef2cf99e52e3ac49a1e21ddbb34d020a1a6b682", "filename": "libstdc++-v3/testsuite/23_containers/bitset_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 23.3.5.2 bitset members\n \n #include <bitset>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "35531bf5b4cc48bc967d2386e14f5d72c49b918c", "filename": "libstdc++-v3/testsuite/23_containers/bitset_shift.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_shift.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_shift.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset_shift.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n #include <set>\n #include <bitset>\n \n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n static char original_bits[1024];\n static char left_shifted[1024];"}, {"sha": "a56f2ef40c4d88b966cd82ed51097cdde83d5af1", "filename": "libstdc++-v3/testsuite/23_containers/vector_capacity.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_capacity.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_capacity.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_capacity.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n // 23.2.4.2 vector capacity\n \n #include <vector>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n template<typename T>\n   struct A { };"}, {"sha": "6ac74e778a676b460c33ea65b1685202ffb5505f", "filename": "libstdc++-v3/testsuite/23_containers/vector_ctor.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_ctor.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 23.2.4.1 vector constructors, copy, and assignment\n \n #include <vector>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n template<typename T>\n   struct A { };"}, {"sha": "5f5b5d231de9bcd5deca357fd180ec40a3fb930d", "filename": "libstdc++-v3/testsuite/23_containers/vector_element_access.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_element_access.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n \n #include <vector>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n template<typename T>\n struct A { };"}, {"sha": "1f0b338c3b756e5e22ae01d07307223f485c4305", "filename": "libstdc++-v3/testsuite/23_containers/vector_modifiers.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_modifiers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_modifiers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector_modifiers.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 23.2.4.3 vector modifiers\n \n #include <vector>\n-#include \"debug_assert.h\"\n+#include \"testsuite_hooks.h\"\n \n bool test = true;\n "}, {"sha": "72758eed3084fb90f2eb9d3bad0ace226106fe1f", "filename": "libstdc++-v3/testsuite/24_iterators/istreambuf_iterator.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <sstream>\n #include <iterator>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "a5a6974f80ad3805de54d613abfc0464bf8800d0", "filename": "libstdc++-v3/testsuite/24_iterators/iterator.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fiterator.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n \n #include <string>\n #include <vector>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int \n string_stuff()"}, {"sha": "23ddee57c9f395258bb32acd3e4e62c857a23950", "filename": "libstdc++-v3/testsuite/24_iterators/ostreambuf_iterator.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fostreambuf_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fostreambuf_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fostreambuf_iterator.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <sstream>\n #include <iterator>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "fda74d2a706273f46012c3776f4f6f9f7db34d5d", "filename": "libstdc++-v3/testsuite/25_algorithms/binary_search.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // 25.3.3 [lib.alg.binary.search] Binary search algorithms.\n \n #include <algorithm>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test = true;\n "}, {"sha": "d8fbb9d2b00d1a7abf5cc92ac7df500e9d3548a3", "filename": "libstdc++-v3/testsuite/25_algorithms/copy.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // 25.2.12 [lib.alg.partitions] Partitions.\n \n #include <algorithm>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test = true;\n "}, {"sha": "e78fae8477d7bf8e5d7accb7c4a979291b25b1b3", "filename": "libstdc++-v3/testsuite/25_algorithms/heap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheap.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -20,7 +20,7 @@\n \n #include <algorithm>\n //#include <cmath>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test = true;\n "}, {"sha": "f6bf336597c95d5d0a3830514690f047cb0c4a1e", "filename": "libstdc++-v3/testsuite/25_algorithms/lower_bound.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -17,7 +17,7 @@\n // USA.\n \n #include <algorithm>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // http://gcc.gnu.org/ml/libstdc++/2000-06/msg00316.html\n struct foo { };"}, {"sha": "198247b6f9e40960635248ea18cd422cb0999e83", "filename": "libstdc++-v3/testsuite/25_algorithms/min_max.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_max.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n #include <algorithm>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "3424dcf80fde76c22816fbe02cecb56186391b4c", "filename": "libstdc++-v3/testsuite/25_algorithms/partition.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -20,7 +20,7 @@\n \n #include <algorithm>\n #include <functional>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test = true;\n "}, {"sha": "5102a649fdc16ba6d23fe9c3ff7b1309fda8fd40", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // 25.?? algorithms, rotate()\n \n #include <algorithm>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n #include <list>\n \n bool test = true;"}, {"sha": "2fcc6384ccf58afcfb011ca860bca662cbe1d4e8", "filename": "libstdc++-v3/testsuite/25_algorithms/sort.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // 25.3.1 algorithms, sort()\n \n #include <algorithm>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test = true;\n "}, {"sha": "f01e4868b44d35b20d1795d5e1d910ee4c494191", "filename": "libstdc++-v3/testsuite/26_numerics/c_math.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fc_math.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fc_math.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fc_math.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -20,7 +20,7 @@\n // USA.\n \n #include <cmath>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // test compilation.\n int"}, {"sha": "8161ee1aeb5a6288bccd9a35c01c98082caca48f", "filename": "libstdc++-v3/testsuite/26_numerics/complex_inserters_extractors.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_inserters_extractors.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -24,7 +24,7 @@\n #include <string>\n #include <sstream>\n #include <complex>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n #include <cmath>\n \n template<typename R>"}, {"sha": "99f477a5fa15df84a175704ae959e9ab18e97cc6", "filename": "libstdc++-v3/testsuite/26_numerics/complex_value.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex_value.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -20,7 +20,7 @@\n // USA.\n \n #include <complex>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "87410d01e6dccd00293d69c1c01080147daf688f", "filename": "libstdc++-v3/testsuite/27_io/filebuf.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -26,7 +26,7 @@\n // @diff@ %-*.tst %*.txt\n \n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n const char carray_01[] = \"santa cruz or sandiego?\";\n const char carray_02[] = \"memphis, new orleans, and savanah\";"}, {"sha": "4d61ec10a23d182c1998bb657641511e59eb3b7a", "filename": "libstdc++-v3/testsuite/27_io/filebuf_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -27,7 +27,7 @@\n #include <cassert>\n #include <unistd.h>\n #include <fcntl.h>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // verify that std::filebuf doesn't close files that it didn't open\n // when using the following std::filebuf ctor:"}, {"sha": "0d782641d9506a332210ebf4471b87b4fbee0b22", "filename": "libstdc++-v3/testsuite/27_io/filebuf_virtuals.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_virtuals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_virtuals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf_virtuals.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 27.8.1.4 Overridden virtual functions\n \n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "2f52fd3c65e0cda3d97879eb09d0f71feb444313", "filename": "libstdc++-v3/testsuite/27_io/fpos.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <cwchar> // for mbstate_t\n #include <ios>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "136252b8efb3c948f67f12f9a25be98fa13e4631", "filename": "libstdc++-v3/testsuite/27_io/fstream_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffstream_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 27.8.1.13 member functions (fstream_members)\n \n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void \n redirect_buffer(std::ios& stream, std::streambuf* new_buf) "}, {"sha": "ad21fe5c8d1159e8ba023ce9f8340fd75e4996d0", "filename": "libstdc++-v3/testsuite/27_io/ifstream_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fifstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fifstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fifstream_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <istream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n const char name_01[] = \"ifstream_members-1.tst\";\n const char name_02[] = \"ifstream_members-1.txt\";"}, {"sha": "aabb778a527677a61c819e3eb559981326a18cc8", "filename": "libstdc++-v3/testsuite/27_io/ios_base_callbacks.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_callbacks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_callbacks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_callbacks.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <string>\n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n const std::string str01(\"the nubians of plutonia\");\n std::string str02;"}, {"sha": "1e7df6a295f51270714141fc917b819ef436cdbf", "filename": "libstdc++-v3/testsuite/27_io/ios_base_members_static.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_members_static.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_members_static.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_members_static.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -28,7 +28,7 @@\n #include <sstream>\n #include <iostream>\n \n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // N.B. Once we have called sync_with_stdio(false), we can never go back.\n "}, {"sha": "d6b6d983b5fa35cb0ad64fa68b891f524ffd3f9a", "filename": "libstdc++-v3/testsuite/27_io/ios_base_storage.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_storage.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_storage.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base_storage.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n #include <sstream>\n #include <iostream>\n \n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // http://gcc.gnu.org/ml/gcc-bugs/2000-12/msg00413.html\n void test01() "}, {"sha": "5736aebaa35e4ff26ce31ca7f9d925db457a8135", "filename": "libstdc++-v3/testsuite/27_io/ios_ctor.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_ctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_ctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_ctor.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <ios>\n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "ef7cdf495862c1c0d5efa12e694d24a34cb92d35", "filename": "libstdc++-v3/testsuite/27_io/ios_init.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <fstream>\n #include <iostream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n class gnu_filebuf: public std::filebuf\n {"}, {"sha": "2a3df6288732ec8143ec73431a23515c0866d076", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_basefield.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n #include <sstream>\n #include <locale>\n #include <iomanip>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \t\t\t\n struct MyNP : std::numpunct<char>\n {"}, {"sha": "5fe1194c481811d32e1b7c422ea44e16ea7a87c7", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_fmtflags.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n #include <sstream>\n #include <locale>\n #include <iomanip>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n struct MyNP : std::numpunct<char>\n {"}, {"sha": "df00c6a4ce5250b07c3f73aead8f7d6ca27c55ac", "filename": "libstdc++-v3/testsuite/27_io/ios_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <ios>\n // NB: Don't include any other headers in this file.\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "e6bb415d2ef5a3bc92e2fb1d7d2cebbee1f5b14f", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_arith.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_arith.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -25,7 +25,7 @@\n #include <ostream>\n #include <sstream>\n #include <locale>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n std::string str_01;\n std::string str_02(\"true false 0 1 110001\");"}, {"sha": "87ab77d88a0345033efcf6591058274c8d6db822", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_char.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <istream>\n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01() {\n "}, {"sha": "fbf8f4293c69c2c6e32284874e5181ceb6e2d899", "filename": "libstdc++-v3/testsuite/27_io/istream_extractor_other.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_extractor_other.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -25,7 +25,7 @@\n #include <istream>\n #include <sstream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n // stringbufs."}, {"sha": "75eb79f135a92e3f7ceed41e377d24b61ccb5a27", "filename": "libstdc++-v3/testsuite/27_io/istream_manip.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_manip.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n #include <istream>\n #include <sstream>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "dac5f3cf9eb62418d79af8cdde94231fc28bbb46", "filename": "libstdc++-v3/testsuite/27_io/istream_seeks.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_seeks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_seeks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_seeks.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -26,7 +26,7 @@\n #include <istream>\n #include <sstream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01()\n {"}, {"sha": "88dcb91df248025f1938c7ae2ab6bc00d7bc2801", "filename": "libstdc++-v3/testsuite/27_io/istream_sentry.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_sentry.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_sentry.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_sentry.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n \n #include <istream>\n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "19c2c9242e6d8374e033aeae84b3d15c87690fbe", "filename": "libstdc++-v3/testsuite/27_io/istream_unformatted.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistream_unformatted.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -26,7 +26,7 @@\n #include <istream>\n #include <sstream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n int\n test01()"}, {"sha": "cfc473621a28339537cd502fc562400804b9079d", "filename": "libstdc++-v3/testsuite/27_io/istringstream_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistringstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistringstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fistringstream_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 27.7.2.2 member functions (istringstream_members)\n \n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "c420449ae040332836632b97148e010b57e794df", "filename": "libstdc++-v3/testsuite/27_io/narrow_stream_objects.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fnarrow_stream_objects.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fnarrow_stream_objects.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fnarrow_stream_objects.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -66,7 +66,7 @@\n #include <cstdlib>\n #include <cstring>\n #include <ctime>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // Include iostream last, just to make is as difficult as possible to\n // properly initialize the standard iostream objects."}, {"sha": "79c86e13066506affa1dd79cffbe1295cab6fc09", "filename": "libstdc++-v3/testsuite/27_io/ofstream_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fofstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fofstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fofstream_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -22,7 +22,7 @@\n \n #include <ostream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n const char name_01[] = \"ofstream_members-1.tst\";\n const char name_02[] = \"ofstream_members-1.txt\";"}, {"sha": "af45aaafaf595b31751c6a5f6ea0bb55ac949351", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_arith.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_arith.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -25,7 +25,7 @@\n #include <locale>\n #include <sstream>\n #include <limits>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n using namespace std;\n "}, {"sha": "c8a4a73d4f7e3cb13b74079e9f30ef4ac9351f66", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_char.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_char.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -24,7 +24,7 @@\n #include <ostream>\n #include <sstream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // ofstream\n bool test01()"}, {"sha": "806c500bff1a8fbeb638789883304bfd5f3d6dd4", "filename": "libstdc++-v3/testsuite/27_io/ostream_inserter_other.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_inserter_other.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -26,7 +26,7 @@\n #include <ostream>\n #include <sstream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n const int size = 1000;\n const char name_01[] = \"ostream_inserter_other-1.tst\";"}, {"sha": "ee75cad964bb87b3b97e1d2cd804fa380525b4dd", "filename": "libstdc++-v3/testsuite/27_io/ostream_manip.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_manip.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n #include <ostream>\n #include <sstream>\n #include <stdexcept>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n bool test01(void)\n {"}, {"sha": "7022a2f594f728bb83c08a97a63c3b73bb26063d", "filename": "libstdc++-v3/testsuite/27_io/ostream_seeks.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_seeks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_seeks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_seeks.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -23,7 +23,7 @@\n #include <ostream>\n #include <sstream>\n #include <fstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n bool test01()"}, {"sha": "a55ac3ca45b691e5303688de03a298fe8f28406e", "filename": "libstdc++-v3/testsuite/27_io/ostream_unformatted.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_unformatted.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_unformatted.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_unformatted.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -20,7 +20,7 @@\n \n #include <sstream>\n #include <ostream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n \n void test01()"}, {"sha": "4e7f861b516f8990886dcbc10da65eef6144604a", "filename": "libstdc++-v3/testsuite/27_io/ostringstream_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostringstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostringstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostringstream_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 27.7.3.2 member functions (ostringstream_members)\n \n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "62c965ff253af4e61b8bcd02e66c05a1393dda85", "filename": "libstdc++-v3/testsuite/27_io/streambuf.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -33,7 +33,7 @@\n #include <streambuf>\n #include <string>\n #include <ostream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n class testbuf : public std::streambuf\n {"}, {"sha": "540f0af27352cc3f05cba9266eac812c150184b9", "filename": "libstdc++-v3/testsuite/27_io/stringbuf.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringbuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringbuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringbuf.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -19,7 +19,7 @@\n // USA.\n \n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n std::string str_01(\"mykonos. . . or what?\");\n std::string str_02(\"paris, or sainte-maxime?\");"}, {"sha": "7e20164712a001cc36bb0b5be4896fb3147401a4", "filename": "libstdc++-v3/testsuite/27_io/stringbuf_virtuals.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringbuf_virtuals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringbuf_virtuals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringbuf_virtuals.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 27.7.1.3 Overridden virtual functions\n \n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "e66e26749b6dcc01772aea7025b54568a2294aa9", "filename": "libstdc++-v3/testsuite/27_io/stringstream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringstream.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -31,7 +31,7 @@\n #include <vector>\n #include <string>\n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // 01: sanity checks for strings, stringbufs\n std::string "}, {"sha": "4de7b8c52411f101c138dfe26c654b191914ac8e", "filename": "libstdc++-v3/testsuite/27_io/stringstream_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringstream_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringstream_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstringstream_members.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -21,7 +21,7 @@\n // 27.7.6 member functions (stringstream_members)\n \n #include <sstream>\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n void test01()\n {"}, {"sha": "022f6eff3270740e9bcc5326a08d6a0f8fbdd4af", "filename": "libstdc++-v3/testsuite/27_io/wide_stream_objects.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fwide_stream_objects.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fwide_stream_objects.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fwide_stream_objects.cc?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -71,7 +71,7 @@\n   #include <cwchar>\n   #include <cwctype>\n #endif\n-#include <debug_assert.h>\n+#include <testsuite_hooks.h>\n \n // Include iostream last, just to make is as difficult as possible to\n // properly initialize the standard iostream objects."}, {"sha": "dbd6e98405692a8e4434245dd305afe41475156e", "filename": "libstdc++-v3/testsuite/debug_assert.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47907859fdd0b39ecb2a78c068872470f823329f/libstdc%2B%2B-v3%2Ftestsuite%2Fdebug_assert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47907859fdd0b39ecb2a78c068872470f823329f/libstdc%2B%2B-v3%2Ftestsuite%2Fdebug_assert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdebug_assert.h?ref=47907859fdd0b39ecb2a78c068872470f823329f", "patch": "@@ -1,51 +0,0 @@\n-// 20000810  Brent Verner <brent@rcfile.org>\n-//\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-//\n-//\n-// Purpose:\n-//   This file is included in the various testsuite programs to provide\n-//   #define(able) assert() behavior for debugging/testing. It may be\n-//   a suitable location for other furry woodland creatures as well.\n-//\n-// Notes:\n-//   If you find yourself compiling small test progs as much as I\n-//   do, you can move this file to a location your compiler(s)\n-//   will find, and possibly add more cheap debugging stuff...\n-//\n-\n-#ifndef _CPP_DEBUG_ASSERT_H\n-#define _CPP_DEBUG_ASSERT_H\n-\n-#ifdef DEBUG_ASSERT\n-# include <cassert>\n-# define VERIFY(fn) assert(fn)\n-\n-#else\n-# define VERIFY(fn) test &= (fn)\n-// should we define this here to make sure no 'unexpected' failures\n-// happen, or do we require that it be defined in any scope where\n-// the VERIFY macro is used???\n-//\n-// static bool test = true;\n-#endif\n-\n-\n-#endif // _CPP_DEBUG_ASSERT_H\n-"}, {"sha": "dbd81ac209844cca0702453e3042792891df7918", "filename": "libstdc++-v3/testsuite/lib/libstdc++-v3-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -53,9 +53,9 @@ proc libstdc++-v3-init { args } {\n     # Do a bunch of handstands and backflips for cross compiling and\n     # finding simulators...\n     if [is_remote host] {\n-        set header [remote_download host ${srcdir}/debug_assert.h]\n+        set header [remote_download host ${blddir}/testsuite/testsuite_hooks.h]\n         if { $header == \"\" } {\n-            verbose -log \"Unable to download ${srcdir}/debug_assert.h to host.\"\n+            verbose -log \"Unable to download ${blddir}/testsuite/testsuite_hooks.h to host.\"\n             return \"untested\"\n         }\n       set cxx [transform \"g++\"]"}, {"sha": "bee264fab4787b4ffe405fb9fd7546872cf52691", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h.in", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h.in?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -0,0 +1,133 @@\n+// Utility subroutines for the C++ library testsuite.\n+//\n+// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+//\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// This file provides the following:\n+//\n+// 1)  VERIFY(), via DEBUG_ASSERT, from Brent Verner <brent@rcfile.org>.\n+//   This file is included in the various testsuite programs to provide\n+//   #define(able) assert() behavior for debugging/testing. It may be\n+//   a suitable location for other furry woodland creatures as well.\n+//\n+// 2)  __set_testsuite_memlimit()\n+//   __set_testsuite_memlimit() uses setrlimit() to restrict dynamic memory\n+//   allocation.  We provide a default memory limit if none is passed by the\n+//   calling application.  The argument to __set_testsuite_memlimit() is the\n+//   limit in megabytes (a floating-point number).  If NO_MEM_LIMITS is\n+//   #defined before including this header, then no limiting is attempted.\n+\n+#ifndef _GLIBCPP_TESTSUITE_HOOKS_H\n+#define _GLIBCPP_TESTSUITE_HOOKS_H\n+\n+\n+/*******\n+ * VERIFY(), via DEBUG_ASSERT, from Brent Verner <brent@rcfile.org>.\n+*/\n+#ifdef DEBUG_ASSERT\n+# include <cassert>\n+# define VERIFY(fn) assert(fn)\n+\n+#else\n+\n+# define VERIFY(fn) test &= (fn)\n+// should we define this here to make sure no 'unexpected' failures\n+// happen, or do we require that it be defined in any scope where\n+// the VERIFY macro is used???\n+//\n+// static bool test = true;\n+#endif\n+\n+\n+/*******\n+ * __set_testsuite_memlimit()\n+*/\n+// The RLIMIT_* macros used will be as many of the following as we can find,\n+// and they will be used in this order, for whatever difference it makes:\n+//   RLIMIT_DATA\n+//   RLIMIT_RSS\n+//   RLIMIT_VMEM\n+//   RLIMIT_AS\n+\n+#define NO_MEM_LIMITS\n+\n+// The following lines will be changed by configure...\n+#undef HAVE_SYS_RESOURCE_H\n+#undef HAVE_UNISTD_H\n+#undef HAVE_MEMLIMIT_DATA\n+#undef HAVE_MEMLIMIT_RSS\n+#undef HAVE_MEMLIMIT_VMEM\n+#undef HAVE_MEMLIMIT_AS\n+\n+// ...and the results used here.\n+#if defined(HAVE_SYS_RESOURCE_H) && defined(HAVE_UNISTD_H) && !defined(NO_MEM_LIMITS)\n+\n+#include <sys/resource.h>\n+#include <unistd.h>\n+\n+#ifndef MEMLIMIT_MB\n+#define MEMLIMIT_MB 16.0\n+#endif\n+\n+void\n+__set_testsuite_memlimit(float megs = MEMLIMIT_MB)\n+{\n+    struct rlimit r;\n+    r.rlim_cur = (rlim_t)(megs * 1048576);\n+\n+    // heap size, seems to be common\n+#if HAVE_MEMLIMIT_DATA\n+    setrlimit (RLIMIT_DATA, &r);\n+#endif\n+\n+    // resident set size -- Linux?\n+#if HAVE_MEMLIMIT_RSS\n+    setrlimit (RLIMIT_RSS, &r);\n+#endif\n+\n+    // mapped memory (brk+mmap) -- Solaris?\n+#if HAVE_MEMLIMIT_VMEM\n+    setrlimit (RLIMIT_VMEM, &r);\n+#endif\n+\n+    // virtual memory, seems to be common\n+#if HAVE_MEMLIMIT_AS\n+    setrlimit (RLIMIT_AS, &r);\n+#endif\n+}\n+\n+#else\n+// The headers needed for resource limiting are not available.  This is\n+// safe, but means that no memory limits will be applied... ouch.\n+#define __set_testsuite_memlimit(__junk)\n+#endif\n+\n+\n+\n+\n+#endif // _GLIBCPP_TESTSUITE_HOOKS_H\n+"}, {"sha": "8a70f2eb697a8084f58f12298a7051f186546d9f", "filename": "libstdc++-v3/testsuite_flags.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe413112f857555f2036540c438e605cb6fef28c/libstdc%2B%2B-v3%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite_flags.in?ref=fe413112f857555f2036540c438e605cb6fef28c", "patch": "@@ -28,13 +28,13 @@ query=$1\n \n case ${query} in\n     --install-includes)\n-      INCLUDES=\"-I${SRC_DIR}/testsuite\"\n+      INCLUDES=\"-I${SRC_DIR}/testsuite -I${BUILD_DIR}/testsuite\"\n       echo ${INCLUDES}\n       ;;\n     --build-includes)\n       INCLUDES=\"-nostdinc++ @GLIBCPP_INCLUDES@\n \t        -I${SRC_DIR}/libsupc++ -I${SRC_DIR}/libio \n-\t\t-I${SRC_DIR}/testsuite\"\n+\t\t-I${SRC_DIR}/testsuite -I${BUILD_DIR}/testsuite\"\n       echo ${INCLUDES}\n       ;;\n     --install-cxx)"}]}