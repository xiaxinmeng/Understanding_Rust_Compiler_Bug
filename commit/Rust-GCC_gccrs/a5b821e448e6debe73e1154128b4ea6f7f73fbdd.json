{"sha": "a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViODIxZTQ0OGU2ZGViZTczZTExNTQxMjhiNGVhNmY3ZjczZmJkZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-20T11:26:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-20T11:26:42Z"}, "message": "re PR target/89752 (ICE in emit_move_insn, at expr.c:3723)\n\n\tPR target/89752\n\t* lra-constraints.c (process_alt_operands) <reg>: For BLKmode, don't\n\tupdate this_alternative nor this_alternative_set.\n\n\t* g++.target/aarch64/aarch64.exp: New file.\n\t* g++.target/aarch64/pr89752.C: New test.\n\nFrom-SVN: r269819", "tree": {"sha": "6e4940308ba8d348193ea382c21c257c79a66ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e4940308ba8d348193ea382c21c257c79a66ab8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f129d6f1619d81cac4dd0ac58071442e99466ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f129d6f1619d81cac4dd0ac58071442e99466ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f129d6f1619d81cac4dd0ac58071442e99466ea"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "9b32d9352cc185e6d229c8aee080c508f4018167", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "patch": "@@ -1,3 +1,9 @@\n+2019-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89752\n+\t* lra-constraints.c (process_alt_operands) <reg>: For BLKmode, don't\n+\tupdate this_alternative nor this_alternative_set.\n+\n 2019-03-19  Jim Wilson  <jimw@sifive.com>\n \n \tPR target/89411"}, {"sha": "cba87eb718e6e75321e11fc4870d5f97cc24167e", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "patch": "@@ -2350,6 +2350,8 @@ process_alt_operands (int only_alternative)\n \t\t  break;\n \n \t\treg:\n+\t\t  if (mode == BLKmode)\n+\t\t    break;\n \t\t  this_alternative = reg_class_subunion[this_alternative][cl];\n \t\t  IOR_HARD_REG_SET (this_alternative_set,\n \t\t\t\t    reg_class_contents[cl]);\n@@ -2360,8 +2362,6 @@ process_alt_operands (int only_alternative)\n \t\t      IOR_HARD_REG_SET (this_costly_alternative_set,\n \t\t\t\t\treg_class_contents[cl]);\n \t\t    }\n-\t\t  if (mode == BLKmode)\n-\t\t    break;\n \t\t  winreg = true;\n \t\t  if (REG_P (op))\n \t\t    {"}, {"sha": "b6a42d945a3330d77b8be83712dd3c4abcf51a20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "patch": "@@ -1,3 +1,9 @@\n+2019-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89752\n+\t* g++.target/aarch64/aarch64.exp: New file.\n+\t* g++.target/aarch64/pr89752.C: New test.\n+\n 2019-03-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/89688"}, {"sha": "22d804287df62639a816682387d998d732b1b43d", "filename": "gcc/testsuite/g++.target/aarch64/aarch64.exp", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Faarch64.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Faarch64.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Faarch64.exp?ref=a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "patch": "@@ -0,0 +1,44 @@\n+#  Specific regression driver for AArch64.\n+#  Copyright (C) 2009-2019 Free Software Foundation, Inc.\n+#\n+#  This file is part of GCC.\n+#\n+#  GCC is free software; you can redistribute it and/or modify it\n+#  under the terms of the GNU General Public License as published by\n+#  the Free Software Foundation; either version 3, or (at your option)\n+#  any later version.\n+#\n+#  GCC is distributed in the hope that it will be useful, but\n+#  WITHOUT ANY WARRANTY; without even the implied warranty of\n+#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+#  General Public License for more details.\n+#\n+#  You should have received a copy of the GNU General Public License\n+#  along with GCC; see the file COPYING3.  If not see\n+#  <http://www.gnu.org/licenses/>.  */\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't an AArch64 target.\n+if {![istarget aarch64*-*-*] } then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib g++-dg.exp\n+\n+global DEFAULT_CXXFLAGS\n+if ![info exists DEFAULT_CXXFLAGS] then {\n+    set DEFAULT_CXXFLAGS \" -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \\\n+        \"\" $DEFAULT_CXXFLAGS\n+\n+# All done.\n+dg-finish\n+"}, {"sha": "6beea7461950b898a24233911121aebbd2a37b42", "filename": "gcc/testsuite/g++.target/aarch64/pr89752.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fpr89752.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b821e448e6debe73e1154128b4ea6f7f73fbdd/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fpr89752.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fpr89752.C?ref=a5b821e448e6debe73e1154128b4ea6f7f73fbdd", "patch": "@@ -0,0 +1,11 @@\n+// PR target/89752\n+// { dg-do compile }\n+\n+struct A { A (); ~A (); short c; };\n+\n+void\n+foo ()\n+{\n+  A a0, a1;\n+  __asm volatile (\"\" : \"=rm\" (a0), \"=rm\" (a1) : \"0\" (a0), \"1\" (a1));\t// { dg-error \"inconsistent operand constraints in an 'asm'\" }\n+}"}]}