{"sha": "2907036db71b583f6a7c627e1e1753e85c779312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkwNzAzNmRiNzFiNTgzZjZhN2M2MjdlMWUxNzUzZTg1Yzc3OTMxMg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-04-20T10:45:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T10:45:28Z"}, "message": "socket.c, [...] (__gnat_inet_pton): Needs to be enabled for HP-UX as well...\n\n2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* socket.c, g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.ads,\n\ts-oscons-tmplt.c, gsocket.h, g-socthi-mingw.ads, g-socthi.ads,\n\tg-sothco.ads (__gnat_inet_pton): Needs to be enabled for HP-UX as well,\n\tsince HP-UX supports neither inet_aton nor inet_pton (altough the\n\tlatter is part of the Single UNIX Specification!).\n\tSo reorganize code, and share C implementation based on inet_addr(3)\n\twith VMS (instead of having a VMS specific Ada implementation in\n\tg-socthi-vms.adb).\n\nFrom-SVN: r146396", "tree": {"sha": "abccfec98396bda557b30cfec0ba8b9cbd863c15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abccfec98396bda557b30cfec0ba8b9cbd863c15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2907036db71b583f6a7c627e1e1753e85c779312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2907036db71b583f6a7c627e1e1753e85c779312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2907036db71b583f6a7c627e1e1753e85c779312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2907036db71b583f6a7c627e1e1753e85c779312/comments", "author": null, "committer": null, "parents": [{"sha": "d50633515b970d72c074e5face5eecf2dd3fa74a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d50633515b970d72c074e5face5eecf2dd3fa74a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d50633515b970d72c074e5face5eecf2dd3fa74a"}], "stats": {"total": 139, "additions": 60, "deletions": 79}, "files": [{"sha": "fdadb95a21dcdc7e927b5b19268076e6130eb7da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -1,3 +1,14 @@\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* socket.c, g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.ads,\n+\ts-oscons-tmplt.c, gsocket.h, g-socthi-mingw.ads, g-socthi.ads,\n+\tg-sothco.ads (__gnat_inet_pton): Needs to be enabled for HP-UX as well,\n+\tsince HP-UX supports neither inet_aton nor inet_pton (altough the\n+\tlatter is part of the Single UNIX Specification!).\n+\tSo reorganize code, and share C implementation based on inet_addr(3)\n+\twith VMS (instead of having a VMS specific Ada implementation in\n+\tg-socthi-vms.adb).\n+\n 2009-04-20  Gary Dismukes  <dismukes@adacore.com>\n \n \t* osint-c.ads, osint-c.adb (Get_Object_Output_File_Name): New function"}, {"sha": "e93b3f7be49d3eda3606a90e07b573cb43a1c3e4", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -115,11 +115,6 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function Inet_Pton\n-     (Af  : C.int;\n-      Cp  : C.Strings.chars_ptr;\n-      Inp : System.Address) return C.int;\n-\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n@@ -234,7 +229,6 @@ private\n    pragma Import (Stdcall, C_Getpeername, \"getpeername\");\n    pragma Import (Stdcall, C_Getsockname, \"getsockname\");\n    pragma Import (Stdcall, C_Getsockopt, \"getsockopt\");\n-   pragma Import (C, Inet_Pton, \"__gnat_inet_pton\");\n    pragma Import (Stdcall, C_Ioctl, \"ioctlsocket\");\n    pragma Import (Stdcall, C_Listen, \"listen\");\n    pragma Import (Stdcall, C_Recv, \"recv\");"}, {"sha": "ab14d8e49176037293d179d2617105335277e997", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -353,58 +353,6 @@ package body GNAT.Sockets.Thin is\n \n    package body Host_Error_Messages is separate;\n \n-   ---------------\n-   -- Inet_Pton --\n-   ---------------\n-\n-   --  VMS does not support inet_pton(3), so emulate it here in terms of\n-   --  inet_addr(3).\n-\n-   function Inet_Pton\n-     (Af  : C.int;\n-      Cp  : C.Strings.chars_ptr;\n-      Inp : System.Address) return C.int\n-   is\n-      use C.Strings;\n-      use System;\n-\n-      Res : aliased C.int;\n-      package Conv is new System.Address_To_Access_Conversions (C.int);\n-      function C_Inet_Addr (Cp : C.Strings.chars_ptr) return C.int;\n-      pragma Import (C, C_Inet_Addr, \"DECC$INET_ADDR\");\n-   begin\n-      if Af /= SOSC.AF_INET then\n-         Set_Socket_Errno (SOSC.EAFNOSUPPORT);\n-         return -1;\n-      end if;\n-\n-      if Cp = Null_Ptr or else Inp = Null_Address then\n-         return 0;\n-      end if;\n-\n-      --  Special case for the all-ones broadcast address: this address has the\n-      --  same in_addr_t value as Failure, and thus cannot be properly returned\n-      --  by inet_addr(3).\n-\n-      if String'(Value (Cp)) = \"255.255.255.255\" then\n-         Conv.To_Pointer (Inp).all := -1;\n-         return 1;\n-      end if;\n-\n-      Res := C_Inet_Addr (Cp);\n-\n-      --  String is not a valid dotted quad\n-\n-      if Res = -1 then\n-         return 0;\n-      end if;\n-\n-      --  Success\n-\n-      Conv.To_Pointer (Inp).all := Res;\n-      return 1;\n-   end Inet_Pton;\n-\n    ----------------\n    -- Initialize --\n    ----------------"}, {"sha": "6a67e21d8a4bb14218564b279a39d511936c5141", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -118,11 +118,6 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function Inet_Pton\n-     (Af  : C.int;\n-      Cp  : C.Strings.chars_ptr;\n-      Inp : System.Address) return C.int;\n-\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;"}, {"sha": "04e1278f2be9a109c9310d527132ca535d466bdb", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -116,11 +116,6 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function Inet_Pton\n-     (Af  : C.int;\n-      Cp  : C.Strings.chars_ptr;\n-      Inp : System.Address) return C.int;\n-\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n@@ -228,7 +223,6 @@ private\n    pragma Import (C, C_Getpeername, \"getpeername\");\n    pragma Import (C, C_Getsockname, \"getsockname\");\n    pragma Import (C, C_Getsockopt, \"getsockopt\");\n-   pragma Import (C, Inet_Pton, \"__gnat_inet_pton\");\n    pragma Import (C, C_Listen, \"listen\");\n    pragma Import (C, C_Readv, \"readv\");\n    pragma Import (C, C_Select, \"select\");"}, {"sha": "303a942d38596707f5148188f722357654424861", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -117,11 +117,6 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function Inet_Pton\n-     (Af  : C.int;\n-      Cp  : C.Strings.chars_ptr;\n-      Inp : System.Address) return C.int;\n-\n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n@@ -253,7 +248,6 @@ private\n    pragma Import (C, C_Getpeername, \"getpeername\");\n    pragma Import (C, C_Getsockname, \"getsockname\");\n    pragma Import (C, C_Getsockopt, \"getsockopt\");\n-   pragma Import (C, Inet_Pton, \"inet_pton\");\n    pragma Import (C, C_Listen, \"listen\");\n    pragma Import (C, C_Readv, \"readv\");\n    pragma Import (C, C_Select, \"select\");"}, {"sha": "448677174a8639e82e8cba8f5139b32df302659a", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -301,11 +301,17 @@ package GNAT.Sockets.Thin_Common is\n    --  Indices into an Fd_Pair value providing access to each of the connected\n    --  file descriptors.\n \n+   function Inet_Pton\n+     (Af  : C.int;\n+      Cp  : C.Strings.chars_ptr;\n+      Inp : System.Address) return C.int;\n+\n private\n    pragma Import (C, Get_Socket_From_Set, \"__gnat_get_socket_from_set\");\n    pragma Import (C, Is_Socket_In_Set, \"__gnat_is_socket_in_set\");\n    pragma Import (C, Last_Socket_In_Set, \"__gnat_last_socket_in_set\");\n    pragma Import (C, Insert_Socket_In_Set, \"__gnat_insert_socket_in_set\");\n    pragma Import (C, Remove_Socket_From_Set, \"__gnat_remove_socket_from_set\");\n    pragma Import (C, Reset_Socket_Set, \"__gnat_reset_socket_set\");\n+   pragma Import (C, Inet_Pton, SOSC.Inet_Pton_Linkname);\n end GNAT.Sockets.Thin_Common;"}, {"sha": "16aa2ba4c552f7f7b56b82d63dae8f276bcf565a", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -230,4 +230,8 @@\n # define Has_Sockaddr_Len 0\n #endif\n \n+#if !(defined (__vxworks) || defined (_WIN32) || defined (__hpux__) || defined (VMS))\n+# define HAVE_INET_PTON\n+#endif\n+\n #endif /* defined(__nucleus__) */"}, {"sha": "c3511b9b52f10d6f1951e5df9c6b4e8861300fca", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -1197,8 +1197,16 @@ CND(Has_Sockaddr_Len,  \"Sockaddr has sa_len field\")\n TXT(\"   Thread_Blocking_IO  : constant Boolean := True;\")\n /*\n    --  Set False for contexts where socket i/o are process blocking\n+\n */\n \n+#ifdef HAVE_INET_PTON\n+# define Inet_Pton_Linkname \"inet_pton\"\n+#else\n+# define Inet_Pton_Linkname \"__gnat_inet_pton\"\n+#endif\n+TXT(\"   Inet_Pton_Linkname  : constant String := \\\"\" Inet_Pton_Linkname \"\\\";\")\n+\n #endif /* HAVE_SOCKETS */\n \n /**"}, {"sha": "4ac17e2fbbf1bd57ee1602c660c52a3f61805468", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2907036db71b583f6a7c627e1e1753e85c779312/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=2907036db71b583f6a7c627e1e1753e85c779312", "patch": "@@ -400,7 +400,13 @@ __gnat_get_h_errno (void) {\n #endif\n }\n \n-#if defined (__vxworks) || defined (_WIN32)\n+#ifndef HAVE_INET_PTON\n+\n+#ifdef VMS\n+# define in_addr_t int\n+# define inet_addr decc$inet_addr\n+#endif\n+\n int\n __gnat_inet_pton (int af, const char *src, void *dst) {\n   switch (af) {\n@@ -414,9 +420,10 @@ __gnat_inet_pton (int af, const char *src, void *dst) {\n       return -1;\n   }\n \n-#ifdef __vxworks\n+#if defined (__vxworks)\n   return (inet_aton (src, dst) == OK);\n-#else\n+\n+#elif defined (_WIN32)\n   struct sockaddr_storage ss;\n   int sslen = sizeof ss;\n   int rc;\n@@ -436,10 +443,30 @@ __gnat_inet_pton (int af, const char *src, void *dst) {\n     }\n   }\n   return (rc == 0);\n+\n+#elif defined (__hpux__) || defined (VMS)\n+  in_addr_t addr;\n+  int rc = -1;\n+\n+  if (src == NULL || dst == NULL) {\n+    errno = EINVAL;\n+\n+  } else if (!strcmp (src, \"255.255.255.255\")) {\n+    addr = 0xffffffff;\n+    rc = 1;\n+\n+  } else {\n+    addr = inet_addr (src);\n+    rc = (addr != 0xffffffff);\n+  }\n+  if (rc == 1) {\n+    *(in_addr_t *)dst = addr;\n+  }\n+  return rc;\n #endif\n }\n #endif\n \n #else\n-#warning Sockets are not supported on this platform\n+# warning Sockets are not supported on this platform\n #endif /* defined(HAVE_SOCKETS) */"}]}