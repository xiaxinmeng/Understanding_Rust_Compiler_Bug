{"sha": "81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmYThhYjJkMDY3YjM5ZGY3YmI0ZmE4OTZjNGQyZTAwZTYzYzQ1YQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-07-22T13:33:34Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-07-22T13:33:34Z"}, "message": "trans-array.c (gfc_array_allocate): Correct memory-leak patch.\n\n2013-07-22  Tobias Burnus  <burnus@net-b.de>\n\n        * trans-array.c (gfc_array_allocate): Correct memory-leak patch.\n\nFrom-SVN: r201129", "tree": {"sha": "aec464d0a6fdb04e5a97d8a68247910372a8dcb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aec464d0a6fdb04e5a97d8a68247910372a8dcb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5afa1ed4c283baa07f2ad1ad553725adab72600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5afa1ed4c283baa07f2ad1ad553725adab72600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5afa1ed4c283baa07f2ad1ad553725adab72600"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "412e963206f1cabc024aa8f2acd572441ca3483a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a", "patch": "@@ -1,3 +1,7 @@\n+2013-07-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-array.c (gfc_array_allocate): Correct memory-leak patch.\n+\n 2013-07-22  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-array.c (gfc_array_allocate,"}, {"sha": "3fdd8d9ab01360a95bce25706e5523dd971af67b", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=81fa8ab2d067b39df7bb4fa896c4d2e00e63c45a", "patch": "@@ -5209,29 +5209,31 @@ gfc_array_allocate (gfc_se * se, gfc_expr * expr, tree status, tree errmsg,\n \t\t\t      &se->pre, &set_descriptor_block, &overflow,\n \t\t\t      expr3_elem_size, nelems, expr3, ts);\n \n-  if (status == NULL_TREE && dimension)\n+  if (dimension)\n     {\n-\n       var_overflow = gfc_create_var (integer_type_node, \"overflow\");\n       gfc_add_modify (&se->pre, var_overflow, overflow);\n \n-      /* Generate the block of code handling overflow.  */\n-      msg = gfc_build_addr_expr (pchar_type_node,\n-\t\tgfc_build_localized_cstring_const\n+      if (status == NULL_TREE)\n+\t{\n+\t  /* Generate the block of code handling overflow.  */\n+\t  msg = gfc_build_addr_expr (pchar_type_node,\n+\t\t    gfc_build_localized_cstring_const\n   \t\t\t(\"Integer overflow when calculating the amount of \"\n   \t\t\t \"memory to allocate\"));\n-      error = build_call_expr_loc (input_location, gfor_fndecl_runtime_error,\n-\t\t\t\t   1, msg);\n-    }\n-  else if (status != NULL_TREE)\n-    {\n-      tree status_type = TREE_TYPE (status);\n-      stmtblock_t set_status_block;\n+\t  error = build_call_expr_loc (input_location,\n+\t\t\t\t       gfor_fndecl_runtime_error, 1, msg);\n+\t}\n+      else\n+\t{\n+\t  tree status_type = TREE_TYPE (status);\n+\t  stmtblock_t set_status_block;\n \n-      gfc_start_block (&set_status_block);\n-      gfc_add_modify (&set_status_block, status,\n-\t\t      build_int_cst (status_type, LIBERROR_ALLOCATION));\n-      error = gfc_finish_block (&set_status_block);\n+\t  gfc_start_block (&set_status_block);\n+\t  gfc_add_modify (&set_status_block, status,\n+\t\t\t  build_int_cst (status_type, LIBERROR_ALLOCATION));\n+\t  error = gfc_finish_block (&set_status_block);\n+\t}\n     }\n \n   gfc_start_block (&elseblock);"}]}