{"sha": "ca361dec8f52c32553ce31f58acb414869b0b7a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzNjFkZWM4ZjUyYzMyNTUzY2UzMWY1OGFjYjQxNDg2OWIwYjdhOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-05-05T17:48:01Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-05T17:48:01Z"}, "message": "gimplify.c (gimplify_return_expr): Gimplify the size expressions of a variable-sized RESULT_DECL.\n\n\t* gimplify.c (gimplify_return_expr): Gimplify the size expressions of\n\ta variable-sized RESULT_DECL.\n\nFrom-SVN: r159074", "tree": {"sha": "25b31da61091c6f507a936a90a2a40d3b14c9a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25b31da61091c6f507a936a90a2a40d3b14c9a1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca361dec8f52c32553ce31f58acb414869b0b7a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca361dec8f52c32553ce31f58acb414869b0b7a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca361dec8f52c32553ce31f58acb414869b0b7a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca361dec8f52c32553ce31f58acb414869b0b7a8/comments", "author": null, "committer": null, "parents": [{"sha": "fa6aeae1ad6baf1e8e201508c9db8b4df00024df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6aeae1ad6baf1e8e201508c9db8b4df00024df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa6aeae1ad6baf1e8e201508c9db8b4df00024df"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "9f656df9229470caf6edf9f0453b8b3b001778e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca361dec8f52c32553ce31f58acb414869b0b7a8", "patch": "@@ -1,3 +1,8 @@\n+2010-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.c (gimplify_return_expr): Gimplify the size expressions of\n+\ta variable-sized RESULT_DECL.\n+\n 2010-05-05  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* doc/invoke.texi (-mfix-cortex-m3-ldrd): Move from ARC section to ARM."}, {"sha": "8d2bc582a7a8fae29e55eacbdc636f70aae5b01c", "filename": "gcc/gimplify.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=ca361dec8f52c32553ce31f58acb414869b0b7a8", "patch": "@@ -1228,9 +1228,22 @@ gimplify_return_expr (tree stmt, gimple_seq *pre_p)\n      hard_function_value generates a PARALLEL, we'll die during normal\n      expansion of structure assignments; there's special code in expand_return\n      to handle this case that does not exist in expand_expr.  */\n-  if (!result_decl\n-      || aggregate_value_p (result_decl, TREE_TYPE (current_function_decl)))\n-    result = result_decl;\n+  if (!result_decl)\n+    result = NULL_TREE;\n+  else if (aggregate_value_p (result_decl, TREE_TYPE (current_function_decl)))\n+    {\n+      if (TREE_CODE (DECL_SIZE (result_decl)) != INTEGER_CST)\n+\t{\n+\t  if (!TYPE_SIZES_GIMPLIFIED (TREE_TYPE (result_decl)))\n+\t    gimplify_type_sizes (TREE_TYPE (result_decl), pre_p);\n+\t  /* Note that we don't use gimplify_vla_decl because the RESULT_DECL\n+\t     should be effectively allocated by the caller, i.e. all calls to\n+\t     this function must be subject to the Return Slot Optimization.  */\n+\t  gimplify_one_sizepos (&DECL_SIZE (result_decl), pre_p);\n+\t  gimplify_one_sizepos (&DECL_SIZE_UNIT (result_decl), pre_p);\n+\t}\n+      result = result_decl;\n+    }\n   else if (gimplify_ctxp->return_temp)\n     result = gimplify_ctxp->return_temp;\n   else"}, {"sha": "9cee6901d9d2e435d8bcd6e04c3e3cb793c05b13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca361dec8f52c32553ce31f58acb414869b0b7a8", "patch": "@@ -1,3 +1,7 @@\n+2010-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/lto2.adb: New test.\n+\n 2010-05-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/43787"}, {"sha": "8738e23142665a8b18fee7555f82397fef30e3ba", "filename": "gcc/testsuite/gnat.dg/lto2.adb", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2Ftestsuite%2Fgnat.dg%2Flto2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca361dec8f52c32553ce31f58acb414869b0b7a8/gcc%2Ftestsuite%2Fgnat.dg%2Flto2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto2.adb?ref=ca361dec8f52c32553ce31f58acb414869b0b7a8", "patch": "@@ -0,0 +1,28 @@\n+-- { dg-do compile }\n+-- { dg-options \"-flto\" }\n+\n+procedure Lto2 (Nbytes : Natural) is\n+\n+   type Message_T (Length : Natural) is record\n+      case Length is\n+         when 0 => null;\n+         when others => Id : Natural;\n+      end case;\n+   end record;\n+\n+   type Local_Message_T is new Message_T (Nbytes);\n+\n+   function One_message return Local_Message_T is\n+      M : Local_Message_T;\n+   begin\n+      if M.Length > 0 then\n+         M.Id := 1;\n+      end if;\n+      return M;\n+   end;\n+\n+   procedure Process (X : Local_Message_T) is begin null; end;\n+\n+begin\n+   Process (One_Message);\n+end;"}]}