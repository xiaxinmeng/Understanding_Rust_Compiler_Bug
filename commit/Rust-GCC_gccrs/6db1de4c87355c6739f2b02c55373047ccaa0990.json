{"sha": "6db1de4c87355c6739f2b02c55373047ccaa0990", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiMWRlNGM4NzM1NWM2NzM5ZjJiMDJjNTUzNzMwNDdjY2FhMDk5MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-01-06T22:38:07Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-01-06T22:38:07Z"}, "message": "re PR libstdc++/30365 (No possibility to disable large file support (LFS))\n\n2007-01-06  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/30365\n\t* crossconfig.m4 (case *-linux*): Run crossconfig.m4.\n\t* configure: Regenerate.\n\nFrom-SVN: r120531", "tree": {"sha": "eb9e7dcb50999d30f220cf76f464d1d7e96243c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb9e7dcb50999d30f220cf76f464d1d7e96243c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6db1de4c87355c6739f2b02c55373047ccaa0990", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db1de4c87355c6739f2b02c55373047ccaa0990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db1de4c87355c6739f2b02c55373047ccaa0990", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db1de4c87355c6739f2b02c55373047ccaa0990/comments", "author": null, "committer": null, "parents": [{"sha": "74e3459c064562610db8b6e67068de32c6382edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e3459c064562610db8b6e67068de32c6382edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e3459c064562610db8b6e67068de32c6382edc"}], "stats": {"total": 11818, "additions": 5952, "deletions": 5866}, "files": [{"sha": "086936f09778db4288b637982342fdd2bb0fc534", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 5852, "changes": 5858, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6db1de4c87355c6739f2b02c55373047ccaa0990"}, {"sha": "d1a799555531b704ed33eff3b9136927f3f86b8a", "filename": "libstdc++-v3/ChangeLog-2006", "status": "added", "additions": 5851, "deletions": 0, "changes": 5851, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2FChangeLog-2006", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2FChangeLog-2006", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2006?ref=6db1de4c87355c6739f2b02c55373047ccaa0990"}, {"sha": "53db3b64df5518ad4c4e76ddc4e8e60ea19b334e", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 94, "deletions": 7, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=6db1de4c87355c6739f2b02c55373047ccaa0990", "patch": "@@ -99359,16 +99359,103 @@ done\n #define HAVE_INT64_T 1\n _ACEOF\n \n-    case \"$target\" in\n-      *-uclinux*)\n-        # Don't enable LFS with uClibc\n-        ;;\n-      *)\n-        cat >>confdefs.h <<\\_ACEOF\n+\n+\n+\n+  ac_ext=cc\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+  echo \"$as_me:$LINENO: checking for LFS support\" >&5\n+echo $ECHO_N \"checking for LFS support... $ECHO_C\" >&6\n+  if test \"${glibcxx_cv_LFS+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+    if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <unistd.h>\n+       #include <stdio.h>\n+       #include <sys/stat.h>\n+\n+int\n+main ()\n+{\n+FILE* fp;\n+       fopen64(\"t\", \"w\");\n+       fseeko64(fp, 0, SEEK_CUR);\n+       ftello64(fp);\n+       lseek64(1, 0, SEEK_CUR);\n+       struct stat64 buf;\n+       fstat64(1, &buf);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_LFS=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_LFS=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+\n+fi\n+\n+  if test $glibcxx_cv_LFS = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n #define _GLIBCXX_USE_LFS 1\n _ACEOF\n \n-    esac\n+  fi\n+  echo \"$as_me:$LINENO: result: $glibcxx_cv_LFS\" >&5\n+echo \"${ECHO_T}$glibcxx_cv_LFS\" >&6\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n \n     # For showmanyc_helper().\n "}, {"sha": "3d1d356510a2938229b5e61d9c6997fbc7d9e113", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db1de4c87355c6739f2b02c55373047ccaa0990/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=6db1de4c87355c6739f2b02c55373047ccaa0990", "patch": "@@ -157,13 +157,7 @@ case \"${host}\" in\n \n     # For LFS.\n     AC_DEFINE(HAVE_INT64_T)\n-    case \"$target\" in\n-      *-uclinux*)\n-        # Don't enable LFS with uClibc\n-        ;;\n-      *)\n-        AC_DEFINE(_GLIBCXX_USE_LFS)\n-    esac\n+    GLIBCXX_CHECK_LFS\n \n     # For showmanyc_helper().\n     AC_CHECK_HEADERS(sys/ioctl.h sys/filio.h)"}]}