{"sha": "bd48f123900b0abd449d22ec51b7c6decd9c6983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ0OGYxMjM5MDBiMGFiZDQ0OWQyMmVjNTFiN2M2ZGVjZDljNjk4Mw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-08-29T21:29:38Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-08-29T21:29:38Z"}, "message": "re PR fortran/42769 ([OOP] ICE  in resolve_typebound_procedure)\n\n2010-08-29  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42769\n\t* resolve.c (resolve_structure_cons): For derived types, make sure the\n\ttype has been resolved.\n\t(resolve_typebound_procedures): Make sure the vtab has been generated.\n\n\n2010-08-29  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/42769\n\t* gfortran.dg/dynamic_dispatch_11.f03: New.\n\nFrom-SVN: r163631", "tree": {"sha": "9d85f2b8035f657e325734fda48182ef05b441ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d85f2b8035f657e325734fda48182ef05b441ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd48f123900b0abd449d22ec51b7c6decd9c6983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd48f123900b0abd449d22ec51b7c6decd9c6983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd48f123900b0abd449d22ec51b7c6decd9c6983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd48f123900b0abd449d22ec51b7c6decd9c6983/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33620355cd432b0e3983d3740c5d64340e9fac93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33620355cd432b0e3983d3740c5d64340e9fac93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33620355cd432b0e3983d3740c5d64340e9fac93"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "c91663f5696dd1e8faab1f0141081104ba087358", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bd48f123900b0abd449d22ec51b7c6decd9c6983", "patch": "@@ -1,10 +1,17 @@\n+2010-08-29  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42769\n+\t* resolve.c (resolve_structure_cons): For derived types, make sure the\n+\ttype has been resolved.\n+\t(resolve_typebound_procedures): Make sure the vtab has been generated.\n+\n 2010-08-29  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/45439\n \t* match.c (gfc_match_select_type): Give the associate-name the\n \tFL_VARIABLE attribute.\n \n-2010-07-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n+2010-08-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* simplify.c (gfc_simplify_bessel_n2): Fix indention\n \tand argument type."}, {"sha": "b9fea23e53fbaa7a1d00929aea57ee67a1541063", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=bd48f123900b0abd449d22ec51b7c6decd9c6983", "patch": "@@ -930,6 +930,10 @@ resolve_structure_cons (gfc_expr *expr, int init)\n   symbol_attribute a;\n \n   t = SUCCESS;\n+\n+  if (expr->ts.type == BT_DERIVED)\n+    resolve_symbol (expr->ts.u.derived);\n+\n   cons = gfc_constructor_first (expr->value.constructor);\n   /* A constructor may have references if it is the result of substituting a\n      parameter variable.  In this case we just pull out the component we\n@@ -11039,6 +11043,7 @@ resolve_typebound_procedure (gfc_symtree* stree)\n   stree->n.tb->error = 1;\n }\n \n+\n static gfc_try\n resolve_typebound_procedures (gfc_symbol* derived)\n {\n@@ -11050,6 +11055,9 @@ resolve_typebound_procedures (gfc_symbol* derived)\n   resolve_bindings_derived = derived;\n   resolve_bindings_result = SUCCESS;\n \n+  /* Make sure the vtab has been generated.  */\n+  gfc_find_derived_vtab (derived);\n+\n   if (derived->f2k_derived->tb_sym_root)\n     gfc_traverse_symtree (derived->f2k_derived->tb_sym_root,\n \t\t\t  &resolve_typebound_procedure);"}, {"sha": "fe9f0240bde57bf287fd735457cfc7df953619e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd48f123900b0abd449d22ec51b7c6decd9c6983", "patch": "@@ -1,3 +1,8 @@\n+2010-08-29  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/42769\n+\t* gfortran.dg/dynamic_dispatch_11.f03: New.\n+\n 2010-08-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/44991\n@@ -8,7 +13,7 @@\n \tPR fortran/45439\n \t* gfortran.dg/select_type_16.f03: New.\n \n-2010-07-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n+2010-08-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n \t    Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/bessel_7.f90: Decrease required precision."}, {"sha": "e4abcb2846eb2e4fe7b465900daefb3c63eb6f3c", "filename": "gcc/testsuite/gfortran.dg/dynamic_dispatch_11.f03", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ftestsuite%2Fgfortran.dg%2Fdynamic_dispatch_11.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd48f123900b0abd449d22ec51b7c6decd9c6983/gcc%2Ftestsuite%2Fgfortran.dg%2Fdynamic_dispatch_11.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdynamic_dispatch_11.f03?ref=bd48f123900b0abd449d22ec51b7c6decd9c6983", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+!\n+! PR 42769: [OOP] ICE in resolve_typebound_procedure\n+! comment #27\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+\n+module mod1\n+  type :: t1\n+  contains\n+    procedure, nopass :: get => my_get\n+  end type\n+contains \n+  integer function my_get()\n+    my_get = 1\n+  end function\n+end module\n+\n+module mod2\n+contains \n+  integer function my_get()   ! must have the same name as the function in mod1\n+    my_get = 2\n+  end function\n+end module\n+\n+  use mod2\n+  use mod1              ! order of use statements is important\n+  class(t1),allocatable :: a\n+  allocate(a)\n+  if (a%get()/=1) call abort()\n+end\n+\n+\n+! { dg-final { cleanup-modules \"mod1 mod2\" } }"}]}