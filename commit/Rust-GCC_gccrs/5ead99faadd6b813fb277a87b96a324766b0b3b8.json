{"sha": "5ead99faadd6b813fb277a87b96a324766b0b3b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhZDk5ZmFhZGQ2YjgxM2ZiMjc3YTg3Yjk2YTMyNDc2NmIwYjNiOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-23T17:05:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-23T17:05:56Z"}, "message": "re PR target/43139 (ICE in output_operand)\n\n\tPR target/43139\n\t* config/i386/i386.c (ix86_delegitimize_address): Delegitimize all\n\tGOTOFF relocs, even when the base reg isn't pic pointer.\n\n\t* gcc.dg/pr43139.c: New test.\n\nFrom-SVN: r157011", "tree": {"sha": "2c90d4090e679c7a192bfc56041047f0a565d9d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c90d4090e679c7a192bfc56041047f0a565d9d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ead99faadd6b813fb277a87b96a324766b0b3b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ead99faadd6b813fb277a87b96a324766b0b3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ead99faadd6b813fb277a87b96a324766b0b3b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ead99faadd6b813fb277a87b96a324766b0b3b8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a8e30fbf34c8364dc0710b374f34038634c90a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8e30fbf34c8364dc0710b374f34038634c90a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a8e30fbf34c8364dc0710b374f34038634c90a6"}], "stats": {"total": 100, "additions": 93, "deletions": 7}, "files": [{"sha": "7bd2c7b93356ad34b4be079847447baccea0a55f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ead99faadd6b813fb277a87b96a324766b0b3b8", "patch": "@@ -1,3 +1,9 @@\n+2010-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/43139\n+\t* config/i386/i386.c (ix86_delegitimize_address): Delegitimize all\n+\tGOTOFF relocs, even when the base reg isn't pic pointer.\n+\n 2010-02-23  Michael Matz  <matz@suse.de>\n \n \tPR debug/43077"}, {"sha": "84f5f535a510f470f64bfc4ea38abb8a3109da9d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5ead99faadd6b813fb277a87b96a324766b0b3b8", "patch": "@@ -10883,6 +10883,9 @@ static rtx\n ix86_delegitimize_address (rtx x)\n {\n   rtx orig_x = delegitimize_mem_from_attrs (x);\n+  /* addend is NULL or some rtx if x is something+GOTOFF where\n+     something doesn't include the PIC register.  */\n+  rtx addend = NULL_RTX;\n   /* reg_addend is NULL or a multiple of some register.  */\n   rtx reg_addend = NULL_RTX;\n   /* const_addend is NULL or a const_int.  */\n@@ -10921,14 +10924,13 @@ ix86_delegitimize_address (rtx x)\n       else if (ix86_pic_register_p (XEXP (reg_addend, 1)))\n \treg_addend = XEXP (reg_addend, 0);\n       else\n-\treturn orig_x;\n-      if (!REG_P (reg_addend)\n-\t  && GET_CODE (reg_addend) != MULT\n-\t  && GET_CODE (reg_addend) != ASHIFT)\n-\treturn orig_x;\n+\t{\n+\t  reg_addend = NULL_RTX;\n+\t  addend = XEXP (x, 0);\n+\t}\n     }\n   else\n-    return orig_x;\n+    addend = XEXP (x, 0);\n \n   x = XEXP (XEXP (x, 1), 0);\n   if (GET_CODE (x) == PLUS\n@@ -10939,7 +10941,7 @@ ix86_delegitimize_address (rtx x)\n     }\n \n   if (GET_CODE (x) == UNSPEC\n-      && ((XINT (x, 1) == UNSPEC_GOT && MEM_P (orig_x))\n+      && ((XINT (x, 1) == UNSPEC_GOT && MEM_P (orig_x) && !addend)\n \t  || (XINT (x, 1) == UNSPEC_GOTOFF && !MEM_P (orig_x))))\n     result = XVECEXP (x, 0, 0);\n \n@@ -10954,6 +10956,22 @@ ix86_delegitimize_address (rtx x)\n     result = gen_rtx_CONST (Pmode, gen_rtx_PLUS (Pmode, result, const_addend));\n   if (reg_addend)\n     result = gen_rtx_PLUS (Pmode, reg_addend, result);\n+  if (addend)\n+    {\n+      /* If the rest of original X doesn't involve the PIC register, add\n+\t addend and subtract pic_offset_table_rtx.  This can happen e.g.\n+\t for code like:\n+\t leal (%ebx, %ecx, 4), %ecx\n+\t ...\n+\t movl foo@GOTOFF(%ecx), %edx\n+\t in which case we return (%ecx - %ebx) + foo.  */\n+      if (pic_offset_table_rtx)\n+        result = gen_rtx_PLUS (Pmode, gen_rtx_MINUS (Pmode, copy_rtx (addend),\n+\t\t\t\t\t\t     pic_offset_table_rtx),\n+\t\t\t       result);\n+      else\n+\treturn orig_x;\n+    }\n   return result;\n }\n "}, {"sha": "ee078d143686b1fb6606eebe7a6180aa262da8e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ead99faadd6b813fb277a87b96a324766b0b3b8", "patch": "@@ -1,5 +1,8 @@\n 2010-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/43139\n+\t* gcc.dg/pr43139.c: New test.\n+\n \tPR debug/43077\n \t* gcc.dg/guality/pr43077-1.c: New test.\n "}, {"sha": "4dc725bcc9d3afba34493d2f61f545e5dffad2a6", "filename": "gcc/testsuite/gcc.dg/pr43139.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ead99faadd6b813fb277a87b96a324766b0b3b8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43139.c?ref=5ead99faadd6b813fb277a87b96a324766b0b3b8", "patch": "@@ -0,0 +1,59 @@\n+/* PR target/43139 */\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-g -O2 -fpic\" } */\n+\n+typedef double T1[10];\n+typedef double T2[10][10];\n+typedef int T3[10];\n+\n+void __attribute__((noinline))\n+fn1 (void)\n+{\n+  asm volatile (\"\" : : : \"memory\");\n+}\n+\n+void __attribute__((noinline))\n+fn2 (int x, ...)\n+{\n+  asm volatile (\"\" : : \"r\" (x) : \"memory\");\n+}\n+\n+static void\n+bar (double v, double w, double x, double y, double z)\n+{\n+  double a;\n+  if (v / w < 200.0)\n+    {\n+      a = x + (y - x) * __builtin_exp (-v / w);\n+      fn2 (0);\n+      fn2 (1, a * 20.2 / z, z);\n+      fn1 ();\n+    }\n+}\n+\n+static void\n+baz (T2 u, T2 v, T2 t, T2 x, T1 y, T3 z, double q, int j, int k)\n+{\n+  int i = z[k];\n+  if (u[i][j] > 0.0)\n+    bar (q, x[i][j], v[i][j], t[i][j], y[i]);\n+}\n+\n+static T2 a, b, c, d;\n+static T1 e;\n+static T3 f;\n+\n+void __attribute__((noinline))\n+test (int j, int k, double q)\n+{\n+  baz (a, b, c, d, e, f, q, j, k);\n+}\n+\n+int\n+main (void)\n+{\n+  d[0][6] = 1.0;\n+  a[0][6] = 2.0;\n+  test (6, 7, 400.0);\n+  return 0;\n+}"}]}