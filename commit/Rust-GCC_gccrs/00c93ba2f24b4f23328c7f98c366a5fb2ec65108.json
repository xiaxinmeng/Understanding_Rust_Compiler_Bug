{"sha": "00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjOTNiYTJmMjRiNGYyMzMyOGM3Zjk4YzM2NmE1ZmIyZWM2NTEwOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T13:03:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T13:03:16Z"}, "message": "[multiple changes]\n\n2015-10-16  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* a-tags.ads (Parent_Size): Remove obsolete pragma Export.\n\t* s-finmas.ads (Header_Offset): Delete.\n\t* s-finmas.adb (Header_Offset): Likewise.\n\t(Finalize): Call Header_Size instead of Header_Offset.\n\t* s-stposu.adb (Allocate_Any_Controlled): Likewise.\n\t(Deallocate_Any_Controlled): Likewise.\n\n2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-exetim.ads, a-exetim-mingw.ads, a-exetim-default.ads: Whitespace\n\tcleanup.\n\t* s-osprim-mingw.adb, einfo.ads, sem_util.adb, sem_util.ads,\n\tsem_ch4.adb, sem_ch13.adb, s-trasym.adb, s-trasym.ads,\n\ts-taprop-posix.adb: Minor reformatting.\n\nFrom-SVN: r228895", "tree": {"sha": "221d3dce05efe75a58cbe161a4ebfe8f60882c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/221d3dce05efe75a58cbe161a4ebfe8f60882c33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/comments", "author": null, "committer": null, "parents": [{"sha": "65cddf367d0eda1283d398e9933768286c1386fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65cddf367d0eda1283d398e9933768286c1386fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65cddf367d0eda1283d398e9933768286c1386fd"}], "stats": {"total": 103, "additions": 55, "deletions": 48}, "files": [{"sha": "228d10c4d24b9a50fb535d02021de9e4f8a1cc46", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -1,3 +1,20 @@\n+2015-10-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* a-tags.ads (Parent_Size): Remove obsolete pragma Export.\n+\t* s-finmas.ads (Header_Offset): Delete.\n+\t* s-finmas.adb (Header_Offset): Likewise.\n+\t(Finalize): Call Header_Size instead of Header_Offset.\n+\t* s-stposu.adb (Allocate_Any_Controlled): Likewise.\n+\t(Deallocate_Any_Controlled): Likewise.\n+\n+2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-exetim.ads, a-exetim-mingw.ads, a-exetim-default.ads: Whitespace\n+\tcleanup.\n+\t* s-osprim-mingw.adb, einfo.ads, sem_util.adb, sem_util.ads,\n+\tsem_ch4.adb, sem_ch13.adb, s-trasym.adb, s-trasym.ads,\n+\ts-taprop-posix.adb: Minor reformatting.\n+\n 2015-10-16  Bob Duff  <duff@adacore.com>\n \n \t* adadecode.h, adadecode.c (ada_demangle): Remove"}, {"sha": "56429af465449716a0896ca6655e5f087ed90886", "filename": "gcc/ada/a-exetim-default.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-exetim-default.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-exetim-default.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-default.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2007-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2007-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -46,8 +46,8 @@ package Ada.Execution_Time is\n    CPU_Tick       : constant Ada.Real_Time.Time_Span;\n \n    function Clock\n-     (T : Ada.Task_Identification.Task_Id\n-          := Ada.Task_Identification.Current_Task)\n+     (T : Ada.Task_Identification.Task_Id :=\n+        Ada.Task_Identification.Current_Task)\n       return CPU_Time;\n \n    function \"+\""}, {"sha": "bc458f6700e0240e9c86aad40ebf722da393dc60", "filename": "gcc/ada/a-exetim-mingw.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-exetim-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-exetim-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-mingw.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -30,6 +30,7 @@\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n ------------------------------------------------------------------------------\n \n --  This is the Windows native version of this package\n@@ -48,7 +49,8 @@ package Ada.Execution_Time is\n \n    function Clock\n      (T : Ada.Task_Identification.Task_Id :=\n-            Ada.Task_Identification.Current_Task) return CPU_Time;\n+        Ada.Task_Identification.Current_Task)\n+      return CPU_Time;\n \n    function \"+\"\n      (Left  : CPU_Time;\n@@ -77,9 +79,9 @@ package Ada.Execution_Time is\n       TS : out Ada.Real_Time.Time_Span);\n \n    function Time_Of\n-      (SC : Ada.Real_Time.Seconds_Count;\n-       TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n-       return CPU_Time;\n+     (SC : Ada.Real_Time.Seconds_Count;\n+      TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n+      return CPU_Time;\n \n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;"}, {"sha": "2b0725058c69e1006dcfd81d1b7715c4497687b7", "filename": "gcc/ada/a-exetim.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-exetim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-exetim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -38,7 +38,7 @@ package Ada.Execution_Time is\n \n    function Clock\n      (T : Ada.Task_Identification.Task_Id :=\n-            Ada.Task_Identification.Current_Task)\n+        Ada.Task_Identification.Current_Task)\n       return CPU_Time;\n \n    function \"+\"\n@@ -68,9 +68,9 @@ package Ada.Execution_Time is\n       TS : out Ada.Real_Time.Time_Span);\n \n    function Time_Of\n-      (SC : Ada.Real_Time.Seconds_Count;\n-       TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n-       return CPU_Time;\n+     (SC : Ada.Real_Time.Seconds_Count;\n+      TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n+      return CPU_Time;\n \n    Interrupt_Clocks_Supported          : constant Boolean := False;\n    Separate_Interrupt_Clocks_Supported : constant Boolean := False;"}, {"sha": "1d247aac51a4cda42ccbc5addd8d93d4d10354f2", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -526,9 +526,6 @@ private\n    --  ancestor is the parent of the type represented by tag T. This function\n    --  assumes that _size is always in slot one of the dispatch table.\n \n-   pragma Export (Ada, Parent_Size, \"ada__tags__parent_size\");\n-   --  This procedure is used in s-finimp and is thus exported manually\n-\n    procedure Register_Interface_Offset\n      (This         : System.Address;\n       Interface_T  : Tag;"}, {"sha": "d32f01dd7a7148df61450782a71c11d749b69842", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -2626,8 +2626,8 @@ package Einfo is\n --       to intrinsic, which causes intrinsic code to be generated.\n \n --    Is_Invariant_Procedure (Flag257)\n---       Defined in functions an procedures. Set for a generated invariant\n---       procedure to identify it easily in the.\n+--       Defined in functions and procedures. Set for a generated invariant\n+--       procedure to identify it easily.\n \n --    Is_Itype (Flag91)\n --       Defined in all entities. Set to indicate that a type is an Itype,\n@@ -3064,7 +3064,7 @@ package Einfo is\n --       vtable (i.e. the one to be extended by derivation).\n \n --    Is_Tagged_Type (Flag55)\n---       Defined in all entities. Set for an entity that is a tagged type.\n+--       Defined in all entities, set for an entity that is a tagged type\n \n --    Is_Task_Interface (synthesized)\n --       Defined in types that are interfaces. True if interface is declared as\n@@ -4657,8 +4657,8 @@ package Einfo is\n       --  type (whether or not it is a general access type).\n \n       E_Access_Attribute_Type,\n-      --  An access type created for an access attribute (such as 'Access,\n-      --  'Unrestricted_Access and Unchecked_Access).\n+      --  An access type created for an access attribute (one of 'Access,\n+      --  'Unrestricted_Access, or Unchecked_Access).\n \n       E_Allocator_Type,\n       --  A special internal type used to label allocators and references to"}, {"sha": "c5ddff76955e056653858a94873bc9c95746740c", "filename": "gcc/ada/s-finmas.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-finmas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-finmas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2011, Free Software Foundation, Inc.           --\n+--             Copyright (C) 2015, Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -212,7 +212,7 @@ package body System.Finalization_Masters is\n          --  Skip the list header in order to offer proper object layout for\n          --  finalization.\n \n-         Obj_Addr := Curr_Ptr.all'Address + Header_Offset;\n+         Obj_Addr := Curr_Ptr.all'Address + Header_Size;\n \n          --  Retrieve TSS primitive Finalize_Address depending on the master's\n          --  mode of operation.\n@@ -327,15 +327,6 @@ package body System.Finalization_Masters is\n       return FM_Node'Size / Storage_Unit;\n    end Header_Size;\n \n-   -------------------\n-   -- Header_Offset --\n-   -------------------\n-\n-   function Header_Offset return System.Storage_Elements.Storage_Offset is\n-   begin\n-      return FM_Node'Size / Storage_Unit;\n-   end Header_Offset;\n-\n    ----------------\n    -- Initialize --\n    ----------------"}, {"sha": "a4e6cb15e483c741dd2efbcb2dff47ef30f67a07", "filename": "gcc/ada/s-finmas.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-finmas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-finmas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,9 +111,6 @@ package System.Finalization_Masters is\n    function Finalization_Started (Master : Finalization_Master) return Boolean;\n    --  Return the finalization status of a master\n \n-   function Header_Offset return System.Storage_Elements.Storage_Offset;\n-   --  Return the size of type FM_Node as Storage_Offset\n-\n    function Header_Size return System.Storage_Elements.Storage_Count;\n    --  Return the size of type FM_Node as Storage_Count\n "}, {"sha": "9f7af90c5216c1002770d315b63bc2e6418aae2e", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -94,9 +94,9 @@ package body System.OS_Primitives is\n    pragma Export (Ada, Monotonic_Clock, \"__gnat_monotonic_clock\");\n    --  Return \"absolute\" time, represented as an offset relative to \"the Unix\n    --  Epoch\", which is Jan 1, 1970 00:00:00 UTC. This clock implementation is\n-   --  immune to the system's clock changes.\n-   --  Export this function so that it can be imported from s-taprop-mingw.adb\n-   --  without changing the shared spec (s-osprim.ads).\n+   --  immune to the system's clock changes. Export this function so that it\n+   --  can be imported from s-taprop-mingw.adb without changing the shared\n+   --  spec (s-osprim.ads).\n \n    procedure Get_Base_Time (Data : in out Clock_Data);\n    --  Retrieve the base time and base ticks. These values will be used by"}, {"sha": "c7d2819ca9cd30608dd19f2cd6c3417bf1c203e4", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -281,7 +281,7 @@ package body System.Storage_Pools.Subpools is\n          --     +- Header_And_Padding --+\n \n          N_Ptr := Address_To_FM_Node_Ptr\n-                    (N_Addr + Header_And_Padding - Header_Offset);\n+                    (N_Addr + Header_And_Padding - Header_Size);\n \n          --  Prepend the allocated object to the finalization master\n \n@@ -414,7 +414,7 @@ package body System.Storage_Pools.Subpools is\n \n          --  Convert the bits preceding the object into a list header\n \n-         N_Ptr := Address_To_FM_Node_Ptr (Addr - Header_Offset);\n+         N_Ptr := Address_To_FM_Node_Ptr (Addr - Header_Size);\n \n          --  Detach the object from the related finalization master. This\n          --  action does not need to know the prior context used during"}, {"sha": "e3b9840dc7a81f5c14476240d43b86cff5b15883", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -278,7 +278,7 @@ package body System.Task_Primitives.Operations is\n       --  Absolute deadline specified using the tasking clock (CLOCK_RT_Ada)\n \n       elsif Mode = Absolute_RT\n-              or else OSC.CLOCK_RT_Ada = OSC.CLOCK_REALTIME\n+        or else OSC.CLOCK_RT_Ada = OSC.CLOCK_REALTIME\n       then\n          pragma Warnings (On);\n          Abs_Time := Duration'Min (Check_Time + Max_Sensible_Delay, Time);\n@@ -295,7 +295,7 @@ package body System.Task_Primitives.Operations is\n          declare\n             Cal_Check_Time : constant Duration := OS_Primitives.Clock;\n             RT_Time        : constant Duration :=\n-              Time + Check_Time - Cal_Check_Time;\n+                               Time + Check_Time - Cal_Check_Time;\n \n          begin\n             Abs_Time :="}, {"sha": "1dd0d71529e48d0615cf2be5ad22f69cf9e09841", "filename": "gcc/ada/s-trasym.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trasym.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -35,7 +35,7 @@\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we can get\n---  elaboration circularities when polling is turned on\n+--  elaboration circularities when polling is turned on.\n \n with Ada.Exceptions.Traceback; use Ada.Exceptions.Traceback;\n with System.Address_Image;"}, {"sha": "2aa1d1f335a1cf34e0a282a4a7cc1f39ca0c43ce", "filename": "gcc/ada/s-trasym.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fs-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trasym.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -64,7 +64,7 @@\n \n pragma Polling (Off);\n --  We must turn polling off for this unit, because otherwise we can get\n---  elaboration circularities when polling is turned on\n+--  elaboration circularities when polling is turned on.\n \n with Ada.Exceptions;\n "}, {"sha": "68b201b3d2528e1aba794058d87d3cd157804b76", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -8708,6 +8708,8 @@ package body Sem_Ch13 is\n             --  them as such whenever possible, so redundant predicate checks\n             --  can be optimized.\n \n+            --  Shouldn't Variable_Ref be True for Side_Effect_Free call ???\n+\n             if Expander_Active then\n                Set_Is_Pure (SId, Side_Effect_Free (Expr));\n                Set_Is_Inlined (SId);"}, {"sha": "ebd9a8f7ba7844727fcce5668addc17093e9fec1", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -8174,7 +8174,7 @@ package body Sem_Ch4 is\n            or else Is_Incomplete_Type (Obj_Type)\n          then\n \n-            --  Restore previous type if current one is not legal candidate.\n+            --  Restore previous type if current one is not legal candidate\n \n             Obj_Type := Prev_Obj_Type;\n             return;"}, {"sha": "2b929575a95f84d7611a4f41c68cb6385c4969fc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -7800,6 +7800,7 @@ package body Sem_Util is\n \n    function Get_Reference_Discriminant (Typ : Entity_Id) return Entity_Id is\n       D : Entity_Id;\n+\n    begin\n       D := First_Discriminant (Typ);\n       while Present (D) loop"}, {"sha": "238a0fa3a9346db0e0141dd0d50aee8ce8fa711e", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93ba2f24b4f23328c7f98c366a5fb2ec65108/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=00c93ba2f24b4f23328c7f98c366a5fb2ec65108", "patch": "@@ -910,8 +910,8 @@ package Sem_Util is\n    --  any other form.\n \n    function Get_Reference_Discriminant (Typ : Entity_Id) return Entity_Id;\n-   --  If Typ has Implicit_Dereference, return discriminant specified in\n-   --  the corresponding aspect.\n+   --  If Typ has Implicit_Dereference, return discriminant specified in the\n+   --  corresponding aspect.\n \n    function Get_Referenced_Object (N : Node_Id) return Node_Id;\n    --  Given a node, return the renamed object if the node represents a renamed"}]}