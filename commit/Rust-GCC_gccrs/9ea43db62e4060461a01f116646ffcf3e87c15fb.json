{"sha": "9ea43db62e4060461a01f116646ffcf3e87c15fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVhNDNkYjYyZTQwNjA0NjFhMDFmMTE2NjQ2ZmZjZjNlODdjMTVmYg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-25T09:04:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:04:04Z"}, "message": "[Ada] Minor reformatting\n\n2018-05-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* einfo.adb, einfo.ads, exp_ch3.adb, exp_ch8.adb, exp_unst.adb,\n\tpprint.adb, sem_ch12.adb, sem_ch3.adb, sem_prag.adb, sem_util.adb:\n\tMinor reformatting.\n\nFrom-SVN: r260727", "tree": {"sha": "cb2b51dfff66853b22f7a45b1530858fc88e3881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb2b51dfff66853b22f7a45b1530858fc88e3881"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ea43db62e4060461a01f116646ffcf3e87c15fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ea43db62e4060461a01f116646ffcf3e87c15fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ea43db62e4060461a01f116646ffcf3e87c15fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ea43db62e4060461a01f116646ffcf3e87c15fb/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41610f15111a8d1beda58a932e8469299ba7e486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41610f15111a8d1beda58a932e8469299ba7e486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41610f15111a8d1beda58a932e8469299ba7e486"}], "stats": {"total": 146, "additions": 82, "deletions": 64}, "files": [{"sha": "a24c898722cd391061c1de86c592af70c98debef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -1,3 +1,9 @@\n+2018-05-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb, einfo.ads, exp_ch3.adb, exp_ch8.adb, exp_unst.adb,\n+\tpprint.adb, sem_ch12.adb, sem_ch3.adb, sem_prag.adb, sem_util.adb:\n+\tMinor reformatting.\n+\n 2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Instance_Exists): New function, subsidiary of"}, {"sha": "cdfd44d1ee1f514333a9362907fedc96bdcc9802", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -275,8 +275,6 @@ package body Einfo is\n    --    Entry_Max_Queue_Lengths_Array   Node35\n    --    Import_Pragma                   Node35\n \n-   --    Prev_Entity                     Node36\n-\n    --    Validated_Object                Node38\n    --    Predicated_Parent               Node38\n    --    Class_Wide_Clone                Node38"}, {"sha": "17d69372f64cf3a9dbe1de9bb127a902670449e9", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -2303,7 +2303,7 @@ package Einfo is\n --       Applies to all entities, true for access types and subtypes\n \n --    Is_Activation_Record (Flag305)\n---       Applies to In_Parameters generated in Exp_Unst for nested\n+--       Applies to E_In_Parameters generated in Exp_Unst for nested\n --       subprograms, to mark the added formal that carries the activation\n --       record created in the enclosing subprogram.\n "}, {"sha": "d1ed971bd1e2092c3cbbd8f684dfd785923eae31", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 32, "deletions": 23, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -4274,15 +4274,15 @@ package body Exp_Ch3 is\n       Body_Id     : Entity_Id;\n       Param_Specs : List_Id) return Node_Id\n    is\n-      Loc       : constant Source_Ptr := Sloc (Typ);\n-      Def       : constant Node_Id := Parent (Typ);\n-      Comps     : constant Node_Id := Component_List (Type_Definition (Def));\n-      Left      : constant Entity_Id := Defining_Identifier\n-                                          (First (Param_Specs));\n-      Right     : constant Entity_Id := Defining_Identifier\n-                                          (Next (First (Param_Specs)));\n-      Decls     : constant List_Id := New_List;\n-      Stmts     : constant List_Id := New_List;\n+      Loc   : constant Source_Ptr := Sloc (Typ);\n+      Def   : constant Node_Id    := Parent (Typ);\n+      Comps : constant Node_Id    := Component_List (Type_Definition (Def));\n+      Left  : constant Entity_Id  := Defining_Identifier (First (Param_Specs));\n+      Right : constant Entity_Id  :=\n+                    Defining_Identifier (Next (First (Param_Specs)));\n+      Decls : constant List_Id    := New_List;\n+      Stmts : constant List_Id    := New_List;\n+\n       Subp_Body : Node_Id;\n \n    begin\n@@ -4317,9 +4317,10 @@ package body Exp_Ch3 is\n \n       if Is_Unchecked_Union (Typ) then\n          declare\n+            A          : Entity_Id;\n+            B          : Entity_Id;\n             Discr      : Entity_Id;\n             Discr_Type : Entity_Id;\n-            A, B       : Entity_Id;\n             New_Discrs : Elist_Id;\n \n          begin\n@@ -4328,11 +4329,14 @@ package body Exp_Ch3 is\n             Discr := First_Discriminant (Typ);\n             while Present (Discr) loop\n                Discr_Type := Etype (Discr);\n-               A := Make_Defining_Identifier (Loc,\n-                      Chars => New_External_Name (Chars (Discr), 'A'));\n \n-               B := Make_Defining_Identifier (Loc,\n-                      Chars => New_External_Name (Chars (Discr), 'B'));\n+               A :=\n+                 Make_Defining_Identifier (Loc,\n+                   Chars => New_External_Name (Chars (Discr), 'A'));\n+\n+               B :=\n+                 Make_Defining_Identifier (Loc,\n+                   Chars => New_External_Name (Chars (Discr), 'B'));\n \n                --  Add new parameters to the parameter list\n \n@@ -4371,9 +4375,9 @@ package body Exp_Ch3 is\n             end loop;\n \n             --  Generate component-by-component comparison. Note that we must\n-            --  propagate the inferred discriminants formals to act as\n-            --  the case statement switch. Their value is added when an\n-            --  equality call on unchecked unions is expanded.\n+            --  propagate the inferred discriminants formals to act as the case\n+            --  statement switch. Their value is added when an equality call on\n+            --  unchecked unions is expanded.\n \n             Append_List_To (Stmts, Make_Eq_Case (Typ, Comps, New_Discrs));\n          end;\n@@ -4392,7 +4396,7 @@ package body Exp_Ch3 is\n \n       Subp_Body :=\n         Make_Subprogram_Body (Loc,\n-          Specification =>\n+          Specification              =>\n             Make_Function_Specification (Loc,\n               Defining_Unit_Name       => Body_Id,\n               Parameter_Specifications => Param_Specs,\n@@ -4952,9 +4956,13 @@ package body Exp_Ch3 is\n       --  Create An Equality function for the untagged variant record Typ and\n       --  attach it to the TSS list.\n \n+      -----------------------------------\n+      -- Build_Variant_Record_Equality --\n+      -----------------------------------\n+\n       procedure Build_Variant_Record_Equality (Typ : Entity_Id) is\n          Loc : constant Source_Ptr := Sloc (Typ);\n-         F   : constant Entity_Id :=\n+         F   : constant Entity_Id  :=\n                  Make_Defining_Identifier (Loc,\n                    Chars => Make_TSS_Name (Typ, TSS_Composite_Equality));\n       begin\n@@ -4992,12 +5000,13 @@ package body Exp_Ch3 is\n               Body_Id     => F,\n               Param_Specs => New_List (\n                 Make_Parameter_Specification (Loc,\n-                  Defining_Identifier => Make_Defining_Identifier (Loc,\n-                                           Name_X),\n+                  Defining_Identifier =>\n+                    Make_Defining_Identifier (Loc, Name_X),\n                   Parameter_Type      => New_Occurrence_Of (Typ, Loc)),\n+\n                 Make_Parameter_Specification (Loc,\n-                  Defining_Identifier => Make_Defining_Identifier (Loc,\n-                                           Name_Y),\n+                  Defining_Identifier =>\n+                    Make_Defining_Identifier (Loc, Name_Y),\n                   Parameter_Type      => New_Occurrence_Of (Typ, Loc)))));\n \n          Set_TSS (Typ, F);"}, {"sha": "279ba86ed04165a3beb5fb633b70aa67c026adcc", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -294,12 +294,12 @@ package body Exp_Ch8 is\n                  Body_Id     => Body_Id,\n                  Param_Specs => Copy_Parameter_List (Id));\n \n-         --  Build body for renamed equality, to capture its current\n-         --  meaning. It may be redefined later, but the renaming is\n-         --  elaborated where it occurs. This is technically known as\n-         --  Squirreling semantics. Renaming is rewritten as a subprogram\n-         --  declaration, and the generated  body is inserted into the\n-         --  freeze actions for the subprogram.\n+         --  Build body for renamed equality, to capture its current meaning.\n+         --  It may be redefined later, but the renaming is elaborated where\n+         --  it occurs. This is technically known as Squirreling semantics.\n+         --  Renaming is rewritten as a subprogram declaration, and the\n+         --  generated body is inserted into the freeze actions for the\n+         --  subprogram.\n \n          else\n             Decl :="}, {"sha": "0b2ed21cd19e554c46f1216e2d851c60867adc42", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -400,14 +400,13 @@ package body Exp_Unst is\n \n                procedure Note_Uplevel_Bound (N : Node_Id) is\n                begin\n-                  --  Entity name case\n-                  --  Make sure that that the entity is declared in a\n-                  --  subprogram. THis may not be the case for an type\n+                  --  Entity name case. Make sure that the entity is declared\n+                  --  in a subprogram. This may not be the case for for a type\n                   --  in a loop appearing in a precondition.\n \n                   if Is_Entity_Name (N) then\n                      if Present (Entity (N))\n-                        and then Present (Enclosing_Subprogram (Entity (N)))\n+                       and then Present (Enclosing_Subprogram (Entity (N)))\n                      then\n                         Note_Uplevel_Ref\n                           (E      => Entity (N),\n@@ -617,17 +616,18 @@ package body Exp_Unst is\n                               end if;\n                            end if;\n                         end if;\n+\n                      when Attribute_First\n                         | Attribute_Last\n                         | Attribute_Length\n                      =>\n-                        --  Special-case attributes of array objects\n-                        --  whose bounds may be uplevel references.\n-                        --  More complex prefixes are handled during\n-                        --  full traversal. Note that if the nominal\n-                        --  subtype of the prefix is unconstrained, the\n-                        --  bound must be obtained from the object, not\n-                        --  from the (possibly) uplevel reference,\n+                        --  Special-case attributes of array objects whose\n+                        --  bounds may be uplevel references. More complex\n+                        --  prefixes are handled during full traversal. Note\n+                        --  that if the nominal subtype of the prefix is\n+                        --  unconstrained, the bound must be obtained from\n+                        --  the object, not from the (possibly) uplevel\n+                        --  reference.\n \n                         if Is_Entity_Name (Prefix (N))\n                           and then Is_Constrained (Etype (Prefix (N)))"}, {"sha": "24c9aa1e447881b4e660d66e0496608f00501f9f", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -765,8 +765,8 @@ package body Pprint is\n                --  If argument does not already account for a closing\n                --  parenthesis, count one here.\n \n-               if not Nkind_In (Right, N_Quantified_Expression,\n-                                       N_Aggregate)\n+               if not Nkind_In (Right, N_Aggregate,\n+                                       N_Quantified_Expression)\n                then\n                   Append_Paren := Append_Paren + 1;\n                end if;\n@@ -831,19 +831,21 @@ package body Pprint is\n                end if;\n \n             when N_Quantified_Expression =>\n-               Right := Original_Node (Condition (Right));\n+               Right        := Original_Node (Condition (Right));\n                Append_Paren := Append_Paren + 1;\n \n             when N_Aggregate =>\n                declare\n                   Aggr : constant Node_Id := Right;\n                   Sub  : Node_Id;\n+\n                begin\n                   Sub := First (Expressions (Aggr));\n                   while Present (Sub) loop\n                      if Sloc (Sub) > Sloc (Right) then\n                         Right := Sub;\n                      end if;\n+\n                      Next (Sub);\n                   end loop;\n \n@@ -852,6 +854,7 @@ package body Pprint is\n                      if Sloc (Sub) > Sloc (Right) then\n                         Right := Sub;\n                      end if;\n+\n                      Next (Sub);\n                   end loop;\n \n@@ -948,8 +951,10 @@ package body Pprint is\n                end;\n \n             else\n-               return Buffer (1 .. Index) & Expr_Name (Right, False)\n-                 & (1 .. Append_Paren => ')');\n+               return\n+                 Buffer (1 .. Index)\n+                   & Expr_Name (Right, False)\n+                   & (1 .. Append_Paren => ')');\n             end if;\n          end;\n       end;"}, {"sha": "93a1c12053d721d858c8b3c4a27b7f1b355df75c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -12371,9 +12371,9 @@ package body Sem_Ch12 is\n \n             else\n                declare\n+                  Act_Iface_List : Elist_Id;\n                   Iface          : Node_Id;\n                   Iface_Ent      : Entity_Id;\n-                  Act_Iface_List : Elist_Id;\n \n                   function Instance_Exists (I : Entity_Id) return Boolean;\n                   --  If the interface entity is declared in a generic unit,\n@@ -12413,8 +12413,8 @@ package body Sem_Ch12 is\n                   while Present (Iface) loop\n                      Iface_Ent := Get_Instance_Of (Entity (Iface));\n \n-                     if  Is_Ancestor (Iface_Ent, Act_T)\n-                      or else  Is_Progenitor (Iface_Ent, Act_T)\n+                     if Is_Ancestor (Iface_Ent, Act_T)\n+                      or else Is_Progenitor (Iface_Ent, Act_T)\n                      then\n                         null;\n \n@@ -12427,7 +12427,7 @@ package body Sem_Ch12 is\n                         Error_Msg_Name_1 := Chars (Act_T);\n                         Error_Msg_NE\n                           (\"Actual% must implement interface&\",\n-                            Actual,  Etype (Iface));\n+                           Actual, Etype (Iface));\n                      end if;\n \n                      Next (Iface);"}, {"sha": "8c5b26d500140224259d7843febd30a232ce76e9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -18804,8 +18804,9 @@ package body Sem_Ch3 is\n          --  (for example see the expansion of Deep_Adjust).\n \n          if Ekind (C) = E_Discriminant and then Present (N) then\n-            return not Comes_From_Source (N)\n-              or else not Is_Completely_Hidden (C);\n+            return\n+              not Comes_From_Source (N)\n+                or else not Is_Completely_Hidden (C);\n          else\n             return True;\n          end if;"}, {"sha": "ef475ffb155476e3ebe288e0b1127cd0293bb71a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -28543,18 +28543,18 @@ package body Sem_Prag is\n                      | Name_Off\n                   =>\n                      --  In CodePeer mode and GNATprove mode, we need to\n-                     --  consider all assertions, unless they are\n-                     --  disabled. Force Is_Checked on ignored assertions, in\n-                     --  particular because transformations of the AST may\n-                     --  depend on assertions being checked (e.g. the\n-                     --  translation of attribute 'Loop_Entry).\n+                     --  consider all assertions, unless they are disabled.\n+                     --  Force Is_Checked on ignored assertions, in particular\n+                     --  because transformations of the AST may depend on\n+                     --  assertions being checked (e.g. the translation of\n+                     --  attribute 'Loop_Entry).\n \n                      if CodePeer_Mode or GNATprove_Mode then\n                         Set_Is_Checked (N, True);\n                         Set_Is_Ignored (N, False);\n                      else\n-                        Set_Is_Ignored (N, True);\n                         Set_Is_Checked (N, False);\n+                        Set_Is_Ignored (N, True);\n                      end if;\n \n                   when Name_Check\n@@ -29787,9 +29787,8 @@ package body Sem_Prag is\n       --  Follow subprogram renaming chain\n \n       if Is_Subprogram (Def_Id)\n-        and then\n-          Nkind (Parent (Declaration_Node (Def_Id))) =\n-                                         N_Subprogram_Renaming_Declaration\n+        and then Nkind (Parent (Declaration_Node (Def_Id))) =\n+                   N_Subprogram_Renaming_Declaration\n         and then Present (Alias (Def_Id))\n       then\n          return Alias (Def_Id);"}, {"sha": "81a056ecff63e5e16cdacba60b6b5aebccfb3c9f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea43db62e4060461a01f116646ffcf3e87c15fb/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9ea43db62e4060461a01f116646ffcf3e87c15fb", "patch": "@@ -17878,8 +17878,8 @@ package body Sem_Util is\n    -----------------------------\n \n    procedure Iterate_Call_Parameters (Call : Node_Id) is\n-      Formal : Entity_Id := First_Formal (Get_Called_Entity (Call));\n       Actual : Node_Id   := First_Actual (Call);\n+      Formal : Entity_Id := First_Formal (Get_Called_Entity (Call));\n \n    begin\n       while Present (Formal) loop"}]}