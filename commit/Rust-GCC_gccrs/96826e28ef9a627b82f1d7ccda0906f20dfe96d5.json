{"sha": "96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY4MjZlMjhlZjlhNjI3YjgyZjFkN2NjZGEwOTA2ZjIwZGZlOTZkNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-11-13T18:08:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-11-13T18:08:25Z"}, "message": "utils2.c (gnat_protect_expr): Also protect only the address if the expression is the component of a dereference.\n\n\t* gcc-interface/utils2.c (gnat_protect_expr): Also protect only the\n\taddress if the expression is the component of a dereference.\n\tDo not use a reference type for the final temporary reference.\n\nFrom-SVN: r242358", "tree": {"sha": "a48f85ec10e25a6592a4c4e4dde297541dd8d217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a48f85ec10e25a6592a4c4e4dde297541dd8d217"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/comments", "author": null, "committer": null, "parents": [{"sha": "854c00dd69de6b13c1dc8d75948360420e4816d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854c00dd69de6b13c1dc8d75948360420e4816d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/854c00dd69de6b13c1dc8d75948360420e4816d6"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "f896d14820f3667774c6837b61219bb0a4ce1610", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "patch": "@@ -1,3 +1,9 @@\n+2016-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.c (gnat_protect_expr): Also protect only the\n+\taddress if the expression is the component of a dereference.\n+\tDo not use a reference type for the final temporary reference.\n+\n 2016-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Makefile.in (NO_OMIT_ADAFLAGS): Define."}, {"sha": "fc6f1b86bdc3800c0310324b53bb8089d0ac17e2", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "patch": "@@ -2586,6 +2586,12 @@ gnat_protect_expr (tree exp)\n       return t;\n     }\n \n+  /* Likewise if we're indirectly referencing part of something.  */\n+  if (code == COMPONENT_REF\n+      && TREE_CODE (TREE_OPERAND (exp, 0)) == INDIRECT_REF)\n+    return build3 (code, type, gnat_protect_expr (TREE_OPERAND (exp, 0)),\n+\t\t   TREE_OPERAND (exp, 1), NULL_TREE);\n+\n   /* If this is a COMPONENT_REF of a fat pointer, save the entire fat pointer.\n      This may be more efficient, but will also allow us to more easily find\n      the match for the PLACEHOLDER_EXPR.  */\n@@ -2605,9 +2611,7 @@ gnat_protect_expr (tree exp)\n   /* Otherwise reference, protect the address and dereference.  */\n   return\n     build_unary_op (INDIRECT_REF, type,\n-\t\t    save_expr (build_unary_op (ADDR_EXPR,\n-\t\t\t\t\t       build_reference_type (type),\n-\t\t\t\t\t       exp)));\n+\t\t    save_expr (build_unary_op (ADDR_EXPR, NULL_TREE, exp)));\n }\n \n /* This is equivalent to stabilize_reference_1 in tree.c but we take an extra"}, {"sha": "a273920d43b5bf7280f6a0a459eaaa75d2e26562", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "patch": "@@ -1,3 +1,7 @@\n+2016-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/renaming11.ad[sb]: New test.\n+\n 2016-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-c++-common/dump-ada-spec-6.c: New test."}, {"sha": "c9241c28d823d44090355232488c2ed2851099ae", "filename": "gcc/testsuite/gnat.dg/renaming11.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming11.adb?ref=96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do compile }\n+\n+package body Renaming11 is\n+\n+   function F (Arg: Ptr3) return Integer is\n+      V : Ptr1 renames Arg.all.all;\n+      I : Integer renames V.A(1);\n+   begin\n+      return I;\n+   end;\n+\n+end Renaming11;"}, {"sha": "d3dda72ede7a6806ffa199ccd8a904ca116a4f43", "filename": "gcc/testsuite/gnat.dg/renaming11.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96826e28ef9a627b82f1d7ccda0906f20dfe96d5/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frenaming11.ads?ref=96826e28ef9a627b82f1d7ccda0906f20dfe96d5", "patch": "@@ -0,0 +1,19 @@\n+package Renaming11 is\n+\n+   subtype Index_Type is Integer range 1..10;\n+\n+   type Arr is array (Index_Type range <>) of Integer;\n+\n+   type Rec (Min : Index_Type; Max : Index_Type) is record\n+      A : Arr (Min .. Max);\n+   end record;\n+\n+   type Ptr1 is access Rec;\n+\n+   type Ptr2 is access Ptr1;\n+\n+   type Ptr3 is access Ptr2;\n+\n+   function F (Arg : Ptr3) return Integer;\n+\n+end Renaming11;"}]}