{"sha": "19261b995bae88efa98e73cf9cf002aa1a4163ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkyNjFiOTk1YmFlODhlZmE5OGU3M2NmOWNmMDAyYWExYTQxNjNmZg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-04-30T17:01:34Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-04-30T17:01:34Z"}, "message": "[AArch64] Properly cost FABD pattern\n\n\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Handle pattern for\n\tfabd in ABS case.\n\nFrom-SVN: r222638", "tree": {"sha": "629fbbea5d97ea49db1550b3e85ff8255ce3da35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/629fbbea5d97ea49db1550b3e85ff8255ce3da35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19261b995bae88efa98e73cf9cf002aa1a4163ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19261b995bae88efa98e73cf9cf002aa1a4163ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19261b995bae88efa98e73cf9cf002aa1a4163ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19261b995bae88efa98e73cf9cf002aa1a4163ff/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6365da9ed071eaa11f25a5a872d5357e66da1db3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6365da9ed071eaa11f25a5a872d5357e66da1db3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6365da9ed071eaa11f25a5a872d5357e66da1db3"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "371078896d8b0fbbb6b27de02144d85f246bbd08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19261b995bae88efa98e73cf9cf002aa1a4163ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19261b995bae88efa98e73cf9cf002aa1a4163ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19261b995bae88efa98e73cf9cf002aa1a4163ff", "patch": "@@ -1,3 +1,8 @@\n+2015-04-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Handle pattern for\n+\tfabd in ABS case.\n+\n 2015-04-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md"}, {"sha": "f1aec673a9ab08ef9b789df9dc6928e7a0d82289", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19261b995bae88efa98e73cf9cf002aa1a4163ff/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19261b995bae88efa98e73cf9cf002aa1a4163ff/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=19261b995bae88efa98e73cf9cf002aa1a4163ff", "patch": "@@ -6387,7 +6387,19 @@ aarch64_rtx_costs (rtx x, int code, int outer ATTRIBUTE_UNUSED,\n     case ABS:\n       if (GET_MODE_CLASS (mode) == MODE_FLOAT)\n \t{\n-\t  /* FABS and FNEG are analogous.  */\n+\t  op0 = XEXP (x, 0);\n+\n+\t  /* FABD, which is analogous to FADD.  */\n+\t  if (GET_CODE (op0) == MINUS)\n+\t    {\n+\t      *cost += rtx_cost (XEXP (op0, 0), MINUS, 0, speed);\n+\t\t\t+ rtx_cost (XEXP (op0, 1), MINUS, 1, speed);\n+\t      if (speed)\n+\t\t*cost += extra_cost->fp[mode == DFmode].addsub;\n+\n+\t      return true;\n+\t    }\n+\t  /* Simple FABS is analogous to FNEG.  */\n \t  if (speed)\n \t    *cost += extra_cost->fp[mode == DFmode].neg;\n \t}"}]}