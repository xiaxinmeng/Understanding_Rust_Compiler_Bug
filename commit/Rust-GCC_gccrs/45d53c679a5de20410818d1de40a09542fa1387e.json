{"sha": "45d53c679a5de20410818d1de40a09542fa1387e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVkNTNjNjc5YTVkZTIwNDEwODE4ZDFkZTQwYTA5NTQyZmExMzg3ZQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@st.com", "date": "2019-09-10T07:39:47Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2019-09-10T07:39:47Z"}, "message": "[ARM/FDPIC v6 03/24] [ARM] FDPIC: Force FDPIC related options unless -mno-fdpic is provided\n\nIn FDPIC mode, we set -fPIE unless the user provides -fno-PIE, -fpie,\n-fPIC or -fpic: indeed FDPIC code is PIC, but we want to generate code\nfor executables rather than shared libraries by default.\n\nWe also make sure to use the --fdpic assembler option, and select the\nappropriate linker emulation.\n\nAt link time, we also default to -pie, unless we are generating a\nshared library or a relocatable file (-r). Note that static link is\nnot supported as it requires specifying the dynamic linker because the\nexecutable still has to relocate itself at startup.\n\nWe also force 'now' binding since lazy binding is not supported.\n\nWe should also apply the same behavior for -Wl,-Ur as for -r, but I\ncouldn't find how to describe that in the specs fragment.\n\n2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n\tMicka\u00ebl Gu\u00ean\u00e9 <mickael.guene@st.com>\n\n\tgcc/\n\t* config.gcc: Handle arm*-*-uclinuxfdpiceabi.\n\t* config/arm/bpabi.h (TARGET_FDPIC_ASM_SPEC): New.\n\t(SUBTARGET_EXTRA_ASM_SPEC): Use TARGET_FDPIC_ASM_SPEC.\n\t* config/arm/linux-eabi.h (FDPIC_CC1_SPEC): New.\n\t(CC1_SPEC): Use FDPIC_CC1_SPEC.\n\t(MUSL_DYNAMIC_LINKER): Add -fdpic suffix when needed.\n\t* config/arm/uclinuxfdpiceabi.h: New file.\n\n\tlibsanitizer/\n\t* configure.tgt (arm*-*-*fdpiceabi): Sanitizers are\n\tunsupported in this configuration.\n\n\n\nCo-Authored-By: Micka\u00ebl Gu\u00ean\u00e9 <mickael.guene@st.com>\n\nFrom-SVN: r275565", "tree": {"sha": "4d1bb02b7859eb9487b0c2129cec522d9c7a8ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d1bb02b7859eb9487b0c2129cec522d9c7a8ca3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45d53c679a5de20410818d1de40a09542fa1387e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d53c679a5de20410818d1de40a09542fa1387e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d53c679a5de20410818d1de40a09542fa1387e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d53c679a5de20410818d1de40a09542fa1387e/comments", "author": null, "committer": null, "parents": [{"sha": "b1e21e5a5d19b436f948710e09157c5b3244f541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e21e5a5d19b436f948710e09157c5b3244f541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1e21e5a5d19b436f948710e09157c5b3244f541"}], "stats": {"total": 93, "additions": 89, "deletions": 4}, "files": [{"sha": "90c7ecd4e189fee8c80d00388cee5611795600c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -1,6 +1,17 @@\n 2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9 <mickael.guene@st.com>\n \n-        * config.gcc: Handle *-*-uclinuxfdpiceabi.\n+\t* config.gcc: Handle arm*-*-uclinuxfdpiceabi.\n+\t* config/arm/bpabi.h (TARGET_FDPIC_ASM_SPEC): New.\n+\t(SUBTARGET_EXTRA_ASM_SPEC): Use TARGET_FDPIC_ASM_SPEC.\n+\t* config/arm/linux-eabi.h (FDPIC_CC1_SPEC): New.\n+\t(CC1_SPEC): Use FDPIC_CC1_SPEC.\n+\t(MUSL_DYNAMIC_LINKER): Add -fdpic suffix when needed.\n+\t* config/arm/uclinuxfdpiceabi.h: New file.\n+\n+2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n+\n+\t* config.gcc: Handle *-*-uclinuxfdpiceabi.\n \n 2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n \tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>"}, {"sha": "69d0a024d850c7f7a7b6faa7975fc581c36f4a2c", "filename": "gcc/config.gcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -1211,6 +1211,11 @@ arm*-*-linux-* | arm*-*-uclinuxfdpiceabi)\n \tesac\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n \ttm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h arm/aout.h arm/arm.h\"\n+\tcase $target in\n+\tarm*-*-uclinuxfdpiceabi)\n+\t    tm_file=\"$tm_file arm/uclinuxfdpiceabi.h\"\n+\t    ;;\n+\tesac\n \t# Generation of floating-point instructions requires at least ARMv5te.\n \tif [ \"$with_float\" = \"hard\" -o \"$with_float\" = \"softfp\" ] ; then\n \t    target_cpu_cname=\"arm10e\""}, {"sha": "75d9a99f2c4a89ed63a3a709501c7f7209ff7785", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -55,6 +55,8 @@\n #define TARGET_FIX_V4BX_SPEC \" %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*\"\\\n   \"|march=armv4|mcpu=fa526|mcpu=fa626:--fix-v4bx}\"\n \n+#define TARGET_FDPIC_ASM_SPEC \"\"\n+\n #define BE8_LINK_SPEC\t\t\t\t\t\t\t\\\n   \"%{!r:%{!mbe32:%:be8_linkopt(%{mlittle-endian:little}\"\t\t\\\n   \"\t\t\t       %{mbig-endian:big}\"\t\t\t\\\n@@ -64,7 +66,8 @@\n /* Tell the assembler to build BPABI binaries.  */\n #undef  SUBTARGET_EXTRA_ASM_SPEC\n #define SUBTARGET_EXTRA_ASM_SPEC \\\n-  \"%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=5}\" TARGET_FIX_V4BX_SPEC\n+  \"%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=5}\" TARGET_FIX_V4BX_SPEC \\\n+  TARGET_FDPIC_ASM_SPEC\n \n #ifndef SUBTARGET_EXTRA_LINK_SPEC\n #define SUBTARGET_EXTRA_LINK_SPEC \"\""}, {"sha": "b348971fe359942e358b11f10426a553101a511c", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -89,7 +89,7 @@\n #define MUSL_DYNAMIC_LINKER_E \"%{mbig-endian:eb}\"\n #endif\n #define MUSL_DYNAMIC_LINKER \\\n-  \"/lib/ld-musl-arm\" MUSL_DYNAMIC_LINKER_E \"%{mfloat-abi=hard:hf}.so.1\"\n+  \"/lib/ld-musl-arm\" MUSL_DYNAMIC_LINKER_E \"%{mfloat-abi=hard:hf}%{mfdpic:-fdpic}.so.1\"\n \n /* At this point, bpabi.h will have clobbered LINK_SPEC.  We want to\n    use the GNU/Linux version, not the generic BPABI version.  */\n@@ -101,9 +101,12 @@\n #undef  ASAN_CC1_SPEC\n #define ASAN_CC1_SPEC \"%{%:sanitize(address):-funwind-tables}\"\n \n+#define FDPIC_CC1_SPEC \"\"\n+\n #undef  CC1_SPEC\n #define CC1_SPEC\t\t\t\t\t\t\t\\\n-  LINUX_OR_ANDROID_CC (GNU_USER_TARGET_CC1_SPEC \" \" ASAN_CC1_SPEC,\t\\\n+  LINUX_OR_ANDROID_CC (GNU_USER_TARGET_CC1_SPEC \" \" ASAN_CC1_SPEC \" \"\t\\\n+\t\t       FDPIC_CC1_SPEC,\t\t\t\t\t\\\n \t\t       GNU_USER_TARGET_CC1_SPEC \" \" ASAN_CC1_SPEC \" \"\t\\\n \t\t       ANDROID_CC1_SPEC)\n "}, {"sha": "328adcb8269227a50c00f7d4aa924e1334c82f80", "filename": "gcc/config/arm/uclinuxfdpiceabi.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig%2Farm%2Fuclinuxfdpiceabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/gcc%2Fconfig%2Farm%2Fuclinuxfdpiceabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fuclinuxfdpiceabi.h?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -0,0 +1,54 @@\n+/* Configuration file for ARM GNU/Linux FDPIC EABI targets.\n+   Copyright (C) 2018,2019 Free Software Foundation, Inc.\n+   Contributed by STMicroelectronics.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* On uClibc EABI GNU/Linux, we want to force -mfdpic by default,\n+   which also means we produce PIE code by default.  */\n+#undef FDPIC_CC1_SPEC\n+#define FDPIC_CC1_SPEC \\\n+  \"%{!mno-fdpic:-mfdpic %{!fno-PIE:%{!fpie:%{!fPIC:%{!fpic: -fPIE}}}}}\"\n+\n+/* Add --fdpic assembler flag by default.  */\n+#undef TARGET_FDPIC_ASM_SPEC\n+#define TARGET_FDPIC_ASM_SPEC \"%{!mno-fdpic: --fdpic}\"\n+\n+/* TARGET_BIG_ENDIAN_DEFAULT is set in\n+   config.gcc for big endian configurations.  */\n+#if TARGET_BIG_ENDIAN_DEFAULT\n+#define TARGET_FDPIC_LINKER_EMULATION \"armelfb_linux_fdpiceabi\"\n+#else\n+#define TARGET_FDPIC_LINKER_EMULATION \"armelf_linux_fdpiceabi\"\n+#endif\n+\n+/* Unless we generate a shared library or a relocatable object, we\n+   force -pie.  */\n+/* -static is not supported, because we have to define the\n+   dynamic-linker, as we have some relocations to resolve at load\n+   time. We do not generate an error in case the user explictly passes\n+   the -dynamic-linker option to the linker.  */\n+#undef  SUBTARGET_EXTRA_LINK_SPEC\n+#define SUBTARGET_EXTRA_LINK_SPEC\t\t\t    \\\n+  \"%{!mno-fdpic: -m \" TARGET_FDPIC_LINKER_EMULATION\t    \\\n+   \"%{!shared:%{!r: -pie}} }\"\t\t\t\t    \\\n+  \"%{mno-fdpic: -m \" TARGET_LINKER_EMULATION \"}\"\t    \\\n+  \"%{!r:%{!mno-fdpic: -z now}}\"\n+\n+#undef\tSTARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{!mno-fdpic:%{!shared:crtreloc.o%s}} \" \\\n+  LINUX_OR_ANDROID_LD (GNU_USER_TARGET_STARTFILE_SPEC, ANDROID_STARTFILE_SPEC)"}, {"sha": "a28b63e09565a7bdd1c6a65031c3b78bea4f6143", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -1,3 +1,9 @@\n+2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9 <mickael.guene@st.com>\n+\n+\t* configure.tgt (arm*-*-*fdpiceabi): Sanitizers are\n+\tunsupported in this configuration.\n+\n 2019-08-16  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* LOCAL_PATCHES: Add r274585."}, {"sha": "714f2923605011329b54be7e9fcf7af44a0593fd", "filename": "libsanitizer/configure.tgt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45d53c679a5de20410818d1de40a09542fa1387e/libsanitizer%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45d53c679a5de20410818d1de40a09542fa1387e/libsanitizer%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.tgt?ref=45d53c679a5de20410818d1de40a09542fa1387e", "patch": "@@ -42,6 +42,9 @@ case \"${target}\" in\n \t;;\n   sparc*-*-solaris2.11*)\n \t;;\n+  arm*-*-*fdpiceabi)\n+\tUNSUPPORTED=1\n+\t;;\n   arm*-*-linux*)\n \t;;\n   mips*64*-*-linux*)"}]}