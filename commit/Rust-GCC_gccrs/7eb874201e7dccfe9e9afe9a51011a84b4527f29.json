{"sha": "7eb874201e7dccfe9e9afe9a51011a84b4527f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ViODc0MjAxZTdkY2NmZTllOWFmZTlhNTEwMTFhODRiNDUyN2YyOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-11-15T18:18:08Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-11-15T18:18:08Z"}, "message": "Use MEM_SIZE rather than GET_MODE_SIZE in dce.c\n\nUsing MEM_SIZE is more general, since it copes with cases where\ntargets are forced to use BLKmode references for whatever reason.\n\ngcc/\n2016-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\n\t* dce.c (check_argument_store): Pass the size instead of\n\tthe memory reference.\n\t(find_call_stack_args): Pass MEM_SIZE to check_argument_store.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r242446", "tree": {"sha": "0f2318e61053ad855bffc49f665bbaa25530e5e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f2318e61053ad855bffc49f665bbaa25530e5e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eb874201e7dccfe9e9afe9a51011a84b4527f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb874201e7dccfe9e9afe9a51011a84b4527f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb874201e7dccfe9e9afe9a51011a84b4527f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb874201e7dccfe9e9afe9a51011a84b4527f29/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "231314e360037e711922ece00817f8c2abc7aec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231314e360037e711922ece00817f8c2abc7aec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231314e360037e711922ece00817f8c2abc7aec0"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "bd61f70413ec9c82d2c6a28b5bba36cb68ce358f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb874201e7dccfe9e9afe9a51011a84b4527f29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb874201e7dccfe9e9afe9a51011a84b4527f29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7eb874201e7dccfe9e9afe9a51011a84b4527f29", "patch": "@@ -1,3 +1,11 @@\n+2016-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* dce.c (check_argument_store): Pass the size instead of\n+\tthe memory reference.\n+\t(find_call_stack_args): Pass MEM_SIZE to check_argument_store.\n+\n 2016-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "16340b644995cc3670d9bbaad356da20e3cb493e", "filename": "gcc/dce.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eb874201e7dccfe9e9afe9a51011a84b4527f29/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eb874201e7dccfe9e9afe9a51011a84b4527f29/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=7eb874201e7dccfe9e9afe9a51011a84b4527f29", "patch": "@@ -234,16 +234,17 @@ mark_nonreg_stores (rtx body, rtx_insn *insn, bool fast)\n }\n \n \n-/* Return true if store to MEM, starting OFF bytes from stack pointer,\n+/* Return true if a store to SIZE bytes, starting OFF bytes from stack pointer,\n    is a call argument store, and clear corresponding bits from SP_BYTES\n    bitmap if it is.  */\n \n static bool\n-check_argument_store (rtx mem, HOST_WIDE_INT off, HOST_WIDE_INT min_sp_off,\n-\t\t      HOST_WIDE_INT max_sp_off, bitmap sp_bytes)\n+check_argument_store (HOST_WIDE_INT size, HOST_WIDE_INT off,\n+\t\t      HOST_WIDE_INT min_sp_off, HOST_WIDE_INT max_sp_off,\n+\t\t      bitmap sp_bytes)\n {\n   HOST_WIDE_INT byte;\n-  for (byte = off; byte < off + GET_MODE_SIZE (GET_MODE (mem)); byte++)\n+  for (byte = off; byte < off + size; byte++)\n     {\n       if (byte < min_sp_off\n \t  || byte >= max_sp_off\n@@ -468,8 +469,8 @@ find_call_stack_args (rtx_call_insn *call_insn, bool do_mark, bool fast,\n \t    break;\n \t}\n \n-      if (GET_MODE_SIZE (GET_MODE (mem)) == 0\n-\t  || !check_argument_store (mem, off, min_sp_off,\n+      if (!MEM_SIZE_KNOWN_P (mem)\n+\t  || !check_argument_store (MEM_SIZE (mem), off, min_sp_off,\n \t\t\t\t    max_sp_off, sp_bytes))\n \tbreak;\n "}]}