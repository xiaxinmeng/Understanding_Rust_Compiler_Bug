{"sha": "d39367fa82d95b646f0587a442156069100ee245", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5MzY3ZmE4MmQ5NWI2NDZmMDU4N2E0NDIxNTYwNjkxMDBlZTI0NQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-07T13:40:33Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-18T18:46:32Z"}, "message": "configure: Allow host fragments to react to --enable-host-shared.\n\nThis makes the host_shared value available to host makefile\nfragments.\n\nIt uses this to adjust Darwin's mdynamic-no-pic in the case that\nshared host resources are required.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nChangeLog:\n\n\t* Makefile.in: Regenerate.\n\t* Makefile.tpl: Make the state of the configured host\n\tshared flag available to makefile fragements.\n\nconfig/ChangeLog:\n\n\t* mh-darwin: Require a non-shared host configuration to\n\tenable  mdynamic-no-pic where that is supported.", "tree": {"sha": "274ba48f97736f574e06a1bddb288ce68d4fd51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/274ba48f97736f574e06a1bddb288ce68d4fd51e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d39367fa82d95b646f0587a442156069100ee245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39367fa82d95b646f0587a442156069100ee245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39367fa82d95b646f0587a442156069100ee245", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39367fa82d95b646f0587a442156069100ee245/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2aa4e0b3b5053df8f5853d9ed29022ff0d3ecf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2aa4e0b3b5053df8f5853d9ed29022ff0d3ecf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2aa4e0b3b5053df8f5853d9ed29022ff0d3ecf6"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "5c85fcc5dd012693483f62ad550be71f08bd707e", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39367fa82d95b646f0587a442156069100ee245/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39367fa82d95b646f0587a442156069100ee245/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=d39367fa82d95b646f0587a442156069100ee245", "patch": "@@ -109,6 +109,9 @@ RPATH_ENVVAR = @RPATH_ENVVAR@\n # executables in PATH.\n GCC_SHLIB_SUBDIR = @GCC_SHLIB_SUBDIR@\n \n+# If the build should make suitable code for shared host resources.\n+host_shared = @host_shared@\n+\n # Build programs are put under this directory.\n BUILD_SUBDIR = @build_subdir@\n # This is set by the configure script to the arguments to use when configuring"}, {"sha": "9adf4f947285a155c2865cfa7da00c746ffb796e", "filename": "Makefile.tpl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39367fa82d95b646f0587a442156069100ee245/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39367fa82d95b646f0587a442156069100ee245/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=d39367fa82d95b646f0587a442156069100ee245", "patch": "@@ -112,6 +112,9 @@ RPATH_ENVVAR = @RPATH_ENVVAR@\n # executables in PATH.\n GCC_SHLIB_SUBDIR = @GCC_SHLIB_SUBDIR@\n \n+# If the build should make suitable code for shared host resources.\n+host_shared = @host_shared@\n+\n # Build programs are put under this directory.\n BUILD_SUBDIR = @build_subdir@\n # This is set by the configure script to the arguments to use when configuring"}, {"sha": "b72835ae953ffd7e6bfaae1a5ac43ceaaa803f13", "filename": "config/mh-darwin", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39367fa82d95b646f0587a442156069100ee245/config%2Fmh-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39367fa82d95b646f0587a442156069100ee245/config%2Fmh-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-darwin?ref=d39367fa82d95b646f0587a442156069100ee245", "patch": "@@ -11,18 +11,26 @@\n # non-bootstrapped compiler), later stages will be built by GCC which supports\n # the required flags.\n \n+# We cannot use mdynamic-no-pic when building shared host resources.\n+\n+ifeq (${host_shared},no)\n BOOTSTRAP_TOOL_CAN_USE_MDYNAMIC_NO_PIC := $(shell \\\n   $(CC) -S -xc /dev/null -o /dev/null -Werror -mno-dynamic-no-pic 2>/dev/null \\\n   && echo true)\n+else\n+BOOTSTRAP_TOOL_CAN_USE_MDYNAMIC_NO_PIC := false\n+endif\n \n @if gcc-bootstrap\n ifeq (${BOOTSTRAP_TOOL_CAN_USE_MDYNAMIC_NO_PIC},true)\n STAGE1_CFLAGS += -mdynamic-no-pic\n else\n STAGE1_CFLAGS += -fPIC\n endif\n+ifeq (${host_shared},no)\n # Add -mdynamic-no-pic to later stages when we know it is built with GCC.\n BOOT_CFLAGS += -mdynamic-no-pic\n+endif\n @endif gcc-bootstrap\n \n @unless gcc-bootstrap"}]}