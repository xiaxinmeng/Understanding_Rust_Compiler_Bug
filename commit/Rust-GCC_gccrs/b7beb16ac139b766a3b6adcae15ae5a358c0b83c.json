{"sha": "b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdiZWIxNmFjMTM5Yjc2NmEzYjZhZGNhZTE1YWU1YTM1OGMwYjgzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-10-10T20:48:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-10-10T20:48:51Z"}, "message": "C++17 class deduction issues\n\n\tPR c++/77890\n\tPR c++/77912\n\t* pt.c (do_class_deduction): Set cp_unevaluated_operand.\n\t(tsubst) [TEMPLATE_TYPE_PARM]: Copy CLASS_PLACEHOLDER_TEMPLATE.\n\nFrom-SVN: r240948", "tree": {"sha": "28cccc06bed0e8109e1f1c55143e26b1b8a89c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28cccc06bed0e8109e1f1c55143e26b1b8a89c43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "ff0435e62eaa840093f68e8674074b28b0dc1a2e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "patch": "@@ -1,3 +1,10 @@\n+2016-10-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/77890\n+\tPR c++/77912\n+\t* pt.c (do_class_deduction): Set cp_unevaluated_operand.\n+\t(tsubst) [TEMPLATE_TYPE_PARM]: Copy CLASS_PLACEHOLDER_TEMPLATE.\n+\n 2016-10-08  Jason Merrill  <jason@redhat.com>\n \n \t* cp-gimplify.c (cp_fold): Add variable name."}, {"sha": "28b1c987153e696fa8012de09cf8f18c233d5d1e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "patch": "@@ -13233,11 +13233,15 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\tTYPE_POINTER_TO (r) = NULL_TREE;\n \t\tTYPE_REFERENCE_TO (r) = NULL_TREE;\n \n-\t\t/* Propagate constraints on placeholders.  */\n                 if (TREE_CODE (t) == TEMPLATE_TYPE_PARM)\n-                  if (tree constr = PLACEHOLDER_TYPE_CONSTRAINTS (t))\n-\t\t    PLACEHOLDER_TYPE_CONSTRAINTS (r)\n-\t\t      = tsubst_constraint (constr, args, complain, in_decl);\n+\t\t  {\n+\t\t    /* Propagate constraints on placeholders.  */\n+\t\t    if (tree constr = PLACEHOLDER_TYPE_CONSTRAINTS (t))\n+\t\t      PLACEHOLDER_TYPE_CONSTRAINTS (r)\n+\t\t\t= tsubst_constraint (constr, args, complain, in_decl);\n+\t\t    else if (tree pl = CLASS_PLACEHOLDER_TEMPLATE (t))\n+\t\t      CLASS_PLACEHOLDER_TEMPLATE (r) = pl;\n+\t\t  }\n \n \t\tif (TREE_CODE (r) == TEMPLATE_TEMPLATE_PARM)\n \t\t  /* We have reduced the level of the template\n@@ -24431,9 +24435,10 @@ do_class_deduction (tree tmpl, tree init, tsubst_flags_t complain)\n       return error_mark_node;\n     }\n \n+  ++cp_unevaluated_operand;\n   tree t = build_new_function_call (cands, &args, /*koenig*/false,\n \t\t\t\t    complain|tf_decltype);\n-\n+  --cp_unevaluated_operand;\n   release_tree_vector (args);\n \n   return TREE_TYPE (t);"}, {"sha": "38327d1c6c3047a3a033f0d07cc6a76732a63e45", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction19.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction19.C?ref=b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/77912\n+// { dg-options -std=c++1z }\n+\n+template<class T> struct S{S(T){}}; \n+\n+//error: invalid use of template type parameter 'S'\n+template<class T> auto f(T t){return S(t);}\n+\n+int main()\n+{\n+  //fails\n+  f(42);\n+\n+  //fails\n+  //error: invalid use of template type parameter 'S'\n+  [](auto a){return S(a);}(42); \n+\n+  //works\n+  [](int a){return S(a);}(42);\n+}"}, {"sha": "58e8f7dca76787c3271351ad0f94b61375ad70c8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction20.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7beb16ac139b766a3b6adcae15ae5a358c0b83c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction20.C?ref=b7beb16ac139b766a3b6adcae15ae5a358c0b83c", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/77890\n+// { dg-options -std=c++1z }\n+\n+template<class F> struct S{S(F&&f){}}; \n+void f()\n+{\n+  S([]{});\n+}\n+\n+template <typename TF>\n+struct scope_guard : TF\n+{\n+    scope_guard(TF f) : TF{f} { }\n+    ~scope_guard() { (*this)(); }\n+};\n+\n+void g() \n+{\n+    struct K { void operator()() {} };\n+    scope_guard _{K{}};\n+}"}]}