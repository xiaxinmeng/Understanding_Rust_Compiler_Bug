{"sha": "61289ca3b2138024652663c1e547e61f14ffa6f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEyODljYTNiMjEzODAyNDY1MjY2M2MxZTU0N2U2MWYxNGZmYTZmOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-09-01T13:08:44Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-09-01T13:08:44Z"}, "message": "cp-tree.h (DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION): New macro.\n\n\t* cp-tree.h (DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION): New macro.\n\t* decl2.c (import_export_decl): Likewise.\n\t* pt.c (instantiate_decl): Use it.\n\nFrom-SVN: r22160", "tree": {"sha": "31c7a2ef347a8bcf594e7e004563551c5beb6079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31c7a2ef347a8bcf594e7e004563551c5beb6079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61289ca3b2138024652663c1e547e61f14ffa6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61289ca3b2138024652663c1e547e61f14ffa6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61289ca3b2138024652663c1e547e61f14ffa6f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61289ca3b2138024652663c1e547e61f14ffa6f9/comments", "author": null, "committer": null, "parents": [{"sha": "2c2b32dc364221b254133fd364ca47ea15e07ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2b32dc364221b254133fd364ca47ea15e07ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2b32dc364221b254133fd364ca47ea15e07ba5"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "c19dcd7e272c9fb8916dc3d63cfeed520e0e47be", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61289ca3b2138024652663c1e547e61f14ffa6f9", "patch": "@@ -1,3 +1,9 @@\n+1998-09-01  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* cp-tree.h (DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION): New macro.\n+\t* decl2.c (import_export_decl): Likewise.\n+\t* pt.c (instantiate_decl): Use it.\n+\n 1998-09-01  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (lookup_name_real): Also do implicit typename thing for"}, {"sha": "19d14fd754d8c6b928b61956e96f4dbffd5b1ace", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=61289ca3b2138024652663c1e547e61f14ffa6f9", "patch": "@@ -1724,6 +1724,16 @@ extern int flag_new_for_scope;\n #define SET_CLASSTYPE_EXPLICIT_INSTANTIATION(NODE) \\\n   (CLASSTYPE_USE_TEMPLATE(NODE) = 3)\n \n+/* Non-zero if DECL is a friend function which is an instantiation\n+   from the point of view of the compiler, but not from the point of\n+   view of the language.  For example given:\n+      template <class T> struct S { friend void f(T) {}; };\n+   the declaration of `void f(int)' generated when S<int> is\n+   instantiated will not be a DECL_TEMPLATE_INSTANTIATION, but will be\n+   a DECL_FRIEND_PSUEDO_TEMPLATE_INSTANTIATION.  */\n+#define DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION(DECL) \\\n+  (DECL_TEMPLATE_INFO (DECL) && !DECL_USE_TEMPLATE (DECL))\n+\n /* Non-zero iff we are currently processing a declaration for an\n    entity with its own template parameter list, and which is not a\n    full specialization.  */"}, {"sha": "1359475f4860c4266a281b796fd12f9013a6bc17", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=61289ca3b2138024652663c1e547e61f14ffa6f9", "patch": "@@ -2837,10 +2837,12 @@ import_export_decl (decl)\n   if (DECL_INTERFACE_KNOWN (decl))\n     return;\n \n-  if (DECL_TEMPLATE_INSTANTIATION (decl))\n+  if (DECL_TEMPLATE_INSTANTIATION (decl)\n+      || DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (decl))\n     {\n       DECL_NOT_REALLY_EXTERN (decl) = 1;\n-      if (DECL_IMPLICIT_INSTANTIATION (decl)\n+      if ((DECL_IMPLICIT_INSTANTIATION (decl)\n+\t   || DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (decl))\n \t  && (flag_implicit_templates || DECL_THIS_INLINE (decl)))\n \t{\n \t  if (!TREE_PUBLIC (decl))"}, {"sha": "f557d04b56b35eab2a59a6e61ebf036876d13d2d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=61289ca3b2138024652663c1e547e61f14ffa6f9", "patch": "@@ -7939,8 +7939,7 @@ instantiate_decl (d)\n \t    we don't need to look any further.  That's what the check for\n \t    DECL_INITIAL is for.  */\n \t|| (TREE_CODE (d) == FUNCTION_DECL\n-\t    && DECL_TEMPLATE_INFO (td) \n-\t    && !DECL_TEMPLATE_SPECIALIZATION (td)\n+\t    && DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (td)\n \t    && !DECL_INITIAL (DECL_TEMPLATE_RESULT (td)));\n        )\n     {"}, {"sha": "5feec1a06d76137ea8b44839ad0c1fd8b4e35528", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend33.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61289ca3b2138024652663c1e547e61f14ffa6f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend33.C?ref=61289ca3b2138024652663c1e547e61f14ffa6f9", "patch": "@@ -0,0 +1,28 @@\n+// Build don't run:\n+// Special g++ Options: -g\n+\n+template <class P1>\n+struct S1\n+{\n+  struct SS1\n+  {\n+  };\n+  friend void Foo (const SS1& ss1)\n+    {\n+    }\n+};\n+\n+template <class P1>\n+void Foo(const S1<P1>& s1)\n+{\n+  typedef typename S1<P1>::SS1 TYPE;\n+  TYPE t;\n+  Foo(t);\n+}\n+\n+int main ()\n+{\n+  S1<double> obj;\n+  Foo(obj);\n+}\n+"}]}