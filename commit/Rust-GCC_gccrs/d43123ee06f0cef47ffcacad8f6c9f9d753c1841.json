{"sha": "d43123ee06f0cef47ffcacad8f6c9f9d753c1841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQzMTIzZWUwNmYwY2VmNDdmZmNhY2FkOGY2YzlmOWQ3NTNjMTg0MQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-06-19T15:14:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:06Z"}, "message": "[Ada] Do not remove side effects from any object declarations in SPARK\n\ngcc/ada/\n\n\t* exp_util.adb (Remove_Side_Effects): Move special-casing for\n\tGNATprove to be applied to all object declarations.", "tree": {"sha": "40ec27c4fe9bd3e7747c49691b96776f0a8c8885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40ec27c4fe9bd3e7747c49691b96776f0a8c8885"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d43123ee06f0cef47ffcacad8f6c9f9d753c1841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43123ee06f0cef47ffcacad8f6c9f9d753c1841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43123ee06f0cef47ffcacad8f6c9f9d753c1841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43123ee06f0cef47ffcacad8f6c9f9d753c1841/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28290cb50c7dbf87458befeb3e295b5cb13560b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28290cb50c7dbf87458befeb3e295b5cb13560b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28290cb50c7dbf87458befeb3e295b5cb13560b5"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "13af3e8dce9eaf232929c015848fd3b0883a29da", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43123ee06f0cef47ffcacad8f6c9f9d753c1841/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43123ee06f0cef47ffcacad8f6c9f9d753c1841/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=d43123ee06f0cef47ffcacad8f6c9f9d753c1841", "patch": "@@ -11324,6 +11324,14 @@ package body Exp_Util is\n         and then Is_Class_Wide_Type (Etype (Exp))\n       then\n          return;\n+\n+      --  An expression which is in SPARK mode is considered side effect free\n+      --  if the resulting value is captured by a variable or a constant.\n+\n+      elsif GNATprove_Mode\n+        and then Nkind (Parent (Exp)) = N_Object_Declaration\n+      then\n+         return;\n       end if;\n \n       --  The remaining processing is done with all checks suppressed\n@@ -11576,15 +11584,6 @@ package body Exp_Util is\n       --  Otherwise we generate a reference to the expression\n \n       else\n-         --  An expression which is in SPARK mode is considered side effect\n-         --  free if the resulting value is captured by a variable or a\n-         --  constant.\n-\n-         if GNATprove_Mode\n-           and then Nkind (Parent (Exp)) = N_Object_Declaration\n-         then\n-            goto Leave;\n-\n          --  When generating C code we cannot consider side effect free object\n          --  declarations that have discriminants and are initialized by means\n          --  of a function call since on this target there is no secondary\n@@ -11598,7 +11597,7 @@ package body Exp_Util is\n          --  be identified here to avoid entering into a never-ending loop\n          --  generating internal object declarations.\n \n-         elsif Modify_Tree_For_C\n+         if Modify_Tree_For_C\n            and then Nkind (Parent (Exp)) = N_Object_Declaration\n            and then\n              (Nkind (Exp) /= N_Function_Call"}]}