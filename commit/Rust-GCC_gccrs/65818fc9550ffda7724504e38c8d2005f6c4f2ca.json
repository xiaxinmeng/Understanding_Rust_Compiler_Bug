{"sha": "65818fc9550ffda7724504e38c8d2005f6c4f2ca", "node_id": "C_kwDOANBUbNoAKDY1ODE4ZmM5NTUwZmZkYTc3MjQ1MDRlMzhjOGQyMDA1ZjZjNGYyY2E", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2022-05-06T16:53:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:19Z"}, "message": "[Ada] Enable using absolute paths in -fdiagnostics-format=json output\n\nThis commit makes GNAT use absolute paths in -fdiagnostics-format=json's\noutput when -gnatef is present on the command line. This makes life\neasier for tools that ingest GNAT's output.\n\ngcc/ada/\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n\tDocument new behavior.\n\t* errout.adb (Write_JSON_Location): Output absolute paths when\n\tneeded.\n\t* switch-c.adb (Scan_Front_End_Switches): Update -gnatef\n\tcomment.\n\t* usage.adb (Usage): Update description of -gnatef.\n\t* gnat_ugn.texi: Regenerate.", "tree": {"sha": "e48f3613a28644931423c1443b50b2459dd197d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e48f3613a28644931423c1443b50b2459dd197d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65818fc9550ffda7724504e38c8d2005f6c4f2ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65818fc9550ffda7724504e38c8d2005f6c4f2ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65818fc9550ffda7724504e38c8d2005f6c4f2ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65818fc9550ffda7724504e38c8d2005f6c4f2ca/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f2a0def548b7f2e4edb46e50fc0b72e84532cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f2a0def548b7f2e4edb46e50fc0b72e84532cc"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "29293e1f847f029a8b1c660fc503d4ce9971546b", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=65818fc9550ffda7724504e38c8d2005f6c4f2ca", "patch": "@@ -1238,7 +1238,8 @@ Alphabetical List of All Switches\n :switch:`-fdiagnostics-format=json`\n   Makes GNAT emit warning and error messages as JSON. Inhibits printing of\n   text warning and errors messages except if :switch:`-gnatv` or\n-  :switch:`-gnatl` are present.\n+  :switch:`-gnatl` are present. Uses absolute file paths when used along\n+  :switch:`-gnatef`.\n \n \n .. index:: -fdump-scos  (gcc)\n@@ -1582,7 +1583,8 @@ Alphabetical List of All Switches\n .. index:: -gnatef  (gcc)\n \n :switch:`-gnatef`\n-  Display full source path name in brief error messages.\n+  Display full source path name in brief error messages and absolute paths in\n+  :switch:`-fdiagnostics-format=json`'s output.\n \n \n .. index:: -gnateF  (gcc)"}, {"sha": "e3aa0ed6304c615e91fae32c4804520173489cc8", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=65818fc9550ffda7724504e38c8d2005f6c4f2ca", "patch": "@@ -51,6 +51,7 @@ with Sinfo.Utils;    use Sinfo.Utils;\n with Snames;         use Snames;\n with Stand;          use Stand;\n with Stylesw;        use Stylesw;\n+with System.OS_Lib;\n with Uname;          use Uname;\n \n package body Errout is\n@@ -2082,6 +2083,7 @@ package body Errout is\n       --  Return True if E is a continuation message.\n \n       procedure Write_JSON_Escaped_String (Str : String_Ptr);\n+      procedure Write_JSON_Escaped_String (Str : String);\n       --  Write each character of Str, taking care of preceding each quote and\n       --  backslash with a backslash. Note that this escaping differs from what\n       --  GCC does.\n@@ -2114,9 +2116,9 @@ package body Errout is\n       -- Write_JSON_Escaped_String --\n       -------------------------------\n \n-      procedure Write_JSON_Escaped_String (Str : String_Ptr) is\n+      procedure Write_JSON_Escaped_String (Str : String) is\n       begin\n-         for C of Str.all loop\n+         for C of Str loop\n             if C = '\"' or else C = '\\' then\n                Write_Char ('\\');\n             end if;\n@@ -2125,14 +2127,30 @@ package body Errout is\n          end loop;\n       end Write_JSON_Escaped_String;\n \n+      -------------------------------\n+      -- Write_JSON_Escaped_String --\n+      -------------------------------\n+\n+      procedure Write_JSON_Escaped_String (Str : String_Ptr) is\n+      begin\n+         Write_JSON_Escaped_String (Str.all);\n+      end Write_JSON_Escaped_String;\n+\n       -------------------------\n       -- Write_JSON_Location --\n       -------------------------\n \n       procedure Write_JSON_Location (Sptr : Source_Ptr) is\n+         Name : constant File_Name_Type :=\n+           Full_Ref_Name (Get_Source_File_Index (Sptr));\n       begin\n          Write_Str (\"{\"\"file\"\":\"\"\");\n-         Write_Name (Full_Ref_Name (Get_Source_File_Index (Sptr)));\n+         if Full_Path_Name_For_Brief_Errors then\n+            Write_JSON_Escaped_String\n+              (System.OS_Lib.Normalize_Pathname (Get_Name_String (Name)));\n+         else\n+            Write_Name (Name);\n+         end if;\n          Write_Str (\"\"\",\"\"line\"\":\");\n          Write_Int (Pos (Get_Physical_Line_Number (Sptr)));\n          Write_Str (\", \"\"column\"\":\");"}, {"sha": "a2a2990b6d766cc68ab84bf697e8d86f91c42283", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=65818fc9550ffda7724504e38c8d2005f6c4f2ca", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Apr 22, 2022\n+GNAT User's Guide for Native Platforms , May 24, 2022\n \n AdaCore\n \n@@ -8552,7 +8552,8 @@ dynamically allocated objects.\n \n Makes GNAT emit warning and error messages as JSON. Inhibits printing of\n text warning and errors messages except if @code{-gnatv} or\n-@code{-gnatl} are present.\n+@code{-gnatl} are present. Uses absolute file paths when used along\n+@code{-gnatef}.\n @end table\n \n @geindex -fdump-scos (gcc)\n@@ -9037,7 +9038,8 @@ produced at run time.\n \n @item @code{-gnatef}\n \n-Display full source path name in brief error messages.\n+Display full source path name in brief error messages and absolute paths in\n+@code{-fdiagnostics-format=json}\u2019s output.\n @end table\n \n @geindex -gnateF (gcc)\n@@ -29247,8 +29249,8 @@ to permit their use in free software.\n \n @printindex ge\n \n-@anchor{cf}@w{                              }\n @anchor{gnat_ugn/gnat_utility_programs switches-related-to-project-files}@w{                              }\n+@anchor{cf}@w{                              }\n \n @c %**end of body\n @bye"}, {"sha": "feac8bdaff58893bf0cea74170d61897b33f9b33", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=65818fc9550ffda7724504e38c8d2005f6c4f2ca", "patch": "@@ -603,7 +603,8 @@ package body Switch.C is\n                      Exception_Extra_Info := True;\n                      Ptr := Ptr + 1;\n \n-                  --  -gnatef (full source path for brief error messages)\n+                  --  -gnatef (full source path for brief error messages and\n+                  --  absolute paths for -fdiagnostics-format=json)\n \n                   when 'f' =>\n                      Store_Switch := False;"}, {"sha": "7d11ae536968d631bbac88328845c4ab39c2ae29", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65818fc9550ffda7724504e38c8d2005f6c4f2ca/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=65818fc9550ffda7724504e38c8d2005f6c4f2ca", "patch": "@@ -187,7 +187,7 @@ begin\n    --  Line for -gnatef switch\n \n    Write_Switch_Char (\"ef\");\n-   Write_Line (\"Full source path in brief error messages\");\n+   Write_Line (\"Full source path in brief error messages and JSON output\");\n \n    --  Line for -gnateF switch\n "}]}