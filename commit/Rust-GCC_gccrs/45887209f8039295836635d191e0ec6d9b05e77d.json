{"sha": "45887209f8039295836635d191e0ec6d9b05e77d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4ODcyMDlmODAzOTI5NTgzNjYzNWQxOTFlMGVjNmQ5YjA1ZTc3ZA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-04-17T12:37:05Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-04-17T12:37:05Z"}, "message": "enable -Woverloaded-virtual when available\n\ngcc/\n\t* configure.ac: Check for -Woverloaded-virtual and enable it if found.\n\t* configure: Regenerate.\n\nFrom-SVN: r209480", "tree": {"sha": "d5481f81b3fa9db53edac1fc7290b4b802b75450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5481f81b3fa9db53edac1fc7290b4b802b75450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45887209f8039295836635d191e0ec6d9b05e77d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45887209f8039295836635d191e0ec6d9b05e77d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45887209f8039295836635d191e0ec6d9b05e77d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45887209f8039295836635d191e0ec6d9b05e77d/comments", "author": null, "committer": null, "parents": [{"sha": "0481253d15607359bba77de453647773d157bec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0481253d15607359bba77de453647773d157bec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0481253d15607359bba77de453647773d157bec9"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "3fb035abcecff8464b19045b5639b0c943007eb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45887209f8039295836635d191e0ec6d9b05e77d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45887209f8039295836635d191e0ec6d9b05e77d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45887209f8039295836635d191e0ec6d9b05e77d", "patch": "@@ -1,3 +1,8 @@\n+2014-04-17  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* configure.ac: Check for -Woverloaded-virtual and enable it if found.\n+\t* configure: Regenerate.\n+\n 2014-04-17  Trevor Saunders  <tsaunders@mozilla.com>\n \t\n \t* passes.c (dump_one_pass): don't check pass->has_gate."}, {"sha": "bfb1525db69001897b92275585b43b19af3049c1", "filename": "gcc/configure", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45887209f8039295836635d191e0ec6d9b05e77d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45887209f8039295836635d191e0ec6d9b05e77d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=45887209f8039295836635d191e0ec6d9b05e77d", "patch": "@@ -6427,6 +6427,50 @@ fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n+save_CFLAGS=\"$CFLAGS\"\n+for real_option in -Woverloaded-virtual; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr x$real_option : 'x-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n+  as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n+$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  CFLAGS=\"$option\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$as_acx_Woption=yes\"\n+else\n+  eval \"$as_acx_Woption=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+eval ac_res=\\$$as_acx_Woption\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n+  strict_warn=\"$strict_warn${strict_warn:+ }$real_option\"\n+fi\n+  done\n+CFLAGS=\"$save_CFLAGS\"\n+\n c_strict_warn=\n save_CFLAGS=\"$CFLAGS\"\n for real_option in -Wold-style-definition -Wc++-compat; do\n@@ -17927,7 +17971,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17930 \"configure\"\n+#line 17974 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18033,7 +18077,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18036 \"configure\"\n+#line 18080 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "d7cae6cb673e8042f9c511667c48221eb30364ab", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45887209f8039295836635d191e0ec6d9b05e77d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45887209f8039295836635d191e0ec6d9b05e77d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=45887209f8039295836635d191e0ec6d9b05e77d", "patch": "@@ -339,6 +339,8 @@ ACX_PROG_CC_WARNING_OPTS(\n \t[c_loose_warn])\n ACX_PROG_CC_WARNING_OPTS(\n \tm4_quote(m4_do([-Wmissing-format-attribute])), [strict_warn])\n+ACX_PROG_CC_WARNING_OPTS(\n+\tm4_quote(m4_do([-Woverloaded-virtual])), [strict_warn])\n ACX_PROG_CC_WARNING_OPTS(\n \tm4_quote(m4_do([-Wold-style-definition -Wc++-compat])), [c_strict_warn])\n ACX_PROG_CC_WARNING_ALMOST_PEDANTIC("}]}