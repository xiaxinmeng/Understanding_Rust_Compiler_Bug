{"sha": "a00d74c4903b344910f1062e1746c15138c8f4b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwZDc0YzQ5MDNiMzQ0OTEwZjEwNjJlMTc0NmMxNTEzOGM4ZjRiMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-01T19:47:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-01T19:47:55Z"}, "message": "fs_path.h (path::_List): Use vector instead of list.\n\n\t* include/experimental/fs_path.h (path::_List): Use vector instead of\n\tlist.\n\t* python/libstdcxx/v6/printers.py (StdExpPathPrinter): Adapt.\n\t* src/filesystem/path.cc: Use std::prev instead of decrementing\n\trvalues. Fix whitespace.\n\t* testsuite/experimental/filesystem/path/decompose/parent_path.cc:\n\tDo not decrement iterators before begin.\n\nFrom-SVN: r222702", "tree": {"sha": "27fc9999afd8c9cdf4340b529b60b1eb0e1e7216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27fc9999afd8c9cdf4340b529b60b1eb0e1e7216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a00d74c4903b344910f1062e1746c15138c8f4b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00d74c4903b344910f1062e1746c15138c8f4b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00d74c4903b344910f1062e1746c15138c8f4b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00d74c4903b344910f1062e1746c15138c8f4b1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d532ea918144fc0fe34c81da78394efcff434d41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d532ea918144fc0fe34c81da78394efcff434d41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d532ea918144fc0fe34c81da78394efcff434d41"}], "stats": {"total": 78, "additions": 61, "deletions": 17}, "files": [{"sha": "8d559eb0975527357d8009715ecdfd1ec067cebd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a00d74c4903b344910f1062e1746c15138c8f4b1", "patch": "@@ -1,5 +1,13 @@\n 2015-05-01  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experimental/fs_path.h (path::_List): Use vector instead of\n+\tlist.\n+\t* python/libstdcxx/v6/printers.py (StdExpPathPrinter): Adapt.\n+\t* src/filesystem/path.cc: Use std::prev instead of decrementing\n+\trvalues. Fix whitespace.\n+\t* testsuite/experimental/filesystem/path/decompose/parent_path.cc:\n+\tDo not decrement iterators before begin.\n+\n \t* include/experimental/fs_dir.h: Fix use of non-reserved names.\n \t* include/experimental/fs_ops.h: Likewise.\n \t* include/experimental/fs_path.h: Likewise."}, {"sha": "e57a08bb35dc5876e584b97f54a273ab9af3e3a1", "filename": "libstdc++-v3/include/experimental/fs_path.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h?ref=a00d74c4903b344910f1062e1746c15138c8f4b1", "patch": "@@ -36,7 +36,7 @@\n \n #include <utility>\n #include <type_traits>\n-#include <list>\n+#include <vector>\n #include <locale>\n #include <iosfwd>\n #include <codecvt>\n@@ -430,7 +430,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n     string_type _M_pathname;\n \n     struct _Cmpt;\n-    using _List = std::list<_Cmpt>;\n+    using _List = _GLIBCXX_STD_C::vector<_Cmpt>;\n     _List _M_cmpts; // empty unless _M_type == _Type::_Multi\n     _Type _M_type = _Type::_Multi;\n   };"}, {"sha": "c6f96d737a4fba63093bd425bfd328008ced1c1f", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 44, "deletions": 9, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=a00d74c4903b344910f1062e1746c15138c8f4b1", "patch": "@@ -984,16 +984,51 @@ class StdExpPathPrinter:\n \n     def __init__ (self, typename, val):\n         self.val = val\n-        self.list_visualizer = gdb.default_visualizer(val['_M_cmpts'])\n+        start = self.val['_M_cmpts']['_M_impl']['_M_start']\n+        finish = self.val['_M_cmpts']['_M_impl']['_M_finish']\n+        self.num_cmpts = int (finish - start)\n+\n+    def _path_type(self):\n+        t = str(self.val['_M_type'])\n+        if t[-9:] == '_Root_dir':\n+            return \"root-directory\"\n+        if t[-10:] == '_Root_name':\n+            return \"root-name\"\n+        return None\n \n     def to_string (self):\n-        path = self.val ['_M_pathname']\n-        if self.list_visualizer:\n-            list_head = self.val['_M_cmpts']['_M_impl']['_M_node']\n-            if list_head.address != list_head['_M_next']:\n-                cmpts = self.list_visualizer.to_string()\n-                path = \"%s [Components %s]\" % (path, cmpts)\n-        return path\n+        path = \"%s\" % self.val ['_M_pathname']\n+        if self.num_cmpts == 0:\n+            t = self._path_type()\n+            if t:\n+                path = '%s [%s]' % (path, t)\n+        return \"filesystem::path %s\" % path\n+\n+    class _iterator(Iterator):\n+        def __init__(self, cmpts):\n+            self.item = cmpts['_M_impl']['_M_start']\n+            self.finish = cmpts['_M_impl']['_M_finish']\n+            self.count = 0\n+\n+        def __iter__(self):\n+            return self\n+\n+        def __next__(self):\n+            if self.item == self.finish:\n+                raise StopIteration\n+            item = self.item.dereference()\n+            count = self.count\n+            self.count = self.count + 1\n+            self.item = self.item + 1\n+            path = item['_M_pathname']\n+            t = StdExpPathPrinter(item.type.name, item)._path_type()\n+            if not t:\n+                t = count\n+            return ('[%s]' % t, path)\n+\n+    def children(self):\n+        return self._iterator(self.val['_M_cmpts'])\n+\n \n # A \"regular expression\" printer which conforms to the\n # \"SubPrettyPrinter\" protocol from gdb.printing.\n@@ -1383,7 +1418,7 @@ def build_libstdcxx_dictionary ():\n     # Filesystem TS components\n     libstdcxx_printer.add_version('std::experimental::filesystem::v1::',\n                                   'path', StdExpPathPrinter)\n-    libstdcxx_printer.add_version('std::experimental::filesystem::v1::__cxx11',\n+    libstdcxx_printer.add_version('std::experimental::filesystem::v1::__cxx11::',\n                                   'path', StdExpPathPrinter)\n \n     # Extensions."}, {"sha": "cc5780f1e145bc1978a48cf308da429e7a6300c8", "filename": "libstdc++-v3/src/filesystem/path.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc?ref=a00d74c4903b344910f1062e1746c15138c8f4b1", "patch": "@@ -35,7 +35,7 @@ path::remove_filename()\n     {\n       if (!_M_cmpts.empty())\n \t{\n-\t  auto cmpt = --_M_cmpts.end();\n+\t  auto cmpt = std::prev(_M_cmpts.end());\n \t  _M_pathname.erase(cmpt->_M_pos);\n \t  _M_cmpts.erase(cmpt);\n \t  _M_trim();\n@@ -109,7 +109,7 @@ path::compare(const path& p) const noexcept\n {\n   if (_M_type == _Type::_Multi && p._M_type == _Type::_Multi)\n     return do_compare(_M_cmpts.begin(), _M_cmpts.end(),\n-\t\t   p._M_cmpts.begin(), p._M_cmpts.end());\n+\t\t      p._M_cmpts.begin(), p._M_cmpts.end());\n   else if (_M_type == _Type::_Multi)\n     {\n       _Cmpt c[1] = { { p._M_pathname, p._M_type, 0 } };\n@@ -130,8 +130,7 @@ path::root_name() const\n   path __ret;\n   if (_M_type == _Type::_Root_name)\n     __ret = *this;\n-  else if (_M_cmpts.size()\n-      && _M_cmpts.begin()->_M_type == _Type::_Root_name)\n+  else if (_M_cmpts.size() && _M_cmpts.begin()->_M_type == _Type::_Root_name)\n     __ret = *_M_cmpts.begin();\n   return __ret;\n }\n@@ -203,8 +202,8 @@ path::parent_path() const\n   path __ret;\n   if (_M_cmpts.size() < 2)\n     return __ret;\n-  for (auto __it = _M_cmpts.begin(), __end = --_M_cmpts.end();\n-      __it != __end; ++__it)\n+  for (auto __it = _M_cmpts.begin(), __end = std::prev(_M_cmpts.end());\n+       __it != __end; ++__it)\n     {\n       __ret /= *__it;\n     }"}, {"sha": "41df1bfb59c3eeb6501e87ea3795e8720e030a7e", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/decompose/parent_path.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fdecompose%2Fparent_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00d74c4903b344910f1062e1746c15138c8f4b1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fdecompose%2Fparent_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fdecompose%2Fparent_path.cc?ref=a00d74c4903b344910f1062e1746c15138c8f4b1", "patch": "@@ -44,6 +44,8 @@ test02()\n {\n   for (const path& p : __gnu_test::test_paths)\n   {\n+    if (p.begin() == p.end())\n+      continue;\n     path pp;\n     for (auto i = p.begin(), end = --p.end(); i != end; ++i)\n     {"}]}