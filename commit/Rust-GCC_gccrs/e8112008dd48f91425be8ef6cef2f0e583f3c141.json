{"sha": "e8112008dd48f91425be8ef6cef2f0e583f3c141", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgxMTIwMDhkZDQ4ZjkxNDI1YmU4ZWY2Y2VmMmYwZTU4M2YzYzE0MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-13T13:31:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-13T13:31:00Z"}, "message": "(extendsfdf2): Undo 30 Nov 94 change.\n\n(extendsfdf2): Undo 30 Nov 94 change.  Use float_extend instead of\nSUBREG and restore fmr instruction for differing FPRs.\n\nFrom-SVN: r8923", "tree": {"sha": "6e7e1d90954f7bcabb16b1d52c652e7d76cf5c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e7e1d90954f7bcabb16b1d52c652e7d76cf5c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8112008dd48f91425be8ef6cef2f0e583f3c141", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8112008dd48f91425be8ef6cef2f0e583f3c141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8112008dd48f91425be8ef6cef2f0e583f3c141", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8112008dd48f91425be8ef6cef2f0e583f3c141/comments", "author": null, "committer": null, "parents": [{"sha": "98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c76e3c9c879cdd6e1c8599b9196bbf86a20977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c76e3c9c879cdd6e1c8599b9196bbf86a20977"}], "stats": {"total": 32, "additions": 10, "deletions": 22}, "files": [{"sha": "23279e7889f4db3775607ac0cc86223014d07ca6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8112008dd48f91425be8ef6cef2f0e583f3c141/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8112008dd48f91425be8ef6cef2f0e583f3c141/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e8112008dd48f91425be8ef6cef2f0e583f3c141", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description for IBM RISC System 6000 (POWER) for GNU C compiler\n-;; Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n+;; Copyright (C) 1990, 91, 92, 93, 94, 1995 Free Software Foundation, Inc.\n ;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n ;; This file is part of GNU CC.\n@@ -2500,37 +2500,25 @@\n ;; The only conversions we will do will be when storing to memory.  In that\n ;; case, we will use the \"frsp\" instruction before storing.\n ;;\n-;; SFmode values are stored in DFmode registers with the same format as\n-;; DFmode values, so float_extend is a no-op: treat as paradoxical subreg\n-;; using define_expand and define_split if made by combine.\n-;;\n ;; Note that when we store into a single-precision memory location, we need to\n ;; use the frsp insn first.  If the register being stored isn't dead, we\n ;; need a scratch register for the frsp.  But this is difficult when the store\n ;; is done by reload.  It is not incorrect to do the frsp on the register in\n ;; this case, we just lose precision that we would have otherwise gotten but\n ;; is not guaranteed.  Perhaps this should be tightened up at some point.\n \n-(define_expand \"extendsfdf2\"\n+(define_insn \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f\")\n-\t(match_operand:SF 1 \"gpc_reg_operand\" \"f\"))]\n+\t(float_extend:DF (match_operand:SF 1 \"gpc_reg_operand\" \"f\")))]\n   \"\"\n-  \"\n-{\n-  if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = force_reg (SFmode, operands[1]);\n-  operands[1] = gen_rtx (SUBREG, DFmode, operands[1], 0);\n-}\")\n-\n-(define_split\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-\t(float_extend:DF (match_operand:SF 1 \"gpc_reg_operand\" \"\")))]\n-  \"GET_CODE (operands[1]) != SUBREG\"\n-  [(set (match_dup 0) (match_dup 1))]\n-  \"\n+  \"*\n {\n-  operands[1] = gen_rtx (SUBREG, DFmode, operands[1], 0);\n-}\")\n+  if (REGNO (operands[0]) == REGNO (operands[1]))\n+    return \\\"\\\";\n+  else\n+    return \\\"fmr %0,%1\\\";\n+}\"\n+  [(set_attr \"type\" \"fp\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")"}]}