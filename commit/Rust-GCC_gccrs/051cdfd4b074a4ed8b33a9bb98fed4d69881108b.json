{"sha": "051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUxY2RmZDRiMDc0YTRlZDhiMzNhOWJiOThmZWQ0ZDY5ODgxMTA4Yg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-06-21T20:53:00Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-06-21T20:53:00Z"}, "message": "namelist_use_2.msg\n\nFrom-SVN: r101234", "tree": {"sha": "d546f7896ee537e008308112297760f651a70068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d546f7896ee537e008308112297760f651a70068"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/comments", "author": null, "committer": null, "parents": [{"sha": "15f9ce29807bd956147f285f76c0c3aaa7e17027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f9ce29807bd956147f285f76c0c3aaa7e17027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f9ce29807bd956147f285f76c0c3aaa7e17027"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "293bb29dbba2a5adb4c2d751940f74cbdd09fab8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "patch": "@@ -1,3 +1,9 @@\n+2005-06-21  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/22010\n+\t* gfortran.dg/namelist_use.f90: New.\n+\t* gfortran.dg/namelist_use_only.f90: New.\n+\n 2005-06-21  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/vrp15.c: New test."}, {"sha": "bbbb178c99b800f2014c8ef355822eeec8f0134f", "filename": "gcc/testsuite/gfortran.dg/namelist_use.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90?ref=051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do run }\n+! This tests the fix for PR22010, where namelists were not being written to\n+! and read back from modules.  It has two namelists: one that is USE\n+! associated and another that is concatenated by USE and host association.\n+!\n+! Contributed by Paul Thomas  pault@gcc.gnu.org\n+!\n+module global\n+  character*4 :: aa\n+  integer :: ii\n+  real    :: rr\n+  namelist /nml1/ aa, ii, rr\n+  namelist /nml2/ aa\n+end module global\n+program namelist_use\n+  use global\n+  real    :: rrr\n+  namelist /nml2/ ii, rrr    ! Concatenate use and host associated variables.\n+  open (10, status=\"scratch\")\n+  write (10,*) \"&NML1 aa=lmno ii=1 rr=2.5 /\"\n+  write (10,*) \"&NML2 aa=pqrs ii=2 rrr=3.5 /\"\n+  rewind (10)\n+  read (10,nml=nml1,iostat=i)\n+  if ((i.ne.0).or.(aa.ne.\"lmno\").or.(ii.ne.1).or.(rr.ne.2.5)) call abort ()\n+\n+  read (10,nml=nml2,iostat=i) \n+  if ((i.ne.0).or.(aa.ne.\"pqrs\").or.(ii.ne.2).or.(rrr.ne.3.5)) call abort ()\n+\n+  close (10)\n+end program namelist_use"}, {"sha": "f7a948c851b5b9518ee513af9aeadbefb3ed5dbe", "filename": "gcc/testsuite/gfortran.dg/namelist_use_only.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/051cdfd4b074a4ed8b33a9bb98fed4d69881108b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90?ref=051cdfd4b074a4ed8b33a9bb98fed4d69881108b", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+! This tests the fix for PR22010, where namelists were not being written to\n+! and read back from modules.  It checks that namelists from modules that are\n+! selected by an ONLY declaration work correctly, even when the variables in\n+! the namelist are not host associated. Note that renaming a namelist by USE\n+! association is not allowed by the standard and this is trapped in module.c.\n+!\n+! Contributed by Paul Thomas  pault@gcc.gnu.org\n+!\n+module global\n+  character*4 :: aa, aaa\n+  integer :: ii, iii\n+  real    :: rr, rrr\n+  namelist /nml1/ aa, ii, rr\n+  namelist /nml2/ aaa, iii, rrr\n+contains\n+  logical function foo()\n+    foo = (aaa.ne.\"pqrs\").or.(iii.ne.2).or.(rrr.ne.3.5)\n+  end function foo\n+end module global\n+program namelist_use_only\n+  use global, only : nml1, aa, ii, rr\n+  use global, only : nml2, rrrr=>rrr, foo\n+  open (10, status=\"scratch\")\n+  write (10,*) \"&NML1 aa=lmno ii=1 rr=2.5 /\"\n+  write (10,*) \"&NML2 aaa=pqrs iii=2 rrr=3.5 /\"\n+  rewind (10)\n+  read (10,nml=nml1,iostat=i)\n+  if ((i.ne.0).or.(aa.ne.\"lmno\").or.(ii.ne.1).or.(rr.ne.2.5)) call abort ()\n+\n+  read (10,nml=nml2,iostat=i) \n+  if ((i.ne.0).or.(rrrr.ne.3.5).or.foo()) call abort ()\n+  close (10)\n+end program namelist_use_only"}]}