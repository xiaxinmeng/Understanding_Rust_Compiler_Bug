{"sha": "b81194219bfbe82e3a10f9aea2a93affb160642f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxMTk0MjE5YmZiZTgyZTNhMTBmOWFlYTJhOTNhZmZiMTYwNjQyZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-04-13T12:16:41Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-04-13T12:16:41Z"}, "message": "natSystem.cc (arraycopy): Don't always use jbyteArray; instead switch on actual element type.\n\n\t* java/lang/natSystem.cc (arraycopy): Don't always use jbyteArray;\n\tinstead switch on actual element type.\n\nFrom-SVN: r26405", "tree": {"sha": "877408ea7b9dd4b3d0109b2d5dd6539e4ea60951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/877408ea7b9dd4b3d0109b2d5dd6539e4ea60951"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b81194219bfbe82e3a10f9aea2a93affb160642f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81194219bfbe82e3a10f9aea2a93affb160642f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81194219bfbe82e3a10f9aea2a93affb160642f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81194219bfbe82e3a10f9aea2a93affb160642f/comments", "author": null, "committer": null, "parents": [{"sha": "3b5e5fb33f7b727056fc3d0e37da1d11cbfd9f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b5e5fb33f7b727056fc3d0e37da1d11cbfd9f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b5e5fb33f7b727056fc3d0e37da1d11cbfd9f62"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "1cd361cafe48c239037f14fe633b1e6d1333c8d3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81194219bfbe82e3a10f9aea2a93affb160642f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81194219bfbe82e3a10f9aea2a93affb160642f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b81194219bfbe82e3a10f9aea2a93affb160642f", "patch": "@@ -1,5 +1,8 @@\n 1999-04-13  Tom Tromey  <tromey@cygnus.com>\n \n+\t* java/lang/natSystem.cc (arraycopy): Don't always use jbyteArray;\n+\tinstead switch on actual element type.\n+\n \t* Makefile.in: Rebuilt.\n \t* Makefile.am (AM_MAKEFLAGS): Added JC1FLAGS.\n "}, {"sha": "10acfceafa3f56af52dea19e5e84d6b035466be9", "filename": "libjava/java/lang/natSystem.cc", "status": "modified", "additions": 51, "deletions": 9, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81194219bfbe82e3a10f9aea2a93affb160642f/libjava%2Fjava%2Flang%2FnatSystem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81194219bfbe82e3a10f9aea2a93affb160642f/libjava%2Fjava%2Flang%2FnatSystem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatSystem.cc?ref=b81194219bfbe82e3a10f9aea2a93affb160642f", "patch": "@@ -116,15 +116,57 @@ java::lang::System::arraycopy (jobject src, jint src_offset,\n   const bool prim = src_comp->isPrimitive();\n   if (prim || dst_comp->isAssignableFrom(src_comp) || src == dst)\n     {\n-      const size_t size = prim ? src_comp->size() \n-\t: sizeof elements((jobjectArray)src)[0];\n-\n-      // We need a particular type to get the pointer to the data.  So\n-      // we choose bytes.\n-      char *src_elts = (((char *) elements ((jbyteArray) src))\n-\t\t\t+ src_offset * size);\n-      char *dst_elts = (((char *) elements ((jbyteArray) dst))\n-\t\t\t+ dst_offset * size);\n+      const size_t size = (prim ? src_comp->size()\n+\t\t\t   : sizeof elements((jobjectArray)src)[0]);\n+\n+      // In an ideal world we would do this via a virtual function in\n+      // __JArray.  However, we can't have virtual functions in\n+      // __JArray due to the need to copy an array's virtual table in\n+      // _Jv_FindArrayClass.\n+      // We can't just pick a single subtype of __JArray to use due to\n+      // alignment concerns.\n+      char *src_elts = NULL;\n+      if (! prim)\n+\tsrc_elts = (char *) elements ((jobjectArray) src);\n+      else if (src_comp == JvPrimClass (byte))\n+\tsrc_elts = (char *) elements ((jbyteArray) src);\n+      else if (src_comp == JvPrimClass (short))\n+\tsrc_elts = (char *) elements ((jshortArray) src);\n+      else if (src_comp == JvPrimClass (int))\n+\tsrc_elts = (char *) elements ((jintArray) src);\n+      else if (src_comp == JvPrimClass (long))\n+\tsrc_elts = (char *) elements ((jlongArray) src);\n+      else if (src_comp == JvPrimClass (boolean))\n+\tsrc_elts = (char *) elements ((jbooleanArray) src);\n+      else if (src_comp == JvPrimClass (char))\n+\tsrc_elts = (char *) elements ((jcharArray) src);\n+      else if (src_comp == JvPrimClass (float))\n+\tsrc_elts = (char *) elements ((jfloatArray) src);\n+      else if (src_comp == JvPrimClass (double))\n+\tsrc_elts = (char *) elements ((jdoubleArray) src);\n+      src_elts += size * src_offset;\n+\n+      char *dst_elts = NULL;\n+      if (! prim)\n+\tdst_elts = (char *) elements ((jobjectArray) dst);\n+      else if (dst_comp == JvPrimClass (byte))\n+\tdst_elts = (char *) elements ((jbyteArray) dst);\n+      else if (dst_comp == JvPrimClass (short))\n+\tdst_elts = (char *) elements ((jshortArray) dst);\n+      else if (dst_comp == JvPrimClass (int))\n+\tdst_elts = (char *) elements ((jintArray) dst);\n+      else if (dst_comp == JvPrimClass (long))\n+\tdst_elts = (char *) elements ((jlongArray) dst);\n+      else if (dst_comp == JvPrimClass (boolean))\n+\tdst_elts = (char *) elements ((jbooleanArray) dst);\n+      else if (dst_comp == JvPrimClass (char))\n+\tdst_elts = (char *) elements ((jcharArray) dst);\n+      else if (dst_comp == JvPrimClass (float))\n+\tdst_elts = (char *) elements ((jfloatArray) dst);\n+      else if (dst_comp == JvPrimClass (double))\n+\tdst_elts = (char *) elements ((jdoubleArray) dst);\n+      dst_elts += size * dst_offset;\n+\n       // We don't bother trying memcpy.  It can't be worth the cost of\n       // the check.\n       memmove ((void *) dst_elts, (void *) src_elts, count * size);"}]}