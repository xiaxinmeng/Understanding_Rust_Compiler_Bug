{"sha": "7c332a4ee508059a09fa63fdcf755dcad6ccbd50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzMzJhNGVlNTA4MDU5YTA5ZmE2M2ZkY2Y3NTVkY2FkNmNjYmQ1MA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2015-12-23T21:52:50Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2015-12-23T21:52:50Z"}, "message": "PR c++/69023 - bitset whose name is used in constant-expression rejected\n\nPR c++/69023 - bitset whose name is used in constant-expression rejected\n* g++.dg/lookup/name-clash11.C: New test.\n\nFrom-SVN: r231938", "tree": {"sha": "0e9b21b281c38bdaabf611eef5535f79c7088c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e9b21b281c38bdaabf611eef5535f79c7088c6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c332a4ee508059a09fa63fdcf755dcad6ccbd50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c332a4ee508059a09fa63fdcf755dcad6ccbd50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c332a4ee508059a09fa63fdcf755dcad6ccbd50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c332a4ee508059a09fa63fdcf755dcad6ccbd50/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97b7f1385a99158f1cd445e6c44bfe70fdad6576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b7f1385a99158f1cd445e6c44bfe70fdad6576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b7f1385a99158f1cd445e6c44bfe70fdad6576"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "2002f929631c4b4a14d95f32878dc9792ef62b3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c332a4ee508059a09fa63fdcf755dcad6ccbd50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c332a4ee508059a09fa63fdcf755dcad6ccbd50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c332a4ee508059a09fa63fdcf755dcad6ccbd50", "patch": "@@ -1,3 +1,8 @@\n+2015-12-23  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/69023\n+\t* g++.dg/lookup/name-clash11.C: New test.\n+\n 2015-12-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.dg/alias-15.c: Revert."}, {"sha": "28ce4c937c5365ec2e2b996a151948c5e7755ee0", "filename": "gcc/testsuite/g++.dg/lookup/name-clash11.C", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c332a4ee508059a09fa63fdcf755dcad6ccbd50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c332a4ee508059a09fa63fdcf755dcad6ccbd50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fname-clash11.C?ref=7c332a4ee508059a09fa63fdcf755dcad6ccbd50", "patch": "@@ -0,0 +1,84 @@\n+// PR c++/69023 - bitset whose name is used in constant-expression rejected\n+// Test also verifies the correct evaluation of the expressions with\n+// -fpermissive.\n+// { dg-options \"-fpermissive\" }\n+\n+#if __cplusplus >= 201103L\n+#  define ASSERT(e) static_assert (e, #e)\n+#else\n+#  define ASSERT(e)                                             \\\n+  do { struct S { bool: !!(e); } asrt; (void)&asrt; } while (0)\n+#endif\n+\n+\n+void test_bitset ()\n+{\n+  int x;                        // { dg-warning \"changes meaning\" }\n+\n+  {\n+    struct S {\n+      int x: sizeof x;          // { dg-warning \"declaration\" }\n+    };\n+  }\n+}\n+\n+void test_enum ()\n+{\n+  // Also exercise (not covered by c++/69023):\n+  int y;                        // { dg-warning \"changes meaning\" }\n+  {\n+    struct S {\n+      enum E {\n+        y = sizeof y            // { dg-warning \"declaration\" }\n+      };\n+\n+      // Verify the enumerator has the correct value.\n+      void test () { ASSERT (y == sizeof (int)); }\n+    };\n+  }\n+}\n+\n+void test_alignas ()\n+{\n+  enum { A = 16 };              // { dg-warning \"changes meaning\" }\n+  {\n+    struct S {\n+#if __cplusplus >= 201103L\n+      alignas (A)\n+#else\n+      __attribute__ ((aligned (A)))\n+#endif\n+      int A;                    // { dg-warning \"declaration\" }\n+\n+      // Verify the member has the correct alignment.\n+      void test () { ASSERT (__alignof__ (this->A) == 16); }\n+    };\n+  }\n+}\n+\n+void test_array ()\n+{\n+  enum { A = 16 };              // { dg-warning \"changes meaning\" }\n+  {\n+    struct S {\n+      int A [A];                // { dg-warning \"declaration\" }\n+\n+      // Verify the member has the correct alignment.\n+      void test () { ASSERT (sizeof (this->A) == 16 * sizeof (int)); }\n+    };\n+  } \n+}\n+\n+void test_vector ()\n+{\n+  enum { A = 16 };              // { dg-warning \"changes meaning\" }\n+  {\n+    struct S {\n+      int A __attribute__ ((vector_size (A))); // { dg-warning \"declaration\" }\n+\n+      // Verify the member has the correct size.\n+      void test () { ASSERT (sizeof (this->A) == 16); }\n+    };\n+  } \n+}\n+ "}]}