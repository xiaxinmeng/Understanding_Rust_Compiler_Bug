{"sha": "b63144aa0fce12fb94e3655bc04017e619f1dfa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYzMTQ0YWEwZmNlMTJmYjk0ZTM2NTViYzA0MDE3ZTYxOWYxZGZhNg==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@gmail.com", "date": "2017-01-26T16:56:12Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-01-26T16:56:12Z"}, "message": "AVX-512. Fix constants for 32b variant.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512bw-kshiftlq-2.c: Use unsigned long long\n\tconstant.\n\t* gcc.target/i386/avx512bw-kshiftrq-2.c: Ditto.\n\nFrom-SVN: r244941", "tree": {"sha": "7cef74f59381241986c0b144a23baec1befb1cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cef74f59381241986c0b144a23baec1befb1cb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b63144aa0fce12fb94e3655bc04017e619f1dfa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63144aa0fce12fb94e3655bc04017e619f1dfa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b63144aa0fce12fb94e3655bc04017e619f1dfa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63144aa0fce12fb94e3655bc04017e619f1dfa6/comments", "author": null, "committer": null, "parents": [{"sha": "3b4c055b547744f604a5974174ef9ce605bd6b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4c055b547744f604a5974174ef9ce605bd6b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4c055b547744f604a5974174ef9ce605bd6b7c"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "903e966ac6e540052b6c9e223ab03162aa0a464b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63144aa0fce12fb94e3655bc04017e619f1dfa6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63144aa0fce12fb94e3655bc04017e619f1dfa6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b63144aa0fce12fb94e3655bc04017e619f1dfa6", "patch": "@@ -1,3 +1,9 @@\n+2017-01-26  Kirill Yukhin  <kirill.yukhin@gmail.com>\n+\n+\t* gcc.target/i386/avx512bw-kshiftlq-2.c: Use unsigned long long\n+\tconstant.\n+\t* gcc.target/i386/avx512bw-kshiftrq-2.c: Ditto.\n+\n 2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/avx512fintrin.h (_ktest_mask16_u8,"}, {"sha": "f578625ff9bc68a746d8950136f8e11398c68678", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-kshiftlq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63144aa0fce12fb94e3655bc04017e619f1dfa6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kshiftlq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63144aa0fce12fb94e3655bc04017e619f1dfa6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kshiftlq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kshiftlq-2.c?ref=b63144aa0fce12fb94e3655bc04017e619f1dfa6", "patch": "@@ -11,6 +11,6 @@ avx512bw_test ()\n   unsigned int i = 53;\n \n   volatile __mmask64 r = _kshiftli_mask64 (k1, i);\n-  if (r != 1 << i)\n+  if (r != 1ULL << i)\n     abort ();\n }"}, {"sha": "c6ba0b23f8817bb7188bcccd591da19ce8f1ee4f", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-kshiftrq-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63144aa0fce12fb94e3655bc04017e619f1dfa6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kshiftrq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63144aa0fce12fb94e3655bc04017e619f1dfa6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kshiftrq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-kshiftrq-2.c?ref=b63144aa0fce12fb94e3655bc04017e619f1dfa6", "patch": "@@ -1,3 +1,4 @@\n+\n /* { dg-do run } */\n /* { dg-options \"-O2 -mavx512bw\" } */\n /* { dg-require-effective-target avx512bw } */\n@@ -8,7 +9,7 @@ void\n avx512bw_test ()\n {\n   unsigned int i = 53;\n-  __mmask64 k1 = 1 << i;\n+  __mmask64 k1 = 1ULL << i;\n \n   volatile __mmask64 r = _kshiftri_mask64 (k1, i);\n   if (r != 1)"}]}