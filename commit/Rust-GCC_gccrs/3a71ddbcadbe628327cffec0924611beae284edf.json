{"sha": "3a71ddbcadbe628327cffec0924611beae284edf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3MWRkYmNhZGJlNjI4MzI3Y2ZmZWMwOTI0NjExYmVhZTI4NGVkZg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-02-11T09:12:18Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-02-11T09:12:18Z"}, "message": "re PR target/69713 (Invalid code of optimization in SH)\n\ngcc/\n\tPR target/69713\n\t* config/sh/sh.md (casesi_worker_0): Add T_REG use.\n\nFrom-SVN: r233324", "tree": {"sha": "8a745a40722b9e437803250c314bbc7c44cb24e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a745a40722b9e437803250c314bbc7c44cb24e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a71ddbcadbe628327cffec0924611beae284edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a71ddbcadbe628327cffec0924611beae284edf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a71ddbcadbe628327cffec0924611beae284edf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a71ddbcadbe628327cffec0924611beae284edf/comments", "author": null, "committer": null, "parents": [{"sha": "281a11eb257c06ec1f6610288a10d9bbbfe0a751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281a11eb257c06ec1f6610288a10d9bbbfe0a751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281a11eb257c06ec1f6610288a10d9bbbfe0a751"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "7ca86d621b47567f94c264e2ed834aeb669befd4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a71ddbcadbe628327cffec0924611beae284edf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a71ddbcadbe628327cffec0924611beae284edf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a71ddbcadbe628327cffec0924611beae284edf", "patch": "@@ -1,3 +1,8 @@\n+2016-02-11  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/69713\n+\t* config/sh/sh.md (casesi_worker_0): Add T_REG use.\n+\n 2016-02-11  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/69291"}, {"sha": "203215a17875c99e8093734d6c9a063d5581cdcb", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a71ddbcadbe628327cffec0924611beae284edf/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a71ddbcadbe628327cffec0924611beae284edf/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=3a71ddbcadbe628327cffec0924611beae284edf", "patch": "@@ -11707,12 +11707,16 @@ label:\n ;; ??? reload might clobber r0 if we use it explicitly in the RTL before\n ;; reload; using a R0_REGS pseudo reg is likely to give poor code.\n ;; So we keep the use of r0 hidden in a R0_REGS clobber until after reload.\n+;;\n+;; The use on the T_REG in the casesi_worker* patterns links the bounds\n+;; checking insns and the table memory access.  See also PR 69713.\n (define_insn \"casesi_worker_0\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"0,r\")\n \t\t (label_ref (match_operand 2 \"\" \"\"))] UNSPEC_CASESI))\n    (clobber (match_scratch:SI 3 \"=X,1\"))\n-   (clobber (match_scratch:SI 4 \"=&z,z\"))]\n+   (clobber (match_scratch:SI 4 \"=&z,z\"))\n+   (use (reg:SI T_REG))]\n   \"TARGET_SH1\"\n   \"#\")\n \n@@ -11721,7 +11725,8 @@ label:\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"\")\n \t\t    (label_ref (match_operand 2 \"\" \"\"))] UNSPEC_CASESI))\n    (clobber (match_scratch:SI 3 \"\"))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+   (clobber (match_scratch:SI 4))\n+   (use (reg:SI T_REG))]\n   \"TARGET_SH1 && ! TARGET_SH2 && reload_completed\"\n   [(set (reg:SI R0_REG) (unspec:SI [(label_ref (match_dup 2))] UNSPEC_MOVA))\n    (parallel [(set (match_dup 0)\n@@ -11739,7 +11744,8 @@ label:\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"\")\n \t\t    (label_ref (match_operand 2 \"\" \"\"))] UNSPEC_CASESI))\n    (clobber (match_scratch:SI 3 \"\"))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+   (clobber (match_scratch:SI 4))\n+   (use (reg:SI T_REG))]\n   \"TARGET_SH2 && reload_completed\"\n   [(set (reg:SI R0_REG) (unspec:SI [(label_ref (match_dup 2))] UNSPEC_MOVA))\n    (parallel [(set (match_dup 0)"}]}