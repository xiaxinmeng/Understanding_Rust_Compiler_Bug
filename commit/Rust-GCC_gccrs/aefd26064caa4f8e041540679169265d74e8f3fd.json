{"sha": "aefd26064caa4f8e041540679169265d74e8f3fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmZDI2MDY0Y2FhNGY4ZTA0MTU0MDY3OTE2OTI2NWQ3NGU4ZjNmZA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2007-03-16T23:12:46Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2007-03-16T23:12:46Z"}, "message": "pa.c (attr_length_call): Partially revert change of 2007-03-09.\n\n\t* pa.c (attr_length_call): Partially revert change of 2007-03-09.\n\t(output_call): Likewise.\n\nFrom-SVN: r123002", "tree": {"sha": "c02662e57a2a6cca2d407b5ad4489aca05ba28e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c02662e57a2a6cca2d407b5ad4489aca05ba28e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aefd26064caa4f8e041540679169265d74e8f3fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aefd26064caa4f8e041540679169265d74e8f3fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aefd26064caa4f8e041540679169265d74e8f3fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aefd26064caa4f8e041540679169265d74e8f3fd/comments", "author": null, "committer": null, "parents": [{"sha": "90f89aa4967364402daa00bfe89b6d5afbf38435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f89aa4967364402daa00bfe89b6d5afbf38435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90f89aa4967364402daa00bfe89b6d5afbf38435"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5d00c1574756c7bf86e8030145b3d602546bf5c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aefd26064caa4f8e041540679169265d74e8f3fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aefd26064caa4f8e041540679169265d74e8f3fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aefd26064caa4f8e041540679169265d74e8f3fd", "patch": "@@ -1,3 +1,8 @@\n+2007-03-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (attr_length_call): Partially revert change of 2007-03-09.\n+\t(output_call): Likewise.\n+\n 2007-03-16  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/vxworks.h (SUPPORTS_INIT_PRIORITY): Define."}, {"sha": "ce38cf15da97c2d8823a05831d26601185436047", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aefd26064caa4f8e041540679169265d74e8f3fd/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aefd26064caa4f8e041540679169265d74e8f3fd/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=aefd26064caa4f8e041540679169265d74e8f3fd", "patch": "@@ -7273,7 +7273,7 @@ attr_length_call (rtx insn, int sibcall)\n     length += 12;\n \n   /* long pc-relative branch sequence.  */\n-  else if ((TARGET_SOM && (TARGET_LONG_PIC_SDIFF_CALL || local_call))\n+  else if ((TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n \t   || (TARGET_64BIT && !TARGET_GAS)\n \t   || (TARGET_GAS && !TARGET_SOM\n \t       && (TARGET_LONG_PIC_PCREL_CALL || local_call)))\n@@ -7386,7 +7386,7 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t     of increasing length and complexity.  In most cases,\n              they don't allow an instruction in the delay slot.  */\n \t  if (!((TARGET_LONG_ABS_CALL || local_call) && !flag_pic)\n-\t      && !(TARGET_SOM && (TARGET_LONG_PIC_SDIFF_CALL || local_call))\n+\t      && !(TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n \t      && !(TARGET_GAS && !TARGET_SOM\n \t\t   && (TARGET_LONG_PIC_PCREL_CALL || local_call))\n \t      && !TARGET_64BIT)\n@@ -7434,7 +7434,7 @@ output_call (rtx insn, rtx call_dest, int sibcall)\n \t    }\n \t  else\n \t    {\n-\t      if ((TARGET_SOM && (TARGET_LONG_PIC_SDIFF_CALL || local_call))\n+\t      if ((TARGET_SOM && TARGET_LONG_PIC_SDIFF_CALL)\n \t\t  || (TARGET_64BIT && !TARGET_GAS))\n \t\t{\n \t\t  /* The HP assembler and linker can handle relocations"}]}