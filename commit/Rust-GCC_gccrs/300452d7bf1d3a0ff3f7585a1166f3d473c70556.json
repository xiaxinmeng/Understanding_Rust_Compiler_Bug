{"sha": "300452d7bf1d3a0ff3f7585a1166f3d473c70556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwNDUyZDdiZjFkM2EwZmYzZjc1ODVhMTE2NmYzZDQ3M2M3MDU1Ng==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-06-05T15:34:39Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-06-05T15:36:29Z"}, "message": "Adjust text of expected warnings to g:b825a22890740f341eae566af27e18e528cd29a7.\n\ngcc/testsuite/ChangeLog:\n\t* c-c++-common/goacc/uninit-use-device-clause.c: Adjust.\n\t* c-c++-common/pr59223.c: Same.\n\t* g++.dg/warn/Wnonnull5.C: Same.\n\t* gcc.dg/pr59924.c: Same.\n\t* gcc.dg/ubsan/pr81981.c: Same.\n\t* gcc.dg/ubsan/pr89284.c: Same.\n\t* gfortran.dg/goacc/uninit-use-device-clause.f95: Same.", "tree": {"sha": "a66329f91404248115753fde153722ad1a373162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a66329f91404248115753fde153722ad1a373162"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/300452d7bf1d3a0ff3f7585a1166f3d473c70556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300452d7bf1d3a0ff3f7585a1166f3d473c70556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300452d7bf1d3a0ff3f7585a1166f3d473c70556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300452d7bf1d3a0ff3f7585a1166f3d473c70556/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89b49a963c5f997df1c19ff9cde18d3d45c3aa15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b49a963c5f997df1c19ff9cde18d3d45c3aa15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b49a963c5f997df1c19ff9cde18d3d45c3aa15"}], "stats": {"total": 124, "additions": 116, "deletions": 8}, "files": [{"sha": "02fb99a1e24725030d0398b2808c880a6fba8eff", "filename": "gcc/testsuite/c-c++-common/goacc/uninit-use-device-clause.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Funinit-use-device-clause.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Funinit-use-device-clause.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Funinit-use-device-clause.c?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -8,7 +8,7 @@ foo (void)\n {\n   int i;\n \n-#pragma acc host_data use_device(i) /* { dg-warning \"is used uninitialized in this function\" \"\" { xfail *-*-* } } */\n+#pragma acc host_data use_device(i) /* { dg-warning \"is used uninitialized\" \"\" { xfail *-*-* } } */\n   {\n   }\n }"}, {"sha": "f91e443005822c8f827f8fc9475223b6eecbabca", "filename": "gcc/testsuite/c-c++-common/pr59223.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr59223.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr59223.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr59223.c?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -9,5 +9,5 @@ int foo (int x)\n     y = 1;\n   else if (x == 1)\n     y = 2;\n-  return y; /* { dg-warning \"may be used uninitialized in this function\" } */\n+  return y; /* { dg-warning \"may be used uninitialized\" } */\n }"}, {"sha": "8b25d2d9f86a857f7ed2e5cd7b5a2df2b65d5675", "filename": "gcc/testsuite/g++.dg/warn/Wnonnull5.C", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull5.C?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -0,0 +1,108 @@\n+/* PR c++/86568 - -Wnonnull warnings should highlight the relevant argument\n+   not the closing parenthesis.\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+#define NONNULL __attribute__ ((nonnull))\n+\n+#if __cplusplus < 201103L\n+#  define nullptr __null\n+#endif\n+\n+struct S\n+{\n+  void\n+  f0 (const void*) const;         // { dg-message \"in a call to non-static member function 'void S::f0\\\\(const void\\\\*\\\\) const'\" }\n+\n+  void\n+  f1 (const void*) const;         // { dg-message \"in a call to non-static member function 'void S::f1\\\\(const void\\\\*\\\\) const'\" }\n+\n+  void\n+  f2 (const void*) const;         // { dg-message \"in a call to non-static member function 'void S::f2\\\\(const void\\\\*\\\\) const'\" }\n+\n+  NONNULL void\n+  f3 (const void*, const void*);  // { dg-message \"in a call to function 'void S::f3\\\\(const void\\\\*, const void\\\\*\\\\)' declared 'nonnull'\" }\n+\n+  NONNULL void\n+  f4 (const void*, const void*);  // { dg-message \"in a call to function 'void S::f4\\\\(const void\\\\*, const void\\\\*\\\\)' declared 'nonnull'\" }\n+\n+  NONNULL void\n+  f5 (const void*, const void*);  // { dg-message \"in a call to function 'void S::f5\\\\\\(const void\\\\*, const void\\\\*\\\\)' declared 'nonnull'\" }\n+\n+  NONNULL void\n+  f6 (const void*, const void*);  // { dg-message \"in a call to function 'void S::f6\\\\\\(const void\\\\*, const void\\\\*\\\\)' declared 'nonnull'\" }\n+};\n+\n+void warn_nullptr_this ()\n+{\n+  ((S*)nullptr)->f0 (\"\");        // { dg-warning \"3:'this' pointer null\" \"pr86568\" { xfail *-*-* } }\n+                                 // { dg-warning \"this' pointer null\" \"pr86568\" { target *-*-* } .-1 }\n+}\n+\n+void warn_null_this_cst ()\n+{\n+  S* const null = 0;\n+  null->f1 (\"\");                  // { dg-warning \"3:'this' pointer null\" }\n+}\n+\n+void warn_null_this_var ()\n+{\n+  S* null = 0;\n+  null->f2 (&null);               // { dg-warning \"3:'this' pointer null\" \"pr86568\" { xfail *-*-* } }\n+                                  // { dg-warning \"'this' pointer null\" \"pr86568\" { target *-*-* } .-1 }\n+}\n+\n+void warn_nullptr (S s)\n+{\n+  s.f3 (nullptr, &s);              // { dg-warning \"9:argument 1 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n+                                   // { dg-warning \"argument 1 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+  s.f3 (&s, nullptr);              // { dg-warning \"13:argument 2 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n+                                   // { dg-warning \"argument 2 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+}\n+\n+\n+void warn_null_cst (S s)\n+{\n+  void* const null = 0;\n+  s.f4 (null, &s);                 // { dg-warning \"9:argument 1 null where non-null expected\" }\n+  s.f4 (&s, null);                 // { dg-warning \"13:argument 2 null where non-null expected\" }\n+}\n+\n+void warn_null_var (S s)\n+{\n+  void* null = 0;\n+  s.f5 (null, &s);                // { dg-warning \"9:argument 1 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n+                                  // { dg-warning \"argument 1 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+  s.f5 (&s, null);                // { dg-warning \"16:argument 2 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n+                                  // { dg-warning \"argument 2 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+}\n+\n+void warn_null_cond (S s, void *null)\n+{\n+  if (null)\n+    return;\n+\n+  s.f6 (null, &s);                // { dg-warning \"9:argument 1 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n+                                  // { dg-warning \"argument 1 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+  s.f6 (&s, null);                // { dg-warning \"13:argument 2 null where non-null expected\" \"pr86568\" { xfail *-*-* } }\n+                                  // { dg-warning \"argument 2 null where non-null expected\" \"pr86568\" { target *-*-* } .-1 }\n+}\n+\n+\n+typedef NONNULL void Fvp (const void*, const void*);\n+\n+void warn_fptr_null_cst (Fvp *p)\n+{\n+  void* const null = 0;\n+  p (null, \"\");                   // { dg-warning \"6:argument 1 null where non-null expected\" }\n+  p (\"\", null);                   // { dg-warning \"10:argument 2 null where non-null expected\" }\n+}\n+\n+typedef NONNULL void (S::*SMemFvp) (const void*, const void*);\n+\n+void warn_memfptr_null_cst (S *p, SMemFvp pmf)\n+{\n+  void* const null = 0;\n+  (p->*pmf) (null, \"\");           // { dg-warning \"14:argument 1 null where non-null expected\" }\n+  (p->*pmf) (\"\", null);           // { dg-warning \"18:argument 2 null where non-null expected\" }\n+}"}, {"sha": "9063a239434af8738f443d9ad6c8eff4bc8740ff", "filename": "gcc/testsuite/gcc.dg/pr59924.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59924.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59924.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59924.c?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -21,7 +21,7 @@ foo (struct S * x, int y, int z, int w)\n     }\n   if (y != 0 || z != 0)\n     {\n-      double g = x->b + (double) e * (double) y; /* { dg-warning \"may be used uninitialized in this function\" } */\n+      double g = x->b + (double) e * (double) y; /* { dg-warning \"may be used uninitialized\" } */\n       bar (g * g);\n     }\n }"}, {"sha": "8a6597c84c8c40535f229d29f18fe0c5c01ed19b", "filename": "gcc/testsuite/gcc.dg/ubsan/pr81981.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr81981.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr81981.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr81981.c?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -16,6 +16,6 @@ foo (int i)\n       u[0] = i;\n     }\n \n-  v = u[0];\t\t/* { dg-warning \"may be used uninitialized in this function\" } */\n-  return t[0];\t\t/* { dg-warning \"may be used uninitialized in this function\" } */\n+  v = u[0];\t\t/* { dg-warning \"may be used uninitialized\" } */\n+  return t[0];\t\t/* { dg-warning \"may be used uninitialized\" } */\n }"}, {"sha": "965225c6702e63f56aa15b913ede0e29d0fcb7bc", "filename": "gcc/testsuite/gcc.dg/ubsan/pr89284.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr89284.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr89284.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fpr89284.c?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -8,7 +8,7 @@ int\n foo (void)\n {\n   struct A a;\n-  if (a.i)\t/* { dg-warning \"'a.i' is used uninitialized in this function\" } */\n+  if (a.i)\t/* { dg-warning \"'a.i' is used uninitialized\" } */\n     return 1;\n   return 0;\n }\n@@ -17,7 +17,7 @@ int\n bar (void)\n {\n   struct A a;\n-  if (a.a)\t/* { dg-warning \"'a.a' is used uninitialized in this function\" } */\n+  if (a.a)\t/* { dg-warning \"'a.a' is used uninitialized\" } */\n     return 1;\n   return 0;\n }"}, {"sha": "35310d14c528095a6b9e10358cefa15786b14ebd", "filename": "gcc/testsuite/gfortran.dg/goacc/uninit-use-device-clause.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-use-device-clause.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300452d7bf1d3a0ff3f7585a1166f3d473c70556/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-use-device-clause.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Funinit-use-device-clause.f95?ref=300452d7bf1d3a0ff3f7585a1166f3d473c70556", "patch": "@@ -4,7 +4,7 @@\n subroutine test\n   integer, pointer :: p\n \n-  !$acc host_data use_device(p) ! { dg-warning \"is used uninitialized in this function\" }\n+  !$acc host_data use_device(p) ! { dg-warning \"is used uninitialized\" }\n   !$acc end host_data\n end subroutine test\n "}]}