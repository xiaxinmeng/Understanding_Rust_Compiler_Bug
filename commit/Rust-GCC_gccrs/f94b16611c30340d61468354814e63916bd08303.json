{"sha": "f94b16611c30340d61468354814e63916bd08303", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk0YjE2NjExYzMwMzQwZDYxNDY4MzU0ODE0ZTYzOTE2YmQwODMwMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-04-11T06:16:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-04-11T06:16:39Z"}, "message": "* builtins.def (BUILT_IN_LCEIL, BUILT_IN_LCEILF, BUILT_IN_LCEILL)\n\t(BUILT_IN_LLCEIL, BUILT_IN_LLCEILF, BUILT_IN_LLCEILL): New.\n\t* optabs.h (enum optab_index): Add new OTI_lceil.\n\t(lceil_optab): Define corresponding macro.\n\t* optabs.c (init_optabs): Initialize lceil_optab.\n\t* genopinit.c (optabs): Implement lceil_optab using lceilsi2\n\tand lceildi2 patterns.\n\n\t* builtins.c (expand_builtin_int_roundingfn): Handle\n\tBUILT_IN_LCEIL{,F,L} and BUILT_IN_LLCEIL{,F,L}.\n\t(fold_builtin_int_roundingfn): Handle BUILT_IN_LCEIL{,F,L} and\n\tBUILT_IN_LLCEIL{,F,L}.\n\t(fold_builtin_1): Fold BUILT_IN_LCEIL{,F,L} and\n\tBUILT_IN_LLCEIL{,F,L} using fold_builtin_int_roundingfn.\n\t(mathfn_built_in): Handle BUILT_IN LCEIL and BUILT_IN_LLCEIL.\n\t(expand_builtin): Expand BUILT_IN_LCEIL{,F,L} and\n\tBUILT_IN_LLCEIL{,F,L} using expand_builtin_int_roundingfn.\n\n\t* convert.c (convert_to_integer): Convert (long int)ceil{,f,l},\n\tinto lceil built-in function and (long long int)ceil{,f,l} into\n\tllceil built-in function.\n\t* fold-const.c (tree_expr_nonnegative_p): Add BUILT_IN_LCEIL and\n\tBUILT_IN_LLCEIL.\ntestsuite:\n\n\t* gcc.dg/builtins-53.c: Also check (int)ceil* and\n\t(long long int)ceil*.\n\nFrom-SVN: r97964", "tree": {"sha": "4f8876fc98292146b6f2b8bf4a5835e8ae42a92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f8876fc98292146b6f2b8bf4a5835e8ae42a92c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f94b16611c30340d61468354814e63916bd08303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94b16611c30340d61468354814e63916bd08303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f94b16611c30340d61468354814e63916bd08303", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94b16611c30340d61468354814e63916bd08303/comments", "author": null, "committer": null, "parents": [{"sha": "0dbca30748132482886593434b14d7242cdee9ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbca30748132482886593434b14d7242cdee9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dbca30748132482886593434b14d7242cdee9ad"}], "stats": {"total": 124, "additions": 123, "deletions": 1}, "files": [{"sha": "96df0ff4ca417a3dffa7dedee49d365c24f8e9b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -1,3 +1,27 @@\n+2005-04-11  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* builtins.def (BUILT_IN_LCEIL, BUILT_IN_LCEILF, BUILT_IN_LCEILL)\n+\t(BUILT_IN_LLCEIL, BUILT_IN_LLCEILF, BUILT_IN_LLCEILL): New.\n+\t* optabs.h (enum optab_index): Add new OTI_lceil.\n+\t(lceil_optab): Define corresponding macro.\n+\t* optabs.c (init_optabs): Initialize lceil_optab.\n+\t* genopinit.c (optabs): Implement lceil_optab using lceilsi2\n+\tand lceildi2 patterns.\n+\t* builtins.c (expand_builtin_int_roundingfn): Handle\n+\tBUILT_IN_LCEIL{,F,L} and BUILT_IN_LLCEIL{,F,L}.\n+\t(fold_builtin_int_roundingfn): Handle BUILT_IN_LCEIL{,F,L} and\n+\tBUILT_IN_LLCEIL{,F,L}.\n+\t(fold_builtin_1): Fold BUILT_IN_LCEIL{,F,L} and\n+\tBUILT_IN_LLCEIL{,F,L} using fold_builtin_int_roundingfn.\n+\t(mathfn_built_in): Handle BUILT_IN LCEIL and BUILT_IN_LLCEIL.\n+\t(expand_builtin): Expand BUILT_IN_LCEIL{,F,L} and\n+\tBUILT_IN_LLCEIL{,F,L} using expand_builtin_int_roundingfn.\n+\t* convert.c (convert_to_integer): Convert (long int)ceil{,f,l},\n+\tinto lceil built-in function and (long long int)ceil{,f,l} into\n+\tllceil built-in function.\n+\t* fold-const.c (tree_expr_nonnegative_p): Add BUILT_IN_LCEIL and\n+\tBUILT_IN_LLCEIL.\n+\n 2005-04-10  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa/quadlib.c (_U_Qfneg): Toggle sign bit instead of subtracting from"}, {"sha": "b7ddb747495126204f55daebb82979212034dc2e", "filename": "gcc/builtins.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -1549,9 +1549,11 @@ mathfn_built_in (tree type, enum built_in_function fn)\n       CASE_MATHFN (BUILT_IN_J0)\n       CASE_MATHFN (BUILT_IN_J1)\n       CASE_MATHFN (BUILT_IN_JN)\n+      CASE_MATHFN (BUILT_IN_LCEIL)\n       CASE_MATHFN (BUILT_IN_LDEXP)\n       CASE_MATHFN (BUILT_IN_LFLOOR)\n       CASE_MATHFN (BUILT_IN_LGAMMA)\n+      CASE_MATHFN (BUILT_IN_LLCEIL)\n       CASE_MATHFN (BUILT_IN_LLFLOOR)\n       CASE_MATHFN (BUILT_IN_LLRINT)\n       CASE_MATHFN (BUILT_IN_LLROUND)\n@@ -2141,6 +2143,16 @@ expand_builtin_int_roundingfn (tree exp, rtx target, rtx subtarget)\n \n   switch (DECL_FUNCTION_CODE (fndecl))\n     {\n+    case BUILT_IN_LCEIL:\n+    case BUILT_IN_LCEILF:\n+    case BUILT_IN_LCEILL:\n+    case BUILT_IN_LLCEIL:\n+    case BUILT_IN_LLCEILF:\n+    case BUILT_IN_LLCEILL:\n+      builtin_optab = lceil_optab;\n+      fallback_fn = BUILT_IN_CEIL;\n+      break;\n+\n     case BUILT_IN_LFLOOR:\n     case BUILT_IN_LFLOORF:\n     case BUILT_IN_LFLOORL:\n@@ -5376,6 +5388,12 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n \treturn target;\n       break;\n \n+    case BUILT_IN_LCEIL:\n+    case BUILT_IN_LCEILF:\n+    case BUILT_IN_LCEILL:\n+    case BUILT_IN_LLCEIL:\n+    case BUILT_IN_LLCEILF:\n+    case BUILT_IN_LLCEILL:\n     case BUILT_IN_LFLOOR:\n     case BUILT_IN_LFLOORF:\n     case BUILT_IN_LFLOORL:\n@@ -6771,6 +6789,15 @@ fold_builtin_int_roundingfn (tree fndecl, tree arglist)\n \t      real_floor (&r, TYPE_MODE (ftype), &x);\n \t      break;\n \n+\t    case BUILT_IN_LCEIL:\n+\t    case BUILT_IN_LCEILF:\n+\t    case BUILT_IN_LCEILL:\n+\t    case BUILT_IN_LLCEIL:\n+\t    case BUILT_IN_LLCEILF:\n+\t    case BUILT_IN_LLCEILL:\n+\t      real_ceil (&r, TYPE_MODE (ftype), &x);\n+\t      break;\n+\n \t    case BUILT_IN_LROUND:\n \t    case BUILT_IN_LROUNDF:\n \t    case BUILT_IN_LROUNDL:\n@@ -8328,6 +8355,12 @@ fold_builtin_1 (tree fndecl, tree arglist, bool ignore)\n     case BUILT_IN_RINTL:\n       return fold_trunc_transparent_mathfn (fndecl, arglist);\n \n+    case BUILT_IN_LCEIL:\n+    case BUILT_IN_LCEILF:\n+    case BUILT_IN_LCEILL:\n+    case BUILT_IN_LLCEIL:\n+    case BUILT_IN_LLCEILF:\n+    case BUILT_IN_LLCEILL:\n     case BUILT_IN_LFLOOR:\n     case BUILT_IN_LFLOORF:\n     case BUILT_IN_LFLOORL:"}, {"sha": "51d87ca362e4c0e3fce69116384f34f042e079bf", "filename": "gcc/builtins.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -257,6 +257,9 @@ DEF_EXT_LIB_BUILTIN    (BUILT_IN_J1L, \"j1l\", BT_FN_LONGDOUBLE_LONGDOUBLE, ATTR_M\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_JN, \"jn\", BT_FN_DOUBLE_INT_DOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_JNF, \"jnf\", BT_FN_FLOAT_INT_FLOAT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_JNL, \"jnl\", BT_FN_LONGDOUBLE_INT_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n+DEF_GCC_BUILTIN        (BUILT_IN_LCEIL, \"lceil\", BT_FN_LONG_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_GCC_BUILTIN        (BUILT_IN_LCEILF, \"lceilf\", BT_FN_LONG_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_GCC_BUILTIN        (BUILT_IN_LCEILL, \"lceill\", BT_FN_LONG_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_LIB_BUILTIN        (BUILT_IN_LDEXP, \"ldexp\", BT_FN_DOUBLE_DOUBLE_INT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_LDEXPF, \"ldexpf\", BT_FN_FLOAT_FLOAT_INT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_LDEXPL, \"ldexpl\", BT_FN_LONGDOUBLE_LONGDOUBLE_INT, ATTR_MATHFN_FPROUNDING_ERRNO)\n@@ -266,6 +269,9 @@ DEF_GCC_BUILTIN        (BUILT_IN_LFLOORL, \"lfloorl\", BT_FN_LONG_LONGDOUBLE, ATTR\n DEF_C99_BUILTIN        (BUILT_IN_LGAMMA, \"lgamma\", BT_FN_DOUBLE_DOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_LGAMMAF, \"lgammaf\", BT_FN_FLOAT_FLOAT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_LGAMMAL, \"lgammal\", BT_FN_LONGDOUBLE_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n+DEF_GCC_BUILTIN        (BUILT_IN_LLCEIL, \"llceil\", BT_FN_LONGLONG_DOUBLE, ATTR_MATHFN_FPROUNDING)\n+DEF_GCC_BUILTIN        (BUILT_IN_LLCEILF, \"llceilf\", BT_FN_LONGLONG_FLOAT, ATTR_MATHFN_FPROUNDING)\n+DEF_GCC_BUILTIN        (BUILT_IN_LLCEILL, \"llceill\", BT_FN_LONGLONG_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_GCC_BUILTIN        (BUILT_IN_LLFLOOR, \"llfloor\", BT_FN_LONGLONG_DOUBLE, ATTR_MATHFN_FPROUNDING)\n DEF_GCC_BUILTIN        (BUILT_IN_LLFLOORF, \"llfloorf\", BT_FN_LONGLONG_FLOAT, ATTR_MATHFN_FPROUNDING)\n DEF_GCC_BUILTIN        (BUILT_IN_LLFLOORL, \"llfloorl\", BT_FN_LONGLONG_LONGDOUBLE, ATTR_MATHFN_FPROUNDING)"}, {"sha": "9ae300d21f25bd720d922884e6d63bdfa2a6a779", "filename": "gcc/convert.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -349,6 +349,13 @@ convert_to_integer (tree type, tree expr)\n       \n       switch (fcode)\n         {\n+\tcase BUILT_IN_CEIL: case BUILT_IN_CEILF: case BUILT_IN_CEILL:\n+\t  if (TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (long_long_integer_type_node))\n+\t    fn = mathfn_built_in (s_intype, BUILT_IN_LLCEIL);\n+\t  else\n+\t    fn = mathfn_built_in (s_intype, BUILT_IN_LCEIL);\n+\t  break;\n+\n \tcase BUILT_IN_FLOOR: case BUILT_IN_FLOORF: case BUILT_IN_FLOORL:\n \t  if (TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (long_long_integer_type_node))\n \t    fn = mathfn_built_in (s_intype, BUILT_IN_LLFLOOR);"}, {"sha": "061e92a3b4db693a89296273266055d719f9b05c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -10618,8 +10618,10 @@ tree_expr_nonnegative_p (tree t)\n \t    CASE_BUILTIN_F (BUILT_IN_EXPM1)\n \t    CASE_BUILTIN_F (BUILT_IN_FLOOR)\n \t    CASE_BUILTIN_F (BUILT_IN_FMOD)\n+\t    CASE_BUILTIN_F (BUILT_IN_LCEIL)\n \t    CASE_BUILTIN_F (BUILT_IN_LDEXP)\n \t    CASE_BUILTIN_F (BUILT_IN_LFLOOR)\n+\t    CASE_BUILTIN_F (BUILT_IN_LLCEIL)\n \t    CASE_BUILTIN_F (BUILT_IN_LLFLOOR)\n \t    CASE_BUILTIN_F (BUILT_IN_LLRINT)\n \t    CASE_BUILTIN_F (BUILT_IN_LLROUND)"}, {"sha": "da80f782789a47756778edeeaf200f88b7d9bdbd", "filename": "gcc/genopinit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -121,6 +121,7 @@ static const char * const optabs[] =\n   \"floor_optab->handlers[$A].insn_code = CODE_FOR_$(floor$a2$)\",\n   \"lfloor_optab->handlers[$A].insn_code = CODE_FOR_$(lfloor$a2$)\",\n   \"ceil_optab->handlers[$A].insn_code = CODE_FOR_$(ceil$a2$)\",\n+  \"lceil_optab->handlers[$A].insn_code = CODE_FOR_$(lceil$a2$)\",\n   \"round_optab->handlers[$A].insn_code = CODE_FOR_$(round$a2$)\",\n   \"btrunc_optab->handlers[$A].insn_code = CODE_FOR_$(btrunc$a2$)\",\n   \"nearbyint_optab->handlers[$A].insn_code = CODE_FOR_$(nearbyint$a2$)\","}, {"sha": "6835a9a76657eeadffe2e24c9c43fd1b23ec23c4", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -5035,6 +5035,7 @@ init_optabs (void)\n   floor_optab = init_optab (UNKNOWN);\n   lfloor_optab = init_optab (UNKNOWN);\n   ceil_optab = init_optab (UNKNOWN);\n+  lceil_optab = init_optab (UNKNOWN);\n   round_optab = init_optab (UNKNOWN);\n   btrunc_optab = init_optab (UNKNOWN);\n   nearbyint_optab = init_optab (UNKNOWN);"}, {"sha": "dea332e47569aeefb6c42487cf462b0cc9eb8fba", "filename": "gcc/optabs.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Foptabs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Foptabs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.h?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -188,6 +188,7 @@ enum optab_index\n   OTI_floor,\n   OTI_lfloor,\n   OTI_ceil,\n+  OTI_lceil,\n   OTI_btrunc,\n   OTI_round,\n   OTI_nearbyint,\n@@ -316,6 +317,7 @@ extern GTY(()) optab optab_table[OTI_MAX];\n #define floor_optab (optab_table[OTI_floor])\n #define lfloor_optab (optab_table[OTI_lfloor])\n #define ceil_optab (optab_table[OTI_ceil])\n+#define lceil_optab (optab_table[OTI_lceil])\n #define btrunc_optab (optab_table[OTI_btrunc])\n #define round_optab (optab_table[OTI_round])\n #define nearbyint_optab (optab_table[OTI_nearbyint])"}, {"sha": "1ad47f1aa38987a4f2c3a1ff5477539cd47503e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -1,3 +1,8 @@\n+2005-04-11  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* gcc.dg/builtins-53.c: Also check (int)ceil* and\n+\t(long long int)ceil*.\n+\t\n 2005-04-10  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/warn/Wdtor1.C: Declare template in system header with\n@@ -73,6 +78,10 @@\n \tPR target/20795\n \t* g++.dg/abi/param2.C: New test.\n \n+2005-04-09  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* gcc.dg/builtins-53.c: Also check lceil* and llceil*.\n+\n 2005-04-09  Uros Bizjak  <uros@kss-loka.si>\n \n \t* gcc.dg/builtins-53.c: New test."}, {"sha": "6bf481b1c37fd35fe7e25d13226c6450b8b8d091", "filename": "gcc/testsuite/gcc.dg/builtins-53.c", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94b16611c30340d61468354814e63916bd08303/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94b16611c30340d61468354814e63916bd08303/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-53.c?ref=f94b16611c30340d61468354814e63916bd08303", "patch": "@@ -1,7 +1,9 @@\n /* Copyright (C) 2005 Free Software Foundation.\n \n    Check that (long)floor, (long)floorf, (long)floorl,\n-   (long long)floor, (long long)floorf and (long long)floorl\n+   (long long)floor, (long long)floorf, (long long)floorl,\n+   (long)ceil, (long)ceilf, (long)ceill,\n+   (long long)ceil, (long long)ceilf, (long long)ceill\n    built-in functions compile.\n \n    Written by Uros Bizjak, 5th April 2005.  */\n@@ -10,8 +12,13 @@\n /* { dg-options \"-O2 -ffast-math\" } */\n \n extern double floor(double);\n+extern double ceil(double);\n+\n extern float floorf(float);\n+extern float ceilf(float);\n+\n extern long double floorl(long double);\n+extern long double ceill(long double);\n \n \n long int test1(double x)\n@@ -24,6 +31,16 @@ long long int test2(double x)\n   return floor(x);\n }\n \n+long int test3(double x)\n+{\n+  return ceil(x);\n+}\n+\n+long long int test4(double x)\n+{\n+  return ceil(x);\n+}\n+\n long int test1f(float x)\n {\n   return floorf(x);\n@@ -34,6 +51,16 @@ long long int test2f(float x)\n   return floorf(x);\n }\n \n+long int test3f(float x)\n+{\n+  return ceilf(x);\n+}\n+\n+long long int test4f(float x)\n+{\n+  return ceilf(x);\n+}\n+\n long int test1l(long double x)\n {\n   return floorl(x);\n@@ -43,3 +70,13 @@ long long int test2l(long double x)\n {\n   return floorl(x);\n }\n+\n+long int test3l(long double x)\n+{\n+  return ceill(x);\n+}\n+\n+long long int test4l(long double x)\n+{\n+  return ceill(x);\n+}"}]}