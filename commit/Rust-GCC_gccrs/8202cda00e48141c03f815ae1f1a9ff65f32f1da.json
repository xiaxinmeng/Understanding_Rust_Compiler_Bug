{"sha": "8202cda00e48141c03f815ae1f1a9ff65f32f1da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwMmNkYTAwZTQ4MTQxYzAzZjgxNWFlMWYxYTlmZjY1ZjMyZjFkYQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T12:08:02Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T12:08:02Z"}, "message": "Change callers in config/a*/ to match:\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36616", "tree": {"sha": "a907ce9d06ab1d0abe2298067e83c757d13b0b9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a907ce9d06ab1d0abe2298067e83c757d13b0b9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8202cda00e48141c03f815ae1f1a9ff65f32f1da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8202cda00e48141c03f815ae1f1a9ff65f32f1da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8202cda00e48141c03f815ae1f1a9ff65f32f1da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8202cda00e48141c03f815ae1f1a9ff65f32f1da/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca13100a6c969cbbca0dd75d5e8d6cf76a586cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca13100a6c969cbbca0dd75d5e8d6cf76a586cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca13100a6c969cbbca0dd75d5e8d6cf76a586cf8"}], "stats": {"total": 91, "additions": 46, "deletions": 45}, "files": [{"sha": "996fea5b01126957d5206cdd90b1ac6ba05722e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -54,6 +54,7 @@\n \tREADONLY_SECTION_ASM_OP, LITERALS_SECTION_ASM_OP,\n \tCTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP, COMMON_ASM_OP): Here.\n \t* config/arc/arc.h (ASM_BYTE_OP, SET_ASM_OP): Here.\n+\t(PUSHSECTION_ASM_OP): Define this, not PUSHSECTION_FORMAT.\n \t* config/arm/aof.h (CTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP):\n \tHere.\n \t* config/arm/aout.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,"}, {"sha": "1b35bb2ea8fa885570094bb4000b1ae4e2c8b8cf", "filename": "gcc/config/a29k/udi.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Fa29k%2Fudi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Fa29k%2Fudi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fudi.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -78,7 +78,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -88,7 +88,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "5cf761d0a1455a2a138023bde50c2ba7b41e2fd5", "filename": "gcc/config/alpha/alpha-interix.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Falpha-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Falpha-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-interix.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -163,7 +163,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -173,7 +173,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "32373cb3577eab4d49c5e8a38f3befedd4ccafcb", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -5112,7 +5112,7 @@ alpha_output_filename (stream, name)\n   else if (write_symbols == DBX_DEBUG)\n     {\n       ASM_GENERATE_INTERNAL_LABEL (ltext_label_name, \"Ltext\", 0);\n-      fprintf (stream, \"%s \", ASM_STABS_OP);\n+      fprintf (stream, \"%s\", ASM_STABS_OP);\n       output_quoted_string (stream, name);\n       fprintf (stream, \",%d,0,0,%s\\n\", N_SOL, &ltext_label_name[1]);\n     }\n@@ -5145,7 +5145,7 @@ alpha_output_lineno (stream, line)\n     {\n       /* mips-tfile doesn't understand .stabd directives.  */\n       ++sym_lineno;\n-      fprintf (stream, \"$LM%d:\\n\\t%s %d,0,%d,$LM%d\\n\",\n+      fprintf (stream, \"$LM%d:\\n%s%d,0,%d,$LM%d\\n\",\n \t       sym_lineno, ASM_STABN_OP, N_SLINE, line, sym_lineno);\n     }\n   else"}, {"sha": "91a783759a1b836903277e99e0a17c373754520b", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -76,13 +76,13 @@ do {\t\t\t\t\t\t\t\t\\\n #ifdef IDENTIFY_WITH_IDENT\n #define ASM_IDENTIFY_GCC(FILE) /* nothing */\n #define ASM_IDENTIFY_LANGUAGE(FILE)\t\t\t\\\n- fprintf(FILE, \"\\t%s \\\"GCC (%s) %s\\\"\\n\", IDENT_ASM_OP,\t\\\n+ fprintf(FILE, \"%s\\\"GCC (%s) %s\\\"\\n\", IDENT_ASM_OP,\t\\\n \t lang_identify(), version_string)\n #else\n #define ASM_FILE_END(FILE)\t\t\t\t\t\\\n do {\t\t\t\t \t\t\t\t\\\n      if (!flag_no_ident)\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t\\\"GCC: (GNU) %s\\\"\\n\",\t\t\\\n+\tfprintf ((FILE), \"%s\\\"GCC: (GNU) %s\\\"\\n\",\t\t\\\n \t\t IDENT_ASM_OP, version_string);\t\t\t\\\n    } while (0)\n #endif\n@@ -92,7 +92,7 @@ do {\t\t\t\t \t\t\t\t\\\n \n /* Output #ident as a .ident.  */\n #define ASM_OUTPUT_IDENT(FILE, NAME) \\\n-  fprintf (FILE, \"\\t%s\\t\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n+  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n \n /* This is how to allocate empty space in some section.  The .zero\n    pseudo-op is used for this on most svr4 assemblers.  */\n@@ -101,7 +101,7 @@ do {\t\t\t\t \t\t\t\t\\\n \n #undef ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n-  fprintf (FILE, \"\\t%s\\t%u\\n\", SKIP_ASM_OP, (SIZE))\n+  fprintf (FILE, \"%s%u\\n\", SKIP_ASM_OP, (SIZE))\n \n /* Output the label which precedes a jumptable.  Note that for all svr4\n    systems where we actually generate jumptables (which is to say every\n@@ -142,7 +142,7 @@ do {\t\t\t\t \t\t\t\t\\\n #undef ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t%s\\t\", COMMON_ASM_OP);\t\t\t\t\\\n+  fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n   assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n   fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n } while (0)\n@@ -159,14 +159,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n     sbss_section();\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     bss_section();\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n+  fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\t\\\n   assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n   putc (',', FILE);\t\t\t\t\t\t\t\\\n   fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t\t\\\n   putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n   if (!flag_inhibit_size_directive)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\t\\\n+      fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n       assemble_name (FILE, NAME);\t\t\t\t\t\\\n       fprintf (FILE, \",%d\\n\", (SIZE));\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n@@ -311,7 +311,7 @@ void FN ()\t\t\t\t\t\\\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -321,7 +321,7 @@ void FN ()\t\t\t\t\t\\\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -434,7 +434,7 @@ void FN ()\t\t\t\t\t\\\n #define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n     HOST_WIDE_INT size;\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\\\n+    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\\\n     putc (',', FILE);\t\t\t\t\t\t\\\n     fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t\\\n@@ -445,7 +445,7 @@ void FN ()\t\t\t\t\t\\\n \t&& (size = int_size_in_bytes (TREE_TYPE (DECL))) > 0)\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tsize_directive_output = 1;\t\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\\\n+\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\\\n \tassemble_name (FILE, NAME);\t\t\t\t\\\n \tfputc (',', FILE);\t\t\t\t\t\\\n \tfprintf (FILE, HOST_WIDE_INT_PRINT_DEC, size);\t\t\\\n@@ -472,7 +472,7 @@ void FN ()\t\t\t\t\t\\\n \t&& (size = int_size_in_bytes (TREE_TYPE (DECL))) > 0)\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tsize_directive_output = 1;\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\t\\\n+\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, name);\t\t\t\t\t\\\n \tfputc (',', FILE);\t\t\t\t\t\t\\\n \tfprintf (FILE, HOST_WIDE_INT_PRINT_DEC, size);\t\t\t\\"}, {"sha": "f4c569233911761372ef92f360eb9646e15e2fb6", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -332,7 +332,7 @@ extern void dtors_section\tPARAMS ((void));\n #undef ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t%s\\t\", COMMON_ASM_OP);\t\t\t\t\\\n+  fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n   assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n   fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n } while (0)"}, {"sha": "ca2697a5bd159af463ddae666ad5319342dbed49", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -1206,7 +1206,7 @@ do {\t\t\t\t\t\t\t\\\n \n /* For DWARF.  Marginally different than default so output is \"prettier\"\n    (and consistent with above).  */\n-#define PUSHSECTION_FORMAT \"\\t%s %s\\n\"\n+#define PUSHSECTION_ASM_OP \"\\t.section \"\n \n /* Tell crtstuff.c we're using ELF.  */\n #define OBJECT_FORMAT_ELF\n@@ -1336,7 +1336,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This is how to output an assembler line for a numeric constant byte.  */\n #define ASM_BYTE_OP\t\"\\t.byte\\t\"\n #define ASM_OUTPUT_BYTE(FILE, VALUE)  \\\n-  fprintf (FILE, \"\\t%s\\t0x%x\\n\", ASM_BYTE_OP, (VALUE))\n+  fprintf (FILE, \"%s0x%x\\n\", ASM_BYTE_OP, (VALUE))\n \n /* The assembler's parentheses characters.  */\n #define ASM_OPEN_PAREN \"(\""}, {"sha": "60d736a79dd9b48c02fddd7f9626c78c95cd747c", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -94,7 +94,7 @@ ctor_section ()\t\t\t\t\t\t\t\t\\\n \t\t   \"Attempt to output more than one ctor section\\n\");\t\\\n \t  abort ();\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t%s\\n\", CTORS_SECTION_ASM_OP);\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", CTORS_SECTION_ASM_OP);\t\t\\\n       in_section = in_ctor;\t\t\t\t\t\t\\\n       ctors_once = 1;\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n@@ -113,7 +113,7 @@ dtor_section ()\t\t\t\t\t\t\t\t\\\n \t\t   \"Attempt to output more than one dtor section\\n\");\t\\\n \t  abort ();\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t%s\\n\", DTORS_SECTION_ASM_OP);\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", DTORS_SECTION_ASM_OP);\t\t\\\n       in_section = in_dtor;\t\t\t\t\t\t\\\n       dtors_once = 1;\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\"}, {"sha": "b69ca3e41ec7212a82801f7ed8b4123aaabae07c", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -173,7 +173,7 @@ dtors_section ()\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       ctors_section ();\t\t\t\t\\\n-      fprintf (STREAM, \"\\t%s\\t \", INT_ASM_OP);\t\\\n+      fprintf (STREAM, \"%s\", INT_ASM_OP);\t\\\n       assemble_name (STREAM, NAME);\t\t\\\n       fprintf (STREAM, \"\\n\");\t\t\t\\\n     }\t\t\t\t\t\t\\\n@@ -186,7 +186,7 @@ dtors_section ()\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       dtors_section ();\t\t\t\t\\\n-      fprintf (STREAM, \"\\t%s\\t \", INT_ASM_OP);\t\\\n+      fprintf (STREAM, \"%s\", INT_ASM_OP);\t\\\n       assemble_name (STREAM, NAME);\t\t\\\n       fprintf (STREAM, \"\\n\");\t\t\t\\\n     }\t\t\t\t\t\t\\"}, {"sha": "6008eb5e800dd67cbd3cabee74f272f35cd5c2b8", "filename": "gcc/config/arm/conix-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Fconix-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Fconix-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconix-elf.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -112,12 +112,12 @@ func_ptr __DTOR_END__[1] = { (func_ptr) 0 };\n #define UNALIGNED_WORD_ASM_OP \"\\t.4byte\\t\"\n \n #define ASM_OUTPUT_DWARF2_ADDR_CONST(FILE,ADDR)                  \\\n-     fprintf ((FILE), \"\\t%s\\t%s\", UNALIGNED_WORD_ASM_OP, ADDR)\n+     fprintf ((FILE), \"%s%s\", UNALIGNED_WORD_ASM_OP, ADDR)\n \n #define ASM_OUTPUT_DWARF_ADDR_CONST(FILE,RTX)       \t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t    \t\t\\\n-      fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_WORD_ASM_OP);\t\\\n+      fprintf ((FILE), \"%s\", UNALIGNED_WORD_ASM_OP);\t\t\\\n       output_addr_const ((FILE), (RTX));\t\t    \t\\\n       fputc ('\\n', (FILE));\t\t\t\t    \t\\\n     }\t\t\t\t\t\t\t\t\\"}, {"sha": "99f5861856ccf3a305c47c4693e2ee504ce320bd", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -80,7 +80,7 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       ARM_DECLARE_FUNCTION_NAME (FILE, NAME, DECL);     \\\n-      fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\\\n+      fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\\\n       assemble_name (FILE, NAME);\t\t\t\\\n       putc (',', FILE);\t\t\t\t\t\\\n       fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\\\n@@ -94,7 +94,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\\\n+      fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\\\n       assemble_name (FILE, NAME);\t\t\t\t\\\n       putc (',', FILE);\t\t\t\t\t\t\\\n       fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\\\n@@ -103,7 +103,7 @@ Boston, MA 02111-1307, USA.  */\n       if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\\\n         {\t\t\t\t\t\t\t\\\n \t  size_directive_output = 1;\t\t\t\t\\\n-\t  fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\\\n+\t  fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\\\n \t  assemble_name (FILE, NAME);\t\t\t\t\\\n \t  putc (',', FILE);\t\t\t\t\t\\\n \t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC,\t\t\\\n@@ -129,7 +129,7 @@ Boston, MA 02111-1307, USA.  */\n \t  && !size_directive_output)\t\t\t\t\t\\\n         {\t\t\t\t\t\t\t\t\\\n \t  size_directive_output = 1;\t\t\t\t\t\\\n-\t  fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\\\n+\t  fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n \t  assemble_name (FILE, name);\t\t\t\t\t\\\n \t  putc (',', FILE);\t\t\t\t\t\t\\\n \t  fprintf (FILE, HOST_WIDE_INT_PRINT_DEC,\t\t\t\\\n@@ -151,7 +151,7 @@ Boston, MA 02111-1307, USA.  */\n \t  labelno ++;\t\t\t\t\t\t\\\n \t  ASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\\\n \t  ASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\\\n-\t  fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\\\n+\t  fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\\\n \t  assemble_name (FILE, (FNAME));\t\t\t\\\n           fprintf (FILE, \",\");\t\t\t\t\t\\\n \t  assemble_name (FILE, label);\t\t\t\t\\\n@@ -342,7 +342,7 @@ dtors_section ()\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       ctors_section ();\t\t\t\t\\\n-      fprintf (STREAM, \"\\t%s\\t \", INT_ASM_OP);\t\\\n+      fprintf (STREAM, \"%s\", INT_ASM_OP);\t\\\n       assemble_name (STREAM, NAME);\t\t\\\n       fprintf (STREAM, \"\\n\");\t\t\t\\\n     }\t\t\t\t\t\t\\\n@@ -356,7 +356,7 @@ dtors_section ()\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       dtors_section ();\t\t\t\t\\\n-      fprintf (STREAM, \"\\t%s\\t \", INT_ASM_OP);\t\\\n+      fprintf (STREAM, \"%s\", INT_ASM_OP);\t\\\n       assemble_name (STREAM, NAME);\t\t\\\n       fprintf (STREAM, \"\\n\");\t\t\t\\\n     }\t\t\t\t\t\t\\"}, {"sha": "ca65431fc30bd44b29dfce61b4dff5f1e0756e92", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -120,18 +120,18 @@ Boston, MA 02111-1307, USA.  */\n \n /* Output #ident as a .ident.  */\n #define ASM_OUTPUT_IDENT(FILE, NAME) \\\n-  fprintf (FILE, \"\\t%s\\t\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n+  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n   \n #ifdef IDENTIFY_WITH_IDENT\n #define ASM_IDENTIFY_GCC(FILE) /* nothing */\n #define ASM_IDENTIFY_LANGUAGE(FILE)\t\t\t\\\n- fprintf (FILE, \"\\t%s \\\"GCC (%s) %s\\\"\\n\", IDENT_ASM_OP,\t\\\n+ fprintf (FILE, \"%s\\\"GCC (%s) %s\\\"\\n\", IDENT_ASM_OP,\t\\\n \t lang_identify (), version_string)\n #else\n #define ASM_FILE_END(FILE)\t\t\t\t\t\\\n do {\t\t\t\t \t\t\t\t\\\n      if (!flag_no_ident)\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t%s\\t\\\"GCC: (GNU) %s\\\"\\n\",\t\t\\\n+\tfprintf ((FILE), \"%s\\\"GCC: (GNU) %s\\\"\\n\",\t\t\\\n \t\t IDENT_ASM_OP, version_string);\t\t\t\\\n    } while (0)\n #endif"}, {"sha": "d0536291bfe3b11e266496b5ecaf64ed19361207", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -116,12 +116,12 @@ rdata_section ()\t\t\t\t\t\t\\\n #define UNALIGNED_WORD_ASM_OP \"\\t.4byte\\t\"\n \n #define ASM_OUTPUT_DWARF2_ADDR_CONST(FILE,ADDR)                  \\\n- fprintf ((FILE), \"\\t%s\\t%s\", UNALIGNED_WORD_ASM_OP, ADDR)\n+ fprintf ((FILE), \"%s%s\", UNALIGNED_WORD_ASM_OP, ADDR)\n \n #define ASM_OUTPUT_DWARF_ADDR_CONST(FILE,RTX)\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_WORD_ASM_OP);\t\\\n+      fprintf ((FILE), \"%s\", UNALIGNED_WORD_ASM_OP);\t\t\\\n       output_addr_const ((FILE), (RTX));\t\t\t\\\n       fputc ('\\n', (FILE));\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\"}, {"sha": "df1949b82ec323703432a2d7a93a096a604e604d", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -3893,7 +3893,7 @@ gas_output_limited_string(file, str)\n {\n   const unsigned char *_limited_str = (unsigned char *) str;\n   unsigned ch;\n-  fprintf (file, \"\\t%s\\t\\\"\", STRING_ASM_OP);\n+  fprintf (file, \"%s\\\"\", STRING_ASM_OP);\n   for (; (ch = *_limited_str); _limited_str++)\n     {\n       int escape;"}, {"sha": "a0857784e7573099fe7f426cb37ab933c394a571", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202cda00e48141c03f815ae1f1a9ff65f32f1da/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=8202cda00e48141c03f815ae1f1a9ff65f32f1da", "patch": "@@ -2305,7 +2305,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\\\n do {\t\t\t\t\t\t   \t\\\n-     fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t   \t\\\n+     fprintf (FILE, \"%s\", TYPE_ASM_OP);\t   \t\t\\\n      assemble_name (FILE, NAME);\t\t   \t\\\n      putc (',', FILE);\t\t\t\t   \t\\\n      fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\\\n@@ -2331,7 +2331,7 @@ do {\t\t\t\t\t\t   \t\\\n \tlabelno++;\t\t\t\t\t\t\t\\\n \tASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\t\\\n \tASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\t\\\n+\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, (FNAME));\t\t\t\t\t\\\n         fprintf (FILE, \",\");\t\t\t\t\t\t\\\n \tassemble_name (FILE, label);\t\t\t\t\t\\\n@@ -2351,7 +2351,7 @@ do {\t\t\t\t\t\t   \t\\\n \n #define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t  \\\n do {\t\t\t\t\t\t\t\t\t  \\\n-      fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t  \\\n+      fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t  \\\n       assemble_name (FILE, NAME);\t\t\t\t\t  \\\n       putc (',', FILE);\t\t\t\t\t\t\t  \\\n       fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t  \\\n@@ -2360,7 +2360,7 @@ do {\t\t\t\t\t\t\t\t\t  \\\n       if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t  \\\n \t{\t\t\t\t\t\t\t\t  \\\n \t  size_directive_output = 1;\t\t\t\t\t  \\\n-\t  fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t  \\\n+\t  fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t  \\\n \t  assemble_name (FILE, NAME);\t\t\t\t\t  \\\n \t  fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n     }\t\t\t\t\t\t\t\t\t  \\\n@@ -2385,7 +2385,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n \t && !size_directive_output)\t\t\t\t\t \\\n        {\t\t\t\t\t\t\t\t \\\n \t size_directive_output = 1;\t\t\t\t\t \\\n-\t fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t \\\n+\t fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t \\\n \t assemble_name (FILE, name);\t\t\t\t\t \\\n \t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n        }\t\t\t\t\t\t\t\t \\"}]}