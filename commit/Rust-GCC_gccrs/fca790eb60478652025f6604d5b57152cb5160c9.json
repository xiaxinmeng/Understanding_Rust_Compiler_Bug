{"sha": "fca790eb60478652025f6604d5b57152cb5160c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhNzkwZWI2MDQ3ODY1MjAyNWY2NjA0ZDViNTcxNTJjYjUxNjBjOQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2001-05-16T04:12:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-05-16T04:12:33Z"}, "message": "flow.c (life_analysis): After life analysis is complete...\n\n        * flow.c (life_analysis): After life analysis is complete, do\n        an optional scan over insns looking for REG_LABEL notes that\n        reference a deleted label.\n        (propagate_block_delete_insn): Verify INOTE is a CODE_LABEL\n        before peeking at LABEL_NUSES.\n\nFrom-SVN: r42131", "tree": {"sha": "6d5d814185393b802dbdb1574b39b2a7cb13e15e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d5d814185393b802dbdb1574b39b2a7cb13e15e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca790eb60478652025f6604d5b57152cb5160c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca790eb60478652025f6604d5b57152cb5160c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca790eb60478652025f6604d5b57152cb5160c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca790eb60478652025f6604d5b57152cb5160c9/comments", "author": null, "committer": null, "parents": [{"sha": "48941cb809ff5c9be1116cb9669872017568c670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48941cb809ff5c9be1116cb9669872017568c670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48941cb809ff5c9be1116cb9669872017568c670"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "d0f8dfe744e593c23762557cd48b8736d50cdc81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca790eb60478652025f6604d5b57152cb5160c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca790eb60478652025f6604d5b57152cb5160c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fca790eb60478652025f6604d5b57152cb5160c9", "patch": "@@ -1,3 +1,11 @@\n+Tue May 15 22:14:09 2001  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* flow.c (life_analysis): After life analysis is complete, do\n+\tan optional scan over insns looking for REG_LABEL notes that\n+\treference a deleted label.\n+\t(propagate_block_delete_insn): Verify INOTE is a CODE_LABEL\n+\tbefore peeking at LABEL_NUSES.\n+\n 2001-05-15  Richard Henderson  <rth@redhat.com>\n \n \t* unwind-sjlj.c (_Unwind_GetDataRelBase): New."}, {"sha": "d983ab5d24d9611323cb9c929d43128ce24435d1", "filename": "gcc/flow.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca790eb60478652025f6604d5b57152cb5160c9/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca790eb60478652025f6604d5b57152cb5160c9/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=fca790eb60478652025f6604d5b57152cb5160c9", "patch": "@@ -2854,6 +2854,21 @@ life_analysis (f, file, flags)\n     dump_flow_info (file);\n \n   free_basic_block_vars (1);\n+\n+#ifdef ENABLE_CHECKING\n+  {\n+    rtx insn;\n+\n+    /* Search for any REG_LABEL notes whih reference deleted labels.  */\n+    for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n+      {\n+\trtx inote = find_reg_note (insn, REG_LABEL, NULL_RTX);\n+\n+\tif (inote && GET_CODE (inote) == NOTE_INSN_DELETED_LABEL)\n+\t  abort ();\n+      }\n+  }\n+#endif\n }\n \n /* A subroutine of verify_wide_reg, called through for_each_rtx.\n@@ -3631,9 +3646,18 @@ propagate_block_delete_insn (bb, insn)\n   /* If the insn referred to a label, and that label was attached to\n      an ADDR_VEC, it's safe to delete the ADDR_VEC.  In fact, it's\n      pretty much mandatory to delete it, because the ADDR_VEC may be\n-     referencing labels that no longer exist.  */\n+     referencing labels that no longer exist.\n+\n+     INSN may reference a deleted label, particularly when a jump\n+     table has been optimized into a direct jump.  There's no\n+     real good way to fix up the reference to the deleted label\n+     when the label is deleted, so we just allow it here.\n+\n+     After dead code elimination is complete, we do search for\n+     any REG_LABEL notes which reference deleted labels as a\n+     sanity check.  */\n \n-  if (inote)\n+  if (inote && GET_CODE (inote) == CODE_LABEL)\n     {\n       rtx label = XEXP (inote, 0);\n       rtx next;"}]}