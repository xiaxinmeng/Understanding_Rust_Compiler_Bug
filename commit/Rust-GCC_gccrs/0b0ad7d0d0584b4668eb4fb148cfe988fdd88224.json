{"sha": "0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIwYWQ3ZDBkMDU4NGI0NjY4ZWI0ZmIxNDhjZmU5ODhmZGQ4ODIyNA==", "commit": {"author": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-05-20T12:20:55Z"}, "committer": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-05-20T12:20:55Z"}, "message": "Add missing testsuite/Changelog for PR94595 bug fix.", "tree": {"sha": "6fabd2d7ca3437fc88e56bad2eeeb1f7e6853445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fabd2d7ca3437fc88e56bad2eeeb1f7e6853445"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224/comments", "author": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2f26af32b5b031fce761aa090de9476a53e6e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f26af32b5b031fce761aa090de9476a53e6e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f26af32b5b031fce761aa090de9476a53e6e5a"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "49f8cd7cf9c9ede7184f3d5843f9d50ecd0b941c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0ad7d0d0584b4668eb4fb148cfe988fdd88224/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b0ad7d0d0584b4668eb4fb148cfe988fdd88224", "patch": "@@ -1,3 +1,62 @@\n+2020-05-20  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\tPR target/94959\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_float2.c: Modify.\n+\t* gcc.target/arm/mve/intrinsics/mve_vldr.c: New test.\n+\t* gcc.target/arm/mve/intrinsics/mve_vldr_z.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vstr.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vstr_p.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_f16.c: Modify.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_s16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_s8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_u16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_u8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_f16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_s16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_s8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_u16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vld1q_z_u8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrbq_s8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrbq_u8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrbq_z_s8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrbq_z_u8.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_s64.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_u64.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_z_s64.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrdq_gather_base_wb_z_u64.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_f16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_s16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_u16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_z_f16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_z_s16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_z_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_z_u16.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrhq_z_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_gather_base_wb_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_gather_base_wb_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_gather_base_wb_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_gather_base_wb_z_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_gather_base_wb_z_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_gather_base_wb_z_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_z_f32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_z_s32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vldrwq_z_u32.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vuninitializedq_float.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vuninitializedq_float1.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vuninitializedq_int.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vuninitializedq_int1.c: Likewise.\n+\n 2020-05-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95219"}]}