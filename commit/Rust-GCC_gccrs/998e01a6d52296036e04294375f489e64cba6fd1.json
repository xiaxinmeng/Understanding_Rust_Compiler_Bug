{"sha": "998e01a6d52296036e04294375f489e64cba6fd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4ZTAxYTZkNTIyOTYwMzZlMDQyOTQzNzVmNDg5ZTY0Y2JhNmZkMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-09-29T13:25:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-09-29T13:25:48Z"}, "message": "Define C++17 std::hypot without _GLIBCXX_USE_C99_MATH_TR1\n\n\t* include/c_global/cmath (hypot, __hypot3): Move C++17 overloads\n\toutside _GLIBCXX_USE_C99_MATH_TR1 condition.\n\nFrom-SVN: r240620", "tree": {"sha": "2184da8f2893fd505034bb8efd739ec0c1bfbd97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2184da8f2893fd505034bb8efd739ec0c1bfbd97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/998e01a6d52296036e04294375f489e64cba6fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998e01a6d52296036e04294375f489e64cba6fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/998e01a6d52296036e04294375f489e64cba6fd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998e01a6d52296036e04294375f489e64cba6fd1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9087411ad024045963288b86f2a11840a30b489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9087411ad024045963288b86f2a11840a30b489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9087411ad024045963288b86f2a11840a30b489"}], "stats": {"total": 92, "additions": 52, "deletions": 40}, "files": [{"sha": "2106912d730876dcb195bb12470ec099321fda9a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998e01a6d52296036e04294375f489e64cba6fd1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998e01a6d52296036e04294375f489e64cba6fd1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=998e01a6d52296036e04294375f489e64cba6fd1", "patch": "@@ -1,3 +1,8 @@\n+2016-09-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/c_global/cmath (hypot, __hypot3): Move C++17 overloads\n+\toutside _GLIBCXX_USE_C99_MATH_TR1 condition.\n+\n 2016-09-29  Alan Modra  <amodra@gmail.com>\n \n \t* configure.ac (LONG_DOUBLE_COMPAT_FLAGS): New ACSUBST."}, {"sha": "0e7c4ada6993c4593c368ffd92b6e0031ef8474b", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 47, "deletions": 40, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998e01a6d52296036e04294375f489e64cba6fd1/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998e01a6d52296036e04294375f489e64cba6fd1/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=998e01a6d52296036e04294375f489e64cba6fd1", "patch": "@@ -1455,46 +1455,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return hypot(__type(__x), __type(__y));\n     }\n \n-#if __cplusplus > 201402L\n-#define __cpp_lib_hypot 201603\n-  // [c.math.hypot3], three-dimensional hypotenuse\n-\n-  template<typename _Tp>\n-    inline _Tp\n-    __hypot3(_Tp __x, _Tp __y, _Tp __z)\n-    {\n-      __x = std::abs(__x);\n-      __y = std::abs(__y);\n-      __z = std::abs(__z);\n-      if (_Tp __a = __x < __y ? __y < __z ? __z : __y : __x < __z ? __z : __x)\n-\treturn __a * std::sqrt((__x / __a) * (__x / __a)\n-\t\t\t       + (__y / __a) * (__y / __a)\n-\t\t\t       + (__z / __a) * (__z / __a));\n-      else\n-\treturn {};\n-    }\n-\n-  inline float\n-  hypot(float __x, float __y, float __z)\n-  { return std::__hypot3<float>(__x, __y, __z); }\n-\n-  inline double\n-  hypot(double __x, double __y, double __z)\n-  { return std::__hypot3<double>(__x, __y, __z); }\n-\n-  inline long double\n-  hypot(long double __x, long double __y, long double __z)\n-  { return std::__hypot3<long double>(__x, __y, __z); }\n-\n-  template<typename _Tp, typename _Up, typename _Vp>\n-    typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type\n-    hypot(_Tp __x, _Up __y, _Vp __z)\n-    {\n-      using __type = typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type;\n-      return std::__hypot3<__type>(__x, __y, __z);\n-    }\n-#endif // C++17\n-\n #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO\n   constexpr int\n   ilogb(float __x)\n@@ -1830,6 +1790,53 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \n #endif // C++11\n \n+#if __cplusplus > 201402L\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  // [c.math.hypot3], three-dimensional hypotenuse\n+#define __cpp_lib_hypot 201603\n+\n+  template<typename _Tp>\n+    inline _Tp\n+    __hypot3(_Tp __x, _Tp __y, _Tp __z)\n+    {\n+      __x = std::abs(__x);\n+      __y = std::abs(__y);\n+      __z = std::abs(__z);\n+      if (_Tp __a = __x < __y ? __y < __z ? __z : __y : __x < __z ? __z : __x)\n+\treturn __a * std::sqrt((__x / __a) * (__x / __a)\n+\t\t\t       + (__y / __a) * (__y / __a)\n+\t\t\t       + (__z / __a) * (__z / __a));\n+      else\n+\treturn {};\n+    }\n+\n+  inline float\n+  hypot(float __x, float __y, float __z)\n+  { return std::__hypot3<float>(__x, __y, __z); }\n+\n+  inline double\n+  hypot(double __x, double __y, double __z)\n+  { return std::__hypot3<double>(__x, __y, __z); }\n+\n+  inline long double\n+  hypot(long double __x, long double __y, long double __z)\n+  { return std::__hypot3<long double>(__x, __y, __z); }\n+\n+  template<typename _Tp, typename _Up, typename _Vp>\n+    typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type\n+    hypot(_Tp __x, _Up __y, _Vp __z)\n+    {\n+      using __type = typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type;\n+      return std::__hypot3<__type>(__x, __y, __z);\n+    }\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace\n+#endif // C++17\n+\n+\n #if _GLIBCXX_USE_STD_SPEC_FUNCS\n #  include <bits/specfun.h>\n #endif"}]}