{"sha": "3be6ce4646b9ba06cd6b41804925a93ec5b33583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JlNmNlNDY0NmI5YmEwNmNkNmI0MTgwNDkyNWE5M2VjNWIzMzU4Mw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-06-29T03:10:01Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-29T03:10:01Z"}, "message": "Rearrange lots of files...\n\n\tRearrange lots of files, removing entirely the\n\tgcc.c-torture/special, gcc.c-torture/code-quality, and gcc.failure\n\tdirectories.\n\n\t* Deleted files:\n\tgcc.c-torture/code_quality/code_quality.exp\n\tgcc.c-torture/special/special.exp\n\tgcc.failure/failure.exp\n\tgcc.failure/940409-1.x\n\tgcc.c-torture/compile/961203-1.x\n\n\t* New files:\n\tgcc.misc-tests/linkage.exp\n\tgcc.c-torture/execute/920730-1t.c\n\tgcc.c-torture/execute/920730-1t.x\n\tgcc.c-torture/compile/920520-1.x\n\tgcc.c-torture/compile/920521-1.x\n\tgcc.c-torture/compile/981006-1.x\n\tgcc.c-torture/execute/eeprof-1.x\n\n\t* Moved files (possibly with modifications to fit a new harness):\n\tOld name\t\t\t\tNew name\n\tgcc.c-torture/code_quality/920608-1.c\tgcc.c-torture/compile/920608-1.c\n\tgcc.c-torture/special/920413-1.c\tgcc.dg/920413-1.c\n\tgcc.c-torture/special/920520-1.c\tgcc.c-torture/compile/920520-1.c\n\tgcc.c-torture/special/920521-1.c\tgcc.c-torture/compile/920521-1.c\n\tgcc.c-torture/special/920717-x.c\tgcc.misc-tests/linkage-x.c\n\tgcc.c-torture/special/920717-y.c\tgcc.misc-tests/linkage-y.c\n\tgcc.c-torture/special/920730-1.c\tgcc.c-torture/execute/920730-1.c\n\tgcc.c-torture/special/930510-1.c\tgcc.dg/cpp/19930510-1.c\n\tgcc.c-torture/special/951130-1.c\tgcc.dg/951130-1.c\n\tgcc.c-torture/special/960224-1.c\tgcc.dg/cpp/19960224-1.c\n\tgcc.c-torture/special/960224-2.c\tgcc.dg/cpp/19960224-2.c\n\tgcc.c-torture/special/981006-1.c\tgcc.c-torture/compile/981006-1.c\n\tgcc.c-torture/special/eeprof-1.c\tgcc.c-torture/execute/eeprof-1.c\n\tgcc.failure/940409-1.c\t\t\tgcc.dg/940409-1.c\n\nFrom-SVN: r34775", "tree": {"sha": "bf592ea9ef8fe4cce25dd21e3a2267e5658d7371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf592ea9ef8fe4cce25dd21e3a2267e5658d7371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3be6ce4646b9ba06cd6b41804925a93ec5b33583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be6ce4646b9ba06cd6b41804925a93ec5b33583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be6ce4646b9ba06cd6b41804925a93ec5b33583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be6ce4646b9ba06cd6b41804925a93ec5b33583/comments", "author": null, "committer": null, "parents": [{"sha": "628f05b4c155039e5ebf5f85bb71bb75fcae63af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628f05b4c155039e5ebf5f85bb71bb75fcae63af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/628f05b4c155039e5ebf5f85bb71bb75fcae63af"}], "stats": {"total": 377, "additions": 141, "deletions": 236}, "files": [{"sha": "39202234bcfddded2563395fe8fe290c603ea5a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -1,3 +1,42 @@\n+2000-06-28  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\tRearrange lots of files, removing entirely the\n+\tgcc.c-torture/special, gcc.c-torture/code-quality, and gcc.failure\n+\tdirectories.\n+\n+\t* Deleted files:\n+\tgcc.c-torture/code_quality/code_quality.exp\n+\tgcc.c-torture/special/special.exp\n+\tgcc.failure/failure.exp\n+\tgcc.failure/940409-1.x\n+\tgcc.c-torture/compile/961203-1.x\n+\n+\t* New files:\n+\tgcc.misc-tests/linkage.exp\n+\tgcc.c-torture/execute/920730-1t.c\n+\tgcc.c-torture/execute/920730-1t.x\n+\tgcc.c-torture/compile/920520-1.x\n+\tgcc.c-torture/compile/920521-1.x\n+\tgcc.c-torture/compile/981006-1.x\n+\tgcc.c-torture/execute/eeprof-1.x\n+\n+\t* Moved files (possibly with modifications to fit a new harness):\n+\tOld name\t\t\t\tNew name\n+\tgcc.c-torture/code_quality/920608-1.c\tgcc.c-torture/compile/920608-1.c\n+\tgcc.c-torture/special/920413-1.c\tgcc.dg/920413-1.c\n+\tgcc.c-torture/special/920520-1.c\tgcc.c-torture/compile/920520-1.c\n+\tgcc.c-torture/special/920521-1.c\tgcc.c-torture/compile/920521-1.c\n+\tgcc.c-torture/special/920717-x.c\tgcc.misc-tests/linkage-x.c\n+\tgcc.c-torture/special/920717-y.c\tgcc.misc-tests/linkage-y.c\n+\tgcc.c-torture/special/920730-1.c\tgcc.c-torture/execute/920730-1.c\n+\tgcc.c-torture/special/930510-1.c\tgcc.dg/cpp/19930510-1.c\n+\tgcc.c-torture/special/951130-1.c\tgcc.dg/951130-1.c\n+\tgcc.c-torture/special/960224-1.c\tgcc.dg/cpp/19960224-1.c\n+\tgcc.c-torture/special/960224-2.c\tgcc.dg/cpp/19960224-2.c\n+\tgcc.c-torture/special/981006-1.c\tgcc.c-torture/compile/981006-1.c\n+\tgcc.c-torture/special/eeprof-1.c\tgcc.c-torture/execute/eeprof-1.c\n+\tgcc.failure/940409-1.c\t\t\tgcc.dg/940409-1.c\n+\n 2000-06-28  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* c-torture/compile/961203-1.x: Delete."}, {"sha": "b8b72ea1bcb03a5b1ce3c60a8d7105ad962d79f6", "filename": "gcc/testsuite/gcc.c-torture/code_quality/code_quality.exp", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcode_quality%2Fcode_quality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcode_quality%2Fcode_quality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcode_quality%2Fcode_quality.exp?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,55 +0,0 @@\n-#\n-# Expect driver script for GCC Regression Tests\n-#   Copyright (C) 1993, 1997 Free Software Foundation\n-#\n-# This file is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. \n-#\n-# Written by Jeffrey Wheat (cassidy@cygnus.com)\n-#\n-\n-#\n-# These tests come from Torbjorn Granlund's (tege@cygnus.com)\n-# C torture test suite, and other contributors.\n-#\n-\n-if $tracelevel then {\n-    strace $tracelevel\n-}\n-\n-# load support procs\n-load_lib c-torture.exp\n-\n-#\n-# This loop will run c-torture on any *.c file found in this directory.\n-# If a *.c has a corresponding *.exp file, then the test is skipped as\n-# as the *.exp will drive the test itself. I did things this way so that\n-# generic tests did not need a seperate .exp for it. Only the tests that \n-# required unique options would need it's own .exp file.\n-#\n-\n-foreach testcase [glob -nocomplain $srcdir/$subdir/*.c] {\n-    if [file exists [file rootname $testcase].exp] then {\n-\tverbose \"INFO:\\\"[file rootname $testcase].exp\\\" exists, skipping test\" 3\n-\tcontinue\n-    }\n-\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    \n-    c-torture $testcase\n-}\n-"}, {"sha": "6b1cd7b17c4ac7fc56a0f83e9e677c0664f31a6b", "filename": "gcc/testsuite/gcc.c-torture/compile/920520-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920520-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920520-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920520-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/920520-1.c"}, {"sha": "4cfce33b2dc56d575dd4e469fa9caf2d1cb4e9ba", "filename": "gcc/testsuite/gcc.c-torture/compile/920520-1.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920520-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920520-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920520-1.x?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,2 @@\n+set options \"-S\"\n+return 0"}, {"sha": "95b949798dcfbea5a1290c22d62e8a115dd72977", "filename": "gcc/testsuite/gcc.c-torture/compile/920521-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920521-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920521-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920521-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/920521-1.c"}, {"sha": "4cfce33b2dc56d575dd4e469fa9caf2d1cb4e9ba", "filename": "gcc/testsuite/gcc.c-torture/compile/920521-1.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920521-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920521-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920521-1.x?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,2 @@\n+set options \"-S\"\n+return 0"}, {"sha": "cae1978e6c01aa85be5f92107f683e8344addfda", "filename": "gcc/testsuite/gcc.c-torture/compile/920608-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920608-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920608-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920608-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/code_quality/920608-1.c"}, {"sha": "6af6d9a8ea5afc93bd3aed600bda5822ecebb6c6", "filename": "gcc/testsuite/gcc.c-torture/compile/981006-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/981006-1.c"}, {"sha": "5c8d9f0ece55891260cb9c89b9a449ca8820e057", "filename": "gcc/testsuite/gcc.c-torture/compile/981006-1.x", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F981006-1.x?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,12 @@\n+# For MIPS at least, pic is needed to trigger the problem.\n+if { [istarget rs6000-*-aix*]\n+     || [istarget powerpc*-*-aix*]\n+     || [istarget arm*-*-*]       \n+     || [istarget strongarm*-*-*]\n+     || [istarget fr30-*-*]\n+} {\n+    set options \"-Wuninitialized -Werror\"\n+} else {\n+    set options \"-Wuninitialized -Werror -fpic\"\n+}\n+return 0"}, {"sha": "d97d873634d15fbc0bad386f1d215f05d429ab95", "filename": "gcc/testsuite/gcc.c-torture/execute/920730-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/920730-1.c"}, {"sha": "bc5e41319833271d7af7854e97c21c8a6bc4f357", "filename": "gcc/testsuite/gcc.c-torture/execute/920730-1t.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1t.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1t.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1t.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,3 @@\n+/* This is just 920730-1.c compiled with -traditional.\n+   See 920730-1t.x.  */\n+#include \"920730-1.c\""}, {"sha": "cf05b31d54e5e0e349eda6f4d83fc38f6d022882", "filename": "gcc/testsuite/gcc.c-torture/execute/920730-1t.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1t.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1t.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920730-1t.x?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-traditional\"\n+return 0"}, {"sha": "6dad7ec5a73404d5486ebe00653607d93571f5fd", "filename": "gcc/testsuite/gcc.c-torture/execute/eeprof-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/eeprof-1.c"}, {"sha": "0098d561c45bedc5229f2f83f8f09872bbc56e00", "filename": "gcc/testsuite/gcc.c-torture/execute/eeprof-1.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Feeprof-1.x?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-finstrument-functions\"\n+return 0"}, {"sha": "a3e06139a5d68f189b35c385114f5dc157d74bbf", "filename": "gcc/testsuite/gcc.c-torture/special/920413-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F920413-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F920413-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F920413-1.c?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1 +0,0 @@\n-x(b){unsigned long c;c=4294967295U/(unsigned long)b;}"}, {"sha": "c06ba075ff6f76a228e1fcc8b0bd9f8e4e9550d8", "filename": "gcc/testsuite/gcc.c-torture/special/951130-1.c", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F951130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F951130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F951130-1.c?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,2 +0,0 @@\n-unsigned long long x = -(unsigned long long)(-(long long)(((unsigned long\n-long)0 - 1) >> 1) - 1);"}, {"sha": "3d696940640615ad0f004cf7ba217d686783d4ae", "filename": "gcc/testsuite/gcc.c-torture/special/960224-2.c", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F960224-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F960224-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F960224-2.c?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,4 +0,0 @@\n-#if 0\n-#if 0\n-#endif /\n-#endif"}, {"sha": "cc5b812ee3821904af5ff647c5dd9dc0a97a9632", "filename": "gcc/testsuite/gcc.c-torture/special/special.exp", "status": "removed", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2Fspecial.exp?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,107 +0,0 @@\n-# Copyright (C) 1988, 90-96, 1997 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  \n-\n-# Please email any bugs, comments, and/or additions to this file to:\n-# bug-gcc@prep.ai.mit.edu\n-\n-# This file was written by Rob Savoye. (rob@cygnus.com)\n-\n-#\n-# These tests come from Torbjorn Granlund (tege@cygnus.com)\n-# C torture test suite.\n-#\n-\n-if $tracelevel then {\n-    strace $tracelevel\n-}\n-\n-# load support procs\n-load_lib c-torture.exp\n-load_lib gcc-dg.exp\n-\n-################## ADD NEXT CASE HERE (NOT AT THE END) ##################\n-\n-# 981006-1\n-# For MIPS at least, pic is needed to trigger the problem.\n-dg-init\n-if { [istarget rs6000-*-aix*]\n-     || [istarget powerpc*-*-aix*]\n-     || [istarget arm*-*-*]\n-     || [istarget strongarm*-*-*]\n-     || [istarget fr30-*-*]\n-} {\n-    set extra_flags \"\"\n-} else {\n-    set extra_flags \"-fpic\"\n-}\n-dg-runtest $srcdir/$subdir/981006-1.c \"-Wuninitialized -O2 $extra_flags\" \"\"\n-dg-finish\n-\n-# 920521-1\n-c-torture 920521-1.c \"-S\"\n-\n-# 920520-1\n-c-torture 920520-1.c \"-S\"\n-\n-# 920717-1\n-if [isnative] then {\n-    set lines [gcc_target_compile \"$srcdir/$subdir/920717-x.c\" \"920717-x.o\" object {additional_flags=\"-w\"}]\n-    if ![string match \"\" $lines] then {\n-\tfail \"920717-x.c\"\n-    } else {\n-\t# This is a completely bogus test. Sorry.\n-\tcatch exec \"rm -f 920717-y.o\"\n-\tsend_log \"cc -c $srcdir/$subdir/920717-y.c 2>/dev/null >/dev/null\\n\"\n-\tcatch exec \"cc -c $srcdir/$subdir/920717-y.c 2>/dev/null >/dev/null\"\n-\tif ![file exists \"920717-y.o\"] then {\n-\t    send_log \"c89 -c $srcdir/$subdir/920717-y.c 2>/dev/null >/dev/null\\n\"\n-\t    catch exec \"c89 -c $srcdir/$subdir/920717-y.c 2>/dev/null >/dev/null\"\n-\t}\n-\tif [file exists \"920717-y.o\"] then {\n-\t    set lines [gcc_target_compile \"920717-y.o x.o\" \"x\" executable \"\"]\n-\t    if [string match \"\" $lines] then {\n-\t\tpass \"920717-1.c\"\n-\t    } else {\n-\t\tfail \"920717-1.c\"\n-\t    }\n-\t}\n-    }\n-}\n-\n-# 920730-1\n-if [isnative] then {\n-    c-torture \"920730-1.c\"\n-    c-torture \"920730-1.c\" \"-traditional\"\n-}\n-\n-# 920413-1\n-c-torture 920413-1.c \"-Wtraditional\"\n-\n-# 930510-1\n-dg-init\n-dg-runtest $srcdir/$subdir/930510-1.c \"\" \"\"\n-dg-finish\n-\n-# 951130-1\n-c-torture 951130-1.c \"-Werror\"\n-\n-# 960224-1\n-c-torture 960224-1.c \"-E -ansi -pedantic-errors\"\n-\n-# 960224-2\n-#c-torture 960224-2.c \"-E -ansi -pedantic-errors\"\n-\n-c-torture-execute $srcdir/$subdir/eeprof-1.c \"-finstrument-functions\""}, {"sha": "db6bd08e89b9e766769fc7eb7b22a4961df7520e", "filename": "gcc/testsuite/gcc.dg/920413-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2F920413-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2F920413-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F920413-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wtraditional\" } */\n+\n+int\n+x (b)\n+{\n+  return\n+  4294967295U   /* { dg-warning \"width of integer constant may change\" } */\n+   / (unsigned long) b;\n+}"}, {"sha": "e5049d9030ef201de50acf7ca0f1d1ef7205c221", "filename": "gcc/testsuite/gcc.dg/940409-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2F940409-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2F940409-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F940409-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,8 @@\n+/* GCC should allow struct S to be in a register, but it doesn't.  This is\n+   an obscure corner case, hasn't worked since 1994, and we don't expect it\n+   to work anytime soon, hence XFAIL.  */\n+/* { dg-do compile } */\n+\n+struct S { volatile int field; };\n+int f (register struct S arg);  /* { dg-bogus \"volatile field\" \"with arg\" { xfail *-*-* } } */\n+int g (register struct S);\t/* { dg-bogus \"volatile field\" \"no arg\" { xfail *-*-* } } */"}, {"sha": "60013e267c4c1cb6fa3063b74a9f1669350308d8", "filename": "gcc/testsuite/gcc.dg/951130-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2F951130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2F951130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F951130-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile }\n+   { dg-options \"-Werror\" } */\n+\n+unsigned long long x = -(unsigned long long)(-(long long)\n+\t\t\t\t(((unsigned long long)0 - 1) >> 1) - 1);"}, {"sha": "724640a85f73019696f0f8b3e32162a046421a4d", "filename": "gcc/testsuite/gcc.dg/cpp/19930510-1.c", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19930510-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19930510-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19930510-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-do compile } */\n+\n #define ugly 3\n #ugly \"foobar\" 3\t/* { dg-error \"invalid\" \"invalid directive\" } */\n int main() { exit (0); }", "previous_filename": "gcc/testsuite/gcc.c-torture/special/930510-1.c"}, {"sha": "5efc627693442d98826bac45ff1138a1b0713572", "filename": "gcc/testsuite/gcc.dg/cpp/19960224-1.c", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19960224-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19960224-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19960224-1.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-do preprocess } */\n+\n #if 0\n #if 0\n #endif \\", "previous_filename": "gcc/testsuite/gcc.c-torture/special/960224-1.c"}, {"sha": "66d2abc9248169b3a21851425e2dc4fec610944a", "filename": "gcc/testsuite/gcc.dg/cpp/19960224-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19960224-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19960224-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19960224-2.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do preprocess } */\n+\n+#if 0\n+#if 0\n+#endif /\t/* { dg-error \"text after #endif\" \"text after #endif\" } */\n+#endif"}, {"sha": "3d5b58864e89c7782119e7a6cceccf449aedf28c", "filename": "gcc/testsuite/gcc.failure/940409-1.c", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.failure%2F940409-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.failure%2F940409-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.failure%2F940409-1.c?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,3 +0,0 @@\n-struct S { volatile int field; };\n-int f (register struct S arg);\n-int g (register struct S);"}, {"sha": "aac012776169efae5df5f510518a93317ffc36cd", "filename": "gcc/testsuite/gcc.failure/940409-1.x", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.failure%2F940409-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.failure%2F940409-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.failure%2F940409-1.x?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,6 +0,0 @@\n-# gcc doesn't handle compile/940409-1.cexp properly, but it's an obscure bug\n-# so rather than constantly seeing it fail, just record it as expected to\n-# fail.\n-\n-set torture_compile_xfail \"*-*-*\"\n-return 0 ;# `0' says we didn't handle the testcase ourselves so continue"}, {"sha": "bfd9f3487ea9120d29d006dac0e993989bb6e0b1", "filename": "gcc/testsuite/gcc.failure/failure.exp", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.failure%2Ffailure.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/628f05b4c155039e5ebf5f85bb71bb75fcae63af/gcc%2Ftestsuite%2Fgcc.failure%2Ffailure.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.failure%2Ffailure.exp?ref=628f05b4c155039e5ebf5f85bb71bb75fcae63af", "patch": "@@ -1,58 +0,0 @@\n-#\n-# Expect driver script for GCC Regression Tests\n-#   Copyright (C) 1993, 1997 Free Software Foundation\n-#\n-# This file is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. \n-#\n-# Written by Jeffrey Wheat (cassidy@cygnus.com)\n-#\n-\n-#\n-# These tests come from Torbjorn Granlund's (tege@cygnus.com)\n-# C torture test suite, and other contributors.\n-#\n-\n-if $tracelevel then {\n-    strace $tracelevel\n-}\n-\n-# load support procs\n-load_lib c-torture.exp\n-\n-#\n-# This loop will run c-torture on any *.c file found in this directory.\n-# If a *.c has a corresponding *.exp file, then the test is skipped as\n-# as the *.exp will drive the test itself. I did things this way so that\n-# generic tests did not need a seperate .exp for it. Only the tests that \n-# required unique options would need it's own .exp file.\n-#\n-\n-#\n-# The main logic is in ../lib/c-torture.exp. This was done to eliminate\n-# redundant code that otherwise lived in each of these driver files.\n-#\n-foreach testcase [glob -nocomplain $srcdir/$subdir/*.c] {\n-    \n-    # let c-torture.exp figure out the path. this lets users add new\n-    # special tests without having to remeber to use $srcdir/$subdir\n-    \n-    if [file exists [file rootname $testcase].exp] then {\n-\tverbose \"INFO:\\\"[file rootname $testcase].exp\\\"exists, skipping test\" 1\n-\tcontinue\n-    } else {\n-\tc-torture [file tail $testcase]\n-    }\n-}\n-"}, {"sha": "07601e397f0e3fef0eb016dff2f240157b1c7bf5", "filename": "gcc/testsuite/gcc.misc-tests/linkage-x.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage-x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage-x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage-x.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/920717-x.c"}, {"sha": "eaffa5e4bb77049bfbd797344294912087337dfb", "filename": "gcc/testsuite/gcc.misc-tests/linkage-y.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage-y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage-y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage-y.c?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "previous_filename": "gcc/testsuite/gcc.c-torture/special/920717-y.c"}, {"sha": "838948451570d9bae2f8a677c86eccaf0c559cf1", "filename": "gcc/testsuite/gcc.misc-tests/linkage.exp", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be6ce4646b9ba06cd6b41804925a93ec5b33583/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp?ref=3be6ce4646b9ba06cd6b41804925a93ec5b33583", "patch": "@@ -0,0 +1,46 @@\n+# Copyright (C) 1988, 90-96, 1997, 2000 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  \n+\n+# Please email any bugs, comments, and/or additions to this file to:\n+# bug-gcc@prep.ai.mit.edu\n+\n+# This file used to be gcc.c-torture/special/special.exp, which\n+# was written by Rob Savoye. (rob@cygnus.com)\n+# All the other tests driven by that file have since been moved elsewhere.\n+\n+if [isnative] then {\n+    set lines [gcc_target_compile \"$srcdir/$subdir/linkage-x.c\" \"linkage-x.o\" object {additional_flags=\"-w\"}]\n+    if ![string match \"\" $lines] then {\n+\tfail \"linkage.c\"\n+    } else {\n+\t# This is a completely bogus test. Sorry.\n+\tcatch { exec rm -f linkage-y.o }\n+\tsend_log \"cc -c $srcdir/$subdir/linkage-y.c >&/dev/null\\n\"\n+\tcatch { exec cc -c \"$srcdir/$subdir/linkage-y.c\" >&/dev/null }\n+\tif ![file exists \"linkage-y.o\"] then {\n+\t    send_log \"c89 -c $srcdir/$subdir/linkage-y.c >&/dev/null\\n\"\n+\t    catch { exec c89 -c \"$srcdir/$subdir/linkage-y.c\" >&/dev/null }\n+\t}\n+\tif [file exists \"linkage-y.o\"] then {\n+\t    set lines [gcc_target_compile \"linkage-y.o linkage-x.o\" \"x\" executable \"\"]\n+\t    if [string match \"\" $lines] then {\n+\t\tpass \"linkage.c\"\n+\t    } else {\n+\t\tfail \"linkage.c\"\n+\t    }\n+\t}\n+    }\n+}"}]}