{"sha": "9267014b351edf5aa0d0951545ec405edec5e3f5", "node_id": "C_kwDOANBUbNoAKDkyNjcwMTRiMzUxZWRmNWFhMGQwOTUxNTQ1ZWM0MDVlZGVjNWUzZjU", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2021-10-12T18:04:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-20T10:17:05Z"}, "message": "[Ada] Crash on object of protected type with defaulted access component\n\ngcc/ada/\n\n\t* exp_ch7.adb (Make_Final_Call): Detect expanded protected types\n\tand use original protected type in order to calculate\n\tappropriate finalization routine.", "tree": {"sha": "035d0893a1ca9b62217cb1bf626fee0722f681ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/035d0893a1ca9b62217cb1bf626fee0722f681ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9267014b351edf5aa0d0951545ec405edec5e3f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9267014b351edf5aa0d0951545ec405edec5e3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9267014b351edf5aa0d0951545ec405edec5e3f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9267014b351edf5aa0d0951545ec405edec5e3f5/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f074aa4aa248e9602765155acff57604c1d9778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f074aa4aa248e9602765155acff57604c1d9778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f074aa4aa248e9602765155acff57604c1d9778"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "cd9ff214e25cab1a902467d4637235c376d358a9", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9267014b351edf5aa0d0951545ec405edec5e3f5/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9267014b351edf5aa0d0951545ec405edec5e3f5/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=9267014b351edf5aa0d0951545ec405edec5e3f5", "patch": "@@ -8953,11 +8953,12 @@ package body Exp_Ch7 is\n       Typ       : Entity_Id;\n       Skip_Self : Boolean := False) return Node_Id\n    is\n-      Loc    : constant Source_Ptr := Sloc (Obj_Ref);\n-      Atyp   : Entity_Id;\n-      Fin_Id : Entity_Id := Empty;\n-      Ref    : Node_Id;\n-      Utyp   : Entity_Id;\n+      Loc      : constant Source_Ptr := Sloc (Obj_Ref);\n+      Atyp     : Entity_Id;\n+      Prot_Typ : Entity_Id := Empty;\n+      Fin_Id   : Entity_Id := Empty;\n+      Ref      : Node_Id;\n+      Utyp     : Entity_Id;\n \n    begin\n       Ref := Obj_Ref;\n@@ -9035,6 +9036,19 @@ package body Exp_Ch7 is\n          Set_Assignment_OK (Ref);\n       end if;\n \n+      --  Detect if Typ is a protected type or an expanded protected type and\n+      --  store the relevant type within Prot_Typ for later processing.\n+\n+      if Is_Protected_Type (Typ) then\n+         Prot_Typ := Typ;\n+\n+      elsif Ekind (Typ) = E_Record_Type\n+        and then Present (Corresponding_Concurrent_Type (Typ))\n+        and then Is_Protected_Type (Corresponding_Concurrent_Type (Typ))\n+      then\n+         Prot_Typ := Corresponding_Concurrent_Type (Typ);\n+      end if;\n+\n       --  The underlying type may not be present due to a missing full view. In\n       --  this case freezing did not take place and there is no [Deep_]Finalize\n       --  primitive to call.\n@@ -9080,7 +9094,7 @@ package body Exp_Ch7 is\n       --  Protected types: these also require finalization even though they\n       --  are not marked controlled explicitly.\n \n-      elsif Is_Protected_Type (Typ) then\n+      elsif Present (Prot_Typ) then\n          --  Protected objects do not need to be finalized on restricted\n          --  runtimes.\n \n@@ -9090,7 +9104,7 @@ package body Exp_Ch7 is\n          --  ??? Only handle the simple case for now. Will not support a record\n          --  or array containing protected objects.\n \n-         elsif Is_Simple_Protected_Type (Typ) then\n+         elsif Is_Simple_Protected_Type (Prot_Typ) then\n             Fin_Id := RTE (RE_Finalize_Protection);\n          else\n             raise Program_Error;"}]}