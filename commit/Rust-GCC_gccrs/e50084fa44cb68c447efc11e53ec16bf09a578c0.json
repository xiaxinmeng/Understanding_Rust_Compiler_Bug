{"sha": "e50084fa44cb68c447efc11e53ec16bf09a578c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwMDg0ZmE0NGNiNjhjNDQ3ZWZjMTFlNTNlYzE2YmYwOWE1NzhjMA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-08-21T02:19:33Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-08-21T02:19:33Z"}, "message": "Index: ChangeLog\n2003-08-20  Geoffrey Keating  <geoffk@apple.com>\n\n\tPR 8180\n\t* configure.in: When testing with_libs and with_headers, treat\n\t'no' as unset.  Based on a patch by Dan Kegel <dank@kegel.com>.\n\t* configure: Regenerate.\n\nIndex: gcc/ChangeLog\n2003-08-20  Geoffrey Keating  <geoffk@apple.com>\n\n\tPR 8180\n\t* configure.in: When testing with_libs and with_headers, treat\n\t'no' as unset.  Based on a patch by Dan Kegel <dank@kegel.com>.\n\t* configure: Regenerate.\n\nFrom-SVN: r70634", "tree": {"sha": "0b25d0572902e4493f2ad6a2c559842b6d9f1731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b25d0572902e4493f2ad6a2c559842b6d9f1731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e50084fa44cb68c447efc11e53ec16bf09a578c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50084fa44cb68c447efc11e53ec16bf09a578c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50084fa44cb68c447efc11e53ec16bf09a578c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50084fa44cb68c447efc11e53ec16bf09a578c0/comments", "author": null, "committer": null, "parents": [{"sha": "b348267b2e2243e76433b8b7798695787a80cd0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b348267b2e2243e76433b8b7798695787a80cd0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b348267b2e2243e76433b8b7798695787a80cd0e"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "cc1f34cbfea944c696b48f5af37f8c7586d22848", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50084fa44cb68c447efc11e53ec16bf09a578c0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50084fa44cb68c447efc11e53ec16bf09a578c0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e50084fa44cb68c447efc11e53ec16bf09a578c0", "patch": "@@ -1,5 +1,10 @@\n 2003-08-20  Geoffrey Keating  <geoffk@apple.com>\n \n+\tPR 8180\n+\t* configure.in: When testing with_libs and with_headers, treat\n+\t'no' as unset.  Based on a patch by Dan Kegel <dank@kegel.com>.\n+\t* configure: Regenerate.\n+\t\n \t* configure.in (TOPLEVEL_CONFIGURE_ARGUMENTS): Quote properly for\n \tmake, shell, etc.\n \t(baseargs): Likewise."}, {"sha": "5c461fc804947f59398cece830bc91f65621f8a9", "filename": "configure.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50084fa44cb68c447efc11e53ec16bf09a578c0/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50084fa44cb68c447efc11e53ec16bf09a578c0/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=e50084fa44cb68c447efc11e53ec16bf09a578c0", "patch": "@@ -253,7 +253,8 @@ esac\n \n # If both --with-headers and --with-libs are specified, default to\n # --without-newlib.\n-if test x\"${with_headers}\" != x && test x\"${with_libs}\" != x ; then\n+if test x\"${with_headers}\" != x && test x\"${with_headers} != xno \\\n+   && test x\"${with_libs}\" != x && test x\"${with_libs} != xno ; then\n   if test x\"${with_newlib}\" = x ; then\n     with_newlib=no\n   fi\n@@ -937,7 +938,7 @@ copy_dirs=\n \n # Handle --with-headers=XXX.  If the value is not \"yes\", the contents of\n # the named directory are copied to $(tooldir)/sys-include.\n-if test x\"${with_headers}\" != x ; then\n+if test x\"${with_headers}\" != x && test x\"${with_headers}\" != xno ; then\n   if test x${is_cross_compiler} = xno ; then\n     echo 1>&2 '***' --with-headers is only supported when cross compiling\n     exit 1\n@@ -954,7 +955,7 @@ fi\n # Handle --with-libs=XXX.  If the value is not \"yes\", the contents of\n # the name directories are copied to $(tooldir)/lib.  Multiple directories\n # are permitted.\n-if test x\"${with_libs}\" != x ; then\n+if test x\"${with_libs}\" != x && test x\"${with_libs}\" != xno ; then\n   if test x${is_cross_compiler} = xno ; then\n     echo 1>&2 '***' --with-libs is only supported when cross compiling\n     exit 1"}, {"sha": "dc01407d87de5a293c5392d9e6464de391139cec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50084fa44cb68c447efc11e53ec16bf09a578c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50084fa44cb68c447efc11e53ec16bf09a578c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e50084fa44cb68c447efc11e53ec16bf09a578c0", "patch": "@@ -1,8 +1,15 @@\n-2003-08-06  Peter Barada <peter@baradas.org>\n+2003-08-20  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR 8180\n+\t* configure.in: When testing with_libs and with_headers, treat\n+\t'no' as unset.  Based on a patch by Dan Kegel <dank@kegel.com>.\n+\t* configure: Regenerate.\n+\t\n+2003-08-20  Peter Barada <peter@baradas.org>\n \n \t* longlong.h (umul_ppmm): Add ColdFire support.\n \n-2003-08-06  Peter Barada <peter@baradas.org>\n+2003-08-20  Peter Barada <peter@baradas.org>\n             Bernardo Innocenti  <bernie@develer.com>\n \n \t* config/m68k/m68k-none.h: Introduce new ColdFire archs."}, {"sha": "9a2c150eab273d325f5429b1e960e926cf555a53", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50084fa44cb68c447efc11e53ec16bf09a578c0/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50084fa44cb68c447efc11e53ec16bf09a578c0/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e50084fa44cb68c447efc11e53ec16bf09a578c0", "patch": "@@ -5744,7 +5744,7 @@ fi\n inhibit_libc=\n if { { test x$host != x$target && test \"x$with_sysroot\" = x ; } ||\n        test x$with_newlib = xyes ; } &&\n-     test \"x$with_headers\" = x ; then\n+     { test \"x$with_headers\" = x || test \"x$with_headers\" = xno ; } ; then\n        inhibit_libc=-Dinhibit_libc\n fi\n "}, {"sha": "824008e4e69ff2e55a232963dd0e519a3cb7c227", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50084fa44cb68c447efc11e53ec16bf09a578c0/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50084fa44cb68c447efc11e53ec16bf09a578c0/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=e50084fa44cb68c447efc11e53ec16bf09a578c0", "patch": "@@ -1449,7 +1449,7 @@ fi\n inhibit_libc=\n if { { test x$host != x$target && test \"x$with_sysroot\" = x ; } ||\n        test x$with_newlib = xyes ; } &&\n-     test \"x$with_headers\" = x ; then\n+     { test \"x$with_headers\" = x || test \"x$with_headers\" = xno ; } ; then\n        inhibit_libc=-Dinhibit_libc\n fi\n AC_SUBST(inhibit_libc)"}]}