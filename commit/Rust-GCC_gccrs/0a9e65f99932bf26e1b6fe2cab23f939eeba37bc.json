{"sha": "0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE5ZTY1Zjk5OTMyYmYyNmUxYjZmZTJjYWIyM2Y5MzllZWJhMzdiYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-11-02T08:27:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-11-02T08:27:23Z"}, "message": "sparc.c (function_arg_partial_nregs): Return 0 for all complex modes whose size is lesser or equal to a word.\n\n\t* config/sparc/sparc.c (function_arg_partial_nregs) [TARGET_ARCH64]:\n\tReturn 0 for all complex modes whose size is lesser or equal to\n\ta word.  Add a ??? comment for the condition used with 16-byte\n\taligned modes.\n\nFrom-SVN: r73194", "tree": {"sha": "0a4c104db7dd99dad262566d59e7aff0eaaf2bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a4c104db7dd99dad262566d59e7aff0eaaf2bfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f25b19304b2f2978a7c6a4f33d1c19c29ae5c897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25b19304b2f2978a7c6a4f33d1c19c29ae5c897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25b19304b2f2978a7c6a4f33d1c19c29ae5c897"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "01a5a567b5943795cff9403d7bad0fbcd6ad5239", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "patch": "@@ -1,3 +1,10 @@\n+2003-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sparc.c (function_arg_partial_nregs) [TARGET_ARCH64]:\n+\tReturn 0 for all complex modes whose size is lesser or equal to\n+\ta word.  Add a ??? comment for the condition used with 16-byte\n+\taligned modes.\n+\n 2003-11-01  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* .cvsignore: Remove c-parse* and tradcif.c."}, {"sha": "1454fd943752d400b700efc3888292bf870add50", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "patch": "@@ -5429,14 +5429,19 @@ function_arg_partial_nregs (const struct sparc_args *cum,\n \t      && slotno == SPARC_INT_ARG_MAX - 1)\n \t    return 1;\n \t}\n-      else if ((GET_MODE_CLASS (mode) == MODE_COMPLEX_INT\n-\t\t&& GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n+      else if (GET_MODE_CLASS (mode) == MODE_COMPLEX_INT\n \t       || (GET_MODE_CLASS (mode) == MODE_COMPLEX_FLOAT\n \t\t   && ! (TARGET_FPU && named)))\n \t{\n+\t  /* The complex types are passed as packed types.  */\n+\t  if (GET_MODE_SIZE (mode) <= UNITS_PER_WORD)\n+\t    return 0;\n+\n \t  if (GET_MODE_ALIGNMENT (mode) == 128)\n \t    {\n \t      slotno += slotno & 1;\n+\n+\t      /* ??? The mode needs 3 slots?  */\n \t      if (slotno == SPARC_INT_ARG_MAX - 2)\n \t\treturn 1;\n \t    }"}, {"sha": "599563b14f27a7682cc0c74fc13217b987519f5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "patch": "@@ -1,3 +1,7 @@\n+2003-11-02  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/complex-1.c: New test.\n+\n 2003-11-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/12796"}, {"sha": "7153433d0cba9f6782a1db770e9a311f6b1873ef", "filename": "gcc/testsuite/gcc.dg/complex-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a9e65f99932bf26e1b6fe2cab23f939eeba37bc/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcomplex-1.c?ref=0a9e65f99932bf26e1b6fe2cab23f939eeba37bc", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O\" } */\n+\n+/* Verify that the 6th complex floating-point argument is\n+   correctly passed as unnamed argument on SPARC64.  */\n+\n+extern void abort(void);   \n+\n+void foo(long arg1, long arg2, long arg3, long arg4, long arg5, ...)\n+{\n+  __builtin_va_list ap;\n+  _Complex float cf;\n+\n+  __builtin_va_start(ap, arg5);\n+  cf = __builtin_va_arg(ap, _Complex float);\n+  __builtin_va_end(ap);\n+\n+  if (__imag__ cf != 2.0f)\n+    abort();\n+}\n+\n+int bar(long arg1, long arg2, long arg3, long arg4, long arg5, _Complex float arg6)\n+{\n+  foo(arg1, arg2, arg3, arg4, arg5, arg6);\n+  return 0;\n+}\n+\n+int main(void)\n+{\n+  return bar(0, 0, 0, 0, 0, 2.0fi);\n+}"}]}