{"sha": "e6d6ec9e06d6512732941c86464d8c5852928432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZkNmVjOWUwNmQ2NTEyNzMyOTQxYzg2NDY0ZDhjNTg1MjkyODQzMg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-01-14T20:01:39Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-01-14T20:01:39Z"}, "message": "Mark symbols in offload tables with force_output in read_offload_tables\n\n2016-01-14  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/68773\n\t* c-parser.c (c_parser_oacc_declare, c_parser_omp_declare_target): Don't\n\tset force_output.\n\n\t* parser.c (cp_parser_oacc_declare, cp_parser_omp_declare_target): Don't\n\tset force_output.\n\n\t* omp-low.c (expand_omp_target): Don't set force_output.\n\t* varpool.c (varpool_node::get_create): Same.\n\t* lto-cgraph.c (input_offload_tables): Mark entries in offload_vars and\n\toffload_funcs with force_output.\n\nFrom-SVN: r232384", "tree": {"sha": "d7d7471f673a927626b21db4007d16bcf4e89625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d7471f673a927626b21db4007d16bcf4e89625"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6d6ec9e06d6512732941c86464d8c5852928432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d6ec9e06d6512732941c86464d8c5852928432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d6ec9e06d6512732941c86464d8c5852928432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d6ec9e06d6512732941c86464d8c5852928432/comments", "author": null, "committer": null, "parents": [{"sha": "c3f6914aa4a8e592957c1e518c31fe27c1b208ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f6914aa4a8e592957c1e518c31fe27c1b208ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3f6914aa4a8e592957c1e518c31fe27c1b208ac"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "d7eabaf652fbd3c978d735623a480fa2e5a53684", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -1,3 +1,11 @@\n+2016-01-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68773\n+\t* omp-low.c (expand_omp_target): Don't set force_output.\n+\t* varpool.c (varpool_node::get_create): Same.\n+\t* lto-cgraph.c (input_offload_tables): Mark entries in offload_vars and\n+\toffload_funcs with force_output.\n+\n 2016-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/69244"}, {"sha": "d11a822b217d7761d4a5b9500451fff46bff87ae", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -1,3 +1,9 @@\n+2016-01-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68773\n+\t* c-parser.c (c_parser_oacc_declare, c_parser_omp_declare_target): Don't\n+\tset force_output.\n+\n 2016-01-14  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/69262"}, {"sha": "919680aab47ca17d5411a7f19e17837875245302", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -13599,10 +13599,7 @@ c_parser_oacc_declare (c_parser *parser)\n \t\t    {\n \t\t      g->have_offload = true;\n \t\t      if (is_a <varpool_node *> (node))\n-\t\t\t{\n-\t\t\t  vec_safe_push (offload_vars, decl);\n-\t\t\t  node->force_output = 1;\n-\t\t\t}\n+\t\t\tvec_safe_push (offload_vars, decl);\n \t\t    }\n \t\t}\n \t    }\n@@ -16484,10 +16481,7 @@ c_parser_omp_declare_target (c_parser *parser)\n \t\t{\n \t\t  g->have_offload = true;\n \t\t  if (is_a <varpool_node *> (node))\n-\t\t    {\n-\t\t      vec_safe_push (offload_vars, t);\n-\t\t      node->force_output = 1;\n-\t\t    }\n+\t\t    vec_safe_push (offload_vars, t);\n \t\t}\n \t    }\n \t}"}, {"sha": "92925a3ecb02b21b0b0d712e96cdc83da5df1a13", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -1,3 +1,9 @@\n+2016-01-14  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68773\n+\t* parser.c (cp_parser_oacc_declare, cp_parser_omp_declare_target): Don't\n+\tset force_output.\n+\n 2016-01-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/69261"}, {"sha": "f2d49a1bbde9a278b9f45af9f1c0887baead4a3b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -35164,10 +35164,7 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \t\t    {\n \t\t      g->have_offload = true;\n \t\t      if (is_a <varpool_node *> (node))\n-\t\t\t{\n-\t\t\t  vec_safe_push (offload_vars, decl);\n-\t\t\t  node->force_output = 1;\n-\t\t\t}\n+\t\t\tvec_safe_push (offload_vars, decl);\n \t\t    }\n \t\t}\n \t    }\n@@ -35704,10 +35701,7 @@ cp_parser_omp_declare_target (cp_parser *parser, cp_token *pragma_tok)\n \t\t{\n \t\t  g->have_offload = true;\n \t\t  if (is_a <varpool_node *> (node))\n-\t\t    {\n-\t\t      vec_safe_push (offload_vars, t);\n-\t\t      node->force_output = 1;\n-\t\t    }\n+\t\t    vec_safe_push (offload_vars, t);\n \t\t}\n \t    }\n \t}"}, {"sha": "063477920a085f93e7099c8d00e8bbec49edb6c5", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -1911,13 +1911,22 @@ input_offload_tables (void)\n \t      tree fn_decl\n \t\t= lto_file_decl_data_get_fn_decl (file_data, decl_index);\n \t      vec_safe_push (offload_funcs, fn_decl);\n+\n+\t      /* Prevent IPA from removing fn_decl as unreachable, since there\n+\t\t may be no refs from the parent function to child_fn in offload\n+\t\t LTO mode.  */\n+\t      cgraph_node::get (fn_decl)->mark_force_output ();\n \t    }\n \t  else if (tag == LTO_symtab_variable)\n \t    {\n \t      int decl_index = streamer_read_uhwi (ib);\n \t      tree var_decl\n \t\t= lto_file_decl_data_get_var_decl (file_data, decl_index);\n \t      vec_safe_push (offload_vars, var_decl);\n+\n+\t      /* Prevent IPA from removing var_decl as unused, since there\n+\t\t may be no refs to var_decl in offload LTO mode.  */\n+\t      varpool_node::get (var_decl)->force_output = 1;\n \t    }\n \t  else\n \t    fatal_error (input_location,"}, {"sha": "6df01a476e1ecec35a7609bc86f885d329943f6b", "filename": "gcc/omp-low.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -12771,11 +12771,6 @@ expand_omp_target (struct omp_region *region)\n \tassign_assembler_name_if_neeeded (child_fn);\n       cgraph_edge::rebuild_edges ();\n \n-      /* Prevent IPA from removing child_fn as unreachable, since there are no\n-\t refs from the parent function to child_fn in offload LTO mode.  */\n-      if (ENABLE_OFFLOADING)\n-\tcgraph_node::get (child_fn)->mark_force_output ();\n-\n       /* Some EH regions might become dead, see PR34608.  If\n \t pass_cleanup_cfg isn't the first pass to happen with the\n \t new child, these dead EH edges might cause problems."}, {"sha": "d88343cdc091f7a328cb3ee3e8b5817af50af856", "filename": "gcc/varpool.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6d6ec9e06d6512732941c86464d8c5852928432/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=e6d6ec9e06d6512732941c86464d8c5852928432", "patch": "@@ -158,7 +158,6 @@ varpool_node::get_create (tree decl)\n \t  g->have_offload = true;\n \t  if (!in_lto_p)\n \t    vec_safe_push (offload_vars, decl);\n-\t  node->force_output = 1;\n \t}\n     }\n "}]}