{"sha": "b0967cadd59fd9a1f50e849e028ce244daf22c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA5NjdjYWRkNTlmZDlhMWY1MGU4NDllMDI4Y2UyNDRkYWYyMmM4OQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-07-22T23:42:22Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-07-22T23:42:22Z"}, "message": "sparc.md (seqdi_special): Don't clobber %xcc.\n\n\t* sparc/sparc.md (seqdi_special): Don't clobber %xcc.\n\t(snedi_special, seqdi_special_trunc, snedi_special_trunc): Likewise.\n\t(snedi_zero, neg_snedi_zero, seqdi_zero, neg_seqdi_zero): Likewise.\n \t(snedi_zero_trunc, seqdi_zero_trunc): Likewise. Renamed from ..._sp64.\n\t(snedi_zero_trunc_sp32, seqdi_zero_trunc_sp32): Delete.\n\nFrom-SVN: r14520", "tree": {"sha": "cedbc4af647f417235a2b372628f6d8c43b6c6d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cedbc4af647f417235a2b372628f6d8c43b6c6d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0967cadd59fd9a1f50e849e028ce244daf22c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0967cadd59fd9a1f50e849e028ce244daf22c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0967cadd59fd9a1f50e849e028ce244daf22c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0967cadd59fd9a1f50e849e028ce244daf22c89/comments", "author": null, "committer": null, "parents": [{"sha": "31bc9eba585e7b705173fe4d7dfa552a452a0669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31bc9eba585e7b705173fe4d7dfa552a452a0669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31bc9eba585e7b705173fe4d7dfa552a452a0669"}], "stats": {"total": 62, "additions": 16, "deletions": 46}, "files": [{"sha": "9ac695f457725d19c55e491f6d3ccc11879f0860", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 16, "deletions": 46, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0967cadd59fd9a1f50e849e028ce244daf22c89/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0967cadd59fd9a1f50e849e028ce244daf22c89/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=b0967cadd59fd9a1f50e849e028ce244daf22c89", "patch": "@@ -474,9 +474,8 @@\n   [(set (match_dup 3)\n \t(xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"register_operand\" \"\")))\n-   (parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t   (eq:DI (match_dup 3) (const_int 0)))\n-\t      (clobber (reg:CCX 100))])]\n+   (set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(eq:DI (match_dup 3) (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (DImode); }\")\n \n@@ -494,29 +493,26 @@\n   [(set (match_dup 3)\n \t(xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"register_operand\" \"\")))\n-   (parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t   (ne:DI (match_dup 3) (const_int 0)))\n-\t      (clobber (reg:CCX 100))])]\n+   (set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(ne:DI (match_dup 3) (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (DImode); }\")\n \n (define_expand \"seqdi_special_trunc\"\n   [(set (match_dup 3)\n \t(xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"register_operand\" \"\")))\n-   (parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t   (eq:DI (match_dup 3) (const_int 0)))\n-\t      (clobber (reg:CCX 100))])]\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(eq:DI (match_dup 3) (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (DImode); }\")\n \n (define_expand \"snedi_special_trunc\"\n   [(set (match_dup 3)\n \t(xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"register_operand\" \"\")))\n-   (parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t   (ne:DI (match_dup 3) (const_int 0)))\n-\t      (clobber (reg:CCX 100))])]\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(ne:DI (match_dup 3) (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (DImode); }\")\n \n@@ -860,8 +856,7 @@\n (define_insn \"*snedi_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n \t(ne:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))\n-   (clobber (reg:CCX 100))]\n+\t       (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"mov 0,%0\\;movrnz %1,1,%0\"\n   [(set_attr \"type\" \"unary\")\n@@ -870,28 +865,16 @@\n (define_insn \"*neg_snedi_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n \t(neg:DI (ne:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t\t       (const_int 0))))\n-   (clobber (reg:CCX 100))]\n+\t\t       (const_int 0))))]\n   \"TARGET_ARCH64\"\n   \"mov 0,%0\\;movrnz %1,-1,%0\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"length\" \"2\")])\n \n-(define_insn \"*snedi_zero_trunc_sp32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(ne:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))\n-   (clobber (reg:CCX 100))]\n-  \"! TARGET_ARCH64 && ! TARGET_LIVE_G0\"\n-  \"xor %1,%R1,%0\\;subcc %%g0,%0,%%g0\\;addx %%g0,0,%0\"\n-  [(set_attr \"type\" \"unary\")\n-   (set_attr \"length\" \"3\")])\n-\n-(define_insn \"*snedi_zero_trunc_sp64\"\n+(define_insn \"*snedi_zero_trunc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n \t(ne:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))\n-   (clobber (reg:CCX 100))]\n+\t       (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"mov 0,%0\\;movrnz %1,1,%0\"\n   [(set_attr \"type\" \"unary\")\n@@ -930,8 +913,7 @@\n (define_insn \"*seqdi_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n \t(eq:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))\n-   (clobber (reg:CCX 100))]\n+\t       (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"mov 0,%0\\;movrz %1,1,%0\"\n   [(set_attr \"type\" \"unary\")\n@@ -940,28 +922,16 @@\n (define_insn \"*neg_seqdi_zero\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n \t(neg:DI (eq:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t\t       (const_int 0))))\n-   (clobber (reg:CCX 100))]\n+\t\t       (const_int 0))))]\n   \"TARGET_ARCH64\"\n   \"mov 0,%0\\;movrz %1,-1,%0\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"length\" \"2\")]) \n \n-(define_insn \"*seqdi_zero_trunc_sp32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(eq:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))\n-   (clobber (reg:CCX 100))]\n-  \"! TARGET_ARCH64 && ! TARGET_LIVE_G0\"\n-  \"xor %1,%R1,%0\\;subcc %%g0,%0,%%g0\\;subx %%g0,-1,%0\"\n-  [(set_attr \"type\" \"unary\")\n-   (set_attr \"length\" \"3\")])\n-\n-(define_insn \"*seqdi_zero_trunc_sp64\"\n+(define_insn \"*seqdi_zero_trunc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n \t(eq:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t       (const_int 0)))\n-   (clobber (reg:CCX 100))]\n+\t       (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"mov 0,%0\\;movrz %1,1,%0\"\n   [(set_attr \"type\" \"unary\")"}]}