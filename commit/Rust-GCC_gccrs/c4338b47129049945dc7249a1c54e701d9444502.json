{"sha": "c4338b47129049945dc7249a1c54e701d9444502", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQzMzhiNDcxMjkwNDk5NDVkYzcyNDlhMWM1NGU3MDFkOTQ0NDUwMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-23T22:23:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-23T22:23:24Z"}, "message": "(everywhere): Correct range is -0x1fffffff to 0x20000000, others have to be loaded with movd.\n\n(everywhere): Correct range is -0x1fffffff to 0x20000000, others have to be\nloaded with movd.\nShortcircuit with TARGET_32532 as early as possible.\n(movsi): Use movd to load unknown symbol values. to allow\n\nFrom-SVN: r8561", "tree": {"sha": "7034815f8fc2029bafb8d4898928c774dbf9eac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7034815f8fc2029bafb8d4898928c774dbf9eac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4338b47129049945dc7249a1c54e701d9444502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4338b47129049945dc7249a1c54e701d9444502", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4338b47129049945dc7249a1c54e701d9444502", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4338b47129049945dc7249a1c54e701d9444502/comments", "author": null, "committer": null, "parents": [{"sha": "989b3e72577344f7450a453d8d058dce721bf330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989b3e72577344f7450a453d8d058dce721bf330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/989b3e72577344f7450a453d8d058dce721bf330"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "7008d14f925d2f67f7c85476bc17c72750063f3e", "filename": "gcc/config/ns32k/ns32k.md", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4338b47129049945dc7249a1c54e701d9444502/gcc%2Fconfig%2Fns32k%2Fns32k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4338b47129049945dc7249a1c54e701d9444502/gcc%2Fconfig%2Fns32k%2Fns32k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.md?ref=c4338b47129049945dc7249a1c54e701d9444502", "patch": "@@ -318,6 +318,8 @@\n   \"\"\n   \"*\n {\n+  extern int flag_pic;\t\t\t\t\t\t\\\n+\n   if (FP_REG_P (operands[0]))\n     {\n       if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) < 8)\n@@ -344,16 +346,25 @@\n \t{\n \t  if (i <= 7 && i >= -8)\n \t    return \\\"movqd %1,%0\\\";\n-\t  if (i < 0x4000 && i >= -0x4000)\n+\t  if (i <= 0x1fffffff && i >= -0x20000000)\n #if defined (GNX_V3) || defined (UTEK_ASM)\n \t    return \\\"addr %c1,%0\\\";\n #else\n \t    return \\\"addr @%c1,%0\\\";\n #endif\n+\t  return \\\"movd %$%1,%0\\\";\n \t}\n       else\n         return output_move_dconst(i, \\\"%$%1,%0\\\");\n     }\n+  else if (GET_CODE (operands[1]) == CONST && ! flag_pic)\n+    {\n+\t/* Must contain symbols so we don`t know how big it is. In\n+\t * that case addr might lead to overflow. For PIC symbolic\n+\t * address loads always have to be done with addr.\n+\t */\n+\treturn \\\"movd %$%1,%0\\\";\n+    }\n   else if (GET_CODE (operands[1]) == REG)\n     {\n       if (REGNO (operands[1]) < 16)\n@@ -867,8 +878,8 @@\n \n       if (i <= 7 && i >= -8)\n \treturn \\\"addqd %2,%0\\\";\n-      else if (GET_CODE (operands[0]) == REG\n-\t       && i < 0x4000 && i >= -0x4000 && ! TARGET_32532)\n+      else if (! TARGET_32532 && GET_CODE (operands[0]) == REG\n+\t       && i <= 0x1fffffff && i >= -0x20000000)\n \treturn \\\"addr %c2(%0),%0\\\";\n     }\n   return \\\"addd %2,%0\\\";\n@@ -953,8 +964,8 @@\n   \"GET_CODE (operands[0]) == CONST_INT\"\n   \"*\n {\n-  if (GET_CODE(operands[0]) == CONST_INT && INTVAL(operands[0]) < 64\n-      && INTVAL(operands[0]) > -64 && ! TARGET_32532)\n+  if (! TARGET_32532 && GET_CODE(operands[0]) == CONST_INT \n+      && INTVAL(operands[0]) < 64 && INTVAL(operands[0]) > -64)\n     return \\\"adjspb %$%0\\\";\n   return \\\"adjspd %$%0\\\";\n }\")\n@@ -1443,7 +1454,7 @@\n     {\n       if (INTVAL (operands[2]) == 1)\n \treturn \\\"addw %0,%0\\\";\n-      else if (INTVAL (operands[2]) == 2 && !TARGET_32532)\n+      else if (! TARGET_32532 && INTVAL (operands[2]) == 2)\n \treturn \\\"addw %0,%0\\;addw %0,%0\\\";\n     }\n   if (TARGET_32532)\n@@ -1462,7 +1473,7 @@\n     {\n       if (INTVAL (operands[2]) == 1)\n \treturn \\\"addb %0,%0\\\";\n-      else if (INTVAL (operands[2]) == 2 && !TARGET_32532)\n+      else if (! TARGET_32532 && INTVAL (operands[2]) == 2)\n \treturn \\\"addb %0,%0\\;addb %0,%0\\\";\n     }\n   if (TARGET_32532)"}]}