{"sha": "3bab738598b67b501fd1411ef43f9c9f36f13297", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhYjczODU5OGI2N2I1MDFmZDE0MTFlZjQzZjljOWYzNmYxMzI5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-04-11T07:34:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-04-11T07:34:20Z"}, "message": "re PR tree-optimization/90020 (-O2 -Os x86-64 wrong code generated for GNU Emacs)\n\n2019-04-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90020\n\t* tree-ssa-sccvn.c (vn_reference_may_trap): New function.\n\t* tree-ssa-sccvn.h (vn_reference_may_trap): Declare.\n\t* tree-ssa-pre.c (compute_avail): Use it to not put\n\tpossibly trapping references after a call that might not\n\treturn into EXP_GEN.\n\t* gcse.c (compute_hash_table_work): Do not elide\n\tmarking a block containing a call if the call might not\n\treturn.\n\n\t* gcc.dg/torture/pr90020.c: New testcase.\n\nFrom-SVN: r270275", "tree": {"sha": "1f6fce6719b7ea38d1b0298dc475a7a3472cf9cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f6fce6719b7ea38d1b0298dc475a7a3472cf9cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bab738598b67b501fd1411ef43f9c9f36f13297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bab738598b67b501fd1411ef43f9c9f36f13297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bab738598b67b501fd1411ef43f9c9f36f13297", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bab738598b67b501fd1411ef43f9c9f36f13297/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2fd579ab530ca9ca5682eeba305c4946bf710c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd579ab530ca9ca5682eeba305c4946bf710c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fd579ab530ca9ca5682eeba305c4946bf710c25"}], "stats": {"total": 106, "additions": 105, "deletions": 1}, "files": [{"sha": "d59e43f4f3b0a8c511783896f79249112d309d26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -1,3 +1,15 @@\n+2019-04-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90020\n+\t* tree-ssa-sccvn.c (vn_reference_may_trap): New function.\n+\t* tree-ssa-sccvn.h (vn_reference_may_trap): Declare.\n+\t* tree-ssa-pre.c (compute_avail): Use it to not put\n+\tpossibly trapping references after a call that might not\n+\treturn into EXP_GEN.\n+\t* gcse.c (compute_hash_table_work): Do not elide\n+\tmarking a block containing a call if the call might not\n+\treturn.\n+\n 2019-04-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90018"}, {"sha": "7fbdd675005e866d5d06949993ca3a545fe89e1f", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -1532,7 +1532,8 @@ compute_hash_table_work (struct gcse_hash_table_d *table)\n \t\t\t\t\t      0, regno, hrsi)\n \t\trecord_last_reg_set_info (insn, regno);\n \n-\t      if (! RTL_CONST_OR_PURE_CALL_P (insn))\n+\t      if (! RTL_CONST_OR_PURE_CALL_P (insn)\n+\t\t  || RTL_LOOPING_CONST_OR_PURE_CALL_P (insn))\n \t\trecord_last_mem_set_info (insn);\n \t    }\n "}, {"sha": "b5094769dd8d1bf538dccdb9ef66288b13de4454", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -1,3 +1,8 @@\n+2019-04-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90020\n+\t* gcc.dg/torture/pr90020.c: New testcase.\n+\n 2019-04-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90018"}, {"sha": "2aa8aa0e4a461ecd48aba11637be352c375e89f5", "filename": "gcc/testsuite/gcc.dg/torture/pr90020.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90020.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90020.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90020.c?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-require-weak \"\" } */\n+\n+void __attribute__((noinline,noclone))\n+check (int i)\n+{\n+  if (i == 0)\n+    __builtin_exit (0);\n+}\n+\n+int i;\n+extern int x __attribute__((weak));\n+\n+int main(int argc, char **argv)\n+{\n+  if (argc)\n+    {\n+      check (i);\n+      return x;\n+    }\n+  else\n+    {\n+      check (i);\n+      return x-1;\n+    }\n+  return 0;\n+}"}, {"sha": "7bb2cf1e2207b83a6b6b05615a709a509cce3cdf", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -3931,6 +3931,13 @@ compute_avail (void)\n \t\t\t  continue;\n \t\t\t}\n \n+\t\t      /* If the REFERENCE traps and there was a preceding\n+\t\t         point in the block that might not return avoid\n+\t\t\t adding the reference to EXP_GEN.  */\n+\t\t      if (BB_MAY_NOTRETURN (block)\n+\t\t\t  && vn_reference_may_trap (ref))\n+\t\t\tcontinue;\n+\n \t\t      /* If the value of the reference is not invalidated in\n \t\t\t this block until it is computed, add the expression\n \t\t\t to EXP_GEN.  */"}, {"sha": "a174f18f72a0198cfe2ed2844b31f1dccc216086", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -4766,6 +4766,57 @@ vn_nary_may_trap (vn_nary_op_t nary)\n   return false;\n }\n \n+/* Return true if the reference operation REF may trap.  */\n+\n+bool\n+vn_reference_may_trap (vn_reference_t ref)\n+{\n+  switch (ref->operands[0].opcode)\n+    {\n+    case MODIFY_EXPR:\n+    case CALL_EXPR:\n+      /* We do not handle calls.  */\n+    case ADDR_EXPR:\n+      /* And toplevel address computations never trap.  */\n+      return false;\n+    default:;\n+    }\n+\n+  vn_reference_op_t op;\n+  unsigned i;\n+  FOR_EACH_VEC_ELT (ref->operands, i, op)\n+    {\n+      switch (op->opcode)\n+\t{\n+\tcase WITH_SIZE_EXPR:\n+\tcase TARGET_MEM_REF:\n+\t  /* Always variable.  */\n+\t  return true;\n+\tcase COMPONENT_REF:\n+\t  if (op->op1 && TREE_CODE (op->op1) == SSA_NAME)\n+\t    return true;\n+\t  break;\n+\tcase ARRAY_RANGE_REF:\n+\tcase ARRAY_REF:\n+\t  if (TREE_CODE (op->op0) == SSA_NAME)\n+\t    return true;\n+\t  break;\n+\tcase MEM_REF:\n+\t  /* Nothing interesting in itself, the base is separate.  */\n+\t  break;\n+\t/* The following are the address bases.  */\n+\tcase SSA_NAME:\n+\t  return true;\n+\tcase ADDR_EXPR:\n+\t  if (op->op0)\n+\t    return tree_could_trap_p (TREE_OPERAND (op->op0, 0));\n+\t  return false;\n+\tdefault:;\n+\t}\n+    }\n+  return false;\n+}\n+\n eliminate_dom_walker::eliminate_dom_walker (cdi_direction direction,\n \t\t\t\t\t    bitmap inserted_exprs_)\n   : dom_walker (direction), do_pre (inserted_exprs_ != NULL),"}, {"sha": "bd661bc651c43ce75ed0ca2604f1026a04cf99a5", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bab738598b67b501fd1411ef43f9c9f36f13297/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=3bab738598b67b501fd1411ef43f9c9f36f13297", "patch": "@@ -243,6 +243,7 @@ vn_reference_t vn_reference_insert_pieces (tree, alias_set_type, tree,\n bool vn_nary_op_eq (const_vn_nary_op_t const vno1,\n \t\t    const_vn_nary_op_t const vno2);\n bool vn_nary_may_trap (vn_nary_op_t);\n+bool vn_reference_may_trap (vn_reference_t);\n bool vn_reference_eq (const_vn_reference_t const, const_vn_reference_t const);\n unsigned int get_max_value_id (void);\n unsigned int get_next_value_id (void);"}]}