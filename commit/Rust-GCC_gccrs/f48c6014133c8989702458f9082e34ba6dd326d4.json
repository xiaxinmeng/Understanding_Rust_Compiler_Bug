{"sha": "f48c6014133c8989702458f9082e34ba6dd326d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ4YzYwMTQxMzNjODk4OTcwMjQ1OGY5MDgyZTM0YmE2ZGQzMjZkNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-16T19:44:27Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-16T19:44:27Z"}, "message": "Fix noreorder symbol partitioning reversion.\n\n\t* lto-partition.c (lto_balanced_map): Remember\n\tbest_noreorder_pos and then restore to it\n\twhen we revert.", "tree": {"sha": "ce1b8361278df0dc73d9f0604e1046a67129eb8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce1b8361278df0dc73d9f0604e1046a67129eb8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f48c6014133c8989702458f9082e34ba6dd326d4", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl4gvRsACgkQTcGC3A+n\nN4XNYAf+KK3HkAyM/BjF9W7iEhXPPsyD0KlUuXQEXxjpZD/HN+wRV6I6aKSCr/UO\n+aUc6HcQLzZmKD939/HEmSvTgpTX4UqWcsvmmVhNWiPpAs85YLezaXunW8D3jUc1\ni7P9wxfAyAtKTGDoN6jolCf2d53lGB0W99mvWhoym8sEdL4t5CbpaPkBrJJEfRud\nB56sqpRgC1UI7xenJ8FYClpK3vwQqTxnGY1x4vm5IgUiopKnfs8cBZUxOWhd/MNw\nfXnDl58TLGcKjgZxKlDbJ7SStNuB5Z/7JIotNrLHfhuvz8PonIIEEBMVx8xhG77X\ntuGB/6sBTDWGWrelgBuh9jBkXWi4jg==\n=mpLs\n-----END PGP SIGNATURE-----", "payload": "tree ce1b8361278df0dc73d9f0604e1046a67129eb8a\nparent 98d56ea8900fdcff8f1987cf2bf499a5b7399857\nauthor Martin Liska <mliska@suse.cz> 1579203867 +0100\ncommitter Martin Liska <mliska@suse.cz> 1579203867 +0100\n\nFix noreorder symbol partitioning reversion.\n\n\t* lto-partition.c (lto_balanced_map): Remember\n\tbest_noreorder_pos and then restore to it\n\twhen we revert.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48c6014133c8989702458f9082e34ba6dd326d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48c6014133c8989702458f9082e34ba6dd326d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48c6014133c8989702458f9082e34ba6dd326d4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d56ea8900fdcff8f1987cf2bf499a5b7399857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d56ea8900fdcff8f1987cf2bf499a5b7399857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d56ea8900fdcff8f1987cf2bf499a5b7399857"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "2b930cb33df33c5edc578fc9cc0b833b9f82b590", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48c6014133c8989702458f9082e34ba6dd326d4/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48c6014133c8989702458f9082e34ba6dd326d4/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=f48c6014133c8989702458f9082e34ba6dd326d4", "patch": "@@ -1,3 +1,9 @@\n+2020-01-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-partition.c (lto_balanced_map): Remember\n+\tbest_noreorder_pos and then restore to it\n+\twhen we revert.\n+\n 2020-01-08  Martin Liska  <mliska@suse.cz>\n \n \t* lto-partition.c (add_symbol_to_partition_1): Use ::dump_name or"}, {"sha": "8e0488ab13e182a8d8a0d753939ff438eb7f9bb9", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48c6014133c8989702458f9082e34ba6dd326d4/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48c6014133c8989702458f9082e34ba6dd326d4/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=f48c6014133c8989702458f9082e34ba6dd326d4", "patch": "@@ -471,6 +471,7 @@ void\n lto_balanced_map (int n_lto_partitions, int max_partition_size)\n {\n   int n_varpool_nodes = 0, varpool_pos = 0, best_varpool_pos = 0;\n+  int best_noreorder_pos = 0;\n   auto_vec <cgraph_node *> order (symtab->cgraph_count);\n   auto_vec<cgraph_node *> noreorder;\n   auto_vec<varpool_node *> varpool_order;\n@@ -732,6 +733,7 @@ lto_balanced_map (int n_lto_partitions, int max_partition_size)\n \t  best_i = i;\n \t  best_n_nodes = lto_symtab_encoder_size (partition->encoder);\n \t  best_varpool_pos = varpool_pos;\n+\t  best_noreorder_pos = noreorder_pos;\n \t}\n       if (dump_file)\n \tfprintf (dump_file, \"Step %i: added %s, size %i, \"\n@@ -752,6 +754,7 @@ lto_balanced_map (int n_lto_partitions, int max_partition_size)\n \t\t\t i - best_i, best_i);\n \t      undo_partition (partition, best_n_nodes);\n \t      varpool_pos = best_varpool_pos;\n+\t      noreorder_pos = best_noreorder_pos;\n \t    }\n \t  gcc_assert (best_size == partition->insns);\n \t  i = best_i;"}]}