{"sha": "aaf0e9d7081755e4a95c236cfe623923a0fe6f32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmMGU5ZDcwODE3NTVlNGE5NWMyMzZjZmU2MjM5MjNhMGZlNmYzMg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-12-18T17:01:51Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-12-18T17:01:51Z"}, "message": "[OpenACC] Refactor 'present_create_copy' into 'goacc_enter_data'\n\nEvery caller passes in 'FLAG_PRESENT', 'FLAG_CREATE'.  Change the remaining\n'FLAG_COPY' into the usual map kind.\n\nNo functional changes.\n\n\tlibgomp/\n\t* oacc-mem.c (present_create_copy): Refactor into...\n\t(goacc_enter_data): ... this.  Adjust all users.\n\nFrom-SVN: r279535", "tree": {"sha": "ac2839a571c66079ec04bdf449848047c98da185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac2839a571c66079ec04bdf449848047c98da185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaf0e9d7081755e4a95c236cfe623923a0fe6f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf0e9d7081755e4a95c236cfe623923a0fe6f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf0e9d7081755e4a95c236cfe623923a0fe6f32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf0e9d7081755e4a95c236cfe623923a0fe6f32/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83d1d065df01e4f21afd763c17f1d48e0a1161aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d1d065df01e4f21afd763c17f1d48e0a1161aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d1d065df01e4f21afd763c17f1d48e0a1161aa"}], "stats": {"total": 40, "additions": 13, "deletions": 27}, "files": [{"sha": "a5d6b51df5fc4a94ef4fca58fcecede6c9eb4f53", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf0e9d7081755e4a95c236cfe623923a0fe6f32/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf0e9d7081755e4a95c236cfe623923a0fe6f32/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=aaf0e9d7081755e4a95c236cfe623923a0fe6f32", "patch": "@@ -1,5 +1,8 @@\n 2019-12-18  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* oacc-mem.c (present_create_copy): Refactor into...\n+\t(goacc_enter_data): ... this.  Adjust all users.\n+\n \t* target.c (gomp_unmap_vars_internal): Add a safeguard to\n \t'gomp_remove_var'.\n "}, {"sha": "68b78b3f42fcd7191e4a9be21db44e463ad4cb05", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 10, "deletions": 27, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaf0e9d7081755e4a95c236cfe623923a0fe6f32/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaf0e9d7081755e4a95c236cfe623923a0fe6f32/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=aaf0e9d7081755e4a95c236cfe623923a0fe6f32", "patch": "@@ -492,12 +492,13 @@ acc_unmap_data (void *h)\n     }\n }\n \n-#define FLAG_PRESENT (1 << 0)\n-#define FLAG_CREATE (1 << 1)\n-#define FLAG_COPY (1 << 2)\n+\n+/* Enter a dynamic mapping.\n+\n+   Return the device pointer.  */\n \n static void *\n-present_create_copy (unsigned f, void *h, size_t s, int async)\n+goacc_enter_data (void *h, size_t s, unsigned short kind, int async)\n {\n   void *d;\n   splay_tree_key n;\n@@ -530,12 +531,6 @@ present_create_copy (unsigned f, void *h, size_t s, int async)\n       /* Present. */\n       d = (void *) (n->tgt->tgt_start + n->tgt_offset + h - n->host_start);\n \n-      if (!(f & FLAG_PRESENT))\n-        {\n-\t  gomp_mutex_unlock (&acc_dev->lock);\n-          gomp_fatal (\"[%p,+%d] already mapped to [%p,+%d]\",\n-        \t      (void *)h, (int)s, (void *)d, (int)s);\n-\t}\n       if ((h + s) > (void *)n->host_end)\n \t{\n \t  gomp_mutex_unlock (&acc_dev->lock);\n@@ -549,29 +544,18 @@ present_create_copy (unsigned f, void *h, size_t s, int async)\n \n       gomp_mutex_unlock (&acc_dev->lock);\n     }\n-  else if (!(f & FLAG_CREATE))\n-    {\n-      gomp_mutex_unlock (&acc_dev->lock);\n-      gomp_fatal (\"[%p,+%d] not mapped\", (void *)h, (int)s);\n-    }\n   else\n     {\n       struct target_mem_desc *tgt;\n       size_t mapnum = 1;\n-      unsigned short kinds;\n       void *hostaddrs = h;\n \n-      if (f & FLAG_COPY)\n-\tkinds = GOMP_MAP_TO;\n-      else\n-\tkinds = GOMP_MAP_ALLOC;\n-\n       gomp_mutex_unlock (&acc_dev->lock);\n \n       goacc_aq aq = get_goacc_asyncqueue (async);\n \n       tgt = gomp_map_vars_async (acc_dev, aq, mapnum, &hostaddrs, NULL, &s,\n-\t\t\t\t &kinds, true, GOMP_MAP_VARS_ENTER_DATA);\n+\t\t\t\t &kind, true, GOMP_MAP_VARS_ENTER_DATA);\n       assert (tgt);\n       n = tgt->list[0].key;\n       assert (n->refcount == 1);\n@@ -593,13 +577,13 @@ present_create_copy (unsigned f, void *h, size_t s, int async)\n void *\n acc_create (void *h, size_t s)\n {\n-  return present_create_copy (FLAG_PRESENT | FLAG_CREATE, h, s, acc_async_sync);\n+  return goacc_enter_data (h, s, GOMP_MAP_ALLOC, acc_async_sync);\n }\n \n void\n acc_create_async (void *h, size_t s, int async)\n {\n-  present_create_copy (FLAG_PRESENT | FLAG_CREATE, h, s, async);\n+  goacc_enter_data (h, s, GOMP_MAP_ALLOC, async);\n }\n \n /* acc_present_or_create used to be what acc_create is now.  */\n@@ -624,14 +608,13 @@ acc_pcreate (void *h, size_t s)\n void *\n acc_copyin (void *h, size_t s)\n {\n-  return present_create_copy (FLAG_PRESENT | FLAG_CREATE | FLAG_COPY, h, s,\n-\t\t\t      acc_async_sync);\n+  return goacc_enter_data (h, s, GOMP_MAP_TO, acc_async_sync);\n }\n \n void\n acc_copyin_async (void *h, size_t s, int async)\n {\n-  present_create_copy (FLAG_PRESENT | FLAG_CREATE | FLAG_COPY, h, s, async);\n+  goacc_enter_data (h, s, GOMP_MAP_TO, async);\n }\n \n /* acc_present_or_copyin used to be what acc_copyin is now.  */"}]}