{"sha": "37a68925ce3060f4321be2a53a2ca59b64646a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhNjg5MjVjZTMwNjBmNDMyMWJlMmE1M2EyY2E1OWI2NDY0NmE1Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-12-19T15:53:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-12-19T15:53:44Z"}, "message": "basic_string.h (operator+(basic_string<>&&, basic_string<>&&)): Optimize better.\n\n2010-12-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/basic_string.h (operator+(basic_string<>&&,\n\tbasic_string<>&&)): Optimize better.\n\t* include/ext/vstring.h (operator+(__versa_string<>&&,\n\t__versa_string<>&)): Likewise.\n\nFrom-SVN: r168061", "tree": {"sha": "3d8e65f13093a64bc662cab739bfcfacfa0404b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8e65f13093a64bc662cab739bfcfacfa0404b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37a68925ce3060f4321be2a53a2ca59b64646a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a68925ce3060f4321be2a53a2ca59b64646a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37a68925ce3060f4321be2a53a2ca59b64646a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a68925ce3060f4321be2a53a2ca59b64646a52/comments", "author": null, "committer": null, "parents": [{"sha": "5bfe5df3d8a1720452994debf31ccdeb7d8d912b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bfe5df3d8a1720452994debf31ccdeb7d8d912b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bfe5df3d8a1720452994debf31ccdeb7d8d912b"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "b6f23e4413be6664cec76448377c3bd3d8358339", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a68925ce3060f4321be2a53a2ca59b64646a52/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a68925ce3060f4321be2a53a2ca59b64646a52/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=37a68925ce3060f4321be2a53a2ca59b64646a52", "patch": "@@ -1,3 +1,10 @@\n+2010-12-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/basic_string.h (operator+(basic_string<>&&,\n+\tbasic_string<>&&)): Optimize better.\n+\t* include/ext/vstring.h (operator+(__versa_string<>&&,\n+\t__versa_string<>&)): Likewise.\n+\n 2010-12-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/21_strings/basic_string/operators/char/4.cc: New."}, {"sha": "bffa8afd4c698af91004e0ef1cf7892ab4043702", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a68925ce3060f4321be2a53a2ca59b64646a52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a68925ce3060f4321be2a53a2ca59b64646a52/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=37a68925ce3060f4321be2a53a2ca59b64646a52", "patch": "@@ -2380,7 +2380,13 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     inline basic_string<_CharT, _Traits, _Alloc>\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n \t      basic_string<_CharT, _Traits, _Alloc>&& __rhs)\n-    { return std::move(__lhs.append(__rhs)); }\n+    {\n+      const auto __size = __lhs.size() + __rhs.size();\n+      const bool __cond = (__size > __lhs.capacity()\n+\t\t\t   && __size <= __rhs.capacity());\n+      return __cond ? std::move(__rhs.insert(0, __lhs))\n+\t            : std::move(__lhs.append(__rhs));\n+    }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline basic_string<_CharT, _Traits, _Alloc>\n@@ -2390,8 +2396,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline basic_string<_CharT, _Traits, _Alloc>\n-    operator+(_CharT __lhs, basic_string<_CharT,\n-\t      _Traits, _Alloc>&& __rhs)\n+    operator+(_CharT __lhs,\n+\t      basic_string<_CharT, _Traits, _Alloc>&& __rhs)\n     { return std::move(__rhs.insert(0, 1, __lhs)); }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>"}, {"sha": "3700f3ee587d278e1919e1b5b05e5e08ae76d851", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a68925ce3060f4321be2a53a2ca59b64646a52/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a68925ce3060f4321be2a53a2ca59b64646a52/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=37a68925ce3060f4321be2a53a2ca59b64646a52", "patch": "@@ -2118,7 +2118,13 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     inline __versa_string<_CharT, _Traits, _Alloc, _Base>\n     operator+(__versa_string<_CharT, _Traits, _Alloc, _Base>&& __lhs,\n \t      __versa_string<_CharT, _Traits, _Alloc, _Base>&& __rhs)\n-    { return std::move(__lhs.append(__rhs)); }\n+    {\n+      const auto __size = __lhs.size() + __rhs.size();\n+      const bool __cond = (__size > __lhs.capacity()\n+\t\t\t   && __size <= __rhs.capacity());\n+      return __cond ? std::move(__rhs.insert(0, __lhs))\n+\t            : std::move(__lhs.append(__rhs));\n+    }\n \n   template<typename _CharT, typename _Traits, typename _Alloc,\n \t   template <typename, typename, typename> class _Base>"}]}