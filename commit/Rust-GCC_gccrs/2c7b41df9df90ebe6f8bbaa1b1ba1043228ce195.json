{"sha": "2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM3YjQxZGY5ZGY5MGViZTZmOGJiYWExYjFiYTEwNDMyMjhjZTE5NQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-08-17T23:36:53Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-08-17T23:36:53Z"}, "message": "rs6000.md (*boolcsi3_internal1, [...]): Delete.\n\n2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (*boolcsi3_internal1, *boolcsi3_internal2\n\tand split, *boolcsi3_internal3 and split): Delete.\n\t(*boolcdi3_internal1, *boolcdi3_internal2 and split,\n\t*boolcdi3_internal3 and split): Delete.\n\t(*boolc<mode>3, *boolc<mode>3_dot, *boolc<mode>3_dot2): New.\n\nFrom-SVN: r214078", "tree": {"sha": "9243698bba4d5a74e317e74e0649b7c1c35736ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9243698bba4d5a74e317e74e0649b7c1c35736ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10802beec7a3ce6f96553e89f23b82bf5d255932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10802beec7a3ce6f96553e89f23b82bf5d255932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10802beec7a3ce6f96553e89f23b82bf5d255932"}], "stats": {"total": 170, "additions": 49, "deletions": 121}, "files": [{"sha": "b810dbf7cd23121241996d303d65524b31dc5cd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "patch": "@@ -1,3 +1,11 @@\n+2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (*boolcsi3_internal1, *boolcsi3_internal2\n+\tand split, *boolcsi3_internal3 and split): Delete.\n+\t(*boolcdi3_internal1, *boolcdi3_internal2 and split,\n+\t*boolcdi3_internal3 and split): Delete.\n+\t(*boolc<mode>3, *boolc<mode>3_dot, *boolc<mode>3_dot2): New.\n+\n 2014-08-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (print_operand) <'e'>: New."}, {"sha": "46f4f555d5461c13be25fe097993e8f2da06a99e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 41, "deletions": 121, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=2c7b41df9df90ebe6f8bbaa1b1ba1043228ce195", "patch": "@@ -3298,71 +3298,59 @@\n })\n \n \n-(define_insn \"*boolcsi3_internal1\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(match_operator:SI 3 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n-\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\")]))]\n+(define_insn \"*boolc<mode>3\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(match_operator:GPR 3 \"boolean_operator\"\n+\t [(not:GPR (match_operand:GPR 2 \"gpc_reg_operand\" \"r\"))\n+\t  (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")]))]\n   \"\"\n-  \"%q3 %0,%2,%1\")\n+  \"%q3 %0,%1,%2\"\n+  [(set_attr \"type\" \"logical\")])\n \n-(define_insn \"*boolcsi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\")])\n+(define_insn_and_split \"*boolc<mode>3_dot\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (match_operator:GPR 3 \"boolean_operator\"\n+\t [(not:GPR (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))\n+\t  (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")])\n \t (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"TARGET_32BIT\"\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   %q4. %3,%2,%1\n+   %q3. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n-\t  (match_operand:SI 2 \"gpc_reg_operand\" \"\")])\n-\t (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 3) (match_dup 4))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(match_dup 3))\n+   (set (match_dup 4)\n+\t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n-(define_insn \"*boolcsi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\"))\n-\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\")])\n+(define_insn_and_split \"*boolc<mode>3_dot2\"\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (match_operator:GPR 3 \"boolean_operator\"\n+\t [(not:GPR (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))\n+\t  (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")])\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(match_dup 4))]\n-  \"TARGET_32BIT\"\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(match_dup 3))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   %q4. %0,%2,%1\n+   %q3. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:SI 4 \"boolean_operator\"\n-\t [(not:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n-\t  (match_operand:SI 2 \"gpc_reg_operand\" \"\")])\n-\t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(match_dup 4))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 0) (match_dup 4))\n-   (set (match_dup 3)\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[4], CCmode)\"\n+  [(set (match_dup 0)\n+\t(match_dup 3))\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"logical\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*boolccsi3_internal1\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -7840,74 +7828,6 @@\n   build_mask64_2_operands (operands[2], &operands[5]);\n }\")\n \n-(define_insn \"*boolcdi3_internal1\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(match_operator:DI 3 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\"))\n-\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r\")]))]\n-  \"TARGET_POWERPC64\"\n-  \"%q3 %0,%2,%1\")\n-\n-(define_insn \"*boolcdi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\"))\n-\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\")])\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r\"))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   %q4. %3,%2,%1\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\"))\n-\t  (match_operand:DI 2 \"gpc_reg_operand\" \"\")])\n-\t (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 3) (match_dup 4))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*boolcdi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\"))\n-\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\")])\n-\t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(match_dup 4))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   %q4. %0,%2,%1\n-   #\"\n-  [(set_attr \"type\" \"logical,compare\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (match_operator:DI 4 \"boolean_operator\"\n-\t [(not:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\"))\n-\t  (match_operand:DI 2 \"gpc_reg_operand\" \"\")])\n-\t (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(match_dup 4))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 0) (match_dup 4))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n (define_insn \"*boolccdi3_internal1\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(match_operator:DI 3 \"boolean_operator\""}]}