{"sha": "7469b7bcb42ea1d67b396bcf91fa35609ff29b6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2OWI3YmNiNDJlYTFkNjdiMzk2YmNmOTFmYTM1NjA5ZmYyOWI2ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-19T16:47:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-19T16:47:36Z"}, "message": "Resync.\n\nFrom-SVN: r131088", "tree": {"sha": "70092573c7bc1d8478466f4efb8ba04200a99fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70092573c7bc1d8478466f4efb8ba04200a99fee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7469b7bcb42ea1d67b396bcf91fa35609ff29b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7469b7bcb42ea1d67b396bcf91fa35609ff29b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7469b7bcb42ea1d67b396bcf91fa35609ff29b6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7469b7bcb42ea1d67b396bcf91fa35609ff29b6d/comments", "author": null, "committer": null, "parents": [{"sha": "5ce4352251de3720974920752afebf51a63e2ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce4352251de3720974920752afebf51a63e2ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce4352251de3720974920752afebf51a63e2ecd"}], "stats": {"total": 201, "additions": 201, "deletions": 0}, "files": [{"sha": "67dbc2de53b9e3e51d66bfd64cf841d95ff4a47b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7469b7bcb42ea1d67b396bcf91fa35609ff29b6d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7469b7bcb42ea1d67b396bcf91fa35609ff29b6d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7469b7bcb42ea1d67b396bcf91fa35609ff29b6d", "patch": "@@ -1,3 +1,204 @@\n+2007-12-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-expect-vms.adb, g-expect.adb, s-poosiz.adb: \n+\tAdd pragma Warnings (Off) for unassigned IN OUT arguments\n+\n+\t* sem_warn.adb (Output_Reference): Suppress messages for internal names\n+\t(Check_References): Extensive changes to tune up warnings\n+\t(Output_Non_Modifed_In_Out_Warnings): Changes to tune up warnings\n+\t(Has_Pragma_Unmodifed_Check_Spec): New function\n+\t(Check_References): Implement pragma Unmodified\n+\t(Warn_On_Unassigned_Out_Parameter): Implement pragma Unmodified\n+\n+\t* par-prag.adb: Dummy entry for pragma Unmodified\n+\n+\t* sem_prag.adb: Implement pragma Unmodified\n+\n+\t* einfo.ads, einfo.adb: (Has_Pragma_Unmodified): New flag\n+\t(Proc_Next_Component_Or_Discriminant): Fix typo.\n+\tUpdate comments.\n+\n+\t* sem_util.adb (Note_Possible_Modification): Add processinng for pragma\n+\tUnmodified.\n+\t(Reset_Analyzed_Flags): Use Traverse_Proc instead of Traverse_Func,\n+\tbecause the former already takes care of discarding the result.\n+\t(Mark_Coextensions): Remove ununused initial value from Is_Dynamic.\n+\tAdd comment.\n+\n+\t* snames.h, snames.ads, snames.adb: Add entry for pragma Unmodified\n+\n+2007-12-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* targparm.adb, targparm.ads, system.ads, system-darwin-ppc.ads,\n+\tsystem-vxworks-x86.ads, system-linux-ppc.ads, system-linux-hppa.ads,\n+\tsystem-hpux-ia64.ads, system-vxworks-arm.ads, system-darwin-x86.ads,\n+\tsystem-vms_64.ads, system-vms-ia64.ads, system-linux-ia64.ads,\n+\tsystem-freebsd-x86.ads, system-linux-x86_64.ads, system-tru64.ads,\n+\tsystem-aix.ads, system-vxworks-sparcv9.ads, system-solaris-x86.ads,\n+\tsystem-irix-o32.ads, system-irix-n32.ads, system-hpux.ads,\n+\tsystem-vxworks-m68k.ads, system-linux-x86.ads, system-vxworks-mips.ads,\n+\tsystem-solaris-sparc.ads, system-solaris-sparcv9.ads, system-vms.ads,\n+\tsystem-mingw.ads, system-vms-zcx.ads, system-vxworks-ppc.ads\n+\t(Dynamic_Trampolines_Used): Delete.\n+\n+\t* system-lynxos-x86.ads, system-lynxos-ppc.ads: Ditto.\n+\tTurn on stack probing mechanism on LynxOS.\n+\n+2007-12-19  Bob Duff  <duff@adacore.com>\n+\n+\t* atree.ads, atree.adb (Traverse_Func): Walk Field2 last, and eliminate\n+\tthe resulting tail recursion by hand. This prevents running out of\n+\tmemory on deeply nested concatenations, since Field2 is where the left\n+\toperand of concatenations is stored.\n+\tFix bug (was returning OK_Orig in some cases). Fix return subtype to\n+\tclarify that it can only return OK or Abandon.\n+\n+\t* sem_res.adb (Resolve_Op_Concat): Replace the recursion on the left\n+\toperand by iteration, in order to avoid running out of memory on\n+\tdeeply-nested concatenations. Use the Parent pointer to get back up the\n+\ttree.\n+\t(Resolve_Op_Concat_Arg, Resolve_Op_Concat_First,\n+\t Resolve_Op_Concat_Rest): New procedures split out of\n+\tResolve_Op_Concat, so the iterative algorithm in Resolve_Op_Concat is\n+\tclearer.\n+\n+\t* checks.adb (Remove_Checks): Use Traverse_Proc instead of\n+\tTraverse_Func, because the former already takes care of discarding the\n+\tresult.\n+\n+\t* errout.adb (First_Node): Use Traverse_Proc instead of Traverse_Func,\n+\tbecause the former already takes care of discarding the result.\n+\t(Remove_Warning_Messages): Use appropriate subtype for Status and\n+\tDiscard \n+\n+2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Not_OK_For_Backend): A component of a private type with\n+\tdiscriminants forces expansion of the aggregate into assignments.\n+\t(Init_Record_Controller):  If the type of the aggregate is untagged and\n+\tis not inherently limited, the record controller is not limited either.\n+\n+2007-12-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case Size): Fix error in\n+\thandling compile time known size of record or array (case of front end\n+\tlayout active, e.g. in GNAAMP).\n+\n+2007-12-19  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Complete the circuitry\n+\tthat forces the construction of static dispatch tables in case of\n+\trecord subtypes.\n+\n+2007-12-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb (Null_Statements): Moved to library level\n+\t(Trivial_Accept_OK): New function\n+\t(Expand_Accept_Declaration): Use Trivial_Accept_OK\n+\t(Expand_N_Accept_Statement): Use Trivial_Accept_OK\n+\n+2007-12-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): Fix packed array type\n+\tin complex case where array is Volatile.\n+\n+2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record_Type, Check_Current_Instance): Implement\n+\tproperly the Ada2005 rules concerning when the current instance of a\n+\trecord type is aliased.\n+\n+2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch3.adb (P_Record_Declaration): Guard against cascaded errors in\n+\tmangled declaration\n+\t(P_Type_Declaration): Diagnose misuse of \"abstract\" in untagged record\n+\tdeclarations.\n+\t(P_Variant_Part): Cleaner patch for parenthesized discriminant\n+\n+2007-12-19  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb (Package_Node_Id_Of): Returns Unknown_Package when\n+\tpackage is not known\n+\n+\t* prj-attr.ads (Unknown_Package): New constant\n+\tDo not crash when an unknown package is in several projects\n+\n+\t* prj-dect.adb (Parse_Package_Declaration): Mark an unknown package as\n+\tignored\n+\n+\t* prj-nmsc.adb (Check): Remove obsolete code related to no longer\n+\texisting package Language_Processing.\n+\n+2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\n+\tPR ada/15803, ada/15805\n+\t* sem_ch6.adb, sem_ch3.adb (Constrain_Access): In Ada2005, diagnose\n+\tillegal access subtypes when there is a constrained partial view.\n+\t(Check_For_Premature_Usage): New procedure inside\n+\tAccess_Subprogram_Declaration for checking that an access-to-subprogram\n+\ttype doesn't reference its own name within any formal parameters or\n+\tresult type (including within nested anonymous access types).\n+\t(Access_Subprogram_Declaration): Add call to Check_For_Premature_Usage.\n+\t(Sem_Ch3.Analyze_Object_Declaration, Sem_ch6.Process_Formals): if the\n+\tcontext is an access_to_variable, the expression cannot be an\n+\taccess_to_constant.\n+\n+2007-12-19  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Concatenation_Rest): New procedure.\n+\t(Analyze_Concatenation): Use iteration instead of recursion in order\n+\tto avoid running out of stack space for deeply nested concatenations.\n+\n+2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n+\t    Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): Diagnose illegal renamings\n+\twhose renamed entity is a subprogram that requires overriding.\n+\t(Premature_Usage): Test for the case of N_Full_Type_Declaration when\n+\tissuing an error for premature usage and issue a message that says\n+\t'type' rather than 'object'.\n+\n+2007-12-19  Gary Dismukes  <dismukes@adacore.com>\n+\n+\tPR ada/34149\n+\t* sem_disp.adb (Check_Dispatching_Call): Augment existing test for\n+\tpresence of a statically tagged operand (Present (Static_Tag)) with\n+\ttest for Indeterm_Ancestor_Call when determining whether to propagate\n+\tthe static tag to tag-indeterminate operands (which forces dispatching\n+\ton such calls).\n+\t(Check_Controlling_Formals): Ada2005, access parameters can have\n+\tdefaults.\n+\t(Add_Dispatching_Operation, Check_Operation_From_Private_View): do\n+\tnot insert subprogram in list of primitive operations if already there.\n+\n+2007-12-19  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* utils.c (create_var_decl_1): call rest_of_decl_compilation only for\n+\tglobal variable.\n+\n+2007-12-19  Thomas Quinot  <quinot@adacore.com>\n+\n+\tPart of PR ada/33688\n+\t* gen-soccon.c: Add constant IP_PKTINFO to allow getting ancillary\n+\tdatagram info on Linux.\n+\n+2007-12-19  Vincent Celier  <celier@adacore.com>\n+\n+\t* makegpr.adb (Check_Compilation_Needed): Normalize C_Source_Path so\n+\tthat the source path name is always found in the dependencies.\n+\n+2007-12-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi: Update documentation of -gnatw.o\n+\tFix name of Wide_Wide_Latin_1/9 file names\n+\tAdd documentation for Ada.Exceptions.Last_Chance_Handler (a-elchha.ads)\n+\tAdd missing documentation for Ada.Wide_[Wide_]Characters.Unicode\n+\tAdd missing documentation for Ada.Command_Line.Response_File\n+\tUpdate list of warning letters for Warnings pragma\n+\tAdd documentation for pragma Unmodified\n+\n 2007-12-19  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* Makefile.in: Add s-tasinf.ad[bs] substitutions for sh4-linux target."}]}