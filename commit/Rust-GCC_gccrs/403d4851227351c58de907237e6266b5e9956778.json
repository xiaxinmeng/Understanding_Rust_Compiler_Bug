{"sha": "403d4851227351c58de907237e6266b5e9956778", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAzZDQ4NTEyMjczNTFjNThkZTkwNzIzN2U2MjY2YjVlOTk1Njc3OA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2007-03-14T01:47:33Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2007-03-14T01:47:33Z"}, "message": "flags.h (flag_random_seed): Remove declaration, in favor of...\n\ngcc/ChangeLog:\n* flags.h (flag_random_seed): Remove declaration, in favor of...\n* toplev.h (get_random_seed, set_random_seed): ... these.\n* tree.c (get_file_function_name): Use the former.\n* opts.c (common_handle_option): Use the latter.\n* toplev.c\ngcc/cp/ChangeLog:\n* cp/repo.c (init_repo): Initialize random_seed saved options.\n(finish_repo): Adjust.\n\nFrom-SVN: r122901", "tree": {"sha": "7bb58d1e7d3b351d0ff0600da13ca9d5dce8a865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bb58d1e7d3b351d0ff0600da13ca9d5dce8a865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/403d4851227351c58de907237e6266b5e9956778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403d4851227351c58de907237e6266b5e9956778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403d4851227351c58de907237e6266b5e9956778", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403d4851227351c58de907237e6266b5e9956778/comments", "author": null, "committer": null, "parents": [{"sha": "481e0a49bb403b8bb01550e550f90ed2125b9e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/481e0a49bb403b8bb01550e550f90ed2125b9e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/481e0a49bb403b8bb01550e550f90ed2125b9e04"}], "stats": {"total": 105, "additions": 76, "deletions": 29}, "files": [{"sha": "45d009db9e5bad9164a46e3067b718e6ba9397a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -1,3 +1,11 @@\n+2007-03-13  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* flags.h (flag_random_seed): Remove declaration, in favor of...\n+\t* toplev.h (get_random_seed, set_random_seed): ... these.\n+\t* tree.c (get_file_function_name): Use the former.\n+\t* opts.c (common_handle_option): Use the latter.\n+\t* toplev.c\n+\n 2007-03-13  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR middle-end/31127"}, {"sha": "a56322b47f2b935c87bf2c9d3b531f3973085018", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -1,3 +1,8 @@\n+2007-03-13  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* cp/repo.c (init_repo): Initialize random_seed saved options.\n+\t(finish_repo): Adjust.\n+\n 2007-03-13  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR bootstrap/30899"}, {"sha": "a9b08520d6e477eecb9dbf896d19f1dc723fc906", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -1,6 +1,6 @@\n /* Code to maintain a C++ template repository.\n-   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005,\n+   2006, 2007  Free Software Foundation, Inc.\n    Contributed by Jason Merrill (jason@cygnus.com)\n \n This file is part of GCC.\n@@ -203,6 +203,10 @@ init_repo (void)\n       obstack_free (&temporary_obstack, buf);\n     }\n   fclose (repo_file);\n+\n+  if (old_args && !get_random_seed (true)\n+      && (buf = strstr (old_args, \"'-frandom-seed=\")))\n+    set_random_seed (extract_string (&buf) + strlen (\"-frandom-seed=\"));\n }\n \n static FILE *\n@@ -250,7 +254,7 @@ finish_repo (void)\n \t anonymous namespaces will get the same mangling when this\n \t file is recompiled.  */\n       if (!strstr (args, \"'-frandom-seed=\"))\n-\tfprintf (repo_file, \" '-frandom-seed=%s'\", flag_random_seed);\n+\tfprintf (repo_file, \" '-frandom-seed=%s'\", get_random_seed (false));\n       fprintf (repo_file, \"\\n\");\n     }\n "}, {"sha": "0b594ee48d33fdda0c8a77fd9bec6d83a0563ff3", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -251,11 +251,6 @@ extern int flag_var_tracking;\n    warning message in case flag was set by -fprofile-{generate,use}.  */\n extern bool flag_speculative_prefetching_set;\n \n-/* A string that's used when a random name is required.  NULL means\n-   to make it really random.  */\n-\n-extern const char *flag_random_seed;\n-\n /* Returns TRUE if generated code should match ABI version N or\n    greater is in use.  */\n "}, {"sha": "f8eeb1a7db9c3140c9f6e3b8313ece264a44be09", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -1268,11 +1268,11 @@ common_handle_option (size_t scode, const char *arg, int value,\n       /* The real switch is -fno-random-seed.  */\n       if (value)\n \treturn 0;\n-      flag_random_seed = NULL;\n+      set_random_seed (NULL);\n       break;\n \n     case OPT_frandom_seed_:\n-      flag_random_seed = arg;\n+      set_random_seed (arg);\n       break;\n \n     case OPT_fsched_verbose_:"}, {"sha": "8a471d8f955b8b4dbf9ae9ad2070e6322a9ba1f7", "filename": "gcc/toplev.c", "status": "modified", "additions": 47, "deletions": 17, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -1,6 +1,6 @@\n /* Top level of GCC compilers (cc1, cc1plus, etc.)\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -239,7 +239,7 @@ int in_system_header = 0;\n int flag_detailed_statistics = 0;\n \n /* A random sequence of characters, unless overridden by user.  */\n-const char *flag_random_seed;\n+static const char *flag_random_seed;\n \n /* A local time stamp derived from the time of compilation. It will be\n    zero if the system cannot provide a time.  It will be -1u, if the\n@@ -451,23 +451,20 @@ announce_function (tree decl)\n     }\n }\n \n-/* Set up a default flag_random_seed and local_tick, unless the user\n-   already specified one.  */\n+/* Initialize local_tick with the time of day, or -1 if\n+   flag_random_seed is set.  */\n \n static void\n-randomize (void)\n+init_local_tick (void)\n {\n   if (!flag_random_seed)\n     {\n-      unsigned HOST_WIDE_INT value;\n-      static char random_seed[HOST_BITS_PER_WIDE_INT / 4 + 3];\n-\n       /* Get some more or less random data.  */\n #ifdef HAVE_GETTIMEOFDAY\n       {\n- \tstruct timeval tv;\n+\tstruct timeval tv;\n \n- \tgettimeofday (&tv, NULL);\n+\tgettimeofday (&tv, NULL);\n \tlocal_tick = tv.tv_sec * 1000 + tv.tv_usec / 1000;\n       }\n #else\n@@ -478,15 +475,47 @@ randomize (void)\n \t  local_tick = (unsigned) now;\n       }\n #endif\n-      value = local_tick ^ getpid ();\n-\n-      sprintf (random_seed, HOST_WIDE_INT_PRINT_HEX, value);\n-      flag_random_seed = random_seed;\n     }\n-  else if (!local_tick)\n+  else\n     local_tick = -1;\n }\n \n+/* Set up a default flag_random_seed and local_tick, unless the user\n+   already specified one.  Must be called after init_local_tick.  */\n+\n+static void\n+init_random_seed (void)\n+{\n+  unsigned HOST_WIDE_INT value;\n+  static char random_seed[HOST_BITS_PER_WIDE_INT / 4 + 3];\n+\n+  value = local_tick ^ getpid ();\n+\n+  sprintf (random_seed, HOST_WIDE_INT_PRINT_HEX, value);\n+  flag_random_seed = random_seed;\n+}\n+\n+/* Obtain the random_seed string.  Unless NOINIT, initialize it if\n+   it's not provided in the command line.  */\n+\n+const char *\n+get_random_seed (bool noinit)\n+{\n+  if (!flag_random_seed && !noinit)\n+    init_random_seed ();\n+  return flag_random_seed;\n+}\n+\n+/* Modify the random_seed string to VAL.  Return its previous\n+   value.  */\n+\n+const char *\n+set_random_seed (const char *val)\n+{\n+  const char *old = flag_random_seed;\n+  flag_random_seed = val;\n+  return old;\n+}\n \n /* Decode the string P as an integral parameter.\n    If the string is indeed an integer return its numeric value else\n@@ -1277,7 +1306,8 @@ print_switch_values (print_switch_fn_type print_fn)\n \n   /* Fill in the -frandom-seed option, if the user didn't pass it, so\n      that it can be printed below.  This helps reproducibility.  */\n-  randomize ();\n+  if (!flag_random_seed)\n+    init_random_seed ();\n \n   /* Print the options as passed.  */\n   pos = print_single_switch (print_fn, pos,\n@@ -2119,7 +2149,7 @@ toplev_main (unsigned int argc, const char **argv)\n      enough to default flags appropriately.  */\n   decode_options (argc, argv);\n \n-  randomize ();\n+  init_local_tick ();\n \n   /* Exit early if we can (e.g. -help).  */\n   if (!exit_after_options)"}, {"sha": "524708d1d0744ca9ea496348dfc7f975dfaa1bf0", "filename": "gcc/toplev.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -1,5 +1,5 @@\n /* toplev.h - Various declarations for functions found in toplev.c\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -191,4 +191,9 @@ exact_log2 (unsigned HOST_WIDE_INT x)\n extern const char *get_src_pwd\t       (void);\n extern bool set_src_pwd\t\t       (const char *);\n \n+/* Functions used to manipulate the random seed.  */\n+\n+extern const char *get_random_seed (bool);\n+extern const char *set_random_seed (const char *);\n+\n #endif /* ! GCC_TOPLEV_H */"}, {"sha": "baf94b2db0ae169048c4b0bd72f47a495cc9b626", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/403d4851227351c58de907237e6266b5e9956778/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/403d4851227351c58de907237e6266b5e9956778/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=403d4851227351c58de907237e6266b5e9956778", "patch": "@@ -6497,7 +6497,7 @@ get_file_function_name (const char *type)\n       clean_symbol_name (q);\n \n       sprintf (q + len, \"_%08X_%08X\", crc32_string (0, name),\n-\t       crc32_string (0, flag_random_seed));\n+\t       crc32_string (0, get_random_seed (false)));\n \n       p = q;\n     }"}]}