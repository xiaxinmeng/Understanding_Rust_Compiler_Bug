{"sha": "93193ab5ee81eed3321d21730d50c6b03e56d68c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxOTNhYjVlZTgxZWVkMzMyMWQyMTczMGQ1MGM2YjAzZTU2ZDY4Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-23T22:13:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-23T22:13:03Z"}, "message": "(reload): After calling count_possible_groups, see if we have to proceed with allocating a group.\n\n(reload): After calling count_possible_groups, see if we have to proceed\nwith allocating a group.\n(count_possible_groups): Use HARD_REG_SET, not a char array, for consistency.\n\nFrom-SVN: r3309", "tree": {"sha": "234eee63b1984f8cbbab459b6e805c9f783111fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/234eee63b1984f8cbbab459b6e805c9f783111fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93193ab5ee81eed3321d21730d50c6b03e56d68c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93193ab5ee81eed3321d21730d50c6b03e56d68c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93193ab5ee81eed3321d21730d50c6b03e56d68c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93193ab5ee81eed3321d21730d50c6b03e56d68c/comments", "author": null, "committer": null, "parents": [{"sha": "a90ef3a37eab14c94441f645aff08562c5c894e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90ef3a37eab14c94441f645aff08562c5c894e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a90ef3a37eab14c94441f645aff08562c5c894e6"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "cb3db797921d76e54eea6b82efdf6e2d5a9ce0e3", "filename": "gcc/reload1.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93193ab5ee81eed3321d21730d50c6b03e56d68c/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93193ab5ee81eed3321d21730d50c6b03e56d68c/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=93193ab5ee81eed3321d21730d50c6b03e56d68c", "patch": "@@ -1579,6 +1579,9 @@ reload (first, global, dumpfile)\n \t\t to spill another group.  */\n \t      count_possible_groups (group_size, group_mode, max_groups);\n \n+\t      if (max_groups[class] <= 0)\n+\t\tbreak;\n+\n \t      /* Groups of size 2 (the only groups used on most machines)\n \t\t are treated specially.  */\n \t      if (group_size[class] == 2)\n@@ -1976,27 +1979,30 @@ count_possible_groups (group_size, group_mode, max_groups)\n   for (i = 0; i < N_REG_CLASSES; i++)\n     if (group_size[i] > 1)\n       {\n-\tchar regmask[FIRST_PSEUDO_REGISTER];\n+\tHARD_REG_SET new;\n \tint j;\n \n-\tbzero (regmask, sizeof regmask);\n+\tCLEAR_HARD_REG_SET (new);\n+\n \t/* Make a mask of all the regs that are spill regs in class I.  */\n \tfor (j = 0; j < n_spills; j++)\n \t  if (TEST_HARD_REG_BIT (reg_class_contents[i], spill_regs[j])\n \t      && ! TEST_HARD_REG_BIT (counted_for_groups, spill_regs[j])\n \t      && ! TEST_HARD_REG_BIT (counted_for_nongroups,\n \t\t\t\t      spill_regs[j]))\n-\t    regmask[spill_regs[j]] = 1;\n+\t    SET_HARD_REG_BIT (new, spill_regs[j]);\n+\n \t/* Find each consecutive group of them.  */\n \tfor (j = 0; j < FIRST_PSEUDO_REGISTER && max_groups[i] > 0; j++)\n-\t  if (regmask[j] && j + group_size[i] <= FIRST_PSEUDO_REGISTER\n+\t  if (TEST_HARD_REG_BIT (new, j)\n+\t      && j + group_size[i] <= FIRST_PSEUDO_REGISTER\n \t      /* Next line in case group-mode for this class\n \t\t demands an even-odd pair.  */\n \t      && HARD_REGNO_MODE_OK (j, group_mode[i]))\n \t    {\n \t      int k;\n \t      for (k = 1; k < group_size[i]; k++)\n-\t\tif (! regmask[j + k])\n+\t\tif (! TEST_HARD_REG_BIT (new, j + k))\n \t\t  break;\n \t      if (k == group_size[i])\n \t\t{"}]}