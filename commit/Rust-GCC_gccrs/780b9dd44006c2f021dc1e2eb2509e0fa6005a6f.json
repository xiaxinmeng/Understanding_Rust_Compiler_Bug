{"sha": "780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgwYjlkZDQ0MDA2YzJmMDIxZGMxZTJlYjI1MDllMGZhNjAwNWE2Zg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-05-31T14:55:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-05-31T14:55:05Z"}, "message": "gimplify.c (gimplify_switch_expr): Also handle GIMPLE_TRY.\n\n\t* gimplify.c (gimplify_switch_expr): Also handle GIMPLE_TRY.\n\n\t* c-c++-common/Wswitch-unreachable-3.c: New test.\n\t* g++.dg/warn/Wswitch-unreachable-1.C: New test.\n\nFrom-SVN: r236924", "tree": {"sha": "3f9f27e01869c122dc7dfd97c20e9ce1fe253901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f9f27e01869c122dc7dfd97c20e9ce1fe253901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7b03373d619b3ce715c760d2b21dbe4869a1c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b03373d619b3ce715c760d2b21dbe4869a1c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b03373d619b3ce715c760d2b21dbe4869a1c8f"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "59aae29bdc410537460d363bc8010487ab965d47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "patch": "@@ -1,3 +1,7 @@\n+2016-05-31  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gimplify.c (gimplify_switch_expr): Also handle GIMPLE_TRY.\n+\n 2016-05-31  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch_macro_fusion_pair_p): Use"}, {"sha": "8b7dddca48a1ffe82224696f1e62d79d6a6629f7", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "patch": "@@ -1609,10 +1609,17 @@ gimplify_switch_expr (tree *expr_p, gimple_seq *pre_p)\n \t  while (gimple_code (seq) == GIMPLE_BIND)\n \t    seq = gimple_bind_body (as_a <gbind *> (seq));\n \t  gimple *stmt = gimple_seq_first_stmt (seq);\n-\t  enum gimple_code code = gimple_code (stmt);\n-\t  if (code != GIMPLE_LABEL && code != GIMPLE_TRY)\n+\t  if (gimple_code (stmt) == GIMPLE_TRY)\n \t    {\n-\t      if (code == GIMPLE_GOTO\n+\t      /* A compiler-generated cleanup or a user-written try block.\n+\t\t Try to get the first statement in its try-block, for better\n+\t\t location.  */\n+\t      if ((seq = gimple_try_eval (stmt)))\n+\t\tstmt = gimple_seq_first_stmt (seq);\n+\t    }\n+\t  if (gimple_code (stmt) != GIMPLE_LABEL)\n+\t    {\n+\t      if (gimple_code (stmt) == GIMPLE_GOTO\n \t\t  && TREE_CODE (gimple_goto_dest (stmt)) == LABEL_DECL\n \t\t  && DECL_ARTIFICIAL (gimple_goto_dest (stmt)))\n \t\t/* Don't warn for compiler-generated gotos.  These occur"}, {"sha": "a7cf8340d15b6ddaac24581c0cb7cdc4378ed0fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "patch": "@@ -1,3 +1,8 @@\n+2016-05-31  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/Wswitch-unreachable-3.c: New test.\n+\t* g++.dg/warn/Wswitch-unreachable-1.C: New test.\n+\n 2016-05-31  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71352"}, {"sha": "c53cb106b214b81f6937980bb6372a50e055db75", "filename": "gcc/testsuite/c-c++-common/Wswitch-unreachable-3.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWswitch-unreachable-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWswitch-unreachable-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWswitch-unreachable-3.c?ref=780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+\n+extern void f (int *);\n+\n+void\n+g (int i)\n+{\n+  switch (i)\n+    {\n+      int a[3];\n+      __builtin_memset (a, 0, sizeof a); /* { dg-warning \"statement will never be executed\" } */\n+\n+    default:\n+      f (a);\n+    }\n+\n+  switch (i)\n+    {\n+      int a[3];\n+      int b[3];\n+      int c[3];\n+      b[1] = 60; /* { dg-warning \"statement will never be executed\" } */\n+\n+    default:\n+      f (a);\n+      f (b);\n+      f (c);\n+    }\n+}"}, {"sha": "99d9a8332177701cf41b18277eda171984db4d99", "filename": "gcc/testsuite/g++.dg/warn/Wswitch-unreachable-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-unreachable-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/780b9dd44006c2f021dc1e2eb2509e0fa6005a6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-unreachable-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWswitch-unreachable-1.C?ref=780b9dd44006c2f021dc1e2eb2509e0fa6005a6f", "patch": "@@ -0,0 +1,34 @@\n+// { dg-do compile }\n+\n+extern int j;\n+\n+void\n+f (int i)\n+{\n+  switch (i) // { dg-warning \"statement will never be executed\" }\n+    {\n+      try\n+      {\n+      }\n+      catch (...)\n+      {\n+      }\n+    case 1:;\n+    }\n+}\n+\n+void\n+g (int i)\n+{\n+  switch (i)\n+    {\n+      try\n+      {\n+\tj = 42;  // { dg-warning \"statement will never be executed\" }\n+      }\n+      catch (...)\n+      {\n+      }\n+    case 1:;\n+    }\n+}"}]}