{"sha": "cf6186e9f26494264c27e6620f4b3860a079832a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2MTg2ZTlmMjY0OTQyNjRjMjdlNjYyMGY0YjM4NjBhMDc5ODMyYQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2015-02-09T23:47:11Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2015-02-09T23:47:11Z"}, "message": "re PR target/64761 (-freorder-blocks-and-partition causes some failures on SH)\n\nPR target/64761\nReplace MD_REDIRECT_BRANCH with TARGET_CAN_FOLLOW_JUMP.\n\n\nCo-Authored-By: Kaz Kojima <kkojima@gcc.gnu.org>\n\nFrom-SVN: r220552", "tree": {"sha": "12c9efeacbf54ac783c84314bb89562f554f379c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12c9efeacbf54ac783c84314bb89562f554f379c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf6186e9f26494264c27e6620f4b3860a079832a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6186e9f26494264c27e6620f4b3860a079832a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6186e9f26494264c27e6620f4b3860a079832a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6186e9f26494264c27e6620f4b3860a079832a/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d51151b2f4284ee26ceca0944a34b7763335eee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51151b2f4284ee26ceca0944a34b7763335eee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51151b2f4284ee26ceca0944a34b7763335eee4"}], "stats": {"total": 50, "additions": 19, "deletions": 31}, "files": [{"sha": "a1916347c4e184513da1efac9d8d09dcfb73e88c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -1,3 +1,16 @@\n+2015-02-09  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\t    Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/64761\n+\t* config/sh/sh-protos.h (sh_can_redirect_branch): Don't declare.\n+\t* config/sh/sh.c (TARGET_CAN_FOLLOW_JUMP): Redefine.\n+\t(sh_can_redirect_branch): Rename to ...\n+\t(sh_can_follow_jump): ... this.  Constify argument types.\n+\t* config/sh/sh.h (MD_CAN_REDIRECT_BRANCH): Don't define.\n+\t* doc/tm.texi.in (MD_CAN_REDIRECT_BRANCH): Remove documentation.\n+\t* reorg.c (steal_delay_list_from_target): Use targetm.can_follow_jump.\n+\t* doc/tm.texi: Regenerate.\n+\n 2015-02-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/64981"}, {"sha": "3f72b072491e3b77a65d171e55e1a64df6effdba", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -148,7 +148,6 @@ extern enum tls_model tls_symbolic_operand (rtx, machine_mode);\n extern bool system_reg_operand (rtx, machine_mode);\n extern bool reg_unused_after (rtx, rtx_insn *);\n extern int sh_insn_length_adjustment (rtx_insn *);\n-extern bool sh_can_redirect_branch (rtx_insn *, rtx_insn *);\n extern void sh_expand_unop_v2sf (enum rtx_code, rtx, rtx);\n extern void sh_expand_binop_v2sf (enum rtx_code, rtx, rtx, rtx);\n extern bool sh_expand_t_scc (rtx *);"}, {"sha": "f8434d1fbcc0e614acfad5dc2c97d9f86910c176", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -277,6 +277,7 @@ static int sh_variable_issue (FILE *, int, rtx_insn *, int);\n static bool sh_function_ok_for_sibcall (tree, tree);\n \n static bool sh_cannot_modify_jumps_p (void);\n+static bool sh_can_follow_jump (const rtx_insn *, const rtx_insn *);\n static reg_class_t sh_target_reg_class (void);\n static bool sh_optimize_target_register_callee_saved (bool);\n static bool sh_ms_bitfield_layout_p (const_tree);\n@@ -512,6 +513,8 @@ static const struct attribute_spec sh_attribute_table[] =\n \n #undef TARGET_CANNOT_MODIFY_JUMPS_P\n #define TARGET_CANNOT_MODIFY_JUMPS_P sh_cannot_modify_jumps_p\n+#undef TARGET_CAN_FOLLOW_JUMP\n+#define TARGET_CAN_FOLLOW_JUMP sh_can_follow_jump\n #undef TARGET_BRANCH_TARGET_REGISTER_CLASS\n #define TARGET_BRANCH_TARGET_REGISTER_CLASS sh_target_reg_class\n #undef TARGET_BRANCH_TARGET_REGISTER_CALLEE_SAVED\n@@ -10822,8 +10825,8 @@ mark_constant_pool_use (rtx x)\n /* Return true if it's possible to redirect BRANCH1 to the destination\n    of an unconditional jump BRANCH2.  We only want to do this if the\n    resulting branch will have a short displacement.  */\n-bool\n-sh_can_redirect_branch (rtx_insn *branch1, rtx_insn *branch2)\n+static bool\n+sh_can_follow_jump (const rtx_insn *branch1, const rtx_insn *branch2)\n {\n   if (flag_expensive_optimizations && simplejump_p (branch2))\n     {"}, {"sha": "a9b7fa02ef30776da37fd57c8aeab47b8514346f", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -2245,9 +2245,6 @@ extern int current_function_interrupt;\n #define EPILOGUE_USES(REGNO) ((TARGET_SH2E || TARGET_SH4) \\\n \t\t\t      && (REGNO) == FPSCR_REG)\n \n-#define MD_CAN_REDIRECT_BRANCH(INSN, SEQ) \\\n-  sh_can_redirect_branch ((INSN), (SEQ))\n-\n #define DWARF_FRAME_RETURN_COLUMN \\\n   (TARGET_SH5 ? DWARF_FRAME_REGNUM (PR_MEDIA_REG) : DWARF_FRAME_REGNUM (PR_REG))\n "}, {"sha": "048a28a1378fea15d3ee2fa8d386dfaeda19b165", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -11107,17 +11107,6 @@ loops containing function calls or branch on table instructions.\n Take an instruction in @var{insn} and return @code{false} if the instruction is not appropriate as a combination of two or more instructions.  The default is to accept all instructions.\n @end deftypefn\n \n-@defmac MD_CAN_REDIRECT_BRANCH (@var{branch1}, @var{branch2})\n-\n-Take a branch insn in @var{branch1} and another in @var{branch2}.\n-Return true if redirecting @var{branch1} to the destination of\n-@var{branch2} is possible.\n-\n-On some targets, branches may have a limited range.  Optimizing the\n-filling of delay slots can result in branches being redirected, and this\n-may in turn cause a branch offset to overflow.\n-@end defmac\n-\n @deftypefn {Target Hook} bool TARGET_CAN_FOLLOW_JUMP (const rtx_insn *@var{follower}, const rtx_insn *@var{followee})\n FOLLOWER and FOLLOWEE are JUMP_INSN instructions;  return true if FOLLOWER may be modified to follow FOLLOWEE;  false, if it can't.  For example, on some targets, certain kinds of branches can't be made to  follow through a hot/cold partitioning.\n @end deftypefn"}, {"sha": "edad99c6816a376c01e7041596a913bf640ae373", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -7982,17 +7982,6 @@ to by @var{ce_info}.\n \n @hook TARGET_LEGITIMATE_COMBINED_INSN\n \n-@defmac MD_CAN_REDIRECT_BRANCH (@var{branch1}, @var{branch2})\n-\n-Take a branch insn in @var{branch1} and another in @var{branch2}.\n-Return true if redirecting @var{branch1} to the destination of\n-@var{branch2} is possible.\n-\n-On some targets, branches may have a limited range.  Optimizing the\n-filling of delay slots can result in branches being redirected, and this\n-may in turn cause a branch offset to overflow.\n-@end defmac\n-\n @hook TARGET_CAN_FOLLOW_JUMP\n \n @hook TARGET_COMMUTATIVE_P"}, {"sha": "238791044c46acf23b0b0ad7630f4993f404f73e", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6186e9f26494264c27e6620f4b3860a079832a/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=cf6186e9f26494264c27e6620f4b3860a079832a", "patch": "@@ -1156,13 +1156,11 @@ steal_delay_list_from_target (rtx_insn *insn, rtx condition, rtx_sequence *seq,\n       || ! single_set (seq->insn (0)))\n     return delay_list;\n \n-#ifdef MD_CAN_REDIRECT_BRANCH\n   /* On some targets, branches with delay slots can have a limited\n      displacement.  Give the back end a chance to tell us we can't do\n      this.  */\n-  if (! MD_CAN_REDIRECT_BRANCH (insn, seq->insn (0)))\n+  if (! targetm.can_follow_jump (insn, seq->insn (0)))\n     return delay_list;\n-#endif\n \n   redundant = XALLOCAVEC (bool, XVECLEN (seq, 0));\n   for (i = 1; i < seq->len (); i++)"}]}