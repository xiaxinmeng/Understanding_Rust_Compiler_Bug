{"sha": "2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUyYzlkYTAxMjIyN2JhMTJjZTg5YjZhNjUxNzllNmM4MzBlN2U0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-02T09:35:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-02T09:35:12Z"}, "message": "tree-core.h (enum tree_index): Add TI_CHREC_DONT_KNOW and TI_CHREC_KNOWN.\n\n2019-07-02  Richard Biener  <rguenther@suse.de>\n\n\t* tree-core.h (enum tree_index): Add TI_CHREC_DONT_KNOW and\n\tTI_CHREC_KNOWN.\n\t* tree.h (chrec_not_analyzed_yet, chrec_dont_know, chrec_known):\n\tDefine here.\n\t* tree.c (build_common_tree_nodes): Initialize them.\n\t* tree-chrec.h (chrec_not_analyzed_yet, chrec_dont_know, chrec_known):\n\tMake declarations comments.\n\t* tree-scalar-evolution.c (chrec_not_analyzed_yet, chrec_dont_know,\n\tchrec_known): Remove definitions.\n\t(initialize_scalar_evolutions_analyzer): Remove.\n\t(scev_initialize): Do not call initialize_scalar_evolutions_analyzer.\n\t* tree-streamer.c (preload_common_nodes): Do not preload\n\tTI_CHREC_DONT_KNOW or TI_CHREC_KNOWN.\n\nFrom-SVN: r272928", "tree": {"sha": "354cc318aa46f5ae68a4092269813df45e39c1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/354cc318aa46f5ae68a4092269813df45e39c1a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30ca9fbe9012fb455d55bc8f96d4438b5b271e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ca9fbe9012fb455d55bc8f96d4438b5b271e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ca9fbe9012fb455d55bc8f96d4438b5b271e59"}], "stats": {"total": 78, "additions": 40, "deletions": 38}, "files": [{"sha": "a19368c348b6628fa129d289218b4b7ef8ae2dd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -1,3 +1,19 @@\n+2019-07-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-core.h (enum tree_index): Add TI_CHREC_DONT_KNOW and\n+\tTI_CHREC_KNOWN.\n+\t* tree.h (chrec_not_analyzed_yet, chrec_dont_know, chrec_known):\n+\tDefine here.\n+\t* tree.c (build_common_tree_nodes): Initialize them.\n+\t* tree-chrec.h (chrec_not_analyzed_yet, chrec_dont_know, chrec_known):\n+\tMake declarations comments.\n+\t* tree-scalar-evolution.c (chrec_not_analyzed_yet, chrec_dont_know,\n+\tchrec_known): Remove definitions.\n+\t(initialize_scalar_evolutions_analyzer): Remove.\n+\t(scev_initialize): Do not call initialize_scalar_evolutions_analyzer.\n+\t* tree-streamer.c (preload_common_nodes): Do not preload\n+\tTI_CHREC_DONT_KNOW or TI_CHREC_KNOWN.\n+\n 2019-07-02  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-alias.c (aliasing_component_refs_p): Remove forgotten"}, {"sha": "3b5c090ef93a5ba963ee39c1ae3e1df0db41dac1", "filename": "gcc/tree-chrec.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-chrec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-chrec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.h?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -23,11 +23,14 @@ along with GCC; see the file COPYING3.  If not see\n \n /* The following trees are unique elements.  Thus the comparison of another\n    element to these elements should be done on the pointer to these trees,\n-   and not on their value.  */\n+   and not on their value.\n \n-extern tree chrec_not_analyzed_yet;\n-extern GTY(()) tree chrec_dont_know;\n-extern GTY(()) tree chrec_known;\n+   extern tree chrec_not_analyzed_yet;\n+   extern tree chrec_dont_know;\n+   extern tree chrec_known;\n+\n+   chrec_not_analyzed_yet is NULL_TREE and the others are defined\n+   in global_trees[].  */\n \n /* After having added an automatically generated element, please\n    include it in the following function.  */"}, {"sha": "8ac1978b93af002c81f751874f3414f5ba985d4b", "filename": "gcc/tree-core.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -758,6 +758,9 @@ enum tree_index {\n   TI_CURRENT_TARGET_PRAGMA,\n   TI_CURRENT_OPTIMIZE_PRAGMA,\n \n+  TI_CHREC_DONT_KNOW,\n+  TI_CHREC_KNOWN,\n+\n   TI_MAX\n };\n "}, {"sha": "81f70f193d9938b58b4dc2e82f4a14f4aca0ae13", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -304,21 +304,6 @@ struct GTY((for_user)) scev_info_str {\n static unsigned nb_set_scev = 0;\n static unsigned nb_get_scev = 0;\n \n-/* The following trees are unique elements.  Thus the comparison of\n-   another element to these elements should be done on the pointer to\n-   these trees, and not on their value.  */\n-\n-/* The SSA_NAMEs that are not yet analyzed are qualified with NULL_TREE.  */\n-tree chrec_not_analyzed_yet;\n-\n-/* Reserved to the cases where the analyzer has detected an\n-   undecidable property at compile time.  */\n-tree chrec_dont_know;\n-\n-/* When the analyzer has detected that a property will never\n-   happen, then it qualifies it with chrec_known.  */\n-tree chrec_known;\n-\n struct scev_info_hasher : ggc_ptr_hash<scev_info_str>\n {\n   static hashval_t hash (scev_info_str *i);\n@@ -3056,23 +3041,6 @@ gather_stats_on_scev_database (void)\n }\n \n \f\n-\n-/* Initializer.  */\n-\n-static void\n-initialize_scalar_evolutions_analyzer (void)\n-{\n-  /* The elements below are unique.  */\n-  if (chrec_dont_know == NULL_TREE)\n-    {\n-      chrec_not_analyzed_yet = NULL_TREE;\n-      chrec_dont_know = make_node (SCEV_NOT_KNOWN);\n-      chrec_known = make_node (SCEV_KNOWN);\n-      TREE_TYPE (chrec_dont_know) = void_type_node;\n-      TREE_TYPE (chrec_known) = void_type_node;\n-    }\n-}\n-\n /* Initialize the analysis of scalar evolutions for LOOPS.  */\n \n void\n@@ -3084,8 +3052,6 @@ scev_initialize (void)\n \n   scalar_evolution_info = hash_table<scev_info_hasher>::create_ggc (100);\n \n-  initialize_scalar_evolutions_analyzer ();\n-\n   FOR_EACH_LOOP (loop, 0)\n     {\n       loop->nb_iterations = NULL_TREE;"}, {"sha": "fb2888de66537e61928aa66d0d4d92f87e78bb25", "filename": "gcc/tree-streamer.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer.c?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -377,6 +377,9 @@ preload_common_nodes (struct streamer_tree_cache_d *cache)\n \t&& i != TI_TARGET_OPTION_CURRENT\n \t&& i != TI_CURRENT_TARGET_PRAGMA\n \t&& i != TI_CURRENT_OPTIMIZE_PRAGMA\n+\t/* SCEV state shouldn't reach the IL.  */\n+\t&& i != TI_CHREC_DONT_KNOW\n+\t&& i != TI_CHREC_KNOWN\n \t/* Skip va_list* related nodes if offloading.  For native LTO\n \t   we want them to be merged for the stdarg pass, for offloading\n \t   they might not be identical between host and offloading target.  */"}, {"sha": "f2c779f1fe5b08ad5305833a91b29a9c0c01dc26", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -10641,6 +10641,12 @@ build_common_tree_nodes (bool signed_char)\n \n     va_list_type_node = t;\n   }\n+\n+  /* SCEV analyzer global shared trees.  */\n+  chrec_dont_know = make_node (SCEV_NOT_KNOWN);\n+  TREE_TYPE (chrec_dont_know) = void_type_node;\n+  chrec_known = make_node (SCEV_KNOWN);\n+  TREE_TYPE (chrec_known) = void_type_node;\n }\n \n /* Modify DECL for given flags."}, {"sha": "ed59a5d06bf57de3283c9280420aa11039b7d89d", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2c9da012227ba12ce89b6a65179e6c830e7e4b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=2e2c9da012227ba12ce89b6a65179e6c830e7e4b", "patch": "@@ -4083,6 +4083,11 @@ tree_strip_any_location_wrapper (tree exp)\n #define current_target_pragma\t\tglobal_trees[TI_CURRENT_TARGET_PRAGMA]\n #define current_optimize_pragma\t\tglobal_trees[TI_CURRENT_OPTIMIZE_PRAGMA]\n \n+/* SCEV analyzer global shared trees.  */\n+#define chrec_not_analyzed_yet\t\tNULL_TREE\n+#define chrec_dont_know\t\t\tglobal_trees[TI_CHREC_DONT_KNOW]\n+#define chrec_known\t\t\tglobal_trees[TI_CHREC_KNOWN]\n+\n #define char_type_node\t\t\tinteger_types[itk_char]\n #define signed_char_type_node\t\tinteger_types[itk_signed_char]\n #define unsigned_char_type_node\t\tinteger_types[itk_unsigned_char]"}]}