{"sha": "1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMzMjg5Y2Q2MTVjZTRhMzhjNGE1NGQ2OWViZmE1ZWJjNDc2ODVjYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-04-30T17:25:55Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-04-30T17:25:55Z"}, "message": "* varasm.c (handle_cache_entry): Fix logic.\n\nFrom-SVN: r222641", "tree": {"sha": "b6f4b29edee73742a200cbeb726bd7edb49f9e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f4b29edee73742a200cbeb726bd7edb49f9e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66286a53d5f325b1b396d0d590dfa1c6aa51cbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66286a53d5f325b1b396d0d590dfa1c6aa51cbca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66286a53d5f325b1b396d0d590dfa1c6aa51cbca"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "9f5cab0db22d05f2cc81a87e67883dd8f8253b0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca", "patch": "@@ -1,3 +1,7 @@\n+2015-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\t* varasm.c (handle_cache_entry): Fix logic.\n+\n 2015-04-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md (*extr<mode>5_insn_alt): New pattern."}, {"sha": "c2b35fd9c38f2690dc53e315f0afd5c0014380db", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=1c3289cd615ce4a38c4a54d69ebfa5ebc47685ca", "patch": "@@ -5793,21 +5793,20 @@ struct tm_clone_hasher : ggc_cache_hasher<tree_map *>\n   static hashval_t hash (tree_map *m) { return tree_map_hash (m); }\n   static bool equal (tree_map *a, tree_map *b) { return tree_map_eq (a, b); }\n \n-  static void handle_cache_entry (tree_map *&e)\n+  static void\n+  handle_cache_entry (tree_map *&e)\n   {\n-    if (e != HTAB_EMPTY_ENTRY || e != HTAB_DELETED_ENTRY)\n-      {\n-\textern void gt_ggc_mx (tree_map *&);\n-\tif (ggc_marked_p (e->base.from))\n-\t  gt_ggc_mx (e);\n-\telse\n-\t  e = static_cast<tree_map *> (HTAB_DELETED_ENTRY);\n-      }\n+    extern void gt_ggc_mx (tree_map *&);\n+    if (e == HTAB_EMPTY_ENTRY || e == HTAB_DELETED_ENTRY)\n+      return;\n+    else if (ggc_marked_p (e->base.from))\n+      gt_ggc_mx (e);\n+    else\n+      e = static_cast<tree_map *> (HTAB_DELETED_ENTRY);\n   }\n };\n \n-static GTY((cache))\n-     hash_table<tm_clone_hasher> *tm_clone_hash;\n+static GTY((cache)) hash_table<tm_clone_hasher> *tm_clone_hash;\n \n void\n record_tm_clone_pair (tree o, tree n)"}]}