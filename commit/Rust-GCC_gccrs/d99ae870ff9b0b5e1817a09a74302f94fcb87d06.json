{"sha": "d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5YWU4NzBmZjliMGI1ZTE4MTdhMDlhNzQzMDJmOTRmY2I4N2QwNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-12-11T22:17:09Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-12-11T22:17:09Z"}, "message": "re PR libstdc++/28125 (Cannot build cross compiler for Solaris: configure: error: Link tests are not allowed after GCC_NO_EXECUTABLES)\n\n2006-12-11  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/28125\n\t* acinclude.m4 (GLIBCXX_CHECK_ICONV_SUPPORT): Remove link test, ie\n\tAC_CHECK_LIB for libiconv. Instead, use bits of AM_ICONV.\n        * configure: Regenerate.\n        * scripts/testsuite_flags.in (cxxldflags): Add LIBICONV bits.\n\nFrom-SVN: r119749", "tree": {"sha": "3f80b2c7f4676d9f738aafa42271968bb6f5748d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f80b2c7f4676d9f738aafa42271968bb6f5748d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/comments", "author": null, "committer": null, "parents": [{"sha": "d45388291382c29d4c7c7ce8a9b130499ffedd9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d45388291382c29d4c7c7ce8a9b130499ffedd9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d45388291382c29d4c7c7ce8a9b130499ffedd9c"}], "stats": {"total": 1344, "additions": 365, "deletions": 979}, "files": [{"sha": "2da37fc68dc169d2c9bd375ba8f0830caed00391", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "patch": "@@ -1,3 +1,11 @@\n+2006-12-11  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/28125\n+\t* acinclude.m4 (GLIBCXX_CHECK_ICONV_SUPPORT): Remove link test, ie\n+\tAC_CHECK_LIB for libiconv. Instead, use bits of AM_ICONV.\n+        * configure: Regenerate.\n+        * scripts/testsuite_flags.in (cxxldflags): Add LIBICONV bits.\n+ \n 2006-12-11  Richard Guenther  <rguenther@suse.de>\n \t    Paolo Carlini  <pcarlini@suse.de>\n "}, {"sha": "660447b7d71a32470e1dbd7eff54371bd20d3e3d", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "patch": "@@ -324,20 +324,30 @@ AC_DEFUN([GLIBCXX_CHECK_ICONV_SUPPORT], [\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+    AC_ARG_WITH([libiconv-prefix],\n+[  --with-libiconv-prefix=DIR  search for libiconv in DIR/include and DIR/lib], [  for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+   ])\n+   if test x\"$LIBICONV\" != x; then\n+     AC_MSG_NOTICE([--with-libiconv-prefix is $LIBICONV])\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     AC_CHECK_HEADER(iconv.h, ac_has_iconv_h=yes, ac_has_iconv_h=no)\n     AC_CHECK_HEADER(langinfo.h, ac_has_langinfo_h=yes, ac_has_langinfo_h=no)\n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    AC_CHECK_LIB(iconv, iconv, LIBICONV=\"-liconv\")\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n-    AC_SUBST(LIBICONV)\n-\n     AC_CHECK_FUNCS([iconv_open iconv_close iconv nl_langinfo],\n     [ac_XPG2funcs=yes], [ac_XPG2funcs=no])\n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -347,6 +357,7 @@ AC_DEFUN([GLIBCXX_CHECK_ICONV_SUPPORT], [\n       AC_DEFINE([_GLIBCXX_USE_ICONV],1,\n \t        [Define if iconv and related functions exist and are usable.])\n       enable_iconv=yes\n+      AC_SUBST(LIBICONV)\n     fi\n   fi\n   AC_MSG_CHECKING([for enabled iconv specializations])"}, {"sha": "2c886752e0eed4b50083cdac5923867b6986e1bb", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 340, "deletions": 973, "changes": 1313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "patch": "@@ -904,6 +904,7 @@ Optional Packages:\n   --with-newlib           assume newlib as a system C library\n   --with-gnu-ld           assume the C compiler uses GNU ld default=no\n   --with-pic              try to use only PIC/non-PIC objects default=use both\n+  --with-libiconv-prefix=DIR  search for libiconv in DIR/include and DIR/lib\n   --with-gxx-include-dir=DIR\n                           installation directory for include files\n \n@@ -4739,7 +4740,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4742 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4743 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5359,7 +5360,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 5362 \"configure\"\n+#line 5363 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -8015,7 +8016,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 8018 \"configure\"\n+#line 8019 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -28507,6 +28508,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -28798,88 +28819,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -28988,7 +28933,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -29001,6 +28945,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -31326,9 +31271,39 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-                    save_LDFLAGS=\"$LDFLAGS\"\n+                      save_LDFLAGS=\"$LDFLAGS\"\n       LDFLAGS=\"-static $LDFLAGS\"\n-      if test \"$cross_compiling\" = yes; then\n+      if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+int main() { return 0; }\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  if test \"$cross_compiling\" = yes; then\n   { { echo \"$as_me:$LINENO: error: cannot run test program while cross compiling\n See \\`config.log' for more details.\" >&5\n echo \"$as_me: error: cannot run test program while cross compiling\n@@ -31360,6 +31335,14 @@ have_tls=no\n fi\n rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n fi\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+have_tls=yes\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n       LDFLAGS=\"$save_LDFLAGS\"\n else\n   echo \"$as_me: program exited with status $ac_status\" >&5\n@@ -52515,6 +52498,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -52806,88 +52809,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -52996,7 +52923,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -53009,6 +52935,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -74385,6 +74312,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -74676,88 +74623,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -74866,7 +74737,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -74879,6 +74749,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -76269,6 +76140,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -76560,88 +76451,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -76750,7 +76565,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -76763,6 +76577,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -77792,6 +77607,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -78083,88 +77918,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -78273,7 +78032,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -78286,6 +78044,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -98759,6 +98518,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -99050,88 +98829,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -99240,7 +98943,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -99253,6 +98955,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -101086,6 +100789,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -101377,15 +101100,21 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n+    ac_save_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $LIBICONV\"\n+\n+\n+\n+\n+for ac_func in iconv_open iconv_close iconv nl_langinfo\n+do\n+as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n+echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n+echo $ECHO_N \"checking for $ac_func... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_var+set}\\\" = set\"; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n+  if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n    { (exit 1); exit 1; }; }\n@@ -101396,129 +101125,47 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n+/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.\n+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n+#define $ac_func innocuous_$ac_func\n+\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func (); below.\n+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n+    <limits.h> exists even on freestanding compilers.  */\n+\n+#ifdef __STDC__\n+# include <limits.h>\n+#else\n+# include <assert.h>\n+#endif\n+\n+#undef $ac_func\n \n /* Override any gcc2 internal prototype to avoid an error.  */\n #ifdef __cplusplus\n extern \"C\"\n+{\n #endif\n /* We use char because int might match the return type of a gcc2\n    builtin and then its argument prototype would still apply.  */\n-char iconv ();\n+char $ac_func ();\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+char (*f) () = $ac_func;\n+#endif\n+#ifdef __cplusplus\n+}\n+#endif\n+\n int\n main ()\n {\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n-    ac_save_LIBS=\"$LIBS\"\n-    LIBS=\"$LIBS $LIBICONV\"\n-\n-\n-\n-\n-\n-\n-for ac_func in iconv_open iconv_close iconv nl_langinfo\n-do\n-as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n-echo $ECHO_N \"checking for $ac_func... $ECHO_C\" >&6\n-if eval \"test \\\"\\${$as_ac_var+set}\\\" = set\"; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.\n-   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n-#define $ac_func innocuous_$ac_func\n-\n-/* System header to define __stub macros and hopefully few prototypes,\n-    which can conflict with char $ac_func (); below.\n-    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n-    <limits.h> exists even on freestanding compilers.  */\n-\n-#ifdef __STDC__\n-# include <limits.h>\n-#else\n-# include <assert.h>\n-#endif\n-\n-#undef $ac_func\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-{\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char $ac_func ();\n-/* The GNU C library defines this for functions which it implements\n-    to always fail with ENOSYS.  Some functions are actually named\n-    something starting with __ and the normal name is an alias.  */\n-#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n-choke me\n-#else\n-char (*f) () = $ac_func;\n-#endif\n-#ifdef __cplusplus\n-}\n-#endif\n-\n-int\n-main ()\n-{\n-return f != $ac_func;\n+return f != $ac_func;\n   ;\n   return 0;\n }\n@@ -101567,7 +101214,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -101580,6 +101226,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -102438,6 +102085,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -102729,88 +102396,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -102919,7 +102510,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -102932,6 +102522,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -103839,6 +103430,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -104130,88 +103741,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -104320,7 +103855,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -104333,6 +103867,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -105632,6 +105167,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -105923,88 +105478,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -106113,7 +105592,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -106126,6 +105604,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -106251,6 +105730,26 @@ _ACEOF\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -106542,88 +106041,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -106732,7 +106155,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -106745,6 +106167,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5\n@@ -107746,6 +107169,26 @@ done\n   # Only continue checking if the ISO C99 headers exist and support is on.\n   if test x\"$enable_wchar_t\" = xyes; then\n \n+    # From Bruno Haible's AM_ICONV, but without link tests.\n+    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n+    # Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+    # those with the standalone portable GNU libiconv installed).\n+\n+# Check whether --with-libiconv-prefix or --without-libiconv-prefix was given.\n+if test \"${with_libiconv_prefix+set}\" = set; then\n+  withval=\"$with_libiconv_prefix\"\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LIBICONV=\"$LIBICONV -L$dir/lib\"; fi\n+    done\n+    LIBICONV=\"$LIBICONV -liconv\"\n+\n+fi;\n+   if test x\"$LIBICONV\" != x; then\n+     { echo \"$as_me:$LINENO: --with-libiconv-prefix is $LIBICONV\" >&5\n+echo \"$as_me: --with-libiconv-prefix is $LIBICONV\" >&6;}\n+   fi\n+\n     # Use iconv for wchar_t to char conversions. As such, check for\n     # X/Open Portability Guide, version 2 features (XPG2).\n     if test \"${ac_cv_header_iconv_h+set}\" = set; then\n@@ -108037,88 +107480,12 @@ fi\n \n \n \n-    # Check for existence of libiconv.a providing XPG2 wchar_t support.\n-    echo \"$as_me:$LINENO: checking for iconv in -liconv\" >&5\n-echo $ECHO_N \"checking for iconv in -liconv... $ECHO_C\" >&6\n-if test \"${ac_cv_lib_iconv_iconv+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-liconv  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char iconv ();\n-int\n-main ()\n-{\n-iconv ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_lib_iconv_iconv=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_lib_iconv_iconv=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_lib_iconv_iconv\" >&5\n-echo \"${ECHO_T}$ac_cv_lib_iconv_iconv\" >&6\n-if test $ac_cv_lib_iconv_iconv = yes; then\n-  LIBICONV=\"-liconv\"\n-fi\n-\n     ac_save_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $LIBICONV\"\n \n \n \n \n-\n-\n for ac_func in iconv_open iconv_close iconv nl_langinfo\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n@@ -108227,7 +107594,6 @@ else\n fi\n done\n \n-\n     LIBS=\"$ac_save_LIBS\"\n \n     if test x\"$ac_has_iconv_h\" = xyes &&\n@@ -108240,6 +107606,7 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n       enable_iconv=yes\n+\n     fi\n   fi\n   echo \"$as_me:$LINENO: checking for enabled iconv specializations\" >&5"}, {"sha": "13984fa4f3b387294475669733a62d2eb7eb24e7", "filename": "libstdc++-v3/scripts/testsuite_flags.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99ae870ff9b0b5e1817a09a74302f94fcb87d06/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in?ref=d99ae870ff9b0b5e1817a09a74302f94fcb87d06", "patch": "@@ -58,7 +58,7 @@ case ${query} in\n       echo ${PCHFLAGS}\n       ;;\n     --cxxldflags)\n-      SECTIONLDFLAGS=\"@SECTION_LDFLAGS@\"\n+      SECTIONLDFLAGS=\"@SECTION_LDFLAGS@ @LIBICONV@\"\n       echo ${SECTIONLDFLAGS}\n       ;;\n     *)"}]}