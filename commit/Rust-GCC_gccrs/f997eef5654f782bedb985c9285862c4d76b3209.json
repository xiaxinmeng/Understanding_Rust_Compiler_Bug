{"sha": "f997eef5654f782bedb985c9285862c4d76b3209", "node_id": "C_kwDOANBUbNoAKGY5OTdlZWY1NjU0Zjc4MmJlZGI5ODVjOTI4NTg2MmM0ZDc2YjMyMDk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-16T13:48:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-16T13:48:30Z"}, "message": "combine: Fix up -fcompare-debug issue in the combiner [PR104544]\n\nOn the following testcase on aarch64-linux, we behave differently\nwith -g and -g0.\n\nThe problem is that on:\n(insn 10011 10010 10012 2 (set (reg:CC 66 cc)\n        (compare:CC (reg:DI 105)\n            (const_int 0 [0]))) \"pr104544.c\":18:3 407 {cmpdi}\n     (expr_list:REG_DEAD (reg:DI 105)\n        (nil)))\n(insn 10012 10011 10013 2 (set (reg:SI 109)\n        (eq:SI (reg:CC 66 cc)\n            (const_int 0 [0]))) \"pr104544.c\":18:3 444 {aarch64_cstoresi}\n     (expr_list:REG_DEAD (reg:CC 66 cc)\n        (nil)))\n(insn 10013 10012 10016 2 (set (reg:DI 110)\n        (zero_extend:DI (reg:SI 109))) \"pr104544.c\":18:3 111 {*zero_extendsidi2_aarch64}\n     (expr_list:REG_DEAD (reg:SI 109)\n        (nil)))\n(insn 10016 10013 10017 2 (parallel [\n            (set (reg:CC 66 cc)\n                (compare:CC (const_int 0 [0])\n                    (reg:DI 110)))\n            (set (reg:DI 111)\n                (neg:DI (reg:DI 110)))\n        ]) \"pr104544.c\":18:3 281 {negdi_carryout}\n     (expr_list:REG_DEAD (reg:DI 110)\n        (nil)))\n...\n(debug_insn 6 5 7 2 (var_location:SI y (debug_expr:SI D#5)) \"pr104544.c\":18:3 -1\n     (nil))\n(debug_insn 7 6 10033 2 (debug_marker) \"pr104544.c\":11:3 -1\n     (nil))\n(insn 10033 7 10034 2 (set (reg:DI 117 [ _14 ])\n        (ior:DI (reg:DI 111)\n            (reg:DI 112))) \"pr104544.c\":11:6 496 {iordi3}\n     (expr_list:REG_DEAD (reg:DI 112)\n        (expr_list:REG_DEAD (reg:DI 111)\n            (nil))))\nwe successfully split 3 insns into two:\n\nTrying 10011, 10013 -> 10016:\n 10011: cc:CC=cmp(r105:DI,0)\n      REG_DEAD r105:DI\n 10013: r110:DI=cc:CC==0\n      REG_DEAD cc:CC\n 10016: {cc:CC=cmp(0,r110:DI);r111:DI=-r110:DI;}\n      REG_DEAD r110:DI\nFailed to match this instruction:\n(parallel [\n        (set (reg:CC 66 cc)\n            (compare:CC (reg:DI 105)\n                (const_int 0 [0])))\n        (set (reg:DI 111)\n            (neg:DI (eq:DI (reg:DI 105)\n                    (const_int 0 [0]))))\n    ])\nFailed to match this instruction:\n(parallel [\n        (set (reg:CC 66 cc)\n            (compare:CC (reg:DI 105)\n                (const_int 0 [0])))\n        (set (reg:DI 111)\n            (neg:DI (eq:DI (reg:DI 105)\n                    (const_int 0 [0]))))\n    ])\nSuccessfully matched this instruction:\n(set (reg:DI 111)\n    (neg:DI (eq:DI (reg:DI 105)\n            (const_int 0 [0]))))\nSuccessfully matched this instruction:\n(set (reg:CC 66 cc)\n    (compare:CC (reg:DI 105)\n        (const_int 0 [0])))\nSuccessfully matched this instruction:\n(set (reg:DI 112)\n    (neg:DI (eq:DI (reg:CC 66 cc)\n            (const_int 0 [0]))))\nallowing combination of insns 10011, 10013 and 10016\noriginal costs 4 + 4 + 4 = 16\nreplacement costs 4 + 4 = 12\ndeferring deletion of insn with uid = 10011.\n\nbut the code that searches forward for insns to update their log\nlinks (before the change there is a link from insn 10033 to insn 10016\nfor pseudo 111) only finds insn 10033 and updates the log link if\n-g isn't enabled, otherwise it stops earlier because there are debug insns\nin between.  So, with -g LOG_LINKS of 10033 isn't updated, points eventually\nto NOTE_INSN_DELETED and so we do not attempt to combine 10033 with other\ninsns, while with -g0 we do.\n\nThe following patch fixes that by instead ignoring debug insns during the\nsearching.  We can still check BLOCK_FOR_INSN (insn) on those, because\nif we notice DEBUG_INSN in a following basic block, necessarily there won't\nbe any further normal insns in the current block after it.\n\n2022-02-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/104544\n\t* combine.cc (try_combine): When looking for insn whose links\n\tshould be updated from i3 to i2, don't stop on debug insns, instead\n\tskip over them.\n\n\t* gcc.dg/pr104544.c: New test.", "tree": {"sha": "61e59f12b2e3bbd0e82a872776b5c47bcc41fba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61e59f12b2e3bbd0e82a872776b5c47bcc41fba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f997eef5654f782bedb985c9285862c4d76b3209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f997eef5654f782bedb985c9285862c4d76b3209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f997eef5654f782bedb985c9285862c4d76b3209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f997eef5654f782bedb985c9285862c4d76b3209/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f31924f72a99eaa9d4d1f7e0579152d8ecc0981e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31924f72a99eaa9d4d1f7e0579152d8ecc0981e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31924f72a99eaa9d4d1f7e0579152d8ecc0981e"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "8f06ee0e54f7f8734da6504fc3d025b1eb122095", "filename": "gcc/combine.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f997eef5654f782bedb985c9285862c4d76b3209/gcc%2Fcombine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f997eef5654f782bedb985c9285862c4d76b3209/gcc%2Fcombine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.cc?ref=f997eef5654f782bedb985c9285862c4d76b3209", "patch": "@@ -4223,10 +4223,12 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n \t  for (rtx_insn *insn = NEXT_INSN (i3);\n \t       !done\n \t       && insn\n-\t       && NONDEBUG_INSN_P (insn)\n+\t       && INSN_P (insn)\n \t       && BLOCK_FOR_INSN (insn) == this_basic_block;\n \t       insn = NEXT_INSN (insn))\n \t    {\n+\t      if (DEBUG_INSN_P (insn))\n+\t\tcontinue;\n \t      struct insn_link *link;\n \t      FOR_EACH_LOG_LINK (link, insn)\n \t\tif (link->insn == i3 && link->regno == regno)"}, {"sha": "275b666923d5aa1820ca75a17ec9f31cc49a55c4", "filename": "gcc/testsuite/gcc.dg/pr104544.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f997eef5654f782bedb985c9285862c4d76b3209/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104544.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f997eef5654f782bedb985c9285862c4d76b3209/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104544.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104544.c?ref=f997eef5654f782bedb985c9285862c4d76b3209", "patch": "@@ -0,0 +1,19 @@\n+/* PR rtl-optimization/104544 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O2 -fcompare-debug\" } */\n+\n+int m, n;\n+__int128 q;\n+\n+void\n+bar (unsigned __int128 x, int y)\n+{\n+  if (x)\n+    q += y;\n+}\n+\n+void\n+foo (void)\n+{\n+  bar (!!q - 1, (m += m ? m : 1) < n);\n+}"}]}