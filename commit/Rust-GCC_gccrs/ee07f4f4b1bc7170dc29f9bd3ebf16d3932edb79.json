{"sha": "ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwN2Y0ZjRiMWJjNzE3MGRjMjlmOWJkM2ViZjE2ZDM5MzJlZGI3OQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-01-06T22:06:22Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-01-06T22:06:22Z"}, "message": "Makefile.in (LIBDEPS): Added gcc's errors.o\n\nFri Dec 24 00:25:29 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* Makefile.in (LIBDEPS): Added gcc's errors.o\n\t(../jcf-dump$(exeext):): Link with gcc's errors.o\n\t(../gcjh$(exeext):): Likewise.\n\t* expr.c (expand_java_NEW): Layout the entire target type instead of\n \tlaying out its methods only.\n\t(lookup_field): Layout the class after having loaded it.\n\t* java-tree.h (java_debug_context): Declared.\n\t* jcf-io.c (toplev.h): Included.\n\t(find_class): Removed assignment to jcf's outofsynch\n \tfield. Force source file to be read if newer than its matching\n \tclass file. Tweaked debug messages.\n\t* jcf-parse.c (jcf_out_of_synch): Deleted.\n\t(read_class): Call to jcf_out_of_synch removed.\n\t* jcf.h (typedef struct JCF): Field `outofsynch' deleted.\n\t(jcf_out_of_synch): Prototype deleted.\n\t* parse.h (struct parser_ctxt): `minus_seen', `java_error_flag',\n \t`deprecated' and `class_err': integer turned into bit fields.\n\tNew bit fields `saved_data_ctx' and `saved_data'. Fixed comments.\n\t* parse.y (package_list): New global.\n\t(package_declaration:): Record newly parsed package name.\n\t(extra_ctxp_pushed_p): Static global deleted.\n\t(java_parser_context_save_global): Create buffer context for the\n \tpurpose of saving globals, if necessary.\n\t(java_parser_context_restore_global): Pop context pushed for the\n \tpurpose of saving globals, if necessary.\n\t(java_debug_context_do): New prototype and function.\n\t(java_debug_context): Likewise.\n\t(do_resolve_class): Use already parsed package names to qualify\n \tand lookup class candidate.\n\t(java_pre_expand_clinit): Removed unnecessary local variable.\n\nFrom-SVN: r31261", "tree": {"sha": "d12da492ed43c4a347224bc8279988400a99514b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d12da492ed43c4a347224bc8279988400a99514b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/comments", "author": null, "committer": null, "parents": [{"sha": "fbb740dacd26c4a22265af0f2cead837429c7d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb740dacd26c4a22265af0f2cead837429c7d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbb740dacd26c4a22265af0f2cead837429c7d4e"}], "stats": {"total": 1232, "additions": 678, "deletions": 554}, "files": [{"sha": "c07c6945ee3c883a43dfdb948685285ba42c3f71", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -54,6 +54,39 @@\n \tfixes PR gcj/119.\n \t(process_file): Use `\\n\\' at end of each line in string.\n \n+Fri Dec 24 00:25:29 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* Makefile.in (LIBDEPS): Added gcc's errors.o\n+\t(../jcf-dump$(exeext):): Link with gcc's errors.o\n+\t(../gcjh$(exeext):): Likewise.\n+\t* expr.c (expand_java_NEW): Layout the entire target type instead of\n+ \tlaying out its methods only.\n+\t(lookup_field): Layout the class after having loaded it.\n+\t* java-tree.h (java_debug_context): Declared.\n+\t* jcf-io.c (toplev.h): Included.\n+\t(find_class): Removed assignment to jcf's outofsynch\n+ \tfield. Force source file to be read if newer than its matching\n+ \tclass file. Tweaked debug messages.\n+\t* jcf-parse.c (jcf_out_of_synch): Deleted.\n+\t(read_class): Call to jcf_out_of_synch removed.\n+\t* jcf.h (typedef struct JCF): Field `outofsynch' deleted.\n+\t(jcf_out_of_synch): Prototype deleted.\n+\t* parse.h (struct parser_ctxt): `minus_seen', `java_error_flag',\n+ \t`deprecated' and `class_err': integer turned into bit fields.\n+\tNew bit fields `saved_data_ctx' and `saved_data'. Fixed comments.\n+\t* parse.y (package_list): New global.\n+\t(package_declaration:): Record newly parsed package name.\n+\t(extra_ctxp_pushed_p): Static global deleted.\n+\t(java_parser_context_save_global): Create buffer context for the\n+ \tpurpose of saving globals, if necessary.\n+\t(java_parser_context_restore_global): Pop context pushed for the\n+ \tpurpose of saving globals, if necessary.\n+\t(java_debug_context_do): New prototype and function.\n+\t(java_debug_context): Likewise.\n+\t(do_resolve_class): Use already parsed package names to qualify\n+ \tand lookup class candidate. \n+\t(java_pre_expand_clinit): Removed unnecessary local variable.\t\n+\n Thu Dec 16 00:09:45 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* expr.c (expand_invoke): Layout the loaded class before"}, {"sha": "7b9238a22f60b505abb06cf90b02abfc856152b2", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -144,7 +144,7 @@ LIBIBERTY = ../../libiberty/libiberty.a\n # How to link with both our special library facilities\n # and the system's installed libraries.\n LIBS = $(LIBIBERTY) $(CLIB)\n-LIBDEPS = $(LIBIBERTY)\n+LIBDEPS = $(LIBIBERTY) ../errors.o\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n@@ -184,7 +184,7 @@ compiler: ../jc1$(exeext) ../jv-scan$(exeext)\n ../jcf-dump$(exeext): jcf-dump.o jcf-io.o jcf-depend.o jcf-path.o \\\n \t\tzextract.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ jcf-dump.o jcf-io.o \\\n-\t  jcf-depend.o jcf-path.o zextract.o $(LIBS)\n+\t  jcf-depend.o jcf-path.o zextract.o $(LIBS) ../errors.o\n \n # Dependencies here must be kept in sync with dependencies in Make-lang.in.\n ../jvgenmain$(exeext):  jvgenmain.o mangle.o $(LIBDEPS)\n@@ -193,7 +193,7 @@ compiler: ../jc1$(exeext) ../jv-scan$(exeext)\n ../gcjh$(exeext): gjavah.o jcf-io.o jcf-depend.o jcf-path.o \\\n \t\tzextract.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ gjavah.o jcf-io.o \\\n-\t  jcf-depend.o jcf-path.o zextract.o $(LIBS)\n+\t  jcf-depend.o jcf-path.o zextract.o $(LIBS) ../errors.o\n \n Makefile: $(srcdir)/Makefile.in $(srcdir)/../configure\n \tcd ..; $(SHELL) config.status"}, {"sha": "411cc75130934043937cfeaa9f975ba6ad9e39ff", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -1010,7 +1010,7 @@ expand_java_NEW (type)\n {\n   if (! CLASS_LOADED_P (type))\n     load_class (type, 1);\n-  layout_class_methods (type);\n+  safe_layout_class (type);\n   push_value (build (CALL_EXPR, promote_type (type),\n \t\t     build_address_of (alloc_object_node),\n \t\t     tree_cons (NULL_TREE, build_class_ref (type),\n@@ -1230,6 +1230,7 @@ lookup_field (typep, name)\n   if (CLASS_P (*typep) && !CLASS_LOADED_P (*typep))\n     {\n       load_class (*typep, 1);\n+      safe_layout_class (*typep);\n       if (!TYPE_SIZE (*typep) || TREE_CODE (TYPE_SIZE (*typep)) == ERROR_MARK)\n \treturn error_mark_node;\n     }"}, {"sha": "03d3023a5b69618e63197a6d863df1b08c03c500", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -637,6 +637,7 @@ extern char* open_class PROTO ((char *, struct JCF *, FILE *, const char *));\n extern char* open_class PROTO ((char *, struct JCF *, int, const char *));\n # endif /* JCF_USE_STDIO */\n #endif\n+void java_debug_context PROTO ((void));\n \n /* We use ARGS_SIZE_RTX to indicate that gcc/expr.h has been included\n    to declare `enum expand_modifier'. */"}, {"sha": "0f650237b7883ba0eb6ca6b03afe2f97c0f173e6", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -27,6 +27,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n #include \"jcf.h\"\n #include \"tree.h\"\n+#include \"toplev.h\"\n #include \"java-tree.h\"\n \n /* DOS brain-damage */\n@@ -286,7 +287,7 @@ DEFUN(find_class, (classname, classname_length, jcf, source_ok),\n \n   java_buffer = (char *) alloca (buflen);\n \n-  jcf->java_source = jcf->outofsynch = 0;\n+  jcf->java_source = 0;\n \n   for (entry = jcf_path_start (); entry != NULL; entry = jcf_path_next (entry))\n     {\n@@ -352,8 +353,24 @@ DEFUN(find_class, (classname, classname_length, jcf, source_ok),\n \t}\n     }\n \n+  /* We preferably pick a class file if we have a chance. If the source\n+     file is newer than the class file, we issue a warning and parse the\n+     source file instead.\n+     There should be a flag to allow people have the class file picked\n+     up no matter what. FIXME. */\n   if (! java && ! class && java_buf.st_mtime >= class_buf.st_mtime)\n-    jcf->outofsynch = 1;\n+    {\n+      char *stripped_class_name = xstrdup (classname);\n+      int i = strlen (stripped_class_name);\n+      \n+      while (stripped_class_name [i] != '.')\n+\ti--;\n+      \n+      stripped_class_name [i] = '\\0';\n+      warning (\"Source file for class `%s' is newer than its matching class file. Source file used instead\", stripped_class_name);\n+      free (stripped_class_name);\n+      class = -1;\n+    }\n \n   if (! java)\n     dep_file = java_buffer;\n@@ -382,7 +399,10 @@ DEFUN(find_class, (classname, classname_length, jcf, source_ok),\n #else\n   if (!class)\n     {\n-      SOURCE_FRONTEND_DEBUG ((\"Trying %s\", buffer));\n+      SOURCE_FRONTEND_DEBUG ((stderr, \"[Class selected: %s]\\n\",\n+\t\t\t      classname+classname_length-\n+\t\t\t      (classname_length <= 30 ? \n+\t\t\t       classname_length : 30)));\n       fd = open (buffer, O_RDONLY | O_BINARY);\n       if (fd >= 0)\n \tgoto found;\n@@ -391,7 +411,10 @@ DEFUN(find_class, (classname, classname_length, jcf, source_ok),\n   if (!java)\n     {\n       strcpy (buffer, java_buffer);\n-      SOURCE_FRONTEND_DEBUG ((\"Trying %s\", buffer));\n+      SOURCE_FRONTEND_DEBUG ((stderr, \"[Source selected: %s]\\n\",\n+\t\t\t      classname+classname_length-\n+\t\t\t      (classname_length <= 30 ? \n+\t\t\t       classname_length : 30)));\n       fd = open (buffer, O_RDONLY);\n       if (fd >= 0)\n \t{"}, {"sha": "0ed88ac62606cd458ce0a3150428aab074675b32", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -440,22 +440,6 @@ get_class_constant (JCF *jcf , int i)\n   return type;\n }\n \n-void\n-DEFUN(jcf_out_of_synch, (jcf),\n-      JCF *jcf)\n-{\n-  char *source = xstrdup (jcf->filename);\n-  int i = strlen (source);\n-\n-  while (source[i] != '.')\n-    i--;\n-\n-  source [i] = '\\0';\n-  warning (\"Class file `%s' out of synch with `%s.java'\", \n-\t   jcf->filename, source);\n-  free (source);\n-}\n-\n /* Read a class with the fully qualified-name NAME.\n    Return 1 iff we read the requested file.\n    (It is still possible we failed if the file did not\n@@ -488,8 +472,6 @@ read_class (name)\n \t{\n \t  this_jcf.seen_in_zip = 0;\n \t  current_jcf = &this_jcf;\n-\t  if (this_jcf.outofsynch)\n-\t    jcf_out_of_synch (current_jcf);\n \t}\n     }\n   else"}, {"sha": "6b3188f7db7813a75161ca6413e844823c3ca618", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -92,8 +92,6 @@ typedef struct JCF {\n   unsigned char *read_end;\n   int seen_in_zip;\n   int java_source;\n-  int  outofsynch;\t\t/* Found a class file out of synch\n-\t\t\t\t   with the matching source file. */\n   long zip_offset;    \n   jcf_filbuf_t filbuf;\n   void *read_state;\n@@ -226,7 +224,6 @@ typedef struct JCF {\n extern const char *find_class PROTO ((const char *, int, JCF*, int));\n extern const char *find_classfile PROTO ((char *, JCF*, const char *));\n extern int jcf_filbuf_from_stdio PROTO ((JCF *jcf, int count));\n-extern void jcf_out_of_synch PROTO((JCF *));\n extern int jcf_unexpected_eof PROTO ((JCF*, int)) ATTRIBUTE_NORETURN;\n \n /* Extract a character from a Java-style Utf8 string."}, {"sha": "f518ae6437b21ba273ff4dfa2541ea2ebafc9c2d", "filename": "gcc/java/parse.c", "status": "modified", "additions": 513, "deletions": 475, "changes": 988, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -342,6 +342,7 @@ static tree search_loop PROTO ((tree));\n static int labeled_block_contains_loop_p PROTO ((tree, tree));\n static void check_abstract_method_definitions PROTO ((int, tree, tree));\n static void java_check_abstract_method_definitions PROTO ((tree));\n+static void java_debug_context_do PROTO ((int));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -402,8 +403,11 @@ static tree java_lang_cloneable = NULL_TREE;\n /* Context and flag for static blocks */\n static tree current_static_block = NULL_TREE;\n \n+/* The list of all packages we've seen so far */\n+static tree package_list = NULL_TREE;\n \n-#line 331 \"./parse.y\"\n+\n+#line 335 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -413,7 +417,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 341 \"./parse.y\"\n+#line 345 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -711,57 +715,57 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   485,   491,   493,   494,   495,   496,   497,   501,   503,   506,\n-   508,   509,   512,   514,   517,   521,   525,   529,   535,   537,\n-   539,   541,   546,   548,   551,   555,   560,   565,   567,   568,\n-   569,   570,   571,   572,   573,   576,   581,   587,   589,   592,\n-   595,   597,   601,   603,   606,   633,   635,   639,   652,   654,\n-   658,   665,   670,   672,   682,   687,   702,   706,   709,   712,\n-   715,   717,   719,   724,   728,   730,   732,   734,   738,   740,\n-   742,   749,   755,   760,   764,   773,   783,   785,   788,   790,\n-   791,   792,   796,   798,   800,   801,   803,   808,   811,   821,\n-   824,   826,   830,   833,   840,   846,   854,   856,   858,   860,\n-   862,   866,   868,   872,   879,   880,   884,   887,   889,   891,\n-   893,   898,   900,   902,   904,   911,   914,   916,   925,   927,\n-   931,   936,   941,   945,   950,   955,   957,   964,   966,   968,\n-   972,   975,   977,   981,   983,   984,   989,   995,  1002,  1010,\n-  1017,  1020,  1023,  1027,  1030,  1034,  1043,  1045,  1047,  1051,\n-  1053,  1056,  1063,  1071,  1073,  1077,  1084,  1094,  1098,  1101,\n-  1104,  1107,  1110,  1113,  1116,  1119,  1121,  1125,  1131,  1136,\n-  1138,  1142,  1145,  1149,  1151,  1154,  1156,  1157,  1159,  1163,\n-  1167,  1173,  1178,  1181,  1183,  1187,  1193,  1197,  1202,  1211,\n-  1215,  1220,  1232,  1234,  1237,  1239,  1241,  1245,  1249,  1252,\n-  1256,  1258,  1259,  1260,  1261,  1262,  1266,  1268,  1269,  1270,\n-  1271,  1275,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1284,\n-  1285,  1286,  1289,  1294,  1305,  1308,  1312,  1319,  1329,  1335,\n-  1341,  1347,  1349,  1354,  1356,  1361,  1363,  1365,  1367,  1369,\n-  1373,  1375,  1376,  1377,  1378,  1379,  1380,  1383,  1389,  1391,\n-  1393,  1397,  1402,  1407,  1413,  1423,  1429,  1431,  1433,  1440,\n-  1443,  1445,  1447,  1451,  1453,  1456,  1460,  1462,  1465,  1472,\n-  1478,  1480,  1482,  1486,  1494,  1497,  1499,  1501,  1505,  1510,\n-  1519,  1524,  1527,  1534,  1536,  1538,  1542,  1545,  1554,  1561,\n-  1563,  1567,  1580,  1582,  1588,  1594,  1598,  1600,  1604,  1607,\n-  1609,  1613,  1616,  1618,  1620,  1624,  1627,  1629,  1631,  1635,\n-  1638,  1640,  1642,  1646,  1652,  1654,  1658,  1665,  1667,  1669,\n-  1671,  1675,  1687,  1690,  1692,  1697,  1701,  1703,  1710,  1718,\n-  1735,  1737,  1742,  1746,  1749,  1754,  1756,  1759,  1761,  1763,\n-  1765,  1766,  1767,  1768,  1772,  1774,  1776,  1781,  1783,  1785,\n-  1787,  1789,  1793,  1796,  1801,  1803,  1808,  1809,  1810,  1811,\n-  1812,  1814,  1816,  1818,  1820,  1822,  1826,  1828,  1831,  1837,\n-  1842,  1846,  1849,  1851,  1853,  1857,  1859,  1861,  1863,  1867,\n-  1870,  1874,  1880,  1882,  1890,  1917,  1919,  1923,  1928,  1935,\n-  1939,  1942,  1944,  1955,  1966,  1971,  1980,  1982,  1986,  1989,\n-  1991,  1996,  2001,  2006,  2013,  2015,  2016,  2017,  2020,  2025,\n-  2030,  2032,  2033,  2035,  2037,  2038,  2040,  2044,  2047,  2051,\n-  2054,  2058,  2060,  2062,  2064,  2065,  2067,  2071,  2080,  2082,\n-  2084,  2097,  2099,  2105,  2107,  2109,  2113,  2115,  2120,  2125,\n-  2130,  2132,  2134,  2138,  2140,  2145,  2150,  2152,  2156,  2158,\n-  2163,  2168,  2173,  2175,  2177,  2181,  2183,  2188,  2193,  2198,\n-  2203,  2205,  2207,  2209,  2211,  2213,  2217,  2219,  2224,  2229,\n-  2231,  2235,  2237,  2242,  2246,  2248,  2253,  2257,  2259,  2264,\n-  2268,  2270,  2275,  2279,  2281,  2286,  2290,  2292,  2297,  2303,\n-  2305,  2309,  2311,  2314,  2317,  2325,  2327,  2328,  2331,  2333,\n-  2336,  2340\n+   489,   495,   497,   498,   499,   500,   501,   505,   507,   510,\n+   512,   513,   516,   518,   521,   525,   529,   533,   539,   541,\n+   543,   545,   550,   552,   555,   559,   564,   569,   571,   572,\n+   573,   574,   575,   576,   577,   580,   585,   591,   593,   596,\n+   602,   604,   608,   610,   613,   640,   642,   646,   659,   661,\n+   665,   672,   677,   679,   689,   694,   709,   713,   716,   719,\n+   722,   724,   726,   731,   735,   737,   739,   741,   745,   747,\n+   749,   756,   762,   767,   771,   780,   790,   792,   795,   797,\n+   798,   799,   803,   805,   807,   808,   810,   815,   818,   828,\n+   831,   833,   837,   840,   847,   853,   861,   863,   865,   867,\n+   869,   873,   875,   879,   886,   887,   891,   894,   896,   898,\n+   900,   905,   907,   909,   911,   918,   921,   923,   932,   934,\n+   938,   943,   948,   952,   957,   962,   964,   971,   973,   975,\n+   979,   982,   984,   988,   990,   991,   996,  1002,  1009,  1017,\n+  1024,  1027,  1030,  1034,  1037,  1041,  1050,  1052,  1054,  1058,\n+  1060,  1063,  1070,  1078,  1080,  1084,  1091,  1101,  1105,  1108,\n+  1111,  1114,  1117,  1120,  1123,  1126,  1128,  1132,  1138,  1143,\n+  1145,  1149,  1152,  1156,  1158,  1161,  1163,  1164,  1166,  1170,\n+  1174,  1180,  1185,  1188,  1190,  1194,  1200,  1204,  1209,  1218,\n+  1222,  1227,  1239,  1241,  1244,  1246,  1248,  1252,  1256,  1259,\n+  1263,  1265,  1266,  1267,  1268,  1269,  1273,  1275,  1276,  1277,\n+  1278,  1282,  1284,  1285,  1286,  1287,  1288,  1289,  1290,  1291,\n+  1292,  1293,  1296,  1301,  1312,  1315,  1319,  1326,  1336,  1342,\n+  1348,  1354,  1356,  1361,  1363,  1368,  1370,  1372,  1374,  1376,\n+  1380,  1382,  1383,  1384,  1385,  1386,  1387,  1390,  1396,  1398,\n+  1400,  1404,  1409,  1414,  1420,  1430,  1436,  1438,  1440,  1447,\n+  1450,  1452,  1454,  1458,  1460,  1463,  1467,  1469,  1472,  1479,\n+  1485,  1487,  1489,  1493,  1501,  1504,  1506,  1508,  1512,  1517,\n+  1526,  1531,  1534,  1541,  1543,  1545,  1549,  1552,  1561,  1568,\n+  1570,  1574,  1587,  1589,  1595,  1601,  1605,  1607,  1611,  1614,\n+  1616,  1620,  1623,  1625,  1627,  1631,  1634,  1636,  1638,  1642,\n+  1645,  1647,  1649,  1653,  1659,  1661,  1665,  1672,  1674,  1676,\n+  1678,  1682,  1694,  1697,  1699,  1704,  1708,  1710,  1717,  1725,\n+  1742,  1744,  1749,  1753,  1756,  1761,  1763,  1766,  1768,  1770,\n+  1772,  1773,  1774,  1775,  1779,  1781,  1783,  1788,  1790,  1792,\n+  1794,  1796,  1800,  1803,  1808,  1810,  1815,  1816,  1817,  1818,\n+  1819,  1821,  1823,  1825,  1827,  1829,  1833,  1835,  1838,  1844,\n+  1849,  1853,  1856,  1858,  1860,  1864,  1866,  1868,  1870,  1874,\n+  1877,  1881,  1887,  1889,  1897,  1924,  1926,  1930,  1935,  1942,\n+  1946,  1949,  1951,  1962,  1973,  1978,  1987,  1989,  1993,  1996,\n+  1998,  2003,  2008,  2013,  2020,  2022,  2023,  2024,  2027,  2032,\n+  2037,  2039,  2040,  2042,  2044,  2045,  2047,  2051,  2054,  2058,\n+  2061,  2065,  2067,  2069,  2071,  2072,  2074,  2078,  2087,  2089,\n+  2091,  2104,  2106,  2112,  2114,  2116,  2120,  2122,  2127,  2132,\n+  2137,  2139,  2141,  2145,  2147,  2152,  2157,  2159,  2163,  2165,\n+  2170,  2175,  2180,  2182,  2184,  2188,  2190,  2195,  2200,  2205,\n+  2210,  2212,  2214,  2216,  2218,  2220,  2224,  2226,  2231,  2236,\n+  2238,  2242,  2244,  2249,  2253,  2255,  2260,  2264,  2266,  2271,\n+  2275,  2277,  2282,  2286,  2288,  2293,  2297,  2299,  2304,  2310,\n+  2312,  2316,  2318,  2321,  2324,  2332,  2334,  2335,  2338,  2340,\n+  2343,  2347\n };\n #endif\n \n@@ -2257,7 +2261,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/local/gnu/share/bison.simple\"\n+#line 3 \"/usr/share/misc/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2274,7 +2278,7 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -2408,8 +2412,10 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n \n /* Prevent warning if -Wstrict-prototypes.  */\n #ifdef __GNUC__\n+#ifndef YYPARSE_PARAM\n int yyparse (void);\n #endif\n+#endif\n \f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n@@ -2450,7 +2456,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/local/gnu/share/bison.simple\"\n+#line 196 \"/usr/share/misc/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2755,66 +2761,69 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 487 \"./parse.y\"\n+#line 491 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 531 \"./parse.y\"\n+#line 535 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 536 \"./parse.y\"\n+#line 540 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 538 \"./parse.y\"\n+#line 542 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 540 \"./parse.y\"\n+#line 544 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 542 \"./parse.y\"\n+#line 546 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 557 \"./parse.y\"\n+#line 561 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 566 \"./parse.y\"\n+#line 570 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 578 \"./parse.y\"\n+#line 582 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 582 \"./parse.y\"\n+#line 586 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 594 \"./parse.y\"\n-{ ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n+#line 598 \"./parse.y\"\n+{ \n+\t\t  ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node);\n+\t\t  package_list = tree_cons (ctxp->package, NULL, package_list);\n+\t\t;\n     break;}\n case 41:\n-#line 596 \"./parse.y\"\n+#line 603 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 598 \"./parse.y\"\n+#line 605 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 608 \"./parse.y\"\n+#line 615 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2842,15 +2851,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 634 \"./parse.y\"\n+#line 641 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 636 \"./parse.y\"\n+#line 643 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 641 \"./parse.y\"\n+#line 648 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2864,47 +2873,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 653 \"./parse.y\"\n+#line 660 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 655 \"./parse.y\"\n+#line 662 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 660 \"./parse.y\"\n+#line 667 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 666 \"./parse.y\"\n+#line 673 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 671 \"./parse.y\"\n+#line 678 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 673 \"./parse.y\"\n+#line 680 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 684 \"./parse.y\"\n+#line 691 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 688 \"./parse.y\"\n+#line 695 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2918,95 +2927,95 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 704 \"./parse.y\"\n+#line 711 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 706 \"./parse.y\"\n+#line 713 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 710 \"./parse.y\"\n+#line 717 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 712 \"./parse.y\"\n+#line 719 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 716 \"./parse.y\"\n+#line 723 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 718 \"./parse.y\"\n+#line 725 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 720 \"./parse.y\"\n+#line 727 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 725 \"./parse.y\"\n+#line 732 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 729 \"./parse.y\"\n+#line 736 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 731 \"./parse.y\"\n+#line 738 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 733 \"./parse.y\"\n+#line 740 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 735 \"./parse.y\"\n+#line 742 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 739 \"./parse.y\"\n+#line 746 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 741 \"./parse.y\"\n+#line 748 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 743 \"./parse.y\"\n+#line 750 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 751 \"./parse.y\"\n+#line 758 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 756 \"./parse.y\"\n+#line 763 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 761 \"./parse.y\"\n+#line 768 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 766 \"./parse.y\"\n+#line 773 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -3016,7 +3025,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 774 \"./parse.y\"\n+#line 781 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -3026,27 +3035,27 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 793 \"./parse.y\"\n+#line 800 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 799 \"./parse.y\"\n+#line 806 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 802 \"./parse.y\"\n+#line 809 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 804 \"./parse.y\"\n+#line 811 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 810 \"./parse.y\"\n+#line 817 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 812 \"./parse.y\"\n+#line 819 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3056,19 +3065,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 825 \"./parse.y\"\n+#line 832 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 827 \"./parse.y\"\n+#line 834 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 832 \"./parse.y\"\n+#line 839 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 834 \"./parse.y\"\n+#line 841 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3077,104 +3086,104 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 841 \"./parse.y\"\n+#line 848 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 847 \"./parse.y\"\n+#line 854 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 857 \"./parse.y\"\n+#line 864 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 859 \"./parse.y\"\n+#line 866 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 861 \"./parse.y\"\n+#line 868 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 863 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 874 \"./parse.y\"\n+#line 881 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 879 \"./parse.y\"\n+#line 886 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 881 \"./parse.y\"\n+#line 888 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 886 \"./parse.y\"\n+#line 893 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 888 \"./parse.y\"\n+#line 895 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 890 \"./parse.y\"\n+#line 897 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 892 \"./parse.y\"\n+#line 899 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 894 \"./parse.y\"\n+#line 901 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, method name required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 112:\n-#line 899 \"./parse.y\"\n+#line 906 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 901 \"./parse.y\"\n+#line 908 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 903 \"./parse.y\"\n+#line 910 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 905 \"./parse.y\"\n+#line 912 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 913 \"./parse.y\"\n+#line 920 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 915 \"./parse.y\"\n+#line 922 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 917 \"./parse.y\"\n+#line 924 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3185,316 +3194,316 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 926 \"./parse.y\"\n+#line 933 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 928 \"./parse.y\"\n+#line 935 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 933 \"./parse.y\"\n+#line 940 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 937 \"./parse.y\"\n+#line 944 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 942 \"./parse.y\"\n+#line 949 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 947 \"./parse.y\"\n+#line 954 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 951 \"./parse.y\"\n+#line 958 \"./parse.y\"\n { \n \t\t  parse_jdk1_1_error (\"final parameters\");\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 126:\n-#line 956 \"./parse.y\"\n+#line 963 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 958 \"./parse.y\"\n+#line 965 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 965 \"./parse.y\"\n+#line 972 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 967 \"./parse.y\"\n+#line 974 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 969 \"./parse.y\"\n+#line 976 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 974 \"./parse.y\"\n+#line 981 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 976 \"./parse.y\"\n+#line 983 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 978 \"./parse.y\"\n+#line 985 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 985 \"./parse.y\"\n+#line 992 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 991 \"./parse.y\"\n+#line 998 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 996 \"./parse.y\"\n+#line 1003 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 1004 \"./parse.y\"\n+#line 1011 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 1012 \"./parse.y\"\n+#line 1019 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 1017 \"./parse.y\"\n+#line 1024 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 1022 \"./parse.y\"\n+#line 1029 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 1024 \"./parse.y\"\n+#line 1031 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 1029 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 1031 \"./parse.y\"\n+#line 1038 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 1039 \"./parse.y\"\n+#line 1046 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 1044 \"./parse.y\"\n+#line 1051 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 1046 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1048 \"./parse.y\"\n+#line 1055 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 152:\n-#line 1058 \"./parse.y\"\n+#line 1065 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 153:\n-#line 1064 \"./parse.y\"\n+#line 1071 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1072 \"./parse.y\"\n+#line 1079 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 155:\n-#line 1074 \"./parse.y\"\n+#line 1081 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1079 \"./parse.y\"\n+#line 1086 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 157:\n-#line 1085 \"./parse.y\"\n+#line 1092 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1096 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1098 \"./parse.y\"\n+#line 1105 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1102 \"./parse.y\"\n+#line 1109 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 161:\n-#line 1104 \"./parse.y\"\n+#line 1111 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1108 \"./parse.y\"\n+#line 1115 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 163:\n-#line 1110 \"./parse.y\"\n+#line 1117 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1114 \"./parse.y\"\n+#line 1121 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 165:\n-#line 1116 \"./parse.y\"\n+#line 1123 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 166:\n-#line 1120 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 167:\n-#line 1122 \"./parse.y\"\n+#line 1129 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1127 \"./parse.y\"\n+#line 1134 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 169:\n-#line 1132 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 170:\n-#line 1137 \"./parse.y\"\n+#line 1144 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 171:\n-#line 1139 \"./parse.y\"\n+#line 1146 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 172:\n-#line 1144 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 173:\n-#line 1146 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1158 \"./parse.y\"\n+#line 1165 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 179:\n-#line 1160 \"./parse.y\"\n+#line 1167 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 181:\n-#line 1169 \"./parse.y\"\n+#line 1176 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 182:\n-#line 1174 \"./parse.y\"\n+#line 1181 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 183:\n-#line 1180 \"./parse.y\"\n+#line 1187 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 184:\n-#line 1182 \"./parse.y\"\n+#line 1189 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 185:\n-#line 1184 \"./parse.y\"\n+#line 1191 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 186:\n-#line 1189 \"./parse.y\"\n+#line 1196 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 187:\n-#line 1194 \"./parse.y\"\n+#line 1201 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 188:\n-#line 1198 \"./parse.y\"\n+#line 1205 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 189:\n-#line 1204 \"./parse.y\"\n+#line 1211 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3504,15 +3513,15 @@ case 189:\n \t\t;\n     break;}\n case 190:\n-#line 1212 \"./parse.y\"\n+#line 1219 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 191:\n-#line 1217 \"./parse.y\"\n+#line 1224 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 192:\n-#line 1222 \"./parse.y\"\n+#line 1229 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3523,35 +3532,35 @@ case 192:\n \t\t;\n     break;}\n case 196:\n-#line 1240 \"./parse.y\"\n+#line 1247 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1242 \"./parse.y\"\n+#line 1249 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 199:\n-#line 1251 \"./parse.y\"\n+#line 1258 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 200:\n-#line 1253 \"./parse.y\"\n+#line 1260 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 206:\n-#line 1263 \"./parse.y\"\n+#line 1270 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 211:\n-#line 1272 \"./parse.y\"\n+#line 1279 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 223:\n-#line 1291 \"./parse.y\"\n+#line 1298 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 224:\n-#line 1296 \"./parse.y\"\n+#line 1303 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3561,19 +3570,19 @@ case 224:\n \t\t;\n     break;}\n case 225:\n-#line 1307 \"./parse.y\"\n+#line 1314 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1309 \"./parse.y\"\n+#line 1316 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 227:\n-#line 1314 \"./parse.y\"\n+#line 1321 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 228:\n-#line 1321 \"./parse.y\"\n+#line 1328 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3584,106 +3593,106 @@ case 228:\n \t\t;\n     break;}\n case 229:\n-#line 1330 \"./parse.y\"\n+#line 1337 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1336 \"./parse.y\"\n+#line 1343 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1342 \"./parse.y\"\n+#line 1349 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1348 \"./parse.y\"\n+#line 1355 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1350 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n {\n \t\t  parse_ctor_invocation_error ();\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1355 \"./parse.y\"\n+#line 1362 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1357 \"./parse.y\"\n+#line 1364 \"./parse.y\"\n {\n \t\t  parse_ctor_invocation_error ();\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 236:\n-#line 1362 \"./parse.y\"\n+#line 1369 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1364 \"./parse.y\"\n+#line 1371 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1366 \"./parse.y\"\n+#line 1373 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1368 \"./parse.y\"\n+#line 1375 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1370 \"./parse.y\"\n+#line 1377 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1385 \"./parse.y\"\n+#line 1392 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 249:\n-#line 1390 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1392 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 251:\n-#line 1394 \"./parse.y\"\n+#line 1401 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 252:\n-#line 1399 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 253:\n-#line 1404 \"./parse.y\"\n+#line 1411 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1409 \"./parse.y\"\n+#line 1416 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 255:\n-#line 1413 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3694,112 +3703,112 @@ case 255:\n \t\t;\n     break;}\n case 256:\n-#line 1425 \"./parse.y\"\n+#line 1432 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 257:\n-#line 1430 \"./parse.y\"\n+#line 1437 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1432 \"./parse.y\"\n+#line 1439 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 259:\n-#line 1434 \"./parse.y\"\n+#line 1441 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 260:\n-#line 1442 \"./parse.y\"\n+#line 1449 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1444 \"./parse.y\"\n+#line 1451 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1446 \"./parse.y\"\n+#line 1453 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1448 \"./parse.y\"\n+#line 1455 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1467 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 270:\n-#line 1473 \"./parse.y\"\n+#line 1480 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1479 \"./parse.y\"\n+#line 1486 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 272:\n-#line 1481 \"./parse.y\"\n+#line 1488 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 273:\n-#line 1483 \"./parse.y\"\n+#line 1490 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1488 \"./parse.y\"\n+#line 1495 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 275:\n-#line 1496 \"./parse.y\"\n+#line 1503 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 276:\n-#line 1498 \"./parse.y\"\n+#line 1505 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1500 \"./parse.y\"\n+#line 1507 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1502 \"./parse.y\"\n+#line 1509 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1507 \"./parse.y\"\n+#line 1514 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 280:\n-#line 1512 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 281:\n-#line 1521 \"./parse.y\"\n+#line 1528 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 282:\n-#line 1526 \"./parse.y\"\n+#line 1533 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 283:\n-#line 1528 \"./parse.y\"\n+#line 1535 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3808,23 +3817,23 @@ case 283:\n \t\t;\n     break;}\n case 284:\n-#line 1535 \"./parse.y\"\n+#line 1542 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1537 \"./parse.y\"\n+#line 1544 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1539 \"./parse.y\"\n+#line 1546 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1544 \"./parse.y\"\n+#line 1551 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 288:\n-#line 1546 \"./parse.y\"\n+#line 1553 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3833,23 +3842,23 @@ case 288:\n \t\t;\n     break;}\n case 289:\n-#line 1556 \"./parse.y\"\n+#line 1563 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 290:\n-#line 1562 \"./parse.y\"\n+#line 1569 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 291:\n-#line 1564 \"./parse.y\"\n+#line 1571 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 292:\n-#line 1569 \"./parse.y\"\n+#line 1576 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3862,138 +3871,138 @@ case 292:\n \t\t;\n     break;}\n case 293:\n-#line 1581 \"./parse.y\"\n+#line 1588 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 294:\n-#line 1583 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 295:\n-#line 1589 \"./parse.y\"\n+#line 1596 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 296:\n-#line 1595 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 297:\n-#line 1599 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 298:\n-#line 1601 \"./parse.y\"\n+#line 1608 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1606 \"./parse.y\"\n+#line 1613 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1608 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1610 \"./parse.y\"\n+#line 1617 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1615 \"./parse.y\"\n+#line 1622 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 303:\n-#line 1617 \"./parse.y\"\n+#line 1624 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 304:\n-#line 1619 \"./parse.y\"\n+#line 1626 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 305:\n-#line 1621 \"./parse.y\"\n+#line 1628 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 306:\n-#line 1626 \"./parse.y\"\n+#line 1633 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 307:\n-#line 1628 \"./parse.y\"\n+#line 1635 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 308:\n-#line 1630 \"./parse.y\"\n+#line 1637 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 309:\n-#line 1632 \"./parse.y\"\n+#line 1639 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 310:\n-#line 1637 \"./parse.y\"\n+#line 1644 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1639 \"./parse.y\"\n+#line 1646 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 312:\n-#line 1641 \"./parse.y\"\n+#line 1648 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1643 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1648 \"./parse.y\"\n+#line 1655 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 315:\n-#line 1653 \"./parse.y\"\n+#line 1660 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 316:\n-#line 1655 \"./parse.y\"\n+#line 1662 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1660 \"./parse.y\"\n+#line 1667 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 318:\n-#line 1666 \"./parse.y\"\n+#line 1673 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 319:\n-#line 1668 \"./parse.y\"\n+#line 1675 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1670 \"./parse.y\"\n+#line 1677 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 321:\n-#line 1672 \"./parse.y\"\n+#line 1679 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1677 \"./parse.y\"\n+#line 1684 \"./parse.y\"\n {\n \t\t  check_modifiers (\n              \"Illegal modifier `%s'. Only `synchronized' was expected here\",\n@@ -4004,41 +4013,41 @@ case 322:\n \t\t;\n     break;}\n case 323:\n-#line 1689 \"./parse.y\"\n+#line 1696 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1691 \"./parse.y\"\n+#line 1698 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1693 \"./parse.y\"\n+#line 1700 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 326:\n-#line 1698 \"./parse.y\"\n+#line 1705 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 328:\n-#line 1704 \"./parse.y\"\n+#line 1711 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 329:\n-#line 1712 \"./parse.y\"\n+#line 1719 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 330:\n-#line 1720 \"./parse.y\"\n+#line 1727 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4056,187 +4065,187 @@ case 330:\n \t\t;\n     break;}\n case 331:\n-#line 1736 \"./parse.y\"\n+#line 1743 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER; yyval.node = NULL_TREE;;\n     break;}\n case 332:\n-#line 1738 \"./parse.y\"\n+#line 1745 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term or ')' expected\"); \n \t\t  RECOVER; yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 333:\n-#line 1743 \"./parse.y\"\n+#line 1750 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER; yyval.node = NULL_TREE;;\n     break;}\n case 334:\n-#line 1748 \"./parse.y\"\n+#line 1755 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 335:\n-#line 1750 \"./parse.y\"\n+#line 1757 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 339:\n-#line 1762 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 340:\n-#line 1764 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 345:\n-#line 1773 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 346:\n-#line 1775 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 347:\n-#line 1777 \"./parse.y\"\n+#line 1784 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 348:\n-#line 1782 \"./parse.y\"\n+#line 1789 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 349:\n-#line 1784 \"./parse.y\"\n+#line 1791 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 350:\n-#line 1786 \"./parse.y\"\n+#line 1793 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1788 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1790 \"./parse.y\"\n+#line 1797 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 353:\n-#line 1795 \"./parse.y\"\n+#line 1802 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 354:\n-#line 1797 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 355:\n-#line 1802 \"./parse.y\"\n+#line 1809 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 356:\n-#line 1804 \"./parse.y\"\n+#line 1811 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 361:\n-#line 1813 \"./parse.y\"\n+#line 1820 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 362:\n-#line 1815 \"./parse.y\"\n+#line 1822 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1817 \"./parse.y\"\n+#line 1824 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1819 \"./parse.y\"\n+#line 1826 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 365:\n-#line 1821 \"./parse.y\"\n+#line 1828 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1823 \"./parse.y\"\n+#line 1830 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 369:\n-#line 1833 \"./parse.y\"\n+#line 1840 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 370:\n-#line 1838 \"./parse.y\"\n+#line 1845 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 371:\n-#line 1843 \"./parse.y\"\n+#line 1850 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 372:\n-#line 1848 \"./parse.y\"\n+#line 1855 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 373:\n-#line 1850 \"./parse.y\"\n+#line 1857 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 374:\n-#line 1852 \"./parse.y\"\n+#line 1859 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 375:\n-#line 1854 \"./parse.y\"\n+#line 1861 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 376:\n-#line 1858 \"./parse.y\"\n+#line 1865 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 377:\n-#line 1860 \"./parse.y\"\n+#line 1867 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 378:\n-#line 1862 \"./parse.y\"\n+#line 1869 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 379:\n-#line 1864 \"./parse.y\"\n+#line 1871 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 380:\n-#line 1869 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 381:\n-#line 1871 \"./parse.y\"\n+#line 1878 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 382:\n-#line 1876 \"./parse.y\"\n+#line 1883 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 383:\n-#line 1881 \"./parse.y\"\n+#line 1888 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 384:\n-#line 1883 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 385:\n-#line 1892 \"./parse.y\"\n+#line 1899 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4264,19 +4273,19 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 1918 \"./parse.y\"\n+#line 1925 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 387:\n-#line 1920 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 388:\n-#line 1925 \"./parse.y\"\n+#line 1932 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 389:\n-#line 1929 \"./parse.y\"\n+#line 1936 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4285,19 +4294,19 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 1936 \"./parse.y\"\n+#line 1943 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 391:\n-#line 1941 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 392:\n-#line 1943 \"./parse.y\"\n+#line 1950 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 393:\n-#line 1945 \"./parse.y\"\n+#line 1952 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4310,7 +4319,7 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 1956 \"./parse.y\"\n+#line 1963 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4323,121 +4332,121 @@ case 394:\n \t\t;\n     break;}\n case 395:\n-#line 1967 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 396:\n-#line 1972 \"./parse.y\"\n+#line 1979 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 397:\n-#line 1981 \"./parse.y\"\n+#line 1988 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 398:\n-#line 1983 \"./parse.y\"\n+#line 1990 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 399:\n-#line 1988 \"./parse.y\"\n+#line 1995 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 400:\n-#line 1990 \"./parse.y\"\n+#line 1997 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 1992 \"./parse.y\"\n+#line 1999 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1997 \"./parse.y\"\n+#line 2004 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 403:\n-#line 2002 \"./parse.y\"\n+#line 2009 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 404:\n-#line 2007 \"./parse.y\"\n+#line 2014 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 409:\n-#line 2022 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 2027 \"./parse.y\"\n+#line 2034 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 413:\n-#line 2034 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 2036 \"./parse.y\"\n+#line 2043 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 416:\n-#line 2039 \"./parse.y\"\n+#line 2046 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 2041 \"./parse.y\"\n+#line 2048 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2046 \"./parse.y\"\n+#line 2053 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 2048 \"./parse.y\"\n+#line 2055 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 2053 \"./parse.y\"\n+#line 2060 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 421:\n-#line 2055 \"./parse.y\"\n+#line 2062 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 423:\n-#line 2061 \"./parse.y\"\n+#line 2068 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2063 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 426:\n-#line 2066 \"./parse.y\"\n+#line 2073 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 427:\n-#line 2068 \"./parse.y\"\n+#line 2075 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2073 \"./parse.y\"\n+#line 2080 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4447,15 +4456,15 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2081 \"./parse.y\"\n+#line 2088 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 430:\n-#line 2083 \"./parse.y\"\n+#line 2090 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 431:\n-#line 2085 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n { \n \t\t  const char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4470,275 +4479,275 @@ case 431:\n \t\t;\n     break;}\n case 432:\n-#line 2098 \"./parse.y\"\n+#line 2105 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 433:\n-#line 2100 \"./parse.y\"\n+#line 2107 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 434:\n-#line 2106 \"./parse.y\"\n+#line 2113 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2108 \"./parse.y\"\n+#line 2115 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2110 \"./parse.y\"\n+#line 2117 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 438:\n-#line 2116 \"./parse.y\"\n+#line 2123 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 439:\n-#line 2121 \"./parse.y\"\n+#line 2128 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 440:\n-#line 2126 \"./parse.y\"\n+#line 2133 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 441:\n-#line 2131 \"./parse.y\"\n+#line 2138 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2133 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2135 \"./parse.y\"\n+#line 2142 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2141 \"./parse.y\"\n+#line 2148 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 446:\n-#line 2146 \"./parse.y\"\n+#line 2153 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 447:\n-#line 2151 \"./parse.y\"\n+#line 2158 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2153 \"./parse.y\"\n+#line 2160 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 450:\n-#line 2159 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2164 \"./parse.y\"\n+#line 2171 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 452:\n-#line 2169 \"./parse.y\"\n+#line 2176 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 453:\n-#line 2174 \"./parse.y\"\n+#line 2181 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2176 \"./parse.y\"\n+#line 2183 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2178 \"./parse.y\"\n+#line 2185 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 457:\n-#line 2184 \"./parse.y\"\n+#line 2191 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2189 \"./parse.y\"\n+#line 2196 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2194 \"./parse.y\"\n+#line 2201 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2199 \"./parse.y\"\n+#line 2206 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2204 \"./parse.y\"\n+#line 2211 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 462:\n-#line 2206 \"./parse.y\"\n+#line 2213 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2208 \"./parse.y\"\n+#line 2215 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2210 \"./parse.y\"\n+#line 2217 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2212 \"./parse.y\"\n+#line 2219 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 466:\n-#line 2214 \"./parse.y\"\n+#line 2221 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 468:\n-#line 2220 \"./parse.y\"\n+#line 2227 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 469:\n-#line 2225 \"./parse.y\"\n+#line 2232 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 470:\n-#line 2230 \"./parse.y\"\n+#line 2237 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2232 \"./parse.y\"\n+#line 2239 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2238 \"./parse.y\"\n+#line 2245 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2243 \"./parse.y\"\n+#line 2250 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2249 \"./parse.y\"\n+#line 2256 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2254 \"./parse.y\"\n+#line 2261 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2260 \"./parse.y\"\n+#line 2267 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2265 \"./parse.y\"\n+#line 2272 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2271 \"./parse.y\"\n+#line 2278 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2276 \"./parse.y\"\n+#line 2283 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2282 \"./parse.y\"\n+#line 2289 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 486:\n-#line 2287 \"./parse.y\"\n+#line 2294 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 488:\n-#line 2293 \"./parse.y\"\n+#line 2300 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 489:\n-#line 2298 \"./parse.y\"\n+#line 2305 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 490:\n-#line 2304 \"./parse.y\"\n+#line 2311 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 491:\n-#line 2306 \"./parse.y\"\n+#line 2313 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 494:\n-#line 2316 \"./parse.y\"\n+#line 2323 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 495:\n-#line 2318 \"./parse.y\"\n+#line 2325 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4747,7 +4756,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/local/gnu/share/bison.simple\"\n+#line 498 \"/usr/share/misc/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4943,7 +4952,7 @@ case 495:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2344 \"./parse.y\"\n+#line 2351 \"./parse.y\"\n \n \f\n \n@@ -4971,25 +4980,30 @@ java_push_parser_context ()\n     }\n }  \n \n-/* If the first file of a file list was a class file, no context\n-   exists for a source file to be parsed. This boolean remembers that\n-   java_parser_context_save_global might have created a dummy one, so\n-   that java_parser_context_restore_global can pop it.  */\n-static int extra_ctxp_pushed_p = 0;\n-\n void\n java_parser_context_save_global ()\n {\n   if (!ctxp)\n     {\n       java_push_parser_context ();\n-      extra_ctxp_pushed_p = 1;\n+      ctxp->saved_data_ctx = 1;\n+    }\n+  else if (ctxp->saved_data)\n+    {\n+      struct parser_ctxt *new = \n+\t(struct parser_ctxt *)xmalloc(sizeof (struct parser_ctxt));\n+      bzero ((PTR)new, sizeof (struct parser_ctxt));\n+      memcpy ((PTR)new, (PTR)ctxp, sizeof (struct parser_ctxt));\n+      new->next = ctxp;\n+      ctxp = new;\n+      ctxp->saved_data_ctx = 1;\n     }\n   ctxp->finput = finput;\n   ctxp->lineno = lineno;\n   ctxp->current_class = current_class;\n   ctxp->filename = input_filename;\n   ctxp->current_function_decl = current_function_decl;\n+  ctxp->saved_data = 1;\n }\n \n void\n@@ -4999,12 +5013,10 @@ java_parser_context_restore_global ()\n   lineno = ctxp->lineno;\n   current_class = ctxp->current_class;\n   input_filename = ctxp->filename;\n+  ctxp->saved_data = 0;\n   current_function_decl = ctxp->current_function_decl;\n-  if (!ctxp->next && extra_ctxp_pushed_p)\n-    {\n-      java_pop_parser_context (0);\n-      extra_ctxp_pushed_p = 0;\n-    }\n+  if (ctxp->saved_data_ctx)\n+    java_pop_parser_context (0);\n }\n \n void \n@@ -5047,6 +5059,44 @@ java_pop_parser_context (generate)\n     free (toFree);\n }\n \n+/* Dump the stacked up parser contexts. Intended to be called from a\n+   debugger.  */\n+\n+static void\n+java_debug_context_do (tab)\n+     int tab;\n+{\n+#define JAVA_TAB_CONTEXT(C) \\\n+  {int i; for (i = 0; i < (C); i++) fputc (' ', stderr);}\n+\n+  struct parser_ctxt *copy = ctxp;\n+  while (copy)\n+    {\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"ctxt: 0x%0lX\\n\", (unsigned long)copy);\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"filename: %s\\n\", copy->filename);\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"package: %s\\n\",\n+\t       (copy->package ? \n+\t\tIDENTIFIER_POINTER (copy->package) : \"<none>\"));\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"context for saving: %d\\n\", copy->saved_data_ctx);\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"saved data: %d\\n\", copy->saved_data);\n+      copy = copy->next;\n+      tab += 2;\n+    }\n+#undef JAVA_TAB_CONTEXT\n+}\n+\n+void\n+java_debug_context ()\n+{\n+  java_debug_context_do (0);\n+}\n+\n+\n /* Reporting an constructor invocation error.  */\n static void\n parse_ctor_invocation_error ()\n@@ -6914,7 +6964,7 @@ do_resolve_class (class_type, decl, cl)\n     return NULL_TREE;\n \n   /* 2- And check for the type in the current compilation unit. If it fails,\n-     try with a name qualified with the package name if appropriate. */\n+     try with a name qualified with the package name we've seen so far */\n   if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n     {\n       if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n@@ -6924,40 +6974,29 @@ do_resolve_class (class_type, decl, cl)\n     }\n \n   original_name = TYPE_NAME (class_type);\n-  if (!QUALIFIED_P (TYPE_NAME (class_type)) && ctxp->package)\n-    TYPE_NAME (class_type) = merge_qualified_name (ctxp->package, \n-\t\t\t\t\t\t   TYPE_NAME (class_type));\n-#if 1\n-  if (!(new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n-    load_class (TYPE_NAME (class_type), 0);\n-  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n-    {\n-      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n-\t  !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n-\tload_class (TYPE_NAME (class_type), 0);\n-      return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n-    }\n-#else\n-  new_name = TYPE_NAME (class_type);\n-  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (new_name)) != NULL_TREE)\n-    {\n-      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n-          !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n-        load_class (new_name, 0);\n-      return IDENTIFIER_CLASS_VALUE (new_name);\n-    }\n-  else\n+  if (!QUALIFIED_P (TYPE_NAME (class_type)))\n     {\n-      tree class = read_class (new_name);\n-      if (class != NULL_TREE)\n+      tree package;\n+      for (package = package_list; package; package = TREE_CHAIN (package))\n \t{\n-\t  tree decl = IDENTIFIER_CLASS_VALUE (new_name);\n-\t  if (decl == NULL_TREE)\n-\t    decl = push_class (class, new_name);\n-\t  return decl;\n+\t  tree new_qualified;\n+\t  \n+\t  new_qualified = merge_qualified_name (TREE_PURPOSE (package),\n+\t\t\t\t\t\toriginal_name);\n+\t  TYPE_NAME (class_type) = new_qualified;\n+\t  new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\t  if (!new_class_decl)\n+\t    load_class (TYPE_NAME (class_type), 0);\n+\t  new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\t  if (new_class_decl)\n+\t    {\n+\t      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n+\t\t  !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n+\t\tload_class (TYPE_NAME (class_type), 0);\n+\t      return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\t    }\n \t}\n     }\n-#endif\n   TYPE_NAME (class_type) = original_name;\n \n   /* 3- Check an other compilation unit that bears the name of type */\n@@ -8682,7 +8721,6 @@ java_pre_expand_clinit (decl)\n      tree decl;\n {\n   tree fbody = DECL_FUNCTION_BODY (decl);\n-  tree list;\n   int to_return = 1;\n \n   if (fbody != NULL_TREE)"}, {"sha": "d79c8aed539eb11d87207e4249902dd5ad3aec47", "filename": "gcc/java/parse.h", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -605,10 +605,24 @@ struct parser_ctxt {\n   int osb_depth;\t\t     /* Current depth of [ in an expression */\n   int osb_limit;\t\t     /* Limit of this depth */\n   int *osb_number;\t\t     /* Keep track of ['s */\n-  int minus_seen;\t\t     /* Integral literal overflow */\n   int lineno;\t\t\t     /* Current lineno */\n-  int java_error_flag;\t\t     /* Report error when true */\n-  int deprecated;\t\t     /* @deprecated tag seen */\n+\n+  /* The flags section */\n+\n+  /* Indicates a context used for saving the parser status. The\n+     context must be popped when the status is restored. */\n+  unsigned saved_data_ctx:1;\t\n+  /* Indicates that a context already contains saved data and that the\n+     next save operation will require a new context to be created. */\n+  unsigned saved_data:1;\n+  /* Integral literal overflow */\n+  unsigned minus_seen:1;\n+  /* Report error when true */\n+  unsigned java_error_flag:1;\n+  /* @deprecated tag seen */\n+  unsigned deprecated:1;\n+  /* Flag to report certain errors (fix this documentation. FIXME) */\n+  unsigned class_err:1;\n \n   /* This section is defined only if we compile jc1 */\n #ifndef JC1_LITE\n@@ -619,7 +633,6 @@ struct parser_ctxt {\n   struct JCF *current_jcf;\t    /* CU jcf */\n \n   int prevent_ese;\t            /* Prevent expression statement error */\n-  int class_err;\t\t    /* Flag to report certain errors */\n \n   int formal_parameter_number;\t    /* Number of parameters found */\n   int interface_number;\t\t    /* # itfs declared to extend an itf def */\n@@ -650,7 +663,7 @@ struct parser_ctxt {\n \n   int pending_block;\t\t    /* Pending block to close */\n \n-  int explicit_constructor_p;\t    /* True when processing an explicit\n+  int explicit_constructor_p;\t    /* >0 when processing an explicit\n \t\t\t\t       constructor. This flag is used to trap\n \t\t\t\t       illegal argument usage during an\n \t\t\t\t       explicit constructor invocation. */"}, {"sha": "2b2afe3c2d731a4b6803bb261c6f54f571e8936c", "filename": "gcc/java/parse.y", "status": "modified", "additions": 81, "deletions": 45, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "patch": "@@ -266,6 +266,7 @@ static tree search_loop PROTO ((tree));\n static int labeled_block_contains_loop_p PROTO ((tree, tree));\n static void check_abstract_method_definitions PROTO ((int, tree, tree));\n static void java_check_abstract_method_definitions PROTO ((tree));\n+static void java_debug_context_do PROTO ((int));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -326,6 +327,9 @@ static tree java_lang_cloneable = NULL_TREE;\n /* Context and flag for static blocks */\n static tree current_static_block = NULL_TREE;\n \n+/* The list of all packages we've seen so far */\n+static tree package_list = NULL_TREE;\n+\n %}\n \n %union {\n@@ -591,7 +595,10 @@ type_declarations:\n \n package_declaration:\n \tPACKAGE_TK name SC_TK\n-\t\t{ ctxp->package = EXPR_WFL_NODE ($2); }\n+\t\t{ \n+\t\t  ctxp->package = EXPR_WFL_NODE ($2);\n+\t\t  package_list = tree_cons (ctxp->package, NULL, package_list);\n+\t\t}\n |\tPACKAGE_TK error\n \t\t{yyerror (\"Missing name\"); RECOVER;}\n |\tPACKAGE_TK name error\n@@ -2368,25 +2375,30 @@ java_push_parser_context ()\n     }\n }  \n \n-/* If the first file of a file list was a class file, no context\n-   exists for a source file to be parsed. This boolean remembers that\n-   java_parser_context_save_global might have created a dummy one, so\n-   that java_parser_context_restore_global can pop it.  */\n-static int extra_ctxp_pushed_p = 0;\n-\n void\n java_parser_context_save_global ()\n {\n   if (!ctxp)\n     {\n       java_push_parser_context ();\n-      extra_ctxp_pushed_p = 1;\n+      ctxp->saved_data_ctx = 1;\n+    }\n+  else if (ctxp->saved_data)\n+    {\n+      struct parser_ctxt *new = \n+\t(struct parser_ctxt *)xmalloc(sizeof (struct parser_ctxt));\n+      bzero ((PTR)new, sizeof (struct parser_ctxt));\n+      memcpy ((PTR)new, (PTR)ctxp, sizeof (struct parser_ctxt));\n+      new->next = ctxp;\n+      ctxp = new;\n+      ctxp->saved_data_ctx = 1;\n     }\n   ctxp->finput = finput;\n   ctxp->lineno = lineno;\n   ctxp->current_class = current_class;\n   ctxp->filename = input_filename;\n   ctxp->current_function_decl = current_function_decl;\n+  ctxp->saved_data = 1;\n }\n \n void\n@@ -2396,12 +2408,10 @@ java_parser_context_restore_global ()\n   lineno = ctxp->lineno;\n   current_class = ctxp->current_class;\n   input_filename = ctxp->filename;\n+  ctxp->saved_data = 0;\n   current_function_decl = ctxp->current_function_decl;\n-  if (!ctxp->next && extra_ctxp_pushed_p)\n-    {\n-      java_pop_parser_context (0);\n-      extra_ctxp_pushed_p = 0;\n-    }\n+  if (ctxp->saved_data_ctx)\n+    java_pop_parser_context (0);\n }\n \n void \n@@ -2444,6 +2454,44 @@ java_pop_parser_context (generate)\n     free (toFree);\n }\n \n+/* Dump the stacked up parser contexts. Intended to be called from a\n+   debugger.  */\n+\n+static void\n+java_debug_context_do (tab)\n+     int tab;\n+{\n+#define JAVA_TAB_CONTEXT(C) \\\n+  {int i; for (i = 0; i < (C); i++) fputc (' ', stderr);}\n+\n+  struct parser_ctxt *copy = ctxp;\n+  while (copy)\n+    {\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"ctxt: 0x%0lX\\n\", (unsigned long)copy);\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"filename: %s\\n\", copy->filename);\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"package: %s\\n\",\n+\t       (copy->package ? \n+\t\tIDENTIFIER_POINTER (copy->package) : \"<none>\"));\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"context for saving: %d\\n\", copy->saved_data_ctx);\n+      JAVA_TAB_CONTEXT (tab);\n+      fprintf (stderr, \"saved data: %d\\n\", copy->saved_data);\n+      copy = copy->next;\n+      tab += 2;\n+    }\n+#undef JAVA_TAB_CONTEXT\n+}\n+\n+void\n+java_debug_context ()\n+{\n+  java_debug_context_do (0);\n+}\n+\n+\n /* Reporting an constructor invocation error.  */\n static void\n parse_ctor_invocation_error ()\n@@ -4311,7 +4359,7 @@ do_resolve_class (class_type, decl, cl)\n     return NULL_TREE;\n \n   /* 2- And check for the type in the current compilation unit. If it fails,\n-     try with a name qualified with the package name if appropriate. */\n+     try with a name qualified with the package name we've seen so far */\n   if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n     {\n       if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n@@ -4321,40 +4369,29 @@ do_resolve_class (class_type, decl, cl)\n     }\n \n   original_name = TYPE_NAME (class_type);\n-  if (!QUALIFIED_P (TYPE_NAME (class_type)) && ctxp->package)\n-    TYPE_NAME (class_type) = merge_qualified_name (ctxp->package, \n-\t\t\t\t\t\t   TYPE_NAME (class_type));\n-#if 1\n-  if (!(new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n-    load_class (TYPE_NAME (class_type), 0);\n-  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n-    {\n-      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n-\t  !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n-\tload_class (TYPE_NAME (class_type), 0);\n-      return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n-    }\n-#else\n-  new_name = TYPE_NAME (class_type);\n-  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (new_name)) != NULL_TREE)\n-    {\n-      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n-          !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n-        load_class (new_name, 0);\n-      return IDENTIFIER_CLASS_VALUE (new_name);\n-    }\n-  else\n+  if (!QUALIFIED_P (TYPE_NAME (class_type)))\n     {\n-      tree class = read_class (new_name);\n-      if (class != NULL_TREE)\n+      tree package;\n+      for (package = package_list; package; package = TREE_CHAIN (package))\n \t{\n-\t  tree decl = IDENTIFIER_CLASS_VALUE (new_name);\n-\t  if (decl == NULL_TREE)\n-\t    decl = push_class (class, new_name);\n-\t  return decl;\n+\t  tree new_qualified;\n+\t  \n+\t  new_qualified = merge_qualified_name (TREE_PURPOSE (package),\n+\t\t\t\t\t\toriginal_name);\n+\t  TYPE_NAME (class_type) = new_qualified;\n+\t  new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\t  if (!new_class_decl)\n+\t    load_class (TYPE_NAME (class_type), 0);\n+\t  new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\t  if (new_class_decl)\n+\t    {\n+\t      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n+\t\t  !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n+\t\tload_class (TYPE_NAME (class_type), 0);\n+\t      return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n+\t    }\n \t}\n     }\n-#endif\n   TYPE_NAME (class_type) = original_name;\n \n   /* 3- Check an other compilation unit that bears the name of type */\n@@ -6079,7 +6116,6 @@ java_pre_expand_clinit (decl)\n      tree decl;\n {\n   tree fbody = DECL_FUNCTION_BODY (decl);\n-  tree list;\n   int to_return = 1;\n \n   if (fbody != NULL_TREE)"}]}