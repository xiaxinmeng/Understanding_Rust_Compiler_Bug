{"sha": "9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0NWE0MzI4YTlhZDJiNzJjZmRkNmE4NDhlODZkOGFiZGZhMjZmZA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-14T08:49:23Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-14T08:49:23Z"}, "message": "AVX-512. 72/n.  Extend VI itterator.\n\ngcc/\n\t* config/i386/i386.c\n\t(ix86_expand_vector_logical_operator): Handle V16SF and V8DF modes.\n\t* config/i386/sse.md\n\t(define_mode_iterator VI): Add V64QI and V32HI modes.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216190", "tree": {"sha": "4a0f4fac8bc99aa055f11442abf83a3b93fc0c79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a0f4fac8bc99aa055f11442abf83a3b93fc0c79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/comments", "author": null, "committer": null, "parents": [{"sha": "7c3a34ae948d77db7c2a4fc31c3ec1d0e1f5855e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3a34ae948d77db7c2a4fc31c3ec1d0e1f5855e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3a34ae948d77db7c2a4fc31c3ec1d0e1f5855e"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "b589752af4bc36ee0770cdf49f11599695060fff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "patch": "@@ -1,3 +1,17 @@\n+2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c\n+\t(ix86_expand_vector_logical_operator): Handle V16SF and V8DF modes.\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VI): Add V64QI and V32HI modes.\n+\n 2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "c4f2da1c04db8dabbc29d24d1c18ac0b545d768d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "patch": "@@ -17540,8 +17540,10 @@ ix86_expand_vector_logical_operator (enum rtx_code code, enum machine_mode mode,\n \t{\n \tcase V4SFmode:\n \tcase V8SFmode:\n+\tcase V16SFmode:\n \tcase V2DFmode:\n \tcase V4DFmode:\n+\tcase V8DFmode:\n \t  dst = gen_reg_rtx (GET_MODE (SUBREG_REG (op1)));\n \t  if (GET_CODE (op2) == CONST_VECTOR)\n \t    {"}, {"sha": "0125cd1b285cda8ddfe9b5e70a5d56e4f83939f5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=9945a4328a9ad2b72cfdd6a848e86d8abdfa26fd", "patch": "@@ -264,8 +264,8 @@\n ;; All vector integer modes\n (define_mode_iterator VI\n   [(V16SI \"TARGET_AVX512F\") (V8DI \"TARGET_AVX512F\")\n-   (V32QI \"TARGET_AVX\") V16QI\n-   (V16HI \"TARGET_AVX\") V8HI\n+   (V64QI \"TARGET_AVX512BW\") (V32QI \"TARGET_AVX\") V16QI\n+   (V32HI \"TARGET_AVX512BW\") (V16HI \"TARGET_AVX\") V8HI\n    (V8SI \"TARGET_AVX\") V4SI\n    (V4DI \"TARGET_AVX\") V2DI])\n "}]}