{"sha": "cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmYTNlYzMyN2M0NDQ5MWVjOWMxNDFjNjQ3NmJhMWQ2ZGY2MzllOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-03-13T18:38:45Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-03-13T18:38:45Z"}, "message": "PR c++/88979 - further P0634 fix for constructors.\n\n\t* parser.c (cp_parser_decl_specifier_seq): Pass flags to\n\tcp_parser_constructor_declarator_p.\n\t(cp_parser_direct_declarator): Allow missing typename for constructor\n\tparameters.\n\t(cp_parser_constructor_declarator_p): Add FLAGS parameter.  Pass it to\n\tcp_parser_type_specifier.\n\n\t* g++.dg/cpp2a/typename15.C: New test.\n\nFrom-SVN: r269656", "tree": {"sha": "662430d3b23787de10c4a5be58ac473ddb0c7fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/662430d3b23787de10c4a5be58ac473ddb0c7fee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "129ef157d4c0f369de9a5966b9f64bf9634e7d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129ef157d4c0f369de9a5966b9f64bf9634e7d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129ef157d4c0f369de9a5966b9f64bf9634e7d83"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "2e06623efaf340a8bb9d531e5b048559dd3b3096", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "patch": "@@ -1,3 +1,13 @@\n+2019-03-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88979 - further P0634 fix for constructors.\n+\t* parser.c (cp_parser_decl_specifier_seq): Pass flags to\n+\tcp_parser_constructor_declarator_p.\n+\t(cp_parser_direct_declarator): Allow missing typename for constructor\n+\tparameters.\n+\t(cp_parser_constructor_declarator_p): Add FLAGS parameter.  Pass it to\n+\tcp_parser_type_specifier.\n+\n 2019-03-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/86521 - wrong overload resolution with ref-qualifiers."}, {"sha": "8244366e669a4cab856b98d72b64fb5762ddaa9a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "patch": "@@ -2506,7 +2506,7 @@ static cp_expr cp_parser_simple_cast_expression\n static tree cp_parser_global_scope_opt\n   (cp_parser *, bool);\n static bool cp_parser_constructor_declarator_p\n-  (cp_parser *, bool);\n+  (cp_parser *, cp_parser_flags, bool);\n static tree cp_parser_function_definition_from_specifiers_and_declarator\n   (cp_parser *, cp_decl_specifier_seq *, tree, const cp_declarator *);\n static tree cp_parser_function_definition_after_declarator\n@@ -14052,7 +14052,8 @@ cp_parser_decl_specifier_seq (cp_parser* parser,\n \t= (!found_decl_spec\n \t   && constructor_possible_p\n \t   && (cp_parser_constructor_declarator_p\n-\t       (parser, decl_spec_seq_has_spec_p (decl_specs, ds_friend))));\n+\t       (parser, flags, decl_spec_seq_has_spec_p (decl_specs,\n+\t\t\t\t\t\t\t ds_friend))));\n \n       /* If we don't have a DECL_SPEC yet, then we must be looking at\n \t a type-specifier.  */\n@@ -21160,7 +21161,13 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t    tree decl\n \t\t      = cp_parser_lookup_name_simple (parser, unqualified_name,\n \t\t\t\t\t\t      token->location);\n-\t\t    if (!is_overloaded_fn (decl))\n+\t\t    if (!is_overloaded_fn (decl)\n+\t\t\t/* Allow\n+\t\t\t   template<typename T>\n+\t\t\t   A<T>::A(T::type) { }  */\n+\t\t\t&& !(MAYBE_CLASS_TYPE_P (qualifying_scope)\n+\t\t\t     && constructor_name_p (unqualified_name,\n+\t\t\t\t\t\t    qualifying_scope)))\n \t\t      flags &= ~CP_PARSER_FLAGS_TYPENAME_OPTIONAL;\n \t\t  }\n \t      }\n@@ -27380,10 +27387,12 @@ cp_parser_global_scope_opt (cp_parser* parser, bool current_scope_valid_p)\n \n /* Returns TRUE if the upcoming token sequence is the start of a\n    constructor declarator or C++17 deduction guide.  If FRIEND_P is true, the\n-   declarator is preceded by the `friend' specifier.  */\n+   declarator is preceded by the `friend' specifier.  The parser flags FLAGS\n+   is used to control type-specifier parsing.  */\n \n static bool\n-cp_parser_constructor_declarator_p (cp_parser *parser, bool friend_p)\n+cp_parser_constructor_declarator_p (cp_parser *parser, cp_parser_flags flags,\n+\t\t\t\t    bool friend_p)\n {\n   bool constructor_p;\n   bool outside_class_specifier_p;\n@@ -27562,9 +27571,10 @@ cp_parser_constructor_declarator_p (cp_parser *parser, bool friend_p)\n \t    = parser->num_template_parameter_lists;\n \t  parser->num_template_parameter_lists = 0;\n \n-\t  /* Look for the type-specifier.  */\n+\t  /* Look for the type-specifier.  It's not optional, but its typename\n+\t     might be.  */\n \t  cp_parser_type_specifier (parser,\n-\t\t\t\t    CP_PARSER_FLAGS_NONE,\n+\t\t\t\t    (flags & ~CP_PARSER_FLAGS_OPTIONAL),\n \t\t\t\t    /*decl_specs=*/NULL,\n \t\t\t\t    /*is_declarator=*/true,\n \t\t\t\t    /*declares_class_or_enum=*/NULL,"}, {"sha": "0abb39bdb47b246bcb6bf149f60035fb386dc727", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "patch": "@@ -1,3 +1,8 @@\n+2019-03-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88979 - further P0634 fix for constructors.\n+\t* g++.dg/cpp2a/typename15.C: New test.\n+\n 2019-03-13  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/89662"}, {"sha": "9094190cec97cb2d82db53a19620bb695ec7129a", "filename": "gcc/testsuite/g++.dg/cpp2a/typename15.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ftypename15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfa3ec327c44491ec9c141c6476ba1d6df639e9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ftypename15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Ftypename15.C?ref=cbfa3ec327c44491ec9c141c6476ba1d6df639e9", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/88979\n+// { dg-do compile { target c++2a } }\n+\n+template<typename T>\n+struct B {\n+  B(T::type);\n+};\n+\n+template<typename T>\n+struct A {\n+  A(T::type);\n+};\n+\n+template<typename T>\n+A<T>::A(T::type) { }"}]}