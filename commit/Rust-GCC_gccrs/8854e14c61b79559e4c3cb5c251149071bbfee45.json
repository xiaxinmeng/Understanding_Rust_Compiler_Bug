{"sha": "8854e14c61b79559e4c3cb5c251149071bbfee45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg1NGUxNGM2MWI3OTU1OWU0YzNjYjVjMjUxMTQ5MDcxYmJmZWU0NQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-04-03T01:05:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-04-03T01:05:50Z"}, "message": "natFileChannelPosix.cc (mapImpl): Extend file, when writing, if it is too short.\n\n\thttp://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=205157\n\t* gnu/java/nio/channels/natFileChannelPosix.cc (mapImpl): Extend\n\tfile, when writing, if it is too short.\n\nFrom-SVN: r123447", "tree": {"sha": "9ae78a4b8566fce3477c8dc37e366d1f366630d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae78a4b8566fce3477c8dc37e366d1f366630d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8854e14c61b79559e4c3cb5c251149071bbfee45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8854e14c61b79559e4c3cb5c251149071bbfee45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8854e14c61b79559e4c3cb5c251149071bbfee45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8854e14c61b79559e4c3cb5c251149071bbfee45/comments", "author": null, "committer": null, "parents": [{"sha": "cb7ad97b41523821a88dd4a4943fa62507927fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7ad97b41523821a88dd4a4943fa62507927fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7ad97b41523821a88dd4a4943fa62507927fd6"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "9602e296f1d157b0c040bea86c3ab243efcce2c9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8854e14c61b79559e4c3cb5c251149071bbfee45/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8854e14c61b79559e4c3cb5c251149071bbfee45/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8854e14c61b79559e4c3cb5c251149071bbfee45", "patch": "@@ -1,3 +1,9 @@\n+2007-04-02  Tom Tromey  <tromey@redhat.com>\n+\n+\thttp://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=205157\n+\t* gnu/java/nio/channels/natFileChannelPosix.cc (mapImpl): Extend\n+\tfile, when writing, if it is too short.\n+\n 2007-04-02  Tom Tromey  <tromey@redhat.com>\n \n \thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=233406"}, {"sha": "e05904c5026fd02e8c36b4b287100e8d0fa72546", "filename": "libjava/gnu/java/nio/channels/natFileChannelPosix.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8854e14c61b79559e4c3cb5c251149071bbfee45/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8854e14c61b79559e4c3cb5c251149071bbfee45/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2Fchannels%2FnatFileChannelPosix.cc?ref=8854e14c61b79559e4c3cb5c251149071bbfee45", "patch": "@@ -1,7 +1,7 @@\n \n // natFileChannelImplPosix.cc - Native part of FileChannelImpl class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -499,6 +499,18 @@ FileChannelImpl::mapImpl (jchar mmode, jlong position, jint size)\n     {\n       prot = PROT_READ|PROT_WRITE;\n       flags = mmode == '+' ? MAP_SHARED : MAP_PRIVATE;\n+\n+      // If the file is too short, we must extend it.  While using\n+      // ftruncate() to extend a file is not portable in general, it\n+      // should work on all systems where you can mmap() a file.\n+      struct stat st;\n+      if (fstat (fd, &st) == -1)\n+\tthrow new IOException (JvNewStringLatin1 (strerror (errno)));\n+      if (position + size > st.st_size)\n+\t{\n+\t  if (ftruncate (fd, position + size) == -1)\n+\t    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n+\t}\n     }\n   jint page_size = ::getpagesize();\n   jint offset = position & ~(page_size-1);"}]}