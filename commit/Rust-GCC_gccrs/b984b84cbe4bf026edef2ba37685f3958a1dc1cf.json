{"sha": "b984b84cbe4bf026edef2ba37685f3958a1dc1cf", "node_id": "C_kwDOANBUbNoAKGI5ODRiODRjYmU0YmYwMjZlZGVmMmJhMzc2ODVmMzk1OGExZGMxY2Y", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2022-07-08T16:12:26Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2022-07-08T16:13:31Z"}, "message": "testsuite: Fix tree-ssa/alias-access-path-13.c on 32bit platforms (PR 106216)\n\nFor gcc.dg/tree-ssa/alias-access-path-13.c to work, SRA must think of\naccesses to foo.inn.val and to foo itself as different ones, i.e. they\nneed to have different offset and size, which on 32bit platforms they\ndo not.  Fixed by replacing a dummy long int field of the union with a\nstruct of two integers.\n\nTested by:\n  make -k check-gcc RUNTESTFLAGS=\"tree-ssa.exp=alias-access-path-13.c\" and\n  make -k check-gcc RUNTESTFLAGS=\"--target_board=unix'{-m32}' tree-ssa.exp=alias-access-path-13.c\"\non an x86_64-linux, also with patched SRA to verify it still tests the\noriginal intent.\n\ngcc/testsuite/ChangeLog:\n\n2022-07-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR testsuite/106216\n\t* gcc.dg/tree-ssa/alias-access-path-13.c (union foo): Replace a long\n\tint field with a struct that is larger than an int also on 32bit\n\tplatforms.", "tree": {"sha": "20223d6b77796b686617c17feb3cdb94dec75ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20223d6b77796b686617c17feb3cdb94dec75ab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b984b84cbe4bf026edef2ba37685f3958a1dc1cf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmLIV6sACgkQv2PBvD+k\nNUDeCQ//d5XJuMoh+PZB0tGKo2WrtopYJD5HqQ1I4P/YXpJVwo4Bgc2i9lfYqliy\nvucclqb9i5ynfvkenrsj0uv2mCL2mehp8lSeI9kkDvZfbucsnQkFR99fOWiwMQFN\nwgodNvwN5goX5/E1T+8UcjILLNOl1Tsd85oUzSR7gwwgGAeHs7KAzT8EogRxItys\nDEBdArZDO9Fk7pYGpGRrnt/B1EOHCN12AYa24D0+ZSoIZ2+svCq+cZtaysF7S+YC\nX8nXF2HfQZu+Ffvy287ORqybKncLtwHCozxiJwjHAtYSXWw2wPPTxtXo8Ouk0ixa\nBLyYjSGsxkhPiWRPPv1KM143rH1HbAYqD3lc9ibjtyXknrLPRx9moDItHe9JMMPY\nmrmTugRKDQCaDPKjPaij2eSpgcBrxd3o0q07RMoJO1seoyVe901Uqm75cLNZlrF0\nCHD8vGNhh+czPUn8QYZptHpXCCwyoLf6LV7RhPUSRwCa1P1SeCIjpeJFCWWpL+UV\nsr2T36CRwhgwZPqpS/kWyx4n3NVxWprXqI6VA2Ood2vew8FyCkksnT9WSFgoOZJk\nOAKd1Um02x/uuPBdOqRyEsYzNisozboybxfoZ+4c1uKeolSLBHr+7Ha1x8v4Ojcy\nUcHAsBxJN9HmNCqd5NLic9Fc+cOeQw9PJ2FmyITrs1hlqUct4x8=\n=nd5i\n-----END PGP SIGNATURE-----", "payload": "tree 20223d6b77796b686617c17feb3cdb94dec75ab4\nparent 2bd15617e73acf76207127e5580cd10b1fab91a5\nauthor Martin Jambor <mjambor@suse.cz> 1657296746 +0200\ncommitter Martin Jambor <mjambor@suse.cz> 1657296811 +0200\n\ntestsuite: Fix tree-ssa/alias-access-path-13.c on 32bit platforms (PR 106216)\n\nFor gcc.dg/tree-ssa/alias-access-path-13.c to work, SRA must think of\naccesses to foo.inn.val and to foo itself as different ones, i.e. they\nneed to have different offset and size, which on 32bit platforms they\ndo not.  Fixed by replacing a dummy long int field of the union with a\nstruct of two integers.\n\nTested by:\n  make -k check-gcc RUNTESTFLAGS=\"tree-ssa.exp=alias-access-path-13.c\" and\n  make -k check-gcc RUNTESTFLAGS=\"--target_board=unix'{-m32}' tree-ssa.exp=alias-access-path-13.c\"\non an x86_64-linux, also with patched SRA to verify it still tests the\noriginal intent.\n\ngcc/testsuite/ChangeLog:\n\n2022-07-08  Martin Jambor  <mjambor@suse.cz>\n\n\tPR testsuite/106216\n\t* gcc.dg/tree-ssa/alias-access-path-13.c (union foo): Replace a long\n\tint field with a struct that is larger than an int also on 32bit\n\tplatforms.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b984b84cbe4bf026edef2ba37685f3958a1dc1cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b984b84cbe4bf026edef2ba37685f3958a1dc1cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b984b84cbe4bf026edef2ba37685f3958a1dc1cf/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bd15617e73acf76207127e5580cd10b1fab91a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd15617e73acf76207127e5580cd10b1fab91a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd15617e73acf76207127e5580cd10b1fab91a5"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "87a94f5bf315f78bbc4438e27674f33f940c92fd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-access-path-13.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b984b84cbe4bf026edef2ba37685f3958a1dc1cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b984b84cbe4bf026edef2ba37685f3958a1dc1cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-13.c?ref=b984b84cbe4bf026edef2ba37685f3958a1dc1cf", "patch": "@@ -6,10 +6,15 @@ struct inn\n   int val;\n };\n \n+struct biggerstruct\n+{\n+  int a, b;\n+};\n+\n union foo\n {\n   struct inn inn;\n-  long int baz;\n+  struct biggerstruct baz;\n } *fooptr;\n \n struct bar"}]}