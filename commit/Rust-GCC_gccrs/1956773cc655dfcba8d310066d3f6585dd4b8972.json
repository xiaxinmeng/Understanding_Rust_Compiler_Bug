{"sha": "1956773cc655dfcba8d310066d3f6585dd4b8972", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk1Njc3M2NjNjU1ZGZjYmE4ZDMxMDA2NmQzZjY1ODVkZDRiODk3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-27T09:45:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-27T09:45:30Z"}, "message": "gimplify: Don't optimize register const vars to static [PR93949]\n\nThe following testcase is rejected, while it was accepted in 3.4 and earlier\n(before tree-ssa merge).\nThe problem is that we decide to promote the const variable to TREE_STATIC,\nbut TREE_STATIC DECL_REGISTER VAR_DECLs may only be the global register vars\nand so assemble_variable/make_decl_rtl diagnoses it.\n\nEither we do what the following patch does, where we could consider\nregister as a hint the user doesn't want such optimization, because if\nsomething is forced static, it is not \"register\" anymore and register static\nis not valid in C either, or we could clear DECL_REGISTER instead, but would\nstill need to punt at least on DECL_HARD_REGISTER cases.\n\n2020-02-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/93949\n\t* gimplify.c (gimplify_init_constructor): Don't promote readonly\n\tDECL_REGISTER variables to TREE_STATIC.\n\n\t* gcc.c-torture/compile/pr93949.c: New test.", "tree": {"sha": "97912090e49accaad698355da78281533048d1a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97912090e49accaad698355da78281533048d1a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1956773cc655dfcba8d310066d3f6585dd4b8972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1956773cc655dfcba8d310066d3f6585dd4b8972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1956773cc655dfcba8d310066d3f6585dd4b8972", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1956773cc655dfcba8d310066d3f6585dd4b8972/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f9cd512c4278621435cce486dd00248ea2e821c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9cd512c4278621435cce486dd00248ea2e821c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f9cd512c4278621435cce486dd00248ea2e821c"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "d8cfd09daa8b27a4c71c106dc983f7e240885896", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1956773cc655dfcba8d310066d3f6585dd4b8972", "patch": "@@ -1,5 +1,9 @@\n 2020-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/93949\n+\t* gimplify.c (gimplify_init_constructor): Don't promote readonly\n+\tDECL_REGISTER variables to TREE_STATIC.\n+\n \tPR tree-optimization/93582\n \tPR tree-optimization/93945\n \t* tree-ssa-sccvn.c (vn_reference_lookup_3): Handle memset with"}, {"sha": "ef531f3fd7b63fcd2dba9b2115abc920c6a8a647", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=1956773cc655dfcba8d310066d3f6585dd4b8972", "patch": "@@ -4923,6 +4923,7 @@ gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t    && num_nonzero_elements > 1\n \t    && TREE_READONLY (object)\n \t    && VAR_P (object)\n+\t    && !DECL_REGISTER (object)\n \t    && (flag_merge_constants >= 2 || !TREE_ADDRESSABLE (object))\n \t    /* For ctors that have many repeated nonzero elements\n \t       represented through RANGE_EXPRs, prefer initializing"}, {"sha": "3cc13f91949f4f6bfc53af7674789c8fb9d81d27", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1956773cc655dfcba8d310066d3f6585dd4b8972", "patch": "@@ -1,5 +1,8 @@\n 2020-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/93949\n+\t* gcc.c-torture/compile/pr93949.c: New test.\n+\n \tPR tree-optimization/93582\n \tPR tree-optimization/93945\n \t* gcc.dg/tree-ssa/pr93582-9.c: New test."}, {"sha": "bbda0209802ef76147e2d0c278590fb79664e3d5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr93949.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93949.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1956773cc655dfcba8d310066d3f6585dd4b8972/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93949.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr93949.c?ref=1956773cc655dfcba8d310066d3f6585dd4b8972", "patch": "@@ -0,0 +1,7 @@\n+/* PR c/93949 */\n+\n+void\n+foo (void)\n+{\n+  register const double d[3] = { 0., 1., 2. };\n+}"}]}