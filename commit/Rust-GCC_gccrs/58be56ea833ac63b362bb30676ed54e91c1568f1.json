{"sha": "58be56ea833ac63b362bb30676ed54e91c1568f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiZTU2ZWE4MzNhYzYzYjM2MmJiMzA2NzZlZDU0ZTkxYzE1NjhmMQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2006-04-11T18:29:16Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2006-04-11T18:29:16Z"}, "message": "pa.md (MAX_12BIT_OFFSET, [...]): Define and use new symbolic constants in branch patterns.\n\n\t* pa.md (MAX_12BIT_OFFSET, MAX_17BIT_OFFSET): Define and use new\n\tsymbolic constants in branch patterns.\n\nFrom-SVN: r112864", "tree": {"sha": "e46cf4044c8ad4a046b1ffdb09814060c6b15ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e46cf4044c8ad4a046b1ffdb09814060c6b15ecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58be56ea833ac63b362bb30676ed54e91c1568f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58be56ea833ac63b362bb30676ed54e91c1568f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58be56ea833ac63b362bb30676ed54e91c1568f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58be56ea833ac63b362bb30676ed54e91c1568f1/comments", "author": null, "committer": null, "parents": [{"sha": "f6c4ed084dd6ff0f106815f53762d08e5dbf82fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c4ed084dd6ff0f106815f53762d08e5dbf82fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c4ed084dd6ff0f106815f53762d08e5dbf82fc"}], "stats": {"total": 185, "additions": 100, "deletions": 85}, "files": [{"sha": "b03e660e046625b138df2982739ac41ab10cd4f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58be56ea833ac63b362bb30676ed54e91c1568f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58be56ea833ac63b362bb30676ed54e91c1568f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58be56ea833ac63b362bb30676ed54e91c1568f1", "patch": "@@ -1,3 +1,8 @@\n+2006-04-11  John David Anglin  <dava.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.md (MAX_12BIT_OFFSET, MAX_17BIT_OFFSET): Define and use new\n+\tsymbolic constants in branch patterns.\n+\n 2006-04-11  Roger Sayle  <roger@eyesopen.com>\n \n \t* caller-save.c: #include \"addresses.h\" after #include \"tm_p.h\"."}, {"sha": "0853bb8ac394215b2646a11fe7441c5cc7d579c6", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 95, "deletions": 85, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58be56ea833ac63b362bb30676ed54e91c1568f1/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58be56ea833ac63b362bb30676ed54e91c1568f1/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=58be56ea833ac63b362bb30676ed54e91c1568f1", "patch": "@@ -1,6 +1,6 @@\n ;;- Machine description for HP PA-RISC architecture for GCC compiler\n ;;   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-;;   2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+;;   2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n ;;   Contributed by the Center for Software Science at the University\n ;;   of Utah.\n \n@@ -52,6 +52,16 @@\n    (UNSPECV_LONGJMP\t5)\t; builtin_longjmp\n   ])\n \n+;; Maximum pc-relative branch offsets.\n+\n+;; These numbers are a bit smaller than the maximum allowable offsets\n+;; so that a few instructions may be inserted before the actual branch.\n+\n+(define_constants\n+  [(MAX_12BIT_OFFSET     8184)\t; 12-bit branch\n+   (MAX_17BIT_OFFSET   262100)\t; 17-bit branch\n+  ])\n+\n ;; Insn type.  Used to default other attribute values.\n \n ;; type \"unary\" insns have one input operand (1) and one output operand (0)\n@@ -1713,10 +1723,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -1742,10 +1752,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -1769,10 +1779,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -1798,10 +1808,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -1824,10 +1834,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -1853,10 +1863,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -1882,10 +1892,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -1910,10 +1920,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -1938,10 +1948,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -1966,10 +1976,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -1994,10 +2004,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2022,10 +2032,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2050,10 +2060,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2078,10 +2088,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2107,10 +2117,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2135,10 +2145,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2163,10 +2173,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2191,10 +2201,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2219,10 +2229,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2247,10 +2257,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2275,10 +2285,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2303,10 +2313,10 @@\n [(set_attr \"type\" \"cbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -2355,7 +2365,7 @@\n [(set_attr \"type\" \"fbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 32)\n@@ -2399,7 +2409,7 @@\n [(set_attr \"type\" \"fbranch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 12)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 28)\n@@ -7181,11 +7191,11 @@\n     (cond [(eq (symbol_ref \"jump_in_call_delay (insn)\") (const_int 1))\n \t   (if_then_else (lt (abs (minus (match_dup 0)\n \t\t\t\t\t (plus (pc) (const_int 8))))\n-\t\t\t     (const_int 8184))\n+\t\t\t     (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (const_int 8))\n \t   (lt (abs (minus (match_dup 0) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 4)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 20)\n@@ -9007,10 +9017,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n ;; Short branch has length of 4\n ;; Long branch has length of 8, 20, 24 or 28\n \t(cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9023,21 +9033,21 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t(if_then_else (eq_attr \"alternative\" \"1\")\n \t  (if_then_else (lt (match_dup 3) (pc))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 24))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 24)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 24))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 28)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 44)\n \t\t    (eq (symbol_ref \"flag_pic\") (const_int 0))\n \t\t    (const_int 40)]\n \t\t  (const_int 48))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 24)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 28)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 44)\n@@ -9049,21 +9059,21 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n ;; Extra goo to deal with additional reload insns.\n \t(if_then_else (lt (match_dup 3) (pc))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 12))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 12)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 12))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 16)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 32)\n \t\t    (eq (symbol_ref \"flag_pic\") (const_int 0))\n \t\t    (const_int 28)]\n \t\t  (const_int 36))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 12)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 16)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 32)\n@@ -9090,10 +9100,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n ;; Short branch has length of 4\n ;; Long branch has length of 8, 20, 24 or 28\n         (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9106,21 +9116,21 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t(if_then_else (eq_attr \"alternative\" \"1\")\n \t  (if_then_else (lt (match_dup 3) (pc))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 12))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 12)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 12))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 16)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 32)\n \t\t    (eq (symbol_ref \"flag_pic\") (const_int 0))\n \t\t    (const_int 28)]\n \t\t  (const_int 36))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 12)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 16)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 32)\n@@ -9131,10 +9141,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n ;; Loop counter in memory or sar case.\n ;; Extra goo to deal with additional reload insns.\n \t(cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t   (const_int 8184))\n+\t\t   (const_int MAX_12BIT_OFFSET))\n \t\t(const_int 8)\n \t\t(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t  (const_int 262100))\n+\t\t  (const_int MAX_17BIT_OFFSET))\n \t\t(const_int 12)\n \t\t(ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t(const_int 28)\n@@ -9162,10 +9172,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n ;; Short branch has length of 4\n ;; Long branch has length of 8\n         (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9178,21 +9188,21 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n \t(if_then_else (eq_attr \"alternative\" \"1\")\n \t  (if_then_else (lt (match_dup 3) (pc))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 12))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 12)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 12))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 16)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 32)\n \t\t    (eq (symbol_ref \"flag_pic\") (const_int 0))\n \t\t    (const_int 28)]\n \t\t  (const_int 36))\n \t     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 8184))\n+\t\t      (const_int MAX_12BIT_OFFSET))\n \t\t    (const_int 12)\n \t\t    (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t      (const_int 262100))\n+\t\t      (const_int MAX_17BIT_OFFSET))\n \t\t    (const_int 16)\n \t\t    (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t    (const_int 32)\n@@ -9203,10 +9213,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n ;; Loop counter in memory or SAR case.\n ;; Extra goo to deal with additional reload insns.\n \t(cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t   (const_int 8184))\n+\t\t   (const_int MAX_12BIT_OFFSET))\n \t\t(const_int 8)\n \t\t(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t\t  (const_int 262100))\n+\t\t  (const_int MAX_17BIT_OFFSET))\n \t\t(const_int 12)\n \t\t(ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t\t(const_int 28)\n@@ -9227,10 +9237,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n [(set_attr \"type\" \"parallel_branch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 3) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9250,10 +9260,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n [(set_attr \"type\" \"parallel_branch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9273,10 +9283,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n [(set_attr \"type\" \"parallel_branch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9296,10 +9306,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n [(set_attr \"type\" \"parallel_branch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)\n@@ -9319,10 +9329,10 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n [(set_attr \"type\" \"parallel_branch\")\n  (set (attr \"length\")\n     (cond [(lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 8184))\n+\t       (const_int MAX_12BIT_OFFSET))\n \t   (const_int 4)\n \t   (lt (abs (minus (match_dup 2) (plus (pc) (const_int 8))))\n-\t       (const_int 262100))\n+\t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n \t   (const_int 24)"}]}