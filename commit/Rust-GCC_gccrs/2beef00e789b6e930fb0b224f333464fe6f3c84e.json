{"sha": "2beef00e789b6e930fb0b224f333464fe6f3c84e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJlZWYwMGU3ODliNmU5MzBmYjBiMjI0ZjMzMzQ2NGZlNmYzYzg0ZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-07-10T04:50:15Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-07-10T04:50:15Z"}, "message": "[multiple changes]\n\n2001-12-13  Alexandre Oliva  <aoliva@redhat.com>\n* config/mn10300/linux.h (LINK_SPEC): Rename the dynamic linker\nfrom ld-linux.so.2 to ld.so.1.\n2001-11-18  Alexandre Oliva  <aoliva@redhat.com>\n* config/mn10300/linux.h (LINK_SPEC): -lpthread, not -lthread.\n* config/mn10300/linux.h (LINK_SPEC): Don't handle -Wl,-rpath\nnor -Wl,-rpath-link.\n(LIB_SPEC): Add -rpath-link if !static.\n2001-08-22  Alexandre Oliva  <aoliva@redhat.com>\n* config/mn10300/mn10300.c (mn10300_protect_label): New\nvariable.\n* config/mn10300/linux.h (PRINT_OPERAND,\nPRINT_OPERAND_ADDRESS): Set it during their execution.\n(ASM_OUTPUT_LABELREF): Output `+' before symbol name if\nmn10300_protect_label is set.\n* config/mn10300/linux.h (LINK_SPEC): Recognize -Wl,-rpath and\n-Wl,-rpath-link.\n(LIB_SPEC, STARTFILE_SPEC): Define.\n2001-05-11  Alexandre Oliva  <aoliva@redhat.com>\n* config/mn10300/t-linux (dp-bit.c, fp-bit.c): Don't define\nFLOAT_BIT_ORDER_MISMATCH.\n2001-05-09  Alexandre Oliva  <aoliva@redhat.com>\n* config.gcc (am33_2.0-*-linux*): Added.\n* config/mn10300/linux.h: New.\n* config/mn10300/t-linux: New.\n\nFrom-SVN: r69171", "tree": {"sha": "6d7560fd50ccbae889ab219b53a58be5d48afd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7560fd50ccbae889ab219b53a58be5d48afd44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2beef00e789b6e930fb0b224f333464fe6f3c84e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2beef00e789b6e930fb0b224f333464fe6f3c84e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2beef00e789b6e930fb0b224f333464fe6f3c84e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2beef00e789b6e930fb0b224f333464fe6f3c84e/comments", "author": null, "committer": null, "parents": [{"sha": "75040a044e3563d6168aea06f076dd1334ef0a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75040a044e3563d6168aea06f076dd1334ef0a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75040a044e3563d6168aea06f076dd1334ef0a7a"}], "stats": {"total": 174, "additions": 174, "deletions": 0}, "files": [{"sha": "8080d8860b39d049d360e017e41488e23cedc030", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2beef00e789b6e930fb0b224f333464fe6f3c84e", "patch": "@@ -1,3 +1,31 @@\n+2003-07-10  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t2001-12-13  Alexandre Oliva  <aoliva@redhat.com>\n+\t* config/mn10300/linux.h (LINK_SPEC): Rename the dynamic linker\n+\tfrom ld-linux.so.2 to ld.so.1.\n+\t2001-11-18  Alexandre Oliva  <aoliva@redhat.com>\n+\t* config/mn10300/linux.h (LINK_SPEC): -lpthread, not -lthread.\n+\t* config/mn10300/linux.h (LINK_SPEC): Don't handle -Wl,-rpath\n+\tnor -Wl,-rpath-link.\n+\t(LIB_SPEC): Add -rpath-link if !static.\n+\t2001-08-22  Alexandre Oliva  <aoliva@redhat.com>\n+\t* config/mn10300/mn10300.c (mn10300_protect_label): New\n+\tvariable.\n+\t* config/mn10300/linux.h (PRINT_OPERAND,\n+\tPRINT_OPERAND_ADDRESS): Set it during their execution.\n+\t(ASM_OUTPUT_LABELREF): Output `+' before symbol name if\n+\tmn10300_protect_label is set.\n+\t* config/mn10300/linux.h (LINK_SPEC): Recognize -Wl,-rpath and\n+\t-Wl,-rpath-link.\n+\t(LIB_SPEC, STARTFILE_SPEC): Define.\n+\t2001-05-11  Alexandre Oliva  <aoliva@redhat.com>\n+\t* config/mn10300/t-linux (dp-bit.c, fp-bit.c): Don't define\n+\tFLOAT_BIT_ORDER_MISMATCH.\n+\t2001-05-09  Alexandre Oliva  <aoliva@redhat.com>\n+\t* config.gcc (am33_2.0-*-linux*): Added.\n+\t* config/mn10300/linux.h: New.\n+\t* config/mn10300/t-linux: New.\n+\n 2003-07-10  Andreas Jaeger  <aj@suse.de>\n \n \t* fold-const.c: Properly wrap prototypes."}, {"sha": "04992e22575d6a5dc5dd41bee22ec9f73da0984a", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2beef00e789b6e930fb0b224f333464fe6f3c84e", "patch": "@@ -276,6 +276,9 @@ alpha*-*-*)\n \tcpu_type=alpha\n \tneed_64bit_hwint=yes\n \t;;\n+am33_2.0-*-linux*)\n+\tcpu_type=mn10300\n+\t;;\n strongarm*-*-*)\n \tcpu_type=arm\n \t;;\n@@ -2151,6 +2154,16 @@ xtensa-*-linux*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h xtensa/linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux xtensa/t-xtensa xtensa/t-linux\"\n \t;;\n+am33_2.0-*-linux*)\n+\ttm_file=\"mn10300/mn10300.h dbxelf.h elfos.h linux.h mn10300/linux.h\"\n+\ttmake_file=\"t-linux mn10300/t-linux\"\n+\tgas=yes gnu_ld=yes\n+\tif test x$enable_threads = xyes; then\n+\t\tthread_file='posix'\n+\tfi\n+\textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n+\tuse_collect2=no\n+\t;;\n *)\n \techo \"*** Configuration $machine not supported\" 1>&2\n \texit 1"}, {"sha": "1ae5b013110d8ed97733889ac59760464eba4680", "filename": "gcc/config/mn10300/linux.h", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig%2Fmn10300%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig%2Fmn10300%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Flinux.h?ref=2beef00e789b6e930fb0b224f333464fe6f3c84e", "patch": "@@ -0,0 +1,116 @@\n+/* Definitions of taret machine for GNU compiler.\n+   Matsushita AM33/2.0\n+   Copyright 2001, 2002 Free Software Foundation, Inc.\n+   Contributed by Alexandre Oliva <aoliva@redhat.com>\n+\n+   This file is part of GNU CC.\n+\n+   GNU CC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GNU CC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GNU CC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n+   \n+#undef  PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+    do\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+      }\t\t\t\t\t\t\\\n+    while (0)\n+\n+#undef  CPP_SPEC\n+#define CPP_SPEC \"%{mam33:-D__AM33__} %{!mam33:-D__AM33__=2 -D__AM33_2__} \\\n+  %{posix:-D_POSIX_SOURCE} \\\n+  %{pthread:-D_REENTRANT -D_PTHREADS}\"\n+\n+#undef  ASM_SPEC\n+#define ASM_SPEC \"%{Wa,*:%*}\"\n+\n+#undef  LINK_SPEC\n+#define LINK_SPEC \"%{mrelax:--relax} %{shared:-shared} \\\n+   %{!static: \\\n+     %{rdynamic:-export-dynamic} \\\n+     %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n+   %{static:-static}\"\n+\n+#undef  LIB_SPEC\n+#define LIB_SPEC \\\n+  \"%{shared: -lc} \\\n+   %{!static:-rpath-link %R/lib:%R/usr/lib} \\\n+   %{!shared: %{pthread:-lpthread} \\\n+     %{profile:-lc_p} %{!profile: -lc}}\"\n+\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: \\\n+     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} \\\n+\t\t       %{!p:%{profile:gcrt1.o%s} \\\n+\t\t\t %{!profile:crt1.o%s}}}} \\\n+   crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n+\n+#undef  TARGET_SWITCHES\n+#define TARGET_SWITCHES\t\\\n+  {{ \"am33\",\t\t-0x4,\tN_(\"Target the AM33 processor\") }, \\\n+   { \"am33-2\",\t\t6,\tN_(\"Target the AM33/2.0 processor\") }, \\\n+   { \"relax\",\t\t0,\tN_(\"Enable linker relaxations\") }, \\\n+   { \"\", TARGET_DEFAULT, NULL }}\n+\n+#undef  TARGET_DEFAULT\n+#define TARGET_DEFAULT 6\n+\n+#undef  TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (AM33/2.0 GNU/Linux)\");\n+\n+#define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n+\n+extern int mn10300_protect_label;\n+\n+#undef  PRINT_OPERAND\n+#define PRINT_OPERAND(FILE, X, CODE)\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      mn10300_protect_label = 1;\t\t\\\n+      print_operand ((FILE), (X), (CODE));\t\\\n+      mn10300_protect_label = 0;\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n+#undef  PRINT_OPERAND_ADDRESS\n+#define PRINT_OPERAND_ADDRESS(FILE, X)\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      mn10300_protect_label = 1;\t\t\\\n+      print_operand_address ((FILE), (X));\t\\\n+      mn10300_protect_label = 0;\t\t\\\n+    }\t\t\t\t\t\t\\\n+   while (0)\n+\n+#undef  ASM_OUTPUT_LABELREF\n+#define ASM_OUTPUT_LABELREF(FILE, NAME)\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      const char * real_name;\t\t\t\\\n+\t\t\t\t\t\t\\\n+      real_name = (*targetm.strip_name_encoding) (NAME);\t\\\n+      if (mn10300_protect_label)\t\t\\\n+        asm_fprintf (FILE, \"+\");\t\t\\\n+      asm_fprintf (FILE, \"%U%s\", real_name);\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)           \n+"}, {"sha": "fc22324c47e2910e2d13a7bcc974c494130fb282", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=2beef00e789b6e930fb0b224f333464fe6f3c84e", "patch": "@@ -48,6 +48,12 @@ Boston, MA 02111-1307, USA.  */\n    UNSPEC_INT_LABELs.  */\n int mn10300_unspec_int_label_counter;\n \n+/* This is used in the am33_2.0-linux-gnu port, in which global symbol\n+   names are not prefixed by underscores, to tell whether to prefix a\n+   label with a plus sign or not, so that the assembler can tell\n+   symbol names from register names.  */\n+int mn10300_protect_label;\n+\n /* The size of the callee register save area.  Right now we save everything\n    on entry since it costs us nothing in code size.  It does cost us from a\n    speed standpoint, so we want to optimize this sooner or later.  */"}, {"sha": "a80c1cf4eec0c56c627b7417370084d9e250c839", "filename": "gcc/config/mn10300/t-linux", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig%2Fmn10300%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2beef00e789b6e930fb0b224f333464fe6f3c84e/gcc%2Fconfig%2Fmn10300%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Ft-linux?ref=2beef00e789b6e930fb0b224f333464fe6f3c84e", "patch": "@@ -0,0 +1,11 @@\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c"}]}