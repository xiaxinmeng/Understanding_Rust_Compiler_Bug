{"sha": "1fde9333dc31007083ac792896820ca29837c342", "node_id": "C_kwDOANBUbNoAKDFmZGU5MzMzZGMzMTAwNzA4M2FjNzkyODk2ODIwY2EyOTgzN2MzNDI", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-11-22T11:15:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-02T16:26:22Z"}, "message": "[Ada] Refactor nested loops in warning on unassigned out parameter\n\ngcc/ada/\n\n\t* sem_warn.adb (Warn_On_Unassigned_Out_Parameter): Move inner\n\tloop at the beginning of subprogram, so it is executed only\n\tonce; fix order in the \"add an ad hoc\" phrase.", "tree": {"sha": "5b26244cec20d9601ae31b5679ada4630e8825e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b26244cec20d9601ae31b5679ada4630e8825e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fde9333dc31007083ac792896820ca29837c342", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fde9333dc31007083ac792896820ca29837c342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fde9333dc31007083ac792896820ca29837c342", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fde9333dc31007083ac792896820ca29837c342/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2e877266de127fbcd6f14e85e0c46ce4731c207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e877266de127fbcd6f14e85e0c46ce4731c207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e877266de127fbcd6f14e85e0c46ce4731c207"}], "stats": {"total": 44, "additions": 21, "deletions": 23}, "files": [{"sha": "2842a2ccb402bbb2ad760514ceb2607b5deb3485", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fde9333dc31007083ac792896820ca29837c342/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fde9333dc31007083ac792896820ca29837c342/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=1fde9333dc31007083ac792896820ca29837c342", "patch": "@@ -4237,8 +4237,7 @@ package body Sem_Warn is\n      (Return_Node : Node_Id;\n       Scope_Id    : Entity_Id)\n    is\n-      Form  : Entity_Id;\n-      Form2 : Entity_Id;\n+      Form : Entity_Id;\n \n    begin\n       --  Ignore if procedure or return statement does not come from source\n@@ -4249,6 +4248,26 @@ package body Sem_Warn is\n          return;\n       end if;\n \n+      --  Before we issue the warning, add an ad hoc defence against the most\n+      --  common case of false positives with this warning which is the case\n+      --  where there is a Boolean OUT parameter that has been set, and whose\n+      --  meaning is \"ignore the values of the other parameters\". We can't of\n+      --  course reliably tell this case at compile time, but the following\n+      --  test kills a lot of false positives, without generating a significant\n+      --  number of false negatives (missed real warnings).\n+\n+      Form := First_Formal (Scope_Id);\n+      while Present (Form) loop\n+         if Ekind (Form) = E_Out_Parameter\n+           and then Root_Type (Etype (Form)) = Standard_Boolean\n+           and then not Never_Set_In_Source_Check_Spec (Form)\n+         then\n+            return;\n+         end if;\n+\n+         Next_Formal (Form);\n+      end loop;\n+\n       --  Loop through formals\n \n       Form := First_Formal (Scope_Id);\n@@ -4263,27 +4282,6 @@ package body Sem_Warn is\n            and then Is_Scalar_Type (Etype (Form))\n            and then not Present (Unset_Reference (Form))\n          then\n-            --  Before we issue the warning, an add ad hoc defence against the\n-            --  most common case of false positives with this warning which is\n-            --  the case where there is a Boolean OUT parameter that has been\n-            --  set, and whose meaning is \"ignore the values of the other\n-            --  parameters\". We can't of course reliably tell this case at\n-            --  compile time, but the following test kills a lot of false\n-            --  positives, without generating a significant number of false\n-            --  negatives (missed real warnings).\n-\n-            Form2 := First_Formal (Scope_Id);\n-            while Present (Form2) loop\n-               if Ekind (Form2) = E_Out_Parameter\n-                 and then Root_Type (Etype (Form2)) = Standard_Boolean\n-                 and then not Never_Set_In_Source_Check_Spec (Form2)\n-               then\n-                  return;\n-               end if;\n-\n-               Next_Formal (Form2);\n-            end loop;\n-\n             --  Here all conditions are met, record possible unset reference\n \n             Set_Unset_Reference (Form, Return_Node);"}]}