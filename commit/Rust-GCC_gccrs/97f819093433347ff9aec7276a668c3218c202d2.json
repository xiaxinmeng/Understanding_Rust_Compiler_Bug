{"sha": "97f819093433347ff9aec7276a668c3218c202d2", "node_id": "C_kwDOANBUbNoAKDk3ZjgxOTA5MzQzMzM0N2ZmOWFlYzcyNzZhNjY4YzMyMThjMjAyZDI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-21T13:52:55Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-21T14:48:44Z"}, "message": "Enable configure detection of ld.mold.\n\ngcc/ChangeLog:\n\n\t* configure.ac: Detect ld_is_mold and use it for\n\tcomdat_group=yes and gcc_cv_ld_hidden=yes.\n\t* configure: Regenerate.", "tree": {"sha": "feea6fc95674fb9358f2119b15408805ac31d2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feea6fc95674fb9358f2119b15408805ac31d2e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97f819093433347ff9aec7276a668c3218c202d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f819093433347ff9aec7276a668c3218c202d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97f819093433347ff9aec7276a668c3218c202d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97f819093433347ff9aec7276a668c3218c202d2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "199cd0e0f8744ca1e61a95987b2d020a592a46d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199cd0e0f8744ca1e61a95987b2d020a592a46d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199cd0e0f8744ca1e61a95987b2d020a592a46d9"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "bd4d472186815f4fa5dcf9bd09f69fd5e72ce78d", "filename": "gcc/configure", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f819093433347ff9aec7276a668c3218c202d2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f819093433347ff9aec7276a668c3218c202d2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=97f819093433347ff9aec7276a668c3218c202d2", "patch": "@@ -23236,6 +23236,20 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_is_gold\" >&5\n $as_echo \"$ld_is_gold\" >&6; }\n \n+# Check to see if we are using mold instead of ld\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using mold\" >&5\n+$as_echo_n \"checking whether we are using mold... \" >&6; }\n+ld_is_mold=no\n+if test x$gcc_cv_ld != x; then\n+  if $gcc_cv_ld --version 2>/dev/null | sed 1q \\\n+     | grep \"mold\" > /dev/null; then\n+    ld_is_mold=yes\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ld_is_mold\" >&5\n+$as_echo \"$ld_is_mold\" >&6; }\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking gold linker with split stack support as non default\" >&5\n $as_echo_n \"checking gold linker with split stack support as non default... \" >&6; }\n # Check to see if default ld is not gold, but gold is\n@@ -24118,6 +24132,8 @@ else\n   gcc_cv_ld_hidden=yes\n   if test x\"$ld_is_gold\" = xyes; then\n     :\n+  elif test x\"$ld_is_mold\" = xyes; then\n+    :\n   elif echo \"$ld_ver\" | grep GNU > /dev/null; then\n     if test 0\"$ld_date\" -lt 20020404; then\n       if test -n \"$ld_date\"; then\n@@ -25197,6 +25213,8 @@ $as_echo \"$gcc_cv_as_comdat_group_group\" >&6; }\n fi\n if test x\"$ld_is_gold\" = xyes; then\n   comdat_group=yes\n+elif test x\"$ld_is_mold\" = xyes; then\n+  comdat_group=yes\n elif test $in_tree_ld = yes ; then\n   comdat_group=no\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 16 -o \"$gcc_cv_gld_major_version\" -gt 2 \\"}, {"sha": "1171c946e6efc196215e8c9341cd6fc43d0ca471", "filename": "gcc/configure.ac", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97f819093433347ff9aec7276a668c3218c202d2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97f819093433347ff9aec7276a668c3218c202d2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=97f819093433347ff9aec7276a668c3218c202d2", "patch": "@@ -2671,6 +2671,18 @@ if test x$gcc_cv_ld != x; then\n fi\n AC_MSG_RESULT($ld_is_gold)\n \n+# Check to see if we are using mold instead of ld\n+AC_MSG_CHECKING(whether we are using mold)\n+ld_is_mold=no\n+if test x$gcc_cv_ld != x; then\n+  if $gcc_cv_ld --version 2>/dev/null | sed 1q \\\n+     | grep \"mold\" > /dev/null; then\n+    ld_is_mold=yes\n+  fi\n+fi\n+AC_MSG_RESULT($ld_is_mold)\n+\n+\n AC_MSG_CHECKING(gold linker with split stack support as non default)\n # Check to see if default ld is not gold, but gold is\n # available and has support for split stack.  If gcc was configured\n@@ -3069,6 +3081,8 @@ else\n   gcc_cv_ld_hidden=yes\n   if test x\"$ld_is_gold\" = xyes; then\n     :\n+  elif test x\"$ld_is_mold\" = xyes; then\n+    :\n   elif echo \"$ld_ver\" | grep GNU > /dev/null; then\n     if test 0\"$ld_date\" -lt 20020404; then\n       if test -n \"$ld_date\"; then\n@@ -3538,6 +3552,8 @@ else\n fi\n if test x\"$ld_is_gold\" = xyes; then\n   comdat_group=yes\n+elif test x\"$ld_is_mold\" = xyes; then\n+  comdat_group=yes\n elif test $in_tree_ld = yes ; then\n   comdat_group=no\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 16 -o \"$gcc_cv_gld_major_version\" -gt 2 \\"}]}