{"sha": "0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlMWVjYzdiZTgxN2YwZjk2MzU0YjI2ZjBkODBmNWJmNTNkZjc2NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-29T12:31:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-29T12:31:02Z"}, "message": "re PR bootstrap/77768 (LTO/PGO -O3 bootstrap broken: tree-vrp.c:11053:0: internal compiler error: Segmentation fault)\n\n2016-09-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77768\n\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n\tHandle stores to readonly memory when removing redundant stores.\n\n\t* gcc.dg/torture/pr77768.c: New testcase.\n\nFrom-SVN: r240617", "tree": {"sha": "10160a742e289a4c4b2274325ea25c7de8d22d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10160a742e289a4c4b2274325ea25c7de8d22d9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da186c1f433028066a476955a36ce48647b13c6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da186c1f433028066a476955a36ce48647b13c6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da186c1f433028066a476955a36ce48647b13c6b"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "26dc3f95368c4e1ecf672fdaabe46a2fd36b8142", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "patch": "@@ -1,3 +1,9 @@\n+2016-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77768\n+\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n+\tHandle stores to readonly memory when removing redundant stores.\n+\n 2016-09-29  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77407"}, {"sha": "2fd9e97eede9ea35fe0f31bb36cd559a3d69112c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "patch": "@@ -1,3 +1,8 @@\n+2016-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77768\n+\t* gcc.dg/torture/pr77768.c: New testcase.\n+\n 2016-09-28  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77407"}, {"sha": "47e1484b77a6b2fb954b2162ff901e44e8bd46b4", "filename": "gcc/testsuite/gcc.dg/torture/pr77768.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77768.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77768.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77768.c?ref=0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+\n+static const int a;\n+int b;\n+int *c, *d;\n+int main()\n+{\n+  c = (int *)&a;\n+  c == d ?: __builtin_exit(0); \n+  for (; b; b++ >= (*d = a))\n+    ;\n+  return 0;\n+}"}, {"sha": "39bc2548c10a8203c1d9d433fc8781ed4c958819", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce1ecc7be817f0f96354b26f0d80f5bf53df764/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=0ce1ecc7be817f0f96354b26f0d80f5bf53df764", "patch": "@@ -4443,9 +4443,11 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n \t      && operand_equal_p (val, rhs, 0))\n \t    {\n \t      /* We can only remove the later store if the former aliases\n-\t\t at least all accesses the later one does.  */\n+\t\t at least all accesses the later one does or if the store\n+\t\t was to readonly memory storing the same value.  */\n \t      alias_set_type set = get_alias_set (lhs);\n-\t      if (vnresult->set == set\n+\t      if (! vnresult\n+\t\t  || vnresult->set == set\n \t\t  || alias_set_subset_of (set, vnresult->set))\n \t\t{\n \t\t  if (dump_file && (dump_flags & TDF_DETAILS))"}]}