{"sha": "8df56dfc6991bda3c1cfa9d102c49d963763d5b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmNTZkZmM2OTkxYmRhM2MxY2ZhOWQxMDJjNDlkOTYzNzYzZDViNA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-09-17T08:02:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-17T08:02:15Z"}, "message": "[Ada] GNATprove: avoid crash on illegal borrow during package elaboration\n\nIn GNATprove, a borrow during package elaboration is illegal, but a\ncrash could be issued when analyzing the corresponding declaration. Now\navoid analyzing the declaration in that case.\n\nThere is no test as this does not impact compilation.\n\n2019-09-17  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Check_Declaration): Do not check the assignment\n\tfrom an illegal declaration.\n\nFrom-SVN: r275788", "tree": {"sha": "c64b3a724fb79f4b421ab9ec5da0b6b89dd6387d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64b3a724fb79f4b421ab9ec5da0b6b89dd6387d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8df56dfc6991bda3c1cfa9d102c49d963763d5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df56dfc6991bda3c1cfa9d102c49d963763d5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df56dfc6991bda3c1cfa9d102c49d963763d5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df56dfc6991bda3c1cfa9d102c49d963763d5b4/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86ae194fdb343487d37899f4f51fdf3e626822e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ae194fdb343487d37899f4f51fdf3e626822e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ae194fdb343487d37899f4f51fdf3e626822e0"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "af3a2e7692de8f4793ac74f84db1209964902e9b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df56dfc6991bda3c1cfa9d102c49d963763d5b4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df56dfc6991bda3c1cfa9d102c49d963763d5b4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8df56dfc6991bda3c1cfa9d102c49d963763d5b4", "patch": "@@ -1,3 +1,8 @@\n+2019-09-17  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_spark.adb (Check_Declaration): Do not check the assignment\n+\tfrom an illegal declaration.\n+\n 2019-09-17  Bob Duff  <duff@adacore.com>\n \n \t* doc/gnat_ugn/gnat_and_program_execution.rst: Clarify"}, {"sha": "e4a8b3ecaaf9e4eef9703e7591cf72b9f8632edf", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df56dfc6991bda3c1cfa9d102c49d963763d5b4/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df56dfc6991bda3c1cfa9d102c49d963763d5b4/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=8df56dfc6991bda3c1cfa9d102c49d963763d5b4", "patch": "@@ -1419,32 +1419,36 @@ package body Sem_SPARK is\n       Target     : constant Entity_Id := Defining_Identifier (Decl);\n       Target_Typ : constant Node_Id := Etype (Target);\n       Expr       : Node_Id;\n-      Dummy      : Boolean := True;\n+      Legal      : Boolean := True;\n \n    begin\n       --  Start with legality rules not related to permissions\n \n-      Check_Declaration_Legality (Decl, Force => True, Legal => Dummy);\n+      Check_Declaration_Legality (Decl, Force => True, Legal => Legal);\n \n       --  Now check permission-related legality rules\n \n       case N_Declaration'(Nkind (Decl)) is\n          when N_Full_Type_Declaration =>\n             null;\n \n-            --  ??? What about component declarations with defaults.\n+         --  ??? What about component declarations with defaults.\n \n          when N_Subtype_Declaration =>\n             Check_Expression (Subtype_Indication (Decl), Read);\n \n          when N_Object_Declaration =>\n             Expr := Expression (Decl);\n \n-            if Present (Expr) then\n+            if Legal and then Present (Expr) then\n                Check_Assignment (Target => Target,\n                                  Expr   => Expr);\n             end if;\n \n+            --  Always add variable to the current permission environment,\n+            --  even in the illegal case, as the rest of the analysis expects\n+            --  to find it.\n+\n             if Is_Deep (Target_Typ) then\n                declare\n                   Tree : constant Perm_Tree_Access :="}]}