{"sha": "4454141ae6d2c1d80cc27ee61df135e214954b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ1NDE0MWFlNmQyYzFkODBjYzI3ZWU2MWRmMTM1ZTIxNDk1NGIxMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T05:16:14Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T05:16:14Z"}, "message": "graphite-dependences.c (pddr_transformed_scattering): New.\n\n2009-10-17  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (pddr_transformed_scattering): New.\n\t(dot_original_deps_stmt_1): New.\n\t(dot_transformed_deps_stmt_1): New.\n\t(dot_deps_stmt_1): Call dot_original_deps_stmt_1 and\n\tdot_transformed_deps_stmt_1.\n\t(dot_original_deps): New.\n\t(dot_transformed_deps): New.\n\t(dot_deps_1): Call dot_original_deps and dot_transformed_deps.\n\nFrom-SVN: r154607", "tree": {"sha": "5dc2bc59188e95525a79cbfb903ba14ff3ff83b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dc2bc59188e95525a79cbfb903ba14ff3ff83b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4454141ae6d2c1d80cc27ee61df135e214954b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4454141ae6d2c1d80cc27ee61df135e214954b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4454141ae6d2c1d80cc27ee61df135e214954b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4454141ae6d2c1d80cc27ee61df135e214954b13/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd61070df0e1779bff519cad685dab22b328db70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd61070df0e1779bff519cad685dab22b328db70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd61070df0e1779bff519cad685dab22b328db70"}], "stats": {"total": 133, "additions": 119, "deletions": 14}, "files": [{"sha": "90e3e0b4cc13db544efa8d4c8ee33de4a138681d", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4454141ae6d2c1d80cc27ee61df135e214954b13/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4454141ae6d2c1d80cc27ee61df135e214954b13/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=4454141ae6d2c1d80cc27ee61df135e214954b13", "patch": "@@ -1,8 +1,19 @@\n+2009-10-17  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (pddr_transformed_scattering): New.\n+\t(dot_original_deps_stmt_1): New.\n+\t(dot_transformed_deps_stmt_1): New.\n+\t(dot_deps_stmt_1): Call dot_original_deps_stmt_1 and\n+\tdot_transformed_deps_stmt_1.\n+\t(dot_original_deps): New.\n+\t(dot_transformed_deps): New.\n+\t(dot_deps_1): Call dot_original_deps and dot_transformed_deps.\n+\n 2009-10-17  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c (reduction_dr_1): Remove wrong\n \tassert: reduction BBs can have multiple reduction writes\n-\tto memory.\n+\tto memory.  interchange-3.f90 is an example.\n \n 2009-10-17  Sebastian Pop  <sebastian.pop@amd.com>\n "}, {"sha": "7c56f578858d19a4547dfb7d235e57737ae60e53", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 107, "deletions": 13, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4454141ae6d2c1d80cc27ee61df135e214954b13/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4454141ae6d2c1d80cc27ee61df135e214954b13/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=4454141ae6d2c1d80cc27ee61df135e214954b13", "patch": "@@ -515,8 +515,8 @@ static bool\n poly_drs_may_alias_p (poly_dr_p pdr1, poly_dr_p pdr2);\n \n /* Returns the PDDR corresponding to the original schedule, or NULL if\n-   the dependence relation is empty or unknown (Can't judge dependency\n-   under polyhedral model.  */\n+   the dependence relation is empty or unknown (cannot judge dependency\n+   under polyhedral model).  */\n \n static poly_ddr_p\n pddr_original_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n@@ -541,6 +541,34 @@ pddr_original_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n   return pddr;\n }\n \n+/* Returns the PDDR corresponding to the transformed schedule, or NULL if\n+   the dependence relation is empty or unknown (cannot judge dependency\n+   under polyhedral model).  */\n+\n+static poly_ddr_p\n+pddr_transformed_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n+\t\t\t     poly_dr_p pdr1, poly_dr_p pdr2)\n+{\n+  poly_ddr_p pddr;\n+  ppl_Pointset_Powerset_C_Polyhedron_t d1 = PBB_DOMAIN (pbb1);\n+  ppl_Pointset_Powerset_C_Polyhedron_t d2 = PBB_DOMAIN (pbb2);\n+  ppl_Polyhedron_t st1 = PBB_ORIGINAL_SCATTERING (pbb1);\n+  ppl_Polyhedron_t st2 = PBB_ORIGINAL_SCATTERING (pbb2);\n+\n+  if ((pdr_read_p (pdr1) && pdr_read_p (pdr2))\n+      || PDR_BASE_OBJECT_SET (pdr1) != PDR_BASE_OBJECT_SET (pdr2)\n+      || PDR_NB_SUBSCRIPTS (pdr1) != PDR_NB_SUBSCRIPTS (pdr2))\n+    return NULL;\n+\n+  pddr = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n+\t\t\t\ttrue, false);\n+  if (pddr_is_empty (pddr))\n+    return NULL;\n+\n+  return pddr;\n+}\n+\n+\n /* Return true when the data dependence relation between the data\n    references PDR1 belonging to PBB1 and PDR2 is part of a\n    reduction.  */\n@@ -829,55 +857,121 @@ dependency_between_pbbs_p (poly_bb_p pbb1, poly_bb_p pbb2, int level)\n   return false;\n }\n \n-/* Pretty print to FILE all the data dependences of SCoP in DOT\n-   format.  */\n+/* Pretty print to FILE all the original data dependences of SCoP in\n+   DOT format.  */\n \n static void\n-dot_deps_stmt_1 (FILE *file, scop_p scop)\n+dot_original_deps_stmt_1 (FILE *file, scop_p scop)\n {\n   int i, j, k, l;\n   poly_bb_p pbb1, pbb2;\n   poly_dr_p pdr1, pdr2;\n \n-  fputs (\"digraph all {\\n\", file);\n-\n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n     for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n       {\n \tfor (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n \t  for (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n \t    if (pddr_original_scattering (pbb1, pbb2, pdr1, pdr2))\n \t      {\n-\t\tfprintf (file, \"S%d -> S%d\\n\",\n+\t\tfprintf (file, \"OS%d -> OS%d\\n\",\n \t\t\t pbb_index (pbb1), pbb_index (pbb2));\n \t\tgoto done;\n \t      }\n       done:;\n       }\n+}\n \n-  fputs (\"}\\n\\n\", file);\n+/* Pretty print to FILE all the transformed data dependences of SCoP in\n+   DOT format.  */\n+\n+static void\n+dot_transformed_deps_stmt_1 (FILE *file, scop_p scop)\n+{\n+  int i, j, k, l;\n+  poly_bb_p pbb1, pbb2;\n+  poly_dr_p pdr1, pdr2;\n+\n+  for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n+    for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n+      {\n+\tfor (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n+\t  for (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n+\t    if (pddr_transformed_scattering (pbb1, pbb2, pdr1, pdr2))\n+\t      {\n+\t\tfprintf (file, \"TS%d -> TS%d\\n\",\n+\t\t\t pbb_index (pbb1), pbb_index (pbb2));\n+\t\tgoto done;\n+\t      }\n+      done:;\n+      }\n }\n \n+\n /* Pretty print to FILE all the data dependences of SCoP in DOT\n    format.  */\n \n static void\n-dot_deps_1 (FILE *file, scop_p scop)\n+dot_deps_stmt_1 (FILE *file, scop_p scop)\n+{\n+  fputs (\"digraph all {\\n\", file);\n+\n+  dot_original_deps_stmt_1 (file, scop);\n+  dot_transformed_deps_stmt_1 (file, scop);\n+\n+  fputs (\"}\\n\\n\", file);\n+}\n+\n+/* Pretty print to FILE all the original data dependences of SCoP in\n+   DOT format.  */\n+\n+static void\n+dot_original_deps (FILE *file, scop_p scop)\n {\n   int i, j, k, l;\n   poly_bb_p pbb1, pbb2;\n   poly_dr_p pdr1, pdr2;\n \n-  fputs (\"digraph all {\\n\", file);\n-\n   for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n     for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n       for (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n \tfor (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n \t  if (pddr_original_scattering (pbb1, pbb2, pdr1, pdr2))\n-\t    fprintf (file, \"S%d_D%d -> S%d_D%d\\n\",\n+\t    fprintf (file, \"OS%d_D%d -> OS%d_D%d\\n\",\n \t\t     pbb_index (pbb1), PDR_ID (pdr1),\n \t\t     pbb_index (pbb2), PDR_ID (pdr2));\n+}\n+\n+/* Pretty print to FILE all the transformed data dependences of SCoP in\n+   DOT format.  */\n+\n+static void\n+dot_transformed_deps (FILE *file, scop_p scop)\n+{\n+  int i, j, k, l;\n+  poly_bb_p pbb1, pbb2;\n+  poly_dr_p pdr1, pdr2;\n+\n+  for (i = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), i, pbb1); i++)\n+    for (j = 0; VEC_iterate (poly_bb_p, SCOP_BBS (scop), j, pbb2); j++)\n+      for (k = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), k, pdr1); k++)\n+\tfor (l = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), l, pdr2); l++)\n+\t  if (pddr_transformed_scattering (pbb1, pbb2, pdr1, pdr2))\n+\t    fprintf (file, \"TS%d_D%d -> TS%d_D%d\\n\",\n+\t\t     pbb_index (pbb1), PDR_ID (pdr1),\n+\t\t     pbb_index (pbb2), PDR_ID (pdr2));\n+}\n+\n+/* Pretty print to FILE all the data dependences of SCoP in DOT\n+   format.  */\n+\n+static void\n+dot_deps_1 (FILE *file, scop_p scop)\n+{\n+  fputs (\"digraph all {\\n\", file);\n+\n+  dot_original_deps (file, scop);\n+  dot_transformed_deps (file, scop);\n \n   fputs (\"}\\n\\n\", file);\n }"}]}