{"sha": "a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBjMGU3MTZmYTRmYmRkYTRlZTZjODY0ZGUxZWRhMjg0ZjE1NDdjZQ==", "commit": {"author": {"name": "Ryan Burn", "email": "contact@rnburn.com", "date": "2015-11-25T22:13:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-11-25T22:13:23Z"}, "message": "re PR c++/68434 ([concepts] function tsubst sets TYPE_CANONICAL before setting a type's PLACEHOLDER_TYPE_CONSTRAINTS)\n\n\tPR c++/68434\n\n\t* pt.c (tsubst): Set PLACEHOLDER_TYPE_CONSTRAINTS before\n\tcalling canonical_type_parameter.\n\nFrom-SVN: r230909", "tree": {"sha": "3373f7297e990618b02db7c30e9cfbf833a89311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3373f7297e990618b02db7c30e9cfbf833a89311"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/comments", "author": null, "committer": null, "parents": [{"sha": "75729cff1ebd87576916e99cd539b0c9223e5d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75729cff1ebd87576916e99cd539b0c9223e5d99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75729cff1ebd87576916e99cd539b0c9223e5d99"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "52ca12f77f9cb64503e39ecec86dfe49c870844f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "patch": "@@ -1,3 +1,9 @@\n+2015-11-25  Ryan Burn  <contact@rnburn.com>\n+\n+\tPR c++/68434\n+\t* pt.c (tsubst): Set PLACEHOLDER_TYPE_CONSTRAINTS before\n+\tcalling canonical_type_parameter.\n+\n 2015-11-25  Jason Merrill  <jason@redhat.com>\n \n \t* lambda.c (maybe_add_lambda_conv_op): Only set"}, {"sha": "2432283732625b9a905d63ad34f823a4dd00061e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "patch": "@@ -12977,6 +12977,12 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\tTYPE_POINTER_TO (r) = NULL_TREE;\n \t\tTYPE_REFERENCE_TO (r) = NULL_TREE;\n \n+\t\t/* Propagate constraints on placeholders.  */\n+                if (TREE_CODE (t) == TEMPLATE_TYPE_PARM)\n+                  if (tree constr = PLACEHOLDER_TYPE_CONSTRAINTS (t))\n+\t\t    PLACEHOLDER_TYPE_CONSTRAINTS (r)\n+\t\t      = tsubst_constraint (constr, args, complain, in_decl);\n+\n \t\tif (TREE_CODE (r) == TEMPLATE_TEMPLATE_PARM)\n \t\t  /* We have reduced the level of the template\n \t\t     template parameter, but not the levels of its\n@@ -12991,12 +12997,6 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t\telse\n \t\t  TYPE_CANONICAL (r) = canonical_type_parameter (r);\n \n-\t\t/* Propagate constraints on placeholders.  */\n-                if (TREE_CODE (t) == TEMPLATE_TYPE_PARM)\n-                  if (tree constr = PLACEHOLDER_TYPE_CONSTRAINTS (t))\n-\t\t    PLACEHOLDER_TYPE_CONSTRAINTS (r)\n-\t\t      = tsubst_constraint (constr, args, complain, in_decl);\n-\n \t\tif (code == BOUND_TEMPLATE_TEMPLATE_PARM)\n \t\t  {\n \t\t    tree argvec = tsubst (TYPE_TI_ARGS (t), args,"}, {"sha": "d5f901ac3c646ad47ea5006c5f4a7c0837278f91", "filename": "gcc/testsuite/g++.dg/concepts/pr68434.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0c0e716fa4fbdda4ee6c864de1eda284f1547ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C?ref=a0c0e716fa4fbdda4ee6c864de1eda284f1547ce", "patch": "@@ -0,0 +1,21 @@\n+// { dg-options \"-std=c++1z\" }\n+\n+template <class>\n+concept bool C1 () {\n+  return true;\n+}\n+\n+template <class>\n+concept bool C2 () {\n+  return true;\n+}\n+\n+template <class Expr>\n+concept bool C3 () {\n+  return requires (Expr expr) {\n+      {expr}->C1;\n+      {expr}->C2;\n+  };\n+}\n+\n+auto f (C3);"}]}