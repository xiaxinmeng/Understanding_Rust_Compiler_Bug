{"sha": "ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE3Y2U1MGJmN2ZjZDM0ZDkwM2I5ZGQxYjIzOGYwOTljOWNjMDUzNA==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-08-11T22:46:29Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-08-11T22:46:29Z"}, "message": "re PR c++/23266 (ICE on pure specifier for static method)\n\n\tPR c++/23266\n\t* decl2.c (grokfield): Check that method is not static before\n\tmarking it as pure.\n\n\tPR c++/23266\n\t* g++.dg/inherit/pure1.C: New test.\n\n\t* ChangeLog: Fix typos.\n\nFrom-SVN: r103006", "tree": {"sha": "28c40802942a7d9fc02787e809812320186261a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28c40802942a7d9fc02787e809812320186261a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/comments", "author": null, "committer": null, "parents": [{"sha": "86bd8ebf5dec81d0a84b72a289db5af36f7d866d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bd8ebf5dec81d0a84b72a289db5af36f7d866d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86bd8ebf5dec81d0a84b72a289db5af36f7d866d"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "fce855a3cd198e80e2bca1c99427632735355e52", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "patch": "@@ -1,3 +1,9 @@\n+2005-08-11  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/23266\n+\t* decl2.c (grokfield): Check that method is not static before\n+\tmarking it as pure.\n+\n 2005-08-11  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/23219"}, {"sha": "b08bac86d752e9e5ad922f4231fdfa97b7d5c1a3", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "patch": "@@ -896,9 +896,17 @@ grokfield (const cp_declarator *declarator,\n \t{\n \t  /* Initializers for functions are rejected early in the parser.\n \t     If we get here, it must be a pure specifier for a method.  */\n-\t  gcc_assert (TREE_CODE (TREE_TYPE (value)) == METHOD_TYPE);\n-\t  gcc_assert (error_operand_p (init) || integer_zerop (init));\n-\t  DECL_PURE_VIRTUAL_P (value) = 1;\n+\t  if (TREE_CODE (TREE_TYPE (value)) == METHOD_TYPE)\n+\t    {\n+\t      gcc_assert (error_operand_p (init) || integer_zerop (init));\n+\t      DECL_PURE_VIRTUAL_P (value) = 1;\n+\t    }\n+\t  else\n+\t    {\n+\t      gcc_assert (TREE_CODE (TREE_TYPE (value)) == FUNCTION_TYPE);\n+\t      error (\"initializer specified for static member function %qD\",\n+\t\t     value);\n+\t    }\n \t}\n       else if (pedantic && TREE_CODE (value) != VAR_DECL)\n \t/* Already complained in grokdeclarator.  */"}, {"sha": "4c3652541a0fc27b5e728114a3e6ca071abeedbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "patch": "@@ -1,4 +1,11 @@\n-2005-09-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+2005-08-11  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/23266\n+\t* g++.dg/inherit/pure1.C: New test.\n+\n+\t* ChangeLog: Fix typos.\n+\n+2005-08-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \t    Steven Bosscher  <stevenb@suse.de>\n \n \t* gfortran.dg/runtime_warning_1.f90: New test.\n@@ -13,7 +20,7 @@\n \tPR target/23289\n \t* gcc.target/i386/tailcall-1.c: New testcase.\n \n-2005-08-10  James A. Morrison  <phython@gc.gnu.org>\n+2005-08-10  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* gcc.dg/vect/vect-67.c: Un-xfail.\n "}, {"sha": "ddd3cb332dfd85bbf712f65e653666018e219a6c", "filename": "gcc/testsuite/g++.dg/inherit/pure1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fpure1.C?ref=ea7ce50bf7fcd34d903b9dd1b238f099c9cc0534", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/23266\n+// Origin: Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+// { dg-do compile }\n+\n+void foo0() = 0;                   // { dg-error \"like a variable\" }\n+virtual void foo1() = 0;           // { dg-error \"outside class|variable\" }\n+\n+struct A\n+{\n+  void foo2() = 0;                 // { dg-error \"non-virtual\" }\n+  static void foo3() = 0;          // { dg-error \"static member\" }\n+  virtual static void foo4() = 0;  // { dg-error \"both virtual and static\" }\n+  virtual void foo5() = 0;         // { dg-error \"base class\" }\n+};\n+\n+struct B : A\n+{\n+  static void foo5() = 0;          // { dg-error \"static member|declared\" }\n+};"}]}