{"sha": "48feba283c479e010fb6e719b8cf25ac80b1c3e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmZWJhMjgzYzQ3OWUwMTBmYjZlNzE5YjhjZjI1YWM4MGIxYzNlMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-15T13:04:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-15T13:04:47Z"}, "message": "re PR middle-end/47743 (PRE ICE in fold_convert_loc)\n\n2011-02-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47743\n\t* tree-ssa-pre.c (phi_translate_1): If we didn't get a value-number\n\tfor a non-type-compatible VN lookup bail out.\n\n\t* gcc.dg/torture/pr47743.c: New testcase.\n\nFrom-SVN: r170173", "tree": {"sha": "6cb0402984137ab26b1c49cac3c642f930461b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cb0402984137ab26b1c49cac3c642f930461b88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48feba283c479e010fb6e719b8cf25ac80b1c3e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48feba283c479e010fb6e719b8cf25ac80b1c3e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48feba283c479e010fb6e719b8cf25ac80b1c3e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48feba283c479e010fb6e719b8cf25ac80b1c3e0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad1c1eeb76df357dacedaa1e6f3be33e3e8514e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1c1eeb76df357dacedaa1e6f3be33e3e8514e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1c1eeb76df357dacedaa1e6f3be33e3e8514e5"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "c360d46c60fc0c4140f3c11be6e1f7d014a672db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48feba283c479e010fb6e719b8cf25ac80b1c3e0", "patch": "@@ -1,3 +1,9 @@\n+2011-02-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47743\n+\t* tree-ssa-pre.c (phi_translate_1): If we didn't get a value-number\n+\tfor a non-type-compatible VN lookup bail out.\n+\n 2011-02-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/fr30/constraints.md: New file."}, {"sha": "e60f6db4ccf0a4b0111f2e312ae1be6cf5976e02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48feba283c479e010fb6e719b8cf25ac80b1c3e0", "patch": "@@ -1,3 +1,8 @@\n+2011-02-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47743\n+\t* gcc.dg/torture/pr47743.c: New testcase.\n+\n 2011-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/47581"}, {"sha": "1930e94d2ca917f377bd62e668cccb007bbf57f5", "filename": "gcc/testsuite/gcc.dg/torture/pr47743.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47743.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47743.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr47743.c?ref=48feba283c479e010fb6e719b8cf25ac80b1c3e0", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+\n+int\n+foo (void *x, int y)\n+{\n+  long long a = 1, *b;\n+  double *c;\n+  if (y)\n+    {\n+      b = (long long *) x;\n+      while (b)\n+\ta *= *b++;\n+    }\n+  else\n+    {\n+      c = (double *) x;\n+      while (c)\n+\ta *= *c++;\n+    }\n+  return a;\n+}\n+"}, {"sha": "f2466432f89fd120dcb2cec793149590deb07b21", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48feba283c479e010fb6e719b8cf25ac80b1c3e0/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=48feba283c479e010fb6e719b8cf25ac80b1c3e0", "patch": "@@ -1691,6 +1691,12 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \t\tresult = fold_build1 (VIEW_CONVERT_EXPR, ref->type, result);\n \t\tconverted = true;\n \t      }\n+\t    else if (!result && newref\n+\t\t     && !useless_type_conversion_p (ref->type, newref->type))\n+\t      {\n+\t\tVEC_free (vn_reference_op_s, heap, newoperands);\n+\t\treturn NULL;\n+\t      }\n \n \t    if (result && is_gimple_min_invariant (result))\n \t      {"}]}