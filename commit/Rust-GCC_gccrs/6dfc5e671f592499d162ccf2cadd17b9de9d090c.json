{"sha": "6dfc5e671f592499d162ccf2cadd17b9de9d090c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRmYzVlNjcxZjU5MjQ5OWQxNjJjY2YyY2FkZDE3YjlkZTlkMDkwYw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2016-07-06T13:41:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-06T13:41:20Z"}, "message": "sem_ch6.adb (Analyze_Expression_Function): Mark body of expression function as ghost if needed when created.\n\n2016-07-06  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): Mark body of\n\texpression function as ghost if needed when created.\n\t* sem_prag.adb (Analyze_Pragma.Process_Inline.Set_Inline_Flags):\n\tRemove special case.\n\nFrom-SVN: r238051", "tree": {"sha": "9e49a320e95507020be92d4dc488bcc44a4a6609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e49a320e95507020be92d4dc488bcc44a4a6609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dfc5e671f592499d162ccf2cadd17b9de9d090c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfc5e671f592499d162ccf2cadd17b9de9d090c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dfc5e671f592499d162ccf2cadd17b9de9d090c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfc5e671f592499d162ccf2cadd17b9de9d090c/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d030f3a45173ca7496c50d47e651638e3ff2f00f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d030f3a45173ca7496c50d47e651638e3ff2f00f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d030f3a45173ca7496c50d47e651638e3ff2f00f"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "98e47fbc7589299d23cf348b8bf68399bf48f80f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dfc5e671f592499d162ccf2cadd17b9de9d090c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dfc5e671f592499d162ccf2cadd17b9de9d090c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6dfc5e671f592499d162ccf2cadd17b9de9d090c", "patch": "@@ -1,3 +1,10 @@\n+2016-07-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): Mark body of\n+\texpression function as ghost if needed when created.\n+\t* sem_prag.adb (Analyze_Pragma.Process_Inline.Set_Inline_Flags):\n+\tRemove special case.\n+\n 2016-07-06  Arnaud Charlet  <charlet@adacore.com>\n \n \t* lib.adb (Check_Same_Extended_Unit): Complete previous change."}, {"sha": "a47ebda2807102227b9b544df5d8b65cd767db67", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dfc5e671f592499d162ccf2cadd17b9de9d090c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dfc5e671f592499d162ccf2cadd17b9de9d090c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=6dfc5e671f592499d162ccf2cadd17b9de9d090c", "patch": "@@ -486,6 +486,15 @@ package body Sem_Ch6 is\n \n          Set_Is_Inlined (Defining_Entity (N));\n \n+         --  If the expression function is Ghost, mark its body entity as\n+         --  Ghost too. This avoids spurious errors on unanalyzed body entities\n+         --  of expression functions, which are not yet marked as ghost, yet\n+         --  identified as the Corresponding_Body of the ghost declaration.\n+\n+         if Is_Ghost_Entity (Def_Id) then\n+            Set_Is_Ghost_Entity (Defining_Entity (New_Body));\n+         end if;\n+\n          --  Establish the linkages between the spec and the body. These are\n          --  used when the expression function acts as the prefix of attribute\n          --  'Access in order to freeze the original expression which has been"}, {"sha": "f603e317af479a20c59b10405a1365ec2ffcd479", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dfc5e671f592499d162ccf2cadd17b9de9d090c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dfc5e671f592499d162ccf2cadd17b9de9d090c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6dfc5e671f592499d162ccf2cadd17b9de9d090c", "patch": "@@ -9080,14 +9080,6 @@ package body Sem_Prag is\n                   Ghost_Id := Subp;\n                end if;\n \n-            --  Do not issue an error on an unanalyzed subprogram body entity.\n-            --  It may lead to spurious errors on unanalyzed body entities of\n-            --  expression functions, which are not yet marked as ghost, yet\n-            --  identified as the Corresponding_Body of the ghost declaration.\n-\n-            elsif Ekind (Subp) = E_Void then\n-               null;\n-\n             --  Otherwise the subprogram is non-Ghost. It is illegal to mix\n             --  references to Ghost and non-Ghost entities (SPARK RM 6.9).\n "}]}