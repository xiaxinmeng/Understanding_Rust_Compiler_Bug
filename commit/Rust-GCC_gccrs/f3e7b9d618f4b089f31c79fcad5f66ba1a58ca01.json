{"sha": "f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNlN2I5ZDYxOGY0YjA4OWYzMWM3OWZjYWQ1ZjY2YmExYTU4Y2EwMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-08-14T10:26:11Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-08-14T10:26:11Z"}, "message": "re PR fortran/40881 ([F03] warn for obsolescent features)\n\n2012-08-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40881\n        * error.c (gfc_notify_std): Reset cur_error_buffer->flag flag\n        when the error/warning has been printed.\n        * gfortran.h (gfc_sl_type): Add ST_LABEL_DO_TARGET.\n        * match.c (gfc_match_do): Use ST_LABEL_DO_TARGET.\n        * parse.c (check_statement_label): Use ST_LABEL_DO_TARGET.\n        (parse_executable): Add obsolescence check for DATA.\n        * resolve.c (resolve_branch): Handle ST_LABEL_DO_TARGET.\n        * symbol.c (gfc_define_st_label, gfc_reference_st_label):\n        Add obsolescence diagnostics.\n        * trans-stmt.c (gfc_trans_label_assign): Handle\n        * ST_LABEL_DO_TARGET.\n\n2012-08-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40881\n        * gfortran.dg/data_constraints_3.f90: New.\n        * gfortran.dg/data_constraints_1.f90: Add dg-options \"\"\n        to disable -pedantic compilation.\n        * gfortran.dg/pr37243.f: Ditto.\n        * gfortran.dg/g77/19990826-3.f: Ditto.\n        * gfortran.dg/g77/20020307-1.f : Ditto.\n        * gfortran.dg/g77/980310-3.f: Ditto.\n\nFrom-SVN: r190379", "tree": {"sha": "fd8ae21355514bd9c9b84fa2b0cf9abb625369da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd8ae21355514bd9c9b84fa2b0cf9abb625369da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e60cfaa2b1de4fac1fe56be8273f4c547ae74dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e60cfaa2b1de4fac1fe56be8273f4c547ae74dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e60cfaa2b1de4fac1fe56be8273f4c547ae74dd"}], "stats": {"total": 104, "additions": 82, "deletions": 22}, "files": [{"sha": "039c1c3f3b6b5f2c9aea39741d1ae2bac9aa8caa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -1,3 +1,17 @@\n+2012-08-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40881\n+\t* error.c (gfc_notify_std): Reset cur_error_buffer->flag flag\n+\twhen the error/warning has been printed.\n+\t* gfortran.h (gfc_sl_type): Add ST_LABEL_DO_TARGET.\n+\t* match.c (gfc_match_do): Use ST_LABEL_DO_TARGET.\n+\t* parse.c (check_statement_label): Use ST_LABEL_DO_TARGET.\n+\t(parse_executable): Add obsolescence check for DATA.\n+\t* resolve.c (resolve_branch): Handle ST_LABEL_DO_TARGET.\n+\t* symbol.c (gfc_define_st_label, gfc_reference_st_label):\n+\tAdd obsolescence diagnostics.\n+\t* trans-stmt.c (gfc_trans_label_assign): Handle ST_LABEL_DO_TARGET.\n+\n 2012-08-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54234"}, {"sha": "dde6a0fb52743202bd573ed6e9f04392b0d0396c", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -875,6 +875,7 @@ gfc_notify_std (int std, const char *gmsgid, ...)\n \twarnings++;\n       else\n \tgfc_increment_error_count();\n+      cur_error_buffer->flag = 0;\n     }\n \n   return (warning && !warnings_are_errors) ? SUCCESS : FAILURE;"}, {"sha": "0e2130fc1943ad67c5c1ff7315a939a0d50c72aa", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -144,9 +144,11 @@ typedef enum\n { AR_FULL = 1, AR_ELEMENT, AR_SECTION, AR_UNKNOWN }\n ar_type;\n \n-/* Statement label types.  */\n+/* Statement label types. ST_LABEL_DO_TARGET is used for obsolescent warnings\n+   related to shared DO terminations and DO targets which are neither END DO\n+   nor CONTINUE; otherwise it is identical to ST_LABEL_TARGET.  */\n typedef enum\n-{ ST_LABEL_UNKNOWN = 1, ST_LABEL_TARGET,\n+{ ST_LABEL_UNKNOWN = 1, ST_LABEL_TARGET, ST_LABEL_DO_TARGET,\n   ST_LABEL_BAD_TARGET, ST_LABEL_FORMAT\n }\n gfc_sl_type;"}, {"sha": "5ab07e5fcb87a3937d29bf5606a3c9b4f2dd4031", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -2400,7 +2400,7 @@ gfc_match_do (void)\n \tgoto concurr_cleanup;\n \n       if (label != NULL\n-\t   && gfc_reference_st_label (label, ST_LABEL_TARGET) == FAILURE)\n+\t   && gfc_reference_st_label (label, ST_LABEL_DO_TARGET) == FAILURE)\n \tgoto concurr_cleanup;\n \n       new_st.label1 = label;\n@@ -2454,7 +2454,7 @@ gfc_match_do (void)\n \n done:\n   if (label != NULL\n-      && gfc_reference_st_label (label, ST_LABEL_TARGET) == FAILURE)\n+      && gfc_reference_st_label (label, ST_LABEL_DO_TARGET) == FAILURE)\n     goto cleanup;\n \n   new_st.label1 = label;"}, {"sha": "44b190092e1c83f8cf526b6de00020dbe70d5e17", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -1168,7 +1168,10 @@ check_statement_label (gfc_statement st)\n     case ST_END_ASSOCIATE:\n     case_executable:\n     case_exec_markers:\n-      type = ST_LABEL_TARGET;\n+      if (st == ST_ENDDO || st == ST_CONTINUE)\n+\ttype = ST_LABEL_DO_TARGET;\n+      else\n+\ttype = ST_LABEL_TARGET;\n       break;\n \n     case ST_FORMAT:\n@@ -3825,8 +3828,12 @@ parse_executable (gfc_statement st)\n \tcase ST_NONE:\n \t  unexpected_eof ();\n \n-\tcase ST_FORMAT:\n \tcase ST_DATA:\n+\t  gfc_notify_std (GFC_STD_F95_OBS, \"DATA statement at %C after the \"\n+\t\t\t  \"first executable statement\");\n+\t  /* Fall through.  */\n+\n+\tcase ST_FORMAT:\n \tcase ST_ENTRY:\n \tcase_executable:\n \t  accept_statement (st);"}, {"sha": "9b8033d1ff2b26cf5c503c7ad55be49ad18a56fb", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -8767,7 +8767,7 @@ resolve_branch (gfc_st_label *label, gfc_code *code)\n       return;\n     }\n \n-  if (label->defined != ST_LABEL_TARGET)\n+  if (label->defined != ST_LABEL_TARGET && label->defined != ST_LABEL_DO_TARGET)\n     {\n       gfc_error (\"Statement at %L is not a valid branch target statement \"\n \t\t \"for the branch statement at %L\", &label->where, &code->loc);"}, {"sha": "5a1e5adb85c7cd1c66ac0ad71f8d84fa75edcdf8", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -2204,7 +2204,8 @@ gfc_define_st_label (gfc_st_label *lp, gfc_sl_type type, locus *label_locus)\n       switch (type)\n \t{\n \tcase ST_LABEL_FORMAT:\n-\t  if (lp->referenced == ST_LABEL_TARGET)\n+\t  if (lp->referenced == ST_LABEL_TARGET\n+\t      || lp->referenced == ST_LABEL_DO_TARGET)\n \t    gfc_error (\"Label %d at %C already referenced as branch target\",\n \t\t       labelno);\n \t  else\n@@ -2213,12 +2214,18 @@ gfc_define_st_label (gfc_st_label *lp, gfc_sl_type type, locus *label_locus)\n \t  break;\n \n \tcase ST_LABEL_TARGET:\n+\tcase ST_LABEL_DO_TARGET:\n \t  if (lp->referenced == ST_LABEL_FORMAT)\n \t    gfc_error (\"Label %d at %C already referenced as a format label\",\n \t\t       labelno);\n \t  else\n-\t    lp->defined = ST_LABEL_TARGET;\n+\t    lp->defined = type;\n \n+\t  if (lp->referenced == ST_LABEL_DO_TARGET && type != ST_LABEL_DO_TARGET\n+      \t      && gfc_notify_std (GFC_STD_F95_OBS, \"DO termination statement \"\n+\t\t\t\t \"which is not END DO or CONTINUE with label \"\n+\t\t\t\t \"%d at %C\", labelno) == FAILURE)\n+\t    return;\n \t  break;\n \n \tdefault:\n@@ -2254,22 +2261,30 @@ gfc_reference_st_label (gfc_st_label *lp, gfc_sl_type type)\n       lp->where = gfc_current_locus;\n     }\n \n-  if (label_type == ST_LABEL_FORMAT && type == ST_LABEL_TARGET)\n+  if (label_type == ST_LABEL_FORMAT\n+      && (type == ST_LABEL_TARGET || type == ST_LABEL_DO_TARGET))\n     {\n       gfc_error (\"Label %d at %C previously used as a FORMAT label\", labelno);\n       rc = FAILURE;\n       goto done;\n     }\n \n-  if ((label_type == ST_LABEL_TARGET || label_type == ST_LABEL_BAD_TARGET)\n+  if ((label_type == ST_LABEL_TARGET || label_type == ST_LABEL_DO_TARGET\n+       || label_type == ST_LABEL_BAD_TARGET)\n       && type == ST_LABEL_FORMAT)\n     {\n       gfc_error (\"Label %d at %C previously used as branch target\", labelno);\n       rc = FAILURE;\n       goto done;\n     }\n \n-  lp->referenced = type;\n+  if (lp->referenced == ST_LABEL_DO_TARGET && type == ST_LABEL_DO_TARGET\n+      && gfc_notify_std (GFC_STD_F95_OBS, \"Shared DO termination label %d \"\n+\t\t\t \"at %C\", labelno) == FAILURE)\n+    return FAILURE;\n+\n+  if (lp->referenced != ST_LABEL_DO_TARGET)\n+    lp->referenced = type;\n   rc = SUCCESS;\n \n done:"}, {"sha": "7ece49246ba384a50946dfb8c7de3b0b0789902c", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -109,7 +109,8 @@ gfc_trans_label_assign (gfc_code * code)\n \n   label_tree = gfc_get_label_decl (code->label1);\n \n-  if (code->label1->defined == ST_LABEL_TARGET)\n+  if (code->label1->defined == ST_LABEL_TARGET\n+      || code->label1->defined == ST_LABEL_DO_TARGET)\n     {\n       label_tree = gfc_build_addr_expr (pvoid_type_node, label_tree);\n       len_tree = integer_minus_one_node;"}, {"sha": "55fa36a8ad547ca7027197ae1307b7b0abd8f058", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -1,3 +1,14 @@\n+2012-08-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40881\n+\t* gfortran.dg/data_constraints_3.f90: New.\n+\t* gfortran.dg/data_constraints_1.f90: Add dg-options \"\"\n+\tto disable -pedantic compilation.\n+\t* gfortran.dg/pr37243.f: Ditto.\n+\t* gfortran.dg/g77/19990826-3.f: Ditto.\n+\t* gfortran.dg/g77/20020307-1.f : Ditto.\n+\t* gfortran.dg/g77/980310-3.f: Ditto.\n+\n 2012-08-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54234"}, {"sha": "188eb7c6b8fbe778b0c0679715352dff6d7deeb3", "filename": "gcc/testsuite/gfortran.dg/data_constraints_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_constraints_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_constraints_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_constraints_1.f90?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"\" }\n ! Tests standard indepedendent constraints for variables in a data statement\n !\n ! Contributed by Paul Thomas <pault@gcc.gnu.org>"}, {"sha": "44aadb60fe94aa9b4012045a01138e76b33fd130", "filename": "gcc/testsuite/gfortran.dg/data_constraints_3.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_constraints_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_constraints_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_constraints_3.f90?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+!\n+! PR fortran/40881\n+!\n+integer :: a(3)\n+print *, 'Hello'\n+data a/3*5/ ! { dg-warning \"Obsolescent feature: DATA statement at .1. after the first executable statement\" }\n+end"}, {"sha": "374c5538e105fa96449b112a8fb7a851f02da2a5", "filename": "gcc/testsuite/gfortran.dg/g77/19990826-3.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990826-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990826-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990826-3.f?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -64,7 +64,7 @@ SUBROUTINE PCAPOP(M1,M2,L1,L2,NMEM,N1,N2,IB,IBB,K3,TF,TS,TC,TTO)\n       IF(M2.LT.64)INDE=5\n       IF(M2.LT.32)INDE=4\n       DO 3 NUN =3,INUN\n-      DO 3 NDE=3,INDE\n+      DO 3 NDE=3,INDE ! { dg-warning \"Obsolescent feature: Shared DO termination\" }\n       N10=2**NUN\n       N20=2**NDE\n       NDIF=(N10-N20)"}, {"sha": "73585434cf7730bf18c97f683739d0038008494e", "filename": "gcc/testsuite/gfortran.dg/g77/20020307-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20020307-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20020307-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20020307-1.f?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -6,7 +6,7 @@ SUBROUTINE SWEEP\n       DIMENSION BNORM(MAXVEC),BINV(MAXVEC),WT(MAXVEC),W0(MAXVEC)\n       DIMENSION C1(MAXVEC),C2(MAXVEC),R1(MAXVEC),R2(MAXVEC)\n       DO 200 ILAT=1,2**IDIM\n-      DO 200 I1=1,IDIM\n+      DO 200 I1=1,IDIM  ! { dg-warning \"Obsolescent feature: Shared DO termination\" }\n       DO 220 I2=1,IDIM\n       CALL INTACT(ILAT,I1,I1,W1)\n 220   CONTINUE"}, {"sha": "098e22c680a4409d0116472165b06b48754f7593", "filename": "gcc/testsuite/gfortran.dg/g77/980310-3.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980310-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980310-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980310-3.f?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -128,7 +128,7 @@ subroutine scaleg (n,ma,a,mb,b,low,igh,cscale,cperm,wk)\n c\n       basl = dlog10(2.0d0)\n       do 240 i = low,igh\n-         do 240 j = low,igh\n+         do 240 j = low,igh ! { dg-warning \"Obsolescent feature: Shared DO termination\" }\n             tb = b(i,j)\n             ta = a(i,j)\n             if (ta .eq. 0.0d0) go to 220\n@@ -242,7 +242,7 @@ subroutine scaleg (n,ma,a,mb,b,low,igh,cscale,cperm,wk)\n          ir = wk(i,1)\n          fi = 2.0d0**ir\n          if (i .lt. low) fi = 1.0d0\n-         do 400 j =low,n\n+         do 400 j =low,n ! { dg-warning \"Obsolescent feature: Shared DO termination\" }\n             jc = cscale(j)\n             fj = 2.0d0**jc\n             if (j .le. igh) go to 390"}, {"sha": "f5dda43e71fcec6e434cfe328b66818ecc8581b9", "filename": "gcc/testsuite/gfortran.dg/pr37243.f", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr37243.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr37243.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr37243.f?ref=f3e7b9d618f4b089f31c79fcad5f66ba1a58ca01", "patch": "@@ -13,10 +13,10 @@ SUBROUTINE SCHMD(V,M,N,LDV)\n       DO 160 I = 1,M\n       DUMI = ZERO\n       DO 100 K = 1,N\n-  100 DUMI = DUMI+V(K,I)*V(K,I)\n+  100 DUMI = DUMI+V(K,I)*V(K,I) ! { dg-warning \"Obsolescent feature: DO termination statement which is not END DO or CONTINUE\" }\n       DUMI = ONE/ SQRT(DUMI)\n       DO 120 K = 1,N\n-  120 V(K,I) = V(K,I)*DUMI\n+  120 V(K,I) = V(K,I)*DUMI ! { dg-warning \"Obsolescent feature: DO termination statement which is not END DO or CONTINUE\" }\n       IF (I .EQ. M) GO TO 160\n       I1 = I+1\n       DO 140 J = I1,M\n@@ -34,15 +34,15 @@ SUBROUTINE SCHMD(V,M,N,LDV)\n   220 J = J+1\n       IF (J .GT. N) GO TO 320\n       DO 240 K = 1,N\n-  240 V(K,I) = ZERO\n+  240 V(K,I) = ZERO ! { dg-warning \"Obsolescent feature: DO termination statement which is not END DO or CONTINUE\" }\n       CALL DAXPY(N,DUM,V(1,I),1,V(1,I),1)\n   260 CONTINUE\n       DUMI = ZERO\n       DO 280 K = 1,N\n-  280 DUMI = DUMI+V(K,I)*V(K,I)\n+  280 DUMI = DUMI+V(K,I)*V(K,I) ! { dg-warning \"Obsolescent feature: DO termination statement which is not END DO or CONTINUE\" }\n       IF ( ABS(DUMI) .LT. TOL) GO TO 220\n       DO 300 K = 1,N\n-  300 V(K,I) = V(K,I)*DUMI\n+  300 V(K,I) = V(K,I)*DUMI ! { dg-warning \"Obsolescent feature: DO termination statement which is not END DO or CONTINUE\" }\n       GO TO 200\n   320 END\n       program main"}]}