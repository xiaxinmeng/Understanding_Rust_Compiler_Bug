{"sha": "349f851e4cae5f519095258bb457a51083e4efa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5Zjg1MWU0Y2FlNWY1MTkwOTUyNThiYjQ1N2E1MTA4M2U0ZWZhMQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-17T18:15:39Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-17T18:15:39Z"}, "message": "mcore-protos.h (mcore_print_operand): Delete.\n\n\t* config/mcore/mcore-protos.h (mcore_print_operand): Delete.\n\t(mcore_print_operand_address): Delete.\n\t* config/mcore/mcore.h (PRINT_OPERAND): Delete.\n\t(PRINT_OPERAND_PUNCT_VALID_P): Delete.\n\t(PRINT_OPERAND_ADDRESS): Delete.\n\t* config/mcore/mcore.c (mcore_print_operand_address): Make static.\n\t(mcore_print_operand): Make static.\n\t(mcore_print_operand_punct_valid_p): New function.\n\t(TARGET_PRINT_OPERAND, TARGET_PRINT_OPERAND_ADDRESS): Define\n\t(TARGET_PRINT_OPERAND_PUNCT_VALID_P): Define.\n\nFrom-SVN: r160941", "tree": {"sha": "538f2e2ead90f2370f1b7016b42e0a67a7d3513d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/538f2e2ead90f2370f1b7016b42e0a67a7d3513d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349f851e4cae5f519095258bb457a51083e4efa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349f851e4cae5f519095258bb457a51083e4efa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349f851e4cae5f519095258bb457a51083e4efa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349f851e4cae5f519095258bb457a51083e4efa1/comments", "author": null, "committer": null, "parents": [{"sha": "efe554e48b242c720f36c632c60833f8ed1c2344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe554e48b242c720f36c632c60833f8ed1c2344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe554e48b242c720f36c632c60833f8ed1c2344"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "78a410a1f36796de68556403cda4bf91cda6d6c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=349f851e4cae5f519095258bb457a51083e4efa1", "patch": "@@ -1,3 +1,16 @@\n+2010-06-17  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/mcore/mcore-protos.h (mcore_print_operand): Delete.\n+\t(mcore_print_operand_address): Delete.\n+\t* config/mcore/mcore.h (PRINT_OPERAND): Delete.\n+\t(PRINT_OPERAND_PUNCT_VALID_P): Delete.\n+\t(PRINT_OPERAND_ADDRESS): Delete.\n+\t* config/mcore/mcore.c (mcore_print_operand_address): Make static.\n+\t(mcore_print_operand): Make static.\n+\t(mcore_print_operand_punct_valid_p): New function.\n+\t(TARGET_PRINT_OPERAND, TARGET_PRINT_OPERAND_ADDRESS): Define\n+\t(TARGET_PRINT_OPERAND_PUNCT_VALID_P): Define.\n+\n 2010-06-17  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/m68hc11/m68hc11-protos.h (print_operand): Delete."}, {"sha": "9be73236aa24a73279aa8ab749c4d1ea73149edb", "filename": "gcc/config/mcore/mcore-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h?ref=349f851e4cae5f519095258bb457a51083e4efa1", "patch": "@@ -54,8 +54,6 @@ extern int          mcore_is_dead                \t(rtx, rtx);\n extern int          mcore_expand_insv            \t(rtx *);\n extern bool         mcore_expand_block_move      \t(rtx *);\n extern const char * mcore_output_andn          \t\t(rtx, rtx *);\n-extern void         mcore_print_operand_address  \t(FILE *, rtx);\n-extern void         mcore_print_operand          \t(FILE *, rtx, int);\n extern bool         mcore_gen_compare\t        \t(RTX_CODE, rtx, rtx);\n extern int          mcore_symbolic_address_p     \t(rtx);\n extern bool         mcore_r15_operand_p\t\t\t(rtx);"}, {"sha": "6bb4e6476fbf748e1a2881ee4527a5a3e18e27c8", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=349f851e4cae5f519095258bb457a51083e4efa1", "patch": "@@ -131,6 +131,9 @@ static tree       mcore_handle_naked_attribute  (tree *, tree, tree, int, bool *\n static void\t  mcore_asm_named_section       (const char *,\n \t\t\t\t\t\t unsigned int, tree);\n #endif\n+static void       mcore_print_operand           (FILE *, rtx, int);\n+static void       mcore_print_operand_address   (FILE *, rtx);\n+static bool       mcore_print_operand_punct_valid_p (unsigned char code);\n static void       mcore_unique_section\t        (tree, int);\n static void mcore_encode_section_info\t\t(tree, rtx, int);\n static const char *mcore_strip_name_encoding\t(const char *);\n@@ -173,6 +176,13 @@ static const struct attribute_spec mcore_attribute_table[] =\n #define TARGET_ASM_UNALIGNED_SI_OP \"\\t.long\\t\"\n #endif\n \n+#undef  TARGET_PRINT_OPERAND\n+#define TARGET_PRINT_OPERAND\t\tmcore_print_operand\n+#undef  TARGET_PRINT_OPERAND_ADDRESS\n+#define TARGET_PRINT_OPERAND_ADDRESS\tmcore_print_operand_address\n+#undef  TARGET_PRINT_OPERAND_PUNCT_VALID_P\n+#define TARGET_PRINT_OPERAND_PUNCT_VALID_P mcore_print_operand_punct_valid_p\n+\n #undef  TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE \t\tmcore_attribute_table\n #undef  TARGET_ASM_UNIQUE_SECTION\n@@ -287,7 +297,7 @@ calc_live_regs (int * count)\n \n /* Print the operand address in x to the stream.  */\n \n-void\n+static void\n mcore_print_operand_address (FILE * stream, rtx x)\n {\n   switch (GET_CODE (x))\n@@ -329,6 +339,13 @@ mcore_print_operand_address (FILE * stream, rtx x)\n     }\n }\n \n+static bool\n+mcore_print_operand_punct_valid_p (unsigned char code)\n+{\n+  return (code == '.' || code == '#' || code == '*' || code == '^'\n+\t  || code == '!');\n+}\n+\n /* Print operand x (an rtx) in assembler syntax to file stream\n    according to modifier code.\n \n@@ -341,7 +358,7 @@ mcore_print_operand_address (FILE * stream, rtx x)\n    'U'  print register for ldm/stm instruction\n    'X'  print byte number for xtrbN instruction.  */\n \n-void\n+static void\n mcore_print_operand (FILE * stream, rtx x, int code)\n {\n   switch (code)"}, {"sha": "4f0ef1d7d6bfb098281c5a2d964bfe225d5f02bb", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349f851e4cae5f519095258bb457a51083e4efa1/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=349f851e4cae5f519095258bb457a51083e4efa1", "patch": "@@ -960,15 +960,4 @@ extern long mcore_current_compilation_timestamp;\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n-/* Print operand X (an rtx) in assembler syntax to file FILE.\n-   CODE is a letter or dot (`z' in `%z0') or 0 if no letter was specified.\n-   For `%' followed by punctuation, CODE is the punctuation and X is null.  */\n-#define PRINT_OPERAND(STREAM, X, CODE)  mcore_print_operand (STREAM, X, CODE)\n-\n-/* Print a memory address as an operand to reference that memory location.  */\n-#define PRINT_OPERAND_ADDRESS(STREAM,X)  mcore_print_operand_address (STREAM, X)\n-\n-#define PRINT_OPERAND_PUNCT_VALID_P(CHAR) \\\n-  ((CHAR)=='.' || (CHAR) == '#' || (CHAR) == '*' || (CHAR) == '^' || (CHAR) == '!')\n-\n #endif /* ! GCC_MCORE_H */"}]}