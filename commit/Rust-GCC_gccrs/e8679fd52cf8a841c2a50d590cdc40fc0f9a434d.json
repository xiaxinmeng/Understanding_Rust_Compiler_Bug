{"sha": "e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg2NzlmZDUyY2Y4YTg0MWMyYTUwZDU5MGNkYzQwZmMwZjlhNDM0ZA==", "commit": {"author": {"name": "Nicolas Roche", "email": "roche@adacore.com", "date": "2017-10-20T09:29:35Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-10-20T09:29:35Z"}, "message": "configure.ac (ACX_PROG_GNAT): Append \"libgnat\" to the include dir.\n\n\t* configure.ac (ACX_PROG_GNAT): Append \"libgnat\" to the include dir.\n\t* configure: Regenerate.\n\nFrom-SVN: r253928", "tree": {"sha": "0051d6bd812709382c7304df65b5a22032766086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0051d6bd812709382c7304df65b5a22032766086"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/comments", "author": {"login": "Nikokrock", "id": 7796165, "node_id": "MDQ6VXNlcjc3OTYxNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7796165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikokrock", "html_url": "https://github.com/Nikokrock", "followers_url": "https://api.github.com/users/Nikokrock/followers", "following_url": "https://api.github.com/users/Nikokrock/following{/other_user}", "gists_url": "https://api.github.com/users/Nikokrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikokrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikokrock/subscriptions", "organizations_url": "https://api.github.com/users/Nikokrock/orgs", "repos_url": "https://api.github.com/users/Nikokrock/repos", "events_url": "https://api.github.com/users/Nikokrock/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikokrock/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "356fcc67fba52b6d923ab72769247300b847478d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356fcc67fba52b6d923ab72769247300b847478d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356fcc67fba52b6d923ab72769247300b847478d"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "d0ca16c28208f3db84bd97892e9bc623c66024b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "patch": "@@ -1,3 +1,8 @@\n+2017-10-20  Nicolas Roche  <roche@adacore.com>\n+\n+\t* configure.ac (ACX_PROG_GNAT): Append \"libgnat\" to the include dir.\n+\t* configure: Regenerate.\n+\n 2017-10-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82158"}, {"sha": "aa5937df84c4248bbc0787b6b3504132e9f2bf33", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "patch": "@@ -4987,7 +4987,7 @@ acx_cv_cc_gcc_supports_ada=no\n # Other compilers, like HP Tru64 UNIX cc, exit successfully when\n # given a .adb file, but produce no object file.  So we must check\n # if an object file was really produced to guard against this.\n-errors=`(${CC} -I\"$srcdir\"/ada -c conftest.adb) 2>&1 || echo failure`\n+errors=`(${CC} -I\"$srcdir\"/ada/libgnat -c conftest.adb) 2>&1 || echo failure`\n if test x\"$errors\" = x && test -f conftest.$ac_objext; then\n   acx_cv_cc_gcc_supports_ada=yes\n fi"}, {"sha": "d905d0d980ab90de6eb4df12bd4e71ca09f82360", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8679fd52cf8a841c2a50d590cdc40fc0f9a434d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e8679fd52cf8a841c2a50d590cdc40fc0f9a434d", "patch": "@@ -362,7 +362,7 @@ rm -f a.out a.exe b.out\n # Find the native compiler\n AC_PROG_CC\n AC_PROG_CXX\n-ACX_PROG_GNAT([-I\"$srcdir\"/ada])\n+ACX_PROG_GNAT([-I\"$srcdir\"/ada/libgnat])\n \n # Do configure tests with the C++ compiler, since that's what we build with.\n AC_LANG(C++)"}]}