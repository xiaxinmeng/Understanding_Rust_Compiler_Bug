{"sha": "2284bd2b66727ad3d1390ed16cd80760a012aa8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4NGJkMmI2NjcyN2FkM2QxMzkwZWQxNmNkODA3NjBhMDEyYWE4YQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2006-12-18T09:53:33Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2006-12-18T09:53:33Z"}, "message": "rs6000.md (*movdf_hardfloat32): Use %X format to determine if memory operand is an indexed address or not.\n\n\t* config/rs6000/rs6000.md (*movdf_hardfloat32): Use %X format to\n\tdetermine if memory operand is an indexed address or not.\n\nFrom-SVN: r120003", "tree": {"sha": "56d5fbbbeeadadf97a7b855a83a14da9ef81438b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56d5fbbbeeadadf97a7b855a83a14da9ef81438b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2284bd2b66727ad3d1390ed16cd80760a012aa8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2284bd2b66727ad3d1390ed16cd80760a012aa8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2284bd2b66727ad3d1390ed16cd80760a012aa8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2284bd2b66727ad3d1390ed16cd80760a012aa8a/comments", "author": null, "committer": null, "parents": [{"sha": "3b4212c1eb14099632dd9adcfccfe2c355bf7454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4212c1eb14099632dd9adcfccfe2c355bf7454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4212c1eb14099632dd9adcfccfe2c355bf7454"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "004ec9c9a806b1b2f0dcbb98470f833624c0673b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284bd2b66727ad3d1390ed16cd80760a012aa8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284bd2b66727ad3d1390ed16cd80760a012aa8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2284bd2b66727ad3d1390ed16cd80760a012aa8a", "patch": "@@ -1,3 +1,8 @@\n+2006-12-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.md (*movdf_hardfloat32): Use %X format to\n+\tdetermine if memory operand is an indexed address or not.\n+\n 2006-12-17  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* cselib.c (struct cselib_val_struct): Make val_rtx its"}, {"sha": "a4902c4e561e6269ba94f149418e82b82073ce1e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284bd2b66727ad3d1390ed16cd80760a012aa8a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284bd2b66727ad3d1390ed16cd80760a012aa8a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=2284bd2b66727ad3d1390ed16cd80760a012aa8a", "patch": "@@ -8359,15 +8359,15 @@\n \t\t\t\t operands[1], 0))\n \t    {\n \t      output_asm_insn (\\\"{cal|la} %0,4(%0)\\\", &addreg);\n-\t      output_asm_insn (\\\"{lx|lwzx} %L0,%1\\\", operands);\n+\t      output_asm_insn (\\\"{l%X1|lwz%X1} %L0,%1\\\", operands);\n \t      output_asm_insn (\\\"{cal|la} %0,-4(%0)\\\", &addreg);\n-\t      return \\\"{lx|lwzx} %0,%1\\\";\n+\t      return \\\"{l%X1|lwz%X1} %0,%1\\\";\n \t    }\n \t  else\n \t    {\n-\t      output_asm_insn (\\\"{lx|lwzx} %0,%1\\\", operands);\n+\t      output_asm_insn (\\\"{l%X1|lwz%X1} %0,%1\\\", operands);\n \t      output_asm_insn (\\\"{cal|la} %0,4(%0)\\\", &addreg);\n-\t      output_asm_insn (\\\"{lx|lwzx} %L0,%1\\\", operands);\n+\t      output_asm_insn (\\\"{l%X1|lwz%X1} %L0,%1\\\", operands);\n \t      output_asm_insn (\\\"{cal|la} %0,-4(%0)\\\", &addreg);\n \t      return \\\"\\\";\n \t    }\n@@ -8384,9 +8384,9 @@\n \t  rtx addreg;\n \n \t  addreg = find_addr_reg (XEXP (operands[0], 0));\n-\t  output_asm_insn (\\\"{stx|stwx} %1,%0\\\", operands);\n+\t  output_asm_insn (\\\"{st%X0|stw%X0} %1,%0\\\", operands);\n \t  output_asm_insn (\\\"{cal|la} %0,4(%0)\\\", &addreg);\n-\t  output_asm_insn (\\\"{stx|stwx} %L1,%0\\\", operands);\n+\t  output_asm_insn (\\\"{st%X0|stw%X0} %L1,%0\\\", operands);\n \t  output_asm_insn (\\\"{cal|la} %0,-4(%0)\\\", &addreg);\n \t  return \\\"\\\";\n \t}"}]}