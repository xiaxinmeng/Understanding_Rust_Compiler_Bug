{"sha": "9cc96794cc35d136c2b229c636c1495fac1d12ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjOTY3OTRjYzM1ZDEzNmMyYjIyOWM2MzZjMTQ5NWZhYzFkMTJhYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-18T10:37:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-18T10:37:45Z"}, "message": "(try_combine): Don't use split if dest of new I2 is used between I2\nand I3.\n\nFrom-SVN: r12293", "tree": {"sha": "d2022f40d0d93b918ae2715139f5c04ca26b7630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2022f40d0d93b918ae2715139f5c04ca26b7630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cc96794cc35d136c2b229c636c1495fac1d12ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc96794cc35d136c2b229c636c1495fac1d12ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc96794cc35d136c2b229c636c1495fac1d12ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc96794cc35d136c2b229c636c1495fac1d12ab/comments", "author": null, "committer": null, "parents": [{"sha": "0b04ec8c2190fe80e0799c61f42549a6194e3979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b04ec8c2190fe80e0799c61f42549a6194e3979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b04ec8c2190fe80e0799c61f42549a6194e3979"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "3dbdb183e5dbc651303e5d264513e9fdd2278c2a", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc96794cc35d136c2b229c636c1495fac1d12ab/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc96794cc35d136c2b229c636c1495fac1d12ab/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=9cc96794cc35d136c2b229c636c1495fac1d12ab", "patch": "@@ -1802,9 +1802,12 @@ try_combine (i3, i2, i1)\n \t\t\t\t\t      &i2_scratches);\n \n \t  /* If I2 or I3 has multiple SETs, we won't know how to track\n-\t     register status, so don't use these insns.  */\n+\t     register status, so don't use these insns.  If I2's destination\n+\t     is used between I2 and I3, we also can't use these insns.  */\n \n-\t  if (i2_code_number >= 0 && i2set && i3set)\n+\t  if (i2_code_number >= 0 && i2set && i3set\n+\t      && (next_real_insn (i2) == i3\n+\t\t  || ! reg_used_between_p (SET_DEST (i2set), i2, i3)))\n \t    insn_code_number = recog_for_combine (&newi3pat, i3, &new_i3_notes,\n \t\t\t\t\t\t  &i3_scratches); \n \t  if (insn_code_number >= 0)"}]}