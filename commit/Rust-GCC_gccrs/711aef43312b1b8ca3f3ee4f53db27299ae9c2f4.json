{"sha": "711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzExYWVmNDMzMTJiMWI4Y2EzZjNlZTRmNTNkYjI3Mjk5YWU5YzJmNA==", "commit": {"author": {"name": "Rodrigo Rivas Costa", "email": "rodrigorivascosta@gmail.com", "date": "2010-12-22T19:23:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-12-22T19:23:00Z"}, "message": "parser.c (cp_parser_unary_expression): Call pedwarn for alignof with expression.\n\n\t* parser.c (cp_parser_unary_expression): Call pedwarn for alignof\n\twith expression.\n\nFrom-SVN: r168179", "tree": {"sha": "da2d313860efd3ed7100fa5726aca61e27696e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da2d313860efd3ed7100fa5726aca61e27696e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/comments", "author": {"login": "rodrigorc", "id": 1128630, "node_id": "MDQ6VXNlcjExMjg2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1128630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigorc", "html_url": "https://github.com/rodrigorc", "followers_url": "https://api.github.com/users/rodrigorc/followers", "following_url": "https://api.github.com/users/rodrigorc/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigorc/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigorc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigorc/subscriptions", "organizations_url": "https://api.github.com/users/rodrigorc/orgs", "repos_url": "https://api.github.com/users/rodrigorc/repos", "events_url": "https://api.github.com/users/rodrigorc/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigorc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d2866eafb6865f084791494a7a449065cb0287c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2866eafb6865f084791494a7a449065cb0287c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2866eafb6865f084791494a7a449065cb0287c"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "62b7d8d8197cbcf6694fb49da5168b59ccc0e653", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "patch": "@@ -1,3 +1,8 @@\n+2010-12-22  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n+\n+\t* parser.c (cp_parser_unary_expression): Call pedwarn for alignof\n+\twith expression.\n+\n 2010-12-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* parser.c (cp_parser_objc_try_catch_finally_statement): Call"}, {"sha": "743d774b5a35fa431e140aa84c60b258adf7b85b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "patch": "@@ -5888,6 +5888,7 @@ cp_parser_pseudo_destructor_name (cp_parser* parser,\n      unary-operator cast-expression\n      sizeof unary-expression\n      sizeof ( type-id )\n+     alignof ( type-id )  [C++0x]\n      new-expression\n      delete-expression\n \n@@ -5897,6 +5898,7 @@ cp_parser_pseudo_destructor_name (cp_parser* parser,\n      __extension__ cast-expression\n      __alignof__ unary-expression\n      __alignof__ ( type-id )\n+     alignof unary-expression  [C++0x]\n      __real__ cast-expression\n      __imag__ cast-expression\n      && identifier\n@@ -5938,7 +5940,19 @@ cp_parser_unary_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t    if (TYPE_P (operand))\n \t      return cxx_sizeof_or_alignof_type (operand, op, true);\n \t    else\n-\t      return cxx_sizeof_or_alignof_expr (operand, op, true);\n+\t      {\n+\t\t/* ISO C++ defines alignof only with types, not with\n+\t\t   expressions. So pedwarn if alignof is used with a non-\n+\t\t   type expression. However, __alignof__ is ok.  */\n+\t\tif (cxx_dialect >= cxx0x\n+\t\t    && !strcmp (IDENTIFIER_POINTER (token->u.value),\n+\t\t\t\t\"alignof\"))\n+\t\t  pedwarn (token->location, OPT_pedantic,\n+\t\t\t   \"ISO C++ does not allow %<alignof%> \"\n+\t\t\t   \"with a non-type\");\n+\n+\t\treturn cxx_sizeof_or_alignof_expr (operand, op, true);\n+\t      }\n \t  }\n \n \tcase RID_NEW:"}, {"sha": "06257d17853dfb73b5c7eccace025c8fe001ee1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "patch": "@@ -1,3 +1,7 @@\n+2010-12-22  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n+\n+\t* g++.dg/cpp0x/alignof2.C: New.\n+\n 2010-12-22  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/45934"}, {"sha": "7c5aad3de29672493de667f071e53f428e29c2ca", "filename": "gcc/testsuite/g++.dg/cpp0x/alignof2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/711aef43312b1b8ca3f3ee4f53db27299ae9c2f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignof2.C?ref=711aef43312b1b8ca3f3ee4f53db27299ae9c2f4", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++0x -pedantic\" }\n+int main(void)\n+{\n+  alignof(int); //ok with a type but not with an expression\n+  alignof(3);   // { dg-warning \"alignof\" }\n+}"}]}