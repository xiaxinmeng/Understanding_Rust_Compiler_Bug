{"sha": "72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhYTNkY2FmNWU5YWFjYzAwYzliYTU2ZTA1YTc1MGJjYmQ0NjQxNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-04T12:20:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-04T12:20:14Z"}, "message": "re PR middle-end/44785 (Invalid memory access in gfortran.dg/extends_3.f03)\n\n2010-07-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/44785\n\t* tree-inline.c (initialize_inlined_parameters): Do not\n\tre-use pointer-map slot over remap_type call.\n\nFrom-SVN: r161800", "tree": {"sha": "19aee9499609b52ccdddc46d9c961c4bf807e21c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19aee9499609b52ccdddc46d9c961c4bf807e21c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef2a9157f4bbd2b7c5cd93328732a94970234173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2a9157f4bbd2b7c5cd93328732a94970234173", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2a9157f4bbd2b7c5cd93328732a94970234173"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "5da41db436327650653d0f7d830c04749233cb20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415", "patch": "@@ -1,3 +1,9 @@\n+2010-07-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44785\n+\t* tree-inline.c (initialize_inlined_parameters): Do not\n+\tre-use pointer-map slot over remap_type call.\n+\n 2010-07-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (vn_reference_lookup_3): Fix last commit."}, {"sha": "46c604f08fd16aacc23ceb51e7d09826ac09c371", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=72aa3dcaf5e9aacc00c9ba56e05a750bcbd46415", "patch": "@@ -2690,19 +2690,20 @@ initialize_inlined_parameters (copy_body_data *id, gimple stmt,\n       if (varp\n \t  && TREE_CODE (*varp) == VAR_DECL)\n \t{\n-\t  tree def = (gimple_in_ssa_p (cfun)\n+\t  tree def = (gimple_in_ssa_p (cfun) && is_gimple_reg (p)\n \t\t      ? gimple_default_def (id->src_cfun, p) : NULL);\n-\t  TREE_TYPE (*varp) = remap_type (TREE_TYPE (*varp), id);\n+\t  tree var = *varp;\n+\t  TREE_TYPE (var) = remap_type (TREE_TYPE (var), id);\n \t  /* Also remap the default definition if it was remapped\n \t     to the default definition of the parameter replacement\n \t     by the parameter setup.  */\n-\t  if (def && gimple_in_ssa_p (cfun) && is_gimple_reg (p))\n+\t  if (def)\n \t    {\n \t      tree *defp = (tree *) pointer_map_contains (id->decl_map, def);\n \t      if (defp\n \t\t  && TREE_CODE (*defp) == SSA_NAME\n-\t\t  && SSA_NAME_VAR (*defp) == *varp)\n-\t\tTREE_TYPE (*defp) = TREE_TYPE (*varp);\n+\t\t  && SSA_NAME_VAR (*defp) == var)\n+\t\tTREE_TYPE (*defp) = TREE_TYPE (var);\n \t    }\n \t}\n     }"}]}