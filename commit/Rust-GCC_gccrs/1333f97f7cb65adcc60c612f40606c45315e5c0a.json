{"sha": "1333f97f7cb65adcc60c612f40606c45315e5c0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMzM2Y5N2Y3Y2I2NWFkY2M2MGM2MTJmNDA2MDZjNDUzMTVlNWMwYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-22T22:25:52Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-22T22:25:52Z"}, "message": "i386.c (ix86_isa_flags_explicit): Remove.\n\n\t* config/i386/i386.c (ix86_isa_flags_explicit): Remove.\n\t(ix86_handle_option): Access ix86_isa_flags and\n\tix86_isa_flags_explicit via opts pointer.  Don't assert that\n\tglobal structures are in use.\n\t(ix86_function_specific_save, ix86_function_specific_restore):\n\tUpdate ix86_isa_flags_explicit field name.\n\t* config/i386/i386.opt (ix86_isa_flags_explicit): New Variable\n\tentry.\n\t(ix86_isa_flags_explicit): Rename TargetSave entry to\n\tx_ix86_isa_flags_explicit.\n\nFrom-SVN: r171310", "tree": {"sha": "fedd37e104964aade2f86e7645144b8932542650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fedd37e104964aade2f86e7645144b8932542650"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1333f97f7cb65adcc60c612f40606c45315e5c0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1333f97f7cb65adcc60c612f40606c45315e5c0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1333f97f7cb65adcc60c612f40606c45315e5c0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1333f97f7cb65adcc60c612f40606c45315e5c0a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75db85d8a250909bd5acb63f366dc44415362dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75db85d8a250909bd5acb63f366dc44415362dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75db85d8a250909bd5acb63f366dc44415362dc3"}], "stats": {"total": 258, "additions": 135, "deletions": 123}, "files": [{"sha": "79b42782025323393e781a5ecc3fe05634c03e3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1333f97f7cb65adcc60c612f40606c45315e5c0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1333f97f7cb65adcc60c612f40606c45315e5c0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1333f97f7cb65adcc60c612f40606c45315e5c0a", "patch": "@@ -1,3 +1,16 @@\n+2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/i386/i386.c (ix86_isa_flags_explicit): Remove.\n+\t(ix86_handle_option): Access ix86_isa_flags and\n+\tix86_isa_flags_explicit via opts pointer.  Don't assert that\n+\tglobal structures are in use.\n+\t(ix86_function_specific_save, ix86_function_specific_restore):\n+\tUpdate ix86_isa_flags_explicit field name.\n+\t* config/i386/i386.opt (ix86_isa_flags_explicit): New Variable\n+\tentry.\n+\t(ix86_isa_flags_explicit): Rename TargetSave entry to\n+\tx_ix86_isa_flags_explicit.\n+\n 2011-03-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (NUM_ARGS): Don't test TARGET_ABI_UNICOSMK."}, {"sha": "88ae3d709cd2b0a320418a0c2fa0ab1294665b07", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 116, "deletions": 122, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1333f97f7cb65adcc60c612f40606c45315e5c0a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1333f97f7cb65adcc60c612f40606c45315e5c0a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1333f97f7cb65adcc60c612f40606c45315e5c0a", "patch": "@@ -2481,10 +2481,6 @@ static enum calling_abi ix86_function_abi (const_tree);\n static int ix86_tune_defaulted;\n static int ix86_arch_specified;\n \n-/* A mask of ix86_isa_flags that includes bit X if X\n-   was set or cleared on the command line.  */\n-static int ix86_isa_flags_explicit;\n-\n /* Define a set of ISAs which are available when a given ISA is\n    enabled.  MMX and SSE ISAs are handled separately.  */\n \n@@ -2684,41 +2680,39 @@ ix86_using_red_zone (void)\n /* Implement TARGET_HANDLE_OPTION.  */\n \n static bool\n-ix86_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n+ix86_handle_option (struct gcc_options *opts,\n+\t\t    struct gcc_options *opts_set ATTRIBUTE_UNUSED,\n \t\t    const struct cl_decoded_option *decoded,\n \t\t    location_t loc ATTRIBUTE_UNUSED)\n {\n   size_t code = decoded->opt_index;\n   int value = decoded->value;\n \n-  gcc_assert (opts == &global_options);\n-  gcc_assert (opts_set == &global_options_set);\n-\n   switch (code)\n     {\n     case OPT_mmmx:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_MMX_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MMX_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_MMX_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_MMX_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MMX_UNSET;\n \t}\n       return true;\n \n     case OPT_m3dnow:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_3DNOW_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_3DNOW_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_3DNOW_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_3DNOW_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_3DNOW_UNSET;\n \t}\n       return true;\n \n@@ -2728,335 +2722,335 @@ ix86_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n     case OPT_msse:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE_UNSET;\n \t}\n       return true;\n \n     case OPT_msse2:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE2_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE2_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE2_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE2_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE2_UNSET;\n \t}\n       return true;\n \n     case OPT_msse3:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE3_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE3_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE3_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE3_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE3_UNSET;\n \t}\n       return true;\n \n     case OPT_mssse3:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSSE3_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSSE3_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSSE3_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSSE3_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSSE3_UNSET;\n \t}\n       return true;\n \n     case OPT_msse4_1:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE4_1_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4_1_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_1_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_1_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_1_UNSET;\n \t}\n       return true;\n \n     case OPT_msse4_2:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE4_2_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4_2_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_2_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_2_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_2_UNSET;\n \t}\n       return true;\n \n     case OPT_mavx:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_AVX_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_AVX_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AVX_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX_UNSET;\n \t}\n       return true;\n \n     case OPT_mfma:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_FMA_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FMA_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_FMA_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_FMA_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA_UNSET;\n \t}\n       return true;\n \n     case OPT_msse4:\n-      ix86_isa_flags |= OPTION_MASK_ISA_SSE4_SET;\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_SET;\n+      opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4_SET;\n+      opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_SET;\n       return true;\n \n     case OPT_mno_sse4:\n-      ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_UNSET;\n-      ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_UNSET;\n+      opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4_UNSET;\n+      opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4_UNSET;\n       return true;\n \n     case OPT_msse4a:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SSE4A_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SSE4A_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4A_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SSE4A_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SSE4A_UNSET;\n \t}\n       return true;\n \n     case OPT_mfma4:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_FMA4_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA4_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FMA4_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA4_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_FMA4_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA4_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_FMA4_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_FMA4_UNSET;\n \t}\n       return true;\n \n    case OPT_mxop:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_XOP_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_XOP_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XOP_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_XOP_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_XOP_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_XOP_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_XOP_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_XOP_UNSET;\n \t}\n       return true;\n \n    case OPT_mlwp:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_LWP_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_LWP_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_LWP_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_LWP_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_LWP_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_LWP_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_LWP_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_LWP_UNSET;\n \t}\n       return true;\n \n     case OPT_mabm:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_ABM_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_ABM_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_ABM_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_ABM_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_ABM_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_ABM_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_ABM_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_ABM_UNSET;\n \t}\n       return true;\n \n     case OPT_mbmi:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_BMI_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_BMI_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_BMI_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_BMI_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_BMI_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_BMI_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_BMI_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_BMI_UNSET;\n \t}\n       return true;\n \n     case OPT_mtbm:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_TBM_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_TBM_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_TBM_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_TBM_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_TBM_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_TBM_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_TBM_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_TBM_UNSET;\n \t}\n       return true;\n \n     case OPT_mpopcnt:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_POPCNT_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_POPCNT_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_POPCNT_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_POPCNT_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_POPCNT_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_POPCNT_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_POPCNT_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_POPCNT_UNSET;\n \t}\n       return true;\n \n     case OPT_msahf:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_SAHF_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SAHF_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SAHF_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SAHF_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_SAHF_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_SAHF_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_SAHF_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_SAHF_UNSET;\n \t}\n       return true;\n \n     case OPT_mcx16:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_CX16_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_CX16_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CX16_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_CX16_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_CX16_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_CX16_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_CX16_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_CX16_UNSET;\n \t}\n       return true;\n \n     case OPT_mmovbe:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_MOVBE_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_MOVBE_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MOVBE_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MOVBE_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_MOVBE_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_MOVBE_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_MOVBE_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_MOVBE_UNSET;\n \t}\n       return true;\n \n     case OPT_mcrc32:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_CRC32_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_CRC32_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CRC32_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_CRC32_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_CRC32_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_CRC32_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_CRC32_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_CRC32_UNSET;\n \t}\n       return true;\n \n     case OPT_maes:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_AES_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_AES_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AES_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AES_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_AES_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_AES_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AES_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AES_UNSET;\n \t}\n       return true;\n \n     case OPT_mpclmul:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_PCLMUL_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_PCLMUL_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PCLMUL_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_PCLMUL_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_PCLMUL_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_PCLMUL_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_PCLMUL_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_PCLMUL_UNSET;\n \t}\n       return true;\n \n     case OPT_mfsgsbase:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_FSGSBASE_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_FSGSBASE_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_FSGSBASE_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_FSGSBASE_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_FSGSBASE_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_FSGSBASE_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_FSGSBASE_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_FSGSBASE_UNSET;\n \t}\n       return true;\n \n     case OPT_mrdrnd:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_RDRND_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_RDRND_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_RDRND_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_RDRND_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_RDRND_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_RDRND_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_RDRND_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_RDRND_UNSET;\n \t}\n       return true;\n \n     case OPT_mf16c:\n       if (value)\n \t{\n-\t  ix86_isa_flags |= OPTION_MASK_ISA_F16C_SET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_F16C_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_F16C_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_F16C_SET;\n \t}\n       else\n \t{\n-\t  ix86_isa_flags &= ~OPTION_MASK_ISA_F16C_UNSET;\n-\t  ix86_isa_flags_explicit |= OPTION_MASK_ISA_F16C_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_F16C_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_F16C_UNSET;\n \t}\n       return true;\n \n@@ -4417,7 +4411,7 @@ ix86_function_specific_save (struct cl_target_option *ptr)\n   ptr->branch_cost = ix86_branch_cost;\n   ptr->tune_defaulted = ix86_tune_defaulted;\n   ptr->arch_specified = ix86_arch_specified;\n-  ptr->ix86_isa_flags_explicit = ix86_isa_flags_explicit;\n+  ptr->x_ix86_isa_flags_explicit = ix86_isa_flags_explicit;\n   ptr->ix86_target_flags_explicit = target_flags_explicit;\n \n   /* The fields are char but the variables are not; make sure the\n@@ -4446,7 +4440,7 @@ ix86_function_specific_restore (struct cl_target_option *ptr)\n   ix86_branch_cost = ptr->branch_cost;\n   ix86_tune_defaulted = ptr->tune_defaulted;\n   ix86_arch_specified = ptr->arch_specified;\n-  ix86_isa_flags_explicit = ptr->ix86_isa_flags_explicit;\n+  ix86_isa_flags_explicit = ptr->x_ix86_isa_flags_explicit;\n   target_flags_explicit = ptr->ix86_target_flags_explicit;\n \n   /* Recreate the arch feature tests if the arch changed */"}, {"sha": "e02d098fd1948a20d4840cafb25b202cd9965f70", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1333f97f7cb65adcc60c612f40606c45315e5c0a/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1333f97f7cb65adcc60c612f40606c45315e5c0a/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=1333f97f7cb65adcc60c612f40606c45315e5c0a", "patch": "@@ -23,6 +23,11 @@\n Variable\n int ix86_isa_flags = TARGET_64BIT_DEFAULT | TARGET_SUBTARGET_ISA_DEFAULT\n \n+; A mask of ix86_isa_flags that includes bit X if X was set or cleared\n+; on the command line.\n+Variable\n+int ix86_isa_flags_explicit\n+\n ;; Definitions to add to the cl_target_option structure\n ;; -march= processor\n TargetSave\n@@ -46,7 +51,7 @@ unsigned char branch_cost\n \n ;; which flags were passed by the user\n TargetSave\n-int ix86_isa_flags_explicit\n+int x_ix86_isa_flags_explicit\n \n ;; which flags were passed by the user\n TargetSave"}]}