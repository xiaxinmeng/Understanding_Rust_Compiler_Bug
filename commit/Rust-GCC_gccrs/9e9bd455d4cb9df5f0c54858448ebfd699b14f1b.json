{"sha": "9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5YmQ0NTVkNGNiOWRmNWYwYzU0ODU4NDQ4ZWJmZDY5OWIxNGYxYg==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2011-07-12T17:23:04Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-07-12T17:23:04Z"}, "message": "prefix.h: Wrap up in extern \"C\" block.\n\n\t* prefix.h: Wrap up in extern \"C\" block.\nada/\n\t* adadecode.c: Wrap up in extern \"C\" block.\n\t* adadecode.h: Likewise.\n\t* adaint.c: Likewise.  Remove 'const' keyword.\n\t* adaint.h: Likewise.\n\t* argv.c: Likewise.\n\t* atree.h: Likewise.\n\t* cio.c: Likewise.\n\t* cstreams.c: Likewise.\n\t* env.c: Likewise.\n\t* exit.c: Likewise.\n\t* fe.h: Likewise.\n\t* final.c: Likewise.\n\t* init.c: Likewise.\n\t* initialize.c: Likewise.\n\t* link.c: Likewise.\n\t* namet.h: Likewise.\n\t* nlists.h: Likewise.\n\t* raise.c: Likewise.\n\t* raise.h: Likewise.\n\t* repinfo.h: Likewise.\n\t* seh_init.c: Likewise.\n\t* targext.c: Likewise.\n\t* tracebak.c: Likewise.\n\t* uintp.h: Likewise.\n\t* urealp.h: Likewise.\n\t* xeinfo.adb: Wrap up generated C code in extern \"C\" block.\n\t* xsinfo.adb: Likewise.\n\t* xsnamest.adb: Likewise.\n\t* gcc-interface/gadaint.h: Wrap up in extern \"C\" block.\n\t* gcc-interface/gigi.h: Wrap up some prototypes in extern \"C\" block.\n\t* gcc-interface/misc.c: Likewise.\n\t* gcc-interface/Make-lang.in (GCC_LINK): Use LINKER.\n\t(GNAT1_C_OBJS): Remove ada/b_gnat1.o.  List ada/seh_init.o and\n\tada/targext.o here...\n\t(GNAT_ADA_OBJS): ...and not here.\n\t(GNAT1_ADA_OBJS): Add ada/b_gnat1.o.\n\t(GNATBIND_OBJS): Reorder.\n\nCo-Authored-By: Eric Botcazou <ebotcazou@adacore.com>\n\nFrom-SVN: r176210", "tree": {"sha": "18042d58d56e687de9c857cb5ad05b8bf282ca29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18042d58d56e687de9c857cb5ad05b8bf282ca29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d652a1865628038acbfc0b9cab1ef7547d49d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d652a1865628038acbfc0b9cab1ef7547d49d40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d652a1865628038acbfc0b9cab1ef7547d49d40"}], "stats": {"total": 434, "additions": 372, "deletions": 62}, "files": [{"sha": "cb1a354afab4e1443b81ce8f132777506149be51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -1,3 +1,8 @@\n+2011-07-12  Laurent GUERBY  <laurent@guerby.net>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* prefix.h: Wrap up in extern \"C\" block.\n+\n 2011-07-12  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \tAMD bdver2 Enablement"}, {"sha": "652f33d5b4728c59fefebf7e31686cb83fd6c1c2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -1,3 +1,44 @@\n+2011-07-12  Laurent GUERBY  <laurent@guerby.net>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* adadecode.c: Wrap up in extern \"C\" block.\n+\t* adadecode.h: Likewise.\n+\t* adaint.c: Likewise.  Remove 'const' keyword.\n+\t* adaint.h: Likewise.\n+\t* argv.c: Likewise.\n+\t* atree.h: Likewise.\n+\t* cio.c: Likewise.\n+\t* cstreams.c: Likewise.\n+\t* env.c: Likewise.\n+\t* exit.c: Likewise.\n+\t* fe.h: Likewise.\n+\t* final.c: Likewise.\n+\t* init.c: Likewise.\n+\t* initialize.c: Likewise.\n+\t* link.c: Likewise.\n+\t* namet.h: Likewise.\n+\t* nlists.h: Likewise.\n+\t* raise.c: Likewise.\n+\t* raise.h: Likewise.\n+\t* repinfo.h: Likewise.\n+\t* seh_init.c: Likewise.\n+\t* targext.c: Likewise.\n+\t* tracebak.c: Likewise.\n+\t* uintp.h: Likewise.\n+\t* urealp.h: Likewise.\n+\t* xeinfo.adb: Wrap up generated C code in extern \"C\" block.\n+\t* xsinfo.adb: Likewise.\n+\t* xsnamest.adb: Likewise.\n+\t* gcc-interface/gadaint.h: Wrap up in extern \"C\" block.\n+\t* gcc-interface/gigi.h: Wrap up some prototypes in extern \"C\" block.\n+\t* gcc-interface/misc.c: Likewise.\n+\t* gcc-interface/Make-lang.in (GCC_LINK): Use LINKER.\n+\t(GNAT1_C_OBJS): Remove ada/b_gnat1.o.  List ada/seh_init.o and\n+\tada/targext.o here...\n+\t(GNAT_ADA_OBJS): ...and not here.\n+\t(GNAT1_ADA_OBJS): Add ada/b_gnat1.o.\n+\t(GNATBIND_OBJS): Reorder.\n+\n 2011-07-07  Richard Henderson  <rth@redhat.com>\n \n \t* gcc-interface/misc.c (gnat_init_gcc_eh): Don't call"}, {"sha": "1c48856ebf5e8e224f102c5452f3beb082cc9b57", "filename": "gcc/ada/adadecode.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadadecode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadadecode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 2001-2009, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2001-2011, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -352,6 +352,10 @@ __gnat_decode (const char *coded_name, char *ada_name, int verbose)\n     }\n }\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef IN_GCC\n char *\n ada_demangle (const char *coded_name)\n@@ -402,3 +406,7 @@ get_encoding (const char *coded_name, char *encoding)\n \n   *dest_index = '\\0';\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "73dda238a093ca08fda91a0940d0e6e7c852d63e", "filename": "gcc/ada/adadecode.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadadecode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadadecode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *           Copyright (C) 2001-2009, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2001-2011, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,6 +29,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* This function will return the Ada name from the encoded form.\n    The Ada coding is done in exp_dbug.ads and this is the inverse function.\n    see exp_dbug.ads for full encoding rules, a short description is added\n@@ -51,3 +55,7 @@ extern void get_encoding (const char *, char *);\n    function used in the binutils and GDB. Always consider using __gnat_decode\n    instead of ada_demangle. Caller must free the pointer returned.  */\n extern char *ada_demangle (const char *);\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "dbd76a5e0c7ffde2b51a2de4e53eaaa5e353bde5", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -34,6 +34,10 @@\n    package Osint.  Many of the subprograms in OS_Lib import standard\n    library calls directly. This file contains all other routines.  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef __vxworks\n \n /* No need to redefine exit here.  */\n@@ -291,9 +295,9 @@ const char *__gnat_library_template = GNAT_LIBRARY_TEMPLATE;\n /* This variable is used in hostparm.ads to say whether the host is a VMS\n    system.  */\n #ifdef VMS\n-const int __gnat_vmsp = 1;\n+int __gnat_vmsp = 1;\n #else\n-const int __gnat_vmsp = 0;\n+int __gnat_vmsp = 0;\n #endif\n \n #if defined (VMS)\n@@ -324,7 +328,7 @@ const int __gnat_vmsp = 0;\n #endif\n \n /* Used for Ada bindings */\n-const int __gnat_size_of_file_attributes = sizeof (struct file_attributes);\n+int __gnat_size_of_file_attributes = sizeof (struct file_attributes);\n \n /* Reset the file attributes as if no system call had been performed */\n void __gnat_stat_to_attr (int fd, char* name, struct file_attributes* attr);\n@@ -3686,3 +3690,7 @@ void *__gnat_lwp_self (void)\n    return (void *) syscall (__NR_gettid);\n }\n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "3ceecaac63a762494afaa92892ea211e9587da10", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,6 +29,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #include <sys/stat.h>\n #include <stdio.h>\n \n@@ -262,3 +266,7 @@ extern int    get_gcc_version                      (void);\n \n extern int    __gnat_binder_supports_auto_init     (void);\n extern int    __gnat_sals_init_using_constructors  (void);\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "29f163972eafc8edc692b96b543066e2e20a549f", "filename": "gcc/ada/argv.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2009, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2011, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -30,17 +30,21 @@\n  ****************************************************************************/\n \n /* Routines for accessing command line arguments from both the runtime\n-   library and from the compiler itself. In the former case, gnat_argc\n+   library and from the compiler itself.  In the former case, gnat_argc\n    and gnat_argv are the original argc and argv values as stored by the\n    binder generated main program, and these routines are accessed from\n-   the Ada.Command_Line package. In the compiler case, gnat_argc and\n+   the Ada.Command_Line package.  In the compiler case, gnat_argc and\n    gnat_argv are the values as modified by toplev, and these routines\n-   are accessed from the Osint package. */\n+   are accessed from the Osint package.  */\n \n /* Also routines for accessing the environment from the runtime library.\n    Gnat_envp is the original envp value as stored by the binder generated\n    main program, and these routines are accessed from the\n-   Ada.Command_Line.Environment package. */\n+   Ada.Command_Line.Environment package.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n #ifdef IN_RTS\n #include \"tconfig.h\"\n@@ -116,3 +120,7 @@ __gnat_fill_env (char *a, int i)\n   if (gnat_envp != NULL)\n     strncpy (a, gnat_envp[i], strlen (gnat_envp[i]));\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "553e60f1e3b67f9bdd49d8ac6ba6547e1ce0d272", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,7 +29,11 @@\n    atree.adb and must be kept synchronized with changes in these files.\n \n    Note that only routines for reading the tree are included, since the tree\n-   transformer is not supposed to modify the tree in any way. */\n+   transformer is not supposed to modify the tree in any way.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n /* Structure used for the first part of the node in the case where we have\n    an Nkind.  */\n@@ -734,3 +738,6 @@ extern Node_Id Current_Error_Node;\n #define Flag253(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.NK.flag71)\n #define Flag254(N)     (Nodes_Ptr[(N) - First_Node_Id + 4].U.NK.flag72)\n \n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "73e54270f0d690f084220d0e5016d9abb056ae85", "filename": "gcc/ada/cio.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,6 +29,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -129,3 +133,7 @@ mktemp (char *template)\n   return tmpnam (NULL);\n }\n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "3477cf4e6165e66208ba6fc81c3093595f84d617", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *              Auxiliary C functions for Interfaces.C.Streams              *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,7 +29,11 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* Routines required for implementing routines in Interfaces.C.Streams */\n+/* Routines required for implementing routines in Interfaces.C.Streams.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n #ifdef __vxworks\n #include \"vxWorks.h\"\n@@ -242,3 +246,7 @@ __gnat_full_name (char *nam, char *buffer)\n \n   return buffer;\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "acd928ce86bb540dc6ee1afa3b10e3a0d0796b62", "filename": "gcc/ada/env.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2010, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2011, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -37,6 +37,10 @@\n #define _BSD\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -323,3 +327,7 @@ void __gnat_clearenv (void) {\n   clearenv ();\n #endif\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "47983e87ef7ee86875f7e4ef1f37db1b03ab68ef", "filename": "gcc/ada/exit.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexit.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,6 +29,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef __alpha_vxworks\n #include \"vxWorks.h\"\n #endif\n@@ -44,7 +48,7 @@\n \n #include \"adaint.h\"\n \n-/* Routine used by Ada.Command_Line.Set_Exit_Status */\n+/* Routine used by Ada.Command_Line.Set_Exit_Status.  */\n \n int gnat_exit_status = 0;\n \n@@ -53,3 +57,7 @@ __gnat_set_exit_status (int i)\n {\n   gnat_exit_status = i;\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "18b14611e38e1a78324831ef683f34770f5afad4", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -32,6 +32,10 @@\n /* This file contains definitions to access front-end functions and\n    variables used by gigi.  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* comperr:  */\n \n #define Compiler_Abort comperr__compiler_abort\n@@ -251,3 +255,7 @@ extern void Set_Has_No_Elaboration_Code\t(Node_Id, Boolean);\n extern Boolean Backend_Overflow_Checks_On_Target;\n extern Boolean Stack_Check_Probes_On_Target;\n extern Boolean Stack_Check_Limits_On_Target;\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "b49b3deaf8b2f6c7a614d4db8a787cfba854f146", "filename": "gcc/ada/final.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffinal.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,14 +29,22 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n extern void __gnat_finalize (void);\n \n /* This routine is called at the extreme end of execution of an Ada program\n    (the call is generated by the binder). The standard routine does nothing\n    at all, the intention is that this be replaced by system specific code\n-   where finalization is required. */\n+   where finalization is required.  */\n \n void\n __gnat_finalize (void)\n {\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "c471508767c278ad6af3600d7f6f017d74678401", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -104,19 +104,19 @@ ADA_TOOLS_FLAGS_TO_PASS=\\\n \t\"GNATLINK=../../gnatlink\"\t\\\n \t\"GNATBIND=../../gnatbind\"\n \n-GCC_LINK=$(CC) -static-libgcc $(LDFLAGS)\n+GCC_LINK=$(LINKER) $(ALL_LINKERFLAGS) -static-libgcc $(LDFLAGS)\n \n # Lists of files for various purposes.\n \n # Languages-specific object files for Ada.\n+\n # Object files for gnat1 from C sources.\n-GNAT1_C_OBJS = ada/b_gnat1.o ada/adadecode.o ada/adaint.o ada/cstreams.o \\\n- ada/cio.o ada/targtyps.o ada/decl.o ada/misc.o ada/utils.o ada/utils2.o \\\n- ada/trans.o ada/cuintp.o ada/argv.o ada/raise.o ada/init.o ada/tracebak.o \\\n- ada/initialize.o ada/env.o\n+GNAT1_C_OBJS = ada/adadecode.o ada/adaint.o ada/argv.o ada/cio.o \\\n+ ada/cstreams.o ada/env.o ada/init.o ada/initialize.o ada/raise.o \\\n+ ada/seh_init.o ada/targext.o ada/tracebak.o ada/cuintp.o ada/decl.o \\\n+ ada/misc.o ada/utils.o ada/utils2.o ada/trans.o ada/targtyps.o\n \n # Object files from Ada sources that are used by gnat1\n-\n GNAT_ADA_OBJS =\t\\\n  ada/a-charac.o\t\\\n  ada/a-chlat1.o\t\\\n@@ -270,7 +270,6 @@ GNAT_ADA_OBJS =\t\\\n  ada/scng.o\t\\\n  ada/scos.o\t\\\n  ada/sdefault.o\t\\\n- ada/seh_init.o\t\\\n  ada/sem.o\t\\\n  ada/sem_aggr.o\t\\\n  ada/sem_attr.o\t\\\n@@ -320,7 +319,6 @@ GNAT_ADA_OBJS =\t\\\n  ada/switch.o\t\\\n  ada/system.o\t\\\n  ada/table.o\t\\\n- ada/targext.o\t\\\n  ada/targparm.o\t\\\n  ada/tbuild.o\t\\\n  ada/tree_gen.o\t\\\n@@ -338,24 +336,24 @@ GNAT_ADA_OBJS =\t\\\n  ada/widechar.o\n \n # Object files for gnat executables\n-GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o\n+GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o ada/b_gnat1.o\n \n GNAT1_OBJS = $(GNAT1_C_OBJS) $(GNAT1_ADA_OBJS)\n \n GNATBIND_OBJS = \\\n  ada/adaint.o     \\\n  ada/argv.o       \\\n- ada/exit.o       \\\n  ada/cio.o        \\\n  ada/cstreams.o   \\\n  ada/env.o        \\\n+ ada/exit.o       \\\n  ada/final.o      \\\n  ada/init.o       \\\n  ada/initialize.o \\\n- ada/seh_init.o   \\\n  ada/link.o       \\\n- ada/targext.o    \\\n  ada/raise.o      \\\n+ ada/seh_init.o   \\\n+ ada/targext.o    \\\n  ada/tracebak.o   \\\n  ada/ada.o        \\\n  ada/a-clrefi.o   \\"}, {"sha": "ce27a14d01751e0735a4de536e47efae8432a34f", "filename": "gcc/ada/gcc-interface/gadaint.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2Fgadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2Fgadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgadaint.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *             Copyright (C) 2010, Free Software Foundation, Inc.           *\n+ *           Copyright (C) 2010-2011, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -30,6 +30,14 @@\n #ifndef GCC_ADAINT_H\n #define GCC_ADAINT_H\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n extern char *__gnat_to_canonical_file_spec (char *);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif /* GCC_ADAINT_H */"}, {"sha": "8ef609796fb16ec24255bfbc12d2c6cd39dcbeb3", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -199,6 +199,10 @@ struct File_Info_Type\n   Nat Num_Source_Lines;\n };\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* This is the main program of the back-end.  It sets up all the table\n    structures and then generates code.  */\n extern void gigi (Node_Id gnat_root, int max_gnat_node,\n@@ -218,6 +222,10 @@ extern void gigi (Node_Id gnat_root, int max_gnat_node,\n                   Entity_Id standard_exception_type,\n                   Int gigi_operating_mode);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* GNAT_NODE is the root of some GNAT tree.  Return the root of the\n    GCC tree corresponding to that GNAT tree.  Normally, no code is generated;\n    we just return an equivalent tree which is used elsewhere to generate\n@@ -929,6 +937,11 @@ extern int fp_size_to_prec (int size);\n /* These functions return the basic data type sizes and related parameters\n    about the target machine.  */\n \n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n extern Pos get_target_bits_per_unit (void);\n extern Pos get_target_bits_per_word (void);\n extern Pos get_target_char_size (void);\n@@ -953,6 +966,10 @@ extern Nat get_target_strict_alignment (void);\n extern Nat get_target_double_float_alignment (void);\n extern Nat get_target_double_scalar_alignment (void);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* Let code know whether we are targetting VMS without need of\n    intrusive preprocessor directives.  */\n #ifndef TARGET_ABI_OPEN_VMS"}, {"sha": "62e7ac7769bcb528e298d1bdf95d54821de405fc", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -68,12 +68,20 @@ const char **save_argv;\n extern int gnat_argc;\n extern char **gnat_argv;\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* Declare functions we use as part of startup.  */\n extern void __gnat_initialize (void *);\n extern void __gnat_install_SEH_handler (void *);\n extern void adainit (void);\n extern void _ada_gnat1drv (void);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* The parser for the language.  For us, we process the GNAT tree.  */\n \n static void"}, {"sha": "888ec208ca1fbe47c33ae0e7ab316107343d73d9", "filename": "gcc/ada/init.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -38,6 +38,10 @@\n     installed by this file are used to catch the resulting signals that come\n     from these probes failing (i.e. touching protected pages).  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* This file should be kept synchronized with 2sinit.ads, 2sinit.adb,\n    s-init-ae653-cert.adb and s-init-xi-sparc.adb.  All these files implement\n    the required functionality for different targets.  */\n@@ -2403,3 +2407,7 @@ __gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED,\n }\n \n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "90f35a0a9b439771232f811d6d7c7c3d2e07e8ab", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -32,10 +32,14 @@\n /*  This unit provides default implementation for __gnat_initialize ()\n     which is called before the elaboration of the partition. It is provided\n     in a separate file/object so that users can replace it easily.\n-    The default implementation should be null on most targets. */\n+    The default implementation should be null on most targets.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n /* The following include is here to meet the published VxWorks requirement\n-   that the __vxworks header appear before any other include. */\n+   that the __vxworks header appear before any other include.  */\n #ifdef __vxworks\n #include \"vxWorks.h\"\n #endif\n@@ -359,3 +363,7 @@ __gnat_initialize (void *eh ATTRIBUTE_UNUSED)\n }\n \n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "a4722d2d3ab57dc027796b0d4a0a8d3675560f76", "filename": "gcc/ada/link.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,9 +29,12 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/*  This file contains host-specific parameters describing the behavior     */\n-/*  of the linker. It is used by gnatlink as well as all tools that use     */\n-/*  Mlib.                                                                   */\n+/*  This file contains host-specific parameters describing the behavior of the\n+    linker.  It is used by gnatlink as well as all tools that use Mlib.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n #include <string.h>\n \n@@ -254,3 +257,7 @@ const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n const char *__gnat_default_libgcc_subdir = \"lib\";\n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "ec2b488a5effd2fbb93fc2089a0f081daf31fb15", "filename": "gcc/ada/namet.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fnamet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fnamet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2008, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -24,7 +24,11 @@\n  ****************************************************************************/\n \n /* This is the C file that corresponds to the Ada package specification\n-   Namet. It was created manually from files namet.ads and namet.adb.  */\n+   Namet.  It was created manually from files namet.ads and namet.adb.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n /* Structure defining a names table entry.  */\n \n@@ -127,3 +131,7 @@ extern Source_File_Index Get_Source_File_Index (Source_Ptr);\n extern Logical_Line_Number Get_Logical_Line_Number (Source_Ptr);\n extern Column_Number Get_Column_Number (Source_Ptr);\n extern Source_Ptr Instantiation (Source_File_Index);\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "3b9e6726d35b60c3462073fddcb3ef7ab632e7a1", "filename": "gcc/ada/nlists.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fnlists.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fnlists.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2008, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,7 +29,11 @@\n    nlists.adb and must be kept synchronized with changes in these files.\n \n    Note that only routines for reading the tree are included, since the\n-   tree transformer is not supposed to modify the tree in any way. */\n+   tree transformer is not supposed to modify the tree in any way.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n /*  The following is the structure used for the list headers table */\n \n@@ -128,3 +132,7 @@ List_Containing (Node_Id Node)\n {\n   return Nodes_Ptr[Node - First_Node_Id].V.NX.link;\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "35b0e988ee114610f000209391ecefc8cdfbc99d", "filename": "gcc/ada/raise.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fraise.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fraise.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *             Copyright (C) 1992-2009, Free Software Foundation, Inc.      *\n+ *             Copyright (C) 1992-2011, Free Software Foundation, Inc.      *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -32,6 +32,10 @@\n /* Shared routines to support exception handling.  __gnat_unhandled_terminate\n    is shared between all exception handling mechanisms.  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -79,3 +83,7 @@ __gnat_unhandled_terminate (void)\n   /* Default termination handling */\n   __gnat_os_exit (1);\n }\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "d8c245f09836e7a7e3dfcdfb3f0e002a9e4e3bf0", "filename": "gcc/ada/raise.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fraise.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fraise.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -29,6 +29,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* C counterparts of what System.Standard_Library defines.  */\n \n typedef unsigned Exception_Code;\n@@ -60,3 +64,7 @@ extern void __gnat_install_SEH_handler  (void *);\n extern void __gnat_adjust_context_for_raise (int, void *);\n \n extern int gnat_exit_status;\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "8d5ee6d652d9da15e83c9f8dda15437f50cb0727", "filename": "gcc/ada/repinfo.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Frepinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Frepinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1999-2009 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1999-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -31,6 +31,10 @@\n \n /* This file corresponds to the Ada file repinfo.ads.  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n typedef Uint Node_Ref;\n typedef Uint Node_Ref_Or_Val;\n typedef char TCode;\n@@ -75,3 +79,7 @@ typedef char TCode;\n #define Create_Node repinfo__create_node\n extern Node_Ref Create_Node\t(TCode, Node_Ref_Or_Val,\n \t\t\t\t Node_Ref_Or_Val, Node_Ref_Or_Val);\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "2ce99f3a0c278d1a00907745573426ceaaa3fd31", "filename": "gcc/ada/seh_init.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 2005-2009, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2005-2011, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -32,6 +32,10 @@\n /*  This unit contains support for SEH (Structured Exception Handling).\n     Right now the only implementation is for Win32.  */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -311,3 +315,7 @@ void __gnat_install_SEH_handler (void *eh ATTRIBUTE_UNUSED)\n {\n }\n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "df4286c0d27b8e06edef37c1afcbb85503abea0a", "filename": "gcc/ada/targext.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ftargext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ftargext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargext.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -29,9 +29,13 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/*  This file contains target-specific parameters describing the file       */\n-/*  extension for object and executable files. It is used by the compiler,  */\n-/*  binder and tools.                                                       */\n+/*  This file contains target-specific parameters describing the file\n+    extension for object and executable files.  It is used by the compiler,\n+    binder and tools.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n #ifdef IN_RTS\n #include \"tconfig.h\"\n@@ -54,3 +58,7 @@\n const char *__gnat_target_object_extension = TARGET_OBJECT_SUFFIX;\n const char *__gnat_target_executable_extension = TARGET_EXECUTABLE_SUFFIX;\n const char *__gnat_target_debuggable_extension = TARGET_EXECUTABLE_SUFFIX;\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "6764cd42755607efe4cbcf8eaab13fd83c195f16", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2000-2010, AdaCore                     *\n+ *            Copyright (C) 2000-2011, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -46,6 +46,10 @@\n    Alpha/VMS\n */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef __alpha_vxworks\n #include \"vxWorks.h\"\n #endif\n@@ -513,3 +517,7 @@ __gnat_backtrace (void **array ATTRIBUTE_UNUSED,\n #endif\n \n #endif\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "b950a88cbfb388f25d74e29f75ed03575f763d7d", "filename": "gcc/ada/uintp.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fuintp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fuintp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2010, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -23,8 +23,12 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file corresponds to the Ada package specification Uintp. It was\n-   created manually from the files uintp.ads and uintp.adb  */\n+/* This file corresponds to the Ada package specification Uintp.  It was\n+   created manually from the files uintp.ads and uintp.adb.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n /* Support for universal integer arithmetic */\n \n@@ -94,3 +98,7 @@ extern struct Uint_Entry *uintp__uints__table;\n \n #define Udigits_Ptr uintp__udigits__table\n extern int *uintp__udigits__table;\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "fbb87608133a0dd1504ceb97efcf4643ab1e006d", "filename": "gcc/ada/urealp.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Furealp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Furealp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2007, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -23,8 +23,12 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/* This file corresponds to the Ada package specification Urealp. It was\n-   created manually from the files urealp.ads and urealp.adb  */\n+/* This file corresponds to the Ada package specification Urealp.  It was\n+   created manually from the files urealp.ads and urealp.adb.  */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n /* Support for universal real arithmetic.  */\n \n@@ -48,3 +52,7 @@ enum Rounding_Mode {Floor = 0, Ceiling = 1, Round = 2, Round_Even = 3};\n #define Machine eval_fat__machine\n extern Ureal Machine\t\t(Entity_Id, Ureal, enum Rounding_Mode,\n \t\t\t\t Node_Id);\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "cce58315fe22474eaa79d7b5fc2fae4fdf0f56a8", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -276,6 +276,10 @@ begin\n \n    Put_Line (Ofile, \"\");\n \n+   Put_Line (Ofile, \"#ifdef __cplusplus\");\n+   Put_Line (Ofile, \"extern \"\"C\"\" {\");\n+   Put_Line (Ofile, \"#endif\");\n+\n    --  Find and record pragma Inlines\n \n    loop\n@@ -492,6 +496,11 @@ begin\n    end loop;\n \n    Put_Line (Ofile, \"\");\n+\n+   Put_Line (Ofile, \"#ifdef __cplusplus\");\n+   Put_Line (Ofile, \"}\");\n+   Put_Line (Ofile, \"#endif\");\n+\n    Put_Line\n      (Ofile,\n       \"/* End of einfo.h (C version of Einfo package specification) */\");"}, {"sha": "869ae873f292a95d63cda481927fdb2a8b1f3f27", "filename": "gcc/ada/xsinfo.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fxsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fxsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsinfo.adb?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -162,6 +162,11 @@ begin\n    end loop;\n \n    Put_Line (Ofile, \"\");\n+\n+   Put_Line (Ofile, \"#ifdef __cplusplus\");\n+   Put_Line (Ofile, \"extern \"\"C\"\" {\");\n+   Put_Line (Ofile, \"#endif\");\n+\n    NKV := 0;\n \n    --  Loop through node kind codes\n@@ -248,6 +253,9 @@ exception\n    when Done =>\n       Close (InS);\n       Put_Line (Ofile, \"\");\n+      Put_Line (Ofile, \"#ifdef __cplusplus\");\n+      Put_Line (Ofile, \"}\");\n+      Put_Line (Ofile, \"#endif\");\n       Close (Ofile);\n       Set_Exit_Status (0);\n "}, {"sha": "d044fb1130e1d65d832a6e320e885776830f4cae", "filename": "gcc/ada/xsnamest.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fxsnamest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fada%2Fxsnamest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnamest.adb?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -194,6 +194,10 @@ begin\n    Create (OutB, Out_File, \"snames.nb\");\n    Create (OutH, Out_File, \"snames.nh\");\n \n+   Put_Line (OutH, \"#ifdef __cplusplus\");\n+   Put_Line (OutH, \"extern \"\"C\"\" {\");\n+   Put_Line (OutH, \"#endif\");\n+\n    Anchored_Mode := True;\n    Val := 0;\n \n@@ -274,4 +278,8 @@ begin\n       Line := Get_Line (InH);\n       Put_Line (OutH, Line);\n    end loop;\n+\n+   Put_Line (OutH, \"#ifdef __cplusplus\");\n+   Put_Line (OutH, \"}\");\n+   Put_Line (OutH, \"#endif\");\n end XSnamesT;"}, {"sha": "5bafe20900d36dfb05a743bcd91840c45c72affc", "filename": "gcc/prefix.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fprefix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9bd455d4cb9df5f0c54858448ebfd699b14f1b/gcc%2Fprefix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprefix.h?ref=9e9bd455d4cb9df5f0c54858448ebfd699b14f1b", "patch": "@@ -21,10 +21,20 @@ License along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_PREFIX_H\n #define GCC_PREFIX_H\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* These functions are called by the Ada frontend with C convention.  */\n+\n /* Update PATH using KEY if PATH starts with PREFIX.  The returned\n    string is always malloc-ed, and the caller is responsible for\n    freeing it.  */\n extern char *update_path (const char *path, const char *key);\n extern void set_std_prefix (const char *, int);\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif /* ! GCC_PREFIX_H */"}]}