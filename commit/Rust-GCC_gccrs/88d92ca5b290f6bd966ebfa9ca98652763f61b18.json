{"sha": "88d92ca5b290f6bd966ebfa9ca98652763f61b18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhkOTJjYTViMjkwZjZiZDk2NmViZmE5Y2E5ODY1Mjc2M2Y2MWIxOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-22T19:43:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-22T19:43:56Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1051", "tree": {"sha": "2834e819d13d49fb7cc280d8947fa618f8d2bd0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2834e819d13d49fb7cc280d8947fa618f8d2bd0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88d92ca5b290f6bd966ebfa9ca98652763f61b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d92ca5b290f6bd966ebfa9ca98652763f61b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88d92ca5b290f6bd966ebfa9ca98652763f61b18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d92ca5b290f6bd966ebfa9ca98652763f61b18/comments", "author": null, "committer": null, "parents": [{"sha": "2bae939e78cf37926f577cebb49812a42da1f637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bae939e78cf37926f577cebb49812a42da1f637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bae939e78cf37926f577cebb49812a42da1f637"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "95efad586bb1a935d9210ab1f6c6a4365ab5fd9c", "filename": "gcc/c-lex.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d92ca5b290f6bd966ebfa9ca98652763f61b18/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d92ca5b290f6bd966ebfa9ca98652763f61b18/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=88d92ca5b290f6bd966ebfa9ca98652763f61b18", "patch": "@@ -1446,10 +1446,10 @@ yylex ()\n \t\t      warn = 1;\n \t\t    }\n \t\tif (warn)\n-\t\t  warning (\"integer constant out of range\");\n+\t\t  pedwarn (\"integer constant out of range\");\n \t      }\n \t    else if (overflow)\n-\t      warning (\"integer constant larger than compiler can handle\");\n+\t      pedwarn (\"integer constant larger than compiler can handle\");\n \n \t    /* If it overflowed our internal buffer, then make it unsigned.\n \t       We can't distinguish based on the tree node because\n@@ -1602,6 +1602,9 @@ yylex ()\n \t      }\n #endif\n \n+\t    if (!int_fits_type_p (yylval.ttype, type))\n+\t      pedwarn (\"integer constant out of range\");\n+\n \t    TREE_TYPE (yylval.ttype) = type;\n \t    *p = 0;\n \t  }"}]}