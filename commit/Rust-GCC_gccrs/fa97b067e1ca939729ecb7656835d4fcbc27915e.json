{"sha": "fa97b067e1ca939729ecb7656835d4fcbc27915e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5N2IwNjdlMWNhOTM5NzI5ZWNiNzY1NjgzNWQ0ZmNiYzI3OTE1ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-07T18:51:22Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-07T18:51:22Z"}, "message": "re PR target/80425 (Extra inter-unit register move with zero-extension)\n\n\tPR target/80425\n\t* config/i386.i386.md (*zero_extendsidi2): Change (?r,*Yj), (?*Yi,r)\n\tand (*x,m) to ($r,Yj), ($Yi,r) and ($x,m).\n\t(zero-extendsidi peephole2): Remove peephole.\n\ntestsuite/ChangeLog:\n\n\tPR target/80425\n\t* gcc.target/i386/pr80425-3.c: New test.\n\nFrom-SVN: r254505", "tree": {"sha": "80e9cc208a8bf487a96aaab09797cacbbddea872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e9cc208a8bf487a96aaab09797cacbbddea872"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa97b067e1ca939729ecb7656835d4fcbc27915e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa97b067e1ca939729ecb7656835d4fcbc27915e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa97b067e1ca939729ecb7656835d4fcbc27915e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa97b067e1ca939729ecb7656835d4fcbc27915e/comments", "author": null, "committer": null, "parents": [{"sha": "8b36a2501807646182b9b52c8b896f1a1cbd034e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b36a2501807646182b9b52c8b896f1a1cbd034e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b36a2501807646182b9b52c8b896f1a1cbd034e"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "da5902d0ab553501e47e7d1a209afca968197a95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa97b067e1ca939729ecb7656835d4fcbc27915e", "patch": "@@ -1,3 +1,10 @@\n+2017-11-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/80425\n+\t* config/i386.i386.md (*zero_extendsidi2): Change (?r,*Yj), (?*Yi,r)\n+\tand (*x,m) to ($r,Yj), ($Yi,r) and ($x,m).\n+\t(zero-extendsidi peephole2): Remove peephole.\n+\n 2017-11-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR c/53037\n@@ -7,15 +14,13 @@\n \n 2017-11-07  Andrew Waterman  <andrew@sifive.com>\n \n-\t* config/riscv/riscv-protos.h (riscv_hard_regno_nregs): New\n-\tprototype.\n+\t* config/riscv/riscv-protos.h (riscv_hard_regno_nregs): New prototype.\n \t(riscv_expand_block_move): Likewise.\n-\tgcc/config/riscv/riscv.h (MOVE_RATIO): Tune cost to movmemsi\n+\t* config/riscv/riscv.h (MOVE_RATIO): Tune cost to movmemsi\n \timplementation.\n \t(RISCV_MAX_MOVE_BYTES_PER_LOOP_ITER): New define.\n \t(RISCV_MAX_MOVE_BYTES_STRAIGHT): New define.\n-\tgcc/config/riscv/riscv.c (riscv_block_move_straight): New\n-\tfunction.\n+\t* config/riscv/riscv.c (riscv_block_move_straight): New function.\n \t(riscv_adjust_block_mem): Likewise.\n \t(riscv_block_move_loop): Likewise.\n \t(riscv_expand_block_move): Likewise."}, {"sha": "36061e19adb84b04da6f3eb01eaf2eac54201a7f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fa97b067e1ca939729ecb7656835d4fcbc27915e", "patch": "@@ -3864,10 +3864,10 @@\n \n (define_insn \"*zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\"=r,?r,?o,r   ,o,?*Ym,?!*y,?r ,?*Yi,*x,*x,*v,*r\")\n+\t\t\"=r,?r,?o,r   ,o,?*Ym,?!*y,$r,$Yi,$x,*x,*v,*r\")\n \t(zero_extend:DI\n \t (match_operand:SI 1 \"x86_64_zext_operand\"\n-\t        \"0 ,rm,r ,rmWz,0,r   ,m   ,*Yj,r   ,m ,*x,*v,*k\")))]\n+\t        \"0 ,rm,r ,rmWz,0,r   ,m   ,Yj,r  ,m ,*x,*v,*k\")))]\n   \"\"\n {\n   switch (get_attr_type (insn))\n@@ -3983,15 +3983,6 @@\n    (set (match_dup 4) (const_int 0))]\n   \"split_double_mode (DImode, &operands[0], 1, &operands[3], &operands[4]);\")\n \n-(define_peephole2\n-  [(set (match_operand:DI 0 \"general_reg_operand\")\n-\t(zero_extend:DI (match_operand:SI 1 \"nonimmediate_gr_operand\")))\n-   (set (match_operand:DI 2 \"sse_reg_operand\") (match_dup 0))]\n-  \"TARGET_64BIT && TARGET_SSE2 && TARGET_INTER_UNIT_MOVES_TO_VEC\n-   && peep2_reg_dead_p (2, operands[0])\"\n-  [(set (match_dup 2)\n-\t(zero_extend:DI (match_dup 1)))])\n-\n (define_mode_attr kmov_isa\n   [(QI \"avx512dq\") (HI \"avx512f\") (SI \"avx512bw\") (DI \"avx512bw\")])\n "}, {"sha": "d8a018846b8f032c6074f8796385490304a84fca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa97b067e1ca939729ecb7656835d4fcbc27915e", "patch": "@@ -1,8 +1,13 @@\n+2017-11-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/80425\n+\t* gcc.target/i386/pr80425-3.c: New test.\n+\n 2017-11-07  Andreas Schwab  <schwab@suse.de>\n \n \t* g++.dg/pr50763-3.C (evalPoint): Return a value.\n \n-2017-10-17  Wilco Dijkstra  <wdijkstr@arm.com>\n+2017-11-07  Wilco Dijkstra  <wdijkstr@arm.com>\n \t    Jackson Woodruff  <jackson.woodruff@arm.com>\n \n \tPR tree-optimization/71026"}, {"sha": "1bf80b17b1c64e46deac4305e0c291e727b8207e", "filename": "gcc/testsuite/gcc.target/i386/pr80425-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80425-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa97b067e1ca939729ecb7656835d4fcbc27915e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80425-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80425-3.c?ref=fa97b067e1ca939729ecb7656835d4fcbc27915e", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+\n+#include <x86intrin.h>\n+\n+extern int a;\n+\n+__m512i\n+f1 (__m512i x)\n+{\n+  return _mm512_srai_epi32 (x, a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */"}]}