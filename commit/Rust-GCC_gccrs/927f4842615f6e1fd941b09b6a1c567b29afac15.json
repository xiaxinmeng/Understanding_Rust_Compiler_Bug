{"sha": "927f4842615f6e1fd941b09b6a1c567b29afac15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI3ZjQ4NDI2MTVmNmUxZmQ5NDFiMDliNmExYzU2N2IyOWFmYWMxNQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-04-07T18:01:24Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-04-07T18:01:24Z"}, "message": "PR fortran/40539 Document LOGICAL representation\n\nFrom-SVN: r158080", "tree": {"sha": "f58f054ebfe593aa75b4dbb7e266b91d66e068eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f58f054ebfe593aa75b4dbb7e266b91d66e068eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/927f4842615f6e1fd941b09b6a1c567b29afac15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/927f4842615f6e1fd941b09b6a1c567b29afac15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/927f4842615f6e1fd941b09b6a1c567b29afac15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/927f4842615f6e1fd941b09b6a1c567b29afac15/comments", "author": null, "committer": null, "parents": [{"sha": "87cf065171b0d195d31f52dc6ffe519029efc7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87cf065171b0d195d31f52dc6ffe519029efc7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87cf065171b0d195d31f52dc6ffe519029efc7b7"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "1f46730e9299f31939baefa2e6eb103fdd3e6c41", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/927f4842615f6e1fd941b09b6a1c567b29afac15/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/927f4842615f6e1fd941b09b6a1c567b29afac15/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=927f4842615f6e1fd941b09b6a1c567b29afac15", "patch": "@@ -1,3 +1,9 @@\n+2010-04-07  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/40539\n+\t* gfortran.texi: Add section about representation of\n+        LOGICAL variables.\n+\n 2010-04-07  Simon Baldwin  <simonb@google.com>\n \n \t* cpp.c (cb_cpp_error): Add warning reason argument, set a value"}, {"sha": "6ab413cbc3cb3ee3dc2823226bb5d6585048f4c2", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/927f4842615f6e1fd941b09b6a1c567b29afac15/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/927f4842615f6e1fd941b09b6a1c567b29afac15/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=927f4842615f6e1fd941b09b6a1c567b29afac15", "patch": "@@ -181,7 +181,7 @@ Part I: Invoking GNU Fortran\n \n Part II: Language Reference\n * Fortran 2003 and 2008 status::  Fortran 2003 and 2008 features supported by GNU Fortran.\n-* Compiler Characteristics::      KIND type parameters supported.\n+* Compiler Characteristics::      User-visible implementation details.\n * Mixed-Language Programming::    Interoperability with C\n * Extensions::           Language extensions implemented by GNU Fortran.\n * Intrinsic Procedures:: Intrinsic procedures supported by GNU Fortran.\n@@ -962,14 +962,13 @@ about the current Fortran 2008 implementation status.\n @node Compiler Characteristics\n @chapter Compiler Characteristics\n \n-@c TODO: Formulate this introduction a little more generally once\n-@c there is more here than KIND type parameters.\n-\n-This chapter describes certain characteristics of the GNU Fortran compiler,\n-namely the KIND type parameter values supported.\n+This chapter describes certain characteristics of the GNU Fortran\n+compiler, that are not specified by the Fortran standard, but which\n+might in some way or another become visible to the programmer.\n \n @menu\n * KIND Type Parameters::\n+* Internal representation of LOGICAL variables::\n @end menu\n \n \n@@ -1013,6 +1012,32 @@ imaginary part are a real value of the given size).  It is recommended to use\n the @code{SELECT_*_KIND} intrinsics instead of the concrete values.\n \n \n+@node Internal representation of LOGICAL variables\n+@section Internal representation of LOGICAL variables\n+@cindex logical, variable representation\n+\n+The Fortran standard does not specify how variables of @code{LOGICAL}\n+type are represented, beyond requiring that @code{LOGICAL} variables\n+of default kind have the same storage size as default @code{INTEGER}\n+and @code{REAL} variables.  The GNU Fortran internal representation is\n+as follows.\n+\n+A @code{LOGICAL(KIND=N)} variable is represented as an\n+@code{INTEGER(KIND=N)} variable, however, with only two permissible\n+values: @code{1} for @code{.TRUE.} and @code{0} for\n+@code{.FALSE.}. Any other integer value results in undefined behavior.\n+\n+Note that for mixed-language programming using the\n+@code{ISO_C_BINDING} feature, there is a @code{C_BOOL} kind that can\n+be used to create @code{LOGICAL(KIND=C_BOOL)} variables which are\n+interoperable with the C99 _Bool type.  The C99 _Bool type has an\n+internal representation described in the C99 standard, which is\n+identical to the above description, i.e. with 1 for true and 0 for\n+false being the only permissible values.  Thus the internal\n+representation of @code{LOGICAL} variables in GNU Fortran is identical\n+to C99 _Bool, except for a possible difference in storage size\n+depending on the kind.\n+\n @c ---------------------------------------------------------------------\n @c Extensions\n @c ---------------------------------------------------------------------"}]}