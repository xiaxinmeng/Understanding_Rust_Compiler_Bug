{"sha": "ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY0ZTI4ZWI3ZDAxZjM2ZDg4NDhhMzI4ZDBhZDdjZjRiOGMxZDNjNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:45:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:45:51Z"}, "message": "[multiple changes]\n\n2014-01-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tataat.adb (Initialize_Attributes): Abort might already be\n\tdeferred in Create_Task.\n\n2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* checks.adb (Apply_Scalar_Range_Check): Flag\n\tthe exponent as requiring a range check when the expression is\n\tan exponentiation.\n\nFrom-SVN: r206831", "tree": {"sha": "a59b6fd98ee1b936e9707aa626a253218922d45e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a59b6fd98ee1b936e9707aa626a253218922d45e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/comments", "author": null, "committer": null, "parents": [{"sha": "a1efcc17b7f168c11304b7600ca7e25430ec6128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1efcc17b7f168c11304b7600ca7e25430ec6128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1efcc17b7f168c11304b7600ca7e25430ec6128"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "99cfe83a391e6de3812ba36c56500a64ace4c670", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "patch": "@@ -1,3 +1,14 @@\n+2014-01-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tataat.adb (Initialize_Attributes): Abort might already be\n+\tdeferred in Create_Task.\n+\n+2014-01-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb (Apply_Scalar_Range_Check): Flag\n+\tthe exponent as requiring a range check when the expression is\n+\tan exponentiation.\n+\n 2014-01-20  Fedor Rybin  <frybin@adacore.com>\n \n \t* gnat_ugn.texi: Documenting --passed-tests option for gnattest."}, {"sha": "8b8fdd86ed104f714176b5cbb2db03fbe5bb471f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "patch": "@@ -2797,6 +2797,19 @@ package body Checks is\n          return;\n       end if;\n \n+      --  Ensure that the exponent is a natural. The flag is set only in formal\n+      --  verification mode as the expander takes care of this check and there\n+      --  is no expansion phase in GNATprove_Mode.\n+\n+      --  Doesn't seem right to do this unconditionally, we should check the\n+      --  range of the exponent operand. If we do that, it seems like we should\n+      --  then set the flag unconditionally and have the expander check the\n+      --  flag to see whether to generate a check ???\n+\n+      if GNATprove_Mode and then Nkind (Expr) = N_Op_Expon then\n+         Set_Do_Range_Check (Right_Opnd (Expr));\n+      end if;\n+\n       Is_Unconstrained_Subscr_Ref :=\n         Is_Subscr_Ref and then not Is_Constrained (Arr_Typ);\n "}, {"sha": "c78543077f856f2438c284825ebf863bd0ef9954", "filename": "gcc/ada/s-tataat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/gcc%2Fada%2Fs-tataat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5/gcc%2Fada%2Fs-tataat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tataat.adb?ref=ff4e28eb7d01f36d8848a328d0ad7cf4b8c1d3c5", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2010, AdaCore                     --\n+--                     Copyright (C) 1995-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -186,7 +186,7 @@ package body System.Tasking.Task_Attributes is\n       Self_Id : constant Task_Id := Self;\n \n    begin\n-      Defer_Abort (Self_Id);\n+      Defer_Abort_Nestable (Self_Id);\n       Lock_RTS;\n \n       --  Initialize all the direct-access attributes of this task\n@@ -204,7 +204,7 @@ package body System.Tasking.Task_Attributes is\n       end loop;\n \n       Unlock_RTS;\n-      Undefer_Abort (Self_Id);\n+      Undefer_Abort_Nestable (Self_Id);\n \n    exception\n       when others =>"}]}