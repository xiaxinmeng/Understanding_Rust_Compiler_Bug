{"sha": "83115e9eb8a54893088eb556fb4cc9194c0c5926", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMxMTVlOWViOGE1NDg5MzA4OGViNTU2ZmI0Y2M5MTk0YzBjNTkyNg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2019-11-20T15:49:23Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2019-11-20T15:49:23Z"}, "message": "libgomp/test: Add flags to find libatomic in build-tree testing\n\nAdd flags to find libatomic in build-tree testing, fixing a catastrophic\nlibgomp testsuite failure with `riscv*-*-linux*' targets, which imply\n`-latomic' with the `-pthread' GCC option, implied in turn by the\n`-fopenacc' and `-fopenmp' options, removing failures like:\n\n.../bin/riscv64-linux-gnu-ld: cannot find -latomic\ncollect2: error: ld returned 1 exit status\ncompiler exited with status 1\nFAIL: libgomp.c/../libgomp.c-c++-common/atomic-18.c (test for excess errors)\nExcess errors:\n.../bin/riscv64-linux-gnu-ld: cannot find -latomic\n\nUNRESOLVED: libgomp.c/../libgomp.c-c++-common/atomic-18.c compilation failed to produce executable\n\nand bringing overall test results for the `riscv64-linux-gnu' target\n(here with the `x86_64-linux-gnu' host and RISC-V QEMU in the Linux user\nemulation mode as the target board) from:\n\n\t\t=== libgomp Summary ===\n\n# of expected passes\t\t90\n# of unexpected failures\t3267\n# of expected failures\t\t2\n# of unresolved testcases\t3247\n# of unsupported tests\t\t548\n\nto:\n\n\t\t=== libgomp Summary ===\n\n# of expected passes\t\t6834\n# of unexpected failures\t4\n# of expected failures\t\t4\n# of unsupported tests\t\t518\n\n\tlibgomp/\n\t* testsuite/lib/libgomp.exp (libgomp_init): Add flags to find\n\tlibatomic in build-tree testing.\n\nFrom-SVN: r278505", "tree": {"sha": "1b5fc4ab18a4f28911a8594e974209c6ff0a2b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b5fc4ab18a4f28911a8594e974209c6ff0a2b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83115e9eb8a54893088eb556fb4cc9194c0c5926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83115e9eb8a54893088eb556fb4cc9194c0c5926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83115e9eb8a54893088eb556fb4cc9194c0c5926", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83115e9eb8a54893088eb556fb4cc9194c0c5926/comments", "author": null, "committer": null, "parents": [{"sha": "8e361de1b08a579fe5d771be5ba47cf31533380c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e361de1b08a579fe5d771be5ba47cf31533380c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e361de1b08a579fe5d771be5ba47cf31533380c"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "a7e6870c3eafb63d789430f2769a96af1f882c92", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83115e9eb8a54893088eb556fb4cc9194c0c5926/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83115e9eb8a54893088eb556fb4cc9194c0c5926/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=83115e9eb8a54893088eb556fb4cc9194c0c5926", "patch": "@@ -1,3 +1,8 @@\n+2019-11-20  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* testsuite/lib/libgomp.exp (libgomp_init): Add flags to find\n+\tlibatomic in build-tree testing.\n+\n 2019-11-18  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* testsuite/Makefile.in: Regenerate."}, {"sha": "74d032623c95231071a665979e5dcb93ca6b9144", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83115e9eb8a54893088eb556fb4cc9194c0c5926/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83115e9eb8a54893088eb556fb4cc9194c0c5926/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=83115e9eb8a54893088eb556fb4cc9194c0c5926", "patch": "@@ -174,6 +174,20 @@ proc libgomp_init { args } {\n     # For build-tree testing, also consider the library paths used for builing.\n     # For installed testing, we assume all that to be provided in the sysroot.\n     if { $blddir != \"\" } {\n+\t# The `-fopenacc' and `-fopenmp' options imply `-pthread', and\n+\t# that implies `-latomic' on some hosts, so wire in libatomic\n+\t# build directories.\n+\tif [ishost \"riscv*-*-linux*\"] {\n+\t    set shlib_ext [get_shlib_extension]\n+\t    set atomic_library_path \"${blddir}/../libatomic/.libs\"\n+\t    if { [file exists \"${atomic_library_path}/libatomic.a\"]\n+\t\t || [file exists \\\n+\t\t     \"${atomic_library_path}/libatomic.${shlib_ext}\"] } {\n+\t\tlappend ALWAYS_CFLAGS \\\n+\t\t    \"additional_flags=-L${atomic_library_path}\"\n+\t\tappend always_ld_library_path \":${atomic_library_path}\"\n+\t    }\n+\t}\n \tglobal cuda_driver_include\n \tglobal cuda_driver_lib\n \tif { $cuda_driver_include != \"\" } {"}]}