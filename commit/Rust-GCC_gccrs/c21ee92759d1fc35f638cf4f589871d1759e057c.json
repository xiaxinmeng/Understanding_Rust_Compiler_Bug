{"sha": "c21ee92759d1fc35f638cf4f589871d1759e057c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIxZWU5Mjc1OWQxZmMzNWY2MzhjZjRmNTg5ODcxZDE3NTllMDU3Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-12-09T20:34:02Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-12-09T20:34:02Z"}, "message": "(output_mem_loc_descriptor, case MULT): Add.\n\n(dwarf_fund_type_name, case FT_unsigned_int64): Fix typo.\n\nFrom-SVN: r13254", "tree": {"sha": "9ac0de31f44d748eb58648c2c3ba86105de1cc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ac0de31f44d748eb58648c2c3ba86105de1cc3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c21ee92759d1fc35f638cf4f589871d1759e057c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21ee92759d1fc35f638cf4f589871d1759e057c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21ee92759d1fc35f638cf4f589871d1759e057c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21ee92759d1fc35f638cf4f589871d1759e057c/comments", "author": null, "committer": null, "parents": [{"sha": "dd2478ae22a89abca3f7d1fe8008346b45f74d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2478ae22a89abca3f7d1fe8008346b45f74d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd2478ae22a89abca3f7d1fe8008346b45f74d45"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "daddd0e779f54c896cd114f5327bcfd20cd7ab1b", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21ee92759d1fc35f638cf4f589871d1759e057c/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21ee92759d1fc35f638cf4f589871d1759e057c/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=c21ee92759d1fc35f638cf4f589871d1759e057c", "patch": "@@ -1098,7 +1098,7 @@ dwarf_fund_type_name (ft)\n     case FT_unsigned_int32:\treturn \"FT_unsigned_int32\";\n     case FT_int64:\t\treturn \"FT_int64\";\n     case FT_signed_int64:\treturn \"FT_signed_int64\";\n-    case FT_unsigned_int64:\treturn \"FT_signed_int64\";\n+    case FT_unsigned_int64:\treturn \"FT_unsigned_int64\";\n \n     case FT_real32:\t\treturn \"FT_real32\";\n     case FT_real64:\t\treturn \"FT_real64\";\n@@ -1663,6 +1663,15 @@ output_mem_loc_descriptor (rtl)\n \tASM_OUTPUT_DWARF_DATA4 (asm_out_file, INTVAL (rtl));\n \tbreak;\n \n+      case MULT:\n+\t/* If a pseudo-reg is optimized away, it is possible for it to\n+\t   be replaced with a MEM containing a multiply.  Use a GNU extension\n+\t   to describe it.  */\n+\toutput_mem_loc_descriptor (XEXP (rtl, 0));\n+\toutput_mem_loc_descriptor (XEXP (rtl, 1));\n+\tASM_OUTPUT_DWARF_STACK_OP (asm_out_file, OP_MULT);\n+\tbreak;\n+\n       default:\n \tabort ();\n     }"}]}