{"sha": "4facf2bf5b7b32f444da864306b5c11e14c15bcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZhY2YyYmY1YjdiMzJmNDQ0ZGE4NjQzMDZiNWMxMWUxNGMxNWJjZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-06-04T15:43:59Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-06-04T15:44:23Z"}, "message": "Fortran: Fix OpenMP/OpenACC continue-line parsing\n\ngcc/fortran/ChangeLog:\n\n\t* scanner.c (skip_fixed_omp_sentinel): Set openacc_flag if\n\tthis is not an (OpenMP) continuation line.\n\t(skip_fixed_oacc_sentinel): Likewise for openmp_flag and OpenACC.\n\t(gfc_next_char_literal): gfc_error_now to force error for mixed OMP/ACC\n\tcontinuation once per location and return '\\n'.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/goacc/omp-fixed.f: Re-add test item changed in previous\n\tcommit in addition - add more dg-errors and '... end ...' due to changed\n\tparsing.\n\t* gfortran.dg/goacc/omp.f95: Likewise.\n\t* gfortran.dg/goacc-gomp/mixed-1.f: New test.", "tree": {"sha": "0b74515b5819d17fa2a64f5260b03628a6ac0c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b74515b5819d17fa2a64f5260b03628a6ac0c1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4facf2bf5b7b32f444da864306b5c11e14c15bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4facf2bf5b7b32f444da864306b5c11e14c15bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4facf2bf5b7b32f444da864306b5c11e14c15bcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4facf2bf5b7b32f444da864306b5c11e14c15bcf/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d7dae0eb366a88a1baba1857ecc54c09e4a520e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d7dae0eb366a88a1baba1857ecc54c09e4a520e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d7dae0eb366a88a1baba1857ecc54c09e4a520e"}], "stats": {"total": 80, "additions": 67, "deletions": 13}, "files": [{"sha": "39db0994b62d0e29168dc572a7bf38c15ada748a", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=4facf2bf5b7b32f444da864306b5c11e14c15bcf", "patch": "@@ -942,6 +942,8 @@ skip_fixed_omp_sentinel (locus *start)\n \t  && (continue_flag\n \t      || c == ' ' || c == '\\t' || c == '0'))\n \t{\n+\t  if (c == ' ' || c == '\\t' || c == '0')\n+\t    openacc_flag = 0;\n \t  do\n \t    c = next_char ();\n \t  while (gfc_is_whitespace (c));\n@@ -971,6 +973,8 @@ skip_fixed_oacc_sentinel (locus *start)\n \t  && (continue_flag\n \t      || c == ' ' || c == '\\t' || c == '0'))\n \t{\n+\t  if (c == ' ' || c == '\\t' || c == '0')\n+\t    openmp_flag = 0;\n \t  do\n \t    c = next_char ();\n \t  while (gfc_is_whitespace (c));\n@@ -1205,6 +1209,7 @@ gfc_skip_comments (void)\n gfc_char_t\n gfc_next_char_literal (gfc_instring in_string)\n {\n+  static locus omp_acc_err_loc = {};\n   locus old_loc;\n   int i, prev_openmp_flag, prev_openacc_flag;\n   gfc_char_t c;\n@@ -1403,14 +1408,16 @@ gfc_next_char_literal (gfc_instring in_string)\n \t    {\n \t      if (gfc_wide_tolower (c) != (unsigned char) \"!$acc\"[i])\n \t\tis_openmp = 1;\n-\t      if (i == 4)\n-\t\told_loc = gfc_current_locus;\n \t    }\n-\t  gfc_error (is_openmp\n-\t\t     ? G_(\"Wrong OpenACC continuation at %C: \"\n-\t\t\t  \"expected !$ACC, got !$OMP\")\n-\t\t     : G_(\"Wrong OpenMP continuation at %C: \"\n-\t\t\t  \"expected !$OMP, got !$ACC\"));\n+\t  if (omp_acc_err_loc.nextc != gfc_current_locus.nextc\n+\t      || omp_acc_err_loc.lb != gfc_current_locus.lb)\n+\t    gfc_error_now (is_openmp\n+\t\t\t   ? G_(\"Wrong OpenACC continuation at %C: \"\n+\t\t\t\t\"expected !$ACC, got !$OMP\")\n+\t\t\t   : G_(\"Wrong OpenMP continuation at %C: \"\n+\t\t\t\t\"expected !$OMP, got !$ACC\"));\n+\t  omp_acc_err_loc = gfc_current_locus;\n+\t  goto not_continuation;\n \t}\n \n       if (c != '&')\n@@ -1511,11 +1518,15 @@ gfc_next_char_literal (gfc_instring in_string)\n \t      if (gfc_wide_tolower (c) != (unsigned char) \"*$acc\"[i])\n \t\tis_openmp = 1;\n \t    }\n-\t  gfc_error (is_openmp\n-\t\t     ? G_(\"Wrong OpenACC continuation at %C: \"\n-\t\t\t  \"expected !$ACC, got !$OMP\")\n-\t\t     : G_(\"Wrong OpenMP continuation at %C: \"\n-\t\t\t  \"expected !$OMP, got !$ACC\"));\n+\t  if (omp_acc_err_loc.nextc != gfc_current_locus.nextc\n+\t      || omp_acc_err_loc.lb != gfc_current_locus.lb)\n+\t    gfc_error_now (is_openmp\n+\t\t\t   ? G_(\"Wrong OpenACC continuation at %C: \"\n+\t\t\t\t\"expected !$ACC, got !$OMP\")\n+\t\t\t   : G_(\"Wrong OpenMP continuation at %C: \"\n+\t\t\t\t\"expected !$OMP, got !$ACC\"));\n+\t  omp_acc_err_loc = gfc_current_locus;\n+\t  goto not_continuation;\n \t}\n       else if (!openmp_flag && !openacc_flag)\n \tfor (i = 0; i < 5; i++)"}, {"sha": "2e12f1727e4122005c3dd965722040fd67d328b5", "filename": "gcc/testsuite/gfortran.dg/goacc-gomp/mixed-1.f", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fmixed-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fmixed-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fmixed-1.f?ref=4facf2bf5b7b32f444da864306b5c11e14c15bcf", "patch": "@@ -0,0 +1,23 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+      ! OMP PARALLEL gets parsed  and is properly handled\n+      ! But ACC& gives an error\n+      ! [Before: an error is printed but OMP parses 'parallel loop ...']\n+      subroutine one\n+        implicit none\n+        integer i\n+!$omp parallel\n+!$acc& loop independent  !  { dg-error \"Wrong OpenMP continuation at .1.: expected !.OMP, got !.ACC\" }\n+        do i = 1, 5\n+        end do\n+!$omp end parallel\n+      end\n+\n+      ! [Before: Bogus 'Wrong OpenMP continuation' as it was read as continuation line!]\n+      subroutine two\n+!$omp parallel\n+!$acc loop independent  !  { dg-error \"The !.ACC LOOP directive cannot be specified within a !.OMP PARALLEL region\" }\n+       do i = 1, 5\n+       end do\n+!$omp end parallel\n+       end"}, {"sha": "b1e7affc457c2d284661f0cc81a26e96182789e9", "filename": "gcc/testsuite/gfortran.dg/goacc/omp-fixed.f", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp-fixed.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp-fixed.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp-fixed.f?ref=4facf2bf5b7b32f444da864306b5c11e14c15bcf", "patch": "@@ -6,7 +6,7 @@ SUBROUTINE ICHI\n \n !$OMP PARALLEL\n !$ACC PARALLEL                                                          &\n-!$ACC& COPYIN(ARGC) ! { dg-error \"directive cannot be specified within\" }\n+!$ACC& COPYIN(ARGC)  ! { dg-error \"The !.ACC PARALLEL directive cannot be specified within a !.OMP PARALLEL region\" }\n       IF (ARGC .NE. 0) THEN\n          STOP 1\n       END IF\n@@ -24,9 +24,17 @@ SUBROUTINE NI\n !$OMP& DO ! { dg-error \"Wrong OpenACC continuation\" }\n       DO I = 1, 10\n       ENDDO\n+!$ACC END PARALLEL\n \n !$OMP PARALLEL                                                          &\n !$ACC& KERNELS LOOP ! { dg-error \"Wrong OpenMP continuation\" }\n       DO I = 1, 10\n       ENDDO\n+!$OMP END PARALLEL\n+\n+!$OMP PARALLEL                                                          &\n+!$ACC& LOOP ! { dg-error \"Wrong OpenMP continuation\" }\n+      DO I = 1, 10\n+      ENDDO\n+!$OMP END PARALLEL\n       END SUBROUTINE NI"}, {"sha": "d8bd886ad9c0e6a19ccefe827c5f7887f111613e", "filename": "gcc/testsuite/gfortran.dg/goacc/omp.f95", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4facf2bf5b7b32f444da864306b5c11e14c15bcf/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fomp.f95?ref=4facf2bf5b7b32f444da864306b5c11e14c15bcf", "patch": "@@ -67,8 +67,20 @@ end subroutine roku\n    subroutine nana\n      !$acc parallel &\n      !$omp do ! { dg-error \"Wrong OpenACC continuation\" }\n+     do i = 1, 5 ! { dg-error \"The !.OMP DO directive cannot be specified within a !.ACC PARALLEL region\" \"\" { target *-*-* } .-1 }\n+     end do\n+     !$acc end parallel\n \n      !$omp parallel &\n      !$acc kernels loop ! { dg-error \"Wrong OpenMP continuation\" }\n+     do i = 1, 5 ! { dg-error \"The !.ACC KERNELS LOOP directive cannot be specified within a !.OMP PARALLEL region\" \"\" { target *-*-* } .-1 }\n+     end do\n+     !$omp end parallel\n+\n+     !$omp parallel &\n+     !$acc loop ! { dg-error \"Wrong OpenMP continuation\" }\n+     do i = 1, 5 ! { dg-error \"The !.ACC LOOP directive cannot be specified within a !.OMP PARALLEL region\" \"\" { target *-*-* } .-1 }\n+     end do\n+     !$omp end parallel\n    end subroutine nana\n end module test"}]}