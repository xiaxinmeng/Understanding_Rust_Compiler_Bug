{"sha": "fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1YjVkOTc3ZjdlYTBmYmJkZjY3MzgwYzViNGMxMTQzMjg5OTRiNw==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2006-06-20T19:25:32Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2006-06-20T19:25:32Z"}, "message": "Makefile.am (AM_CXXFLAGS): Define GCJ_VERSIONED_LIBDIR to \"$(dbexecdir)\".\n\n2006-06-20  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am (AM_CXXFLAGS): Define GCJ_VERSIONED_LIBDIR to\n\t\"$(dbexecdir)\".\n\tBuild libjvm.la.\n\t* Makefile.in: Regenerate.\n\t* jni.cc (the_vm): Rename and export as ...\n\t(_Jv_the_vm): New exported symbol.\n\t(_Jv_JNI_AttachCurrentThread): Export.\n\t(_Jv_JNI_DestroyJavaVM): Replace the_vm references with _Jv_the_vm\n\treferences.\n\t(_Jv_GetJavaVM): Likewise.\n\t(JNI_GetDefaultJavaVMInitArgs, JNI_CreateJavaVM,\n\tJNI_GetCreatedJavaVMs): Move to ...\n\t* jni-libjvm.cc: New file.\n\nFrom-SVN: r114824", "tree": {"sha": "0045d406677ce30008114e5f5c2fe72d66197382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0045d406677ce30008114e5f5c2fe72d66197382"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/comments", "author": null, "committer": null, "parents": [{"sha": "0ccff66da6bfbd08891576a1074e6ef46f252a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ccff66da6bfbd08891576a1074e6ef46f252a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ccff66da6bfbd08891576a1074e6ef46f252a15"}], "stats": {"total": 323, "additions": 208, "deletions": 115}, "files": [{"sha": "0be49111f4a5b383fbd0a01d5ba1535b54424030", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "patch": "@@ -1,3 +1,19 @@\n+2006-06-20  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (AM_CXXFLAGS): Define GCJ_VERSIONED_LIBDIR to\n+\t\"$(dbexecdir)\".\n+\tBuild libjvm.la.\n+\t* Makefile.in: Regenerate.\n+\t* jni.cc (the_vm): Rename and export as ...\n+\t(_Jv_the_vm): New exported symbol.\n+\t(_Jv_JNI_AttachCurrentThread): Export.\n+\t(_Jv_JNI_DestroyJavaVM): Replace the_vm references with _Jv_the_vm\n+\treferences.\n+\t(_Jv_GetJavaVM): Likewise.\n+\t(JNI_GetDefaultJavaVMInitArgs, JNI_CreateJavaVM,\n+\tJNI_GetCreatedJavaVMs): Move to ...\n+\t* jni-libjvm.cc: New file.\n+\n 2006-06-19  Andrew Haley  <aph@redhat.com>\n \n \t* testsuite/libjava.lang/PR27908.out: New."}, {"sha": "b7221b5c9baa79c6f6efabdc8b324d56546ce0c0", "filename": "libjava/Makefile.am", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "patch": "@@ -40,6 +40,8 @@ if XLIB_AWT\n toolexeclib_LTLIBRARIES += lib-gnu-awt-xlib.la\n endif\n \n+dbexec_LTLIBRARIES = libjvm.la\n+\n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = libgcj.pc\n \n@@ -122,7 +124,7 @@ AM_CXXFLAGS = \\\n         -DBOOT_CLASS_PATH=\"\\\"$(BOOT_CLASS_PATH_DIR)\\\"\" \\\n \t-DJAVA_EXT_DIRS=\"\\\"$(jardir)/ext\\\"\" \\\n \t-DGCJ_ENDORSED_DIRS=\"\\\"$(jardir)/gcj-endorsed\\\"\" \\\n-\t-DGCJ_VERSIONED_LIBDIR=\"\\\"$(libdir)/gcj-$(gcc_version)\\\"\" \\\n+\t-DGCJ_VERSIONED_LIBDIR=\"\\\"$(dbexecdir)\\\"\" \\\n \t-DPATH_SEPARATOR=\"\\\"$(CLASSPATH_SEPARATOR)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE=\"\\\"$(dbexecdir)/$(db_name)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE_PATH_TAIL=\"\\\"$(db_pathtail)\\\"\" \\\n@@ -232,6 +234,14 @@ libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n \t$(LIBLTDL) $(libgcj_la_LIBADD)\n libgcj_la_LINK = $(LIBLINK)\n \n+## libjvm.so\n+libjvm_la_SOURCES = jni-libjvm.cc\n+libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec\n+## See jv_convert_LDADD.\n+libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n+## The mysterious backslash in the grep pattern is consumed by make.\n+libjvm_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n+        -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n ## The .db file.  This rule is only used for native builds, so it is\n ## safe to invoke gcj-dbtool.\n@@ -887,6 +897,7 @@ create-headers: $(headers_to_make)\n \n $(libgcj_la_OBJECTS) $(gcj_dbtool_OBJECTS) $(xlib_nat_files): headers.stamp\n $(libgij_la_OBJECTS): headers.stamp\n+$(libjvm_la_OBJECTS): headers.stamp\n \n ## ################################################################\n "}, {"sha": "5d4c196025657b60afd4b070bf6e2b12be66cbb1", "filename": "libjava/Makefile.in", "status": "modified", "additions": 84, "deletions": 41, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "patch": "@@ -104,12 +104,14 @@ am__vpath_adj = case $$p in \\\n     *) f=$$p;; \\\n   esac;\n am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n-am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bindir)\" \\\n+am__installdirs = \"$(DESTDIR)$(dbexecdir)\" \\\n+\t\"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bindir)\" \\\n \t\"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(dbexecdir)\" \\\n \t\"$(DESTDIR)$(jardir)\" \"$(DESTDIR)$(pkgconfigdir)\" \\\n \t\"$(DESTDIR)$(toolexecmainlibdir)\"\n+dbexecLTLIBRARIES_INSTALL = $(INSTALL)\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n-LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n+LTLIBRARIES = $(dbexec_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n am__dirstamp = $(am__leading_dot)dirstamp\n am__objects_1 = gnu/gcj/xlib/lib_gnu_awt_xlib_la-natClip.lo \\\n \tgnu/gcj/xlib/lib_gnu_awt_xlib_la-natColormap.lo \\\n@@ -343,6 +345,8 @@ am_libgcj_la_OBJECTS = prims.lo jni.lo exception.lo stacktrace.lo \\\n libgcj_la_OBJECTS = $(am_libgcj_la_OBJECTS)\n am_libgij_la_OBJECTS = gij.lo\n libgij_la_OBJECTS = $(am_libgij_la_OBJECTS)\n+am_libjvm_la_OBJECTS = jni-libjvm.lo\n+libjvm_la_OBJECTS = $(am_libjvm_la_OBJECTS)\n binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)\n PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)\n am_gcj_dbtool_OBJECTS = gnu/gcj/tools/gcj_dbtool/Main.$(OBJEXT) \\\n@@ -388,14 +392,14 @@ LTGCJCOMPILE = $(LIBTOOL) --mode=compile $(GCJ) $(AM_GCJFLAGS) \\\n \t$(GCJFLAGS)\n GCJLD = $(GCJ)\n SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) $(libgcj_la_SOURCES) \\\n-\t$(libgij_la_SOURCES) $(gcj_dbtool_SOURCES) \\\n-\t$(gen_from_JIS_SOURCES) $(gij_SOURCES) $(grmic_SOURCES) \\\n-\t$(grmiregistry_SOURCES) $(jv_convert_SOURCES)\n+\t$(libgij_la_SOURCES) $(libjvm_la_SOURCES) \\\n+\t$(gcj_dbtool_SOURCES) $(gen_from_JIS_SOURCES) $(gij_SOURCES) \\\n+\t$(grmic_SOURCES) $(grmiregistry_SOURCES) $(jv_convert_SOURCES)\n DIST_SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) \\\n \t$(am__libgcj_la_SOURCES_DIST) $(libgij_la_SOURCES) \\\n-\t$(gcj_dbtool_SOURCES) $(am__gen_from_JIS_SOURCES_DIST) \\\n-\t$(gij_SOURCES) $(grmic_SOURCES) $(grmiregistry_SOURCES) \\\n-\t$(jv_convert_SOURCES)\n+\t$(libjvm_la_SOURCES) $(gcj_dbtool_SOURCES) \\\n+\t$(am__gen_from_JIS_SOURCES_DIST) $(gij_SOURCES) \\\n+\t$(grmic_SOURCES) $(grmiregistry_SOURCES) $(jv_convert_SOURCES)\n RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \thtml-recursive info-recursive install-data-recursive \\\n \tinstall-exec-recursive install-info-recursive \\\n@@ -662,6 +666,7 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) $(foreach o\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)\n toolexeclib_LTLIBRARIES = libgcj.la libgij.la $(am__append_2)\n toolexecmainlib_DATA = libgcj.spec\n+dbexec_LTLIBRARIES = libjvm.la\n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = libgcj.pc\n jardir = $(datadir)/java\n@@ -701,7 +706,7 @@ AM_CXXFLAGS = \\\n         -DBOOT_CLASS_PATH=\"\\\"$(BOOT_CLASS_PATH_DIR)\\\"\" \\\n \t-DJAVA_EXT_DIRS=\"\\\"$(jardir)/ext\\\"\" \\\n \t-DGCJ_ENDORSED_DIRS=\"\\\"$(jardir)/gcj-endorsed\\\"\" \\\n-\t-DGCJ_VERSIONED_LIBDIR=\"\\\"$(libdir)/gcj-$(gcc_version)\\\"\" \\\n+\t-DGCJ_VERSIONED_LIBDIR=\"\\\"$(dbexecdir)\\\"\" \\\n \t-DPATH_SEPARATOR=\"\\\"$(CLASSPATH_SEPARATOR)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE=\"\\\"$(dbexecdir)/$(db_name)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE_PATH_TAIL=\"\\\"$(db_pathtail)\\\"\" \\\n@@ -762,6 +767,12 @@ libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n \t$(LIBLTDL) $(libgcj_la_LIBADD)\n \n libgcj_la_LINK = $(LIBLINK)\n+libjvm_la_SOURCES = jni-libjvm.cc\n+libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec\n+libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n+libjvm_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n+        -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n+\n lib_gnu_awt_xlib_la_SOURCES = $(xlib_nat_source_files)\n lib_gnu_awt_xlib_la_LIBADD = gnu/awt/xlib.lo gnu/gcj/xlib.lo\n lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n@@ -7210,6 +7221,33 @@ libgcj-test.spec: $(top_builddir)/config.status $(srcdir)/libgcj-test.spec.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n scripts/jar: $(top_builddir)/config.status $(top_srcdir)/scripts/jar.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n+install-dbexecLTLIBRARIES: $(dbexec_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(dbexecdir)\" || $(mkdir_p) \"$(DESTDIR)$(dbexecdir)\"\n+\t@list='$(dbexec_LTLIBRARIES)'; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    f=$(am__strip_dir) \\\n+\t    echo \" $(LIBTOOL) --mode=install $(dbexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(dbexecdir)/$$f'\"; \\\n+\t    $(LIBTOOL) --mode=install $(dbexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) \"$$p\" \"$(DESTDIR)$(dbexecdir)/$$f\"; \\\n+\t  else :; fi; \\\n+\tdone\n+\n+uninstall-dbexecLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@set -x; list='$(dbexec_LTLIBRARIES)'; for p in $$list; do \\\n+\t  p=$(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(dbexecdir)/$$p'\"; \\\n+\t  $(LIBTOOL) --mode=uninstall rm -f \"$(DESTDIR)$(dbexecdir)/$$p\"; \\\n+\tdone\n+\n+clean-dbexecLTLIBRARIES:\n+\t-test -z \"$(dbexec_LTLIBRARIES)\" || rm -f $(dbexec_LTLIBRARIES)\n+\t@list='$(dbexec_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n \t@$(NORMAL_INSTALL)\n \ttest -z \"$(toolexeclibdir)\" || $(mkdir_p) \"$(DESTDIR)$(toolexeclibdir)\"\n@@ -7572,6 +7610,8 @@ libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES)\n \t$(libgcj_la_LINK) -rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(libgcj_la_OBJECTS) $(libgcj_la_LIBADD) $(LIBS)\n libgij.la: $(libgij_la_OBJECTS) $(libgij_la_DEPENDENCIES) \n \t$(CXXLINK) -rpath $(toolexeclibdir) $(libgij_la_LDFLAGS) $(libgij_la_OBJECTS) $(libgij_la_LIBADD) $(LIBS)\n+libjvm.la: $(libjvm_la_OBJECTS) $(libjvm_la_DEPENDENCIES) \n+\t$(CXXLINK) -rpath $(dbexecdir) $(libjvm_la_LDFLAGS) $(libjvm_la_OBJECTS) $(libjvm_la_LIBADD) $(LIBS)\n install-binPROGRAMS: $(bin_PROGRAMS)\n \t@$(NORMAL_INSTALL)\n \ttest -z \"$(bindir)\" || $(mkdir_p) \"$(DESTDIR)$(bindir)\"\n@@ -7842,6 +7882,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exception.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gij.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jni-libjvm.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jni.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/no-threads.Plo@am__quote@\n@@ -8532,7 +8573,7 @@ check: check-recursive\n all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA)\n installdirs: installdirs-recursive\n installdirs-am:\n-\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(dbexecdir)\" \"$(DESTDIR)$(jardir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(toolexecmainlibdir)\"; do \\\n+\tfor dir in \"$(DESTDIR)$(dbexecdir)\" \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(dbexecdir)\" \"$(DESTDIR)$(jardir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(toolexecmainlibdir)\"; do \\\n \t  test -z \"$$dir\" || $(mkdir_p) \"$$dir\"; \\\n \tdone\n install: install-recursive\n@@ -8611,9 +8652,9 @@ maintainer-clean-generic:\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n clean: clean-recursive\n \n-clean-am: clean-binPROGRAMS clean-generic clean-libtool \\\n-\tclean-noinstPROGRAMS clean-toolexeclibLTLIBRARIES \\\n-\tmostlyclean-am\n+clean-am: clean-binPROGRAMS clean-dbexecLTLIBRARIES clean-generic \\\n+\tclean-libtool clean-noinstPROGRAMS \\\n+\tclean-toolexeclibLTLIBRARIES mostlyclean-am\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n@@ -8636,8 +8677,8 @@ install-data-am: install-data-local install-jarDATA \\\n \tinstall-pkgconfigDATA\n \n install-exec-am: install-binPROGRAMS install-binSCRIPTS \\\n-\tinstall-dbexecDATA install-toolexeclibLTLIBRARIES \\\n-\tinstall-toolexecmainlibDATA\n+\tinstall-dbexecDATA install-dbexecLTLIBRARIES \\\n+\tinstall-toolexeclibLTLIBRARIES install-toolexecmainlibDATA\n \n install-info: install-info-recursive\n \n@@ -8666,36 +8707,37 @@ ps: ps-recursive\n ps-am:\n \n uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \\\n-\tuninstall-dbexecDATA uninstall-info-am uninstall-jarDATA \\\n-\tuninstall-pkgconfigDATA uninstall-toolexeclibLTLIBRARIES \\\n-\tuninstall-toolexecmainlibDATA\n+\tuninstall-dbexecDATA uninstall-dbexecLTLIBRARIES \\\n+\tuninstall-info-am uninstall-jarDATA uninstall-pkgconfigDATA \\\n+\tuninstall-toolexeclibLTLIBRARIES uninstall-toolexecmainlibDATA\n \n uninstall-info: uninstall-info-recursive\n \n .PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \\\n-\tcheck-am clean clean-binPROGRAMS clean-generic clean-libtool \\\n-\tclean-noinstPROGRAMS clean-recursive \\\n-\tclean-toolexeclibLTLIBRARIES ctags ctags-recursive dist \\\n-\tdist-all dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip \\\n-\tdistcheck distclean distclean-compile distclean-generic \\\n-\tdistclean-libtool distclean-local distclean-recursive \\\n-\tdistclean-tags distcleancheck distdir distuninstallcheck dvi \\\n-\tdvi-am html html-am info info-am install install-am \\\n-\tinstall-binPROGRAMS install-binSCRIPTS install-data \\\n-\tinstall-data-am install-data-local install-dbexecDATA \\\n-\tinstall-exec install-exec-am install-info install-info-am \\\n-\tinstall-jarDATA install-man install-pkgconfigDATA \\\n-\tinstall-strip install-toolexeclibLTLIBRARIES \\\n-\tinstall-toolexecmainlibDATA installcheck installcheck-am \\\n-\tinstalldirs installdirs-am maintainer-clean \\\n-\tmaintainer-clean-generic maintainer-clean-recursive \\\n-\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n-\tmostlyclean-libtool mostlyclean-local mostlyclean-recursive \\\n-\tpdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \\\n-\tuninstall-binPROGRAMS uninstall-binSCRIPTS \\\n-\tuninstall-dbexecDATA uninstall-info-am uninstall-jarDATA \\\n-\tuninstall-pkgconfigDATA uninstall-toolexeclibLTLIBRARIES \\\n-\tuninstall-toolexecmainlibDATA\n+\tcheck-am clean clean-binPROGRAMS clean-dbexecLTLIBRARIES \\\n+\tclean-generic clean-libtool clean-noinstPROGRAMS \\\n+\tclean-recursive clean-toolexeclibLTLIBRARIES ctags \\\n+\tctags-recursive dist dist-all dist-bzip2 dist-gzip dist-shar \\\n+\tdist-tarZ dist-zip distcheck distclean distclean-compile \\\n+\tdistclean-generic distclean-libtool distclean-local \\\n+\tdistclean-recursive distclean-tags distcleancheck distdir \\\n+\tdistuninstallcheck dvi dvi-am html html-am info info-am \\\n+\tinstall install-am install-binPROGRAMS install-binSCRIPTS \\\n+\tinstall-data install-data-am install-data-local \\\n+\tinstall-dbexecDATA install-dbexecLTLIBRARIES install-exec \\\n+\tinstall-exec-am install-info install-info-am install-jarDATA \\\n+\tinstall-man install-pkgconfigDATA install-strip \\\n+\tinstall-toolexeclibLTLIBRARIES install-toolexecmainlibDATA \\\n+\tinstallcheck installcheck-am installdirs installdirs-am \\\n+\tmaintainer-clean maintainer-clean-generic \\\n+\tmaintainer-clean-recursive mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool mostlyclean-local \\\n+\tmostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \\\n+\tuninstall uninstall-am uninstall-binPROGRAMS \\\n+\tuninstall-binSCRIPTS uninstall-dbexecDATA \\\n+\tuninstall-dbexecLTLIBRARIES uninstall-info-am \\\n+\tuninstall-jarDATA uninstall-pkgconfigDATA \\\n+\tuninstall-toolexeclibLTLIBRARIES uninstall-toolexecmainlibDATA\n \n \n $(db_name): gcj-dbtool$(EXEEXT)\n@@ -11273,6 +11315,7 @@ create-headers: $(headers_to_make)\n \n $(libgcj_la_OBJECTS) $(gcj_dbtool_OBJECTS) $(xlib_nat_files): headers.stamp\n $(libgij_la_OBJECTS): headers.stamp\n+$(libjvm_la_OBJECTS): headers.stamp\n \n # No install-html support yet.\n .PHONY: install-html"}, {"sha": "d0c3036538ed3ece33c25624e9cac41d0feb0f6e", "filename": "libjava/jni-libjvm.cc", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2Fjni-libjvm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2Fjni-libjvm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni-libjvm.cc?ref=fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "patch": "@@ -0,0 +1,89 @@\n+// jni-libjvm.cc - an implementation of the JNI invocation API.\n+\n+/* Copyright (C) 2006  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <gcj/cni.h>\n+#include <gcj/javaprims.h>\n+#include <java-assert.h>\n+#include <jvm.h>\n+#include <jni.h>\n+\n+using namespace gcj;\n+\n+// Forward declarations.\n+extern struct JNIInvokeInterface _Jv_JNI_InvokeFunctions;\n+extern jint JNICALL _Jv_JNI_AttachCurrentThread (JavaVM *vm,\n+                                                 void **penv, void *args);\n+extern JavaVM *_Jv_the_vm;\n+\n+jint JNICALL\n+JNI_GetDefaultJavaVMInitArgs (void *args)\n+{\n+  jint version = * (jint *) args;\n+  // Here we only support 1.2 and 1.4.\n+  if (version != JNI_VERSION_1_2 && version != JNI_VERSION_1_4)\n+    return JNI_EVERSION;\n+\n+  JavaVMInitArgs *ia = reinterpret_cast<JavaVMInitArgs *> (args);\n+  ia->version = JNI_VERSION_1_4;\n+  ia->nOptions = 0;\n+  ia->options = NULL;\n+  ia->ignoreUnrecognized = true;\n+\n+  return 0;\n+}\n+\n+jint JNICALL\n+JNI_CreateJavaVM (JavaVM **vm, void **penv, void *args)\n+{\n+  JvAssert (! _Jv_the_vm);\n+\n+  jint version = * (jint *) args;\n+  // We only support 1.2 and 1.4.\n+  if (version != JNI_VERSION_1_2 && version != JNI_VERSION_1_4)\n+    return JNI_EVERSION;\n+\n+  JvVMInitArgs* vm_args = reinterpret_cast<JvVMInitArgs *> (args);\n+\n+  jint result = _Jv_CreateJavaVM (vm_args);\n+  if (result)\n+    return result;\n+\n+  // FIXME: synchronize\n+  JavaVM *nvm = (JavaVM *) _Jv_MallocUnchecked (sizeof (JavaVM));\n+  if (nvm == NULL)\n+    return JNI_ERR;\n+  nvm->functions = &_Jv_JNI_InvokeFunctions;\n+\n+  jint r =_Jv_JNI_AttachCurrentThread (nvm, penv, NULL);\n+  if (r < 0)\n+    return r;\n+\n+  _Jv_the_vm = nvm;\n+  *vm = _Jv_the_vm;\n+\n+  return 0;\n+}\n+\n+jint JNICALL\n+JNI_GetCreatedJavaVMs (JavaVM **vm_buffer, jsize buf_len, jsize *n_vms)\n+{\n+  if (buf_len <= 0)\n+    return JNI_ERR;\n+\n+  // We only support a single VM.\n+  if (_Jv_the_vm != NULL)\n+    {\n+      vm_buffer[0] = _Jv_the_vm;\n+      *n_vms = 1;\n+    }\n+  else\n+    *n_vms = 0;\n+  return 0;\n+}"}, {"sha": "19539c7714a83c7f67ab82bcdac7ad606f355606", "filename": "libjava/jni.cc", "status": "modified", "additions": 7, "deletions": 73, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5b5d977f7ea0fbbdf67380c5b4c114328994b7/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=fb5b5d977f7ea0fbbdf67380c5b4c114328994b7", "patch": "@@ -107,7 +107,7 @@ static java::util::IdentityHashMap *local_ref_table;\n static java::util::IdentityHashMap *global_ref_table;\n \n // The only VM.\n-static JavaVM *the_vm;\n+JavaVM *_Jv_the_vm;\n \n #ifdef ENABLE_JVMPI\n // The only JVMPI interface description.\n@@ -2408,7 +2408,7 @@ _Jv_JNI_AttachCurrentThread (JavaVM *, jstring name, void **penv,\n }\n \n // This is the one actually used by JNI.\n-static jint JNICALL\n+jint JNICALL\n _Jv_JNI_AttachCurrentThread (JavaVM *vm, void **penv, void *args)\n {\n   return _Jv_JNI_AttachCurrentThread (vm, NULL, penv, args, false);\n@@ -2424,7 +2424,7 @@ _Jv_JNI_AttachCurrentThreadAsDaemon (JavaVM *vm, void **penv,\n static jint JNICALL\n _Jv_JNI_DestroyJavaVM (JavaVM *vm)\n {\n-  JvAssert (the_vm && vm == the_vm);\n+  JvAssert (_Jv_the_vm && vm == _Jv_the_vm);\n \n   union\n   {\n@@ -2496,93 +2496,27 @@ _Jv_JNI_GetEnv (JavaVM *, void **penv, jint version)\n   return 0;\n }\n \n-jint JNICALL\n-JNI_GetDefaultJavaVMInitArgs (void *args)\n-{\n-  jint version = * (jint *) args;\n-  // Here we only support 1.2 and 1.4.\n-  if (version != JNI_VERSION_1_2 && version != JNI_VERSION_1_4)\n-    return JNI_EVERSION;\n-\n-  JavaVMInitArgs *ia = reinterpret_cast<JavaVMInitArgs *> (args);\n-  ia->version = JNI_VERSION_1_4;\n-  ia->nOptions = 0;\n-  ia->options = NULL;\n-  ia->ignoreUnrecognized = true;\n-\n-  return 0;\n-}\n-\n-jint JNICALL\n-JNI_CreateJavaVM (JavaVM **vm, void **penv, void *args)\n-{\n-  JvAssert (! the_vm);\n-\n-  jint version = * (jint *) args;\n-  // We only support 1.2 and 1.4.\n-  if (version != JNI_VERSION_1_2 && version != JNI_VERSION_1_4)\n-    return JNI_EVERSION;\n-\n-  JvVMInitArgs* vm_args = reinterpret_cast<JvVMInitArgs *> (args);\n-\n-  jint result = _Jv_CreateJavaVM (vm_args);\n-  if (result)\n-    return result;\n-\n-  // FIXME: synchronize\n-  JavaVM *nvm = (JavaVM *) _Jv_MallocUnchecked (sizeof (JavaVM));\n-  if (nvm == NULL)\n-    return JNI_ERR;\n-  nvm->functions = &_Jv_JNI_InvokeFunctions;\n-\n-  jint r =_Jv_JNI_AttachCurrentThread (nvm, penv, NULL);\n-  if (r < 0)\n-    return r;\n-\n-  the_vm = nvm;\n-  *vm = the_vm;\n-\n-  return 0;\n-}\n-\n-jint JNICALL\n-JNI_GetCreatedJavaVMs (JavaVM **vm_buffer, jsize buf_len, jsize *n_vms)\n-{\n-  if (buf_len <= 0)\n-    return JNI_ERR;\n-\n-  // We only support a single VM.\n-  if (the_vm != NULL)\n-    {\n-      vm_buffer[0] = the_vm;\n-      *n_vms = 1;\n-    }\n-  else\n-    *n_vms = 0;\n-  return 0;\n-}\n-\n JavaVM *\n _Jv_GetJavaVM ()\n {\n   // FIXME: synchronize\n-  if (! the_vm)\n+  if (! _Jv_the_vm)\n     {\n       JavaVM *nvm = (JavaVM *) _Jv_MallocUnchecked (sizeof (JavaVM));\n       if (nvm != NULL)\n \tnvm->functions = &_Jv_JNI_InvokeFunctions;\n-      the_vm = nvm;\n+      _Jv_the_vm = nvm;\n     }\n \n   // If this is a Java thread, we want to make sure it has an\n   // associated JNIEnv.\n   if (_Jv_ThreadCurrent () != NULL)\n     {\n       void *ignore;\n-      _Jv_JNI_AttachCurrentThread (the_vm, &ignore, NULL);\n+      _Jv_JNI_AttachCurrentThread (_Jv_the_vm, &ignore, NULL);\n     }\n \n-  return the_vm;\n+  return _Jv_the_vm;\n }\n \n static jint JNICALL"}]}