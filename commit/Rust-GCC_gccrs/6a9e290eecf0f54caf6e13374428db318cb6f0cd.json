{"sha": "6a9e290eecf0f54caf6e13374428db318cb6f0cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5ZTI5MGVlY2YwZjU0Y2FmNmUxMzM3NDQyOGRiMzE4Y2I2ZjBjZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-19T21:57:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-19T21:57:14Z"}, "message": "Add new options -print-file-name= and -print-prog-name=.\n\nFrom-SVN: r7079", "tree": {"sha": "07a3fca2885394ef6fc4cec0f1ea7b794af89581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07a3fca2885394ef6fc4cec0f1ea7b794af89581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a9e290eecf0f54caf6e13374428db318cb6f0cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9e290eecf0f54caf6e13374428db318cb6f0cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9e290eecf0f54caf6e13374428db318cb6f0cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9e290eecf0f54caf6e13374428db318cb6f0cd/comments", "author": null, "committer": null, "parents": [{"sha": "f5b0eb4e8855af46a10ce3ac99c9a685fe5010c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5b0eb4e8855af46a10ce3ac99c9a685fe5010c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5b0eb4e8855af46a10ce3ac99c9a685fe5010c0"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "284532fcc9f76f23a86196df3cacadb783bddefa", "filename": "gcc/gcc.c", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9e290eecf0f54caf6e13374428db318cb6f0cd/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9e290eecf0f54caf6e13374428db318cb6f0cd/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=6a9e290eecf0f54caf6e13374428db318cb6f0cd", "patch": "@@ -142,10 +142,14 @@ extern int execv (), execvp ();\n \n #define MIN_FATAL_STATUS 1\n \n-/* Flag saying to print the full filename of libgcc.a\n+/* Flag saying to print the full filename of this file\n    as found through our usual search mechanism.  */\n \n-static int print_libgcc_file_name;\n+static char *print_file_name = NULL;\n+\n+/* As print_file_name, but search for executable file. */\n+\n+static char *print_prog_name = NULL;\n \n /* Flag indicating whether we should print the command and arguments */\n \n@@ -772,6 +776,8 @@ struct option_map option_map[] =\n    {\"--pedantic-errors\", \"-pedantic-errors\", 0},\n    {\"--save-temps\", \"-save-temps\", 0},\n    {\"--print-libgcc-file-name\", \"-print-libgcc-file-name\", 0},\n+   {\"--print-file-name\", \"-print-file-name=\", \"aj\"},\n+   {\"--print-prog-name\", \"-print-prog-name=\", \"aj\"},\n    {\"--static\", \"-static\", 0},\n    {\"--shared\", \"-shared\", 0},\n    {\"--symbolic\", \"-symbolic\", 0},\n@@ -2326,9 +2332,11 @@ process_command (argc, argv)\n \t  exit (0);\n \t}\n       else if (! strcmp (argv[i], \"-print-libgcc-file-name\"))\n-\t{\n-\t  print_libgcc_file_name = 1;\n-\t}\n+\t  print_file_name = \"libgcc.a\";\n+      else if (! strncmp (argv[i], \"-print-file-name=\", 17))\n+\t  print_file_name = argv[i] + 17;\n+      else if (! strncmp (argv[i], \"-print-prog-name=\", 17))\n+\t  print_prog_name = argv[i] + 17;\n       else if (! strcmp (argv[i], \"-Xlinker\"))\n \t{\n \t  /* Pass the argument of this option to the linker when we link.  */\n@@ -2567,6 +2575,10 @@ process_command (argc, argv)\n \t;\n       else if (! strcmp (argv[i], \"-print-libgcc-file-name\"))\n \t;\n+      else if (! strncmp (argv[i], \"-print-file-name=\", 17))\n+\t;\n+      else if (! strncmp (argv[i], \"-print-prog-name=\", 17))\n+\t;\n       else if (argv[i][0] == '+' && argv[i][1] == 'e')\n \t{\n \t  /* Compensate for the +e options to the C++ front-end;\n@@ -3995,13 +4007,20 @@ main (argc, argv)\n     if (! switches[i].valid)\n       error (\"unrecognized option `-%s'\", switches[i].part1);\n \n-  if (print_libgcc_file_name)\n+  /* Obey some of the options.  */\n+\n+  if (print_file_name)\n     {\n-      printf (\"%s\\n\", find_file (\"libgcc.a\"));\n+      printf (\"%s\\n\", find_file (print_file_name));\n       exit (0);\n     }\n \n-  /* Obey some of the options.  */\n+  if (print_prog_name)\n+    {\n+      char *newname = find_a_file (&exec_prefix, print_prog_name, X_OK);\n+      printf (\"%s\\n\", (newname ? newname : print_prog_name));\n+      exit (0);\n+    }\n \n   if (verbose_flag)\n     {"}]}