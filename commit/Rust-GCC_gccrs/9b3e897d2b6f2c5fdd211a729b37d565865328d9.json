{"sha": "9b3e897d2b6f2c5fdd211a729b37d565865328d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIzZTg5N2QyYjZmMmM1ZmRkMjExYTcyOWIzN2Q1NjU4NjUzMjhkOQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-09-10T08:20:37Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-09-10T08:20:37Z"}, "message": "cgraph.h (cgraph_dump_file): Do not declare.\n\n2004-09-10  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* cgraph.h (cgraph_dump_file): Do not declare.\n\t* cgraphunit.c (cgraph_dump_file): Declare as static.\n\t(init_cgraph): New.\n\t* toplev.c (cgraph_dump_file): Do not declare.\n\t(compile_file): Call init_cgraph.\n\t* tree-dump.c (dump_files): Add IPA dump file, remove\n\tXML dump of call graph.\n\t(get_dump_file_name): Support IPA dump file naming scheme.\n\t* tree.h (enum tree_dump_index): Add IPA dump file, remove\n\tXML dump of call graph.\n\t* doc/invoke.texi (Debugging Options): Document the new options.\n\nFrom-SVN: r87281", "tree": {"sha": "e470b384aebdcae27074d3368738711eddd6bf03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e470b384aebdcae27074d3368738711eddd6bf03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b3e897d2b6f2c5fdd211a729b37d565865328d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3e897d2b6f2c5fdd211a729b37d565865328d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b3e897d2b6f2c5fdd211a729b37d565865328d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3e897d2b6f2c5fdd211a729b37d565865328d9/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3ee057915ca1abf5812cf7ea7efc6408e32c6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ee057915ca1abf5812cf7ea7efc6408e32c6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ee057915ca1abf5812cf7ea7efc6408e32c6b1"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "e9f8cdfdd6655d846466f886d80468f3f8e35895", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -1,3 +1,17 @@\n+2004-09-10  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* cgraph.h (cgraph_dump_file): Do not declare.\n+\t* cgraphunit.c (cgraph_dump_file): Declare as static.\n+\t(init_cgraph): New.\n+\t* toplev.c (cgraph_dump_file): Do not declare.\n+\t(compile_file): Call init_cgraph.\n+\t* tree-dump.c (dump_files): Add IPA dump file, remove\n+\tXML dump of call graph.\n+\t(get_dump_file_name): Support IPA dump file naming scheme.\n+\t* tree.h (enum tree_dump_index): Add IPA dump file, remove\n+\tXML dump of call graph.\n+\t* doc/invoke.texi (Debugging Options): Document the new options.\n+\n 2004-09-10  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* doc/extend.texi: Document the FR-V built-in functions."}, {"sha": "a6e9cd75880e7d48fce9c289cfbdc7efbddf56cf", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -147,7 +147,6 @@ extern GTY(()) int cgraph_n_nodes;\n extern GTY(()) int cgraph_max_uid;\n extern bool cgraph_global_info_ready;\n extern GTY(()) struct cgraph_node *cgraph_nodes_queue;\n-extern FILE *cgraph_dump_file;\n \n extern GTY(()) int cgraph_varpool_n_nodes;\n extern GTY(()) struct cgraph_varpool_node *cgraph_varpool_nodes_queue;\n@@ -193,5 +192,6 @@ void verify_cgraph_node (struct cgraph_node *);\n void cgraph_mark_inline_edge (struct cgraph_edge *e);\n void cgraph_clone_inlined_nodes (struct cgraph_edge *e, bool duplicate);\n void cgraph_build_static_cdtor (char which, tree body, int priority);\n+void init_cgraph (void);\n \n #endif  /* GCC_CGRAPH_H  */"}, {"sha": "bc14983b56e1399d5eaccee30a957833fa525aa0", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -163,6 +163,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \tcgraph_decide_inlining implements heuristics taking whole callgraph\n \tinto account, while cgraph_decide_inlining_incrementally considers\n \tonly one function at a time and is used in non-unit-at-a-time mode.  */\n+\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -209,6 +210,8 @@ static int overall_insns;\n    record_calls_1.  */\n static htab_t visited_nodes;\n \n+static FILE *cgraph_dump_file;\n+\n /* Determine if function DECL is needed.  That is, visible to something\n    either outside this translation unit, something magic in the system\n    configury, or (if not doing unit-at-a-time) to something we havn't\n@@ -1866,3 +1869,9 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n       fn (XEXP (DECL_RTL (decl), 0), priority);\n     }\n }\n+\n+void\n+init_cgraph (void)\n+{\n+  cgraph_dump_file = dump_begin (TDI_cgraph, NULL);\n+}"}, {"sha": "6bf49e4656780dc6dbad8307a0afec507a71aabf", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -249,6 +249,7 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-d@var{letters}  -dumpspecs  -dumpmachine  -dumpversion @gol\n -fdump-unnumbered  -fdump-translation-unit@r{[}-@var{n}@r{]} @gol\n -fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n+-fdump-ipa-all -fdump-ipa-cgraph @gol\n -fdump-tree-all @gol\n -fdump-tree-original@r{[}-@var{n}@r{]}  @gol\n -fdump-tree-optimized@r{[}-@var{n}@r{]} @gol\n@@ -3655,6 +3656,22 @@ to the source file name.  If the @samp{-@var{options}} form is used,\n @var{options} controls the details of the dump as described for the\n @option{-fdump-tree} options.\n \n+@item -fdump-ipa-@var{switch}\n+@opindex fdump-ipa\n+Control the dumping at various stages of inter-procedural analyisis\n+language tree to a file.  The file name is generated by appending a switch\n+specific suffix to the source file name. The following dumps are possible:\n+\n+@table @samp\n+@item all\n+Enables all inter-procedural analysis dumps; currently the only produced\n+dump is the @samp{cgraph} dump.\n+\n+@item cgraph\n+Dumps information about call-graph optimization, unused function removal,\n+and inlining decisions.\n+@end table\n+\n @item -fdump-tree-@var{switch} @r{(C and C++ only)}\n @itemx -fdump-tree-@var{switch}-@var{options} @r{(C and C++ only)}\n @opindex fdump-tree"}, {"sha": "c3cae64b296b23d82a9cfc43b93deb08a336db1c", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -418,7 +418,6 @@ int warn_return_type;\n FILE *asm_out_file;\n FILE *aux_info_file;\n FILE *dump_file = NULL;\n-FILE *cgraph_dump_file = NULL;\n char *dump_file_name;\n \n /* The current working directory of a translation.  It's generally the\n@@ -978,6 +977,7 @@ compile_file (void)\n {\n   /* Initialize yet another pass.  */\n \n+  init_cgraph ();\n   init_final (main_input_filename);\n   coverage_init (aux_base_name);\n "}, {"sha": "5c08132bfb17778dc1dff5f9a134552a121a720b", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -673,10 +673,11 @@ static struct dump_file_info dump_files[TDI_end] =\n   {\".nested\", \"tree-nested\", TDF_TREE, 0, 4, 0},\n   {\".inlined\", \"tree-inlined\", TDF_TREE, 0, 5, 0},\n   {\".vcg\", \"tree-vcg\", TDF_TREE, 0, 6, 0},\n-  /* FIXME  -fdump-call-graph is broken.  Set TDF_TREE when it is fixed.  */\n-  {\".xml\", \"call-graph\", 0, 0, 7, 0},\n   {NULL, \"tree-all\", TDF_TREE, 0, 0, 0},\n   {NULL, \"rtl-all\", TDF_RTL, 0, 0, 0},\n+  {NULL, \"ipa-all\", TDF_IPA, 0, 0, 0},\n+\n+  { \".cgraph\", \"ipa-cgraph\",\t\tTDF_IPA, 0,  1, 0},\n \n   { \".sibling\", \"rtl-sibling\",\t\tTDF_RTL, 0,  1, 'i'},\n   { \".eh\", \"rtl-eh\",\t\t\tTDF_RTL, 0,  2, 'h'},\n@@ -803,10 +804,21 @@ get_dump_file_name (enum tree_dump_index phase)\n   if (dfi->state == 0)\n     return NULL;\n \n-  if (dfi->num < 0\n-      || snprintf (dump_id, sizeof (dump_id), \".%s%02d\",\n-\t\t   (dfi->flags & TDF_TREE) ? \"t\" : \"\", dfi->num) < 0)\n+  if (dfi->num < 0)\n     dump_id[0] = '\\0';\n+  else\n+    {\n+      const char *template;\n+      if (dfi->flags & TDF_TREE)\n+\ttemplate = \".t%02d\";\n+      else if (dfi->flags & TDF_IPA)\n+\ttemplate = \".i%02d\";\n+      else\n+\ttemplate = \".%02d\";\n+\n+      if (snprintf (dump_id, sizeof (dump_id), template, dfi->num) < 0)\n+\tdump_id[0] = '\\0';\n+    }\n \n   return concat (dump_base_name, dump_id, dfi->suffix, NULL);\n }"}, {"sha": "20adc7ffd4ee185de8669f7ab4d17af84d852af3", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3e897d2b6f2c5fdd211a729b37d565865328d9/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9b3e897d2b6f2c5fdd211a729b37d565865328d9", "patch": "@@ -3714,9 +3714,11 @@ enum tree_dump_index\n \t\t\t\t   within it.  */\n   TDI_vcg,\t\t\t/* create a VCG graph file for each\n \t\t\t\t   function's flowgraph.  */\n-  TDI_xml,                      /* dump function call graph.  */\n   TDI_tree_all,                 /* enable all the GENERIC/GIMPLE dumps.  */\n   TDI_rtl_all,                  /* enable all the RTL dumps.  */\n+  TDI_ipa_all,                  /* enable all the IPA dumps.  */\n+\n+  TDI_cgraph,                   /* dump function call graph.  */\n \n   DFI_MIN,                      /* For now, RTL dumps are placed here.  */\n   DFI_sibling = DFI_MIN,\n@@ -3776,6 +3778,7 @@ enum tree_dump_index\n \n #define TDF_TREE\t(1 << 9)\t/* is a tree dump */\n #define TDF_RTL\t\t(1 << 10)\t/* is a RTL dump */\n+#define TDF_IPA\t\t(1 << 11)\t/* is an IPA dump */\n \n typedef struct dump_info *dump_info_p;\n "}]}