{"sha": "e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM1YmJiMjNhZDY3ZGFjMGY1ZDBhNWI3ZGQxYjI3NDcwYzFhY2M3OA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-05-18T14:44:55Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-05-18T14:44:55Z"}, "message": "re PR fortran/40164 (Fortran 2003: \"Arrays of procedure pointers\" (using PPCs))\n\n2009-05-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40164\n\t* primary.c (gfc_match_rvalue): Handle procedure pointer components in\n\tarrays.\n\t* resolve.c (resolve_ppc_call,resolve_expr_ppc): Resolve component and\n\tarray references.\n\t(resolve_fl_derived): Procedure pointer components are not required to\n\thave constant array bounds in their return value.\n\n\n2009-05-18  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40164\n\t* gfortran.dg/proc_ptr_comp_8.f90: New.\n\nFrom-SVN: r147663", "tree": {"sha": "1241d7122631c76378bb8c220cb683d68cc4650b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1241d7122631c76378bb8c220cb683d68cc4650b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b2db7be3276b7ee360e7eb5794afa7f9941d923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b2db7be3276b7ee360e7eb5794afa7f9941d923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b2db7be3276b7ee360e7eb5794afa7f9941d923"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "c02a3263508531d3b7c06b7820d589bf11af8b5d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "patch": "@@ -1,3 +1,13 @@\n+2009-05-18  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40164\n+\t* primary.c (gfc_match_rvalue): Handle procedure pointer components in\n+\tarrays.\n+\t* resolve.c (resolve_ppc_call,resolve_expr_ppc): Resolve component and\n+\tarray references.\n+\t(resolve_fl_derived): Procedure pointer components are not required to\n+\thave constant array bounds in their return value.\n+\n 2009-05-18  Janus Weil  <janus@gcc.gnu.org>\n \n \t* intrinsic.c (add_sym): Fix my last commit (r147655),"}, {"sha": "4d39c1aa93cffd99cd9ad19db5018f88d5a119ab", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "patch": "@@ -2558,7 +2558,7 @@ gfc_match_rvalue (gfc_expr **result)\n       if (gfc_matching_procptr_assignment)\n \t{\n \t  gfc_gobble_whitespace ();\n-\t  if (gfc_peek_ascii_char () == '(')\n+\t  if (!sym->attr.dimension && gfc_peek_ascii_char () == '(')\n \t    /* Parse functions returning a procptr.  */\n \t    goto function0;\n "}, {"sha": "39eb0432af800f1e12830bd0659dd1ad450c82cc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "patch": "@@ -4840,6 +4840,9 @@ resolve_ppc_call (gfc_code* c)\n   if (!comp->attr.subroutine)\n     gfc_add_subroutine (&comp->attr, comp->name, &c->expr1->where);\n \n+  if (resolve_ref (c->expr1) == FAILURE)\n+    return FAILURE;\n+\n   if (resolve_actual_arglist (c->ext.actual, comp->attr.proc,\n \t\t\t      comp->formal == NULL) == FAILURE)\n     return FAILURE;\n@@ -4869,6 +4872,9 @@ resolve_expr_ppc (gfc_expr* e)\n   if (!comp->attr.function)\n     gfc_add_function (&comp->attr, comp->name, &e->where);\n \n+  if (resolve_ref (e) == FAILURE)\n+    return FAILURE;\n+\n   if (resolve_actual_arglist (e->value.function.actual, comp->attr.proc,\n \t\t\t      comp->formal == NULL) == FAILURE)\n     return FAILURE;\n@@ -9147,7 +9153,8 @@ resolve_fl_derived (gfc_symbol *sym)\n \t    && sym != c->ts.derived)\n \tadd_dt_to_dt_list (c->ts.derived);\n \n-      if (c->attr.pointer || c->attr.allocatable ||  c->as == NULL)\n+      if (c->attr.pointer || c->attr.proc_pointer || c->attr.allocatable\n+\t  || c->as == NULL)\n \tcontinue;\n \n       for (i = 0; i < c->as->rank; i++)"}, {"sha": "c900c201f7e147872d6c21090bf865e17cca4d9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "patch": "@@ -1,3 +1,8 @@\n+2009-05-18  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40164\n+\t* gfortran.dg/proc_ptr_comp_8.f90: New.\n+\n 2009-05-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR fortran/40168"}, {"sha": "ed06c2bc651b26035cdcebfb2fe78a4d2c98a86a", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_8.f90", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_8.f90?ref=e35bbb23ad67dac0f5d0a5b7dd1b27470c1acc78", "patch": "@@ -0,0 +1,58 @@\n+! { dg-do run }\n+!\n+! PR 40164: Fortran 2003: \"Arrays of procedure pointers\" (using PPCs)\n+!\n+! Original test case by Barron Bichon <barron.bichon@swri.org>\n+! Adapted by Janus Weil <janus@gcc.gnu.org>\n+\n+PROGRAM test_prog\n+\n+  ABSTRACT INTERFACE\n+  FUNCTION fn_template(n,x) RESULT(y)\n+    INTEGER, INTENT(in) :: n\n+    REAL, INTENT(in) :: x(n)\n+    REAL :: y(n)\n+  END FUNCTION fn_template\n+  END INTERFACE\n+\n+  TYPE PPA\n+    PROCEDURE(fn_template), POINTER, NOPASS :: f\n+  END TYPE PPA\n+\n+ TYPE ProcPointerArray\n+   PROCEDURE(add), POINTER, NOPASS :: f\n+ END TYPE ProcPointerArray\n+\n+ TYPE (ProcPointerArray) :: f_array(3)\n+ PROCEDURE(add), POINTER :: f\n+ real :: r\n+\n+ f_array(1)%f => add\n+ f => f_array(1)%f\n+ f_array(2)%f => sub\n+ f_array(3)%f => f_array(1)%f\n+\n+ r = f(1.,2.)\n+ if (abs(r-3.)>1E-3) call abort()\n+ r = f_array(1)%f(4.,2.)\n+ if (abs(r-6.)>1E-3) call abort()\n+ r = f_array(2)%f(5.,3.)\n+ if (abs(r-2.)>1E-3) call abort()\n+ if (abs(f_array(1)%f(1.,3.)-f_array(3)%f(2.,2.))>1E-3) call abort()\n+\n+CONTAINS\n+\n+ FUNCTION add(a,b) RESULT(sum)\n+   REAL, INTENT(in) :: a, b\n+   REAL :: sum\n+   sum = a + b\n+ END FUNCTION add\n+\n+ FUNCTION sub(a,b) RESULT(diff)\n+   REAL, INTENT(in) :: a, b\n+   REAL :: diff\n+   diff = a - b\n+ END FUNCTION sub\n+\n+END PROGRAM test_prog\n+"}]}