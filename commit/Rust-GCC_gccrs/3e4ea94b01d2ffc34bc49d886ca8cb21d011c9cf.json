{"sha": "3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0ZWE5NGIwMWQyZmZjMzRiYzQ5ZDg4NmNhOGNiMjFkMDExYzljZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-01-10T17:28:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-05T08:18:59Z"}, "message": "[Ada] Adjust expansion of perfect hash function for Value\n\ngcc/ada/\n\n\t* exp_imgv.ads (Build_Enumeration_Image_Tables): Adjust comment.\n\t* exp_imgv.adb (Build_Enumeration_Image_Tables): Add the\n\tdeclaration nodes of the 4 tables to the declaration list of the\n\tfunction body.", "tree": {"sha": "c3c5600ef933995a24d68a6e943f20ab1336cd0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3c5600ef933995a24d68a6e943f20ab1336cd0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c11207d345f8d678d440a3ff0f335b2ed25513e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11207d345f8d678d440a3ff0f335b2ed25513e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11207d345f8d678d440a3ff0f335b2ed25513e7"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "5acfaf09a4c50ad68d8733888015005712d63ad0", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "patch": "@@ -304,6 +304,11 @@ package body Exp_Imgv is\n          --  named P, T1, T2 and G are needed. The hash function is of the form\n \n          --     function Hash (S : String) return Natural is\n+         --        xxxP  : constant array (0 .. X) of Natural    = [...];\n+         --        xxxT1 : constant array (0 .. Y) of Index_Type = [...];\n+         --        xxxT2 : constant array (0 .. Y) of Index_Type = [...];\n+         --        xxxG  : constant array (0 .. Z) of Index_Type = [...];\n+\n          --        F    : constant Natural := S'First - 1;\n          --        L    : constant Natural := S'Length;\n          --        A, B : Natural := 0;\n@@ -320,7 +325,13 @@ package body Exp_Imgv is\n          --        return (Natural (G (A)) + Natural (G (B))) mod M;\n          --     end Hash;\n \n-         --  where N is the length of G and M the number of literals.\n+         --  where N is the length of G and M the number of literals. Note that\n+         --  we declare the tables inside the function for two reasons: first,\n+         --  their analysis creates array subtypes and thus their concatenation\n+         --  operators which are homonyms of the concatenation operator and may\n+         --  change the homonym number of user operators declared in the scope;\n+         --  second, the code generator can fold the values in the tables when\n+         --  they are small and avoid emitting them in the final object code.\n \n          if H_OK then\n             declare\n@@ -336,6 +347,8 @@ package body Exp_Imgv is\n                Loop_Stmts       : List_Id;\n \n             begin\n+               Body_Decls := New_List;\n+\n                --  Generate position table\n \n                SPHG.Define (SPHG.Character_Position, Siz, L1, L2);\n@@ -350,7 +363,7 @@ package body Exp_Imgv is\n                    Chars => New_External_Name (Chars (E), 'P'));\n \n                Append_Table_To\n-                 (Act, EPos, Nat (L1 - 1), Standard_Natural, Pos);\n+                 (Body_Decls, EPos, Nat (L1 - 1), Standard_Natural, Pos);\n \n                --  Generate function table 1\n \n@@ -367,7 +380,7 @@ package body Exp_Imgv is\n \n                Ityp :=\n                  Small_Integer_Type_For (UI_From_Int (Int (Siz)), Uns => True);\n-               Append_Table_To (Act, ET1, Nat (L1 - 1), Ityp, T1);\n+               Append_Table_To (Body_Decls, ET1, Nat (L1 - 1), Ityp, T1);\n \n                --  Generate function table 2\n \n@@ -384,7 +397,7 @@ package body Exp_Imgv is\n \n                Ityp :=\n                  Small_Integer_Type_For (UI_From_Int (Int (Siz)), Uns => True);\n-               Append_Table_To (Act, ET2, Nat (L1 - 1), Ityp, T2);\n+               Append_Table_To (Body_Decls, ET2, Nat (L1 - 1), Ityp, T2);\n \n                --  Generate graph table\n \n@@ -401,13 +414,11 @@ package body Exp_Imgv is\n \n                Ityp :=\n                  Small_Integer_Type_For (UI_From_Int (Int (Siz)), Uns => True);\n-               Append_Table_To (Act, EG, Nat (L1 - 1), Ityp, G);\n-\n-               --  Generate body of hash function\n+               Append_Table_To (Body_Decls, EG, Nat (L1 - 1), Ityp, G);\n \n                F := Make_Temporary (Loc, 'F');\n \n-               Body_Decls := New_List (\n+               Append_To (Body_Decls,\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => F,\n                    Object_Definition   =>"}, {"sha": "4b9fb81e89b246f16b5a90ddcc8a69f1c8941f4c", "filename": "gcc/ada/exp_imgv.ads", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf/gcc%2Fada%2Fexp_imgv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf/gcc%2Fada%2Fexp_imgv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.ads?ref=3e4ea94b01d2ffc34bc49d886ca8cb21d011c9cf", "patch": "@@ -70,14 +70,8 @@ package Exp_Imgv is\n    --\n    --  If the number of enumeration literals is large enough, a (perfect) hash\n    --  function mapping the literals to their position number is also built and\n-   --  requires in turn to build four additional tables:\n-   --\n-   --    xxxP  : constant array (0 .. X - 1) of Natural = (p1, p2, ..., pX);\n-   --    xxxT1 : constant array (0 .. Y - 1) of Index_Type = (q1, ..., qY);\n-   --    xxxT2 : constant array (0 .. Y - 1) of Index_Type = (r1, ..., rY);\n-   --    xxxG  : constant array (0 .. Z - 1) of Index_Type = (s1, ..., sZ);\n-   --\n-   --  See the System.Perfect_Hash_Generators unit for a complete description.\n+   --  requires additional tables. See the System.Perfect_Hash_Generators unit\n+   --  for a complete description of this processing.\n \n    procedure Expand_Image_Attribute (N : Node_Id);\n    --  This procedure is called from Exp_Attr to expand an occurrence of the"}]}