{"sha": "c7e529d3bc34424e0b0686854f2a4db42286ea9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlNTI5ZDNiYzM0NDI0ZTBiMDY4Njg1NGYyYTRkYjQyMjg2ZWE5Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-07T21:38:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-07T21:38:46Z"}, "message": "Support multiple init functions in a single file.\n\nFrom-SVN: r170756", "tree": {"sha": "acbce969256b8d4b61d5de641da2a92a92c5c90e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acbce969256b8d4b61d5de641da2a92a92c5c90e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7e529d3bc34424e0b0686854f2a4db42286ea9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e529d3bc34424e0b0686854f2a4db42286ea9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e529d3bc34424e0b0686854f2a4db42286ea9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e529d3bc34424e0b0686854f2a4db42286ea9c/comments", "author": null, "committer": null, "parents": [{"sha": "b4ed59860a2fa536620e9b0b7bb6b3851fd6911c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ed59860a2fa536620e9b0b7bb6b3851fd6911c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ed59860a2fa536620e9b0b7bb6b3851fd6911c"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "562a5afa9840ea632f3f7e17030f49e0445e910c", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e529d3bc34424e0b0686854f2a4db42286ea9c/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e529d3bc34424e0b0686854f2a4db42286ea9c/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=c7e529d3bc34424e0b0686854f2a4db42286ea9c", "patch": "@@ -839,19 +839,6 @@ Named_object::get_id(Gogo* gogo)\n       // types.\n       decl_name = Gogo::unpack_hidden_name(this->name_);\n     }\n-  else if (this->is_function()\n-\t   && !this->func_value()->is_method()\n-\t   && this->package_ == NULL\n-\t   && Gogo::unpack_hidden_name(this->name_) == \"init\")\n-    {\n-      // A single package can have multiple \"init\" functions, which\n-      // means that we need to give them different names.\n-      static int init_index;\n-      char buf[20];\n-      snprintf(buf, sizeof buf, \"%d\", init_index);\n-      ++init_index;\n-      decl_name = gogo->package_name() + \".init.\" + buf;\n-    }\n   else\n     {\n       std::string package_name;"}, {"sha": "f8c143c9c298617ea72c5d4d4fa73286408ce214", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e529d3bc34424e0b0686854f2a4db42286ea9c/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e529d3bc34424e0b0686854f2a4db42286ea9c/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=c7e529d3bc34424e0b0686854f2a4db42286ea9c", "patch": "@@ -211,12 +211,6 @@ Gogo::Gogo(int int_type_size, int pointer_size)\n   this->globals_->add_function_declaration(\"imag\", NULL, imag_type, loc);\n \n   this->define_builtin_function_trees();\n-\n-  // Declare \"init\", to ensure that it is not defined with parameters\n-  // or return values.\n-  this->declare_function(\"init\",\n-\t\t\t Type::make_function_type(NULL, NULL, NULL, loc),\n-\t\t\t loc);\n }\n \n // Munge name for use in an error message.\n@@ -660,7 +654,24 @@ Gogo::start_function(const std::string& name, Function_type* type,\n \n   const std::string* pname;\n   std::string nested_name;\n-  if (!name.empty())\n+  bool is_init = false;\n+  if (Gogo::unpack_hidden_name(name) == \"init\" && !type->is_method())\n+    {\n+      if ((type->parameters() != NULL && !type->parameters()->empty())\n+\t  || (type->results() != NULL && !type->results()->empty()))\n+\terror_at(location,\n+\t\t \"func init must have no arguments and no return values\");\n+      // There can be multiple \"init\" functions, so give them each a\n+      // different name.\n+      static int init_count;\n+      char buf[30];\n+      snprintf(buf, sizeof buf, \".$init%d\", init_count);\n+      ++init_count;\n+      nested_name = buf;\n+      pname = &nested_name;\n+      is_init = true;\n+    }\n+  else if (!name.empty())\n     pname = &name;\n   else\n     {\n@@ -753,7 +764,7 @@ Gogo::start_function(const std::string& name, Function_type* type,\n   of.function = ret;\n   of.blocks.push_back(block);\n \n-  if (!type->is_method() && Gogo::unpack_hidden_name(name) == \"init\")\n+  if (is_init)\n     {\n       this->init_functions_.push_back(ret);\n       this->need_init_fn_ = true;"}]}