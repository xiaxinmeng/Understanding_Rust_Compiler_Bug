{"sha": "42bdb8f24940aa932e73feda2750e0e80c018441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJiZGI4ZjI0OTQwYWE5MzJlNzNmZWRhMjc1MGUwZTgwYzAxODQ0MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-12-27T08:51:14Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-12-27T08:51:14Z"}, "message": "Comparison with an enum should mention enum value.\n\n2018-12-27  Martin Liska  <mliska@suse.cz>\n\n\t* builtins.c (expand_movstr): Compare with RETURN_BEGIN.\n\t* expr.c (move_by_pieces): Likewise.\n\t(store_by_pieces): Likewise.\n\t(store_expr): Fix GNU coding style.\n\nFrom-SVN: r267430", "tree": {"sha": "38af505644fd86939b4e0d4e5b8703c68753932a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38af505644fd86939b4e0d4e5b8703c68753932a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42bdb8f24940aa932e73feda2750e0e80c018441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bdb8f24940aa932e73feda2750e0e80c018441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42bdb8f24940aa932e73feda2750e0e80c018441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bdb8f24940aa932e73feda2750e0e80c018441/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44787584dea62b5368235f3d9d38431fd902fb40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44787584dea62b5368235f3d9d38431fd902fb40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44787584dea62b5368235f3d9d38431fd902fb40"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "c64fa347cc901824ecf4b354cd50941fc1760197", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bdb8f24940aa932e73feda2750e0e80c018441/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bdb8f24940aa932e73feda2750e0e80c018441/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42bdb8f24940aa932e73feda2750e0e80c018441", "patch": "@@ -1,3 +1,10 @@\n+2018-12-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* builtins.c (expand_movstr): Compare with RETURN_BEGIN.\n+\t* expr.c (move_by_pieces): Likewise.\n+\t(store_by_pieces): Likewise.\n+\t(store_expr): Fix GNU coding style.\n+\n 2018-12-26  Andrew Pinski  <apinski@marvell.com>\n \n \t* config/aarch64/aarch64-cores.def (octeontx): New."}, {"sha": "0d66dd7c8899bfd695c5fe128c555d166c171f2a", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bdb8f24940aa932e73feda2750e0e80c018441/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bdb8f24940aa932e73feda2750e0e80c018441/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=42bdb8f24940aa932e73feda2750e0e80c018441", "patch": "@@ -3939,7 +3939,8 @@ expand_movstr (tree dest, tree src, rtx target, memop_ret retmode)\n       dest_mem = replace_equiv_address (dest_mem, target);\n     }\n \n-  create_output_operand (&ops[0], retmode ? target : NULL_RTX, Pmode);\n+  create_output_operand (&ops[0],\n+\t\t\t retmode != RETURN_BEGIN ? target : NULL_RTX, Pmode);\n   create_fixed_operand (&ops[1], dest_mem);\n   create_fixed_operand (&ops[2], src_mem);\n   if (!maybe_expand_insn (targetm.code_for_movstr, 3, ops))"}, {"sha": "abbaef2d9ce7b784cfe69afe7d5984123e39569e", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bdb8f24940aa932e73feda2750e0e80c018441/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bdb8f24940aa932e73feda2750e0e80c018441/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=42bdb8f24940aa932e73feda2750e0e80c018441", "patch": "@@ -1220,7 +1220,7 @@ move_by_pieces (rtx to, rtx from, unsigned HOST_WIDE_INT len,\n \n   data.run ();\n \n-  if (retmode)\n+  if (retmode != RETURN_BEGIN)\n     return data.finish_retmode (retmode);\n   else\n     return to;\n@@ -1388,7 +1388,7 @@ store_by_pieces (rtx to, unsigned HOST_WIDE_INT len,\n   store_by_pieces_d data (to, constfun, constfundata, len, align);\n   data.run ();\n \n-  if (retmode)\n+  if (retmode != RETURN_BEGIN)\n     return data.finish_retmode (retmode);\n   else\n     return to;\n@@ -5609,13 +5609,13 @@ store_expr (tree exp, rtx target, int call_param_p,\n \n       dest_mem = target;\n \n+      memop_ret retmode = exp_len > str_copy_len ? RETURN_END : RETURN_BEGIN;\n       dest_mem = store_by_pieces (dest_mem,\n \t\t\t\t  str_copy_len, builtin_strncpy_read_str,\n \t\t\t\t  CONST_CAST (char *,\n \t\t\t\t\t      TREE_STRING_POINTER (str)),\n \t\t\t\t  MEM_ALIGN (target), false,\n-\t\t\t\t  (exp_len > str_copy_len ? RETURN_END :\n-\t\t\t\t   RETURN_BEGIN));\n+\t\t\t\t  retmode);\n       if (exp_len > str_copy_len)\n \tclear_storage (adjust_address (dest_mem, BLKmode, 0),\n \t\t       GEN_INT (exp_len - str_copy_len),"}]}