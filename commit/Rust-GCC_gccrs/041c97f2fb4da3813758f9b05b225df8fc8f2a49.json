{"sha": "041c97f2fb4da3813758f9b05b225df8fc8f2a49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQxYzk3ZjJmYjRkYTM4MTM3NThmOWIwNWIyMjVkZjhmYzhmMmE0OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@usa.net", "date": "1997-10-14T19:12:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-14T19:12:27Z"}, "message": "cplus-dem.c (demangle_signature): Don't look for return types on constructors.\n\n\t* cplus-dem.c (demangle_signature): Don't look for return types on\n\tconstructors.  Handle member template constructors.\n\nFrom-SVN: r15903", "tree": {"sha": "7fc98bff906fa8d1ec29983d7524357a2468f84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fc98bff906fa8d1ec29983d7524357a2468f84c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/041c97f2fb4da3813758f9b05b225df8fc8f2a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041c97f2fb4da3813758f9b05b225df8fc8f2a49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/041c97f2fb4da3813758f9b05b225df8fc8f2a49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/041c97f2fb4da3813758f9b05b225df8fc8f2a49/comments", "author": null, "committer": null, "parents": [{"sha": "438998a93de67adbc22bfa1cd6bba6a7d8a62789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438998a93de67adbc22bfa1cd6bba6a7d8a62789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/438998a93de67adbc22bfa1cd6bba6a7d8a62789"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "0e8a1efd6255848ab93edf082d1391f407541ef4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041c97f2fb4da3813758f9b05b225df8fc8f2a49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041c97f2fb4da3813758f9b05b225df8fc8f2a49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=041c97f2fb4da3813758f9b05b225df8fc8f2a49", "patch": "@@ -1,3 +1,8 @@\n+Tue Oct 14 12:01:00 1997  Mark Mitchell  <mmitchell@usa.net>\n+\n+\t* cplus-dem.c (demangle_signature): Don't look for return types on\n+\tconstructors.  Handle member template constructors.\n+\n Tue Oct 14 11:30:29 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* tree.c (expr_tree_cons, build_expr_list, expralloc): New fns."}, {"sha": "58f37688b6bd76fedded1bfad7742d0e8835e4ca", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/041c97f2fb4da3813758f9b05b225df8fc8f2a49/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/041c97f2fb4da3813758f9b05b225df8fc8f2a49/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=041c97f2fb4da3813758f9b05b225df8fc8f2a49", "patch": "@@ -831,7 +831,8 @@ demangle_signature (work, mangled, declp)\n \t    {\n \t      /* A G++ template function.  Read the template arguments. */\n \t      success = demangle_template (work, mangled, declp, 0, 0);\n-\t      expect_return_type = 1;\n+\t      if (!(work->constructor & 1))\n+\t\texpect_return_type = 1;\n \t      (*mangled)++;\n \t      break;\n \t    }\n@@ -1534,7 +1535,8 @@ demangle_prefix (work, mangled, declp)\n \t}\n     }\n   else if ((scan == *mangled)\n-\t   && (isdigit (scan[2]) || (scan[2] == 'Q') || (scan[2] == 't')))\n+\t   && (isdigit (scan[2]) || (scan[2] == 'Q') || (scan[2] == 't')\n+\t       || (scan[2] == 'H')))\n     {\n       /* The ARM says nothing about the mangling of local variables.\n \t But cfront mangles local variables by prepending __<nesting_level>\n@@ -1551,7 +1553,8 @@ demangle_prefix (work, mangled, declp)\n \t{\n \t  /* A GNU style constructor starts with __[0-9Qt].  But cfront uses\n \t     names like __Q2_3foo3bar for nested type names.  So don't accept\n-\t     this style of constructor for cfront demangling.  */\n+\t     this style of constructor for cfront demangling.  A GNU\n+\t     style member-template constructor starts with 'H'. */\n \t  if (!(LUCID_DEMANGLING || ARM_DEMANGLING))\n \t    work -> constructor += 1;\n \t  *mangled = scan + 2;"}]}