{"sha": "c34e18636b30c3bf86396e7a894e6f3a0c913d15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0ZTE4NjM2YjMwYzNiZjg2Mzk2ZTdhODk0ZTZmM2EwYzkxM2QxNQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-05-17T12:00:07Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-05-17T12:00:07Z"}, "message": "testsuite/arm: Add mve-vadd-1.c test\n\nSupport for vadd has been present for a while, but it was lacking a\ntest.\n\n2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/testsuite/\n\t* gcc.target/arm/simd/mve-vadd-1.c: New.", "tree": {"sha": "46174ef46a51e124a197879f27d9fc4a10f01a8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46174ef46a51e124a197879f27d9fc4a10f01a8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c34e18636b30c3bf86396e7a894e6f3a0c913d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34e18636b30c3bf86396e7a894e6f3a0c913d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34e18636b30c3bf86396e7a894e6f3a0c913d15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34e18636b30c3bf86396e7a894e6f3a0c913d15/comments", "author": null, "committer": null, "parents": [{"sha": "afa4401edd8a6a882848a6613d5441b0d0a10587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa4401edd8a6a882848a6613d5441b0d0a10587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa4401edd8a6a882848a6613d5441b0d0a10587"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "15a9daacecfd2e7256de137d1c1f0b050a21f87f", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vadd-1.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34e18636b30c3bf86396e7a894e6f3a0c913d15/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34e18636b30c3bf86396e7a894e6f3a0c913d15/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-1.c?ref=c34e18636b30c3bf86396e7a894e6f3a0c913d15", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n+/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include <stdint.h>\n+\n+#define FUNC(SIGN, TYPE, BITS, NB, OP, NAME)\t\t\t\t\\\n+  void test_ ## NAME ##_ ## SIGN ## BITS ## x ## NB (TYPE##BITS##_t * __restrict__ dest, \\\n+\t\t\t\t\t\t     TYPE##BITS##_t *a, TYPE##BITS##_t *b) { \\\n+    int i;\t\t\t\t\t\t\t\t\\\n+    for (i=0; i<NB; i++) {\t\t\t\t\t\t\\\n+      dest[i] = a[i] OP b[i];\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n+/* 128-bit vectors.  */\n+FUNC(s, int, 32, 4, +, vadd)\n+FUNC(u, uint, 32, 4, +, vadd)\n+FUNC(s, int, 16, 8, +, vadd)\n+FUNC(u, uint, 16, 8, +, vadd)\n+FUNC(s, int, 8, 16, +, vadd)\n+FUNC(u, uint, 8, 16, +, vadd)\n+\n+/* { dg-final { scan-assembler-times {vadd\\.i32  q[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i16  q[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i8  q[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+\n+void test_vadd_f32 (float * dest, float * a, float * b) {\n+  int i;\n+  for (i=0; i<4; i++) {\n+    dest[i] = a[i] + b[i];\n+  }\n+}\n+/* { dg-final { scan-assembler-times {vadd\\.f32 q[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n+\n+void test_vadd_f16 (__fp16 * dest, __fp16 * a, __fp16 * b) {\n+  int i;\n+  for (i=0; i<8; i++) {\n+    dest[i] = a[i] + b[i];\n+  }\n+}\n+/* { dg-final { scan-assembler-times {vadd\\.f16 q[0-9]+, q[0-9]+, q[0-9]+} 1 } } */"}]}