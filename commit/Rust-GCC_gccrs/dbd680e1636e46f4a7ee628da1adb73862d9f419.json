{"sha": "dbd680e1636e46f4a7ee628da1adb73862d9f419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJkNjgwZTE2MzZlNDZmNGE3ZWU2MjhkYTFhZGI3Mzg2MmQ5ZjQxOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-01-17T14:21:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-01-17T14:21:54Z"}, "message": "except.c (add_partial_entry): Remove backwards compatibility code.\n\n        * except.c (add_partial_entry): Remove backwards compatibility code.\n        (end_protect_partials): Likewise.\n\nFrom-SVN: r48951", "tree": {"sha": "b24da109221f32fd696edd4e9ba6a3f4797a37aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b24da109221f32fd696edd4e9ba6a3f4797a37aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbd680e1636e46f4a7ee628da1adb73862d9f419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd680e1636e46f4a7ee628da1adb73862d9f419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd680e1636e46f4a7ee628da1adb73862d9f419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd680e1636e46f4a7ee628da1adb73862d9f419/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cdd2559cec98c587afc243a2850a329861487013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd2559cec98c587afc243a2850a329861487013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdd2559cec98c587afc243a2850a329861487013"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "34fc58a7a20aa6bedf4b70b26160b9c6d44229ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd680e1636e46f4a7ee628da1adb73862d9f419/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd680e1636e46f4a7ee628da1adb73862d9f419/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbd680e1636e46f4a7ee628da1adb73862d9f419", "patch": "@@ -1,3 +1,8 @@\n+2002-01-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* except.c (add_partial_entry): Remove backwards compatibility code.\n+\t(end_protect_partials): Likewise.\n+\n 2002-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/ia64/ia64.md (prologue_use): New."}, {"sha": "606c0e64267d3b4cfdfece44b7201331562817f9", "filename": "gcc/except.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd680e1636e46f4a7ee628da1adb73862d9f419/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd680e1636e46f4a7ee628da1adb73862d9f419/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=dbd680e1636e46f4a7ee628da1adb73862d9f419", "patch": "@@ -1037,14 +1037,6 @@ add_partial_entry (handler)\n {\n   expand_eh_region_start ();\n \n-  /* ??? This comment was old before the most recent rewrite.  We\n-     really ought to fix the callers at some point.  */\n-  /* For backwards compatibility, we allow callers to omit calls to\n-     begin_protect_partials for the outermost region.  So, we must\n-     explicitly do so here.  */\n-  if (!cfun->eh->protect_list)\n-    begin_protect_partials ();\n-\n   /* Add this entry to the front of the list.  */\n   TREE_VALUE (cfun->eh->protect_list)\n     = tree_cons (NULL_TREE, handler, TREE_VALUE (cfun->eh->protect_list));\n@@ -1057,14 +1049,6 @@ end_protect_partials ()\n {\n   tree t;\n \n-  /* ??? This comment was old before the most recent rewrite.  We\n-     really ought to fix the callers at some point.  */\n-  /* For backwards compatibility, we allow callers to omit the call to\n-     begin_protect_partials for the outermost region.  So,\n-     PROTECT_LIST may be NULL.  */\n-  if (!cfun->eh->protect_list)\n-    return;\n-\n   /* Pop the topmost entry.  */\n   t = TREE_VALUE (cfun->eh->protect_list);\n   cfun->eh->protect_list = TREE_CHAIN (cfun->eh->protect_list);"}]}