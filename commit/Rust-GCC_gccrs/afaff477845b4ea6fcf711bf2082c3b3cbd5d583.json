{"sha": "afaff477845b4ea6fcf711bf2082c3b3cbd5d583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZhZmY0Nzc4NDViNGVhNmZjZjcxMWJmMjA4MmMzYjNjYmQ1ZDU4Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-28T02:37:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-28T02:37:55Z"}, "message": "(output_function_prologue): Adjust SP then use movmel with plain address indirect mode for TARGET_5200.\n\n(output_function_prologue): Adjust SP then use movmel with\nplain address indirect mode for TARGET_5200.\n(output_function_epilogue): Disable moveml and use several movel's\ninstead for TARGET_5200.\n(output_function_{pro,epi}logue): Use lea instruction to adjust\nstack pointer for short displacements for TARGET_5200.\n\nFrom-SVN: r13043", "tree": {"sha": "21f36f5453a9aa78e392a35f72c1f592b49d54ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f36f5453a9aa78e392a35f72c1f592b49d54ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afaff477845b4ea6fcf711bf2082c3b3cbd5d583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afaff477845b4ea6fcf711bf2082c3b3cbd5d583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afaff477845b4ea6fcf711bf2082c3b3cbd5d583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afaff477845b4ea6fcf711bf2082c3b3cbd5d583/comments", "author": null, "committer": null, "parents": [{"sha": "5df8a1f298828d4d99628a59100eed868f4addc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df8a1f298828d4d99628a59100eed868f4addc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df8a1f298828d4d99628a59100eed868f4addc0"}], "stats": {"total": 74, "additions": 63, "deletions": 11}, "files": [{"sha": "a510662baef58857122d98c4a03175e6a522415f", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 63, "deletions": 11, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afaff477845b4ea6fcf711bf2082c3b3cbd5d583/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afaff477845b4ea6fcf711bf2082c3b3cbd5d583/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=afaff477845b4ea6fcf711bf2082c3b3cbd5d583", "patch": "@@ -146,14 +146,25 @@ output_function_prologue (stream, size)\n   else if (fsize)\n     {\n       /* Adding negative number is faster on the 68040.  */\n-      if (fsize + 4 < 0x8000 && ! TARGET_5200)\n+      if (fsize + 4 < 0x8000)\n \t{\n-\t/* asm_fprintf() cannot handle %. */\n+\t  if (TARGET_5200)\n+\t    {\n #ifdef MOTOROLA\n-\t  asm_fprintf (stream, \"\\tadd.w %0I%d,%Rsp\\n\", - (fsize + 4));\n+\t      asm_fprintf (stream, \"\\tlea (%0I%d,%Rsp),%Rsp\\n\", - (fsize + 4));\n #else\n-\t  asm_fprintf (stream, \"\\taddw %0I%d,%Rsp\\n\", - (fsize + 4));\n+\t      asm_fprintf (stream, \"\\tlea %Rsp@(%0I%d),%Rsp\\n\", - (fsize + 4));\n #endif\n+\t    }\n+\t  else\n+\t    {\n+\t      /* asm_fprintf() cannot handle %. */\n+#ifdef MOTOROLA\n+\t      asm_fprintf (stream, \"\\tadd.w %0I%d,%Rsp\\n\", - (fsize + 4));\n+#else\n+\t      asm_fprintf (stream, \"\\taddw %0I%d,%Rsp\\n\", - (fsize + 4));\n+#endif\n+\t    }\n \t}\n       else\n \t{\n@@ -228,11 +239,41 @@ output_function_prologue (stream, size)\n     }\n   else if (mask)\n     {\n+      if (TARGET_5200)\n+\t{\n+\t  /* The coldfire does not support the predecrement form of the \n+\t     movml instruction, so we must adjust the stack pointer and\n+\t     then use the plain address register indirect mode.  We also\n+\t     have to invert the register save mask to use the new mode.\n+\n+\t     FIXME: if num_saved_regs was calculated earlier, we could\n+\t     combine the stack pointer adjustment with any adjustment\n+\t     done when the initial stack frame is created.  This would\n+\t     save an instruction */\n+\t     \n+\t  int newmask = 0;\n+\t  int i;\n+\n+\t  for (i = 0; i < 16; i++)\n+\t    if (mask & (1 << i))\n+\t\tnewmask |= (1 << (15-i));\n+\n+#ifdef MOTOROLA\n+\t  asm_fprintf (stream, \"\\tlea (%0I%d,%Rsp),%Rsp\\n\", -num_saved_regs*4);\n+\t  asm_fprintf (stream, \"\\tmovm.l %0I0x%x,(%Rsp)\\n\", newmask);\n+#else\n+\t  asm_fprintf (stream, \"\\tlea %Rsp@(%0I%d),%Rsp\\n\", -num_saved_regs*4);\n+\t  asm_fprintf (stream, \"\\tmoveml %0I0x%x,%Rsp@\\n\", newmask);\n+#endif\n+\t}\n+      else\n+\t{\n #ifdef MOTOROLA\n-      asm_fprintf (stream, \"\\tmovm.l %0I0x%x,-(%Rsp)\\n\", mask);\n+\t  asm_fprintf (stream, \"\\tmovm.l %0I0x%x,-(%Rsp)\\n\", mask);\n #else\n-      asm_fprintf (stream, \"\\tmoveml %0I0x%x,%Rsp@-\\n\", mask);\n+\t  asm_fprintf (stream, \"\\tmoveml %0I0x%x,%Rsp@-\\n\", mask);\n #endif\n+\t}\n     }\n   if (flag_pic && current_function_uses_pic_offset_table)\n     {\n@@ -351,7 +392,7 @@ output_function_epilogue (stream, size)\n #endif\n       fsize = 0, big = 1;\n     }\n-  if (nregs <= 2)\n+  if (TARGET_5200 || nregs <= 2)\n     {\n       /* Restore each separately in the same order moveml does.\n          Using two movel instructions instead of a single moveml\n@@ -524,14 +565,25 @@ output_function_epilogue (stream, size)\n \t     reg_names[FRAME_POINTER_REGNUM]);\n   else if (fsize)\n     {\n-      if (fsize + 4 < 0x8000 && ! TARGET_5200)\n+      if (fsize + 4 < 0x8000)\n \t{\n-\t/* asm_fprintf() cannot handle %. */\n+\t  if (TARGET_5200)\n+\t    { \n #ifdef MOTOROLA\n-\t  asm_fprintf (stream, \"\\tadd.w %0I%d,%Rsp\\n\", fsize + 4);\n+\t      asm_fprintf (stream, \"\\tlea (%0I%d,%Rsp),%Rsp\\n\", fsize + 4);\n #else\n-\t  asm_fprintf (stream, \"\\taddw %0I%d,%Rsp\\n\", fsize + 4);\n+\t      asm_fprintf (stream, \"\\tlea %Rsp@(%0I%d),%Rsp\\n\", fsize + 4);\n #endif\n+\t    }\n+\t  else\n+\t    {\n+\t      /* asm_fprintf() cannot handle %. */\n+#ifdef MOTOROLA\n+\t      asm_fprintf (stream, \"\\tadd.w %0I%d,%Rsp\\n\", fsize + 4);\n+#else\n+\t      asm_fprintf (stream, \"\\taddw %0I%d,%Rsp\\n\", fsize + 4);\n+#endif\n+\t    }\n \t}\n       else\n \t{"}]}