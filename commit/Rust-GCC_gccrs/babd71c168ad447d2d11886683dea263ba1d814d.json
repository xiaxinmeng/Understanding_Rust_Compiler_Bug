{"sha": "babd71c168ad447d2d11886683dea263ba1d814d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiZDcxYzE2OGFkNDQ3ZDJkMTE4ODY2ODNkZWEyNjNiYTFkODE0ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-11-06T20:20:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-11-06T20:20:00Z"}, "message": "C++20 NB CA378 - Remove constrained non-template functions.\n\nNo real use cases have ever arisen for constraints on non-templated\nfunctions, and handling of them has never been entirely clear, so the\ncommittee agreed to accept this national body comment proposing that we\nremove them.\n\n\t* decl.c (grokfndecl): Reject constraints on non-templated function.\n\nFrom-SVN: r277891", "tree": {"sha": "890e5bf75cb35d71ba7b7d79a17c57c0156edc10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/890e5bf75cb35d71ba7b7d79a17c57c0156edc10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/babd71c168ad447d2d11886683dea263ba1d814d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babd71c168ad447d2d11886683dea263ba1d814d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/babd71c168ad447d2d11886683dea263ba1d814d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/babd71c168ad447d2d11886683dea263ba1d814d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d24b4f2dad8883db004481ebd633a0bf8d4f8e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d24b4f2dad8883db004481ebd633a0bf8d4f8e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d24b4f2dad8883db004481ebd633a0bf8d4f8e9"}], "stats": {"total": 64, "additions": 46, "deletions": 18}, "files": [{"sha": "c185af408b0247bfa8fd0aafc4bca2e53b363623", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=babd71c168ad447d2d11886683dea263ba1d814d", "patch": "@@ -1,3 +1,8 @@\n+2019-11-06  Jason Merrill  <jason@redhat.com>\n+\n+\tC++20 NB CA378 - Remove constrained non-template functions.\n+\t* decl.c (grokfndecl): Reject constraints on non-templated function.\n+\n 2019-11-06  Matthias Kretz  <m.kretz@gsi.de>\n \n \t* parser.c (cp_parser_operator): Parse operator?: as an"}, {"sha": "5c5a85e3221e6886f8f7dbc42ea2220b4ca849de", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=babd71c168ad447d2d11886683dea263ba1d814d", "patch": "@@ -9262,14 +9262,24 @@ grokfndecl (tree ctype,\n   if (flag_concepts)\n     {\n       tree tmpl_reqs = NULL_TREE;\n-      if (processing_template_decl > template_class_depth (ctype))\n+      tree ctx = friendp ? current_class_type : ctype;\n+      bool memtmpl = (processing_template_decl > template_class_depth (ctx));\n+      if (memtmpl)\n         tmpl_reqs = TEMPLATE_PARMS_CONSTRAINTS (current_template_parms);\n       tree ci = build_constraints (tmpl_reqs, decl_reqs);\n       if (concept_p && ci)\n         {\n           error_at (location, \"a function concept cannot be constrained\");\n           ci = NULL_TREE;\n         }\n+      /* C++20 CA378: Remove non-templated constrained functions.  */\n+      if (ci && !flag_concepts_ts\n+\t  && (!processing_template_decl\n+\t      || (friendp && !memtmpl && !funcdef_flag)))\n+\t{\n+\t  error_at (location, \"constraints on a non-templated function\");\n+\t  ci = NULL_TREE;\n+\t}\n       set_constraints (decl, ci);\n     }\n "}, {"sha": "88f9fe825f8dbc4480b2b1532c2a7568d6ce04be", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-friend4.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend4.C?ref=babd71c168ad447d2d11886683dea263ba1d814d", "patch": "@@ -0,0 +1,13 @@\n+// C++20 NB comment US115\n+// { dg-do compile { target c++2a } }\n+\n+template <class T> concept Any = true;\n+\n+template <class T>\n+struct A\n+{\n+  friend void f() requires Any<T> { } // OK\n+  friend void g() requires Any<T>;    // { dg-error \"\" }\n+};\n+\n+A<int> a;"}, {"sha": "a7419d69a4651010886144c78093fb64b6832f50", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-lambda2.C", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-lambda2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-lambda2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-lambda2.C?ref=babd71c168ad447d2d11886683dea263ba1d814d", "patch": "@@ -60,19 +60,19 @@ void test0()\n   auto g0 = []<False T>(T t) { return t; };\n   auto g1 = []<typename T> requires False<T> (T t) { return t; };\n   auto g2 = []<typename T>(T t) requires False<decltype(t)> { return t; };\n-  auto g3 = [](int t) requires False<decltype(t)> { return t; };\n+  auto g3 = [](int t) requires False<decltype(t)> { return t; }; // { dg-error \"non-templated\" }\n   auto g4 = [](False auto t) { return t; };\n   auto g5 = [](auto t) requires False<decltype(t)> { return t; };\n-  auto g6 = [](int t) requires False<int> { return t; };\n-  auto g7 = [](int t) requires false { return t; };\n+  auto g6 = [](int t) requires False<int> { return t; }; // { dg-error \"non-templated\" }\n+  auto g7 = [](int t) requires false { return t; };\t // { dg-error \"non-templated\" }\n   g0(0); // { dg-error \"no match\" }\n   g1(0); // { dg-error \"no match\" }\n   g2(0); // { dg-error \"no match\" }\n-  g3(0); // { dg-error \"no match\" }\n+  g3(0);\n   g4(0); // { dg-error \"no match\" }\n   g5(0); // { dg-error \"no match\" }\n-  g6(0); // { dg-error \"no match\" }\n-  g7(0); // { dg-error \"no match\" }\n+  g6(0);\n+  g7(0);\n }\n \n void test1()\n@@ -81,19 +81,19 @@ void test1()\n   auto g0 = [&]<False T>(T t) { return t; };\n   auto g1 = [&]<typename T> requires False<T> (T t) { return t; };\n   auto g2 = [&]<typename T>(T t) requires False<decltype(t)> { return t; };\n-  auto g3 = [&](int t) requires False<decltype(t)> { return t; };\n+  auto g3 = [&](int t) requires False<decltype(t)> { return t; }; // { dg-error \"non-templated\" }\n   auto g4 = [&](False auto t) { return t; };\n   auto g5 = [&](auto t) requires False<decltype(t)> { return t; };\n-  auto g6 = [&](int t) requires False<int> { return t; };\n-  auto g7 = [&](int t) requires false { return t; };\n+  auto g6 = [&](int t) requires False<int> { return t; }; // { dg-error \"non-templated\" }\n+  auto g7 = [&](int t) requires false { return t; };\t  // { dg-error \"non-templated\" }\n   g0(0); // { dg-error \"no match\" }\n   g1(0); // { dg-error \"no match\" }\n   g2(0); // { dg-error \"no match\" }\n-  g3(0); // { dg-error \"no match\" }\n+  g3(0);\n   g4(0); // { dg-error \"no match\" }\n   g5(0); // { dg-error \"no match\" }\n-  g6(0); // { dg-error \"no match\" }\n-  g7(0); // { dg-error \"no match\" }\n+  g6(0);\n+  g7(0);\n }\n \n void test2()\n@@ -147,7 +147,7 @@ using Func = int(*)(int);\n \n void test6()\n {\n-  Func f1 = [](int a) requires false { return a; }; // { dg-error \"cannot convert\" }\n+  Func f1 = [](int a) requires false { return a; }; // { dg-error \"non-templated\" }\n   Func f2 = [](auto a) requires false { return a; }; // { dg-error \"cannot convert\" }\n }\n "}, {"sha": "96da7852a70f060aef7b644ac200a6067fbadcd7", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-lambda3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-lambda3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-lambda3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-lambda3.C?ref=babd71c168ad447d2d11886683dea263ba1d814d", "patch": "@@ -34,7 +34,7 @@ int main(int, char**)\n   auto z = []<typename T, int N = 5>(T t) requires (N < 4) { return t; };\n   z.operator()<int, 3>(5);\n \n-  [](int t) requires true { return t; }(5);\n+  [](auto t) requires true { return t; }(5);\n   [](C1 auto t) { return t; }(5);\n \n   auto a0 = [](IsNotLarge auto a) { return [](auto b){ return b; }; };\n@@ -57,7 +57,7 @@ int main(int, char**)\n   foo2.b<int>()(5);\n   foo2.b<long long>()(5);\n \n-  Func m1 = [](int a) -> int requires true { return a; };\n+  Func m1 = [](auto a) -> int requires true { return a; };\n \n   return 0;\n }"}, {"sha": "62cc21dd7e180ae236d3f156e18f3fc6c3e32d50", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-requires1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/babd71c168ad447d2d11886683dea263ba1d814d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-requires1.C?ref=babd71c168ad447d2d11886683dea263ba1d814d", "patch": "@@ -7,8 +7,8 @@ concept Class = __is_class(T);\n template<typename T>\n concept C = requires { typename T::type; };\n \n-void f1(int a) requires true;         // OK\n-auto f2(int a) -> bool requires true; // OK\n+void f1(int a) requires true;         // { dg-error \"non-templated\" }\n+auto f2(int a) -> bool requires true; // { dg-error \"non-templated\" }\n auto f3(int a) requires true -> bool; // { dg-error \"\" } requires-clause precedes trailing-return-type\n typedef void fn_t() requires true;    // { dg-error \"typedef\" }\n void (*pf)() requires true;           // { dg-error \"non-function\" }"}]}