{"sha": "48c4de16460fcecdef33c59f2fdfdb40b4f829c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjNGRlMTY0NjBmY2VjZGVmMzNjNTlmMmZkZmRiNDBiNGY4MjljOQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "tschwinge@gnu.org", "date": "2009-08-06T22:02:34Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2009-08-06T22:02:34Z"}, "message": "2009-08-06  Thomas Schwinge  <tschwinge@gnu.org>\n\n\t* gcc/doc/extend.texi (__builtin_extract_return_address)\n\t(__builtin_frob_return_address): Document.\n\nFrom-SVN: r150546", "tree": {"sha": "8dcdc5645e362db9fb80eb891461282868c75fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dcdc5645e362db9fb80eb891461282868c75fa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48c4de16460fcecdef33c59f2fdfdb40b4f829c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c4de16460fcecdef33c59f2fdfdb40b4f829c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c4de16460fcecdef33c59f2fdfdb40b4f829c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c4de16460fcecdef33c59f2fdfdb40b4f829c9/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f36d140ec568d9474c1a991c3bab831c6d868fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36d140ec568d9474c1a991c3bab831c6d868fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36d140ec568d9474c1a991c3bab831c6d868fd6"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "879b9d1e34fb7256955f7b6b1073462bb55a73a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4de16460fcecdef33c59f2fdfdb40b4f829c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4de16460fcecdef33c59f2fdfdb40b4f829c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48c4de16460fcecdef33c59f2fdfdb40b4f829c9", "patch": "@@ -1,3 +1,8 @@\n+2009-08-06  Thomas Schwinge  <tschwinge@gnu.org>\n+\n+\t* gcc/doc/extend.texi (__builtin_extract_return_address)\n+\t(__builtin_frob_return_address): Document.\n+\n 2009-08-06  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/lib1funcs.asm (ARM_DIV_BODY): Add Thumb-2 implementation."}, {"sha": "c0fed8064501bea49843efa762a22f7a465a68e2", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c4de16460fcecdef33c59f2fdfdb40b4f829c9/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c4de16460fcecdef33c59f2fdfdb40b4f829c9/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=48c4de16460fcecdef33c59f2fdfdb40b4f829c9", "patch": "@@ -5844,10 +5844,27 @@ of the stack has been reached, this function will return @code{0} or a\n random value.  In addition, @code{__builtin_frame_address} may be used\n to determine if the top of the stack has been reached.\n \n+Additional post-processing of the returned value may be needed, see\n+@code{__builtin_extract_return_address}.\n+\n This function should only be used with a nonzero argument for debugging\n purposes.\n @end deftypefn\n \n+@deftypefn {Built-in Function} {void *} __builtin_extract_return_address (void *@var{addr})\n+The address as returned by @code{__builtin_return_address} may have to be fed\n+through this function to get the actual encoded address.  For example, on the\n+31-bit S/390 platform the highest bit has to be masked out, or on SPARC\n+platforms an offset has to be added for the true next instruction to be\n+executed.\n+\n+If no fixup is needed, this function simply passes through @var{addr}.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} {void *} __builtin_frob_return_address (void *@var{addr})\n+This function does the reverse of @code{__builtin_extract_return_address}.\n+@end deftypefn\n+\n @deftypefn {Built-in Function} {void *} __builtin_frame_address (unsigned int @var{level})\n This function is similar to @code{__builtin_return_address}, but it\n returns the address of the function frame rather than the return address"}]}