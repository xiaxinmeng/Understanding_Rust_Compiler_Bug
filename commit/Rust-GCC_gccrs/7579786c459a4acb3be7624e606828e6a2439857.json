{"sha": "7579786c459a4acb3be7624e606828e6a2439857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU3OTc4NmM0NTlhNGFjYjNiZTc2MjRlNjA2ODI4ZTZhMjQzOTg1Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-06-14T09:38:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-06-14T09:38:47Z"}, "message": "vrp.h: New testcase.\n\n2012-06-14  Richard Guenther  <rguenther@suse.de>\n\n\t* gcc.dg/tree-ssa/vrp.h: New testcase.\n\t* gcc.dg/tree-ssa/vrp68.c: Likewise.\n\nFrom-SVN: r188604", "tree": {"sha": "0d189f4a5a6e38611ead406bf5126ee7e952348a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d189f4a5a6e38611ead406bf5126ee7e952348a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7579786c459a4acb3be7624e606828e6a2439857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7579786c459a4acb3be7624e606828e6a2439857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7579786c459a4acb3be7624e606828e6a2439857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7579786c459a4acb3be7624e606828e6a2439857/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7670292377f3b4bebb14d9d5aa29e72933e05c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7670292377f3b4bebb14d9d5aa29e72933e05c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7670292377f3b4bebb14d9d5aa29e72933e05c94"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "2360767d0e1ae1e8f442281c504f3b9f2e6b6e0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7579786c459a4acb3be7624e606828e6a2439857/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7579786c459a4acb3be7624e606828e6a2439857/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7579786c459a4acb3be7624e606828e6a2439857", "patch": "@@ -1,3 +1,8 @@\n+2012-06-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/vrp.h: New testcase.\n+\t* gcc.dg/tree-ssa/vrp68.c: Likewise.\n+\n 2012-06-13  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/53621"}, {"sha": "079013a81017236bef417d4a2a6bdb6b84fe91df", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7579786c459a4acb3be7624e606828e6a2439857/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7579786c459a4acb3be7624e606828e6a2439857/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp.h?ref=7579786c459a4acb3be7624e606828e6a2439857", "patch": "@@ -0,0 +1,27 @@\n+extern void link_error(void);\n+\n+#define RANGE(name, min, max) \\\n+  if (name < min || name > max) \\\n+    return;\n+#define ANTI_RANGE(name, min, max) \\\n+  if (name >= min && name <= max) \\\n+    return;\n+#define MERGE(cond, name1, name2) \\\n+  if (cond) \\\n+    name1 = name2;\n+#define CHECK_RANGE(expr, min, max) \\\n+  do { \\\n+     __typeof__ (expr) v = (expr); \\\n+     if (v < min) link_error(); \\\n+     if (v > max) link_error(); \\\n+     if (v < min || v > max) link_error (); \\\n+  } while (0) \n+#define CHECK_ANTI_RANGE(expr, min, max) \\\n+  do { \\\n+    __typeof__ (expr) v = (expr); \\\n+    if (v >= min) \\\n+      if (v <= max) \\\n+        link_error(); \\\n+    if (v >= min && v <= max) \\\n+      link_error(); \\\n+  } while (0)"}, {"sha": "291b3763179ce5e9625bbbe5bb196dbd9f0c50f8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp68.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7579786c459a4acb3be7624e606828e6a2439857/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7579786c459a4acb3be7624e606828e6a2439857/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp68.c?ref=7579786c459a4acb3be7624e606828e6a2439857", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+\n+#include \"vrp.h\"\n+\n+void test1 (int i, int j, int b)\n+{\n+  RANGE(i, 2, 6);\n+  ANTI_RANGE(j, 1, 7);\n+  MERGE(b, i, j);\n+  CHECK_ANTI_RANGE(i, 7, 7);\n+  CHECK_ANTI_RANGE(i, 1, 1);\n+  /* If we swap the anti-range tests the ~[6, 6] test is never eliminated.  */\n+}\n+int main() { }\n+\n+/* While subsequent VRP/DOM passes manage to even recognize the ~[6, 6]\n+   test as redundant a single VRP run will arbitrarily choose ~[0, 0] when\n+   merging [1, 5] with ~[0, 6] so the first VRP pass can only eliminate\n+   the ~[0, 0] check as redundant.  */\n+\n+/* { dg-final { scan-tree-dump-times \"vrp1\" 0 \"link_error\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vrp1\" 1 \"link_error\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp1\" } } */"}]}