{"sha": "735538716d00c4a2ba60e3257d7c3092948a5c88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1NTM4NzE2ZDAwYzRhMmJhNjBlMzI1N2Q3YzMwOTI5NDhhNWM4OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-20T05:02:28Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-20T05:02:28Z"}, "message": "basic-block.h (edge_def): Add dest_idx.\n\n\t* basic-block.h (edge_def): Add dest_idx.\n\t* cfg.c (unchecked_make_edge): Initialize dest_idx.\n\t(remove_edge): Simplify the disconnection of an edge from its\n\tdestination.\n\t(redirect_edge_succ): Likewise.\n\t* cfghooks.c (verify_flow_info): Check the consistency of\n\tdest_idx for each edge.\n\nFrom-SVN: r90958", "tree": {"sha": "adcd8f1cb11423dfef36a3d69e2b7f39b0f21c01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adcd8f1cb11423dfef36a3d69e2b7f39b0f21c01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/735538716d00c4a2ba60e3257d7c3092948a5c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/735538716d00c4a2ba60e3257d7c3092948a5c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/735538716d00c4a2ba60e3257d7c3092948a5c88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/735538716d00c4a2ba60e3257d7c3092948a5c88/comments", "author": null, "committer": null, "parents": [{"sha": "2d59754f6a83fcfb57baba3ebeefaab2a96a5e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d59754f6a83fcfb57baba3ebeefaab2a96a5e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d59754f6a83fcfb57baba3ebeefaab2a96a5e78"}], "stats": {"total": 73, "additions": 44, "deletions": 29}, "files": [{"sha": "be459bd389848a90d7f15e5221f63b3d07130068", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=735538716d00c4a2ba60e3257d7c3092948a5c88", "patch": "@@ -1,3 +1,13 @@\n+2004-11-19  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* basic-block.h (edge_def): Add dest_idx.\n+\t* cfg.c (unchecked_make_edge): Initialize dest_idx.\n+\t(remove_edge): Simplify the disconnection of an edge from its\n+\tdestination.\n+\t(redirect_edge_succ): Likewise.\n+\t* cfghooks.c (verify_flow_info): Check the consistency of\n+\tdest_idx for each edge.\n+\n 2004-11-19  Aldy Hernandez  <aldyh@redhat.com>\n \n         * simplify-rtx.c (simplify_ternary_operation): Use"}, {"sha": "69fc0ab8294466d980d5bdda6acc2f02ce8343a7", "filename": "gcc/basic-block.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=735538716d00c4a2ba60e3257d7c3092948a5c88", "patch": "@@ -154,6 +154,10 @@ struct edge_def GTY(())\n   int probability;\t\t/* biased by REG_BR_PROB_BASE */\n   gcov_type count;\t\t/* Expected number of executions calculated\n \t\t\t\t   in profile.c  */\n+\n+  /* The index number corresponding to this edge in the edge vector\n+     dest->preds.  */\n+  unsigned int dest_idx;\n };\n \n typedef struct edge_def *edge;"}, {"sha": "67b0598341fad7736b9b76b066800e19b27f905a", "filename": "gcc/cfg.c", "status": "modified", "additions": 16, "deletions": 29, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=735538716d00c4a2ba60e3257d7c3092948a5c88", "patch": "@@ -276,6 +276,7 @@ unchecked_make_edge (basic_block src, basic_block dst, int flags)\n   e->src = src;\n   e->dest = dst;\n   e->flags = flags;\n+  e->dest_idx = EDGE_COUNT (dst->preds) - 1;\n \n   return e;\n }\n@@ -355,11 +356,13 @@ remove_edge (edge e)\n {\n   edge tmp;\n   basic_block src, dest;\n+  unsigned int dest_idx;\n   bool found = false;\n   edge_iterator ei;\n \n   src = e->src;\n   dest = e->dest;\n+  dest_idx = e->dest_idx;\n \n   for (ei = ei_start (src->succs); (tmp = ei_safe_edge (ei)); )\n     {\n@@ -375,20 +378,12 @@ remove_edge (edge e)\n \n   gcc_assert (found);\n \n-  found = false;\n-  for (ei = ei_start (dest->preds); (tmp = ei_safe_edge (ei)); )\n-    {\n-      if (tmp == e)\n-\t{\n-\t  VEC_unordered_remove (edge, dest->preds, ei.index);\n-\t  found = true;\n-\t  break;\n-\t}\n-      else\n-\tei_next (&ei);\n-    }\n+  VEC_unordered_remove (edge, dest->preds, dest_idx);\n \n-  gcc_assert (found);\n+  /* If we removed an edge in the middle of the edge vector, we need\n+     to update dest_idx of the edge that moved into the \"hole\".  */\n+  if (dest_idx < EDGE_COUNT (dest->preds))\n+    EDGE_PRED (dest, dest_idx)->dest_idx = dest_idx;\n \n   free_edge (e);\n }\n@@ -398,28 +393,20 @@ remove_edge (edge e)\n void\n redirect_edge_succ (edge e, basic_block new_succ)\n {\n-  edge tmp;\n-  edge_iterator ei;\n-  bool found = false;\n+  basic_block dest = e->dest;\n+  unsigned int dest_idx = e->dest_idx;\n \n-  /* Disconnect the edge from the old successor block.  */\n-  for (ei = ei_start (e->dest->preds); (tmp = ei_safe_edge (ei)); )\n-    {\n-      if (tmp == e)\n-\t{\n-\t  VEC_unordered_remove (edge, e->dest->preds, ei.index);\n-\t  found = true;\n-\t  break;\n-\t}\n-      else\n-\tei_next (&ei);\n-    }\n+  VEC_unordered_remove (edge, dest->preds, dest_idx);\n \n-  gcc_assert (found);\n+  /* If we removed an edge in the middle of the edge vector, we need\n+     to update dest_idx of the edge that moved into the \"hole\".  */\n+  if (dest_idx < EDGE_COUNT (dest->preds))\n+    EDGE_PRED (dest, dest_idx)->dest_idx = dest_idx;\n \n   /* Reconnect the edge to the new successor block.  */\n   VEC_safe_push (edge, new_succ->preds, e);\n   e->dest = new_succ;\n+  e->dest_idx = EDGE_COUNT (new_succ->preds) - 1;\n }\n \n /* Like previous but avoid possible duplicate edge.  */"}, {"sha": "42d1183841a6ee0bf327c697eeca8de1fbe4f2c4", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/735538716d00c4a2ba60e3257d7c3092948a5c88/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=735538716d00c4a2ba60e3257d7c3092948a5c88", "patch": "@@ -178,6 +178,20 @@ verify_flow_info (void)\n \t      fputc ('\\n', stderr);\n \t      err = 1;\n \t    }\n+\n+\t  if (ei.index != e->dest_idx)\n+\t    {\n+\t      error (\"basic block %d pred edge is corrupted\", bb->index);\n+\t      error (\"its dest_idx should be %d, not %d\",\n+\t\t     ei.index, e->dest_idx);\n+\t      fputs (\"Predecessor: \", stderr);\n+\t      dump_edge_info (stderr, e, 0);\n+\t      fputs (\"\\nSuccessor: \", stderr);\n+\t      dump_edge_info (stderr, e, 1);\n+\t      fputc ('\\n', stderr);\n+\t      err = 1;\n+\t    }\n+\n \t  edge_checksum[e->dest->index + 2] -= (size_t) e;\n \t}\n     }"}]}