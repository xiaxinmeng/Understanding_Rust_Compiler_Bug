{"sha": "5a6341a623919e747ca1c093a85c0aedb0344fd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE2MzQxYTYyMzkxOWU3NDdjYTFjMDkzYTg1YzBhZWRiMDM0NGZkOQ==", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-08-21T15:41:28Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-09-09T11:44:44Z"}, "message": "module: Add two test cases for external modules", "tree": {"sha": "d42900499d2400f7ab9f24916d7c68ce8f32ceff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d42900499d2400f7ab9f24916d7c68ce8f32ceff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a6341a623919e747ca1c093a85c0aedb0344fd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6341a623919e747ca1c093a85c0aedb0344fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6341a623919e747ca1c093a85c0aedb0344fd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6341a623919e747ca1c093a85c0aedb0344fd9/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aff3e33a03eaef2ff0d0a89def25abdf36c5b5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aff3e33a03eaef2ff0d0a89def25abdf36c5b5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aff3e33a03eaef2ff0d0a89def25abdf36c5b5f"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "67c8a13220d26c0480bb0c3897667b664d37cedb", "filename": "gcc/testsuite/rust/compile/extern_mod2.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aff3e33a03eaef2ff0d0a89def25abdf36c5b5f/gcc%2Ftestsuite%2Frust%2Fcompile%2Fextern_mod2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aff3e33a03eaef2ff0d0a89def25abdf36c5b5f/gcc%2Ftestsuite%2Frust%2Fcompile%2Fextern_mod2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fextern_mod2.rs?ref=6aff3e33a03eaef2ff0d0a89def25abdf36c5b5f", "patch": "@@ -1,14 +0,0 @@\n-#[path = \"modules/valid_path.rs\"]\n-mod not_a_valid_path;\n-\n-#[path] // { dg-error \"path attributes must contain a filename\" }\n-mod error; // { dg-error \"no candidate found for module error\" }\n-\n-// This is \"valid\", and should only error out when parsing\n-// the file\n-// FIXME: Add a dg-error directive on the `mod another_error` line once module expansion\n-// is added\n-#[path = \"not_a_valid_file.rs\"]\n-mod another_error;\n-\n-fn main() {}"}, {"sha": "4b576e03d8072effff189ddbd03db9924034cb0e", "filename": "gcc/testsuite/rust/compile/torture/extern_mod1.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod1.rs?ref=5a6341a623919e747ca1c093a85c0aedb0344fd9", "patch": "@@ -0,0 +1,6 @@\n+// { dg-additional-options \"-w\" }\n+mod modules;\n+\n+fn main() {\n+    let twelve = modules::return_12();\n+}"}, {"sha": "f3379e33ee0f52798f1aba0fd0b1b54d72f7d413", "filename": "gcc/testsuite/rust/compile/torture/extern_mod2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod2.rs?ref=5a6341a623919e747ca1c093a85c0aedb0344fd9", "patch": "@@ -0,0 +1,16 @@\n+// { dg-additional-options \"-w\" }\n+\n+#[path = \"modules/valid_path.rs\"]\n+mod not_a_valid_path;\n+\n+// #[path]\n+// FIXME: This is wrong\n+// mod error; \n+\n+// This is \"valid\", and should only error out when parsing\n+// the file\n+// FIXME: Fix path attribute expanding\n+// #[path = \"not_a_valid_file.rs\"]\n+// mod another_error;\n+\n+fn main() {}"}, {"sha": "80d849798987b88bd71c76395a311af83f231e88", "filename": "gcc/testsuite/rust/compile/torture/extern_mod4.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod4.rs?ref=5a6341a623919e747ca1c093a85c0aedb0344fd9", "patch": "@@ -0,0 +1,17 @@\n+// { dg-additional-options \"-w\" }\n+// { dg-output \"12\" }\n+mod modules;\n+\n+extern \"C\" {\n+    fn printf(s: *const i8, ...);\n+}\n+\n+fn main() {\n+    unsafe {\n+        let fmt_s = \"%d\\n\\0\";\n+        let fmt_p = fmt_s as *const str;\n+        let fmt_i8 = fmt_p as *const i8;\n+\n+        printf(fmt_i8, modules::return_12());\n+    }\n+}"}, {"sha": "3d65176b6c3870ac4093c1145c86e4ca97ac070f", "filename": "gcc/testsuite/rust/compile/torture/modules/mod.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmodules%2Fmod.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmodules%2Fmod.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmodules%2Fmod.rs?ref=5a6341a623919e747ca1c093a85c0aedb0344fd9", "patch": "@@ -0,0 +1,3 @@\n+pub fn return_12() -> i32 {\n+    12\n+}"}, {"sha": "6a1519c3fc45a588200123ea4a9dbdfb8ec7fee5", "filename": "gcc/testsuite/rust/compile/torture/modules/valid_path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmodules%2Fvalid_path.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6341a623919e747ca1c093a85c0aedb0344fd9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmodules%2Fvalid_path.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fmodules%2Fvalid_path.rs?ref=5a6341a623919e747ca1c093a85c0aedb0344fd9", "previous_filename": "gcc/testsuite/rust/compile/modules/valid_path.rs"}]}