{"sha": "713c31453c379279d1e3cb622c8f007cb43042e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzYzMxNDUzYzM3OTI3OWQxZTNjYjYyMmM4ZjAwN2NiNDMwNDJlMA==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2007-11-14T12:26:05Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2007-11-14T12:26:05Z"}, "message": "adaint.c [...]: Remove system-specific sections of non-supported Interix target.\n\n    gcc/ada/\n\t* adaint.c init.c initialize.c link.c: Remove system-specific\n\tsections of non-supported Interix target.\n\n\t* s-osinte-interix.ads: Removed.\n\nFrom-SVN: r130175", "tree": {"sha": "f12986f81c03e768a064dd50ada815f5ec20eb06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f12986f81c03e768a064dd50ada815f5ec20eb06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713c31453c379279d1e3cb622c8f007cb43042e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713c31453c379279d1e3cb622c8f007cb43042e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713c31453c379279d1e3cb622c8f007cb43042e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713c31453c379279d1e3cb622c8f007cb43042e0/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3865fa6a9d0eb291d959bf983323af2edd30ff87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3865fa6a9d0eb291d959bf983323af2edd30ff87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3865fa6a9d0eb291d959bf983323af2edd30ff87"}], "stats": {"total": 666, "additions": 10, "deletions": 656}, "files": [{"sha": "4f17de09053a808595bac4b933f22cf5e6b717c3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=713c31453c379279d1e3cb622c8f007cb43042e0", "patch": "@@ -1,3 +1,10 @@\n+2007-11-14  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\t* adaint.c init.c initialize.c link.c: Remove system-specific\n+\tsections of non-supported Interix target.\n+\n+\t* s-osinte-interix.ads: Removed.\n+\n 2007-11-13  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* a-tasatt.adb: Add a comment at the beginning of the package"}, {"sha": "366a476c8e455b10d1eb8554cffb503d12b8e93b", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=713c31453c379279d1e3cb622c8f007cb43042e0", "patch": "@@ -404,8 +404,7 @@ __gnat_readlink (char *path ATTRIBUTE_UNUSED,\n \t\t size_t bufsiz ATTRIBUTE_UNUSED)\n {\n #if defined (MSDOS) || defined (_WIN32) || defined (__EMX__) \\\n-  || defined (__INTERIX) || defined (VMS) \\\n-  || defined(__vxworks) || defined (__nucleus__)\n+  || defined (VMS) || defined(__vxworks) || defined (__nucleus__)\n   return -1;\n #else\n   return readlink (path, buf, bufsiz);\n@@ -421,8 +420,7 @@ __gnat_symlink (char *oldpath ATTRIBUTE_UNUSED,\n \t\tchar *newpath ATTRIBUTE_UNUSED)\n {\n #if defined (MSDOS) || defined (_WIN32) || defined (__EMX__) \\\n-  || defined (__INTERIX) || defined (VMS) \\\n-  || defined(__vxworks) || defined (__nucleus__)\n+  || defined (VMS) || defined(__vxworks) || defined (__nucleus__)\n   return -1;\n #else\n   return symlink (oldpath, newpath);"}, {"sha": "00f986bac34c79f13a96ec8b939394ad92887f7c", "filename": "gcc/ada/init.c", "status": "modified", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=713c31453c379279d1e3cb622c8f007cb43042e0", "patch": "@@ -737,73 +737,6 @@ __gnat_install_handler (void)\n   __gnat_handler_installed = 1;\n }\n \n-/*******************/\n-/* Interix Section */\n-/*******************/\n-\n-#elif defined (__INTERIX)\n-\n-#include <signal.h>\n-\n-static void __gnat_error_handler (int);\n-\n-static void\n-__gnat_error_handler (int sig)\n-{\n-  struct Exception_Data *exception;\n-  const char *msg;\n-\n-  switch (sig)\n-    {\n-    case SIGSEGV:\n-      exception = &storage_error;\n-      msg = \"stack overflow or erroneous memory access\";\n-      break;\n-\n-    case SIGBUS:\n-      exception = &constraint_error;\n-      msg = \"SIGBUS\";\n-      break;\n-\n-    case SIGFPE:\n-      exception = &constraint_error;\n-      msg = \"SIGFPE\";\n-      break;\n-\n-    default:\n-      exception = &program_error;\n-      msg = \"unhandled signal\";\n-    }\n-\n-  Raise_From_Signal_Handler (exception, msg);\n-}\n-\n-void\n-__gnat_install_handler (void)\n-{\n-  struct sigaction act;\n-\n-  /* Set up signal handler to map synchronous signals to appropriate\n-     exceptions.  Make sure that the handler isn't interrupted by another\n-     signal that might cause a scheduling event! */\n-\n-  act.sa_handler = __gnat_error_handler;\n-  act.sa_flags = 0;\n-  sigemptyset (&act.sa_mask);\n-\n-  /* Handlers for signals besides SIGSEGV cause c974013 to hang */\n-/*  sigaction (SIGILL,  &act, NULL); */\n-/*  sigaction (SIGABRT, &act, NULL); */\n-/*  sigaction (SIGFPE,  &act, NULL); */\n-/*  sigaction (SIGBUS,  &act, NULL); */\n-\n-  /* Do not install handlers if interrupt state is \"System\" */\n-  if (__gnat_get_interrupt_state (SIGSEGV) != 's')\n-    sigaction (SIGSEGV, &act, NULL);\n-\n-  __gnat_handler_installed = 1;\n-}\n-\n /****************/\n /* IRIX Section */\n /****************/"}, {"sha": "17a8fc55fe419e16034a079ec1073bd5af387f74", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=713c31453c379279d1e3cb622c8f007cb43042e0", "patch": "@@ -91,8 +91,7 @@ __gnat_initialize (void *eh)\n /* __gnat_initialize (init_float version) */\n /******************************************/\n \n-#elif defined (__INTERIX) || defined (__Lynx__) || \\\n-      defined (__FreeBSD__) || defined(__NetBSD__)\n+#elif defined (__Lynx__) || defined (__FreeBSD__) || defined(__NetBSD__)\n \n extern void __gnat_init_float (void);\n "}, {"sha": "92037209eb0d03bb1d37b425f390b3cef9e5030d", "filename": "gcc/ada/link.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713c31453c379279d1e3cb622c8f007cb43042e0/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=713c31453c379279d1e3cb622c8f007cb43042e0", "patch": "@@ -108,15 +108,6 @@ char __gnat_shared_libgnat_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n \n-#elif defined (__INTERIX)\n-const char *__gnat_object_file_option = \"\";\n-const char *__gnat_run_path_option = \"\";\n-int __gnat_link_max = 5000;\n-unsigned char __gnat_objlist_file_supported = 1;\n-char __gnat_shared_libgnat_default = STATIC;\n-unsigned char __gnat_using_gnu_linker = 1;\n-const char *__gnat_object_library_extension = \".a\";\n-\n #elif defined (__hpux__)\n const char *__gnat_object_file_option = \"-Wl,-c,\";\n const char *__gnat_run_path_option = \"-Wl,+b,\";"}, {"sha": "844e12c621af6f0d00396f94f520acb01c6883a4", "filename": "gcc/ada/s-osinte-interix.ads", "status": "removed", "additions": 0, "deletions": 574, "changes": 574, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3865fa6a9d0eb291d959bf983323af2edd30ff87/gcc%2Fada%2Fs-osinte-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3865fa6a9d0eb291d959bf983323af2edd30ff87/gcc%2Fada%2Fs-osinte-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-interix.ads?ref=3865fa6a9d0eb291d959bf983323af2edd30ff87", "patch": "@@ -1,574 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   S Y S T E M . O S _ I N T E R F A C E                  --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2007, Free Software Foundation, Inc.      --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a OpenNT/Interix (FSU THREADS) version of this package\n-\n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by children of System.\n-\n---  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n---  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n-\n-with Interfaces.C;\n-with Ada.Unchecked_Conversion;\n-\n-package System.OS_Interface is\n-   pragma Preelaborate;\n-\n-   pragma Linker_Options (\"-lgthreads\");\n-   pragma Linker_Options (\"-lmalloc\");\n-\n-   subtype int            is Interfaces.C.int;\n-   subtype short          is Interfaces.C.short;\n-   subtype long           is Interfaces.C.long;\n-   subtype unsigned       is Interfaces.C.unsigned;\n-   subtype unsigned_short is Interfaces.C.unsigned_short;\n-   subtype unsigned_long  is Interfaces.C.unsigned_long;\n-   subtype unsigned_char  is Interfaces.C.unsigned_char;\n-   subtype plain_char     is Interfaces.C.plain_char;\n-   subtype size_t         is Interfaces.C.size_t;\n-\n-   -----------\n-   -- Errno --\n-   -----------\n-\n-   function errno return int;\n-   pragma Import (C, errno, \"__get_errno\");\n-\n-   EAGAIN    : constant := 11;\n-   EINTR     : constant := 4;\n-   EINVAL    : constant := 22;\n-   ENOMEM    : constant := 12;\n-   ETIMEDOUT : constant := 60;\n-\n-   -------------\n-   -- Signals --\n-   -------------\n-\n-   Max_Interrupt : constant := 31;\n-   type Signal is new int range 0 .. Max_Interrupt;\n-   for Signal'Size use int'Size;\n-\n-   SIGHUP      : constant := 1; --  hangup\n-   SIGINT      : constant := 2; --  interrupt (rubout)\n-   SIGQUIT     : constant := 3; --  quit (ASCD FS)\n-   SIGILL      : constant := 4; --  illegal instruction (not reset)\n-   SIGTRAP     : constant := 5; --  trace trap (not reset)\n-   SIGIOT      : constant := 6; --  IOT instruction\n-   SIGABRT     : constant := 6; --  used by abort, replace SIGIOT in the future\n-   SIGEMT      : constant := 0; --  EMT instruction\n-   SIGFPE      : constant := 8; --  floating point exception\n-   SIGKILL     : constant := 9; --  kill (cannot be caught or ignored)\n-   SIGBUS      : constant := 10; --  bus error\n-   SIGSEGV     : constant := 11; --  segmentation violation\n-   SIGSYS      : constant := 12;  --  bad argument to system call\n-   SIGPIPE     : constant := 13; --  write on a pipe with no one to read it\n-   SIGALRM     : constant := 14; --  alarm clock\n-   SIGTERM     : constant := 15; --  software termination signal from kill\n-   SIGUSR1     : constant := 16; --  user defined signal 1\n-   SIGUSR2     : constant := 17; --  user defined signal 2\n-   SIGCLD      : constant := 18; --  alias for SIGCHLD\n-   SIGCHLD     : constant := 18; --  child status change\n-   SIGPWR      : constant := 0; --  power-fail restart\n-   SIGWINCH    : constant := 20; --  window size change\n-   SIGURG      : constant := 21; --  urgent condition on IO channel\n-   SIGPOLL     : constant := 22; --  pollable event occurred\n-   SIGIO       : constant := 19; --  I/O possible (Solaris SIGPOLL alias)\n-   SIGSTOP     : constant := 23; --  stop (cannot be caught or ignored)\n-   SIGTSTP     : constant := 24; --  user stop requested from tty\n-   SIGCONT     : constant := 25; --  stopped process has been continued\n-   SIGTTIN     : constant := 26; --  background tty read attempted\n-   SIGTTOU     : constant := 27; --  background tty write attempted\n-   SIGVTALRM   : constant := 28; --  virtual timer expired\n-   SIGPROF     : constant := 29; --  profiling timer expired\n-   SIGXCPU     : constant := 30; --  CPU time limit exceeded\n-   SIGXFSZ     : constant := 31; --  filesize limit exceeded\n-\n-   SIGADAABORT : constant := SIGABRT;\n-\n-   type Signal_Set is array (Natural range <>) of Signal;\n-\n-   Unmasked    : constant Signal_Set :=\n-     (SIGTRAP, SIGALRM, SIGVTALRM, SIGTTIN, SIGTTOU, SIGTSTP, SIGPROF);\n-\n-   Reserved    : constant Signal_Set := (SIGKILL, SIGSTOP);\n-\n-   type sigset_t is private;\n-\n-   function sigaddset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigaddset, \"sigaddset\");\n-\n-   function sigdelset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigdelset, \"sigdelset\");\n-\n-   function sigfillset (set : access sigset_t) return int;\n-   pragma Import (C, sigfillset, \"sigfillset\");\n-\n-   function sigismember (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigismember, \"sigismember\");\n-\n-   function sigemptyset (set : access sigset_t) return int;\n-   pragma Import (C, sigemptyset, \"sigemptyset\");\n-\n-   type struct_sigaction is record\n-      sa_handler  : System.Address;\n-      sa_mask     : sigset_t;\n-      sa_flags    : int;\n-      sa_restorer : System.Address;\n-   end record;\n-   pragma Convention (C, struct_sigaction);\n-   type struct_sigaction_ptr is access all struct_sigaction;\n-\n-   SIG_BLOCK   : constant := 1;\n-   SIG_UNBLOCK : constant := 2;\n-   SIG_SETMASK : constant := 3;\n-\n-   SIG_DFL : constant := 0;\n-   SIG_IGN : constant := 1;\n-\n-   SA_SIGINFO : constant := 0;\n-   --  Dummy constant for a sa_flags bit. A proper definition is needed only\n-   --  for the GCC/ZCX EH scheme (see System.Interrupt_Management).\n-\n-   function sigaction\n-     (sig  : Signal;\n-      act  : struct_sigaction_ptr;\n-      oact : struct_sigaction_ptr) return int;\n-   --  FSU pthreads redefines sigaction and then uses a special syscall\n-   --  API to call the system version. Doing syscalls on OpenNT is very\n-   --  difficult, so we rename the pthread version instead.\n-   pragma Import (C, sigaction, \"pthread_wrapper_sigaction\");\n-\n-   ----------\n-   -- Time --\n-   ----------\n-\n-   Time_Slice_Supported : constant Boolean := False;\n-   --  Indicates wether time slicing is supported (i.e FSU threads have been\n-   --  compiled with DEF_RR)\n-\n-   type timespec is private;\n-\n-   type clockid_t is private;\n-\n-   CLOCK_REALTIME : constant clockid_t;\n-\n-   function clock_gettime\n-     (clock_id : clockid_t;\n-      tp       : access timespec) return int;\n-   pragma Import (C, clock_gettime, \"clock_gettime\");\n-\n-   function To_Duration (TS : timespec) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timespec (D : Duration) return timespec;\n-   pragma Inline (To_Timespec);\n-\n-   type struct_timeval is private;\n-\n-   function To_Duration (TV : struct_timeval) return Duration;\n-   pragma Inline (To_Duration);\n-\n-   function To_Timeval (D : Duration) return struct_timeval;\n-   pragma Inline (To_Timeval);\n-\n-   -------------------------\n-   -- Priority Scheduling --\n-   -------------------------\n-\n-   SCHED_FIFO  : constant := 0;\n-   SCHED_RR    : constant := 1;\n-   SCHED_OTHER : constant := 2;\n-\n-   -------------\n-   -- Process --\n-   -------------\n-\n-   type pid_t is private;\n-\n-   function kill (pid : pid_t; sig : Signal) return int;\n-   pragma Import (C, kill, \"kill\");\n-\n-   function getpid return pid_t;\n-   pragma Import (C, getpid, \"getpid\");\n-\n-   ---------\n-   -- LWP --\n-   ---------\n-\n-   function lwp_self return System.Address;\n-   --  lwp_self does not exist on this thread library, revert to pthread_self\n-   --  which is the closest approximation (with getpid). This function is\n-   --  needed to share 7staprop.adb across POSIX-like targets.\n-   pragma Import (C, lwp_self, \"pthread_self\");\n-\n-   -------------\n-   -- Threads --\n-   -------------\n-\n-   type Thread_Body is access\n-     function (arg : System.Address) return System.Address;\n-\n-   function Thread_Body_Access is new\n-     Ada.Unchecked_Conversion (System.Address, Thread_Body);\n-\n-   type pthread_t           is private;\n-   subtype Thread_Id        is pthread_t;\n-\n-   type pthread_mutex_t     is limited private;\n-   type pthread_cond_t      is limited private;\n-   type pthread_attr_t      is limited private;\n-   type pthread_mutexattr_t is limited private;\n-   type pthread_condattr_t  is limited private;\n-   type pthread_key_t       is private;\n-\n-   PTHREAD_CREATE_DETACHED : constant := 1;\n-   PTHREAD_CREATE_JOINABLE : constant := 0;\n-\n-   -----------\n-   -- Stack --\n-   -----------\n-\n-   Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target.\n-   --  This allows us to share s-osinte.adb between all the FSU run time.\n-   --  Note that this value can only be true if pthread_t has a complete\n-   --  definition that corresponds exactly to the C header files.\n-\n-   function Get_Stack_Base (thread : pthread_t) return Address;\n-   pragma Inline (Get_Stack_Base);\n-   --  returns the stack base of the specified thread.\n-   --  Only call this function when Stack_Base_Available is True.\n-\n-   function Get_Page_Size return size_t;\n-   function Get_Page_Size return Address;\n-   pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  returns the size of a page, or 0 if this is not relevant on this\n-   --  target\n-\n-   PROT_NONE  : constant := 0;\n-   PROT_READ  : constant := 1;\n-   PROT_WRITE : constant := 2;\n-   PROT_EXEC  : constant := 4;\n-   PROT_ALL   : constant := PROT_READ + PROT_WRITE + PROT_EXEC;\n-\n-   PROT_ON    : constant := PROT_NONE;\n-   PROT_OFF   : constant := PROT_ALL;\n-\n-   function mprotect (addr : Address; len : size_t; prot : int) return int;\n-   pragma Import (C, mprotect);\n-\n-   ---------------------------------------\n-   -- Nonstandard Thread Initialization --\n-   ---------------------------------------\n-\n-   procedure pthread_init;\n-   --  FSU_THREADS requires pthread_init, which is nonstandard\n-   --  and this should be invoked during the elaboration of s-taprop.adb\n-   pragma Import (C, pthread_init, \"pthread_init\");\n-\n-   -------------------------\n-   -- POSIX.1c  Section 3 --\n-   -------------------------\n-\n-   function sigwait\n-     (set : access sigset_t;\n-      sig : access Signal) return int;\n-   --  FSU_THREADS has a nonstandard sigwait\n-\n-   function pthread_kill\n-     (thread : pthread_t;\n-      sig    : Signal) return   int;\n-   pragma Import (C, pthread_kill, \"pthread_kill\");\n-\n-   type sigset_t_ptr is access all sigset_t;\n-\n-   function pthread_sigmask\n-     (how  : int;\n-      set  : sigset_t_ptr;\n-      oset : sigset_t_ptr) return int;\n-   pragma Import (C, pthread_sigmask, \"pthread_wrapper_sigprocmask\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 11 --\n-   --------------------------\n-\n-   function pthread_mutexattr_init\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_init, \"pthread_mutexattr_init\");\n-\n-   function pthread_mutexattr_destroy\n-     (attr : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutexattr_destroy, \"pthread_mutexattr_destroy\");\n-\n-   function pthread_mutex_init\n-     (mutex : access pthread_mutex_t;\n-      attr  : access pthread_mutexattr_t) return int;\n-   pragma Import (C, pthread_mutex_init, \"pthread_mutex_init\");\n-\n-   function pthread_mutex_destroy (mutex : access pthread_mutex_t) return int;\n-   pragma Import (C, pthread_mutex_destroy, \"pthread_mutex_destroy\");\n-\n-   function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has nonstandard pthread_mutex_lock\n-\n-   function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has nonstandard pthread_mutex_lock\n-\n-   function pthread_condattr_init\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_init, \"pthread_condattr_init\");\n-\n-   function pthread_condattr_destroy\n-     (attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_condattr_destroy, \"pthread_condattr_destroy\");\n-\n-   function pthread_cond_init\n-     (cond : access pthread_cond_t;\n-      attr : access pthread_condattr_t) return int;\n-   pragma Import (C, pthread_cond_init, \"pthread_cond_init\");\n-\n-   function pthread_cond_destroy (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_destroy, \"pthread_cond_destroy\");\n-\n-   function pthread_cond_signal (cond : access pthread_cond_t) return int;\n-   pragma Import (C, pthread_cond_signal, \"pthread_cond_signal\");\n-\n-   function pthread_cond_wait\n-     (cond  : access pthread_cond_t;\n-      mutex : access pthread_mutex_t) return int;\n-   --  FSU_THREADS has a nonstandard pthread_cond_wait\n-\n-   function pthread_cond_timedwait\n-     (cond    : access pthread_cond_t;\n-      mutex   : access pthread_mutex_t;\n-      abstime : access timespec) return int;\n-   --  FSU_THREADS has a nonstandard pthread_cond_timedwait\n-\n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n-   --------------------------\n-   -- POSIX.1c  Section 13 --\n-   --------------------------\n-\n-   PTHREAD_PRIO_NONE    : constant := 0;\n-   PTHREAD_PRIO_PROTECT : constant := 2;\n-   PTHREAD_PRIO_INHERIT : constant := 1;\n-\n-   function pthread_mutexattr_setprotocol\n-     (attr     : access pthread_mutexattr_t;\n-      protocol : int) return int;\n-   pragma Import (C, pthread_mutexattr_setprotocol);\n-\n-   function pthread_mutexattr_setprioceiling\n-     (attr     : access pthread_mutexattr_t;\n-      prioceiling : int) return int;\n-   pragma Import\n-     (C, pthread_mutexattr_setprioceiling,\n-      \"pthread_mutexattr_setprio_ceiling\");\n-\n-   type struct_sched_param is record\n-      sched_priority : int;  --  scheduling priority\n-   end record;\n-\n-   function pthread_setschedparam\n-     (thread : pthread_t;\n-      policy : int;\n-      param  : access struct_sched_param) return int;\n-   --  FSU_THREADS does not have pthread_setschedparam\n-\n-   function pthread_attr_setscope\n-     (attr            : access pthread_attr_t;\n-      contentionscope : int) return int;\n-   pragma Import (C, pthread_attr_setscope, \"pthread_attr_setscope\");\n-\n-   function pthread_attr_setinheritsched\n-     (attr         : access pthread_attr_t;\n-      inheritsched : int) return int;\n-   pragma Import (C, pthread_attr_setinheritsched);\n-\n-   function pthread_attr_setschedpolicy\n-     (attr   : access pthread_attr_t;\n-      policy : int) return int;\n-   pragma Import\n-    (C, pthread_attr_setschedpolicy, \"pthread_attr_setsched\");\n-\n-   function sched_yield return int;\n-   --  FSU_THREADS does not have sched_yield;\n-\n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n-\n-   function pthread_attr_init (attributes : access pthread_attr_t) return int;\n-   pragma Import (C, pthread_attr_init, \"pthread_attr_init\");\n-\n-   function pthread_attr_destroy\n-     (attributes : access pthread_attr_t) return int;\n-   pragma Import (C, pthread_attr_destroy, \"pthread_attr_destroy\");\n-\n-   function pthread_attr_setdetachstate\n-     (attr        : access pthread_attr_t;\n-      detachstate : int) return int;\n-   --  FSU_THREADS has a nonstandard pthread_attr_setdetachstate\n-\n-   function pthread_attr_setstacksize\n-     (attr      : access pthread_attr_t;\n-      stacksize : size_t) return int;\n-   pragma Import (C, pthread_attr_setstacksize);\n-\n-   function pthread_create\n-     (thread        : access pthread_t;\n-      attributes    : access pthread_attr_t;\n-      start_routine : Thread_Body;\n-      arg           : System.Address) return int;\n-   pragma Import (C, pthread_create, \"pthread_create\");\n-\n-   procedure pthread_exit (status : System.Address);\n-   pragma Import (C, pthread_exit, \"pthread_exit\");\n-\n-   function pthread_self return pthread_t;\n-   pragma Import (C, pthread_self, \"pthread_self\");\n-\n-   --------------------------\n-   -- POSIX.1c  Section 17 --\n-   --------------------------\n-\n-   function pthread_setspecific\n-     (key   : pthread_key_t;\n-      value : System.Address) return  int;\n-   pragma Import (C, pthread_setspecific, \"pthread_setspecific\");\n-\n-   function pthread_getspecific (key : pthread_key_t) return System.Address;\n-   --  FSU_THREADS has a nonstandard pthread_getspecific\n-\n-   type destructor_pointer is access procedure (arg : System.Address);\n-\n-   function pthread_key_create\n-     (key        : access pthread_key_t;\n-      destructor : destructor_pointer) return int;\n-   pragma Import (C, pthread_key_create, \"pthread_key_create\");\n-\n-private\n-\n-   type sigset_t is new unsigned_long;\n-   pragma Convention (C, sigset_t);\n-\n-   type pid_t is new int;\n-\n-   subtype time_t is long;\n-\n-   type timespec is record\n-      tv_sec  : time_t;\n-      tv_nsec : long;\n-   end record;\n-   pragma Convention (C, timespec);\n-\n-   type clockid_t is new int;\n-   CLOCK_REALTIME : constant clockid_t := 0;\n-\n-   type struct_timeval is record\n-      tv_sec  : time_t;\n-      tv_usec : long;\n-   end record;\n-   pragma Convention (C, struct_timeval);\n-\n-   type pthread_attr_t is record\n-      flags           : int;\n-      stacksize       : int;\n-      contentionscope : int;\n-      inheritsched    : int;\n-      detachstate     : int;\n-      sched           : int;\n-      prio            : int;\n-      starttime       : timespec;\n-      deadline        : timespec;\n-      period          : timespec;\n-   end record;\n-   pragma Convention (C_Pass_By_Copy, pthread_attr_t);\n-\n-   type pthread_condattr_t is record\n-      flags : int;\n-   end record;\n-   pragma Convention (C, pthread_condattr_t);\n-\n-   type pthread_mutexattr_t is record\n-      flags        : int;\n-      prio_ceiling : int;\n-      protocol     : int;\n-   end record;\n-   pragma Convention (C, pthread_mutexattr_t);\n-\n-   type sigjmp_buf is array (Integer range 0 .. 17) of int;\n-\n-   type pthread_t_struct is record\n-      context    : sigjmp_buf;\n-      pbody      : sigjmp_buf;\n-      errno      : int;\n-      ret        : int;\n-      stack_base : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_t_struct);\n-\n-   type pthread_t is access all pthread_t_struct;\n-\n-   type queue_t is record\n-      head : System.Address;\n-      tail : System.Address;\n-   end record;\n-   pragma Convention (C, queue_t);\n-\n-   type pthread_mutex_t is record\n-      queue                 : queue_t;\n-      lock                  : plain_char;\n-      owner                 : System.Address;\n-      flags                 : int;\n-      prio_ceiling          : int;\n-      protocol              : int;\n-      prev_max_ceiling_prio : int;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-\n-   type pthread_cond_t is record\n-      queue   : queue_t;\n-      flags   : int;\n-      waiters : int;\n-      mutex   : System.Address;\n-   end record;\n-   pragma Convention (C, pthread_cond_t);\n-\n-   type pthread_key_t is new int;\n-\n-end System.OS_Interface;"}]}