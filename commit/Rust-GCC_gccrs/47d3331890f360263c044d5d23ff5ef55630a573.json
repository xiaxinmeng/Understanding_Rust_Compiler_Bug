{"sha": "47d3331890f360263c044d5d23ff5ef55630a573", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdkMzMzMTg5MGYzNjAyNjNjMDQ0ZDVkMjNmZjVlZjU1NjMwYTU3Mw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-03T15:24:48Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-03T15:24:48Z"}, "message": "gcc.c (xputenv): New function.\n\n\t* gcc.c (xputenv): New function.\n\t(putenv_from_prefixes): Use xputenv instead of putenv.\n\t(process_command): Use xputenv instead of putenv.\n\t(set_collect_gcc_options): Use xputenv instead of putenv.\n\t(main): Use xputenv instead of putenv.\n\nFrom-SVN: r128046", "tree": {"sha": "edf1af3d1fd81ce1ee57396d343b84313331fdaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edf1af3d1fd81ce1ee57396d343b84313331fdaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47d3331890f360263c044d5d23ff5ef55630a573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d3331890f360263c044d5d23ff5ef55630a573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47d3331890f360263c044d5d23ff5ef55630a573", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d3331890f360263c044d5d23ff5ef55630a573/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ddb87782d08b109ccf7c137aab6d8b207c87dd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddb87782d08b109ccf7c137aab6d8b207c87dd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddb87782d08b109ccf7c137aab6d8b207c87dd9"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "563aff009de64fe300c4d5ffb4466340bbdb6831", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47d3331890f360263c044d5d23ff5ef55630a573/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47d3331890f360263c044d5d23ff5ef55630a573/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47d3331890f360263c044d5d23ff5ef55630a573", "patch": "@@ -1,3 +1,11 @@\n+2007-09-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* gcc.c (xputenv): New function.\n+\t(putenv_from_prefixes): Use xputenv instead of putenv.\n+\t(process_command): Use xputenv instead of putenv.\n+\t(set_collect_gcc_options): Use xputenv instead of putenv.\n+\t(main): Use xputenv instead of putenv.\n+\n 2007-09-03  Jesper Nilsson  <jesper.nilsson@axis.com>\n \n \t* config/cris/cris.h (TARGET_HAS_SWAP): Defined to describe"}, {"sha": "c7c3cf37220bb91c5576cfbccf362b8e9dbc53c9", "filename": "gcc/gcc.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47d3331890f360263c044d5d23ff5ef55630a573/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47d3331890f360263c044d5d23ff5ef55630a573/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=47d3331890f360263c044d5d23ff5ef55630a573", "patch": "@@ -297,6 +297,7 @@ static void set_spec (const char *, const char *);\n static struct compiler *lookup_compiler (const char *, size_t, const char *);\n static char *build_search_list (const struct path_prefix *, const char *,\n \t\t\t\tbool, bool);\n+static void xputenv (char *);\n static void putenv_from_prefixes (const struct path_prefix *, const char *,\n \t\t\t\t  bool);\n static int access_check (const char *, int);\n@@ -2598,6 +2599,16 @@ add_to_obstack (char *path, void *data)\n   return NULL;\n }\n \n+/* Add or change the value of an environment variable, outputting the\n+   change to standard error if in verbose mode.  */\n+static void\n+xputenv (char *string)\n+{\n+  if (verbose_flag)\n+    notice (\"%s\\n\", string);\n+  putenv (string);\n+}\n+\n /* Build a list of search directories from PATHS.\n    PREFIX is a string to prepend to the list.\n    If CHECK_DIR_P is true we ensure the directory exists.\n@@ -2632,7 +2643,7 @@ static void\n putenv_from_prefixes (const struct path_prefix *paths, const char *env_var,\n \t\t      bool do_multi)\n {\n-  putenv (build_search_list (paths, env_var, true, do_multi));\n+  xputenv (build_search_list (paths, env_var, true, do_multi));\n }\n \f\n /* Check whether NAME can be accessed in MODE.  This is like access,\n@@ -3413,7 +3424,7 @@ process_command (int argc, const char **argv)\n \t\t\t\t\t\t standard_bindir_prefix,\n \t\t\t\t\t\t standard_libexec_prefix);\n       if (gcc_exec_prefix)\n-\tputenv (concat (\"GCC_EXEC_PREFIX=\", gcc_exec_prefix, NULL));\n+\txputenv (concat (\"GCC_EXEC_PREFIX=\", gcc_exec_prefix, NULL));\n     }\n   else\n     {\n@@ -4332,7 +4343,7 @@ set_collect_gcc_options (void)\n \t}\n     }\n   obstack_grow (&collect_obstack, \"\\0\", 1);\n-  putenv (XOBFINISH (&collect_obstack, char *));\n+  xputenv (XOBFINISH (&collect_obstack, char *));\n }\n \f\n /* Process a spec string, accumulating and running commands.  */\n@@ -6218,11 +6229,11 @@ main (int argc, char **argv)\n   obstack_init (&collect_obstack);\n   obstack_grow (&collect_obstack, \"COLLECT_GCC=\", sizeof (\"COLLECT_GCC=\") - 1);\n   obstack_grow (&collect_obstack, argv[0], strlen (argv[0]) + 1);\n-  putenv (XOBFINISH (&collect_obstack, char *));\n+  xputenv (XOBFINISH (&collect_obstack, char *));\n \n #ifdef INIT_ENVIRONMENT\n   /* Set up any other necessary machine specific environment variables.  */\n-  putenv (INIT_ENVIRONMENT);\n+  xputenv (INIT_ENVIRONMENT);\n #endif\n \n   /* Make a table of what switches there are (switches, n_switches)."}]}