{"sha": "4b3cf52215ba4791100abeb0ac3510954a54be5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzY2Y1MjIxNWJhNDc5MTEwMGFiZWIwYWMzNTEwOTU0YTU0YmU1ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-05T00:56:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-05T00:56:40Z"}, "message": "genconfig.c (main): Generate CC0_P.\n\n\t* genconfig.c (main): Generate CC0_P.\n\t* rtl.h (CC0_P): Remove.\n\nFrom-SVN: r62423", "tree": {"sha": "d47ab358e6661aafcbd2543836dd54ab00c3af34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d47ab358e6661aafcbd2543836dd54ab00c3af34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b3cf52215ba4791100abeb0ac3510954a54be5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3cf52215ba4791100abeb0ac3510954a54be5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3cf52215ba4791100abeb0ac3510954a54be5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3cf52215ba4791100abeb0ac3510954a54be5d/comments", "author": null, "committer": null, "parents": [{"sha": "dfff898c2701ef3d7934c1efb88b89974770d25d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfff898c2701ef3d7934c1efb88b89974770d25d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfff898c2701ef3d7934c1efb88b89974770d25d"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "a24745363812731f7086c21b080b17c7818429dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3cf52215ba4791100abeb0ac3510954a54be5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3cf52215ba4791100abeb0ac3510954a54be5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b3cf52215ba4791100abeb0ac3510954a54be5d", "patch": "@@ -1,3 +1,8 @@\n+2003-02-04  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* genconfig.c (main): Generate CC0_P.\n+\t* rtl.h (CC0_P): Remove.\n+\n 2003-02-04  Richard Henderson  <rth@redhat.com>\n \n \t* libgcc2.h, libgcc2.c (__ffsSI2): New."}, {"sha": "bb0dea9f92da2b92d72512dab1c0c5aba1c3e693", "filename": "gcc/genconfig.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3cf52215ba4791100abeb0ac3510954a54be5d/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3cf52215ba4791100abeb0ac3510954a54be5d/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=4b3cf52215ba4791100abeb0ac3510954a54be5d", "patch": "@@ -342,7 +342,14 @@ main (argc, argv)\n   printf (\"#endif\\n\");\n \n   if (have_cc0_flag)\n-    printf (\"#define HAVE_cc0 1\\n\");\n+    {\n+      printf (\"#define HAVE_cc0 1\\n\");\n+      printf (\"#define CC0_P(X) ((X) == cc0_rtx)\\n\");\n+    }\n+  else\n+    {\n+      printf (\"#define CC0_P(X) 0\\n\");\n+    }\n \n   if (have_cmove_flag)\n     printf (\"#define HAVE_conditional_move 1\\n\");"}, {"sha": "7758a92f724ce7dfcfdc175183b7e1446945008f", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3cf52215ba4791100abeb0ac3510954a54be5d/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3cf52215ba4791100abeb0ac3510954a54be5d/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=4b3cf52215ba4791100abeb0ac3510954a54be5d", "patch": "@@ -273,13 +273,6 @@ struct rtvec_def GTY(()) {\n /* Predicate yielding nonzero iff X is a barrier insn.  */\n #define BARRIER_P(X) (GET_CODE (X) == BARRIER)\n \n-/* Predicate yielding nonzero iff X is cc0.  */\n-#ifdef HAVE_cc0\n-#define CC0_P(X) ((X) == cc0_rtx)\n-#else\n-#define CC0_P(X) 0\n-#endif\n-\n /* Predicate yielding nonzero iff X is a data for a jump table.  */\n #define JUMP_TABLE_DATA_P(INSN) \\\n   (JUMP_P (INSN) && (GET_CODE (PATTERN (INSN)) == ADDR_VEC || \\"}]}