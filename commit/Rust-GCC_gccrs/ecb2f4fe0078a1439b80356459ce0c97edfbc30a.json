{"sha": "ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNiMmY0ZmUwMDc4YTE0MzliODAzNTY0NTljZTBjOTdlZGZiYzMwYQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-08-12T09:01:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-12T09:01:04Z"}, "message": "[Ada] Hang on loop in generic with subtype indication specifying a range\n\nThe compiler may hang when a for loop expanded in a generic\ninstantiation has a range specified by a subtype indication with an\nexplicit range that has a bound that is an attribute applied to a\ndiscriminant-dependent array component. The Parent field of the bound\nmay not be set, which can lead to endless looping when an actual subtype\ncreated for the array component is passed to Insert_Actions. This is\nfixed by setting the Parent fields of the copied bounds before\nPreanalyze is called on them.\n\n2019-08-12  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch5.adb (Prepare_Param_Spec_Loop): Set the parents of the\n\tcopied low and high bounds in the case where the loop range is\n\tgiven by a discrete_subtype_indication, to prevent hanging (or\n\tAssert_Failure) in Insert_Actions.\n\ngcc/testsuite/\n\n\t* gnat.dg/generic_inst7.adb, gnat.dg/generic_inst7_pkg.adb,\n\tgnat.dg/generic_inst7_pkg.ads, gnat.dg/generic_inst7_types.ads:\n\tNew testcase.\n\nFrom-SVN: r274298", "tree": {"sha": "4cc6365c441bc719c4f9725021309fec59337545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cc6365c441bc719c4f9725021309fec59337545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ab24ed7528b0375c49e4416f825a90bdca63454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab24ed7528b0375c49e4416f825a90bdca63454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab24ed7528b0375c49e4416f825a90bdca63454"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "1482a507897edf5795a6eb13beec24318839c6f9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -1,3 +1,10 @@\n+2019-08-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch5.adb (Prepare_Param_Spec_Loop): Set the parents of the\n+\tcopied low and high bounds in the case where the loop range is\n+\tgiven by a discrete_subtype_indication, to prevent hanging (or\n+\tAssert_Failure) in Insert_Actions.\n+\n 2019-08-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (heck_Untagged_Equality): Verify that user-defined"}, {"sha": "963819ede4a745067b45dabd202159c85e6104d9", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -3636,11 +3636,16 @@ package body Sem_Ch5 is\n             then\n                Rng := Range_Expression (Constraint (Rng));\n \n-               --  Preanalyze the bounds of the range constraint\n+               --  Preanalyze the bounds of the range constraint, setting\n+               --  parent fields to associate the copied bounds with the range,\n+               --  allowing proper tree climbing during preanalysis.\n \n                Low  := New_Copy_Tree (Low_Bound  (Rng));\n                High := New_Copy_Tree (High_Bound (Rng));\n \n+               Set_Parent (Low, Rng);\n+               Set_Parent (High, Rng);\n+\n                Preanalyze (Low);\n                Preanalyze (High);\n "}, {"sha": "f7f62763823bde61974c6e17fb1e9bd665a3a8c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -1,3 +1,9 @@\n+2019-08-12  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat.dg/generic_inst7.adb, gnat.dg/generic_inst7_pkg.adb,\n+\tgnat.dg/generic_inst7_pkg.ads, gnat.dg/generic_inst7_types.ads:\n+\tNew testcase.\n+\n 2019-08-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/equal10.adb, gnat.dg/equal10.ads: New testcase."}, {"sha": "d56e47940466fba0ea1e9e682d2ff59c9e515b72", "filename": "gcc/testsuite/gnat.dg/generic_inst7.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7.adb?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do compile }\n+\n+with Generic_Inst7_Pkg;\n+\n+procedure Generic_Inst7 is\n+\n+  package Inst is new Generic_Inst7_Pkg;\n+\n+begin\n+   null;\n+end Generic_Inst7;"}, {"sha": "261ffea94f7a59369f1ad4476e50f9b605d7d88f", "filename": "gcc/testsuite/gnat.dg/generic_inst7_pkg.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_pkg.adb?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -0,0 +1,12 @@\n+package body Generic_Inst7_Pkg is\n+\n+   use type Generic_Inst7_Types.Index;\n+\n+   procedure Process (List : in out Generic_Inst7_Types.List) is\n+   begin\n+      for I in Generic_Inst7_Types.Index range 1 .. List.Arr'length loop\n+         null;\n+      end loop;\n+   end Process;\n+\n+end Generic_Inst7_Pkg;"}, {"sha": "7bc4abcb2b3e035f17e485070f241f735367c81d", "filename": "gcc/testsuite/gnat.dg/generic_inst7_pkg.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_pkg.ads?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -0,0 +1,8 @@\n+with Generic_Inst7_Types;\n+\n+generic\n+package Generic_Inst7_Pkg is\n+\n+   procedure Process (List : in out Generic_Inst7_Types.List);\n+\n+end Generic_Inst7_Pkg;"}, {"sha": "34d782d819b4b356e99ad3fdb50caa9b750633cd", "filename": "gcc/testsuite/gnat.dg/generic_inst7_types.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_types.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb2f4fe0078a1439b80356459ce0c97edfbc30a/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_types.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst7_types.ads?ref=ecb2f4fe0078a1439b80356459ce0c97edfbc30a", "patch": "@@ -0,0 +1,15 @@\n+package Generic_Inst7_Types is\n+\n+   type Index is new Integer range 0 .. 10;\n+\n+   type Element is record\n+      I : Integer;\n+   end record;\n+\n+   type Element_Array is array (Index range <>) of Element;\n+\n+   type List (Size : Index := 1) is record\n+      Arr : Element_Array (1 .. Size);\n+   end record;\n+\n+end Generic_Inst7_Types;"}]}