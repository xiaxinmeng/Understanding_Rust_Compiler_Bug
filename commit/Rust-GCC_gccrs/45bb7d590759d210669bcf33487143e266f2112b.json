{"sha": "45bb7d590759d210669bcf33487143e266f2112b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDViYjdkNTkwNzU5ZDIxMDY2OWJjZjMzNDg3MTQzZTI2NmYyMTEyYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-07-04T20:52:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-07-04T20:52:32Z"}, "message": "re PR target/81300 (-fpeephole2 breaks __builtin_ia32_sbb_u64, _subborrow_u64 on AMD64)\n\n2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/81300\n\t* config/i386/i386.md (setcc + movzbl/and to xor + setcc peepholes):\n\tRequire dead FLAGS_REG at the beginning of a peephole.\n\ntestsuite/ChangeLog:\n\n\tPR target/81300\n\t* gcc.target/i386/pr81300.c: New test.\n\nFrom-SVN: r249977", "tree": {"sha": "983a94bcdbbc0cffaf210bdc722b4963586bdf82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/983a94bcdbbc0cffaf210bdc722b4963586bdf82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45bb7d590759d210669bcf33487143e266f2112b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45bb7d590759d210669bcf33487143e266f2112b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45bb7d590759d210669bcf33487143e266f2112b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45bb7d590759d210669bcf33487143e266f2112b/comments", "author": null, "committer": null, "parents": [{"sha": "1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcfac88dec24a5ae005a82b1aa85e0e4291a81e"}], "stats": {"total": 151, "additions": 98, "deletions": 53}, "files": [{"sha": "1f0b0b43999a19d7c2bc08ac685528b48e200ea9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 53, "deletions": 46, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45bb7d590759d210669bcf33487143e266f2112b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45bb7d590759d210669bcf33487143e266f2112b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45bb7d590759d210669bcf33487143e266f2112b", "patch": "@@ -1,3 +1,9 @@\n+2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/81300\n+\t* config/i386/i386.md (setcc + movzbl/and to xor + setcc peepholes):\n+\tRequire dead FLAGS_REG at the beginning of a peephole.\n+\n 2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81294\n@@ -258,7 +264,7 @@\n 2017-07-02  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-cfgcleanup.c (want_merge_blocks_p): New function.\n-        (cleanup_tree_cfg_bb): Use it.\n+\t(cleanup_tree_cfg_bb): Use it.\n \t* profile-count.h (profile_count::of_for_merging, profile_count::merge):\n \tNew functions.\n \t* tree-cfg.c (gimple_merge_blocks): Use profile_count::merge.\n@@ -350,8 +356,8 @@\n 2017-07-02  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* dumpfile.c: Include profile-count.h\n-\t* tree-cfg.c (gimple_duplicate_sese_tail): Drop UNUSED attributes; update\n-\tprofile.\n+\t* tree-cfg.c (gimple_duplicate_sese_tail): Drop UNUSED attributes;\n+\tupdate profile.\n \t(insert_cond_bb): Update profile.\n \t* tree-cfg.h (insert_cond_bb): Update prototype.\n \t* tree-chkp-opt.c (chkp_optimize_string_function_calls): Update.\n@@ -481,7 +487,7 @@\n \n 2017-07-01  Andi Kleen  <ak@linux.intel.com>\n \n-        * print-tree.c (print_node): Print all attributes.\n+\t* print-tree.c (print_node): Print all attributes.\n \n 2017-07-01  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -678,7 +684,7 @@\n \t* config/i386/i386.c (ix86_macro_fusion_pair_p): Push the check for\n \tCC usage from generic code to here.\n \t* sched-deps.c (sched_macro_fuse_insns): Move the condition for\n-\tCC usage into the target macros. \n+\tCC usage into the target macros.\n \n 2017-06-29  Maya Rashish  <coypu@sdf.org>\n \n@@ -693,16 +699,16 @@\n \n 2017-06-29  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n-        * config/rs6000/rs6000.c (toc_relative_expr_p): Make tocrel_base\n-        and tocrel_offset be pointer args rather than implicitly using\n-        static versions.\n-        (legitimate_constant_pool_address_p, rs6000_emit_move,\n-        const_load_sequence_p, adjust_vperm): Add local tocrel_base and\n-        tocrel_offset and use in toc_relative_expr_p call.\n-        (print_operand, print_operand_address): Use static tocrel_base_oac\n-        and tocrel_offset_oac.\n-        (rs6000_output_addr_const_extra): Use static tocrel_base_oac and\n-        tocrel_offset_oac.\n+\t* config/rs6000/rs6000.c (toc_relative_expr_p): Make tocrel_base\n+\tand tocrel_offset be pointer args rather than implicitly using\n+\tstatic versions.\n+\t(legitimate_constant_pool_address_p, rs6000_emit_move,\n+\tconst_load_sequence_p, adjust_vperm): Add local tocrel_base and\n+\ttocrel_offset and use in toc_relative_expr_p call.\n+\t(print_operand, print_operand_address): Use static tocrel_base_oac\n+\tand tocrel_offset_oac.\n+\t(rs6000_output_addr_const_extra): Use static tocrel_base_oac and\n+\ttocrel_offset_oac.\n \n 2017-06-29  Maya Rashish  <coypu@sdf.org>\n \n@@ -1038,12 +1044,12 @@\n 2017-06-29  Yury Gribov  <tetra2005@gmail.com>\n \n \tPR bootstrap/80565\n-        * ipa-cp.c (allocate_and_init_ipcp_value): Add initialization\n+\t* ipa-cp.c (allocate_and_init_ipcp_value): Add initialization\n \tcode.\n-        * ipa-inline.h\n+\t* ipa-inline.h\n \t(edge_growth_cache_entry::edge_growth_cache_entry): New\n \tfunction.\n-        (reset_edge_growth_cache): Update to use constructor.\n+\t(reset_edge_growth_cache): Update to use constructor.\n \n 2017-06-28  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n@@ -1238,7 +1244,7 @@\n \t(ASM_OUTPUT_ALIGNED_BSS): Add #undef before #define.\n \n 2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n-            Olivier Hainque  <hainque@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n \n \t* config/i386/vxworks.h (DBX_REGISTER_NUMBER): Pick distinct\n \tmap for 64bits.\n@@ -1283,7 +1289,7 @@\n \t* tree.c (builtin_structptr_types): Add four entries.\n \n 2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n-            Olivier Hainque  <hainque@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n \n \t* config/vxworks.h (VXWORKS_LIB_SPEC): Incorporate ...\n \t(TLS_SYM): New local macro, forcing reference to __tls__ on\n@@ -1329,7 +1335,7 @@\n \tcondition.\n \n 2017-06-26  Jerome Lambourg  <lambourg@adacore.com>\n-            Olivier Hainque  <hainque@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n \n \t* config.gcc (*-*-vxworks*): Add TARGET_VXWORKS7=1 to tm_defines\n \tfor all vxworks7 targets.\n@@ -1694,7 +1700,7 @@\n \tattribute type list for neon_multiply.\n \t* config/arm/types.md (crypto_pmull): Add.\n \t* config/arm/xgene1.md (xgene1_neon_pmull): Add crypto_pmull to\n-\tattribute type list.\t\n+\tattribute type list.\n \n 2017-06-20  Andreas Tobler  <andreast@gcc.gnu.org>\n \n@@ -1950,9 +1956,9 @@\n 2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/t-linux-eabi (MULTILIB_EXCEPTIONS): Set to empty.\n-        (MULTILIB_RESUE): Likewise.\n-        (MULTILIB_MATCHES): Likewise.\n-        (MULTLIB_REQUIRED): Likewise.\n+\t(MULTILIB_RESUE): Likewise.\n+\t(MULTILIB_MATCHES): Likewise.\n+\t(MULTLIB_REQUIRED): Likewise.\n \n 2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n \n@@ -2325,28 +2331,28 @@\n \n 2017-06-16  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n-        * config/aarch64/aarch64.c (qdf24xx_prefetch_tune): Update\n-        prefetch settings, and enable prefetching by default at -O3.\n+\t* config/aarch64/aarch64.c (qdf24xx_prefetch_tune): Update\n+\tprefetch settings, and enable prefetching by default at -O3.\n \n 2017-06-16  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n-        * config/aarch64/aarch64.c (aarch64_override_options_internal):\n-        Set flag_prefetch_loop_arrays according to tuning data.\n+\t* config/aarch64/aarch64.c (aarch64_override_options_internal):\n+\tSet flag_prefetch_loop_arrays according to tuning data.\n \n 2017-06-16  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n-        * config/aarch64/aarch64-protos.h (struct cpu_prefetch_tune):\n-        New tune structure.\n-        (struct tune_params): Use cpu_prefetch_tune instead of cache_line_size.\n-        [Unrelated to main purpose of the patch] Place the pointer field last\n-        to enable type checking errors when tune structure are wrongly merged.\n-        * config/aarch64/aarch64.c (generic_prefetch_tune,)\n-        (exynosm1_prefetch_tune, qdf24xx_prefetch_tune,)\n-        (thunderx2t99_prefetch_tune): New tune constants.\n-        (tune_params *_tunings): Update all tunings (no functional change).\n-        (aarch64_override_options_internal): Set PARAM_SIMULTANEOUS_PREFETCHES,\n-        PARAM_L1_CACHE_SIZE, PARAM_L1_CACHE_LINE_SIZE, and PARAM_L2_CACHE_SIZE\n-        from tunings structures.\n+\t* config/aarch64/aarch64-protos.h (struct cpu_prefetch_tune):\n+\tNew tune structure.\n+\t(struct tune_params): Use cpu_prefetch_tune instead of cache_line_size.\n+\t[Unrelated to main purpose of the patch] Place the pointer field last\n+\tto enable type checking errors when tune structure are wrongly merged.\n+\t* config/aarch64/aarch64.c (generic_prefetch_tune,)\n+\t(exynosm1_prefetch_tune, qdf24xx_prefetch_tune,)\n+\t(thunderx2t99_prefetch_tune): New tune constants.\n+\t(tune_params *_tunings): Update all tunings (no functional change).\n+\t(aarch64_override_options_internal): Set PARAM_SIMULTANEOUS_PREFETCHES,\n+\tPARAM_L1_CACHE_SIZE, PARAM_L1_CACHE_LINE_SIZE, and PARAM_L2_CACHE_SIZE\n+\tfrom tunings structures.\n \n 2017-06-16  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -2478,7 +2484,7 @@\n \n \tPR target/71663\n \t* config/aarch64/aarch64.c (aarch64_expand_vector_init):\n-\tImprove vector initialization code gen for only variable case. \n+\tImprove vector initialization code gen for only variable case.\n \n 2017-06-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -3322,7 +3328,7 @@\n \n \tPR sanitizer/80932\n \t* fold-const.c (extract_muldiv_1) <case MINUS_EXPR>: Add\n-\tTYPE_OVERFLOW_WRAPS check. \n+\tTYPE_OVERFLOW_WRAPS check.\n \n 2017-06-07  Bin Cheng  <bin.cheng@arm.com>\n \n@@ -3365,12 +3371,13 @@\n \n 2017-06-07  Tamar Christina  <tamar.christina@arm.com>\n \n-\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Make sdiv more expensive than udiv.\n-\tRemove floating point cases from mod.\n+\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Make sdiv more\n+\texpensive than udiv.  Remove floating point cases from mod.\n \n 2017-06-07  Tamar Christina  <tamar.christina@arm.com>\n \n-\t* config/arm/aarch-cost-tables.h (cortexa53_extra_cost): Increase idiv cost.\n+\t* config/arm/aarch-cost-tables.h (cortexa53_extra_cost):\n+\tIncrease idiv cost.\n \n 2017-06-07  Tamar Christina  <tamar.christina@arm.com>\n "}, {"sha": "da0f7c256afcebae5fe31435b4141104622b9b19", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45bb7d590759d210669bcf33487143e266f2112b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45bb7d590759d210669bcf33487143e266f2112b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=45bb7d590759d210669bcf33487143e266f2112b", "patch": "@@ -11754,7 +11754,8 @@\n \t(zero_extend (match_dup 1)))]\n   \"(peep2_reg_dead_p (3, operands[1])\n     || operands_match_p (operands[1], operands[3]))\n-   && ! reg_overlap_mentioned_p (operands[3], operands[0])\"\n+   && ! reg_overlap_mentioned_p (operands[3], operands[0])\n+   && peep2_regno_dead_p (0, FLAGS_REG)\"\n   [(set (match_dup 4) (match_dup 0))\n    (set (strict_low_part (match_dup 5))\n \t(match_dup 2))]\n@@ -11775,7 +11776,8 @@\n   \"(peep2_reg_dead_p (3, operands[1])\n     || operands_match_p (operands[1], operands[3]))\n    && ! reg_overlap_mentioned_p (operands[3], operands[0])\n-   && ! reg_set_p (operands[3], operands[4])\"\n+   && ! reg_set_p (operands[3], operands[4])\n+   && peep2_regno_dead_p (0, FLAGS_REG)\"\n   [(parallel [(set (match_dup 5) (match_dup 0))\n \t      (match_dup 4)])\n    (set (strict_low_part (match_dup 6))\n@@ -11797,7 +11799,8 @@\n \t\t   (and:SI (match_dup 3) (const_int 255)))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"REGNO (operands[1]) == REGNO (operands[3])\n-   && ! reg_overlap_mentioned_p (operands[3], operands[0])\"\n+   && ! reg_overlap_mentioned_p (operands[3], operands[0])\n+   && peep2_regno_dead_p (0, FLAGS_REG)\"\n   [(set (match_dup 4) (match_dup 0))\n    (set (strict_low_part (match_dup 5))\n \t(match_dup 2))]\n@@ -11819,7 +11822,8 @@\n   \"(peep2_reg_dead_p (3, operands[1])\n     || operands_match_p (operands[1], operands[3]))\n    && ! reg_overlap_mentioned_p (operands[3], operands[0])\n-   && ! reg_set_p (operands[3], operands[4])\"\n+   && ! reg_set_p (operands[3], operands[4])\n+   && peep2_regno_dead_p (0, FLAGS_REG)\"\n   [(parallel [(set (match_dup 5) (match_dup 0))\n \t      (match_dup 4)])\n    (set (strict_low_part (match_dup 6))"}, {"sha": "32af5a6ca74f4bc4de5a87e954fb4aba91eb7ba5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45bb7d590759d210669bcf33487143e266f2112b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45bb7d590759d210669bcf33487143e266f2112b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45bb7d590759d210669bcf33487143e266f2112b", "patch": "@@ -1,3 +1,8 @@\n+2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/81300\n+\t* gcc.target/i386/pr81300.c: New test.\n+\n 2017-07-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81294\n@@ -505,7 +510,7 @@\n \n 2017-06-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n-        PR fortran/52473\n+\tPR fortran/52473\n \t* gfortran.dg/cshift_2.f90:  New test.\n \n 2017-06-23  Jim Wilson  <jim.wilson@linaro.org>\n@@ -536,8 +541,7 @@\n \n 2017-06-23  James Cowgill  <James.Cowgill@imgtec.com>\n \n-\t* go.test/go-test.exp (go-set-goarch): Update MIPS architecture\n-        names.\n+\t* go.test/go-test.exp (go-set-goarch): Update MIPS architecture names.\n \n 2017-06-22  Matt Turner  <mattst88@gmail.com>\n "}, {"sha": "11eb55fed8d3153f90eb9d0558e68aa16f90f384", "filename": "gcc/testsuite/gcc.target/i386/pr81300.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45bb7d590759d210669bcf33487143e266f2112b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45bb7d590759d210669bcf33487143e266f2112b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81300.c?ref=45bb7d590759d210669bcf33487143e266f2112b", "patch": "@@ -0,0 +1,30 @@\n+/* PR target/81300 */\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+__attribute__((noinline, noclone))\n+foo (void)\n+{\n+  unsigned long long _discard = 0, zero = 0, maxull = 0;\n+  unsigned char zero1 = __builtin_ia32_addcarryx_u64 (0, 0, 0, &_discard);\n+  unsigned char zero2 = __builtin_ia32_addcarryx_u64 (zero1, 0, 0, &zero);\n+  __builtin_ia32_sbb_u64 (0x0, 2, -1, &_discard);\n+  unsigned char one = __builtin_ia32_sbb_u64 (0, zero, 1, &maxull);\n+  unsigned long long x = __builtin_ia32_sbb_u64 (one, zero2, 0, &_discard);\n+\n+  unsigned long long z1 = 0;\n+  __asm__ (\"mov{q}\\t{%1, %0|%0, %1}\" : \"+r\" (z1) : \"r\" (x));\n+  unsigned long long z2 = 3;\n+  __asm__ (\"mov{q}\\t{%1, %0|%0, %1}\" : \"+r\" (z2) : \"r\" (x));\n+\n+  return 1 - (z1 | z2);\n+}\n+\n+int main ()\n+{\n+  if (foo ())\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}