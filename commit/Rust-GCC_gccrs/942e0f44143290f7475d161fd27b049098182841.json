{"sha": "942e0f44143290f7475d161fd27b049098182841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQyZTBmNDQxNDMyOTBmNzQ3NWQxNjFmZDI3YjA0OTA5ODE4Mjg0MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-05-21T10:18:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-05-21T10:18:16Z"}, "message": "linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH, override sparc.h definition.\n\n\t* config/sparc/linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH,\n\toverride sparc.h definition.\n\nFrom-SVN: r82091", "tree": {"sha": "4cbe8cc8b5926411f6eea3e20726a7e918b8a3c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cbe8cc8b5926411f6eea3e20726a7e918b8a3c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/942e0f44143290f7475d161fd27b049098182841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942e0f44143290f7475d161fd27b049098182841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/942e0f44143290f7475d161fd27b049098182841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942e0f44143290f7475d161fd27b049098182841/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "609754920ff466cb720aa317f96b1b7eceb30ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/609754920ff466cb720aa317f96b1b7eceb30ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/609754920ff466cb720aa317f96b1b7eceb30ad4"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "b1645a82b2aeed7ee6ee01d8e5c6b32b57944b1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/942e0f44143290f7475d161fd27b049098182841/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/942e0f44143290f7475d161fd27b049098182841/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=942e0f44143290f7475d161fd27b049098182841", "patch": "@@ -1,3 +1,8 @@\n+2004-05-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH,\n+\toverride sparc.h definition.\n+\n 2004-05-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* tree.c (array_type_nelts, save_expr, substitute_in_expr,"}, {"sha": "04ddcb95d179b08a8f8a95b6b59aa5d0069239b3", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/942e0f44143290f7475d161fd27b049098182841/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/942e0f44143290f7475d161fd27b049098182841/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=942e0f44143290f7475d161fd27b049098182841", "patch": "@@ -223,6 +223,27 @@ Boston, MA 02111-1307, USA.  */\n \"\n #endif\n \n+/* Support for a compile-time default CPU, et cetera.  The rules are:\n+   --with-cpu is ignored if -mcpu is specified.\n+   --with-tune is ignored if -mtune is specified.\n+   --with-float is ignored if -mhard-float, -msoft-float, -mfpu, or -mno-fpu\n+     are specified.\n+   In the SPARC_BI_ARCH compiler we cannot pass %{!mcpu=*:-mcpu=%(VALUE)}\n+   here, otherwise say -mcpu=v7 would be passed even when -m64.\n+   CC1_SPEC above takes care of this instead.  */\n+#undef OPTION_DEFAULT_SPECS\n+#if DEFAULT_ARCH32_P\n+#define OPTION_DEFAULT_SPECS \\\n+  {\"cpu\", \"%{!m64:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n+  {\"float\", \"%{!msoft-float:%{!mhard-float:%{!fpu:%{!no-fpu:-m%(VALUE)-float}}}}\" }\n+#else\n+#define OPTION_DEFAULT_SPECS \\\n+  {\"cpu\", \"%{!m32:%{!mcpu=*:-mcpu=%(VALUE)}}\" }, \\\n+  {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }, \\\n+  {\"float\", \"%{!msoft-float:%{!mhard-float:%{!fpu:%{!no-fpu:-m%(VALUE)-float}}}}\" }\n+#endif\n+\n #if DEFAULT_ARCH32_P\n #define MULTILIB_DEFAULTS { \"m32\" }\n #else"}]}