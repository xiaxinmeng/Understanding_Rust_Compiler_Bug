{"sha": "ee8f9ff00d79998274c967ad0c23692be9dd3ada", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4ZjlmZjAwZDc5OTk4Mjc0Yzk2N2FkMGMyMzY5MmJlOWRkM2FkYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-11T20:00:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-11T20:00:29Z"}, "message": "c++: Optimize constinit thread_local vars [PR101786]\n\nThe paper that introduced constinit mentioned in rationale that constinit\ncan be used on externs as well and that it can be used to avoid the\nthread_local initialization wrappers, because the standard requires that\nif constinit is present on any declaration, it is also present on the\ninitialization declaration, even if it is in some other TU etc.\n\nThere is a small problem though, we use the tls wrappers not just if\nthe thread_local variable needs dynamic initialization, but also when\nit has static initialization, but non-trivial destructor, as the\n\"dynamic initialization\" in that case needs to register the destructor.\n\nSo, the following patch optimizes constinit thread_local vars only\nif we can prove they will not have non-trivial destructors.  That includes\nthe case where we have incomplete type where we don't know and need to\nconservatively assume the type will have non-trivial destructor at the\ninitializing declaration side.\n\n2021-08-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/101786\n\t* decl2.c (var_defined_without_dynamic_init): Return true for\n\tDECL_DECLARED_CONSTINIT_P with complete type and trivial destructor.\n\n\t* g++.dg/cpp2a/constinit16.C: New test.", "tree": {"sha": "892c90afdb28cb344dd176464d8c8b0a64dfad9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/892c90afdb28cb344dd176464d8c8b0a64dfad9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee8f9ff00d79998274c967ad0c23692be9dd3ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8f9ff00d79998274c967ad0c23692be9dd3ada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8f9ff00d79998274c967ad0c23692be9dd3ada", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8f9ff00d79998274c967ad0c23692be9dd3ada/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e39d1a15f5276f72ee478a692445569bb646e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e39d1a15f5276f72ee478a692445569bb646e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e39d1a15f5276f72ee478a692445569bb646e65"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "ba27388df5dcc8bfb9b37a746b4229b60df7d78b", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8f9ff00d79998274c967ad0c23692be9dd3ada/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8f9ff00d79998274c967ad0c23692be9dd3ada/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ee8f9ff00d79998274c967ad0c23692be9dd3ada", "patch": "@@ -3447,6 +3447,12 @@ set_guard (tree guard)\n static bool\n var_defined_without_dynamic_init (tree var)\n {\n+  /* constinit vars are guaranteed to not have dynamic initializer,\n+     but still registering the destructor counts as dynamic initialization.  */\n+  if (DECL_DECLARED_CONSTINIT_P (var)\n+      && COMPLETE_TYPE_P (TREE_TYPE (var))\n+      && !TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (var)))\n+    return true;\n   /* If it's defined in another TU, we can't tell.  */\n   if (DECL_EXTERNAL (var))\n     return false;"}, {"sha": "dda81d50619eabd62659adfbd27be164c0061e9e", "filename": "gcc/testsuite/g++.dg/cpp2a/constinit16.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8f9ff00d79998274c967ad0c23692be9dd3ada/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstinit16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8f9ff00d79998274c967ad0c23692be9dd3ada/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstinit16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstinit16.C?ref=ee8f9ff00d79998274c967ad0c23692be9dd3ada", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/101786\n+// { dg-do compile { target c++20 } }\n+// { dg-add-options tls }\n+// { dg-require-alias \"\" }\n+// { dg-require-effective-target tls_runtime }\n+// { dg-final { scan-assembler-not \"_ZTH17mythreadlocalvar1\" } }\n+// { dg-final { scan-assembler \"_ZTH17mythreadlocalvar2\" } }\n+// { dg-final { scan-assembler-not \"_ZTH17mythreadlocalvar3\" } }\n+// { dg-final { scan-assembler \"_ZTH17mythreadlocalvar4\" } }\n+\n+extern thread_local constinit int mythreadlocalvar1;\n+struct S;\n+extern thread_local constinit S mythreadlocalvar2;\n+struct T { int t; };\n+extern thread_local constinit T mythreadlocalvar3;\n+struct U { int u; ~U (); };\n+extern thread_local constinit U mythreadlocalvar4;\n+int foo () { return mythreadlocalvar1; }\n+S *bar () { return &mythreadlocalvar2; }\n+T *baz () { return &mythreadlocalvar3; }\n+U *qux () { return &mythreadlocalvar4; }"}]}