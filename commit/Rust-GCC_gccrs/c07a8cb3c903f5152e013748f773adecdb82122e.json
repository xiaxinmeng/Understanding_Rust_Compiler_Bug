{"sha": "c07a8cb3c903f5152e013748f773adecdb82122e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3YThjYjNjOTAzZjUxNTJlMDEzNzQ4Zjc3M2FkZWNkYjgyMTIyZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-11-10T13:46:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-11-10T13:46:27Z"}, "message": "re PR tree-optimization/51070 (ICE verify_gimple failed)\n\n2011-11-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/51070\n\t* tree-loop-distribution.c (generate_builtin): Do not replace\n\tthe loop with a builtin if the partition contains statements which\n\tresults are used outside of the loop.\n\t(pass_loop_distribution): Verify and collect.\n\n\t* gcc.dg/torture/pr51070.c: New testcase.\n\nFrom-SVN: r181255", "tree": {"sha": "c2b4709a3f92857670cb47250ae665dc6acc197b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2b4709a3f92857670cb47250ae665dc6acc197b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c07a8cb3c903f5152e013748f773adecdb82122e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07a8cb3c903f5152e013748f773adecdb82122e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c07a8cb3c903f5152e013748f773adecdb82122e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07a8cb3c903f5152e013748f773adecdb82122e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98dd3b733fc0ca686b25c067bd0e38feebd6b565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98dd3b733fc0ca686b25c067bd0e38feebd6b565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98dd3b733fc0ca686b25c067bd0e38feebd6b565"}], "stats": {"total": 150, "additions": 103, "deletions": 47}, "files": [{"sha": "ee388f6584cac84830dd72af383a187343a51aa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c07a8cb3c903f5152e013748f773adecdb82122e", "patch": "@@ -1,3 +1,11 @@\n+2011-11-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51070\n+\t* tree-loop-distribution.c (generate_builtin): Do not replace\n+\tthe loop with a builtin if the partition contains statements which\n+\tresults are used outside of the loop.\n+\t(pass_loop_distribution): Verify and collect.\n+\n 2011-11-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/51030"}, {"sha": "c04d8dc1b6788970842f6cb4f91bdcb6aeb437ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c07a8cb3c903f5152e013748f773adecdb82122e", "patch": "@@ -1,3 +1,8 @@\n+2011-11-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51070\n+\t* gcc.dg/torture/pr51070.c: New testcase.\n+\n 2011-11-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/51030"}, {"sha": "cc06a90c843483fb3ebf89f7d09ac1e1742538f1", "filename": "gcc/testsuite/gcc.dg/torture/pr51070.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51070.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51070.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr51070.c?ref=c07a8cb3c903f5152e013748f773adecdb82122e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+\n+int\n+func_4 (int si1, int si2)\n+{\n+  return si1;\n+}\n+\n+int\n+func_14 (int left, int right)\n+{\n+  return 1;\n+}\n+\n+int\n+func_37 (int left, int right)\n+{\n+  return left;\n+}\n+\n+int g_92[1024];\n+int g_95[1024];\n+int g_224;\n+int g_352[1024];\n+int\n+func_9 ()\n+{\n+  for (; g_224; g_224 += 1)\n+    {\n+      g_95[0] = func_4 (func_37 (g_92[g_224], 0), 0);\n+      g_92[g_224] = 0, g_352[g_224] = func_14 (0, 0);\n+    }\n+  return 0;\n+}"}, {"sha": "0daef06b9542d19f701b40b79048b628857594f2", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 56, "deletions": 47, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07a8cb3c903f5152e013748f773adecdb82122e/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=c07a8cb3c903f5152e013748f773adecdb82122e", "patch": "@@ -63,6 +63,48 @@ static bitmap remaining_stmts;\n    predecessor a node that writes to memory.  */\n static bitmap upstream_mem_writes;\n \n+/* Returns true when DEF is an SSA_NAME defined in LOOP and used after\n+   the LOOP.  */\n+\n+static bool\n+ssa_name_has_uses_outside_loop_p (tree def, loop_p loop)\n+{\n+  imm_use_iterator imm_iter;\n+  use_operand_p use_p;\n+\n+  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, def)\n+    if (loop != loop_containing_stmt (USE_STMT (use_p)))\n+      return true;\n+\n+  return false;\n+}\n+\n+/* Returns true when STMT defines a scalar variable used after the\n+   loop.  */\n+\n+static bool\n+stmt_has_scalar_dependences_outside_loop (gimple stmt)\n+{\n+  tree name;\n+\n+  switch (gimple_code (stmt))\n+    {\n+    case GIMPLE_ASSIGN:\n+      name = gimple_assign_lhs (stmt);\n+      break;\n+\n+    case GIMPLE_PHI:\n+      name = gimple_phi_result (stmt);\n+      break;\n+\n+    default:\n+      return false;\n+    }\n+\n+  return TREE_CODE (name) == SSA_NAME\n+    && ssa_name_has_uses_outside_loop_p (name, loop_containing_stmt (stmt));\n+}\n+\n /* Update the PHI nodes of NEW_LOOP.  NEW_LOOP is a duplicate of\n    ORIG_LOOP.  */\n \n@@ -330,10 +372,18 @@ generate_builtin (struct loop *loop, bitmap partition, bool copy_p)\n \t{\n \t  gimple stmt = gsi_stmt (bsi);\n \n-\t  if (gimple_code (stmt) != GIMPLE_LABEL\n-\t      && !is_gimple_debug (stmt)\n-\t      && bitmap_bit_p (partition, x++)\n-\t      && is_gimple_assign (stmt)\n+\t  if (gimple_code (stmt) == GIMPLE_LABEL\n+\t      || is_gimple_debug (stmt))\n+\t    continue;\n+\n+\t  if (!bitmap_bit_p (partition, x++))\n+\t    continue;\n+\n+\t  /* If the stmt has uses outside of the loop fail.  */\n+\t  if (stmt_has_scalar_dependences_outside_loop (stmt))\n+\t    goto end;\n+\n+\t  if (is_gimple_assign (stmt)\n \t      && !is_gimple_reg (gimple_assign_lhs (stmt)))\n \t    {\n \t      /* Don't generate the builtins when there are more than\n@@ -824,48 +874,6 @@ fuse_partitions_with_similar_memory_accesses (struct graph *rdg,\n \t  }\n }\n \n-/* Returns true when DEF is an SSA_NAME defined in LOOP and used after\n-   the LOOP.  */\n-\n-static bool\n-ssa_name_has_uses_outside_loop_p (tree def, loop_p loop)\n-{\n-  imm_use_iterator imm_iter;\n-  use_operand_p use_p;\n-\n-  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, def)\n-    if (loop != loop_containing_stmt (USE_STMT (use_p)))\n-      return true;\n-\n-  return false;\n-}\n-\n-/* Returns true when STMT defines a scalar variable used after the\n-   loop.  */\n-\n-static bool\n-stmt_has_scalar_dependences_outside_loop (gimple stmt)\n-{\n-  tree name;\n-\n-  switch (gimple_code (stmt))\n-    {\n-    case GIMPLE_ASSIGN:\n-      name = gimple_assign_lhs (stmt);\n-      break;\n-\n-    case GIMPLE_PHI:\n-      name = gimple_phi_result (stmt);\n-      break;\n-\n-    default:\n-      return false;\n-    }\n-\n-  return TREE_CODE (name) == SSA_NAME\n-    && ssa_name_has_uses_outside_loop_p (name, loop_containing_stmt (stmt));\n-}\n-\n /* Returns true when STMT will be code generated in a partition of RDG\n    different than PART and that will not be code generated as a\n    builtin.  */\n@@ -1311,6 +1319,7 @@ struct gimple_opt_pass pass_loop_distribution =\n   0,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t/* todo_flags_start */\n-  0                             /* todo_flags_finish */\n+  TODO_ggc_collect\n+  | TODO_verify_ssa             /* todo_flags_finish */\n  }\n };"}]}