{"sha": "722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyMjc5ZTQxZjdkNzZmYzRiM2VhOGNjYTBkNTQyYzNkNTc3OWRiMg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-04-01T17:35:13Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-04-01T17:35:13Z"}, "message": "dwarf2out.h (dwarf2out_frame_debug_init): Declare.\n\n\t* dwarf2out.h (dwarf2out_frame_debug_init): Declare.\n\t* dwarf2out.c (dwarf2out_frame_debug_init): New function, broken\n\tout of ...\n\t(dwarf2out_frame_debug): ... here. Don't handle a NULL argument.\n\t* final.c (final_start_function): Call the new function rather\n\tthan using a NULL argument for dwarf2out_frame_debug.\n\nFrom-SVN: r171839", "tree": {"sha": "532d37509c7c76c048160bbd1881315d0f778614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/532d37509c7c76c048160bbd1881315d0f778614"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/comments", "author": null, "committer": null, "parents": [{"sha": "1ca1dad5f178ee1d9d7a611254728b7748b4eb08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca1dad5f178ee1d9d7a611254728b7748b4eb08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca1dad5f178ee1d9d7a611254728b7748b4eb08"}], "stats": {"total": 80, "additions": 46, "deletions": 34}, "files": [{"sha": "e9fc81a7d0f164f6d749eeeeec7c12cec4e552df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "patch": "@@ -1,3 +1,12 @@\n+2011-04-01  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* dwarf2out.h (dwarf2out_frame_debug_init): Declare.\n+\t* dwarf2out.c (dwarf2out_frame_debug_init): New function, broken\n+\tout of ...\n+\t(dwarf2out_frame_debug): ... here. Don't handle a NULL argument.\n+\t* final.c (final_start_function): Call the new function rather\n+\tthan using a NULL argument for dwarf2out_frame_debug.\n+\n 2011-04-01  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/spu/t-spu-elf (dp-bit.c): Use > instead of >>."}, {"sha": "8371b5e4a9c87e09f67cb2b49214bbcba77f91ec", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "patch": "@@ -2788,38 +2788,6 @@ dwarf2out_frame_debug (rtx insn, bool after_p)\n   rtx note, n;\n   bool handled_one = false;\n \n-  if (insn == NULL_RTX)\n-    {\n-      size_t i;\n-\n-      /* Flush any queued register saves.  */\n-      dwarf2out_flush_queued_reg_saves ();\n-\n-      /* Set up state for generating call frame debug info.  */\n-      lookup_cfa (&cfa);\n-      gcc_assert (cfa.reg\n-\t\t  == (unsigned long)DWARF_FRAME_REGNUM (STACK_POINTER_REGNUM));\n-\n-      cfa.reg = STACK_POINTER_REGNUM;\n-      cfa_store = cfa;\n-      cfa_temp.reg = -1;\n-      cfa_temp.offset = 0;\n-\n-      for (i = 0; i < num_regs_saved_in_regs; i++)\n-\t{\n-\t  regs_saved_in_regs[i].orig_reg = NULL_RTX;\n-\t  regs_saved_in_regs[i].saved_in_reg = NULL_RTX;\n-\t}\n-      num_regs_saved_in_regs = 0;\n-\n-      if (barrier_args_size)\n-\t{\n-\t  XDELETEVEC (barrier_args_size);\n-\t  barrier_args_size = NULL;\n-\t}\n-      return;\n-    }\n-\n   if (!NONJUMP_INSN_P (insn) || clobbers_queued_reg_save (insn))\n     dwarf2out_flush_queued_reg_saves ();\n \n@@ -2937,6 +2905,40 @@ dwarf2out_frame_debug (rtx insn, bool after_p)\n     dwarf2out_flush_queued_reg_saves ();\n }\n \n+/* Called once at the start of final to initialize some data for the\n+   current function.  */\n+void\n+dwarf2out_frame_debug_init (void)\n+{\n+  size_t i;\n+\n+  /* Flush any queued register saves.  */\n+  dwarf2out_flush_queued_reg_saves ();\n+\n+  /* Set up state for generating call frame debug info.  */\n+  lookup_cfa (&cfa);\n+  gcc_assert (cfa.reg\n+\t      == (unsigned long)DWARF_FRAME_REGNUM (STACK_POINTER_REGNUM));\n+\n+  cfa.reg = STACK_POINTER_REGNUM;\n+  cfa_store = cfa;\n+  cfa_temp.reg = -1;\n+  cfa_temp.offset = 0;\n+\n+  for (i = 0; i < num_regs_saved_in_regs; i++)\n+    {\n+      regs_saved_in_regs[i].orig_reg = NULL_RTX;\n+      regs_saved_in_regs[i].saved_in_reg = NULL_RTX;\n+    }\n+  num_regs_saved_in_regs = 0;\n+\n+  if (barrier_args_size)\n+    {\n+      XDELETEVEC (barrier_args_size);\n+      barrier_args_size = NULL;\n+    }\n+}\n+\n /* Determine if we need to save and restore CFI information around this\n    epilogue.  If SIBCALL is true, then this is a sibcall epilogue.  If\n    we do need to save/restore, then emit the save now, and insert a"}, {"sha": "7f5ac1351aef36e053ede0579d405ab6e30e9520", "filename": "gcc/dwarf2out.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2Fdwarf2out.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2Fdwarf2out.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.h?ref=722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "patch": "@@ -1,5 +1,5 @@\n /* dwarf2out.h - Various declarations for functions found in dwarf2out.c\n-   Copyright (C) 1998, 1999, 2000, 2003, 2007, 2010\n+   Copyright (C) 1998, 1999, 2000, 2003, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -20,6 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n \n extern void dwarf2out_decl (tree);\n extern void dwarf2out_frame_debug (rtx, bool);\n+extern void dwarf2out_frame_debug_init (void);\n extern void dwarf2out_cfi_begin_epilogue (rtx);\n extern void dwarf2out_frame_debug_restore_state (void);\n extern void dwarf2out_flush_queued_reg_saves (void);"}, {"sha": "cc7234c9b2d2206dabe7b897599a229995457eb8", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722279e41f7d76fc4b3ea8cca0d542c3d5779db2/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=722279e41f7d76fc4b3ea8cca0d542c3d5779db2", "patch": "@@ -1561,7 +1561,7 @@ final_start_function (rtx first ATTRIBUTE_UNUSED, FILE *file,\n \n #if defined (HAVE_prologue)\n   if (dwarf2out_do_frame ())\n-    dwarf2out_frame_debug (NULL_RTX, false);\n+    dwarf2out_frame_debug_init ();\n #endif\n \n   /* If debugging, assign block numbers to all of the blocks in this"}]}