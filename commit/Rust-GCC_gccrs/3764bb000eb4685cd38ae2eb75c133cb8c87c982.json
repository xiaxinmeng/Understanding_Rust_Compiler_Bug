{"sha": "3764bb000eb4685cd38ae2eb75c133cb8c87c982", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc2NGJiMDAwZWI0Njg1Y2QzOGFlMmViNzVjMTMzY2I4Yzg3Yzk4Mg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2009-04-10T12:34:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-10T12:34:46Z"}, "message": "sem.ads, [...]: Minor comment fixes.\n\n2009-04-10  Bob Duff  <duff@adacore.com>\n\n\t* sem.ads, par.adb, sem_ch6.adb, sem_ch8.adb: Minor comment fixes.\n\nFrom-SVN: r145890", "tree": {"sha": "725d8780d6ac810b9034d046d393b34a3759db2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/725d8780d6ac810b9034d046d393b34a3759db2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3764bb000eb4685cd38ae2eb75c133cb8c87c982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3764bb000eb4685cd38ae2eb75c133cb8c87c982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3764bb000eb4685cd38ae2eb75c133cb8c87c982", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3764bb000eb4685cd38ae2eb75c133cb8c87c982/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3b9865d065da548c5a3746638515229784f059b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b9865d065da548c5a3746638515229784f059b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b9865d065da548c5a3746638515229784f059b"}], "stats": {"total": 80, "additions": 42, "deletions": 38}, "files": [{"sha": "1cb067ba252cb00ee93f41371b9e572a2569fdf5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3764bb000eb4685cd38ae2eb75c133cb8c87c982", "patch": "@@ -1,3 +1,7 @@\n+2009-04-10  Bob Duff  <duff@adacore.com>\n+\n+\t* sem.ads, par.adb, sem_ch6.adb, sem_ch8.adb: Minor comment fixes.\n+\n 2009-04-10  Tristan Gingold  <gingold@adacore.com>\n \n \t* init.c: Install signal handler on Darwin."}, {"sha": "f6aabfb8049dba095feb5c26a802b44b54538e92", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=3764bb000eb4685cd38ae2eb75c133cb8c87c982", "patch": "@@ -397,9 +397,9 @@ package Sem is\n \n    --  The scope stack indicates the declarative regions that are currently\n    --  being processed (analyzed and/or expanded). The scope stack is one of\n-   --  basic visibility structures in the compiler: entities that are declared\n-   --  in a scope that is currently on the scope stack are immediately visible.\n-   --  (leaving aside issues of hiding and overloading).\n+   --  the basic visibility structures in the compiler: entities that are\n+   --  declared in a scope that is currently on the scope stack are immediately\n+   --  visible (leaving aside issues of hiding and overloading).\n \n    --  Initially, the scope stack only contains an entry for package Standard.\n    --  When a compilation unit, subprogram unit, block or declarative region\n@@ -423,12 +423,12 @@ package Sem is\n    --  contiguous sections that correspond to the compilation of a given\n    --  compilation unit. These sections are separated by distinct occurrences\n    --  of package Standard. The currently active section of the scope stack\n-   --  goes from the current scope to the first occurrence of Standard, which\n-   --  is additionally marked with the flag Is_Active_Stack_Base. The basic\n-   --  visibility routine (Find_Direct_Name, sem_ch8) uses this contiguous\n-   --  section of the scope stack to determine whether a given entity is or\n-   --  is not visible at a point. In_Open_Scopes only examines the currently\n-   --  active section of the scope stack.\n+   --  goes from the current scope to the first (innermost) occurrence of\n+   --  Standard, which is additionally marked with the flag\n+   --  Is_Active_Stack_Base. The basic visibility routine (Find_Direct_Name, in\n+   --  Sem_Ch8) uses this contiguous section of the scope stack to determine\n+   --  whether a given entity is or is not visible at a point. In_Open_Scopes\n+   --  only examines the currently active section of the scope stack.\n \n    --  Similar complications arise when processing child instances. These\n    --  must be compiled in the context of parent instances, and therefore the\n@@ -462,7 +462,7 @@ package Sem is\n       --  Save contents of Check_Policy_List on entry to restore on exit\n \n       Is_Transient : Boolean;\n-      --  Marks Transient Scopes (See Exp_Ch7 body for details)\n+      --  Marks transient scopes (see Exp_Ch7 body for details)\n \n       Previous_Visibility : Boolean;\n       --  Used when installing the parent(s) of the current compilation unit.\n@@ -484,11 +484,11 @@ package Sem is\n \n       Pending_Freeze_Actions : List_Id;\n       --  Used to collect freeze entity nodes and associated actions that are\n-      --  generated in a inner context but need to be analyzed outside, such as\n-      --  records and initialization procedures. On exit from the scope, this\n-      --  list of actions is inserted before the scope construct and analyzed\n-      --  to generate the corresponding freeze processing and elaboration of\n-      --  other associated actions.\n+      --  generated in an inner context but need to be analyzed outside, such\n+      --  as records and initialization procedures. On exit from the scope,\n+      --  this list of actions is inserted before the scope construct and\n+      --  analyzed to generate the corresponding freeze processing and\n+      --  elaboration of other associated actions.\n \n       First_Use_Clause : Node_Id;\n       --  Head of list of Use_Clauses in current scope. The list is built when\n@@ -533,12 +533,12 @@ package Sem is\n \n    procedure Analyze (N : Node_Id);\n    procedure Analyze (N : Node_Id; Suppress : Check_Id);\n-   --  This is the recursive procedure which is applied to individual nodes\n-   --  of the tree, starting at the top level node (compilation unit node)\n-   --  and then moving down the tree in a top down traversal. It calls\n-   --  individual routines with names Analyze_xxx to analyze node xxx. Each\n-   --  of these routines is responsible for calling Analyze on the components\n-   --  of the subtree.\n+   --  This is the recursive procedure that is applied to individual nodes of\n+   --  the tree, starting at the top level node (compilation unit node) and\n+   --  then moving down the tree in a top down traversal. It calls individual\n+   --  routines with names Analyze_xxx to analyze node xxx. Each of these\n+   --  routines is responsible for calling Analyze on the components of the\n+   --  subtree.\n    --\n    --  Note: In the case of expression components (nodes whose Nkind is in\n    --  N_Subexpr), the call to Analyze does not complete the semantic analysis\n@@ -577,9 +577,9 @@ package Sem is\n    --  Inserts list L after node N using Nlists.Insert_List_After, and then,\n    --  after this insertion is complete, analyzes all the nodes in the list,\n    --  including any additional nodes generated by this analysis. If the list\n-   --  is empty or be No_List, the call has no effect. If the Suppress\n-   --  argument is present, then the analysis is done with the specified\n-   --  check suppressed (can be All_Checks to suppress all checks).\n+   --  is empty or No_List, the call has no effect. If the Suppress argument is\n+   --  present, then the analysis is done with the specified check suppressed\n+   --  (can be All_Checks to suppress all checks).\n \n    procedure Insert_List_Before_And_Analyze\n      (N : Node_Id; L : List_Id);\n@@ -588,9 +588,9 @@ package Sem is\n    --  Inserts list L before node N using Nlists.Insert_List_Before, and then,\n    --  after this insertion is complete, analyzes all the nodes in the list,\n    --  including any additional nodes generated by this analysis. If the list\n-   --  is empty or be No_List, the call has no effect. If the Suppress\n-   --  argument is present, then the analysis is done with the specified\n-   --  check suppressed (can be All_Checks to suppress all checks).\n+   --  is empty or No_List, the call has no effect. If the Suppress argument is\n+   --  present, then the analysis is done with the specified check suppressed\n+   --  (can be All_Checks to suppress all checks).\n \n    procedure Insert_After_And_Analyze\n      (N : Node_Id; M : Node_Id);\n@@ -618,15 +618,15 @@ package Sem is\n \n    procedure Enter_Generic_Scope (S : Entity_Id);\n    --  Shall be called each time a Generic subprogram or package scope is\n-   --  entered.  S is the entity of the scope.\n+   --  entered. S is the entity of the scope.\n    --  ??? At the moment, only called for package specs because this mechanism\n    --  is only used for avoiding freezing of external references in generics\n    --  and this can only be an issue if the outer generic scope is a package\n    --  spec (otherwise all external entities are already frozen)\n \n    procedure Exit_Generic_Scope  (S : Entity_Id);\n    --  Shall be called each time a Generic subprogram or package scope is\n-   --  exited.  S is the entity of the scope.\n+   --  exited. S is the entity of the scope.\n    --  ??? At the moment, only called for package specs exit.\n \n    function Explicit_Suppress (E : Entity_Id; C : Check_Id) return Boolean;"}, {"sha": "c125a713054799ab3fe9f081aeddea7117b2aa9f", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3764bb000eb4685cd38ae2eb75c133cb8c87c982", "patch": "@@ -188,11 +188,11 @@ package body Sem_Ch6 is\n      (N       : Node_Id;\n       Spec_Id : Entity_Id;\n       Body_Id : Entity_Id);\n-   --  Called from Analyze_Body to deal with scanning post conditions for the\n-   --  body and assembling and inserting the _postconditions procedure. N is\n-   --  the node for the subprogram body and Body_Id/Spec_Id are the entities\n-   --  for the body and separate spec (if there is no separate spec, Spec_Id\n-   --  is Empty).\n+   --  Called from Analyze[_Generic]_Subprogram_Body to deal with scanning post\n+   --  conditions for the body and assembling and inserting the _postconditions\n+   --  procedure. N is the node for the subprogram body and Body_Id/Spec_Id are\n+   --  the entities for the body and separate spec (if there is no separate\n+   --  spec, Spec_Id is Empty).\n \n    procedure Set_Formal_Validity (Formal_Id : Entity_Id);\n    --  Formal_Id is an formal parameter entity. This procedure deals with"}, {"sha": "116b560180341f985da2bf375fb99cbba225ab38", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3764bb000eb4685cd38ae2eb75c133cb8c87c982/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=3764bb000eb4685cd38ae2eb75c133cb8c87c982", "patch": "@@ -3384,10 +3384,10 @@ package body Sem_Ch8 is\n       --  Saves start of homonym chain\n \n       Nvis_Entity : Boolean;\n-      --  Set True to indicate that at there is at least one entity on the\n-      --  homonym chain which, while not visible, is visible enough from the\n-      --  user point of view to warrant an error message of \"not visible\"\n-      --  rather than undefined.\n+      --  Set True to indicate that there is at least one entity on the homonym\n+      --  chain which, while not visible, is visible enough from the user point\n+      --  of view to warrant an error message of \"not visible\" rather than\n+      --  undefined.\n \n       Nvis_Is_Private_Subprg : Boolean := False;\n       --  Ada 2005 (AI-262): Set True to indicate that a form of Beaujolais"}]}