{"sha": "382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyNjE1YzY0Y2FkMjhmYjRhYTA1NjZiMjViM2YxOTIxYjNkNmEzZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-08-30T11:20:55Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-08-30T11:20:55Z"}, "message": "[76/77] Add a scalar_mode_pod class\n\nThis patch adds a scalar_mode_pod class and uses it to\nreplace the machine_mode in fixed_value.\n\n2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* coretypes.h (scalar_mode_pod): New typedef.\n\t* gdbhooks.py (build_pretty_printer): Handle it.\n\t* machmode.h (gt_ggc_mx, gt_pch_nx): New functions.\n\t* fixed-value.h (fixed_value::mode): Change type to scalar_mode_pod.\n\t* fold-const.c (fold_convert_const_int_from_fixed): Use scalar_mode.\n\t* tree-streamer-in.c (unpack_ts_fixed_cst_value_fields): Use\n\tas_a <scalar_mode>.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r251526", "tree": {"sha": "046a66a93146a14b7764184e569dfeb06b48ad9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/046a66a93146a14b7764184e569dfeb06b48ad9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/comments", "author": null, "committer": null, "parents": [{"sha": "79d22165ea45e89283ccf147d65cbf66548838da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d22165ea45e89283ccf147d65cbf66548838da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d22165ea45e89283ccf147d65cbf66548838da"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "bb813131eeb3a8cc60c4fdbb16d886cc6fe3715e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -1,3 +1,15 @@\n+2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* coretypes.h (scalar_mode_pod): New typedef.\n+\t* gdbhooks.py (build_pretty_printer): Handle it.\n+\t* machmode.h (gt_ggc_mx, gt_pch_nx): New functions.\n+\t* fixed-value.h (fixed_value::mode): Change type to scalar_mode_pod.\n+\t* fold-const.c (fold_convert_const_int_from_fixed): Use scalar_mode.\n+\t* tree-streamer-in.c (unpack_ts_fixed_cst_value_fields): Use\n+\tas_a <scalar_mode>.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "8ccf16e5e4ad06ad92fcbee9080e07ede29b3a5e", "filename": "gcc/coretypes.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -63,6 +63,7 @@ typedef opt_mode<scalar_mode> opt_scalar_mode;\n typedef opt_mode<scalar_int_mode> opt_scalar_int_mode;\n typedef opt_mode<scalar_float_mode> opt_scalar_float_mode;\n template<typename> class pod_mode;\n+typedef pod_mode<scalar_mode> scalar_mode_pod;\n typedef pod_mode<scalar_int_mode> scalar_int_mode_pod;\n \n /* Subclasses of rtx_def, using indentation to show the class"}, {"sha": "1beb77426a440e8118c28558a4392f00932493f6", "filename": "gcc/fixed-value.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Ffixed-value.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Ffixed-value.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixed-value.h?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -22,8 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n \n struct GTY(()) fixed_value\n {\n-  double_int data;\t\t/* Store data up to 2 wide integers.  */\n-  machine_mode mode;\t/* Use machine mode to know IBIT and FBIT.  */\n+  double_int data;       /* Store data up to 2 wide integers.  */\n+  scalar_mode_pod mode;  /* Use machine mode to know IBIT and FBIT.  */\n };\n \n #define FIXED_VALUE_TYPE struct fixed_value"}, {"sha": "f3c84a8d02b5309422c8e2f1a1c75c720c386a77", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -1944,7 +1944,7 @@ fold_convert_const_int_from_fixed (tree type, const_tree arg1)\n {\n   tree t;\n   double_int temp, temp_trunc;\n-  machine_mode mode;\n+  scalar_mode mode;\n \n   /* Right shift FIXED_CST to temp by fbit.  */\n   temp = TREE_FIXED_CST (arg1).data;"}, {"sha": "acf54351e23ad6121f7fbc2728aa82886935c6ba", "filename": "gcc/gdbhooks.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Fgdbhooks.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Fgdbhooks.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgdbhooks.py?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -548,7 +548,8 @@ def build_pretty_printer():\n                              'opt_mode', OptMachineModePrinter)\n     pp.add_printer_for_regex(r'pod_mode<(\\S+)>',\n                              'pod_mode', MachineModePrinter)\n-    pp.add_printer_for_types(['scalar_int_mode_pod'],\n+    pp.add_printer_for_types(['scalar_int_mode_pod',\n+                              'scalar_mode_pod'],\n                              'pod_mode', MachineModePrinter)\n     for mode in 'scalar_mode', 'scalar_int_mode', 'scalar_float_mode':\n         pp.add_printer_for_types([mode], mode, MachineModePrinter)"}, {"sha": "73c45beb65550b201c62bd593d87b233feae399d", "filename": "gcc/machmode.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -893,4 +893,22 @@ namespace mode_iterator\n        mode_iterator::iterate_p (&(ITERATOR)); \\\n        mode_iterator::get_2xwider (&(ITERATOR)))\n \n+template<typename T>\n+void\n+gt_ggc_mx (pod_mode<T> *)\n+{\n+}\n+\n+template<typename T>\n+void\n+gt_pch_nx (pod_mode<T> *)\n+{\n+}\n+\n+template<typename T>\n+void\n+gt_pch_nx (pod_mode<T> *, void (*) (void *, void *), void *)\n+{\n+}\n+\n #endif /* not HAVE_MACHINE_MODES */"}, {"sha": "baf0c5bf8373071daad06aaad340c07b7959c3ab", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382615c64cad28fb4aa0566b25b3f1921b3d6a3d/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=382615c64cad28fb4aa0566b25b3f1921b3d6a3d", "patch": "@@ -211,7 +211,7 @@ static void\n unpack_ts_fixed_cst_value_fields (struct bitpack_d *bp, tree expr)\n {\n   FIXED_VALUE_TYPE *fp = ggc_alloc<fixed_value> ();\n-  fp->mode = bp_unpack_machine_mode (bp);\n+  fp->mode = as_a <scalar_mode> (bp_unpack_machine_mode (bp));\n   fp->data.low = bp_unpack_var_len_int (bp);\n   fp->data.high = bp_unpack_var_len_int (bp);\n   TREE_FIXED_CST_PTR (expr) = fp;"}]}