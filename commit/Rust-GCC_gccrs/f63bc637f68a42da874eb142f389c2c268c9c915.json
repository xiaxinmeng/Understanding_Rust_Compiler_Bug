{"sha": "f63bc637f68a42da874eb142f389c2c268c9c915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzYmM2MzdmNjhhNDJkYTg3NGViMTQyZjM4OWMyYzI2OGM5YzkxNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-10-06T02:33:12Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-06T02:33:12Z"}, "message": "moveable.cc: Remove dg-require-rvalref.\n\n2007-10-05  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/23_containers/map/moveable.cc: Remove dg-require-rvalref.\n\t* testsuite/23_containers/multimap/moveable.cc: Likewise.\n\t* testsuite/23_containers/set/moveable.cc: Likewise. \n\t* testsuite/23_containers/multiset/moveable.cc: Likewise.\n\t* testsuite/23_containers/deque/moveable.cc: Likewise. \n\t* testsuite/23_containers/list/moveable.cc: Likewise. \n\t* testsuite/23_containers/vector/moveable.cc: Likewise. \n\t* include/std/utility: Use _GLIBCXX_BEGIN_NAMESPACE.\n\n2007-10-05  Paolo Carlini  <pcarlini@suse.de>\n\t    Chris Jefferson  <chris@bubblescope.net>\n\n\t* include/bits/stl_iterator.h (class move_iterator,\n\tmake_move_iterator): Add.\n\nCo-Authored-By: Chris Jefferson <chris@bubblescope.net>\n\nFrom-SVN: r129048", "tree": {"sha": "cf7d34bfda907f5960d08e1865f67e231d19820a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf7d34bfda907f5960d08e1865f67e231d19820a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63bc637f68a42da874eb142f389c2c268c9c915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63bc637f68a42da874eb142f389c2c268c9c915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63bc637f68a42da874eb142f389c2c268c9c915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63bc637f68a42da874eb142f389c2c268c9c915/comments", "author": null, "committer": null, "parents": [{"sha": "02c9a7a7fc4acde6e07f9050d4c4c30eec3103be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c9a7a7fc4acde6e07f9050d4c4c30eec3103be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c9a7a7fc4acde6e07f9050d4c4c30eec3103be"}], "stats": {"total": 201, "additions": 191, "deletions": 10}, "files": [{"sha": "712cde5d5d1fb111f89d610ceb7c0fc3c541de3a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,3 +1,20 @@\n+2007-10-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/23_containers/map/moveable.cc: Remove dg-require-rvalref.\n+\t* testsuite/23_containers/multimap/moveable.cc: Likewise.\n+\t* testsuite/23_containers/set/moveable.cc: Likewise. \n+\t* testsuite/23_containers/multiset/moveable.cc: Likewise.\n+\t* testsuite/23_containers/deque/moveable.cc: Likewise. \n+\t* testsuite/23_containers/list/moveable.cc: Likewise. \n+\t* testsuite/23_containers/vector/moveable.cc: Likewise. \n+\t* include/std/utility: Use _GLIBCXX_BEGIN_NAMESPACE.\n+\n+2007-10-05  Paolo Carlini  <pcarlini@suse.de>\n+\t    Chris Jefferson  <chris@bubblescope.net>\n+\n+\t* include/bits/stl_iterator.h (class move_iterator,\n+\tmake_move_iterator): Add.\n+\n 2007-10-04  Doug Kwan  <dougkwan@google.com>\n \n \t* include/ext/concurrent.h (class __mutex,"}, {"sha": "ac561eee351d3e0558aa213fd370097864511ee8", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -826,4 +826,173 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n _GLIBCXX_END_NAMESPACE\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n+  // 24.4.3  Move iterators\n+  /**\n+   *  @if maint\n+   *  Class template move_iterator is an iterator adapter with the same\n+   *  behavior as the underlying iterator except that its dereference\n+   *  operator implicitly converts the value returned by the underlying\n+   *  iterator's dereference operator to an rvalue reference.  Some\n+   *  generic algorithms can be called with move iterators to replace\n+   *  copying with moving.\n+   *  @endif\n+   */\n+  template<typename _Iterator>\n+    class move_iterator\n+    {\n+    protected:\n+      _Iterator _M_current;\n+\n+    public:\n+      typedef _Iterator                                        iterator_type;\n+      typedef typename iterator_traits<_Iterator>::difference_type\n+                                                               difference_type;\n+      typedef typename iterator_traits<_Iterator>::pointer     pointer;\n+      typedef typename iterator_traits<_Iterator>::value_type  value_type;\n+      typedef typename iterator_traits<_Iterator>::iterator_category\n+                                                               iterator_category;\n+      typedef value_type&&                                     reference;\n+\n+    public:\n+      move_iterator()\n+      : _M_current() { }\n+\n+      explicit\n+      move_iterator(iterator_type __i)\n+      : _M_current(__i) { }\n+\n+      template<typename _Iter>\n+\tmove_iterator(const move_iterator<_Iter>& __i)\n+\t: _M_current(__i.base()) { }\n+\n+      iterator_type\n+      base() const\n+      { return _M_current; }\n+\n+      reference\n+      operator*() const\n+      { return *_M_current; }\n+\n+      pointer\n+      operator->() const\n+      { return _M_current; }\n+\n+      move_iterator&\n+      operator++()\n+      {\n+\t++_M_current;\n+\treturn *this;\n+      }\n+\n+      move_iterator\n+      operator++(int)\n+      {\n+\tmove_iterator __tmp = *this;\n+\t++_M_current;\n+\treturn __tmp;\n+      }\n+\n+      move_iterator&\n+      operator--()\n+      {\n+\t--_M_current;\n+\treturn *this;\n+      }\n+\n+      move_iterator\n+      operator--(int)\n+      {\n+\tmove_iterator __tmp = *this;\n+\t--_M_current;\n+\treturn __tmp;\n+      }\n+\n+      move_iterator\n+      operator+(difference_type __n) const\n+      { return move_iterator(_M_current + __n); }\n+\n+      move_iterator&\n+      operator+=(difference_type __n)\n+      {\n+\t_M_current += __n;\n+\treturn *this;\n+      }\n+\n+      move_iterator\n+      operator-(difference_type __n) const\n+      { return move_iterator(_M_current - __n); }\n+    \n+      move_iterator&\n+      operator-=(difference_type __n)\n+      { \n+\t_M_current -= __n;\n+\treturn *this;\n+      }\n+\n+      reference\n+      operator[](difference_type __n) const\n+      { return _M_current[__n]; }\n+    };\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline bool\n+    operator==(const move_iterator<_IteratorL>& __x,\n+\t       const move_iterator<_IteratorR>& __y)\n+    { return __x.base() == __y.base(); }\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline bool\n+    operator!=(const move_iterator<_IteratorL>& __x,\n+\t       const move_iterator<_IteratorR>& __y)\n+    { return !(__x == __y); }\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline bool\n+    operator<(const move_iterator<_IteratorL>& __x,\n+\t      const move_iterator<_IteratorR>& __y)\n+    { return __x.base() < __y.base(); }\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline bool\n+    operator<=(const move_iterator<_IteratorL>& __x,\n+\t       const move_iterator<_IteratorR>& __y)\n+    { return !(__y < __x); }\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline bool\n+    operator>(const move_iterator<_IteratorL>& __x,\n+\t      const move_iterator<_IteratorR>& __y)\n+    { return __y < __x; }\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline bool\n+    operator>=(const move_iterator<_IteratorL>& __x,\n+\t       const move_iterator<_IteratorR>& __y)\n+    { return !(__x < __y); }\n+\n+  template<typename _IteratorL, typename _IteratorR>\n+    inline typename move_iterator<_IteratorL>::difference_type\n+    operator-(const move_iterator<_IteratorL>& __x,\n+\t      const move_iterator<_IteratorR>& __y)\n+    { return __x.base() - __y.base(); }\n+\n+  template<typename _Iterator>\n+    inline move_iterator<_Iterator>\n+    operator+(typename move_iterator<_Iterator>::difference_type __n,\n+\t      const move_iterator<_Iterator>& __x)\n+    { return __x + __n; }\n+\n+  template<typename _Iterator>\n+    inline move_iterator<_Iterator>\n+    make_move_iterator(const _Iterator& __i)\n+    { return move_iterator<_Iterator>(__i); }\n+\n+_GLIBCXX_END_NAMESPACE\n+\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n #endif"}, {"sha": "5020b95b4f80d6e1e46f3a270c2daacdd228f0d0", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -87,8 +87,8 @@\n \n #include <type_traits>\n \n-namespace std\n-{\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   // 20.2.2, forward/move\n   template<typename _Tp>\n     struct identity\n@@ -105,7 +105,8 @@ namespace std\n     inline typename std::remove_reference<_Tp>::type&&\n     move(_Tp&& __t)\n     { return __t; }\n-}\n+\n+_GLIBCXX_END_NAMESPACE\n \n #endif\n "}, {"sha": "ae532de978016f992884bc216076412e6e111da6", "filename": "libstdc++-v3/testsuite/23_containers/deque/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc."}, {"sha": "d3f1031f91f142320e19bf0e2c76294a46bf5641", "filename": "libstdc++-v3/testsuite/23_containers/list/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc."}, {"sha": "52447083b2ebf6ff1eb3fc405be5c795f2581aad", "filename": "libstdc++-v3/testsuite/23_containers/map/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc."}, {"sha": "87796f496f38c9ec2bdf94f247ed5e4fd7a99158", "filename": "libstdc++-v3/testsuite/23_containers/multimap/moveable.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n@@ -33,6 +32,7 @@\n // this test may begin to fail.\n \n #include <map>\n+#include <utility>\n #include <testsuite_hooks.h>\n \n int main()"}, {"sha": "c3ca111804d095d4a61df817f0cc914ffe9d29e5", "filename": "libstdc++-v3/testsuite/23_containers/multiset/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc."}, {"sha": "b85ae58ba06d47429db8d7e021375a640db5df59", "filename": "libstdc++-v3/testsuite/23_containers/set/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc."}, {"sha": "df825f3d00765815560783a61a5e16377246de82", "filename": "libstdc++-v3/testsuite/23_containers/vector/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63bc637f68a42da874eb142f389c2c268c9c915/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fmoveable.cc?ref=f63bc637f68a42da874eb142f389c2c268c9c915", "patch": "@@ -1,4 +1,3 @@\n-// { dg-require-rvalref \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007 Free Software Foundation, Inc."}]}