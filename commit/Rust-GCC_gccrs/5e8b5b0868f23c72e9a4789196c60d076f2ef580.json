{"sha": "5e8b5b0868f23c72e9a4789196c60d076f2ef580", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU4YjViMDg2OGYyM2M3MmU5YTQ3ODkxOTZjNjBkMDc2ZjJlZjU4MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-10-11T18:14:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-10-11T18:14:57Z"}, "message": "re PR middle-end/24263 (gcc.dg/torture/builtin-convert-1.c fails)\n\n\tPR middle-end/24263\n\t* convert.c (convert_to_real): Revert 2005-10-05 patch.\n\tOnly apply the optimization for rounding builtins if the inner\n\tcast is also an extension.\n\nFrom-SVN: r105249", "tree": {"sha": "ca8173c7024ef726758670595befc31e1b2edb0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca8173c7024ef726758670595befc31e1b2edb0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e8b5b0868f23c72e9a4789196c60d076f2ef580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8b5b0868f23c72e9a4789196c60d076f2ef580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8b5b0868f23c72e9a4789196c60d076f2ef580", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8b5b0868f23c72e9a4789196c60d076f2ef580/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c07e3d7a7ef1e24c8f1b137331fab65e210cf94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c07e3d7a7ef1e24c8f1b137331fab65e210cf94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c07e3d7a7ef1e24c8f1b137331fab65e210cf94"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "1b1faaaaec58a6d7e400d105d4ba7a38613b6871", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8b5b0868f23c72e9a4789196c60d076f2ef580/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8b5b0868f23c72e9a4789196c60d076f2ef580/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e8b5b0868f23c72e9a4789196c60d076f2ef580", "patch": "@@ -1,3 +1,10 @@\n+2005-10-11  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/24263 \n+\t* convert.c (convert_to_real): Revert 2005-10-05 patch.\n+\tOnly apply the optimization for rounding builtins if the inner\n+\tcast is also an extension.\n+\n 2005-10-11  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/23946"}, {"sha": "5680c39df2025d623a93db489c5c21b33cb9b92a", "filename": "gcc/convert.c", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8b5b0868f23c72e9a4789196c60d076f2ef580/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8b5b0868f23c72e9a4789196c60d076f2ef580/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=5e8b5b0868f23c72e9a4789196c60d076f2ef580", "patch": "@@ -200,9 +200,41 @@ convert_to_real (tree type, tree expr)\n \t  break;\n \t}\n     }\n-  /* This code formerly changed (float)floor(double d) to\n-     floorf((float)d).  This is incorrect, because (float)d uses\n-     round-to-nearest and can round up to the next integer. */\n+  if (optimize\n+      && (((fcode == BUILT_IN_FLOORL\n+\t   || fcode == BUILT_IN_CEILL\n+\t   || fcode == BUILT_IN_ROUNDL\n+\t   || fcode == BUILT_IN_RINTL\n+\t   || fcode == BUILT_IN_TRUNCL\n+\t   || fcode == BUILT_IN_NEARBYINTL)\n+\t  && (TYPE_MODE (type) == TYPE_MODE (double_type_node)\n+\t      || TYPE_MODE (type) == TYPE_MODE (float_type_node)))\n+\t  || ((fcode == BUILT_IN_FLOOR\n+\t       || fcode == BUILT_IN_CEIL\n+\t       || fcode == BUILT_IN_ROUND\n+\t       || fcode == BUILT_IN_RINT\n+\t       || fcode == BUILT_IN_TRUNC\n+\t       || fcode == BUILT_IN_NEARBYINT)\n+\t      && (TYPE_MODE (type) == TYPE_MODE (float_type_node)))))\n+    {\n+      tree fn = mathfn_built_in (type, fcode);\n+\n+      if (fn)\n+\t{\n+\t  tree arg\n+\t    = strip_float_extensions (TREE_VALUE (TREE_OPERAND (expr, 1)));\n+\n+\t  /* Make sure (type)arg0 is an extension, otherwise we could end up\n+\t     changing (float)floor(double d) into floorf((float)d), which is\n+\t     incorrect because (float)d uses round-to-nearest and can round\n+\t     up to the next integer.  */\n+\t  if (TYPE_PRECISION (type) >= TYPE_PRECISION (TREE_TYPE (arg)))\n+\t    return\n+\t      build_function_call_expr (fn,\n+\t\t\t\t\tbuild_tree_list (NULL_TREE,\n+\t\t\t\t\t  fold (convert_to_real (type, arg))));\n+\t}\n+    }\n \n   /* Propagate the cast into the operation.  */\n   if (itype != type && FLOAT_TYPE_P (type))"}]}