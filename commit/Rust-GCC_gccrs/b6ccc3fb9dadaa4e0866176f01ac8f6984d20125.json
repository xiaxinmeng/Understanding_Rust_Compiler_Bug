{"sha": "b6ccc3fb9dadaa4e0866176f01ac8f6984d20125", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjY2MzZmI5ZGFkYWE0ZTA4NjYxNzZmMDFhYzhmNjk4NGQyMDEyNQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-24T06:52:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-24T06:52:44Z"}, "message": "(mark_loop_jump): Handle weird cases like jumping to a symbol_ref.\n\nFrom-SVN: r4981", "tree": {"sha": "ced0f0698f08bb431cdd8519f47534ff7577106a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ced0f0698f08bb431cdd8519f47534ff7577106a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6ccc3fb9dadaa4e0866176f01ac8f6984d20125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ccc3fb9dadaa4e0866176f01ac8f6984d20125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ccc3fb9dadaa4e0866176f01ac8f6984d20125", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ccc3fb9dadaa4e0866176f01ac8f6984d20125/comments", "author": null, "committer": null, "parents": [{"sha": "e28cae4f9c4c30a0f303ab58092215a100adcc91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28cae4f9c4c30a0f303ab58092215a100adcc91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28cae4f9c4c30a0f303ab58092215a100adcc91"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "1d1c03abe67da21157404f998199ab031124e370", "filename": "gcc/loop.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ccc3fb9dadaa4e0866176f01ac8f6984d20125/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ccc3fb9dadaa4e0866176f01ac8f6984d20125/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=b6ccc3fb9dadaa4e0866176f01ac8f6984d20125", "patch": "@@ -2538,8 +2538,17 @@ mark_loop_jump (x, loop_num)\n       return;\n \n     default:\n-      /* Nothing else should occur in a JUMP_INSN.  */\n-      abort ();\n+      /* Treat anything else (such as a symbol_ref)\n+\t as a branch out of this loop, but not into any loop.  */\n+\n+      if (loop_num != -1)\n+\t{\n+\t  LABEL_OUTSIDE_LOOP_P (x) = 1;\n+\t  LABEL_NEXTREF (x) = loop_number_exit_labels[loop_num];\n+\t  loop_number_exit_labels[loop_num] = x;\n+\t}\n+\n+      return;\n     }\n }\n \f"}]}