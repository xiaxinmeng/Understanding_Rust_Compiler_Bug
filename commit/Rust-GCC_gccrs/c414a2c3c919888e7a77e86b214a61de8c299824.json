{"sha": "c414a2c3c919888e7a77e86b214a61de8c299824", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQxNGEyYzNjOTE5ODg4ZTdhNzdlODZiMjE0YTYxZGU4YzI5OTgyNA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-05-27T06:04:28Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-05-27T06:04:28Z"}, "message": "2003-05-27  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/PrintStream.java\n\t(PrintStream): Reformatted.\n\t(PrintStream): New method, merged from classpath.\n\t(write): Reformatted.\n\nFrom-SVN: r67183", "tree": {"sha": "8839a60455bb5d6fb23680a5f64001b92b93778d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8839a60455bb5d6fb23680a5f64001b92b93778d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c414a2c3c919888e7a77e86b214a61de8c299824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c414a2c3c919888e7a77e86b214a61de8c299824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c414a2c3c919888e7a77e86b214a61de8c299824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c414a2c3c919888e7a77e86b214a61de8c299824/comments", "author": null, "committer": null, "parents": [{"sha": "91adbcf7312f3c2ba14e68b111e1c2a58a30205a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91adbcf7312f3c2ba14e68b111e1c2a58a30205a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91adbcf7312f3c2ba14e68b111e1c2a58a30205a"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "a36a473dbf4fe2ec9c9523024c8e250d976f05ec", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c414a2c3c919888e7a77e86b214a61de8c299824/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c414a2c3c919888e7a77e86b214a61de8c299824/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c414a2c3c919888e7a77e86b214a61de8c299824", "patch": "@@ -1,3 +1,10 @@\n+2003-05-27  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/PrintStream.java\n+\t(PrintStream): Reformatted.\n+\t(PrintStream): New method, merged from classpath.\n+\t(write): Reformatted.\n+\n 2003-05-27  Michael Koch  <konqueror@gmx.de>\n \n \t* java/lang/System.java:"}, {"sha": "ddc37aeb11e8eae60dd7d800dc16dd060c5d34f1", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 38, "deletions": 12, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c414a2c3c919888e7a77e86b214a61de8c299824/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c414a2c3c919888e7a77e86b214a61de8c299824/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=c414a2c3c919888e7a77e86b214a61de8c299824", "patch": "@@ -104,7 +104,7 @@ public class PrintStream extends FilterOutputStream\n    */\n   public PrintStream (OutputStream out)\n   {\n-    this(out, false);\n+    this (out, false);\n   }\n \n   /**\n@@ -123,12 +123,37 @@ public PrintStream (OutputStream out)\n    */\n   public PrintStream (OutputStream out, boolean auto_flush)\n   {\n-    super(out);\n+    super (out);\n \n     converter = UnicodeToBytes.getDefaultEncoder();\n     this.auto_flush = auto_flush;\n   }\n \n+  /**\n+   * This method intializes a new <code>PrintStream</code> object to write\n+   * to the specified output sink.  This constructor also allows \"auto-flush\"\n+   * functionality to be specified where the stream will be flushed after\n+   * every line is terminated or newline character is written.\n+   * <p>\n+   * Note that this class is deprecated in favor of <code>PrintWriter</code>.\n+   *\n+   * @param out The <code>OutputStream</code> to write to.\n+   * @param auto_flush <code>true</code> to flush the stream after every \n+   * line, <code>false</code> otherwise\n+   * @param encoding The name of the character encoding to use for this\n+   * object.\n+   *\n+   * @deprecated\n+   */\n+  public PrintStream (OutputStream out, boolean auto_flush, String encoding)\n+    throws UnsupportedEncodingException\n+  {\n+    super (out);\n+\n+    converter = UnicodeToBytes.getEncoder (encoding);\n+    this.auto_flush = auto_flush;\n+  }\n+\n   /**\n    * This method checks to see if an error has occurred on this stream.  Note\n    * that once an error has occurred, this method will continue to report\n@@ -503,17 +528,18 @@ public void write (int oneByte)\n   {\n     try\n       {\n-\tout.write(oneByte);\n-\tif (auto_flush && oneByte == '\\n')\n-\t  flush();\n+        out.write (oneByte);\n+\n+        if (auto_flush && oneByte == '\\n')\n+          flush ();\n       }\n     catch (InterruptedIOException iioe)\n       {\n-\tThread.currentThread().interrupt();\n+        Thread.currentThread ().interrupt ();\n       }\n     catch (IOException e)\n       {\n-\tsetError ();\n+        setError ();\n       }\n   }\n \n@@ -529,18 +555,18 @@ public void write (byte[] buffer, int offset, int len)\n   {\n     try\n       {\n-\tout.write (buffer, offset, len);\n+        out.write (buffer, offset, len);\n         \n-\tif (auto_flush)\n-\t  flush();\n+        if (auto_flush)\n+          flush ();\n       }\n     catch (InterruptedIOException iioe)\n       {\n-\tThread.currentThread().interrupt();\n+        Thread.currentThread ().interrupt ();\n       }\n     catch (IOException e)\n       {\n-\tsetError ();\n+        setError ();\n       }\n   }\n "}]}