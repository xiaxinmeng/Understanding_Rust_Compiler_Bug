{"sha": "1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3ZjE5YzQ2YTlmYTBjMWJlNTI4YmZiOWZhNTQxOTZkOGNhMGU0Yg==", "commit": {"author": {"name": "Dirk Mueller", "email": "dmueller@suse.de", "date": "2007-03-14T23:17:03Z"}, "committer": {"name": "Dirk Mueller", "email": "mueller@gcc.gnu.org", "date": "2007-03-14T23:17:03Z"}, "message": "re PR c++/30860 (Should warn about boolean constant false used in pointer context)\n\n2007-03-15  Dirk Mueller  <dmueller@suse.de>\n\n        PR c++/30860\n        * call.c (convert_conversion_warnings): New..\n        (convert_like_real): .. factored out from here.\n        (convert_conversion_warnings): Add warning about\n        false being converted to NULL in argument passing.\n\n        * g++.dg/warn/Wconversion2.C: New.\n\nFrom-SVN: r122934", "tree": {"sha": "8e42b3900511ae86a0c8d657b74dc47806b4ff03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e42b3900511ae86a0c8d657b74dc47806b4ff03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/comments", "author": null, "committer": null, "parents": [{"sha": "ddff69b97240cf4e679423ecf6973ab97ddde0ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddff69b97240cf4e679423ecf6973ab97ddde0ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddff69b97240cf4e679423ecf6973ab97ddde0ed"}], "stats": {"total": 76, "additions": 52, "deletions": 24}, "files": [{"sha": "2142ac4082bc7c73cc90ff9862421d8ad084132e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "patch": "@@ -1,3 +1,11 @@\n+2007-03-15  Dirk Mueller  <dmueller@suse.de>\n+\n+\tPR c++/30860\n+\t* call.c (convert_conversion_warnings): New..\n+\t(convert_like_real): .. factored out from here.\n+\t(convert_conversion_warnings): Add warning about\n+\tfalse being converted to NULL in argument passing.\n+\n 2007-03-14  Dirk Mueller  <dmueller@suse.de>\n \n \t* cp/semantics.c (c_finish_if_stmt): Call empty_if_body_warning."}, {"sha": "53129bb881ad0b82615bf230cc99e3da2c14c76c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "patch": "@@ -4245,6 +4245,41 @@ build_temp (tree expr, tree type, int flags,\n   return expr;\n }\n \n+/* Perform warnings about conversion of EXPR to type TOTYPE.\n+   FN and ARGNUM are used for diagnostics.  */\n+\n+static void\n+convert_conversion_warnings (tree totype, tree expr, tree fn, int argnum)\n+{\n+  tree t = non_reference (totype);\n+\n+  /* Issue warnings about peculiar, but valid, uses of NULL.  */\n+  if (expr == null_node && TREE_CODE (t) != BOOLEAN_TYPE && ARITHMETIC_TYPE_P (t))\n+    {\n+      if (fn)\n+\twarning (OPT_Wconversion, \"passing NULL to non-pointer argument %P of %qD\",\n+\t\t argnum, fn);\n+      else\n+\twarning (OPT_Wconversion, \"converting to non-pointer type %qT from NULL\", t);\n+    }\n+\n+  /* Warn about assigning a floating-point type to an integer type.  */\n+  if (TREE_CODE (TREE_TYPE (expr)) == REAL_TYPE\n+      && TREE_CODE (t) == INTEGER_TYPE)\n+    {\n+      if (fn)\n+\twarning (OPT_Wconversion, \"passing %qT for argument %P to %qD\",\n+\t\t TREE_TYPE (expr), argnum, fn);\n+      else\n+\twarning (OPT_Wconversion, \"converting to %qT from %qT\", t, TREE_TYPE (expr));\n+    }\n+\n+  /* Issue warnings if \"false\" is converted to a NULL pointer */\n+  if (expr == boolean_false_node && fn && POINTER_TYPE_P (t))\n+    warning (OPT_Wconversion,\n+\t     \"converting %<false%> to pointer type for argument %P of %qD\",\n+\t     argnum, fn);\n+}\n \n /* Perform the conversions in CONVS on the expression EXPR.  FN and\n    ARGNUM are used for diagnostics.  ARGNUM is zero based, -1\n@@ -4293,30 +4328,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n     }\n \n   if (issue_conversion_warnings)\n-    {\n-      tree t = non_reference (totype);\n-\n-      /* Issue warnings about peculiar, but valid, uses of NULL.  */\n-      if (expr == null_node && TREE_CODE (t) != BOOLEAN_TYPE && ARITHMETIC_TYPE_P (t))\n-\t{\n-\t  if (fn)\n-\t    warning (OPT_Wconversion, \"passing NULL to non-pointer argument %P of %qD\",\n-\t\t     argnum, fn);\n-\t  else\n-\t    warning (OPT_Wconversion, \"converting to non-pointer type %qT from NULL\", t);\n-\t}\n-\n-      /* Warn about assigning a floating-point type to an integer type.  */\n-      if (TREE_CODE (TREE_TYPE (expr)) == REAL_TYPE\n-\t  && TREE_CODE (t) == INTEGER_TYPE)\n-\t{\n-\t  if (fn)\n-\t    warning (OPT_Wconversion, \"passing %qT for argument %P to %qD\",\n-\t\t     TREE_TYPE (expr), argnum, fn);\n-\t  else\n-\t    warning (OPT_Wconversion, \"converting to %qT from %qT\", t, TREE_TYPE (expr));\n-\t}\n-    }\n+    convert_conversion_warnings (totype, expr, fn, argnum);\n \n   switch (convs->kind)\n     {"}, {"sha": "27974a93a513f775dcc33dc0da0544792d2da619", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "patch": "@@ -1,3 +1,7 @@\n+2007-03-15  Dirk Mueller  <dmueller@suse.de>\n+\n+\t* g++.dg/warn/Wconversion2.C: New.\n+\n 2007-03-14  Eric Christopher  <echristo@apple.com>\n \n \t* gcc.dg/ssp-1.c: New."}, {"sha": "d77407aedc948b3a0dcc5a613807c22deb6b67cb", "filename": "gcc/testsuite/g++.dg/warn/Wconversion2.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion2.C?ref=1f7f19c46a9fa0c1be528bfb9fa54196d8ca0e4b", "patch": "@@ -0,0 +1,4 @@\n+// { dg-options \"-Wconversion\" }\n+\n+void foo(const char *); \n+void bar() { foo(false); } // { dg-warning \"pointer type argument\" }"}]}