{"sha": "2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE2ZTZmZWE5NDhiZGI3YTI3MzZiOTI5Y2RkYTU0ZThhYTBjZDQ0ZA==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-04-02T07:53:58Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-04-02T07:53:58Z"}, "message": "2012-04-02  Tristan Gingold  <gingold@adacore.com>\n\n        * ggc-page.c (PAGE_L1_SIZE, PAGE_L2_SIZE, LOOKUP_L1, LOOKUP_L2)\n        (ggc_allocated_p, lookup_page_table_entry, set_page_table_entry)\n        (alloc_page, init_ggc, clear_marks, struct ggc_pch_data)\n        (ggc_pch_this_base): Use uintptr_t instead of size_t.\n\nFrom-SVN: r186065", "tree": {"sha": "a934f143518e478a9ada6f98354323265042a044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a934f143518e478a9ada6f98354323265042a044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63e1e57a9a137cdf607d4cdd466942848908d4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1e57a9a137cdf607d4cdd466942848908d4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e1e57a9a137cdf607d4cdd466942848908d4df"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "06232ea9f98a16aadb854639d25c3a19c8a9c619", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d", "patch": "@@ -1,3 +1,10 @@\n+2012-04-02  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* ggc-page.c (PAGE_L1_SIZE, PAGE_L2_SIZE, LOOKUP_L1, LOOKUP_L2)\n+\t(ggc_allocated_p, lookup_page_table_entry, set_page_table_entry)\n+\t(alloc_page, init_ggc, clear_marks, struct ggc_pch_data)\n+\t(ggc_pch_this_base): Use uintptr_t instead of size_t.\n+\n 2012-03-31  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/52784"}, {"sha": "ff23092b1d790bd80cfd0713b5f7a7c95138b800", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=2a6e6fea948bdb7a2736b929cdda54e8aa0cd44d", "patch": "@@ -121,14 +121,14 @@ along with GCC; see the file COPYING3.  If not see\n \n #define PAGE_L1_BITS\t(8)\n #define PAGE_L2_BITS\t(32 - PAGE_L1_BITS - G.lg_pagesize)\n-#define PAGE_L1_SIZE\t((size_t) 1 << PAGE_L1_BITS)\n-#define PAGE_L2_SIZE\t((size_t) 1 << PAGE_L2_BITS)\n+#define PAGE_L1_SIZE\t((uintptr_t) 1 << PAGE_L1_BITS)\n+#define PAGE_L2_SIZE\t((uintptr_t) 1 << PAGE_L2_BITS)\n \n #define LOOKUP_L1(p) \\\n-  (((size_t) (p) >> (32 - PAGE_L1_BITS)) & ((1 << PAGE_L1_BITS) - 1))\n+  (((uintptr_t) (p) >> (32 - PAGE_L1_BITS)) & ((1 << PAGE_L1_BITS) - 1))\n \n #define LOOKUP_L2(p) \\\n-  (((size_t) (p) >> G.lg_pagesize) & ((1 << PAGE_L2_BITS) - 1))\n+  (((uintptr_t) (p) >> G.lg_pagesize) & ((1 << PAGE_L2_BITS) - 1))\n \n /* The number of objects per allocation page, for objects on a page of\n    the indicated ORDER.  */\n@@ -560,7 +560,7 @@ ggc_allocated_p (const void *p)\n   base = &G.lookup[0];\n #else\n   page_table table = G.lookup;\n-  size_t high_bits = (size_t) p & ~ (size_t) 0xffffffff;\n+  uintptr_t high_bits = (uintptr_t) p & ~ (uintptr_t) 0xffffffff;\n   while (1)\n     {\n       if (table == NULL)\n@@ -592,7 +592,7 @@ lookup_page_table_entry (const void *p)\n   base = &G.lookup[0];\n #else\n   page_table table = G.lookup;\n-  size_t high_bits = (size_t) p & ~ (size_t) 0xffffffff;\n+  uintptr_t high_bits = (uintptr_t) p & ~ (uintptr_t) 0xffffffff;\n   while (table->high_bits != high_bits)\n     table = table->next;\n   base = &table->table[0];\n@@ -617,7 +617,7 @@ set_page_table_entry (void *p, page_entry *entry)\n   base = &G.lookup[0];\n #else\n   page_table table;\n-  size_t high_bits = (size_t) p & ~ (size_t) 0xffffffff;\n+  uintptr_t high_bits = (uintptr_t) p & ~ (uintptr_t) 0xffffffff;\n   for (table = G.lookup; table; table = table->next)\n     if (table->high_bits == high_bits)\n       goto found;\n@@ -826,7 +826,7 @@ alloc_page (unsigned order)\n \talloc_size = entry_size + G.pagesize - 1;\n       allocation = XNEWVEC (char, alloc_size);\n \n-      page = (char *) (((size_t) allocation + G.pagesize - 1) & -G.pagesize);\n+      page = (char *) (((uintptr_t) allocation + G.pagesize - 1) & -G.pagesize);\n       head_slop = page - allocation;\n       if (multiple_pages)\n \ttail_slop = ((size_t) allocation + alloc_size) & (G.pagesize - 1);\n@@ -1662,13 +1662,13 @@ init_ggc (void)\n   {\n     char *p = alloc_anon (NULL, G.pagesize, true);\n     struct page_entry *e;\n-    if ((size_t)p & (G.pagesize - 1))\n+    if ((uintptr_t)p & (G.pagesize - 1))\n       {\n \t/* How losing.  Discard this one and try another.  If we still\n \t   can't get something useful, give up.  */\n \n \tp = alloc_anon (NULL, G.pagesize, true);\n-\tgcc_assert (!((size_t)p & (G.pagesize - 1)));\n+\tgcc_assert (!((uintptr_t)p & (G.pagesize - 1)));\n       }\n \n     /* We have a good page, might as well hold onto it...  */\n@@ -1782,7 +1782,7 @@ clear_marks (void)\n \t  size_t bitmap_size = BITMAP_SIZE (num_objects + 1);\n \n \t  /* The data should be page-aligned.  */\n-\t  gcc_assert (!((size_t) p->page & (G.pagesize - 1)));\n+\t  gcc_assert (!((uintptr_t) p->page & (G.pagesize - 1)));\n \n \t  /* Pages that aren't in the topmost context are not collected;\n \t     nevertheless, we need their in-use bit vectors to store GC\n@@ -2204,7 +2204,7 @@ struct ggc_pch_ondisk\n struct ggc_pch_data\n {\n   struct ggc_pch_ondisk d;\n-  size_t base[NUM_ORDERS];\n+  uintptr_t base[NUM_ORDERS];\n   size_t written[NUM_ORDERS];\n };\n \n@@ -2247,7 +2247,7 @@ ggc_pch_total_size (struct ggc_pch_data *d)\n void\n ggc_pch_this_base (struct ggc_pch_data *d, void *base)\n {\n-  size_t a = (size_t) base;\n+  uintptr_t a = (uintptr_t) base;\n   unsigned i;\n \n   for (i = 0; i < NUM_ORDERS; i++)"}]}