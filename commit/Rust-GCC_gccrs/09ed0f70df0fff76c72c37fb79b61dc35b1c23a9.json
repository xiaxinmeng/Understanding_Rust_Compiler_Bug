{"sha": "09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllZDBmNzBkZjBmZmY3NmM3MmMzN2ZiNzliNjFkYzM1YjFjMjNhOQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-02-09T19:40:16Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-02-09T19:40:16Z"}, "message": "lex.c (java_lang_cloneable): Initialize.\n\nTue Feb  9 19:31:09 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* lex.c (java_lang_cloneable): Initialize.\n\t* parse.y (java_lang_cloneable): New static variable.\n\t(qualify_ambiguous_name): Take CONVERT_EXPR into account when\n \tdoing one more qualification round.\n\t(valid_ref_assignconv_cast_p): Reject null source or\n \tdestination. Allow an array to be cast into java.lang.Cloneable.\n\t(patch_cast): Swapped two first arguments to first call to\n \tvalid_ref_assignconv_cast_p.\n\nFrom-SVN: r25114", "tree": {"sha": "96e4f200dc82cf44beffcb101b08e9f0c735c137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96e4f200dc82cf44beffcb101b08e9f0c735c137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/comments", "author": null, "committer": null, "parents": [{"sha": "95d62815b5c001319c1e1f0b8746342e65dec86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d62815b5c001319c1e1f0b8746342e65dec86a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d62815b5c001319c1e1f0b8746342e65dec86a"}], "stats": {"total": 891, "additions": 462, "deletions": 429}, "files": [{"sha": "0bfb8074cd81edb3e27365d08134174f5dc94a19", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "patch": "@@ -1,3 +1,14 @@\n+Tue Feb  9 19:31:09 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* lex.c (java_lang_cloneable): Initialize.\n+\t* parse.y (java_lang_cloneable): New static variable.\n+\t(qualify_ambiguous_name): Take CONVERT_EXPR into account when\n+ \tdoing one more qualification round.\n+\t(valid_ref_assignconv_cast_p): Reject null source or\n+ \tdestination. Allow an array to be cast into java.lang.Cloneable.\n+\t(patch_cast): Swapped two first arguments to first call to\n+ \tvalid_ref_assignconv_cast_p.\n+\n Mon Feb  8 11:50:50 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.h: DECL_P renamed JDECL_P."}, {"sha": "e376fcfcb4198355f2abf56b2ea7c6ee06378f84", "filename": "gcc/java/lex.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "patch": "@@ -79,6 +79,8 @@ java_init_lex ()\n #ifndef JC1_LITE\n   if (!java_lang_id)\n     java_lang_id = get_identifier (\"java.lang\");\n+  if (!java_lang_cloneable)\n+    java_lang_cloneable = get_identifier (\"java.lang.Cloneable\");\n \n   if (!java_lang_imported)\n     {"}, {"sha": "151b26101012adf80e13177dc790e1192a91da7d", "filename": "gcc/java/parse.c", "status": "modified", "additions": 435, "deletions": 425, "changes": 860, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "patch": "@@ -362,7 +362,10 @@ static tree wfl_to_string = NULL_TREE;\n /* The \"java.lang\" import qualified name.  */\n static tree java_lang_id = NULL_TREE;\n \n-#line 290 \"./parse.y\"\n+/* The \"java.lang.Cloneable\" qualified name.  */\n+static tree java_lang_cloneable = NULL_TREE;\n+\n+#line 293 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -666,56 +669,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   440,   446,   448,   449,   450,   451,   452,   456,   458,   461,\n-   463,   464,   467,   469,   472,   476,   480,   484,   490,   492,\n-   494,   496,   501,   503,   506,   510,   515,   520,   522,   523,\n-   524,   525,   526,   527,   528,   531,   536,   542,   544,   547,\n-   550,   552,   556,   558,   561,   588,   590,   594,   607,   609,\n-   613,   620,   621,   623,   633,   638,   653,   657,   660,   663,\n-   666,   668,   670,   672,   676,   678,   680,   682,   686,   688,\n-   690,   697,   703,   708,   712,   715,   719,   721,   724,   726,\n-   727,   728,   732,   734,   735,   737,   742,   745,   755,   758,\n-   760,   764,   767,   774,   780,   788,   790,   792,   794,   796,\n-   800,   802,   806,   813,   814,   818,   821,   823,   825,   827,\n-   829,   831,   833,   835,   842,   845,   847,   856,   858,   862,\n-   867,   872,   876,   881,   883,   885,   892,   894,   896,   900,\n-   903,   905,   909,   911,   912,   917,   922,   928,   936,   943,\n-   946,   949,   953,   956,   960,   969,   971,   973,   978,   985,\n-   993,   995,   999,  1007,  1018,  1022,  1025,  1028,  1031,  1034,\n-  1037,  1040,  1043,  1045,  1049,  1055,  1060,  1062,  1066,  1069,\n-  1073,  1075,  1078,  1080,  1081,  1083,  1087,  1091,  1097,  1102,\n-  1105,  1107,  1111,  1117,  1121,  1126,  1129,  1133,  1138,  1146,\n-  1148,  1151,  1153,  1155,  1159,  1163,  1166,  1170,  1172,  1173,\n-  1174,  1175,  1176,  1186,  1188,  1189,  1190,  1191,  1194,  1196,\n-  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,  1208,\n-  1213,  1224,  1231,  1235,  1246,  1256,  1262,  1268,  1274,  1276,\n-  1282,  1284,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1305,\n-  1306,  1307,  1308,  1309,  1312,  1315,  1317,  1319,  1323,  1328,\n-  1333,  1339,  1349,  1355,  1357,  1359,  1366,  1369,  1371,  1373,\n-  1377,  1379,  1382,  1386,  1388,  1391,  1398,  1404,  1406,  1408,\n-  1412,  1420,  1423,  1425,  1427,  1431,  1436,  1445,  1450,  1453,\n-  1460,  1462,  1464,  1468,  1471,  1480,  1487,  1489,  1493,  1506,\n-  1508,  1514,  1520,  1524,  1526,  1530,  1533,  1535,  1539,  1542,\n-  1544,  1546,  1550,  1553,  1555,  1557,  1561,  1564,  1566,  1568,\n-  1572,  1578,  1580,  1584,  1591,  1593,  1595,  1597,  1601,  1609,\n-  1612,  1614,  1616,  1620,  1622,  1629,  1637,  1654,  1656,  1658,\n-  1662,  1668,  1673,  1675,  1678,  1680,  1682,  1684,  1685,  1686,\n-  1687,  1691,  1693,  1695,  1700,  1702,  1704,  1706,  1708,  1712,\n-  1715,  1720,  1722,  1727,  1728,  1729,  1730,  1731,  1733,  1735,\n-  1737,  1739,  1741,  1745,  1747,  1750,  1756,  1761,  1765,  1768,\n-  1770,  1772,  1776,  1778,  1780,  1782,  1786,  1789,  1793,  1799,\n-  1801,  1809,  1836,  1838,  1842,  1847,  1855,  1859,  1862,  1864,\n-  1875,  1886,  1891,  1900,  1902,  1906,  1909,  1911,  1916,  1921,\n-  1926,  1933,  1935,  1936,  1937,  1940,  1945,  1950,  1952,  1953,\n-  1955,  1957,  1958,  1960,  1964,  1967,  1971,  1974,  1978,  1980,\n-  1982,  1984,  1985,  1987,  1991,  2000,  2002,  2004,  2017,  2019,\n-  2025,  2027,  2029,  2033,  2035,  2040,  2045,  2050,  2052,  2054,\n-  2058,  2060,  2065,  2070,  2072,  2076,  2078,  2083,  2088,  2093,\n-  2095,  2097,  2101,  2103,  2108,  2113,  2118,  2123,  2125,  2127,\n-  2129,  2131,  2133,  2137,  2139,  2144,  2149,  2151,  2155,  2157,\n-  2162,  2166,  2168,  2173,  2177,  2179,  2184,  2188,  2190,  2195,\n-  2199,  2201,  2206,  2210,  2212,  2217,  2223,  2225,  2229,  2231,\n-  2234,  2237,  2245,  2247,  2248,  2251,  2253,  2256,  2260\n+   443,   449,   451,   452,   453,   454,   455,   459,   461,   464,\n+   466,   467,   470,   472,   475,   479,   483,   487,   493,   495,\n+   497,   499,   504,   506,   509,   513,   518,   523,   525,   526,\n+   527,   528,   529,   530,   531,   534,   539,   545,   547,   550,\n+   553,   555,   559,   561,   564,   591,   593,   597,   610,   612,\n+   616,   623,   624,   626,   636,   641,   656,   660,   663,   666,\n+   669,   671,   673,   675,   679,   681,   683,   685,   689,   691,\n+   693,   700,   706,   711,   715,   718,   722,   724,   727,   729,\n+   730,   731,   735,   737,   738,   740,   745,   748,   758,   761,\n+   763,   767,   770,   777,   783,   791,   793,   795,   797,   799,\n+   803,   805,   809,   816,   817,   821,   824,   826,   828,   830,\n+   832,   834,   836,   838,   845,   848,   850,   859,   861,   865,\n+   870,   875,   879,   884,   886,   888,   895,   897,   899,   903,\n+   906,   908,   912,   914,   915,   920,   925,   931,   939,   946,\n+   949,   952,   956,   959,   963,   972,   974,   976,   981,   988,\n+   996,   998,  1002,  1010,  1021,  1025,  1028,  1031,  1034,  1037,\n+  1040,  1043,  1046,  1048,  1052,  1058,  1063,  1065,  1069,  1072,\n+  1076,  1078,  1081,  1083,  1084,  1086,  1090,  1094,  1100,  1105,\n+  1108,  1110,  1114,  1120,  1124,  1129,  1132,  1136,  1141,  1149,\n+  1151,  1154,  1156,  1158,  1162,  1166,  1169,  1173,  1175,  1176,\n+  1177,  1178,  1179,  1189,  1191,  1192,  1193,  1194,  1197,  1199,\n+  1200,  1201,  1202,  1203,  1204,  1205,  1206,  1207,  1208,  1211,\n+  1216,  1227,  1234,  1238,  1249,  1259,  1265,  1271,  1277,  1279,\n+  1285,  1287,  1293,  1295,  1297,  1299,  1301,  1305,  1307,  1308,\n+  1309,  1310,  1311,  1312,  1315,  1318,  1320,  1322,  1326,  1331,\n+  1336,  1342,  1352,  1358,  1360,  1362,  1369,  1372,  1374,  1376,\n+  1380,  1382,  1385,  1389,  1391,  1394,  1401,  1407,  1409,  1411,\n+  1415,  1423,  1426,  1428,  1430,  1434,  1439,  1448,  1453,  1456,\n+  1463,  1465,  1467,  1471,  1474,  1483,  1490,  1492,  1496,  1509,\n+  1511,  1517,  1523,  1527,  1529,  1533,  1536,  1538,  1542,  1545,\n+  1547,  1549,  1553,  1556,  1558,  1560,  1564,  1567,  1569,  1571,\n+  1575,  1581,  1583,  1587,  1594,  1596,  1598,  1600,  1604,  1612,\n+  1615,  1617,  1619,  1623,  1625,  1632,  1640,  1657,  1659,  1661,\n+  1665,  1671,  1676,  1678,  1681,  1683,  1685,  1687,  1688,  1689,\n+  1690,  1694,  1696,  1698,  1703,  1705,  1707,  1709,  1711,  1715,\n+  1718,  1723,  1725,  1730,  1731,  1732,  1733,  1734,  1736,  1738,\n+  1740,  1742,  1744,  1748,  1750,  1753,  1759,  1764,  1768,  1771,\n+  1773,  1775,  1779,  1781,  1783,  1785,  1789,  1792,  1796,  1802,\n+  1804,  1812,  1839,  1841,  1845,  1850,  1858,  1862,  1865,  1867,\n+  1878,  1889,  1894,  1903,  1905,  1909,  1912,  1914,  1919,  1924,\n+  1929,  1936,  1938,  1939,  1940,  1943,  1948,  1953,  1955,  1956,\n+  1958,  1960,  1961,  1963,  1967,  1970,  1974,  1977,  1981,  1983,\n+  1985,  1987,  1988,  1990,  1994,  2003,  2005,  2007,  2020,  2022,\n+  2028,  2030,  2032,  2036,  2038,  2043,  2048,  2053,  2055,  2057,\n+  2061,  2063,  2068,  2073,  2075,  2079,  2081,  2086,  2091,  2096,\n+  2098,  2100,  2104,  2106,  2111,  2116,  2121,  2126,  2128,  2130,\n+  2132,  2134,  2136,  2140,  2142,  2147,  2152,  2154,  2158,  2160,\n+  2165,  2169,  2171,  2176,  2180,  2182,  2187,  2191,  2193,  2198,\n+  2202,  2204,  2209,  2213,  2215,  2220,  2226,  2228,  2232,  2234,\n+  2237,  2240,  2248,  2250,  2251,  2254,  2256,  2259,  2263\n };\n #endif\n \n@@ -2749,66 +2752,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 442 \"./parse.y\"\n+#line 445 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 486 \"./parse.y\"\n+#line 489 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 491 \"./parse.y\"\n+#line 494 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 493 \"./parse.y\"\n+#line 496 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 495 \"./parse.y\"\n+#line 498 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 497 \"./parse.y\"\n+#line 500 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 512 \"./parse.y\"\n+#line 515 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 521 \"./parse.y\"\n+#line 524 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 533 \"./parse.y\"\n+#line 536 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 537 \"./parse.y\"\n+#line 540 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 549 \"./parse.y\"\n+#line 552 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 551 \"./parse.y\"\n+#line 554 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 553 \"./parse.y\"\n+#line 556 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 563 \"./parse.y\"\n+#line 566 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2836,15 +2839,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 589 \"./parse.y\"\n+#line 592 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 591 \"./parse.y\"\n+#line 594 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 596 \"./parse.y\"\n+#line 599 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2858,40 +2861,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 608 \"./parse.y\"\n+#line 611 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 610 \"./parse.y\"\n+#line 613 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 615 \"./parse.y\"\n+#line 618 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 622 \"./parse.y\"\n+#line 625 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 624 \"./parse.y\"\n+#line 627 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 635 \"./parse.y\"\n+#line 638 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 639 \"./parse.y\"\n+#line 642 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2905,116 +2908,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 655 \"./parse.y\"\n+#line 658 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 657 \"./parse.y\"\n+#line 660 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 661 \"./parse.y\"\n+#line 664 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 663 \"./parse.y\"\n+#line 666 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 667 \"./parse.y\"\n+#line 670 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 669 \"./parse.y\"\n+#line 672 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 671 \"./parse.y\"\n+#line 674 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 673 \"./parse.y\"\n+#line 676 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 677 \"./parse.y\"\n+#line 680 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 679 \"./parse.y\"\n+#line 682 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 681 \"./parse.y\"\n+#line 684 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 683 \"./parse.y\"\n+#line 686 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 687 \"./parse.y\"\n+#line 690 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 689 \"./parse.y\"\n+#line 692 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 691 \"./parse.y\"\n+#line 694 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 699 \"./parse.y\"\n+#line 702 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 704 \"./parse.y\"\n+#line 707 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 709 \"./parse.y\"\n+#line 712 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 714 \"./parse.y\"\n+#line 717 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 716 \"./parse.y\"\n+#line 719 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 729 \"./parse.y\"\n+#line 732 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 736 \"./parse.y\"\n+#line 739 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 738 \"./parse.y\"\n+#line 741 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 744 \"./parse.y\"\n+#line 747 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 746 \"./parse.y\"\n+#line 749 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3024,19 +3027,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 759 \"./parse.y\"\n+#line 762 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 761 \"./parse.y\"\n+#line 764 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 766 \"./parse.y\"\n+#line 769 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 768 \"./parse.y\"\n+#line 771 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3045,101 +3048,101 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 775 \"./parse.y\"\n+#line 778 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 781 \"./parse.y\"\n+#line 784 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 791 \"./parse.y\"\n+#line 794 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 793 \"./parse.y\"\n+#line 796 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 795 \"./parse.y\"\n+#line 798 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 797 \"./parse.y\"\n+#line 800 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 103:\n-#line 808 \"./parse.y\"\n+#line 811 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 813 \"./parse.y\"\n+#line 816 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 105:\n-#line 815 \"./parse.y\"\n+#line 818 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 820 \"./parse.y\"\n+#line 823 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 822 \"./parse.y\"\n+#line 825 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 824 \"./parse.y\"\n+#line 827 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 826 \"./parse.y\"\n+#line 829 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 828 \"./parse.y\"\n+#line 831 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 830 \"./parse.y\"\n+#line 833 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 832 \"./parse.y\"\n+#line 835 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 834 \"./parse.y\"\n+#line 837 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 836 \"./parse.y\"\n+#line 839 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 844 \"./parse.y\"\n+#line 847 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 846 \"./parse.y\"\n+#line 849 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 848 \"./parse.y\"\n+#line 851 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3150,169 +3153,169 @@ case 117:\n \t\t;\n     break;}\n case 118:\n-#line 857 \"./parse.y\"\n+#line 860 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 859 \"./parse.y\"\n+#line 862 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 864 \"./parse.y\"\n+#line 867 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 868 \"./parse.y\"\n+#line 871 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 873 \"./parse.y\"\n+#line 876 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 878 \"./parse.y\"\n+#line 881 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 882 \"./parse.y\"\n+#line 885 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 884 \"./parse.y\"\n+#line 887 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 886 \"./parse.y\"\n+#line 889 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 893 \"./parse.y\"\n+#line 896 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 895 \"./parse.y\"\n+#line 898 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 897 \"./parse.y\"\n+#line 900 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 902 \"./parse.y\"\n+#line 905 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 904 \"./parse.y\"\n+#line 907 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 906 \"./parse.y\"\n+#line 909 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 913 \"./parse.y\"\n+#line 916 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 919 \"./parse.y\"\n+#line 922 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 923 \"./parse.y\"\n+#line 926 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 930 \"./parse.y\"\n+#line 933 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 938 \"./parse.y\"\n+#line 941 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 943 \"./parse.y\"\n+#line 946 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 948 \"./parse.y\"\n+#line 951 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 950 \"./parse.y\"\n+#line 953 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 955 \"./parse.y\"\n+#line 958 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 957 \"./parse.y\"\n+#line 960 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 965 \"./parse.y\"\n+#line 968 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 970 \"./parse.y\"\n+#line 973 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 972 \"./parse.y\"\n+#line 975 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 974 \"./parse.y\"\n+#line 977 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 980 \"./parse.y\"\n+#line 983 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 986 \"./parse.y\"\n+#line 989 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 994 \"./parse.y\"\n+#line 997 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 996 \"./parse.y\"\n+#line 999 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1001 \"./parse.y\"\n+#line 1004 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3321,7 +3324,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 1008 \"./parse.y\"\n+#line 1011 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3330,168 +3333,168 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1020 \"./parse.y\"\n+#line 1023 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1022 \"./parse.y\"\n+#line 1025 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1026 \"./parse.y\"\n+#line 1029 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1028 \"./parse.y\"\n+#line 1031 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1032 \"./parse.y\"\n+#line 1035 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1034 \"./parse.y\"\n+#line 1037 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1038 \"./parse.y\"\n+#line 1041 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1040 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1044 \"./parse.y\"\n+#line 1047 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1046 \"./parse.y\"\n+#line 1049 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1051 \"./parse.y\"\n+#line 1054 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1056 \"./parse.y\"\n+#line 1059 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1061 \"./parse.y\"\n+#line 1064 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1063 \"./parse.y\"\n+#line 1066 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1068 \"./parse.y\"\n+#line 1071 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1070 \"./parse.y\"\n+#line 1073 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1082 \"./parse.y\"\n+#line 1085 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1084 \"./parse.y\"\n+#line 1087 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1093 \"./parse.y\"\n+#line 1096 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1098 \"./parse.y\"\n+#line 1101 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1104 \"./parse.y\"\n+#line 1107 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 181:\n-#line 1106 \"./parse.y\"\n+#line 1109 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 182:\n-#line 1108 \"./parse.y\"\n+#line 1111 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 183:\n-#line 1113 \"./parse.y\"\n+#line 1116 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 184:\n-#line 1118 \"./parse.y\"\n+#line 1121 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 185:\n-#line 1122 \"./parse.y\"\n+#line 1125 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 186:\n-#line 1128 \"./parse.y\"\n+#line 1131 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 187:\n-#line 1130 \"./parse.y\"\n+#line 1133 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 188:\n-#line 1135 \"./parse.y\"\n+#line 1138 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 189:\n-#line 1140 \"./parse.y\"\n+#line 1143 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 193:\n-#line 1154 \"./parse.y\"\n+#line 1157 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 194:\n-#line 1156 \"./parse.y\"\n+#line 1159 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 196:\n-#line 1165 \"./parse.y\"\n+#line 1168 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1167 \"./parse.y\"\n+#line 1170 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 203:\n-#line 1177 \"./parse.y\"\n+#line 1180 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3501,11 +3504,11 @@ case 203:\n \t\t;\n     break;}\n case 220:\n-#line 1210 \"./parse.y\"\n+#line 1213 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 221:\n-#line 1215 \"./parse.y\"\n+#line 1218 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3515,27 +3518,27 @@ case 221:\n \t\t;\n     break;}\n case 222:\n-#line 1226 \"./parse.y\"\n+#line 1229 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 223:\n-#line 1232 \"./parse.y\"\n+#line 1235 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 224:\n-#line 1237 \"./parse.y\"\n+#line 1240 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 225:\n-#line 1248 \"./parse.y\"\n+#line 1251 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3546,105 +3549,105 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1257 \"./parse.y\"\n+#line 1260 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 227:\n-#line 1263 \"./parse.y\"\n+#line 1266 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1269 \"./parse.y\"\n+#line 1272 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1275 \"./parse.y\"\n+#line 1278 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 230:\n-#line 1277 \"./parse.y\"\n+#line 1280 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 231:\n-#line 1283 \"./parse.y\"\n+#line 1286 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 232:\n-#line 1285 \"./parse.y\"\n+#line 1288 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 233:\n-#line 1291 \"./parse.y\"\n+#line 1294 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1293 \"./parse.y\"\n+#line 1296 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1295 \"./parse.y\"\n+#line 1298 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1297 \"./parse.y\"\n+#line 1300 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1299 \"./parse.y\"\n+#line 1302 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 245:\n-#line 1314 \"./parse.y\"\n+#line 1317 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 246:\n-#line 1316 \"./parse.y\"\n+#line 1319 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 247:\n-#line 1318 \"./parse.y\"\n+#line 1321 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 248:\n-#line 1320 \"./parse.y\"\n+#line 1323 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1325 \"./parse.y\"\n+#line 1328 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 250:\n-#line 1330 \"./parse.y\"\n+#line 1333 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1335 \"./parse.y\"\n+#line 1338 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 252:\n-#line 1339 \"./parse.y\"\n+#line 1342 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3655,112 +3658,112 @@ case 252:\n \t\t;\n     break;}\n case 253:\n-#line 1351 \"./parse.y\"\n+#line 1354 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 254:\n-#line 1356 \"./parse.y\"\n+#line 1359 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 255:\n-#line 1358 \"./parse.y\"\n+#line 1361 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 256:\n-#line 1360 \"./parse.y\"\n+#line 1363 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 257:\n-#line 1368 \"./parse.y\"\n+#line 1371 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 258:\n-#line 1370 \"./parse.y\"\n+#line 1373 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1372 \"./parse.y\"\n+#line 1375 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1374 \"./parse.y\"\n+#line 1377 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 266:\n-#line 1393 \"./parse.y\"\n+#line 1396 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 267:\n-#line 1399 \"./parse.y\"\n+#line 1402 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1405 \"./parse.y\"\n+#line 1408 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 269:\n-#line 1407 \"./parse.y\"\n+#line 1410 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 270:\n-#line 1409 \"./parse.y\"\n+#line 1412 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1414 \"./parse.y\"\n+#line 1417 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 272:\n-#line 1422 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 273:\n-#line 1424 \"./parse.y\"\n+#line 1427 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1426 \"./parse.y\"\n+#line 1429 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1428 \"./parse.y\"\n+#line 1431 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1433 \"./parse.y\"\n+#line 1436 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1438 \"./parse.y\"\n+#line 1441 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 278:\n-#line 1447 \"./parse.y\"\n+#line 1450 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 279:\n-#line 1452 \"./parse.y\"\n+#line 1455 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 280:\n-#line 1454 \"./parse.y\"\n+#line 1457 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3769,23 +3772,23 @@ case 280:\n \t\t;\n     break;}\n case 281:\n-#line 1461 \"./parse.y\"\n+#line 1464 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 282:\n-#line 1463 \"./parse.y\"\n+#line 1466 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1465 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1470 \"./parse.y\"\n+#line 1473 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 285:\n-#line 1472 \"./parse.y\"\n+#line 1475 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3794,23 +3797,23 @@ case 285:\n \t\t;\n     break;}\n case 286:\n-#line 1482 \"./parse.y\"\n+#line 1485 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 287:\n-#line 1488 \"./parse.y\"\n+#line 1491 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 288:\n-#line 1490 \"./parse.y\"\n+#line 1493 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 289:\n-#line 1495 \"./parse.y\"\n+#line 1498 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3823,176 +3826,176 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1507 \"./parse.y\"\n+#line 1510 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 291:\n-#line 1509 \"./parse.y\"\n+#line 1512 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 292:\n-#line 1515 \"./parse.y\"\n+#line 1518 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 293:\n-#line 1521 \"./parse.y\"\n+#line 1524 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 294:\n-#line 1525 \"./parse.y\"\n+#line 1528 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 295:\n-#line 1527 \"./parse.y\"\n+#line 1530 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 296:\n-#line 1532 \"./parse.y\"\n+#line 1535 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1534 \"./parse.y\"\n+#line 1537 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1536 \"./parse.y\"\n+#line 1539 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 299:\n-#line 1541 \"./parse.y\"\n+#line 1544 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1543 \"./parse.y\"\n+#line 1546 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 301:\n-#line 1545 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1547 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 303:\n-#line 1552 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1554 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1556 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1558 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1563 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1565 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1567 \"./parse.y\"\n+#line 1570 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1569 \"./parse.y\"\n+#line 1572 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1574 \"./parse.y\"\n+#line 1577 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 312:\n-#line 1579 \"./parse.y\"\n+#line 1582 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1581 \"./parse.y\"\n+#line 1584 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1586 \"./parse.y\"\n+#line 1589 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 315:\n-#line 1592 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 316:\n-#line 1594 \"./parse.y\"\n+#line 1597 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1596 \"./parse.y\"\n+#line 1599 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 318:\n-#line 1598 \"./parse.y\"\n+#line 1601 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1603 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 320:\n-#line 1611 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 321:\n-#line 1613 \"./parse.y\"\n+#line 1616 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1615 \"./parse.y\"\n+#line 1618 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1617 \"./parse.y\"\n+#line 1620 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 325:\n-#line 1623 \"./parse.y\"\n+#line 1626 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 326:\n-#line 1631 \"./parse.y\"\n+#line 1634 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 327:\n-#line 1639 \"./parse.y\"\n+#line 1642 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4010,187 +4013,187 @@ case 327:\n \t\t;\n     break;}\n case 328:\n-#line 1655 \"./parse.y\"\n+#line 1658 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 329:\n-#line 1657 \"./parse.y\"\n+#line 1660 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 330:\n-#line 1659 \"./parse.y\"\n+#line 1662 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 331:\n-#line 1664 \"./parse.y\"\n+#line 1667 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 332:\n-#line 1669 \"./parse.y\"\n+#line 1672 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 336:\n-#line 1681 \"./parse.y\"\n+#line 1684 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 337:\n-#line 1683 \"./parse.y\"\n+#line 1686 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 342:\n-#line 1692 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 343:\n-#line 1694 \"./parse.y\"\n+#line 1697 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 344:\n-#line 1696 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 345:\n-#line 1701 \"./parse.y\"\n+#line 1704 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 346:\n-#line 1703 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 347:\n-#line 1705 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 348:\n-#line 1707 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1709 \"./parse.y\"\n+#line 1712 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1714 \"./parse.y\"\n+#line 1717 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 351:\n-#line 1716 \"./parse.y\"\n+#line 1719 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 352:\n-#line 1721 \"./parse.y\"\n+#line 1724 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 353:\n-#line 1723 \"./parse.y\"\n+#line 1726 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 358:\n-#line 1732 \"./parse.y\"\n+#line 1735 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 359:\n-#line 1734 \"./parse.y\"\n+#line 1737 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 360:\n-#line 1736 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1738 \"./parse.y\"\n+#line 1741 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1740 \"./parse.y\"\n+#line 1743 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1742 \"./parse.y\"\n+#line 1745 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1752 \"./parse.y\"\n+#line 1755 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 367:\n-#line 1757 \"./parse.y\"\n+#line 1760 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 368:\n-#line 1762 \"./parse.y\"\n+#line 1765 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 369:\n-#line 1767 \"./parse.y\"\n+#line 1770 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 370:\n-#line 1769 \"./parse.y\"\n+#line 1772 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1771 \"./parse.y\"\n+#line 1774 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 372:\n-#line 1773 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1777 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 374:\n-#line 1779 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1781 \"./parse.y\"\n+#line 1784 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 376:\n-#line 1783 \"./parse.y\"\n+#line 1786 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 377:\n-#line 1788 \"./parse.y\"\n+#line 1791 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 378:\n-#line 1790 \"./parse.y\"\n+#line 1793 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 379:\n-#line 1795 \"./parse.y\"\n+#line 1798 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 380:\n-#line 1800 \"./parse.y\"\n+#line 1803 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1802 \"./parse.y\"\n+#line 1805 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 382:\n-#line 1811 \"./parse.y\"\n+#line 1814 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4218,19 +4221,19 @@ case 382:\n \t\t;\n     break;}\n case 383:\n-#line 1837 \"./parse.y\"\n+#line 1840 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 384:\n-#line 1839 \"./parse.y\"\n+#line 1842 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1844 \"./parse.y\"\n+#line 1847 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 386:\n-#line 1848 \"./parse.y\"\n+#line 1851 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4240,19 +4243,19 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1856 \"./parse.y\"\n+#line 1859 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 388:\n-#line 1861 \"./parse.y\"\n+#line 1864 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1863 \"./parse.y\"\n+#line 1866 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 390:\n-#line 1865 \"./parse.y\"\n+#line 1868 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4265,7 +4268,7 @@ case 390:\n \t\t;\n     break;}\n case 391:\n-#line 1876 \"./parse.y\"\n+#line 1879 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4278,121 +4281,121 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1887 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 393:\n-#line 1892 \"./parse.y\"\n+#line 1895 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1901 \"./parse.y\"\n+#line 1904 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 395:\n-#line 1903 \"./parse.y\"\n+#line 1906 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1908 \"./parse.y\"\n+#line 1911 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 397:\n-#line 1910 \"./parse.y\"\n+#line 1913 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1912 \"./parse.y\"\n+#line 1915 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 399:\n-#line 1917 \"./parse.y\"\n+#line 1920 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1922 \"./parse.y\"\n+#line 1925 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1927 \"./parse.y\"\n+#line 1930 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 406:\n-#line 1942 \"./parse.y\"\n+#line 1945 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 407:\n-#line 1947 \"./parse.y\"\n+#line 1950 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1954 \"./parse.y\"\n+#line 1957 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 411:\n-#line 1956 \"./parse.y\"\n+#line 1959 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 413:\n-#line 1959 \"./parse.y\"\n+#line 1962 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 414:\n-#line 1961 \"./parse.y\"\n+#line 1964 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1966 \"./parse.y\"\n+#line 1969 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 416:\n-#line 1968 \"./parse.y\"\n+#line 1971 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 1973 \"./parse.y\"\n+#line 1976 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 418:\n-#line 1975 \"./parse.y\"\n+#line 1978 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 1981 \"./parse.y\"\n+#line 1984 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 421:\n-#line 1983 \"./parse.y\"\n+#line 1986 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 423:\n-#line 1986 \"./parse.y\"\n+#line 1989 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 1988 \"./parse.y\"\n+#line 1991 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1993 \"./parse.y\"\n+#line 1996 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4402,15 +4405,15 @@ case 425:\n \t\t;\n     break;}\n case 426:\n-#line 2001 \"./parse.y\"\n+#line 2004 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 2003 \"./parse.y\"\n+#line 2006 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2005 \"./parse.y\"\n+#line 2008 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4425,275 +4428,275 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2018 \"./parse.y\"\n+#line 2021 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 430:\n-#line 2020 \"./parse.y\"\n+#line 2023 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 431:\n-#line 2026 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 432:\n-#line 2028 \"./parse.y\"\n+#line 2031 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2030 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2036 \"./parse.y\"\n+#line 2039 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 436:\n-#line 2041 \"./parse.y\"\n+#line 2044 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 437:\n-#line 2046 \"./parse.y\"\n+#line 2049 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2051 \"./parse.y\"\n+#line 2054 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 2053 \"./parse.y\"\n+#line 2056 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2055 \"./parse.y\"\n+#line 2058 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2061 \"./parse.y\"\n+#line 2064 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 443:\n-#line 2066 \"./parse.y\"\n+#line 2069 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2071 \"./parse.y\"\n+#line 2074 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2073 \"./parse.y\"\n+#line 2076 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 447:\n-#line 2079 \"./parse.y\"\n+#line 2082 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2084 \"./parse.y\"\n+#line 2087 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2089 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2094 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2096 \"./parse.y\"\n+#line 2099 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2098 \"./parse.y\"\n+#line 2101 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2104 \"./parse.y\"\n+#line 2107 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 2109 \"./parse.y\"\n+#line 2112 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2114 \"./parse.y\"\n+#line 2117 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2119 \"./parse.y\"\n+#line 2122 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2124 \"./parse.y\"\n+#line 2127 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 459:\n-#line 2126 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 460:\n-#line 2128 \"./parse.y\"\n+#line 2131 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2130 \"./parse.y\"\n+#line 2133 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2132 \"./parse.y\"\n+#line 2135 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2134 \"./parse.y\"\n+#line 2137 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 465:\n-#line 2140 \"./parse.y\"\n+#line 2143 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 2145 \"./parse.y\"\n+#line 2148 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2150 \"./parse.y\"\n+#line 2153 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 468:\n-#line 2152 \"./parse.y\"\n+#line 2155 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 470:\n-#line 2158 \"./parse.y\"\n+#line 2161 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 2163 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2169 \"./parse.y\"\n+#line 2172 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2174 \"./parse.y\"\n+#line 2177 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2180 \"./parse.y\"\n+#line 2183 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2185 \"./parse.y\"\n+#line 2188 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2191 \"./parse.y\"\n+#line 2194 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2196 \"./parse.y\"\n+#line 2199 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2202 \"./parse.y\"\n+#line 2205 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2207 \"./parse.y\"\n+#line 2210 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2213 \"./parse.y\"\n+#line 2216 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 486:\n-#line 2218 \"./parse.y\"\n+#line 2221 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 487:\n-#line 2224 \"./parse.y\"\n+#line 2227 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 488:\n-#line 2226 \"./parse.y\"\n+#line 2229 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 491:\n-#line 2236 \"./parse.y\"\n+#line 2239 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 492:\n-#line 2238 \"./parse.y\"\n+#line 2241 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4898,7 +4901,7 @@ case 492:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2264 \"./parse.y\"\n+#line 2267 \"./parse.y\"\n \n \f\n \n@@ -9973,9 +9976,11 @@ qualify_ambiguous_name (id)\n \t/* Do one more interation to set things up */\n \tsuper_found = again = 1;\n       }\n-    /* Loop one more time if we're dealing with ?: or a string constant */\n+    /* Loop one more time if we're dealing with ?: or a string\n+       constant, or a convert expression */\n     if (TREE_CODE (qual_wfl) == CONDITIONAL_EXPR\n-\t|| TREE_CODE (qual_wfl) == STRING_CST)\n+\t|| TREE_CODE (qual_wfl) == STRING_CST\n+\t|| TREE_CODE (qual_wfl) == CONVERT_EXPR)\n       {\n \tqual = TREE_CHAIN (qual);\n \tqual_wfl = QUAL_WFL (qual);\n@@ -11284,6 +11289,9 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n      tree dest;\n      int cast;\n {\n+  /* SOURCE or DEST might be null if not from a declared entity. */\n+  if (!source || !dest)\n+    return 0;\n   if (JNULLP_TYPE_P (source))\n     return 1;\n   if (TREE_CODE (source) == POINTER_TYPE)\n@@ -11361,8 +11369,10 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n     {\n       if (TYPE_CLASS_P (dest))\n \treturn dest == object_type_node;\n+      /* Can't cast an array to an interface unless the interface is\n+\t java.lang.Cloneable */\n       if (TYPE_INTERFACE_P (dest))\n-\treturn 0;\t\t/* Install test on Clonable. FIXME */\n+\treturn (DECL_NAME (TYPE_NAME (dest)) == java_lang_cloneable ? 1 : 0);\n       else\t\t\t/* Arrays */\n \t{\n \t  tree source_element_type = TYPE_ARRAY_ELEMENT (source);\n@@ -12310,7 +12320,7 @@ patch_cast (node, wfl_operator)\n   /* The remaining legal casts involve conversion between reference\n      types. Check for their compile time correctness. */\n   if (JREFERENCE_TYPE_P (op_type) && JREFERENCE_TYPE_P (cast_type) \n-      && valid_ref_assignconv_cast_p (cast_type, op_type, 1))\n+      && valid_ref_assignconv_cast_p (op_type, cast_type, 1))\n     {\n       TREE_TYPE (node) = promote_type (cast_type);\n       /* Now, the case can be determined correct at compile time if"}, {"sha": "2a4702d9f94fb5fa5fb565142cbd5a46808ae2a1", "filename": "gcc/java/parse.y", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09ed0f70df0fff76c72c37fb79b61dc35b1c23a9/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=09ed0f70df0fff76c72c37fb79b61dc35b1c23a9", "patch": "@@ -285,6 +285,9 @@ static tree wfl_to_string = NULL_TREE;\n \n /* The \"java.lang\" import qualified name.  */\n static tree java_lang_id = NULL_TREE;\n+\n+/* The \"java.lang.Cloneable\" qualified name.  */\n+static tree java_lang_cloneable = NULL_TREE;\n %}\n \n %union {\n@@ -7335,9 +7338,11 @@ qualify_ambiguous_name (id)\n \t/* Do one more interation to set things up */\n \tsuper_found = again = 1;\n       }\n-    /* Loop one more time if we're dealing with ?: or a string constant */\n+    /* Loop one more time if we're dealing with ?: or a string\n+       constant, or a convert expression */\n     if (TREE_CODE (qual_wfl) == CONDITIONAL_EXPR\n-\t|| TREE_CODE (qual_wfl) == STRING_CST)\n+\t|| TREE_CODE (qual_wfl) == STRING_CST\n+\t|| TREE_CODE (qual_wfl) == CONVERT_EXPR)\n       {\n \tqual = TREE_CHAIN (qual);\n \tqual_wfl = QUAL_WFL (qual);\n@@ -8646,6 +8651,9 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n      tree dest;\n      int cast;\n {\n+  /* SOURCE or DEST might be null if not from a declared entity. */\n+  if (!source || !dest)\n+    return 0;\n   if (JNULLP_TYPE_P (source))\n     return 1;\n   if (TREE_CODE (source) == POINTER_TYPE)\n@@ -8723,8 +8731,10 @@ valid_ref_assignconv_cast_p (source, dest, cast)\n     {\n       if (TYPE_CLASS_P (dest))\n \treturn dest == object_type_node;\n+      /* Can't cast an array to an interface unless the interface is\n+\t java.lang.Cloneable */\n       if (TYPE_INTERFACE_P (dest))\n-\treturn 0;\t\t/* Install test on Clonable. FIXME */\n+\treturn (DECL_NAME (TYPE_NAME (dest)) == java_lang_cloneable ? 1 : 0);\n       else\t\t\t/* Arrays */\n \t{\n \t  tree source_element_type = TYPE_ARRAY_ELEMENT (source);\n@@ -9672,7 +9682,7 @@ patch_cast (node, wfl_operator)\n   /* The remaining legal casts involve conversion between reference\n      types. Check for their compile time correctness. */\n   if (JREFERENCE_TYPE_P (op_type) && JREFERENCE_TYPE_P (cast_type) \n-      && valid_ref_assignconv_cast_p (cast_type, op_type, 1))\n+      && valid_ref_assignconv_cast_p (op_type, cast_type, 1))\n     {\n       TREE_TYPE (node) = promote_type (cast_type);\n       /* Now, the case can be determined correct at compile time if"}]}