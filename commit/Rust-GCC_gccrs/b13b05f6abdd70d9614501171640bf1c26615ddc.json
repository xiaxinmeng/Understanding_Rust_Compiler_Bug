{"sha": "b13b05f6abdd70d9614501171640bf1c26615ddc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEzYjA1ZjZhYmRkNzBkOTYxNDUwMTE3MTY0MGJmMWMyNjYxNWRkYw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-04-17T23:43:46Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-04-17T23:43:46Z"}, "message": "cpplib.c: Rename make_definition to cpp_define.\n\n* cpplib.c:  Rename  make_definition to cpp_define.\n* cpplib.c (special_symbol):  For T_SPECLINE, calculate __LINE__\nin enclosing file buffer, not current buffer (if macro expanding).\n(cpp_get_token):  Fix thinko (in code for chopping unneeded space).\n\nFrom-SVN: r9403", "tree": {"sha": "f592655b3b472ace8c42ba497babe946481f8b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f592655b3b472ace8c42ba497babe946481f8b0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b13b05f6abdd70d9614501171640bf1c26615ddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13b05f6abdd70d9614501171640bf1c26615ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b13b05f6abdd70d9614501171640bf1c26615ddc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13b05f6abdd70d9614501171640bf1c26615ddc/comments", "author": null, "committer": null, "parents": [{"sha": "8229b92217fc4130a8e107b945eaed5db1a481b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8229b92217fc4130a8e107b945eaed5db1a481b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8229b92217fc4130a8e107b945eaed5db1a481b8"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "a05a0c02ef9afbe498e79bfd0cb31ff0e5938a8c", "filename": "gcc/cpplib.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b13b05f6abdd70d9614501171640bf1c26615ddc/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b13b05f6abdd70d9614501171640bf1c26615ddc/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=b13b05f6abdd70d9614501171640bf1c26615ddc", "patch": "@@ -259,7 +259,6 @@ extern char *xmalloc ();\n static void add_import ();\n static void append_include_chain ();\n static void make_undef ();\n-static void make_definition ();\n static void make_assertion ();\n static void path_include ();\n static void initialize_builtins ();\n@@ -614,8 +613,8 @@ cpp_grow_buffer (pfile, n)\n  * be identifier=definition.\n  */\n \n-static void\n-make_definition (pfile, str)\n+void\n+cpp_define (pfile, str)\n      cpp_reader *pfile;\n      U_CHAR *str;\n {\n@@ -2479,9 +2478,8 @@ special_symbol (hp, pfile)\n \n     case T_SPECLINE:\n       {\n-\tlong line = CPP_BUFFER (pfile)->lineno;\n-\tlong col = CPP_BUFFER (pfile)->colno;\n-\tcpp_buffer *ip = CPP_BUFFER (pfile);\n+\tlong line = ip->lineno;\n+\tlong col = ip->colno;\n \tadjust_position (CPP_LINE_BASE (ip), ip->cur, &line, &col);\n \n \tbuf = (char *) alloca (10);\n@@ -5223,7 +5221,7 @@ cpp_get_token (pfile)\n \t       unneeded extra spaces (for the sake of cpp-using tools like\n \t       imake).  Here we remove the space if it is safe to do so. */\n \t    if (pfile->buffer->rlimit - pfile->buffer->cur >= 2\n-\t\t&& pfile->buffer->cur[-1] == ' ')\n+\t\t&& pfile->buffer->rlimit[-1] == ' ')\n \t      {\n \t\tint c1 = pfile->buffer->rlimit[-2];\n \t\tint c2 = CPP_BUF_PEEK (CPP_PREV_BUFFER (CPP_BUFFER (pfile)));\n@@ -5807,7 +5805,7 @@ push_parse_file (pfile, fname)\n \t  *p++= 0;\n \tif (opts->debug_output)\n \t  output_line_command (pfile, 0, same_file);\n-\tmake_definition (pfile, q);\n+\tcpp_define (pfile, q);\n \twhile (*p == ' ' || *p == '\\t')\n \t  p++;\n       } else if (p[0] == '-' && p[1] == 'A') {\n@@ -5880,7 +5878,7 @@ push_parse_file (pfile, fname)\n \t    case 'D':\n \t      if (opts->debug_output)\n \t\toutput_line_command (pfile, 0, same_file);\n-\t      make_definition (pfile, pend->arg);\n+\t      cpp_define (pfile, pend->arg);\n \t      break;\n \t    case 'A':\n \t      make_assertion (pfile, \"-A\", pend->arg);"}]}