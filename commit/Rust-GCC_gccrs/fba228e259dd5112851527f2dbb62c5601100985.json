{"sha": "fba228e259dd5112851527f2dbb62c5601100985", "node_id": "C_kwDOANBUbNoAKGZiYTIyOGUyNTlkZDUxMTI4NTE1MjdmMmRiYjYyYzU2MDExMDA5ODU", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-07T20:39:16Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-07T20:39:16Z"}, "message": "c++: NTTP with array/function type after substitution [PR61355]\n\nWe're performing the [temp.param]/10 adjustment at parse time but not\nalso at substitution time.\n\n\tPR c++/61355\n\ngcc/cp/ChangeLog:\n\n\t* pt.c (convert_template_argument): Perform array/function to\n\tpointer conversion on the substituted type of an NTTP.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.old-deja/g++.pt/nontype5.C: Adjust.\n\t* g++.dg/template/param6.C: New test.", "tree": {"sha": "9a1fbd7f782c54df55ab225ed1be057e3f3b0b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1fbd7f782c54df55ab225ed1be057e3f3b0b8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fba228e259dd5112851527f2dbb62c5601100985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba228e259dd5112851527f2dbb62c5601100985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba228e259dd5112851527f2dbb62c5601100985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba228e259dd5112851527f2dbb62c5601100985/comments", "author": null, "committer": null, "parents": [{"sha": "7f78718b7958f603d50d5c30fd8735d73900bd1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f78718b7958f603d50d5c30fd8735d73900bd1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f78718b7958f603d50d5c30fd8735d73900bd1f"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "009fe6db573f08b792c0a861a3a84024a90b7573", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba228e259dd5112851527f2dbb62c5601100985/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba228e259dd5112851527f2dbb62c5601100985/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fba228e259dd5112851527f2dbb62c5601100985", "patch": "@@ -8530,6 +8530,10 @@ convert_template_argument (tree parm,\n       else\n \tt = tsubst (t, args, complain, in_decl);\n \n+      /* Perform array-to-pointer and function-to-pointer conversion\n+\t as per [temp.param]/10.  */\n+      t = type_decays_to (t);\n+\n       if (invalid_nontype_parm_type_p (t, complain))\n \treturn error_mark_node;\n "}, {"sha": "8306e753d70b4ec5d05c9b9d69f05afaf522fc87", "filename": "gcc/testsuite/g++.dg/template/param6.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba228e259dd5112851527f2dbb62c5601100985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fparam6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba228e259dd5112851527f2dbb62c5601100985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fparam6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fparam6.C?ref=fba228e259dd5112851527f2dbb62c5601100985", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/61355\n+// Verify we perform array-to-pointer and function-to-pointer conversion\n+// on the substituted/deduced type of an NTTP.\n+\n+int f();\n+int p[5];\n+\n+namespace cpp98 {\n+  template<class T, T> struct X;\n+  typedef X<int(), f> ty1;\n+  typedef X<int[5], p> ty2;\n+}\n+\n+namespace cpp11 {\n+#if __cpp_variadic_templates\n+  template<class T, T...> struct X;\n+  using ty1 = X<int(), f>;\n+  using ty2 = X<int[5], p>;\n+#endif\n+}\n+\n+namespace cpp17 {\n+#if __cpp_nontype_template_parameter_auto\n+  template<decltype(auto)> struct X;\n+  using ty1 = X<f>;\n+  using ty2 = X<p>;\n+\n+  template<decltype(auto)...> struct Y;\n+  using ty3 = Y<f>;\n+  using ty4 = Y<p>;\n+#endif\n+}"}, {"sha": "e24dca4362217da6507411f2e897eca4e57a7147", "filename": "gcc/testsuite/g++.old-deja/g++.pt/nontype5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba228e259dd5112851527f2dbb62c5601100985/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba228e259dd5112851527f2dbb62c5601100985/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fnontype5.C?ref=fba228e259dd5112851527f2dbb62c5601100985", "patch": "@@ -19,5 +19,5 @@ static int g() { return f(); }\n int f() { return 0; }\n \n int main() {\n-return B<int,&f>::g();  // { dg-error \"\" } could not convert arg\n+return B<int,&f>::g();\n }"}]}