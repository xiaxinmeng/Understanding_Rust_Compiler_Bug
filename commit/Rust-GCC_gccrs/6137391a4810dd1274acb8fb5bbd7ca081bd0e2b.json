{"sha": "6137391a4810dd1274acb8fb5bbd7ca081bd0e2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzNzM5MWE0ODEwZGQxMjc0YWNiOGZiNWJiZDdjYTA4MWJkMGUyYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-13T04:15:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-13T04:15:20Z"}, "message": "compiler: Fix handling of imported struct with embedded\tbuiltin type.\n\nFrom-SVN: r203496", "tree": {"sha": "4934ec8e54c3f970c6dd299252e3f5e056246c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4934ec8e54c3f970c6dd299252e3f5e056246c46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b/comments", "author": null, "committer": null, "parents": [{"sha": "713b26d0565da191fce4962c9b63a247eacfab9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713b26d0565da191fce4962c9b63a247eacfab9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713b26d0565da191fce4962c9b63a247eacfab9a"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "9917937e4d3ba3abaa3f85642be2a0c93d61aecb", "filename": "gcc/go/gofrontend/import.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b/gcc%2Fgo%2Fgofrontend%2Fimport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b/gcc%2Fgo%2Fgofrontend%2Fimport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.h?ref=6137391a4810dd1274acb8fb5bbd7ca081bd0e2b", "patch": "@@ -149,6 +149,11 @@ class Import\n   location() const\n   { return this->location_; }\n \n+  // Return the package we are importing.\n+  Package*\n+  package() const\n+  { return this->package_; }\n+\n   // Return the next character.\n   int\n   peek_char()"}, {"sha": "40b62f41bc0fbbfa7587434c6f21d6b3f251fdf5", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6137391a4810dd1274acb8fb5bbd7ca081bd0e2b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=6137391a4810dd1274acb8fb5bbd7ca081bd0e2b", "patch": "@@ -5258,6 +5258,19 @@ Struct_type::do_import(Import* imp)\n \t    }\n \t  Type* ftype = imp->read_type();\n \n+\t  // We don't pack the names of builtin types.  In\n+\t  // Struct_field::is_field_name we cope with a hack.  Now we\n+\t  // need another hack so that we don't accidentally think\n+\t  // that an embedded builtin type is accessible from another\n+\t  // package (we know that all the builtin types are not\n+\t  // exported).\n+\t  if (name.empty() && ftype->deref()->named_type() != NULL)\n+\t    {\n+\t      const std::string fn(ftype->deref()->named_type()->name());\n+\t      if (fn[0] >= 'a' && fn[0] <= 'z')\n+\t\tname = '.' + imp->package()->pkgpath() + '.' + fn;\n+\t    }\n+\n \t  Struct_field sf(Typed_identifier(name, ftype, imp->location()));\n \n \t  if (imp->peek_char() == ' ')"}]}