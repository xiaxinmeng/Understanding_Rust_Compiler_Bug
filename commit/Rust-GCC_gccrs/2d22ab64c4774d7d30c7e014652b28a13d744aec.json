{"sha": "2d22ab64c4774d7d30c7e014652b28a13d744aec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQyMmFiNjRjNDc3NGQ3ZDMwYzdlMDE0NjUyYjI4YTEzZDc0NGFlYw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-03-05T17:45:58Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-03-05T17:46:59Z"}, "message": "[AArch32] ACLE intrinsics bfloat16 vmmla and vfma<b/t> for AArch32 AdvSIMD\n\nCommit rest of the 43031fbdda7d4edbd607365a4f3bbec069fe3983 content.\nI screwed up on the \"git add\" commands there.", "tree": {"sha": "9c5abcfedef122844cd09787cc216fdf228431ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c5abcfedef122844cd09787cc216fdf228431ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d22ab64c4774d7d30c7e014652b28a13d744aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d22ab64c4774d7d30c7e014652b28a13d744aec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d22ab64c4774d7d30c7e014652b28a13d744aec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d22ab64c4774d7d30c7e014652b28a13d744aec/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9412b35affa46a18f7e657fb449b449ac9a4a599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9412b35affa46a18f7e657fb449b449ac9a4a599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9412b35affa46a18f7e657fb449b449ac9a4a599"}], "stats": {"total": 164, "additions": 163, "deletions": 1}, "files": [{"sha": "d54a2935639c407e61798adb1a4417dacff5b529", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d22ab64c4774d7d30c7e014652b28a13d744aec", "patch": "@@ -1,3 +1,31 @@\n+2020-03-05  Delia Burduv  <delia.burduv@arm.com>\n+\n+\t* config/arm/arm_neon.h (vbfmmlaq_f32): New.\n+\t(vbfmlalbq_f32): New.\n+\t(vbfmlaltq_f32): New.\n+\t(vbfmlalbq_lane_f32): New.\n+\t(vbfmlaltq_lane_f32): New.\n+\t(vbfmlalbq_laneq_f32): New.\n+\t(vbfmlaltq_laneq_f32): New.\n+\t* config/arm/arm_neon_builtins.def (vmmla): New.\n+\t(vfmab): New.\n+\t(vfmat): New.\n+\t(vfmab_lane): New.\n+\t(vfmat_lane): New.\n+\t(vfmab_laneq): New.\n+\t(vfmat_laneq): New.\n+\t* config/arm/iterators.md (BF_MA): New int iterator.\n+\t(bt): New int attribute.\n+\t(VQXBF): Copy of VQX with V8BF.\n+\t* config/arm/neon.md (neon_vmmlav8bf): New insn.\n+\t(neon_vfma<bt>v8bf): New insn.\n+\t(neon_vfma<bt>_lanev8bf): New insn.\n+\t(neon_vfma<bt>_laneqv8bf): New expand.\n+\t(neon_vget_high<mode>): Changed iterator to VQXBF.\n+\t* config/arm/unspecs.md (UNSPEC_BFMMLA): New UNSPEC.\n+\t(UNSPEC_BFMAB): New UNSPEC.\n+\t(UNSPEC_BFMAT): New UNSPEC.\n+\n 2020-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/93399"}, {"sha": "1974967b171c28b95b21dc27837d7fe69f2d9f64", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=2d22ab64c4774d7d30c7e014652b28a13d744aec", "patch": "@@ -19426,6 +19426,59 @@ vcvtq_high_bf16_f32 (bfloat16x8_t inactive, float32x4_t __a)\n   return __builtin_neon_vbfcvtv4sf_highv8bf (inactive, __a);\n }\n \n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmmlaq_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x8_t __b)\n+{\n+  return __builtin_neon_vmmlav8bf (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmlalbq_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x8_t __b)\n+{\n+  return __builtin_neon_vfmabv8bf (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmlaltq_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x8_t __b)\n+{\n+  return __builtin_neon_vfmatv8bf (__r, __a, __b);\n+}\n+\n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmlalbq_lane_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x4_t __b,\n+\t\t   const int __index)\n+{\n+  return __builtin_neon_vfmab_lanev8bf (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmlaltq_lane_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x4_t __b,\n+\t\t   const int __index)\n+{\n+  return __builtin_neon_vfmat_lanev8bf (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmlalbq_laneq_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x8_t __b,\n+\t\t    const int __index)\n+{\n+  return __builtin_neon_vfmab_laneqv8bf (__r, __a, __b, __index);\n+}\n+\n+__extension__ extern __inline float32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vbfmlaltq_laneq_f32 (float32x4_t __r, bfloat16x8_t __a, bfloat16x8_t __b,\n+\t\t    const int __index)\n+{\n+  return __builtin_neon_vfmat_laneqv8bf (__r, __a, __b, __index);\n+}\n+\n #pragma GCC pop_options\n \n #ifdef __cplusplus"}, {"sha": "38c8bb0b0ebe2c3cc59da629c7630c389ddd8317", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=2d22ab64c4774d7d30c7e014652b28a13d744aec", "patch": "@@ -391,3 +391,12 @@ VAR2 (UNOP, vbfcvt, v4bf, v8bf)\n VAR1 (UNOP, vbfcvt_high, v8bf)\n VAR2 (UNOP, vbfcvtv4sf, v4bf, v8bf)\n VAR1 (BINOP, vbfcvtv4sf_high, v8bf)\n+\n+VAR1 (TERNOP, vmmla, v8bf)\n+\n+VAR1 (TERNOP, vfmab, v8bf)\n+VAR1 (TERNOP, vfmat, v8bf)\n+VAR1 (MAC_LANE, vfmab_lane, v8bf)\n+VAR1 (MAC_LANE, vfmat_lane, v8bf)\n+VAR1 (MAC_LANE, vfmab_laneq, v8bf)\n+VAR1 (MAC_LANE, vfmat_laneq, v8bf)"}, {"sha": "831400192280d892835055174d9daab22ab08c92", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=2d22ab64c4774d7d30c7e014652b28a13d744aec", "patch": "@@ -106,6 +106,9 @@\n ;; Quad-width vector modes plus 64-bit elements.\n (define_mode_iterator VQX [V16QI V8HI V8HF V8BF V4SI V4SF V2DI])\n \n+;; Quad-width vector modes plus 64-bit elements and V8BF.\n+(define_mode_iterator VQXBF [V16QI V8HI V8HF (V8BF \"TARGET_BF16_SIMD\") V4SI V4SF V2DI])\n+\n ;; Quad-width vector modes without floating-point elements.\n (define_mode_iterator VQI [V16QI V8HI V4SI])\n \n@@ -493,6 +496,8 @@\n \n (define_int_iterator MATMUL [UNSPEC_MATMUL_S UNSPEC_MATMUL_U UNSPEC_MATMUL_US])\n \n+(define_int_iterator BF_MA [UNSPEC_BFMAB UNSPEC_BFMAT])\n+\n ;;----------------------------------------------------------------------------\n ;; Mode attributes\n ;;----------------------------------------------------------------------------\n@@ -1209,3 +1214,6 @@\n \t\t\t   ])\n \n (define_int_attr smlaw_op [(UNSPEC_SMLAWB \"smlawb\") (UNSPEC_SMLAWT \"smlawt\")])\n+\n+;; An iterator for VFMA<bt>\n+(define_int_attr bt [(UNSPEC_BFMAB \"b\") (UNSPEC_BFMAT \"t\")])"}, {"sha": "75cc31a0d144724e8e51cb7f05a27e71a77eed25", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 62, "deletions": 1, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=2d22ab64c4774d7d30c7e014652b28a13d744aec", "patch": "@@ -3924,7 +3924,7 @@ if (BYTES_BIG_ENDIAN)\n \n (define_expand \"neon_vget_high<mode>\"\n   [(match_operand:<V_HALF> 0 \"s_register_operand\")\n-   (match_operand:VQX 1 \"s_register_operand\")]\n+   (match_operand:VQXBF 1 \"s_register_operand\")]\n   \"TARGET_NEON\"\n {\n   emit_move_insn (operands[0],\n@@ -6737,3 +6737,64 @@ if (BYTES_BIG_ENDIAN)\n   \"TARGET_BF16_FP\"\n   \"\"\n )\n+\n+(define_insn \"neon_vmmlav8bf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=w\")\n+        (plus:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+                   (unspec:V4SF [(match_operand:V8BF 2 \"register_operand\" \"w\")\n+                                 (match_operand:V8BF 3 \"register_operand\" \"w\")]\n+                    UNSPEC_BFMMLA)))]\n+  \"TARGET_BF16_SIMD\"\n+  \"vmmla.bf16\\\\t%q0, %q2, %q3\"\n+  [(set_attr \"type\" \"neon_fp_mla_s_q\")]\n+)\n+\n+(define_insn \"neon_vfma<bt>v8bf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=w\")\n+        (plus: V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+                    (unspec:V4SF [(match_operand:V8BF 2 \"register_operand\" \"w\")\n+                                  (match_operand:V8BF 3 \"register_operand\" \"w\")]\n+                     BF_MA)))]\n+  \"TARGET_BF16_SIMD\"\n+  \"vfma<bt>.bf16\\\\t%q0, %q2, %q3\"\n+  [(set_attr \"type\" \"neon_fp_mla_s_q\")]\n+)\n+\n+(define_insn \"neon_vfma<bt>_lanev8bf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=w\")\n+        (plus: V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+                    (unspec:V4SF [(match_operand:V8BF 2 \"register_operand\" \"w\")\n+                                  (match_operand:V4BF 3 \"register_operand\" \"x\")\n+                                  (match_operand:SI 4 \"const_int_operand\" \"n\")]\n+                     BF_MA)))]\n+  \"TARGET_BF16_SIMD\"\n+  \"vfma<bt>.bf16\\\\t%q0, %q2, %P3[%c4]\"\n+  [(set_attr \"type\" \"neon_fp_mla_s_scalar_q\")]\n+)\n+\n+(define_expand \"neon_vfma<bt>_laneqv8bf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=w\")\n+        (plus: V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+                    (unspec:V4SF [(match_operand:V8BF 2 \"register_operand\" \"w\")\n+                                  (match_operand:V8BF 3 \"register_operand\" \"x\")\n+                                  (match_operand:SI 4 \"const_int_operand\" \"n\")]\n+                     BF_MA)))]\n+  \"TARGET_BF16_SIMD\"\n+  {\n+    int lane = INTVAL (operands[4]);\n+    gcc_assert (IN_RANGE(lane, 0, 7));\n+    if (lane < 4)\n+    {\n+\temit_insn (gen_neon_vfma<bt>_lanev8bf (operands[0], operands[1], operands[2], operands[3], operands[4]));\n+    }\n+    else\n+      {\n+\trtx op_highpart = gen_reg_rtx (V4BFmode);\n+\temit_insn (gen_neon_vget_highv8bf (op_highpart, operands[3]));\n+\toperands[4] = GEN_INT (lane - 4);\n+\temit_insn (gen_neon_vfma<bt>_lanev8bf (operands[0], operands[1], operands[2], op_highpart, operands[4]));\n+      }\n+    DONE;\n+  }\n+  [(set_attr \"type\" \"neon_fp_mla_s_scalar_q\")]\n+)"}, {"sha": "f0b1f465de4b63d624510783576700519044717d", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d22ab64c4774d7d30c7e014652b28a13d744aec/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=2d22ab64c4774d7d30c7e014652b28a13d744aec", "patch": "@@ -508,4 +508,7 @@\n   UNSPEC_MATMUL_US\n   UNSPEC_BFCVT\n   UNSPEC_BFCVT_HIGH\n+  UNSPEC_BFMMLA\n+  UNSPEC_BFMAB\n+  UNSPEC_BFMAT\n ])"}]}