{"sha": "10cbfb51ac45e6b4e9b11317050834d61d3dd086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBjYmZiNTFhYzQ1ZTZiNGU5YjExMzE3MDUwODM0ZDYxZDNkZDA4Ng==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-03-28T19:19:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-03-28T19:19:23Z"}, "message": "2002-03-27  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n            Paolo Carlini  <pcarlini@unitus.it>\n\n        * testsuite/22_locale/codecvt_members_unicode_wchar_t.cc\n        (test01): Protect the test with _GLIBCPP_USE_WCHAR_T;\n        fix i_lit_base e_lit_base arrays, making them independent\n\tfrom the endianness of the platform; tweak UCS4 to UCS-4BE.\n\nCo-Authored-By: Paolo Carlini <pcarlini@unitus.it>\n\nFrom-SVN: r51521", "tree": {"sha": "76ead759812977c31b61a7fff8ba9880a01e6c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76ead759812977c31b61a7fff8ba9880a01e6c9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10cbfb51ac45e6b4e9b11317050834d61d3dd086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10cbfb51ac45e6b4e9b11317050834d61d3dd086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10cbfb51ac45e6b4e9b11317050834d61d3dd086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10cbfb51ac45e6b4e9b11317050834d61d3dd086/comments", "author": null, "committer": null, "parents": [{"sha": "b8de5050cbe9d296cee16332684b2eb31c277fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8de5050cbe9d296cee16332684b2eb31c277fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8de5050cbe9d296cee16332684b2eb31c277fd6"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "f896097755f3a8ad960d96e0a80868287a9cd2b8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10cbfb51ac45e6b4e9b11317050834d61d3dd086/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10cbfb51ac45e6b4e9b11317050834d61d3dd086/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=10cbfb51ac45e6b4e9b11317050834d61d3dd086", "patch": "@@ -1,3 +1,11 @@\n+2002-03-27  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+            Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* testsuite/22_locale/codecvt_members_unicode_wchar_t.cc\n+\t(test01): Protect the test with _GLIBCPP_USE_WCHAR_T;\n+\tfix i_lit_base e_lit_base arrays, making them independent\n+\tfrom the endianness of the platform; tweak UCS4 to UCS-4BE.\n+\n 2002-03-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/ostream.tcc (ostream::operator<<(_CharT)): Always"}, {"sha": "87a2f05bf6c3fb3b031e56f3678825c7080bc91a", "filename": "libstdc++-v3/testsuite/22_locale/codecvt_members_unicode_wchar_t.cc", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10cbfb51ac45e6b4e9b11317050834d61d3dd086/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_members_unicode_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10cbfb51ac45e6b4e9b11317050834d61d3dd086/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_members_unicode_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt_members_unicode_wchar_t.cc?ref=10cbfb51ac45e6b4e9b11317050834d61d3dd086", "patch": "@@ -26,6 +26,7 @@\n using namespace std;\n \n #ifdef _GLIBCPP_USE___ENC_TRAITS\n+#ifdef _GLIBCPP_USE_WCHAR_T\n \n void\n initialize_state(__enc_traits& state)\n@@ -46,21 +47,27 @@ void test01()\n \n   bool \t\t\ttest = true;\n   int \t\t\tsize = 23;\n-  ext_type \t\te_lit_base[24] = \n-  { 1644167168, 1811939328, 1627389952, 1660944384, 1795162112,  536870912, \n-    1879048192, 1694498816, 1627389952, 1912602624, 1811939328, 536870912, \n-    1778384896, 1627389952, 1929379840, 1828716544, 1761607680, 1845493760, \n-    1694498816, 536870912,  1946157056, 1694498816, 1627389952, 167772160\n+  char  e_lit_base[96] __attribute__((aligned(__alignof__(ext_type)))) =\n+  {\n+    0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x61,\n+    0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x20,\n+    0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x61,\n+    0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x20,\n+    0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x73,\n+    0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x6e,\n+    0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x74,\n+    0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0xa0     \n   };\n-  const ext_type* \te_lit = e_lit_base;\n+  const ext_type* \te_lit = reinterpret_cast<ext_type*>(e_lit_base);\n \n-  int_type \t\ti_lit_base[24] = \n+  char  i_lit_base[48] __attribute__((aligned(__alignof__(int_type)))) = \n   { \n-    0x6200, 0x6c00, 0x6100, 0x6300, 0x6b00, 0x2000, 0x7000, 0x6500, 0x6100, \n-    0x7200, 0x6c00, 0x2000, 0x6a00, 0x6100, 0x7300, 0x6d00, 0x6900, 0x6e00, \n-    0x6500, 0x2000, 0x7400, 0x6500, 0x6100, 0xa000\n+    0x00, 0x62, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x63, 0x00, 0x6b, 0x00, 0x20,\n+    0x00, 0x70, 0x00, 0x65, 0x00, 0x61, 0x00, 0x72, 0x00, 0x6c, 0x00, 0x20,\n+    0x00, 0x6a, 0x00, 0x61, 0x00, 0x73, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x6e,\n+    0x00, 0x65, 0x00, 0x20, 0x00, 0x74, 0x00, 0x65, 0x00, 0x61, 0x00, 0xa0 \n   };\n-  const int_type* \ti_lit = i_lit_base;\n+  const int_type* \ti_lit = reinterpret_cast<int_type*>(i_lit_base);\n \n   const ext_type*       efrom_next;\n   const int_type*       ifrom_next;\n@@ -76,7 +83,7 @@ void test01()\n   const unicode_codecvt&\tcvt = use_facet<unicode_codecvt>(loc); \n \n   // in\n-  unicode_codecvt::state_type state01(\"UCS-2BE\", \"UCS4\", 0xfeff, 0);\n+  unicode_codecvt::state_type state01(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n   initialize_state(state01);\n   result r1 = cvt.in(state01, e_lit, e_lit + size, efrom_next, \n \t\t     i_arr, i_arr + size + 1, ito_next);\n@@ -86,7 +93,7 @@ void test01()\n   VERIFY( ito_next == i_arr + size );\n \n   // out\n-  unicode_codecvt::state_type state02(\"UCS-2BE\", \"UCS4\", 0xfeff, 0);\n+  unicode_codecvt::state_type state02(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n   initialize_state(state02);  \n   result r2 = cvt.out(state02, i_lit, i_lit + size, ifrom_next, \n \t\t       e_arr, e_arr + size, eto_next);\n@@ -97,7 +104,7 @@ void test01()\n \n   // unshift\n   ext_traits::copy(e_arr, e_lit, size);\n-  unicode_codecvt::state_type state03(\"UCS-2BE\", \"UCS4\", 0xfeff, 0);\n+  unicode_codecvt::state_type state03(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n   initialize_state(state03);\n   result r3 = cvt.unshift(state03, e_arr, e_arr + size, eto_next);\n   VERIFY( r3 == codecvt_base::noconv );\n@@ -109,7 +116,7 @@ void test01()\n \n   VERIFY( !cvt.always_noconv() );\n \n-  unicode_codecvt::state_type state04(\"UCS-2BE\", \"UCS4\", 0xfeff, 0);\n+  unicode_codecvt::state_type state04(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n   initialize_state(state04);\n   int j = cvt.length(state03, e_lit, e_lit + size, 5);\n   VERIFY( j == 5 );\n@@ -120,14 +127,16 @@ void test01()\n   delete [] e_arr;\n   delete [] i_arr;\n }\n+#endif // _GLIBCPP_USE_WCHAR_T\n #endif // _GLIBCPP_USE___ENC_TRAITS\n \n int main ()\n {\n-#if _GLIBCPP_USE___ENC_TRAITS\n+#ifdef _GLIBCPP_USE___ENC_TRAITS\n+#ifdef _GLIBCPP_USE_WCHAR_T\n   test01();\n+#endif\n #endif \n-\n   return 0;\n }\n "}]}