{"sha": "2bb16349067f9dd8feea38c3e1d689042bcbebd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJiMTYzNDkwNjdmOWRkOGZlZWEzOGMzZTFkNjg5MDQyYmNiZWJkNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-22T18:13:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-22T18:13:47Z"}, "message": "* expr.c (emit_push_insn): Don't use set_mem_attributes.\n\nFrom-SVN: r85054", "tree": {"sha": "1a475406c5d203858de9159b601f45c99291ef48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a475406c5d203858de9159b601f45c99291ef48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bb16349067f9dd8feea38c3e1d689042bcbebd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb16349067f9dd8feea38c3e1d689042bcbebd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bb16349067f9dd8feea38c3e1d689042bcbebd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb16349067f9dd8feea38c3e1d689042bcbebd7/comments", "author": null, "committer": null, "parents": [{"sha": "312bc27819886e45709545f607ddc8588d8f1f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312bc27819886e45709545f607ddc8588d8f1f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312bc27819886e45709545f607ddc8588d8f1f7f"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "53fdc1d9da8eedbc5ee6027af9116e71bf2709bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb16349067f9dd8feea38c3e1d689042bcbebd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb16349067f9dd8feea38c3e1d689042bcbebd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bb16349067f9dd8feea38c3e1d689042bcbebd7", "patch": "@@ -1,3 +1,7 @@\n+2004-07-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* expr.c (emit_push_insn): Don't use set_mem_attributes.\n+\n 2004-07-22  Richard Henderson  <rth@redhat.com>\n \n \t* tree-ssa-live.c (create_ssa_var_map): Avoid defined-but-not-used"}, {"sha": "d8ab443e91384aa5c9dcc20996ddb3b18aeb11e9", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb16349067f9dd8feea38c3e1d689042bcbebd7/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb16349067f9dd8feea38c3e1d689042bcbebd7/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2bb16349067f9dd8feea38c3e1d689042bcbebd7", "patch": "@@ -3250,16 +3250,11 @@ emit_push_insn (rtx x, enum machine_mode mode, tree type, rtx size,\n \n \t  target = gen_rtx_MEM (BLKmode, temp);\n \n-\t  if (type != 0)\n-\t    {\n-\t      set_mem_attributes (target, type, 1);\n-\t      /* Function incoming arguments may overlap with sibling call\n-\t\t outgoing arguments and we cannot allow reordering of reads\n-\t\t from function arguments with stores to outgoing arguments\n-\t\t of sibling calls.  */\n-\t      set_mem_alias_set (target, 0);\n-\t    }\n-\n+\t  /* We do *not* set_mem_attributes here, because incoming arguments\n+\t     may overlap with sibling call outgoing arguments and we cannot\n+\t     allow reordering of reads from function arguments with stores\n+\t     to outgoing arguments of sibling calls.  We do, however, want\n+\t     to record the alignment of the stack slot.  */\n \t  /* ALIGN may well be better aligned than TYPE, e.g. due to\n \t     PARM_BOUNDARY.  Assume the caller isn't lying.  */\n \t  set_mem_align (target, align);\n@@ -3355,15 +3350,15 @@ emit_push_insn (rtx x, enum machine_mode mode, tree type, rtx size,\n \t    addr = memory_address (mode, gen_rtx_PLUS (Pmode, args_addr,\n \t\t\t\t\t\t       args_so_far));\n \t  dest = gen_rtx_MEM (mode, addr);\n-\t  if (type != 0)\n-\t    {\n-\t      set_mem_attributes (dest, type, 1);\n-\t      /* Function incoming arguments may overlap with sibling call\n-\t\t outgoing arguments and we cannot allow reordering of reads\n-\t\t from function arguments with stores to outgoing arguments\n-\t\t of sibling calls.  */\n-\t      set_mem_alias_set (dest, 0);\n-\t    }\n+\n+\t  /* We do *not* set_mem_attributes here, because incoming arguments\n+\t     may overlap with sibling call outgoing arguments and we cannot\n+\t     allow reordering of reads from function arguments with stores\n+\t     to outgoing arguments of sibling calls.  We do, however, want\n+\t     to record the alignment of the stack slot.  */\n+\t  /* ALIGN may well be better aligned than TYPE, e.g. due to\n+\t     PARM_BOUNDARY.  Assume the caller isn't lying.  */\n+\t  set_mem_align (dest, align);\n \n \t  emit_move_insn (dest, x);\n \t}"}]}