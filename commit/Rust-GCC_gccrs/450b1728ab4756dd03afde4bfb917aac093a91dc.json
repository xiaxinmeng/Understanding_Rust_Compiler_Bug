{"sha": "450b1728ab4756dd03afde4bfb917aac093a91dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwYjE3MjhhYjQ3NTZkZDAzYWZkZTRiZmI5MTdhYWMwOTNhOTFkYw==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2003-10-22T00:18:11Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2003-10-22T00:18:11Z"}, "message": "expr.c (convert_move): Use FLOAT_EXTEND for extensions.\n\n2003-10-21  Eric Christopher  <echristo@redhat.com>\n\n\t* expr.c (convert_move): Use FLOAT_EXTEND for extensions.\n\nFrom-SVN: r72783", "tree": {"sha": "09fa3cba878776305f630dd3ca72be7689fe06d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09fa3cba878776305f630dd3ca72be7689fe06d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/450b1728ab4756dd03afde4bfb917aac093a91dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450b1728ab4756dd03afde4bfb917aac093a91dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450b1728ab4756dd03afde4bfb917aac093a91dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450b1728ab4756dd03afde4bfb917aac093a91dc/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f30e21238aa04db344e1d83146ee8a8af817e0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30e21238aa04db344e1d83146ee8a8af817e0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30e21238aa04db344e1d83146ee8a8af817e0de"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "f123dbac0ff7944140edca209a8c8a0526534b83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b1728ab4756dd03afde4bfb917aac093a91dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b1728ab4756dd03afde4bfb917aac093a91dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=450b1728ab4756dd03afde4bfb917aac093a91dc", "patch": "@@ -1,3 +1,7 @@\n+2003-10-21  Eric Christopher  <echristo@redhat.com>\n+\n+\t* expr.c (convert_move): Use FLOAT_EXTEND for extensions.\n+\n 2003-10-21  Geoffrey Keating  <geoffk@apple.com>\n \n \t* c-pch.c: Add comments in various places."}, {"sha": "cd37495badd66a95405f0aa52296805af3d181f7", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450b1728ab4756dd03afde4bfb917aac093a91dc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450b1728ab4756dd03afde4bfb917aac093a91dc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=450b1728ab4756dd03afde4bfb917aac093a91dc", "patch": "@@ -634,8 +634,10 @@ convert_move (rtx to, rtx from, int unsignedp)\n \t\t\t\t       1, from, from_mode);\n       insns = get_insns ();\n       end_sequence ();\n-      emit_libcall_block (insns, to, value, gen_rtx_FLOAT_TRUNCATE (to_mode,\n-\t\t\t\t\t\t\t\t    from));\n+      emit_libcall_block (insns, to, value,\n+\t\t\t  tab == trunc_optab ? gen_rtx_FLOAT_TRUNCATE (to_mode,\n+\t\t\t\t\t\t\t\t       from)\n+\t\t\t  : gen_rtx_FLOAT_EXTEND (to_mode, from));\n       return;\n     }\n \n@@ -1398,7 +1400,7 @@ block_move_libcall_safe_for_call_parm (void)\n   if (PUSH_ARGS)\n     return true;\n \n-  /* If registers go on the stack anyway, any argument is sure to clobber \n+  /* If registers go on the stack anyway, any argument is sure to clobber\n      an outgoing argument.  */\n #if defined (REG_PARM_STACK_SPACE) && defined (OUTGOING_REG_PARM_STACK_SPACE)\n   {\n@@ -1414,10 +1416,10 @@ block_move_libcall_safe_for_call_parm (void)\n   {\n     CUMULATIVE_ARGS args_so_far;\n     tree fn, arg;\n-    \n+\n     fn = emit_block_move_libcall_fn (false);\n     INIT_CUMULATIVE_ARGS (args_so_far, TREE_TYPE (fn), NULL_RTX, 0);\n-    \n+\n     arg = TYPE_ARG_TYPES (TREE_TYPE (fn));\n     for ( ; arg != void_list_node ; arg = TREE_CHAIN (arg))\n       {\n@@ -1830,7 +1832,7 @@ gen_group_rtx (rtx orig)\n /* Emit code to move a block ORIG_SRC of type TYPE to a block DST,\n    where DST is non-consecutive registers represented by a PARALLEL.\n    SSIZE represents the total size of block ORIG_SRC in bytes, or -1\n-   if not known.  */ \n+   if not known.  */\n \n void\n emit_group_load (rtx dst, rtx orig_src, tree type ATTRIBUTE_UNUSED, int ssize)\n@@ -7106,7 +7108,7 @@ expand_expr (tree exp, rtx target, enum machine_mode tmode,\n \t\t\t\t\t  (TYPE_QUALS (TREE_TYPE (tem))\n \t\t\t\t\t   | TYPE_QUAL_CONST));\n \t\trtx memloc = assign_temp (nt, 1, 1, 1);\n-\t\t\n+\n \t\temit_move_insn (memloc, op0);\n \t\top0 = memloc;\n \t      }\n@@ -9550,7 +9552,7 @@ do_store_flag (tree exp, rtx target, enum machine_mode mode, int only_cheap)\n     {\n       tree type = (*lang_hooks.types.type_for_mode) (mode, unsignedp);\n       return expand_expr (fold_single_bit_test (code == NE ? NE_EXPR : EQ_EXPR,\n-\t\t\t\t\t\targ0, arg1, type), \n+\t\t\t\t\t\targ0, arg1, type),\n \t\t\t  target, VOIDmode, EXPAND_NORMAL);\n     }\n "}]}