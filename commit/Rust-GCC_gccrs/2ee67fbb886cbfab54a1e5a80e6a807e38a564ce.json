{"sha": "2ee67fbb886cbfab54a1e5a80e6a807e38a564ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVlNjdmYmI4ODZjYmZhYjU0YTFlNWE4MGU2YTgwN2UzOGE1NjRjZQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2009-11-20T16:48:28Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2009-11-20T16:48:28Z"}, "message": "arm.h (ASM_OUTPUT_REG_PUSH): Handle STATIC_CHAIN_REGNUM specially for Thumb-1.\n\n\tgcc/\n\t* config/arm/arm.h (ASM_OUTPUT_REG_PUSH): Handle STATIC_CHAIN_REGNUM\n\tspecially for Thumb-1.\n\t(ASM_OUTPUT_REG_POP): Likewise.\n\nFrom-SVN: r154372", "tree": {"sha": "50ab49593d6bb8385a93a2e4d48ddb13830eb008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50ab49593d6bb8385a93a2e4d48ddb13830eb008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10d3a72a808a1daa4a98a8be95a858a0aa053f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d3a72a808a1daa4a98a8be95a858a0aa053f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d3a72a808a1daa4a98a8be95a858a0aa053f3f"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "4a7f32e470869dd77ea76ce9da24fed2f5fd82f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ee67fbb886cbfab54a1e5a80e6a807e38a564ce", "patch": "@@ -1,3 +1,9 @@\n+2009-11-20  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm.h (ASM_OUTPUT_REG_PUSH): Handle STATIC_CHAIN_REGNUM\n+\tspecially for Thumb-1.\n+\t(ASM_OUTPUT_REG_POP): Likewise.\n+\n 2009-11-19  Jason Merrill  <jason@redhat.com>\n \n \t* dwarf2out.c (get_context_die): Take TYPE_MAIN_VARIANT."}, {"sha": "98abdb1ff0b8acc40a2209342781220689ad3310", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee67fbb886cbfab54a1e5a80e6a807e38a564ce/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=2ee67fbb886cbfab54a1e5a80e6a807e38a564ce", "patch": "@@ -2274,24 +2274,44 @@ extern int making_const_table;\n #define ASM_APP_OFF (TARGET_THUMB1 ? \"\\t.code\\t16\\n\" : \\\n \t\t     TARGET_THUMB2 ? \"\\t.thumb\\n\" : \"\")\n \n-/* Output a push or a pop instruction (only used when profiling).  */\n+/* Output a push or a pop instruction (only used when profiling).\n+   We can't push STATIC_CHAIN_REGNUM (r12) directly with Thumb-1.  We know\n+   that ASM_OUTPUT_REG_PUSH will be matched with ASM_OUTPUT_REG_POP, and\n+   that r7 isn't used by the function profiler, so we can use it as a\n+   scratch reg.  WARNING: This isn't safe in the general case!  It may be\n+   sensitive to future changes in final.c:profile_function.  */\n #define ASM_OUTPUT_REG_PUSH(STREAM, REGNO)\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if (TARGET_ARM)\t\t\t\t\t\\\n \tasm_fprintf (STREAM,\"\\tstmfd\\t%r!,{%r}\\n\",\t\\\n \t\t     STACK_POINTER_REGNUM, REGNO);\t\\\n+      else if (TARGET_THUMB1\t\t\t\t\\\n+\t       && (REGNO) == STATIC_CHAIN_REGNUM)\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  asm_fprintf (STREAM, \"\\tpush\\t{r7}\\n\");\t\\\n+\t  asm_fprintf (STREAM, \"\\tmov\\tr7, %r\\n\", REGNO);\\\n+\t  asm_fprintf (STREAM, \"\\tpush\\t{r7}\\n\");\t\\\n+\t}\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\\\n \tasm_fprintf (STREAM, \"\\tpush {%r}\\n\", REGNO);\t\\\n     } while (0)\n \n \n+/* See comment for ASM_OUTPUT_REG_PUSH concerning Thumb-1 issue.  */\n #define ASM_OUTPUT_REG_POP(STREAM, REGNO)\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if (TARGET_ARM)\t\t\t\t\t\\\n \tasm_fprintf (STREAM, \"\\tldmfd\\t%r!,{%r}\\n\",\t\\\n \t\t     STACK_POINTER_REGNUM, REGNO);\t\\\n+      else if (TARGET_THUMB1\t\t\t\t\\\n+\t       && (REGNO) == STATIC_CHAIN_REGNUM)\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  asm_fprintf (STREAM, \"\\tpop\\t{r7}\\n\");\t\\\n+\t  asm_fprintf (STREAM, \"\\tmov\\t%r, r7\\n\", REGNO);\\\n+\t  asm_fprintf (STREAM, \"\\tpop\\t{r7}\\n\");\t\\\n+\t}\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\\\n \tasm_fprintf (STREAM, \"\\tpop {%r}\\n\", REGNO);\t\\\n     } while (0)"}]}