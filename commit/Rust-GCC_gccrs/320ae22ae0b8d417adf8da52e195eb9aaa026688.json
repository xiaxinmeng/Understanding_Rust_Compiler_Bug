{"sha": "320ae22ae0b8d417adf8da52e195eb9aaa026688", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwYWUyMmFlMGI4ZDQxN2FkZjhkYTUyZTE5NWViOWFhYTAyNjY4OA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2007-04-06T09:16:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:16:52Z"}, "message": "g-os_lib.ads (Current_Time): New function.\n\n2007-04-06  Pascal Obry  <obry@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\n\t* g-os_lib.ads (Current_Time): New function. Returns the current\n\tsystem time as an OS_Time value.\n\n\t* s-osprim.ads (Clock): Add more precise definition of UNIX epoch.\n\t(Monotonic_Clock): Same.\n\nFrom-SVN: r123547", "tree": {"sha": "b05c927f2fb13827bb29728a55d2c06716d3d7c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b05c927f2fb13827bb29728a55d2c06716d3d7c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320ae22ae0b8d417adf8da52e195eb9aaa026688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320ae22ae0b8d417adf8da52e195eb9aaa026688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320ae22ae0b8d417adf8da52e195eb9aaa026688", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320ae22ae0b8d417adf8da52e195eb9aaa026688/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c851ddd1c40ec8c1adf8e92ce830e5e22b4a267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c851ddd1c40ec8c1adf8e92ce830e5e22b4a267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c851ddd1c40ec8c1adf8e92ce830e5e22b4a267"}], "stats": {"total": 73, "additions": 39, "deletions": 34}, "files": [{"sha": "f80dde982b4ff1a25bba381c94baa745dd1836df", "filename": "gcc/ada/g-os_lib.ads", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320ae22ae0b8d417adf8da52e195eb9aaa026688/gcc%2Fada%2Fg-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320ae22ae0b8d417adf8da52e195eb9aaa026688/gcc%2Fada%2Fg-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.ads?ref=320ae22ae0b8d417adf8da52e195eb9aaa026688", "patch": "@@ -114,6 +114,9 @@ package GNAT.OS_Lib is\n    subtype Second_Type is Integer range    0 ..   59;\n    --  Declarations similar to those in Calendar, breaking down the time\n \n+   function Current_Time return OS_Time;\n+   --  Return the system clock value as OS_Time\n+\n    function GM_Year    (Date : OS_Time) return Year_Type;\n    function GM_Month   (Date : OS_Time) return Month_Type;\n    function GM_Day     (Date : OS_Time) return Day_Type;\n@@ -131,15 +134,16 @@ package GNAT.OS_Lib is\n    --  to create accesses to any of these functions.\n \n    procedure GM_Split\n-     (Date    : OS_Time;\n-      Year    : out Year_Type;\n-      Month   : out Month_Type;\n-      Day     : out Day_Type;\n-      Hour    : out Hour_Type;\n-      Minute  : out Minute_Type;\n-      Second  : out Second_Type);\n-   --  Analogous to the routine of similar name in Calendar, takes an OS_Time\n-   --  and splits it into its component parts with obvious meanings.\n+     (Date   : OS_Time;\n+      Year   : out Year_Type;\n+      Month  : out Month_Type;\n+      Day    : out Day_Type;\n+      Hour   : out Hour_Type;\n+      Minute : out Minute_Type;\n+      Second : out Second_Type);\n+   --  Analogous to the Split routine in Ada.Calendar, takes an OS_Time\n+   --  and provides a representation of it as a set of component parts,\n+   --  to be interpreted as a date point in UTC.\n \n    ----------------\n    -- File Stuff --\n@@ -836,6 +840,7 @@ package GNAT.OS_Lib is\n private\n    pragma Import (C, Path_Separator, \"__gnat_path_separator\");\n    pragma Import (C, Directory_Separator, \"__gnat_dir_separator\");\n+   pragma Import (C, Current_Time, \"__gnat_current_time\");\n \n    type OS_Time is new Long_Integer;\n    --  Type used for timestamps in the compiler. This type is used to hold"}, {"sha": "917f109ad3bcb1c16db4f63c803d444a75ac2a85", "filename": "gcc/ada/s-osprim.ads", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320ae22ae0b8d417adf8da52e195eb9aaa026688/gcc%2Fada%2Fs-osprim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320ae22ae0b8d417adf8da52e195eb9aaa026688/gcc%2Fada%2Fs-osprim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim.ads?ref=320ae22ae0b8d417adf8da52e195eb9aaa026688", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,49 +45,49 @@ package System.OS_Primitives is\n    Max_Sensible_Delay : constant Duration :=\n                           Duration'Min (183 * 24 * 60 * 60.0,\n                                         Duration'Last);\n-   --  Max of half a year delay, needed to prevent exceptions for large\n-   --  delay values. It seems unlikely that any test will notice this\n-   --  restriction, except in the case of applications setting the clock at\n-   --  at run time (see s-tastim.adb). Also note that a larger value might\n-   --  cause problems (e.g overflow, or more likely OS limitation in the\n-   --  primitives used). In the case where half a year is too long (which\n-   --  occurs in high integrity mode with 32-bit words, and possibly on\n-   --  some specific ports of GNAT), Duration'Last is used instead.\n+   --  Max of half a year delay, needed to prevent exceptions for large delay\n+   --  values. It seems unlikely that any test will notice this restriction,\n+   --  except in the case of applications setting the clock at at run time (see\n+   --  s-tastim.adb). Also note that a larger value might cause problems (e.g\n+   --  overflow, or more likely OS limitation in the primitives used). In the\n+   --  case where half a year is too long (which occurs in high integrity mode\n+   --  with 32-bit words, and possibly on some specific ports of GNAT),\n+   --  Duration'Last is used instead.\n \n    procedure Initialize;\n-   --  Initialize global settings related to this package.\n-   --  This procedure should be called before any other subprograms in\n-   --  this package. Note that this procedure can be called several times.\n+   --  Initialize global settings related to this package. This procedure\n+   --  should be called before any other subprograms in this package. Note\n+   --  that this procedure can be called several times.\n \n    function Clock return Duration;\n    pragma Inline (Clock);\n-   --  Returns \"absolute\" time, represented as an offset\n-   --  relative to \"the Epoch\", which is Jan 1, 1970 on unixes.\n-   --  This implementation is affected by system's clock changes.\n+   --  Returns \"absolute\" time, represented as an offset relative to \"the\n+   --  Epoch\", which is Jan 1, 1970 00:00:00 UTC on UNIX systems. This\n+   --  implementation is affected by system's clock changes.\n \n    function Monotonic_Clock return Duration;\n    pragma Inline (Monotonic_Clock);\n-   --  Returns \"absolute\" time, represented as an offset\n-   --  relative to \"the Epoch\", which is Jan 1, 1970.\n-   --  This clock implementation is immune to the system's clock changes.\n+   --  Returns \"absolute\" time, represented as an offset relative to \"the Unix\n+   --  Epoch\", which is Jan 1, 1970 00:00:00 UTC. This clock implementation is\n+   --  immune to the system's clock changes.\n \n    Relative          : constant := 0;\n    Absolute_Calendar : constant := 1;\n    Absolute_RT       : constant := 2;\n-   --  Values for Mode call below. Note that the compiler (exp_ch9.adb)\n-   --  relies on these values. So any change here must be reflected in\n-   --  corresponding changes in the compiler.\n+   --  Values for Mode call below. Note that the compiler (exp_ch9.adb) relies\n+   --  on these values. So any change here must be reflected in corresponding\n+   --  changes in the compiler.\n \n    procedure Timed_Delay (Time : Duration; Mode : Integer);\n-   --  Implements the semantics of the delay statement when no tasking is\n-   --  used in the application.\n+   --  Implements the semantics of the delay statement when no tasking is used\n+   --  in the application.\n    --\n    --    Mode is one of the three values above\n    --\n    --    Time is a relative or absolute duration value, depending on Mode.\n    --\n-   --  Note that currently Ada.Real_Time always uses the tasking run time, so\n-   --  this procedure should never be called with Mode set to Absolute_RT.\n+   --  Note that currently Ada.Real_Time always uses the tasking run time,\n+   --  so this procedure should never be called with Mode set to Absolute_RT.\n    --  This may change in future or bare board implementations.\n \n end System.OS_Primitives;"}]}