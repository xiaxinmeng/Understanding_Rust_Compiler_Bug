{"sha": "c6e13630ab73f1299d74209c6cf418d50fd752e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZlMTM2MzBhYjczZjEyOTlkNzQyMDljNmNmNDE4ZDUwZmQ3NTJlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-12-04T17:11:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-12-04T17:11:17Z"}, "message": "cp-demangle.c: s/new_abi/v3/.\n\n        * cp-demangle.c: s/new_abi/v3/.\n        * cplus-dem.c: Likewise.\n        (current_demangling_style): Now auto_demangling.\n        (cplus_demangle): Try v3 demangling if AUTO_DEMANGLING.\n        (main): Use standard symbol chars for auto_demangling.\n\nFrom-SVN: r38002", "tree": {"sha": "f36a32b6f50af2213277e6c2ea80bd9ef479bd99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f36a32b6f50af2213277e6c2ea80bd9ef479bd99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6e13630ab73f1299d74209c6cf418d50fd752e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e13630ab73f1299d74209c6cf418d50fd752e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e13630ab73f1299d74209c6cf418d50fd752e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e13630ab73f1299d74209c6cf418d50fd752e9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c55d0e0d7b9ee47499635f7eff232640f5116248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55d0e0d7b9ee47499635f7eff232640f5116248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55d0e0d7b9ee47499635f7eff232640f5116248"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "9a5a13f1f2640f5a8d76f8295cd08b9482166943", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e13630ab73f1299d74209c6cf418d50fd752e9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e13630ab73f1299d74209c6cf418d50fd752e9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c6e13630ab73f1299d74209c6cf418d50fd752e9", "patch": "@@ -1,3 +1,11 @@\n+2000-12-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c: s/new_abi/v3/.\n+\t* cplus-dem.c: Likewise.\n+\t(current_demangling_style): Now auto_demangling.\n+\t(cplus_demangle): Try v3 demangling if AUTO_DEMANGLING.\n+\t(main): Use standard symbol chars for auto_demangling.\t\n+\n 2000-11-26  Mark Mitchell  <mark@codesourcery.com>\n \n \t* hashtab.c (higher_prime_number): Use a table, rather than a"}, {"sha": "5787f74744f47875810651c4870bcf4a65ad1396", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e13630ab73f1299d74209c6cf418d50fd752e9/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e13630ab73f1299d74209c6cf418d50fd752e9/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=c6e13630ab73f1299d74209c6cf418d50fd752e9", "patch": "@@ -1,4 +1,4 @@\n-/* Demangler for IA64 / g++ standard C++ ABI.\n+/* Demangler for IA64 / g++ V3 ABI.\n    Copyright (C) 2000 Free Software Foundation, Inc.\n    Written by Alex Samuel <samuel@codesourcery.com>. \n \n@@ -20,7 +20,7 @@\n */\n \n /* This file implements demangling of C++ names mangled according to\n-   the IA64 / g++ standard C++ ABI.  Use the cp_demangle function to\n+   the IA64 / g++ V3 ABI.  Use the cp_demangle function to\n    demangle a mangled name, or compile with the preprocessor macro\n    STANDALONE_DEMANGLER defined to create a demangling filter\n    executable (functionally similar to c++filt, but includes this\n@@ -3483,7 +3483,7 @@ cp_demangle_type (type_name, result)\n \n extern char *__cxa_demangle PARAMS ((const char *, char *, size_t *, int *));\n \n-/* ABI-mandated entry point in the C++ runtime library for performing\n+/* ia64 ABI-mandated entry point in the C++ runtime library for performing\n    demangling.  MANGLED_NAME is a NUL-terminated character string\n    containing the name to be demangled.  \n \n@@ -3597,7 +3597,7 @@ __cxa_demangle (mangled_name, output_buffer, length, status)\n    If the demangling failes, returns NULL.  */\n \n char *\n-cplus_demangle_new_abi (mangled)\n+cplus_demangle_v3 (mangled)\n      const char* mangled;\n {\n   /* Create a dyn_string to hold the demangled name.  */"}, {"sha": "b88944573ba8c843ceff954f83867fd73fd0da29", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e13630ab73f1299d74209c6cf418d50fd752e9/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e13630ab73f1299d74209c6cf418d50fd752e9/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=c6e13630ab73f1299d74209c6cf418d50fd752e9", "patch": "@@ -101,7 +101,7 @@ mystrstr (s1, s2)\n #define CPLUS_MARKER '$'\n #endif\n \n-enum demangling_styles current_demangling_style = gnu_demangling;\n+enum demangling_styles current_demangling_style = auto_demangling;\n \n static char cplus_markers[] = { CPLUS_MARKER, '.', '$', '\\0' };\n \n@@ -294,9 +294,9 @@ struct demangler_engine libiberty_demanglers[] =\n   }\n   ,\n   {\n-    GNU_NEW_ABI_DEMANGLING_STYLE_STRING,\n-    gnu_new_abi_demangling,\n-    \"GNU (g++) new-ABI-style demangling\"\n+    GNU_V3_DEMANGLING_STYLE_STRING,\n+    gnu_v3_demangling,\n+    \"GNU (g++) V3 ABI-style demangling\"\n   }\n   ,\n   {\n@@ -913,9 +913,13 @@ cplus_demangle (mangled, options)\n   if ((work->options & DMGL_STYLE_MASK) == 0)\n     work->options |= (int) current_demangling_style & DMGL_STYLE_MASK;\n \n-  /* The new-ABI demangling is implemented elsewhere.  */\n-  if (GNU_NEW_ABI_DEMANGLING)\n-    return cplus_demangle_new_abi (mangled);\n+  /* The V3 ABI demangling is implemented elsewhere.  */\n+  if (GNU_V3_DEMANGLING || AUTO_DEMANGLING)\n+    {\n+      ret = cplus_demangle_v3 (mangled);\n+      if (ret || GNU_V3_DEMANGLING)\n+\treturn ret;\n+    }\n \n   if (GNAT_DEMANGLING)\n     return ada_demangle(mangled,options);\n@@ -4968,7 +4972,7 @@ static const char *\n hp_symbol_characters PARAMS ((void));\n \n static const char *\n-gnu_new_abi_symbol_characters PARAMS ((void));\n+gnu_v3_symbol_characters PARAMS ((void));\n \n /* Return the string of non-alnum characters that may occur \n    as a valid symbol component, in the standard assembler symbol\n@@ -5019,11 +5023,11 @@ hp_symbol_characters ()\n \n \n /* Return the string of non-alnum characters that may occur \n-   as a valid symbol component in the GNU standard C++ ABI mangling\n+   as a valid symbol component in the GNU C++ V3 ABI mangling\n    scheme.  */\n \n static const char *\n-gnu_new_abi_symbol_characters ()\n+gnu_v3_symbol_characters ()\n {\n   return \"_$.\";\n }\n@@ -5100,13 +5104,14 @@ main (argc, argv)\n \tcase java_demangling:\n \tcase edg_demangling:\n \tcase gnat_demangling:\n+\tcase auto_demangling:\n \t  valid_symbols = standard_symbol_characters ();\n \t  break;\n \tcase hp_demangling:\n \t  valid_symbols = hp_symbol_characters ();\n \t  break;\n-\tcase gnu_new_abi_demangling:\n-\t  valid_symbols = gnu_new_abi_symbol_characters ();\n+\tcase gnu_v3_demangling:\n+\t  valid_symbols = gnu_v3_symbol_characters ();\n \t  break;\n \tdefault:\n \t  /* Folks should explicitly indicate the appropriate alphabet for"}]}