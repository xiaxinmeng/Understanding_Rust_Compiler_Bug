{"sha": "da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGExYzIzZGQ2ZjUzYmE5NTVmMmIwYWVmYzAwZmY2NmJiYmNmYjExZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:05:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:05:15Z"}, "message": "[multiple changes]\n\n2013-04-11  Doug Rupp  <rupp@adacore.com>\n\n\t* gnatlink.adb: Fold program basename to lower case on VMS for\n\tconsistency.\n\n2013-04-11  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-rbtgbo.adb (Generic_Equal): Initialize Result variable before\n\tentering loop.\n\n2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n\n\t* xgnatugn.adb: Remove dead code (handling of @ifset/@ifclear).\n\n2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_ugn.texi: Remove some use of ifset in menus. Not strictly\n\tneeded, and seems to confuse some versions of makeinfo.\n\n2013-04-11  Javier Miranda  <miranda@adacore.com>\n\n\t* einfo.adb (Is_Thunk): Remove assertion.\n\t(Set_Is_Thunk): Add assertion.\n\t* einfo.ads (Is_Thunk): Complete documentation.\n\t* exp_ch11.adb (Expand_N_Handled_Sequence_Of_Statements): Code cleanup.\n\t* exp_ch3.ad[sb] (Is_Variable_Size_Array): Moved to sem_util\n\t(Is_Variable_Size_Record): Moved to sem_util\n\t* exp_ch6.adb (Expand_Call): Code cleanup.\n\t(Expand_N_Extended_Return_Statement): Code cleanup.\n\t(Expand_Simple_Function_Return): Code cleanup.\n\t* exp_disp.adb Remove dependency on exp_ch3\n\t(Expand_Interface_Thunk): Add minimum decoration needed to set\n\tattribute Is_Thunk.\n\t* sem_ch3.ad[sb] (Is_Constant_Bound): moved to sem_util\n\t* sem_util.ad[sb] (Is_Constant_Bound): Moved from\n\tsem_ch3 (Is_Variable_Size_Array): Moved from exp_ch3\n\t(Is_Variable_Size_Record): Moved from exp_ch3\n\nFrom-SVN: r197787", "tree": {"sha": "586696a09f1e8fd2562fd8e4f69f74541094b414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/586696a09f1e8fd2562fd8e4f69f74541094b414"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/comments", "author": null, "committer": null, "parents": [{"sha": "f6f4d8d407733c8f274b4cb5a998cf1a9548d3bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f4d8d407733c8f274b4cb5a998cf1a9548d3bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f4d8d407733c8f274b4cb5a998cf1a9548d3bf"}], "stats": {"total": 662, "additions": 207, "deletions": 455}, "files": [{"sha": "232c8181d65a4c5caacb9d95f669eb88bd1f53d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -1,3 +1,41 @@\n+2013-04-11  Doug Rupp  <rupp@adacore.com>\n+\n+\t* gnatlink.adb: Fold program basename to lower case on VMS for\n+\tconsistency.\n+\n+2013-04-11  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-rbtgbo.adb (Generic_Equal): Initialize Result variable before\n+\tentering loop.\n+\n+2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* xgnatugn.adb: Remove dead code (handling of @ifset/@ifclear).\n+\n+2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_ugn.texi: Remove some use of ifset in menus. Not strictly\n+\tneeded, and seems to confuse some versions of makeinfo.\n+\n+2013-04-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* einfo.adb (Is_Thunk): Remove assertion.\n+\t(Set_Is_Thunk): Add assertion.\n+\t* einfo.ads (Is_Thunk): Complete documentation.\n+\t* exp_ch11.adb (Expand_N_Handled_Sequence_Of_Statements): Code cleanup.\n+\t* exp_ch3.ad[sb] (Is_Variable_Size_Array): Moved to sem_util\n+\t(Is_Variable_Size_Record): Moved to sem_util\n+\t* exp_ch6.adb (Expand_Call): Code cleanup.\n+\t(Expand_N_Extended_Return_Statement): Code cleanup.\n+\t(Expand_Simple_Function_Return): Code cleanup.\n+\t* exp_disp.adb Remove dependency on exp_ch3\n+\t(Expand_Interface_Thunk): Add minimum decoration needed to set\n+\tattribute Is_Thunk.\n+\t* sem_ch3.ad[sb] (Is_Constant_Bound): moved to sem_util\n+\t* sem_util.ad[sb] (Is_Constant_Bound): Moved from\n+\tsem_ch3 (Is_Variable_Size_Array): Moved from exp_ch3\n+\t(Is_Variable_Size_Record): Moved from exp_ch3\n+\n 2013-04-11  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch11.adb (Expand_N_Handled_Sequence_Of_Statements): Do"}, {"sha": "d6df756e36341bc82f268609479950c98fcd2016", "filename": "gcc/ada/a-rbtgbo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -637,6 +637,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n \n       L_Node := Left.First;\n       R_Node := Right.First;\n+      Result := True;\n       while L_Node /= 0 loop\n          if not Is_Equal (Left.Nodes (L_Node), Right.Nodes (R_Node)) then\n             Result := False;"}, {"sha": "cd384516b18bb8abe6bab532e6baee5f173a16e0", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -2271,7 +2271,6 @@ package body Einfo is\n \n    function Is_Thunk (Id : E) return B is\n    begin\n-      pragma Assert (Is_Subprogram (Id));\n       return Flag225 (Id);\n    end Is_Thunk;\n \n@@ -4880,6 +4879,7 @@ package body Einfo is\n \n    procedure Set_Is_Thunk (Id : E; V : B := True) is\n    begin\n+      pragma Assert (Is_Subprogram (Id));\n       Set_Flag225 (Id, V);\n    end Set_Is_Thunk;\n "}, {"sha": "6b56b9e45e1afeb102a1239b65d72d53174bdd07", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -2843,14 +2843,17 @@ package Einfo is\n --       Applies to all entities. True for task types and subtypes\n \n --    Is_Thunk (Flag225)\n---       Defined in all entities for subprograms (functions, procedures, and\n---       operators). True for subprograms that are thunks, that is small\n---       subprograms built by the expander for tagged types that cover\n---       interface types. At run-time thunks displace the pointer to the object\n---       (pointer named \"this\" in the C++ terminology) from a secondary\n---       dispatch table to the primary dispatch table associated with a given\n---       tagged type. Set by Expand_Interface_Thunk and used by Expand_Call to\n---       handle extra actuals associated with accessibility level.\n+--       Applies to all entities. True for subprograms that are thunks: that is\n+--       small subprograms built by the expander for tagged types that cover\n+--       interface types. As part of the runtime call to an interface, thunks\n+--       displace the pointer to the object (pointer named \"this\" in the C++\n+--       terminology) from a secondary dispatch table to the primary dispatch\n+--       table associated with a given tagged type; if the thunk is a function\n+--       that returns an object which covers an interface type then the thunk\n+--       displaces the pointer to the object from the primary dispatch table to\n+--       the secondary dispatch table associated with the interface type. Set\n+--       by Expand_Interface_Thunk and used by Expand_Call to handle extra\n+--       actuals associated with accessibility level.\n \n --    Is_Trivial_Subprogram (Flag235)\n --       Defined in all entities. Set in subprograms where either the body"}, {"sha": "2f2506918e840e60f77d5e7bfeb6edc675c77554", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -1410,8 +1410,7 @@ package body Exp_Ch11 is\n         --  No cleanup action needed in thunks associated with interfaces\n         --  because they only displace the pointer to the object.\n \n-        and then not (Is_Subprogram (Current_Scope)\n-                       and then Is_Thunk (Current_Scope))\n+        and then not Is_Thunk (Current_Scope)\n       then\n          Expand_Cleanup_Actions (Parent (N));\n       else"}, {"sha": "5637c2ff754622b95a3a62a0151db5d1828ff40c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -229,9 +229,6 @@ package body Exp_Ch3 is\n    function Is_User_Defined_Equality (Prim : Node_Id) return Boolean;\n    --  Returns true if Prim is a user defined equality function\n \n-   function Is_Variable_Size_Array (E : Entity_Id) return Boolean;\n-   --  Returns true if E has variable size components\n-\n    function Make_Eq_Body\n      (Typ     : Entity_Id;\n       Eq_Name : Name_Id) return Node_Id;\n@@ -8311,69 +8308,6 @@ package body Exp_Ch3 is\n         and then Base_Type (Etype (Prim)) = Standard_Boolean;\n    end Is_User_Defined_Equality;\n \n-   ----------------------------\n-   -- Is_Variable_Size_Array --\n-   ----------------------------\n-\n-   function Is_Variable_Size_Array (E : Entity_Id) return Boolean is\n-      Idx : Node_Id;\n-\n-   begin\n-      pragma Assert (Is_Array_Type (E));\n-\n-      --  Check if some index is initialized with a non-constant value\n-\n-      Idx := First_Index (E);\n-      while Present (Idx) loop\n-         if Nkind (Idx) = N_Range then\n-            if not Is_Constant_Bound (Low_Bound (Idx))\n-              or else not Is_Constant_Bound (High_Bound (Idx))\n-            then\n-               return True;\n-            end if;\n-         end if;\n-\n-         Idx := Next_Index (Idx);\n-      end loop;\n-\n-      return False;\n-   end Is_Variable_Size_Array;\n-\n-   -----------------------------\n-   -- Is_Variable_Size_Record --\n-   -----------------------------\n-\n-   function Is_Variable_Size_Record (E : Entity_Id) return Boolean is\n-      Comp     : Entity_Id;\n-      Comp_Typ : Entity_Id;\n-\n-   begin\n-      pragma Assert (Is_Record_Type (E));\n-\n-      Comp := First_Entity (E);\n-      while Present (Comp) loop\n-         Comp_Typ := Etype (Comp);\n-\n-         --  Recursive call if the record type has discriminants\n-\n-         if Is_Record_Type (Comp_Typ)\n-           and then Has_Discriminants (Comp_Typ)\n-           and then Is_Variable_Size_Record (Comp_Typ)\n-         then\n-            return True;\n-\n-         elsif Is_Array_Type (Comp_Typ)\n-           and then Is_Variable_Size_Array (Comp_Typ)\n-         then\n-            return True;\n-         end if;\n-\n-         Next_Entity (Comp);\n-      end loop;\n-\n-      return False;\n-   end Is_Variable_Size_Record;\n-\n    ----------------------------------------\n    -- Make_Controlling_Function_Wrappers --\n    ----------------------------------------"}, {"sha": "de767fcaa6b31db8aea2a01839c79d1ee38015f7", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -104,9 +104,6 @@ package Exp_Ch3 is\n    --  then tags components located at variable positions of Target are\n    --  initialized.\n \n-   function Is_Variable_Size_Record (E : Entity_Id) return Boolean;\n-   --  Returns true if E has variable size components (move to sem_util???)\n-\n    function Needs_Simple_Initialization\n      (T           : Entity_Id;\n       Consider_IS : Boolean := True) return Boolean;"}, {"sha": "eccdf211d0367fb9adb4bae5ea21bf282480e6a8", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -2691,9 +2691,7 @@ package body Exp_Ch6 is\n             --  Ada 2005 (AI-251): Thunks must propagate the extra actuals of\n             --  accessibility levels.\n \n-            if Ekind (Current_Scope) in Subprogram_Kind\n-              and then Is_Thunk (Current_Scope)\n-            then\n+            if Is_Thunk (Current_Scope) then\n                declare\n                   Parm_Ent : Entity_Id;\n \n@@ -5493,8 +5491,7 @@ package body Exp_Ch6 is\n       --  the pointer to the object) they are always handled by means of\n       --  simple return statements.\n \n-      pragma Assert (not Is_Subprogram (Current_Scope)\n-                      or else not Is_Thunk (Current_Scope));\n+      pragma Assert (not Is_Thunk (Current_Scope));\n \n       if Nkind (Ret_Obj_Decl) = N_Object_Declaration then\n          Exp := Expression (Ret_Obj_Decl);\n@@ -7144,8 +7141,7 @@ package body Exp_Ch6 is\n          --  handled by means of simple return statements. This leaves their\n          --  expansion simple and clean.\n \n-        and then not (Is_Subprogram (Current_Scope)\n-                       and then Is_Thunk (Current_Scope))\n+        and then not Is_Thunk (Current_Scope)\n       then\n          declare\n             Return_Object_Entity : constant Entity_Id :=\n@@ -7225,8 +7221,7 @@ package body Exp_Ch6 is\n       --  the object is returned by reference and the maximum functionality\n       --  required is just to displace the pointer.\n \n-      elsif Is_Subprogram (Current_Scope)\n-        and then Is_Thunk (Current_Scope)\n+      elsif Is_Thunk (Current_Scope)\n         and then Is_Interface (Exptyp)\n       then\n          null;"}, {"sha": "52047d7f876075aaef6f277566f23c3a9ad7d60c", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -30,7 +30,6 @@ with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n with Exp_Atag; use Exp_Atag;\n-with Exp_Ch3;  use Exp_Ch3;\n with Exp_Ch6;  use Exp_Ch6;\n with Exp_CG;   use Exp_CG;\n with Exp_Dbug; use Exp_Dbug;\n@@ -1884,6 +1883,7 @@ package body Exp_Disp is\n       end loop;\n \n       Thunk_Id := Make_Temporary (Loc, 'T');\n+      Set_Ekind (Thunk_Id, Ekind (Prim));\n       Set_Is_Thunk (Thunk_Id);\n       Set_Convention (Thunk_Id, Convention (Prim));\n "}, {"sha": "6d6376a717edb21e4fd687be88b20f061250214e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -212,10 +212,8 @@ AdaCore@*\n * Conditional Compilation::\n * Inline Assembler::\n * Compatibility and Porting Guide::\n-@ifset unw\n * Microsoft Windows Topics::\n * Mac OS Topics::\n-@end ifset\n * GNU Free Documentation License::\n * Index::\n \n@@ -652,7 +650,6 @@ Compatibility and Porting Guide\n * Transitioning to 64-Bit GNAT for OpenVMS::\n @end ifset\n \n-@ifset unw\n Microsoft Windows Topics\n \n @ifclear FSFEDITION\n@@ -675,7 +672,6 @@ Microsoft Windows Topics\n Mac OS Topics\n \n * Codesigning the Debugger::\n-@end ifset\n \n * Index::\n @end menu\n@@ -29083,7 +29079,6 @@ without sacrificing the capabilities of the 64-bit architecture.\n @end ifset\n \n @c ************************************************\n-@ifset unw\n @node Microsoft Windows Topics\n @appendix Microsoft Windows Topics\n @cindex Windows NT\n@@ -31203,8 +31198,6 @@ codesign -f -s  \"gdb-cert\"  <gnat_install_prefix>/bin/gdb\n name chosen above, and <gnat_install_prefix> should be replaced by\n the location where you installed GNAT.\n \n-@end ifset\n-\n @c **********************************\n @c * GNU Free Documentation License *\n @c **********************************"}, {"sha": "503c2f7b15263e7120e97187a1c30b4f979e7af7", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -153,6 +153,8 @@ procedure Gnatlink is\n    Binder_Ali_File      : String_Access;\n    Binder_Obj_File      : String_Access;\n \n+   Base_Command_Name    : String_Access;\n+\n    Tname    : Temp_File_Name;\n    Tname_FD : File_Descriptor := Invalid_FD;\n    --  Temporary file used by linker to pass list of object files on\n@@ -226,6 +228,12 @@ procedure Gnatlink is\n    procedure Process_Binder_File (Name : String);\n    --  Reads the binder file and extracts linker arguments\n \n+   function To_Lower (A : Character) return Character;\n+   --  Fold a character to lower case;\n+\n+   procedure To_Lower (A : in out String);\n+   --  Fold a string to lower case;\n+\n    procedure Usage;\n    --  Display usage\n \n@@ -314,7 +322,7 @@ procedure Gnatlink is\n \n    procedure Error_Msg (Message : String) is\n    begin\n-      Write_Str (Base_Name (Command_Name));\n+      Write_Str (Base_Command_Name.all);\n       Write_Str (\": \");\n       Write_Str (Message);\n       Write_Eol;\n@@ -1406,14 +1414,39 @@ procedure Gnatlink is\n       Status := fclose (Fd);\n    end Process_Binder_File;\n \n+   --------------\n+   -- To_Lower --\n+   --------------\n+\n+   function To_Lower (A : Character) return Character is\n+      A_Val : constant Natural := Character'Pos (A);\n+\n+   begin\n+      if A in 'A' .. 'Z'\n+        or else A_Val in 16#C0# .. 16#D6#\n+        or else A_Val in 16#D8# .. 16#DE#\n+      then\n+         return Character'Val (A_Val + 16#20#);\n+      else\n+         return A;\n+      end if;\n+   end To_Lower;\n+\n+   procedure To_Lower (A : in out String) is\n+   begin\n+      for J in A'Range loop\n+         A (J) := To_Lower (A (J));\n+      end loop;\n+   end To_Lower;\n+\n    -----------\n    -- Usage --\n    -----------\n \n    procedure Usage is\n    begin\n       Write_Str (\"Usage: \");\n-      Write_Str (Base_Name (Command_Name));\n+      Write_Str (Base_Command_Name.all);\n       Write_Str (\" switches mainprog.ali [non-Ada-objects] [linker-options]\");\n       Write_Eol;\n       Write_Eol;\n@@ -1501,6 +1534,15 @@ begin\n       end;\n    end if;\n \n+   Base_Command_Name := new String'(Base_Name (Command_Name));\n+\n+   --  Fold to lower case \"GNATLINK\" on VMS to be consistent with output\n+   --  from other GNAT utilities.\n+\n+   if Hostparm.OpenVMS then\n+      To_Lower (Base_Command_Name.all);\n+   end if;\n+\n    Process_Args;\n \n    if Argument_Count = 0\n@@ -1737,7 +1779,7 @@ begin\n \n    --  Assume this is a cross tool if the executable name is not gnatlink\n \n-   if Base_Name (Command_Name) = \"gnatlink\"\n+   if Base_Command_Name.all = \"gnatlink\"\n      and then Output_File_Name.all = \"test\"\n    then\n       Error_Msg (\"warning: executable name \"\"\" & Output_File_Name.all"}, {"sha": "fc74beeb5e6b572ce5e4728ca38539a96434606a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -16331,31 +16331,6 @@ package body Sem_Ch3 is\n       return Assoc_List;\n    end Inherit_Components;\n \n-   -----------------------\n-   -- Is_Constant_Bound --\n-   -----------------------\n-\n-   function Is_Constant_Bound (Exp : Node_Id) return Boolean is\n-   begin\n-      if Compile_Time_Known_Value (Exp) then\n-         return True;\n-\n-      elsif Is_Entity_Name (Exp)\n-        and then Present (Entity (Exp))\n-      then\n-         return Is_Constant_Object (Entity (Exp))\n-           or else Ekind (Entity (Exp)) = E_Enumeration_Literal;\n-\n-      elsif Nkind (Exp) in N_Binary_Op then\n-         return Is_Constant_Bound (Left_Opnd (Exp))\n-           and then Is_Constant_Bound (Right_Opnd (Exp))\n-           and then Scope (Entity (Exp)) = Standard_Standard;\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_Constant_Bound;\n-\n    -----------------------\n    -- Is_Null_Extension --\n    -----------------------"}, {"sha": "a0b37ea0a5bd4b82716f560f85267428869fefe2", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -174,12 +174,6 @@ package Sem_Ch3 is\n    --  Given a discriminant somewhere in the Typ_For_Constraint tree and a\n    --  Constraint, return the value of that discriminant.\n \n-   function Is_Constant_Bound (Exp : Node_Id) return Boolean;\n-   --  Exp is the expression for an array bound. Determines whether the\n-   --  bound is a compile-time known value, or a constant entity, or an\n-   --  enumeration literal, or an expression composed of constant-bound\n-   --  subexpressions which are evaluated by means of standard operators.\n-\n    function Is_Null_Extension (T : Entity_Id) return Boolean;\n    --  Returns True if the tagged type T has an N_Full_Type_Declaration that\n    --  is a null extension, meaning that it has an extension part without any"}, {"sha": "6cba06018646accbe7ed97caaa52cf3a02f451da", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -7747,6 +7747,31 @@ package body Sem_Util is\n                or else Is_Task_Interface (T));\n    end Is_Concurrent_Interface;\n \n+   -----------------------\n+   -- Is_Constant_Bound --\n+   -----------------------\n+\n+   function Is_Constant_Bound (Exp : Node_Id) return Boolean is\n+   begin\n+      if Compile_Time_Known_Value (Exp) then\n+         return True;\n+\n+      elsif Is_Entity_Name (Exp)\n+        and then Present (Entity (Exp))\n+      then\n+         return Is_Constant_Object (Entity (Exp))\n+           or else Ekind (Entity (Exp)) = E_Enumeration_Literal;\n+\n+      elsif Nkind (Exp) in N_Binary_Op then\n+         return Is_Constant_Bound (Left_Opnd (Exp))\n+           and then Is_Constant_Bound (Right_Opnd (Exp))\n+           and then Scope (Entity (Exp)) = Standard_Standard;\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Constant_Bound;\n+\n    --------------------------------------\n    -- Is_Controlling_Limited_Procedure --\n    --------------------------------------\n@@ -9481,6 +9506,69 @@ package body Sem_Util is\n         and then Get_Name_String (Chars (T)) = \"valuetype\";\n    end Is_Value_Type;\n \n+   ----------------------------\n+   -- Is_Variable_Size_Array --\n+   ----------------------------\n+\n+   function Is_Variable_Size_Array (E : Entity_Id) return Boolean is\n+      Idx : Node_Id;\n+\n+   begin\n+      pragma Assert (Is_Array_Type (E));\n+\n+      --  Check if some index is initialized with a non-constant value\n+\n+      Idx := First_Index (E);\n+      while Present (Idx) loop\n+         if Nkind (Idx) = N_Range then\n+            if not Is_Constant_Bound (Low_Bound (Idx))\n+              or else not Is_Constant_Bound (High_Bound (Idx))\n+            then\n+               return True;\n+            end if;\n+         end if;\n+\n+         Idx := Next_Index (Idx);\n+      end loop;\n+\n+      return False;\n+   end Is_Variable_Size_Array;\n+\n+   -----------------------------\n+   -- Is_Variable_Size_Record --\n+   -----------------------------\n+\n+   function Is_Variable_Size_Record (E : Entity_Id) return Boolean is\n+      Comp     : Entity_Id;\n+      Comp_Typ : Entity_Id;\n+\n+   begin\n+      pragma Assert (Is_Record_Type (E));\n+\n+      Comp := First_Entity (E);\n+      while Present (Comp) loop\n+         Comp_Typ := Etype (Comp);\n+\n+         --  Recursive call if the record type has discriminants\n+\n+         if Is_Record_Type (Comp_Typ)\n+           and then Has_Discriminants (Comp_Typ)\n+           and then Is_Variable_Size_Record (Comp_Typ)\n+         then\n+            return True;\n+\n+         elsif Is_Array_Type (Comp_Typ)\n+           and then Is_Variable_Size_Array (Comp_Typ)\n+         then\n+            return True;\n+         end if;\n+\n+         Next_Entity (Comp);\n+      end loop;\n+\n+      return False;\n+   end Is_Variable_Size_Record;\n+\n    ---------------------\n    -- Is_VMS_Operator --\n    ---------------------"}, {"sha": "5cd1ab678b8a96aca6df47c1c9bd72eb1d77bf05", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -853,6 +853,12 @@ package Sem_Util is\n    --  True if T is a bounded string type. Used to make sure \"=\" composes\n    --  properly for bounded string types.\n \n+   function Is_Constant_Bound (Exp : Node_Id) return Boolean;\n+   --  Exp is the expression for an array bound. Determines whether the\n+   --  bound is a compile-time known value, or a constant entity, or an\n+   --  enumeration literal, or an expression composed of constant-bound\n+   --  subexpressions which are evaluated by means of standard operators.\n+\n    function Is_Controlling_Limited_Procedure\n      (Proc_Nam : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-345): Determine whether Proc_Nam is a primitive procedure\n@@ -1044,6 +1050,12 @@ package Sem_Util is\n    --  object that is accessed directly, as opposed to the other CIL objects\n    --  that are accessed through managed pointers.\n \n+   function Is_Variable_Size_Array (E : Entity_Id) return Boolean;\n+   --  Returns true if E has variable size components\n+\n+   function Is_Variable_Size_Record (E : Entity_Id) return Boolean;\n+   --  Returns true if E has variable size components\n+\n    function Is_VMS_Operator (Op : Entity_Id) return Boolean;\n    --  Determine whether an operator is one of the intrinsics defined\n    --  in the DEC system extension."}, {"sha": "e1dc7ef835abb7d0f00f05418857aefaf6a80f93", "filename": "gcc/ada/xgnatugn.adb", "status": "modified", "additions": 4, "deletions": 323, "changes": 327, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fxgnatugn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f/gcc%2Fada%2Fxgnatugn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxgnatugn.adb?ref=da1c23dd6f53ba955f2b0aefc00ff66bbbcfb11f", "patch": "@@ -149,10 +149,6 @@ procedure Xgnatugn is\n      (Input        : Input_File;\n       At_Character : Natural;\n       Message      : String);\n-   procedure Warning\n-     (Input        : Input_File;\n-      Message      : String);\n-   --  Like Error, but just print a warning message\n \n    Dictionary_File : aliased Input_File;\n    procedure Read_Dictionary_File;\n@@ -181,7 +177,6 @@ procedure Xgnatugn is\n    --  Conditional commands for edition are passed through unchanged\n \n    subtype Target_Type is Flag_Type range UNW .. VMS;\n-   subtype Edition_Type is Flag_Type range FSFEDITION .. GPLEDITION;\n \n    Target : Target_Type;\n    --  The Target variable is initialized using the command line\n@@ -237,42 +232,6 @@ procedure Xgnatugn is\n    --  This subprogram takes a line and rewrites it according to Target.\n    --  It relies on information in Source_File to generate error messages.\n \n-   type Conditional is (Set, Clear);\n-   procedure Push_Conditional (Cond : Conditional; Flag : Flag_Type);\n-   procedure Pop_Conditional  (Cond : Conditional);\n-   --  These subprograms deal with conditional processing (@ifset/@ifclear).\n-   --  They rely on information in Source_File to generate error messages.\n-\n-   function VMS_Context_Determined return Boolean;\n-   --  Returns true if, in the current conditional preprocessing context, we\n-   --  always have a VMS or a non-VMS version, regardless of the value of\n-   --  Target.\n-\n-   function In_VMS_Section return Boolean;\n-   --  Returns True if in an \"@ifset vms\" section\n-\n-   procedure Check_No_Pending_Conditional;\n-   --  Checks that all preprocessing directives have been properly matched by\n-   --  their @end counterpart. If this is not the case, print an error\n-   --  message.\n-\n-   --  The following definitions implement a stack to track the conditional\n-   --  preprocessing context.\n-\n-   type Conditional_Context is record\n-      Starting_Line : Positive;\n-      Cond          : Conditional;\n-      Flag          : Flag_Type;\n-   end record;\n-\n-   Conditional_Stack_Depth : constant := 3;\n-\n-   Conditional_Stack :\n-     array (1 .. Conditional_Stack_Depth) of Conditional_Context;\n-\n-   Conditional_TOS : Natural := 0;\n-   --  Pointer to the Top Of Stack for Conditional_Stack\n-\n    -----------\n    -- Usage --\n    -----------\n@@ -410,16 +369,6 @@ procedure Xgnatugn is\n    -- Warning --\n    -------------\n \n-   procedure Warning\n-     (Input   : Input_File;\n-      Message : String)\n-   is\n-   begin\n-      if Warnings_Enabled then\n-         Warning (Input, 0, Message);\n-      end if;\n-   end Warning;\n-\n    procedure Warning\n      (Input        : Input_File;\n       At_Character : Natural;\n@@ -883,17 +832,6 @@ procedure Xgnatugn is\n                Maybe_Rewrite_Extension;\n \n             when VMS_Alternative =>\n-               if VMS_Context_Determined then\n-                  if (not In_VMS_Section)\n-                    or else\n-                    Line (Token.VMS.First .. Token.VMS.Last) /=\n-                    Line (Token.Non_VMS.First .. Token.Non_VMS.Last)\n-                  then\n-                     Warning (Source_File, Token.First,\n-                              \"VMS alternative already determined \"\n-                                & \"by conditionals\");\n-                  end if;\n-               end if;\n                if Target = VMS then\n                   Append (Rewritten_Line, Line (Token.VMS.First\n                                                 .. Token.VMS.Last));\n@@ -917,11 +855,6 @@ procedure Xgnatugn is\n    -------------------------\n \n    procedure Process_Source_File is\n-      Ifset       : constant String := \"@ifset \";\n-      Ifclear     : constant String := \"@ifclear \";\n-      Endsetclear : constant String := \"@end \";\n-      --  Strings to be recognized for conditional processing\n-\n    begin\n       while not End_Of_File (Source_File.Data) loop\n          declare\n@@ -931,152 +864,17 @@ procedure Xgnatugn is\n             --  syntax of all lines, and not only those which are actually\n             --  included in the output.\n \n-            Have_Conditional : Boolean := False;\n-            --  True if we have encountered a conditional preprocessing\n-            --  directive.\n-\n-            Cond : Conditional;\n-            --  The kind of the directive\n-\n-            Flag : Flag_Type;\n-            --  Its flag\n-\n          begin\n-            --  If the line starts with @ifset or @ifclear, we try to convert\n-            --  the following flag to one of our flag types. If we fail,\n-            --  Have_Conditional remains False.\n-\n-            if Line'Length >= Ifset'Length\n-              and then Line (1 .. Ifset'Length) = Ifset\n-            then\n-               Cond := Set;\n-\n-               declare\n-                  Arg : constant String :=\n-                          Trim (Line (Ifset'Length + 1 .. Line'Last), Both);\n-\n-               begin\n-                  Flag := Flag_Type'Value (Arg);\n-                  Have_Conditional := True;\n-\n-                  case Flag is\n-                     when Target_Type =>\n-                        if Translate (Target_Type'Image (Flag),\n-                                      Lower_Case_Map)\n-                                                      /= Arg\n-                        then\n-                           Error (Source_File, \"flag has to be lowercase\");\n-                        end if;\n-\n-                        --  Set unw/vms flag in the output file so that\n-                        --  @ifset/@ifclear will work as expected.\n-\n-                        if First_Time then\n-                           Put_Line (Output_File, \"@set \" & Argument (1));\n-                           First_Time := False;\n-                        end if;\n-\n-                     when Edition_Type =>\n-                        null;\n-                  end case;\n-               exception\n-                  when Constraint_Error =>\n-                     Error (Source_File, \"unknown flag for '@ifset'\");\n-               end;\n-\n-            elsif Line'Length >= Ifclear'Length\n-              and then Line (1 .. Ifclear'Length) = Ifclear\n+            if First_Time\n+              and then Line'Length > 3 and then Line (1 .. 3) = \"@if\"\n             then\n-               Cond := Clear;\n-\n-               declare\n-                  Arg : constant String :=\n-                          Trim (Line (Ifclear'Length + 1 .. Line'Last), Both);\n-\n-               begin\n-                  Flag := Flag_Type'Value (Arg);\n-                  Have_Conditional := True;\n-\n-                  case Flag is\n-                     when Target_Type =>\n-                        if Translate (Target_Type'Image (Flag),\n-                                      Lower_Case_Map)\n-                                                      /= Arg\n-                        then\n-                           Error (Source_File, \"flag has to be lowercase\");\n-                        end if;\n-\n-                        --  Set unw/vms flag in the output file so that\n-                        --  @ifset/@ifclear will work as expected.\n-\n-                        if First_Time then\n-                           Put_Line (Output_File, \"@set \" & Argument (1));\n-                           First_Time := False;\n-                        end if;\n-\n-                     when Edition_Type =>\n-                        null;\n-                  end case;\n-               exception\n-                  when Constraint_Error =>\n-                     Error (Source_File, \"unknown flag for '@ifclear'\");\n-               end;\n+               Put_Line (Output_File, \"@set \" & Argument (1));\n+               First_Time := False;\n             end if;\n \n-            if Have_Conditional then\n-               --  We create a new conditional context and suppress the\n-               --  directive in the output.\n-\n-               Push_Conditional (Cond, Flag);\n-\n-            elsif Line'Length >= Endsetclear'Length\n-              and then Line (1 .. Endsetclear'Length) = Endsetclear\n-            then\n-               --  The '@end ifset'/'@end ifclear' case is handled here. We\n-               --  have to pop the conditional context.\n-\n-               declare\n-                  First, Last : Natural;\n-\n-               begin\n-                  Find_Token (Source => Line (Endsetclear'Length + 1\n-                                              .. Line'Length),\n-                              Set    => Letter_Set,\n-                              Test   => Inside,\n-                              First  => First,\n-                              Last   => Last);\n-\n-                  if Last = 0 then\n-                     Error (Source_File, \"'@end' without argument\");\n-                  else\n-                     if Line (First .. Last) = \"ifset\" then\n-                        Have_Conditional := True;\n-                        Cond := Set;\n-                     elsif Line (First .. Last) = \"ifclear\" then\n-                        Have_Conditional := True;\n-                        Cond := Clear;\n-                     end if;\n-\n-                     if Have_Conditional then\n-                        Pop_Conditional (Cond);\n-\n-                        if Conditional_TOS > 0 then\n-                           Flag := Conditional_Stack (Conditional_TOS).Flag;\n-                        end if;\n-                     end if;\n-\n-                     --  We fall through to the ordinary case for other @end\n-                     --  directives.\n-\n-                  end if;               --  @end without argument\n-               end;\n-            end if;                     --  Have_Conditional\n-\n             Put_Line (Output_File, Rewritten);\n          end;\n       end loop;\n-\n-      Check_No_Pending_Conditional;\n    end Process_Source_File;\n \n    ---------------------------\n@@ -1159,123 +957,6 @@ procedure Xgnatugn is\n       return S (Get (Ug_Words, Word));\n    end Get_Replacement_Word;\n \n-   ----------------------\n-   -- Push_Conditional --\n-   ----------------------\n-\n-   procedure Push_Conditional (Cond : Conditional; Flag : Flag_Type) is\n-   begin\n-      if Flag in Target_Type then\n-\n-         --  Check if the current directive is pointless because of a previous,\n-         --  enclosing directive.\n-\n-         for J in 1 .. Conditional_TOS loop\n-            if Conditional_Stack (J).Flag = Flag then\n-               Warning\n-                 (Source_File, \"directive without effect because of line\"\n-                 & Integer'Image (Conditional_Stack (J).Starting_Line));\n-            end if;\n-         end loop;\n-      end if;\n-\n-      Conditional_TOS := Conditional_TOS + 1;\n-      Conditional_Stack (Conditional_TOS) :=\n-        (Starting_Line => Source_File.Line,\n-         Cond          => Cond,\n-         Flag          => Flag);\n-   end Push_Conditional;\n-\n-   ---------------------\n-   -- Pop_Conditional --\n-   ---------------------\n-\n-   procedure Pop_Conditional (Cond : Conditional) is\n-   begin\n-      if Conditional_TOS > 0 then\n-         case Cond is\n-            when Set =>\n-               if Conditional_Stack (Conditional_TOS).Cond /= Set then\n-                  Error (Source_File,\n-                         \"'@end ifset' does not match '@ifclear' at line\"\n-                         & Integer'Image (Conditional_Stack\n-                                          (Conditional_TOS).Starting_Line));\n-               end if;\n-\n-            when Clear =>\n-               if Conditional_Stack (Conditional_TOS).Cond /= Clear then\n-                  Error (Source_File,\n-                         \"'@end ifclear' does not match '@ifset' at line\"\n-                         & Integer'Image (Conditional_Stack\n-                                          (Conditional_TOS).Starting_Line));\n-               end if;\n-         end case;\n-\n-         Conditional_TOS := Conditional_TOS - 1;\n-\n-      else\n-         case Cond is\n-            when Set =>\n-               Error (Source_File,\n-                      \"'@end ifset' without corresponding '@ifset'\");\n-\n-            when Clear =>\n-               Error (Source_File,\n-                      \"'@end ifclear' without corresponding '@ifclear'\");\n-         end case;\n-      end if;\n-   end Pop_Conditional;\n-\n-   ----------------------------\n-   -- VMS_Context_Determined --\n-   ----------------------------\n-\n-   function VMS_Context_Determined return Boolean is\n-   begin\n-      for J in 1 .. Conditional_TOS loop\n-         if Conditional_Stack (J).Flag = VMS then\n-            return True;\n-         end if;\n-      end loop;\n-\n-      return False;\n-   end VMS_Context_Determined;\n-\n-   --------------------\n-   -- In_VMS_Section --\n-   --------------------\n-\n-   function In_VMS_Section return Boolean is\n-   begin\n-      for J in 1 .. Conditional_TOS loop\n-         if Conditional_Stack (J).Flag = VMS then\n-            return Conditional_Stack (J).Cond = Set;\n-         end if;\n-      end loop;\n-\n-      return False;\n-   end In_VMS_Section;\n-\n-   ----------------------------------\n-   -- Check_No_Pending_Conditional --\n-   ----------------------------------\n-\n-   procedure Check_No_Pending_Conditional is\n-   begin\n-      for J in 1 .. Conditional_TOS loop\n-         case Conditional_Stack (J).Cond is\n-            when Set =>\n-               Error (Source_File, \"Missing '@end ifset' for '@ifset' at line\"\n-                      & Integer'Image (Conditional_Stack (J).Starting_Line));\n-\n-            when Clear =>\n-               Error (Source_File,\n-                      \"Missing '@end ifclear' for '@ifclear' at line\"\n-                      & Integer'Image (Conditional_Stack (J).Starting_Line));\n-         end case;\n-      end loop;\n-   end Check_No_Pending_Conditional;\n-\n --  Start of processing for Xgnatugn\n \n    Valid_Command_Line : Boolean;"}]}