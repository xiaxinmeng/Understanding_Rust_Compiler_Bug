{"sha": "7f575bf6d48e70be2184a4f7d19dd7c78c6f5113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1NzViZjZkNDhlNzBiZTIxODRhNGY3ZDE5ZGQ3Yzc4YzZmNTExMw==", "commit": {"author": {"name": "Carlos O'Donell", "email": "carlos@codesourcery.com", "date": "2006-12-04T17:25:36Z"}, "committer": {"name": "Carlos O'Donell", "email": "carlos@gcc.gnu.org", "date": "2006-12-04T17:25:36Z"}, "message": "unwind-arm.c: Adjust __cxa_type_match declaration.\n\n\ngcc/\n\n2006-12-04  Carlos O'Donell  <carlos@codesourcery.com>\n\n\t* config/arm/unwind-arm.c: Adjust __cxa_type_match declaration.\n\t(__gnu_unwind_pr_common): Pass is_reference to __cxa_type_match.\n\nFrom-SVN: r119498", "tree": {"sha": "9d8112b2c029ac05a89b08e2bcee3599ff6350c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d8112b2c029ac05a89b08e2bcee3599ff6350c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113/comments", "author": null, "committer": null, "parents": [{"sha": "32ace6e2a6f1d2b9307df202722cc092d4ce513d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ace6e2a6f1d2b9307df202722cc092d4ce513d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ace6e2a6f1d2b9307df202722cc092d4ce513d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "a36a042010a549c744687ab2ebb9f27cb9a1c2cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f575bf6d48e70be2184a4f7d19dd7c78c6f5113", "patch": "@@ -1,3 +1,8 @@\n+2006-12-04  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* config/arm/unwind-arm.c: Adjust __cxa_type_match declaration.\n+\t(__gnu_unwind_pr_common): Pass is_reference to __cxa_type_match.\n+\n 2006-12-04  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-outof-ssa.c (coalesce_ssa_name): Use calculate_live_ranges."}, {"sha": "9b7229e9486d36537a60a33fb0491e17e006789f", "filename": "gcc/config/arm/unwind-arm.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113/gcc%2Fconfig%2Farm%2Funwind-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f575bf6d48e70be2184a4f7d19dd7c78c6f5113/gcc%2Fconfig%2Farm%2Funwind-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funwind-arm.c?ref=7f575bf6d48e70be2184a4f7d19dd7c78c6f5113", "patch": "@@ -41,6 +41,7 @@ void __attribute__((weak)) __cxa_call_unexpected(_Unwind_Control_Block *ucbp);\n bool __attribute__((weak)) __cxa_begin_cleanup(_Unwind_Control_Block *ucbp);\n bool __attribute__((weak)) __cxa_type_match(_Unwind_Control_Block *ucbp,\n \t\t\t\t\t    const type_info *rttip,\n+\t\t\t\t\t    bool is_reference,\n \t\t\t\t\t    void **matched_object);\n \n _Unwind_Ptr __attribute__((weak))\n@@ -847,6 +848,7 @@ __gnu_unwind_pr_common (_Unwind_State state,\n \t\t    {\n \t\t      /* Check for a barrier.  */\n \t\t      _uw rtti;\n+\t\t      bool is_reference = (data[0] & uint32_highbit) != 0;\n \t\t      void *matched;\n \n \t\t      /* Check for no-throw areas.  */\n@@ -860,6 +862,7 @@ __gnu_unwind_pr_common (_Unwind_State state,\n \t\t\t  /* Match a catch specification.  */\n \t\t\t  rtti = _Unwind_decode_target2 ((_uw) &data[1]);\n \t\t\t  if (!__cxa_type_match (ucbp, (type_info *) rtti,\n+\t\t\t\t\t\t is_reference,\n \t\t\t\t\t\t &matched))\n \t\t\t    matched = (void *)0;\n \t\t\t}\n@@ -907,7 +910,7 @@ __gnu_unwind_pr_common (_Unwind_State state,\n \t\t\t{\n \t\t\t  matched = (void *)(ucbp + 1);\n \t\t\t  rtti = _Unwind_decode_target2 ((_uw) &data[i + 1]);\n-\t\t\t  if (__cxa_type_match (ucbp, (type_info *) rtti,\n+\t\t\t  if (__cxa_type_match (ucbp, (type_info *) rtti, 0,\n \t\t\t\t\t\t&matched))\n \t\t\t    break;\n \t\t\t}"}]}