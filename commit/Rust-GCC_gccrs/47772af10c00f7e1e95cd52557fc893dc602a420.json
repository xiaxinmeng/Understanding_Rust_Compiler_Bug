{"sha": "47772af10c00f7e1e95cd52557fc893dc602a420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc3NzJhZjEwYzAwZjdlMWU5NWNkNTI1NTdmYzg5M2RjNjAyYTQyMA==", "commit": {"author": {"name": "Feng Xue", "email": "fxue@os.amperecomputing.com", "date": "2020-02-17T09:07:04Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-02-21T20:22:20Z"}, "message": "Do not propagate self-dependent value (PR ipa/93763)\n\n        PR ipa/93763\n        * ipa-cp.c (self_recursively_generated_p): Mark self-dependent value as\n        self-recursively generated.", "tree": {"sha": "d7da2bfb62c51381fef0882ce16fa1889d23d983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7da2bfb62c51381fef0882ce16fa1889d23d983"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47772af10c00f7e1e95cd52557fc893dc602a420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47772af10c00f7e1e95cd52557fc893dc602a420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47772af10c00f7e1e95cd52557fc893dc602a420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47772af10c00f7e1e95cd52557fc893dc602a420/comments", "author": {"login": "feng-xue-ampere", "id": 95893536, "node_id": "U_kgDOBbc4IA", "avatar_url": "https://avatars.githubusercontent.com/u/95893536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feng-xue-ampere", "html_url": "https://github.com/feng-xue-ampere", "followers_url": "https://api.github.com/users/feng-xue-ampere/followers", "following_url": "https://api.github.com/users/feng-xue-ampere/following{/other_user}", "gists_url": "https://api.github.com/users/feng-xue-ampere/gists{/gist_id}", "starred_url": "https://api.github.com/users/feng-xue-ampere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feng-xue-ampere/subscriptions", "organizations_url": "https://api.github.com/users/feng-xue-ampere/orgs", "repos_url": "https://api.github.com/users/feng-xue-ampere/repos", "events_url": "https://api.github.com/users/feng-xue-ampere/events{/privacy}", "received_events_url": "https://api.github.com/users/feng-xue-ampere/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "147add96091790d5c1d8eb938f84ea775ad81b84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147add96091790d5c1d8eb938f84ea775ad81b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/147add96091790d5c1d8eb938f84ea775ad81b84"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "1d0c1ac0f35b5184afe7ff69ca3b5c5b560aa4c5", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47772af10c00f7e1e95cd52557fc893dc602a420/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47772af10c00f7e1e95cd52557fc893dc602a420/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=47772af10c00f7e1e95cd52557fc893dc602a420", "patch": "@@ -1897,8 +1897,8 @@ ipcp_lattice<valtype>::add_value (valtype newval, cgraph_edge *cs,\n }\n \n /* Return true, if a ipcp_value VAL is orginated from parameter value of\n-   self-feeding recursive function by applying non-passthrough arithmetic\n-   transformation.  */\n+   self-feeding recursive function via some kind of pass-through jump\n+   function.  */\n \n static bool\n self_recursively_generated_p (ipcp_value<tree> *val)\n@@ -1909,10 +1909,12 @@ self_recursively_generated_p (ipcp_value<tree> *val)\n     {\n       cgraph_edge *cs = src->cs;\n \n-      if (!src->val || cs->caller != cs->callee->function_symbol ()\n-\t  || src->val == val)\n+      if (!src->val || cs->caller != cs->callee->function_symbol ())\n \treturn false;\n \n+      if (src->val == val)\n+\tcontinue;\n+\n       if (!info)\n \tinfo = IPA_NODE_REF (cs->caller);\n "}, {"sha": "61117108ecd610e2f86f386f2291448ed46f3bef", "filename": "gcc/testsuite/g++.dg/ipa/pr93763.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47772af10c00f7e1e95cd52557fc893dc602a420/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr93763.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47772af10c00f7e1e95cd52557fc893dc602a420/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr93763.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr93763.C?ref=47772af10c00f7e1e95cd52557fc893dc602a420", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+struct search_param {\n+  int total;\n+};\n+void search_trivial(search_param error_left) {\n+  search_trivial(error_left);\n+  search_param error_left2{error_left};\n+  error_left2.total--;\n+  search_trivial(error_left2);\n+}\n+void search_algo_uni(search_param error_left) { search_trivial(error_left); }\n+void search_algo(search_param error_left) { search_algo_uni(error_left); }\n+int main() { search_algo({}); return 0; }"}, {"sha": "d11705932b6ae58b34632680b165f73525264f4c", "filename": "gcc/testsuite/gcc.dg/ipa/pr93763.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47772af10c00f7e1e95cd52557fc893dc602a420/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr93763.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47772af10c00f7e1e95cd52557fc893dc602a420/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr93763.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr93763.c?ref=47772af10c00f7e1e95cd52557fc893dc602a420", "patch": "@@ -0,0 +1,46 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+typedef struct a a;\n+struct a {\n+  a *b\n+} d;\n+e, k, ah, al;\n+f(aa) {\n+  if (aa & 1)\n+    goto g;\n+  f(aa | 2);\n+g:\n+  h();\n+}\n+l() {\n+  {\n+    f(072);\n+    i(e, d, 92);\n+  }\n+}\n+ag() {\n+  { i(e, d, 36); }\n+}\n+ai(a *m, a *n, unsigned aa) {\n+  f(aa);\n+  j(k, l, ah, 1);\n+}\n+j(int c, a m, int aj, int aa) {\n+  int ak = aa;\n+  { i(e, d, ak); }\n+}\n+i(int c, a *m, unsigned aa) {\n+  {\n+    {             i(c, (*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(\n+*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(\n+*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*(*m).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b)\n+.b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b)\n+.b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b)\n+.b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b)\n+.b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b).b, 0);\n+    }\n+  }\n+  int am = aa;\n+  ai(ag, al, am);\n+}"}]}