{"sha": "538befca2c8bb81a347542366d7e99a0e7dcdff0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM4YmVmY2EyYzhiYjgxYTM0NzU0MjM2NmQ3ZTk5YTBlN2RjZGZmMA==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-07-21T00:47:27Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-07-21T00:47:27Z"}, "message": "aix43.h (CPP_SPEC): Define __LONG_MAX__ correctly in 64-bit mode.\n\n* config/rs6000/aix43.h (CPP_SPEC): Define __LONG_MAX__ correctly\nin 64-bit mode.\n* glimits.h: Don't do #if defined for ARCH_PPC.\n\nFrom-SVN: r35165", "tree": {"sha": "5bd298e5fb90addc7daae34ac83f8b31f0907d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bd298e5fb90addc7daae34ac83f8b31f0907d1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/538befca2c8bb81a347542366d7e99a0e7dcdff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/538befca2c8bb81a347542366d7e99a0e7dcdff0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/538befca2c8bb81a347542366d7e99a0e7dcdff0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/538befca2c8bb81a347542366d7e99a0e7dcdff0/comments", "author": null, "committer": null, "parents": [{"sha": "a9098fd024e128b97dc4cbf338a10eb6056f487e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9098fd024e128b97dc4cbf338a10eb6056f487e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9098fd024e128b97dc4cbf338a10eb6056f487e"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "0b94ec88e392d9eefbd21417b4148df23686bc5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/538befca2c8bb81a347542366d7e99a0e7dcdff0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/538befca2c8bb81a347542366d7e99a0e7dcdff0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=538befca2c8bb81a347542366d7e99a0e7dcdff0", "patch": "@@ -1,5 +1,9 @@\n 2000-07-20  Geoff Keating  <geoffk@cygnus.com>\n \n+\t* config/rs6000/aix43.h (CPP_SPEC): Define __LONG_MAX__ correctly\n+\tin 64-bit mode.\n+\t* glimits.h: Don't do #if defined for ARCH_PPC.\n+\n \t* config/rs6000/rs6000.h (ASM_OUTPUT_SPECIAL_POOL_ENTRY_P): All\n \tconstants of size no larger than a pointer should go in the TOC.\n \tAdd 'MODE' parameter."}, {"sha": "e9ac22a961c173284672a66afc8e9a62350848ea", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/538befca2c8bb81a347542366d7e99a0e7dcdff0/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/538befca2c8bb81a347542366d7e99a0e7dcdff0/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=538befca2c8bb81a347542366d7e99a0e7dcdff0", "patch": "@@ -108,7 +108,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix: -D_POSIX_SOURCE}\\\n    %{ansi: -D_ANSI_C_SOURCE}\\\n-   %{maix64: -D__64BIT__ -D_ARCH_PPC}\\\n+   %{maix64: -D__64BIT__ -D_ARCH_PPC -D__LONG_MAX__=9223372036854775807L}\\\n    %{mpe: -I/usr/lpp/ppe.poe/include}\\\n    %{pthread: -D_THREAD_SAFE}\\\n    %(cpp_cpu)\""}, {"sha": "979e7155803e65eb83d4f92725fe464945f3a9e9", "filename": "gcc/glimits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/538befca2c8bb81a347542366d7e99a0e7dcdff0/gcc%2Fglimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/538befca2c8bb81a347542366d7e99a0e7dcdff0/gcc%2Fglimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglimits.h?ref=538befca2c8bb81a347542366d7e99a0e7dcdff0", "patch": "@@ -64,7 +64,7 @@\n /* Minimum and maximum values a `signed long int' can hold.\n    (Same as `int').  */\n #ifndef __LONG_MAX__\n-#if defined (__alpha__) || (defined (_ARCH_PPC) && defined (__64BIT__)) || (defined (__sparc__) && defined(__arch64__)) || defined (__sparcv9)\n+#if defined (__alpha__) || (defined (__sparc__) && defined(__arch64__)) || defined (__sparcv9)\n #define __LONG_MAX__ 9223372036854775807L\n #else\n #define __LONG_MAX__ 2147483647L"}]}