{"sha": "53256ee3d582162d0ef914c068b58a02aa20c466", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyNTZlZTNkNTgyMTYyZDBlZjkxNGMwNjhiNThhMDJhYTIwYzQ2Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-25T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-25T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "9615f7e79c377ffee6cd3f8a6b62cfc7820278e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9615f7e79c377ffee6cd3f8a6b62cfc7820278e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53256ee3d582162d0ef914c068b58a02aa20c466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53256ee3d582162d0ef914c068b58a02aa20c466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53256ee3d582162d0ef914c068b58a02aa20c466", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53256ee3d582162d0ef914c068b58a02aa20c466/comments", "author": null, "committer": null, "parents": [{"sha": "6643d2367f8066dd6852568be1759adc7113a660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6643d2367f8066dd6852568be1759adc7113a660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6643d2367f8066dd6852568be1759adc7113a660"}], "stats": {"total": 159, "additions": 158, "deletions": 1}, "files": [{"sha": "0373ea11abdf33bf32766a40ff7dd83411caca7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1,3 +1,64 @@\n+2020-07-24  David Edelsohn  <dje.gcc@gmail.com>\n+\t    Clement Chigot  <clement.chigot@atos.net>\n+\n+\t* config.gcc (powerpc-ibm-aix7.1): Use t-aix64 and biarch64 for\n+\tcpu_is_64bit.\n+\t* config/rs6000/aix71.h (ASM_SPEC): Remove aix64 option.\n+\t(ASM_SPEC32): New.\n+\t(ASM_SPEC64): New.\n+\t(ASM_CPU_SPEC): Remove vsx and altivec options.\n+\t(CPP_SPEC_COMMON): Rename from CPP_SPEC.\n+\t(CPP_SPEC32): New.\n+\t(CPP_SPEC64): New.\n+\t(CPLUSPLUS_CPP_SPEC): Rename to CPLUSPLUS_CPP_SPEC_COMMON..\n+\t(TARGET_DEFAULT): Use 64 bit mask if BIARCH.\n+\t(LIB_SPEC_COMMON): Rename from LIB_SPEC.\n+\t(LIB_SPEC32): New.\n+\t(LIB_SPEC64): New.\n+\t(LINK_SPEC_COMMON): Rename from LINK_SPEC.\n+\t(LINK_SPEC32): New.\n+\t(LINK_SPEC64): New.\n+\t(STARTFILE_SPEC): Add 64 bit version of crtcxa and crtdbase.\n+\t(ASM_SPEC): Define 32 and 64 bit alternatives using DEFAULT_ARCH64_P.\n+\t(CPP_SPEC): Same.\n+\t(CPLUSPLUS_CPP_SPEC): Same.\n+\t(LIB_SPEC): Same.\n+\t(LINK_SPEC): Same.\n+\t(SUBTARGET_EXTRA_SPECS): Add new 32/64 specs.\n+\t* config/rs6000/aix72.h (TARGET_DEFAULT): Use 64 bit mask if BIARCH.\n+\t* config/rs6000/defaultaix64.h: Delete.\n+\n+2020-07-24  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.opt: Delete -mpower10.\n+\n+2020-07-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* config/i386/intelmic-mkoffload.c\n+\t(generate_target_descr_file): Use dumppfx for save_temps\n+\tfiles.  Pass -dumpbase et al down to the compiler.\n+\t(generate_target_offloadend_file): Likewise.\n+\t(generate_host_descr_file): Likewise.\n+\t(prepare_target_image): Likewise.  Move out_obj_filename\n+\tsetting...\n+\t(main): ... here.  Detect -dumpbase, set dumppfx too.\n+\n+2020-07-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR driver/96230\n+\t* gcc.c (process_command): Adjust and document conditions to\n+\treset dumpbase_ext.\n+\n+2020-07-24  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* config/aarch64/aarch64.c (+aarch64_offload_options,\n+\tTARGET_OFFLOAD_OPTIONS): New.\n+\n+2020-07-24  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95750\n+\t* config/i386/sync.md (mmem_thread_fence): Emit mfence_sse2 for -Os.\n+\n 2020-07-23  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tPR rtl-optimization/96298"}, {"sha": "ca1a68b03b7e00d70fc9f88fed0801e433875c60", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1 +1 @@\n-20200724\n+20200725"}, {"sha": "94eb99721639002035323c276bc4a6dc8391212c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1,3 +1,72 @@\n+2020-07-24  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/pr95907.c: New.\n+\n+2020-07-24  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* c-c++-common/pr56493.c: Allow \":\" in label, for mmix.\n+\n+2020-07-24  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* c-c++-common/patchable_function_entry-decl.c,\n+\tc-c++-common/patchable_function_entry-default.c,\n+\tc-c++-common/patchable_function_entry-definition.c: Adjust for mmix.\n+\n+2020-07-24  Sunil K Pandey  <skpgkp2@gmail.com>\n+\n+\tPR target/96192\n+\t* c-c++-common/pr96192-1.c: New test.\n+\n+2020-07-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* lib/scanoffload.exp (scoff-testname, scoff-adjust): New.\n+\t(scoff): Call them.\n+\n+2020-07-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR driver/96230\n+\t* gcc.misc-tests/outputs.exp: Add tests with -dumpbase-ext,\n+\twith identical -dumpbase, with -dumpbase \"\", and without any\n+\t-dumpbase.\n+\t(outest): Fix \"\" expansion in expected outputs, skip\n+\tadjustments.\n+\n+2020-07-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR testsuite/95720\n+\t* lib/gcc-defs.exp (gcc_adjust_linker_flags_list): Split out of...\n+\t(gcc_adjust_linker_flags): ... this.  Protect gluefile and\n+\twrap_flags.\n+\t* gcc.misc-tests/outputs.exp: Use gcc_adjust_linker_flags_list.\n+\n+2020-07-24  Dominique d'Humieres  <dhumieres.dominique@free.fr>\n+\n+\tPR fortran/93567\n+\t* gfortran.dg/round_3.f08: Add test cases.\n+\n+2020-07-24  Dominique d'Humieres  <dhumieres.dominique@free.fr>\n+\n+\tPR fortran/93592\n+\t* gfortran.dg/fmt_en.f90: Adjust test.\n+\t* gfortran.dg/fmt_en_rd.f90: New test.\n+\t* gfortran.dg/fmt_en_rn.f90: New test.\n+\t* gfortran.dg/fmt_en_ru.f90: New test.\n+\t* gfortran.dg/fmt_en_rz.f90: New test.\n+\n+2020-07-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/81339\n+\t* g++.dg/cpp0x/decltype78.C: New test.\n+\n+2020-07-24  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* lib/scandump.exp (scan-dump-dem-not): Fix TCL syntax error.\n+\n+2020-07-24  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR middle-end/95886\n+\t* gcc.target/i386/memcpy-pr95886.c: Restrict test to !ia32.\n+\n 2020-07-23  Martin Sebor  <msebor@redhat.com>\n \n \tPR testsuite/95886"}, {"sha": "24fe1af2085e0dd05b449fdb02c5471450b6b407", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1,3 +1,7 @@\n+2020-07-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* config/aarch64/lse.S: Add PAC property note.\n+\n 2020-07-23  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/96035"}, {"sha": "a4800b990df129a767df5b07e7c4c4c0018c32b5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1,3 +1,15 @@\n+2020-07-24  Dominique d'Humieres  <dhumieres.dominique@free.fr>\n+\n+\tPR fortran/93567\n+\t* io/write_float.def (determine_en_precision): Fix switch between\n+\tFMT_E and FMT_F.\n+\n+2020-07-24  Dominique d'Humieres  <dhumieres.dominique@free.fr>\n+\n+\tPR fortran/93592\n+\t* io/write_float.def (build_float_string): Do not reset\n+\t  nbefore for FMT_F and FMT_EN.\n+\n 2020-07-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/t-aix: Set BITS from compiler cpp macro."}, {"sha": "f5a27deae558dab42fa36bc9be0cab8c545dac1d", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1,3 +1,10 @@\n+2020-07-24  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c++/c++.exp: Unset 'offload_target' after\n+\tuse.\n+\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n+\n 2020-07-23  Julian Brown  <julian@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "aa6de596474d61ff101ff47e7ea25f8571a14084", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53256ee3d582162d0ef914c068b58a02aa20c466/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53256ee3d582162d0ef914c068b58a02aa20c466/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=53256ee3d582162d0ef914c068b58a02aa20c466", "patch": "@@ -1,3 +1,7 @@\n+2020-07-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* config/aarch64/sjlj.S: Add conditional pac-ret protection.\n+\n 2020-07-09  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* config/aarch64/sjlj.S: Add BTI marking and related definitions,"}]}