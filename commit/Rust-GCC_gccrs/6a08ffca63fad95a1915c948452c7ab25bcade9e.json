{"sha": "6a08ffca63fad95a1915c948452c7ab25bcade9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwOGZmY2E2M2ZhZDk1YTE5MTVjOTQ4NDUyYzdhYjI1YmNhZGU5ZQ==", "commit": {"author": {"name": "Changpeng Fang", "email": "changpeng.fang@amd.com", "date": "2010-10-22T19:07:52Z"}, "committer": {"name": "Changpeng Fang", "email": "cfang@gcc.gnu.org", "date": "2010-10-22T19:07:52Z"}, "message": "Implementation of the pipeline description for Bulldozer (bdver1)\n\n\t* gcc/config/i386/bdver1.md: New file.\n\t* gcc/config/i386/i386.md (include \"bdver1.md\"): Invoke the\n\tpipeline description for bdver1.\n\t(x86_sahf_1): Add \"bdver1_decode\" attribute.\n\t(*cmpfp_i_mixed): Likewise.\n\t(*cmpfp_i_sse): Likewise.\n\t(*cmpfp_i_i387): Likewise.\n\t(*cmpfp_iu_mixed): Likewise.\n\t(*cmpfp_iu_sse): Likewise.\n\t(*cmpfp_iu_387): Likewise.\n\t(*swap<mode>,*swap<mode>_1): Likewise.\n\t(fixuns_trunc<mode>hi2): Likewise.\n\t(fix_trunc<mode>si_sse): Likewise.\n\t(x86_fnstcw_1): Likewise.\n\t(x86_fldcw_1): Likewise.\n\t(*floatsi<mode>2_vector_mixed_with_temp): Likewise.\n\t(*floatsi<mode>2_vector_mixed): Likewise.\n\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_with_temp): Likewise.\n\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_interunit): Likewise.\n\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_nointerunit): Likewise.\n\t(*floatsi<mode>2_vector_sse_with_temp): Likewise.\n\t(*floatsi<mode>2_vector_sse): Likewise.\n\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_with_temp): Likewise.\n\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_interunit): Likewise.\n\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_nointerunit): Likewise.\n\t(*mul<mode>3_1): Likewise.\n\t(*mulsi3_1_zext): Likewise.\n\t(*mulhi3_1): Likewise.\n\t(*mulqi3_1): Likewise.\n\t(*<u>mul<mode><dwi>3_1): Likewise.\n\t(*<u>mulqihi3_1): Likewise.\n\t(*<s>muldi3_highpart_1): Likewise.\n\t(*<s>mulsi3_highpart_1): Likewise.\n\t(*<s>mulsi3_highpart_zext): Likewise.\n\t(x86_64_shld): Likewise.\n\t(x86_shld): Likewise.\n\t(x86_64_shrd): Likewise.\n\t(x86_shrd): Likewise.\n\t(sqrtxf2): Likewise.\n\t(sqrt_extend<mode>xf2_i387): Likewise.\n\t(*sqrt<mode>2_sse): Likewise.\n\t* gcc/config/i386/sse.md (sse_cvtsi2ss): Add \"bdver1_decode\" attribute.\n\t(sse_cvtsi2ssq): Likewise.\n\t(sse_cvtss2si): Likewise.\n\t(sse_cvtss2si_2): Likewise.\n\t(sse_cvtss2siq): Likewise.\n\t(sse_cvtss2siq_2): Likewise.\n\t(sse_cvttss2si): Likewise.\n\t(sse_cvttss2siq): Likewise.\n\t(sse2_cvtpi2pd): Likewise.\n\t(sse2_cvttpd2pi): Likewise.\n\t(sse2_cvtsi2sd): Likewise.\n\t(sse2_cvtsi2sdq): Likewise.\n\t(sse2_cvtsd2si): Likewise.\n\t(sse2_cvtsd2si_2): Likewise.\n\t(sse2_cvtsd2siq): Likewise.\n\t(sse2_cvtsd2siq_2): Likewise.\n\t(sse2_cvttsd2si): Likewise.\n\t(sse2_cvttsd2siq): Likewise.\n\t(*sse2_cvtpd2dq): Likewise.\n\t(*sse2_cvttpd2dq): Likewise.\n\t(sse2_cvtsd2ss): Likewise.\n\t(sse2_cvtss2sd): Likewise.\n\t(*sse2_cvtpd2ps): Likewise.\n\t(sse2_cvtps2pd): Likewise.\n\nFrom-SVN: r165853", "tree": {"sha": "bf75028d2aefa9d0005831a8670ad46ea094b29f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf75028d2aefa9d0005831a8670ad46ea094b29f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a08ffca63fad95a1915c948452c7ab25bcade9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a08ffca63fad95a1915c948452c7ab25bcade9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a08ffca63fad95a1915c948452c7ab25bcade9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a08ffca63fad95a1915c948452c7ab25bcade9e/comments", "author": {"login": "changpeng", "id": 4239661, "node_id": "MDQ6VXNlcjQyMzk2NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4239661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changpeng", "html_url": "https://github.com/changpeng", "followers_url": "https://api.github.com/users/changpeng/followers", "following_url": "https://api.github.com/users/changpeng/following{/other_user}", "gists_url": "https://api.github.com/users/changpeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/changpeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changpeng/subscriptions", "organizations_url": "https://api.github.com/users/changpeng/orgs", "repos_url": "https://api.github.com/users/changpeng/repos", "events_url": "https://api.github.com/users/changpeng/events{/privacy}", "received_events_url": "https://api.github.com/users/changpeng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07db7d35a9b27002021a96fc0ac4175d102d56d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07db7d35a9b27002021a96fc0ac4175d102d56d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07db7d35a9b27002021a96fc0ac4175d102d56d3"}], "stats": {"total": 992, "additions": 962, "deletions": 30}, "files": [{"sha": "6e00d50e0fcea7ca632183c9ad32187f40c08bb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a08ffca63fad95a1915c948452c7ab25bcade9e", "patch": "@@ -1,3 +1,71 @@\n+2010-10-22  Changpeng Fang  <changpeng.fang@amd.com>\n+\n+\t* gcc/config/i386/bdver1.md: New file.\n+\t* gcc/config/i386/i386.md (include \"bdver1.md\"): Invoke the\n+\tpipeline description for bdver1.\n+\t(x86_sahf_1): Add \"bdver1_decode\" attribute.\n+\t(*cmpfp_i_mixed): Likewise.\n+\t(*cmpfp_i_sse): Likewise.\n+\t(*cmpfp_i_i387): Likewise.\n+\t(*cmpfp_iu_mixed): Likewise.\n+\t(*cmpfp_iu_sse): Likewise.\n+\t(*cmpfp_iu_387): Likewise.\n+\t(*swap<mode>,*swap<mode>_1): Likewise.\n+\t(fixuns_trunc<mode>hi2): Likewise.\n+\t(fix_trunc<mode>si_sse): Likewise.\n+\t(x86_fnstcw_1): Likewise.\n+\t(x86_fldcw_1): Likewise.\n+\t(*floatsi<mode>2_vector_mixed_with_temp): Likewise.\n+\t(*floatsi<mode>2_vector_mixed): Likewise.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_with_temp): Likewise.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_interunit): Likewise.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_mixed_nointerunit): Likewise.\n+\t(*floatsi<mode>2_vector_sse_with_temp): Likewise.\n+\t(*floatsi<mode>2_vector_sse): Likewise.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_with_temp): Likewise.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_interunit): Likewise.\n+\t(*float<SSEMODEI24:mode><MODEF:mode>2_sse_nointerunit): Likewise.\n+\t(*mul<mode>3_1): Likewise.\n+\t(*mulsi3_1_zext): Likewise.\n+\t(*mulhi3_1): Likewise.\n+\t(*mulqi3_1): Likewise.\n+\t(*<u>mul<mode><dwi>3_1): Likewise.\n+\t(*<u>mulqihi3_1): Likewise.\n+\t(*<s>muldi3_highpart_1): Likewise.\n+\t(*<s>mulsi3_highpart_1): Likewise.\n+\t(*<s>mulsi3_highpart_zext): Likewise.\n+\t(x86_64_shld): Likewise.\n+\t(x86_shld): Likewise.\n+\t(x86_64_shrd): Likewise.\n+\t(x86_shrd): Likewise.\n+\t(sqrtxf2): Likewise.\n+\t(sqrt_extend<mode>xf2_i387): Likewise.\n+\t(*sqrt<mode>2_sse): Likewise.\n+\t* gcc/config/i386/sse.md (sse_cvtsi2ss): Add \"bdver1_decode\" attribute.\n+\t(sse_cvtsi2ssq): Likewise.\n+\t(sse_cvtss2si): Likewise.\n+\t(sse_cvtss2si_2): Likewise.\n+\t(sse_cvtss2siq): Likewise.\n+\t(sse_cvtss2siq_2): Likewise.\n+\t(sse_cvttss2si): Likewise.\n+\t(sse_cvttss2siq): Likewise.\n+\t(sse2_cvtpi2pd): Likewise.\n+\t(sse2_cvttpd2pi): Likewise.\n+\t(sse2_cvtsi2sd): Likewise.\n+\t(sse2_cvtsi2sdq): Likewise.\n+\t(sse2_cvtsd2si): Likewise.\n+\t(sse2_cvtsd2si_2): Likewise.\n+\t(sse2_cvtsd2siq): Likewise.\n+\t(sse2_cvtsd2siq_2): Likewise.\n+\t(sse2_cvttsd2si): Likewise.\n+\t(sse2_cvttsd2siq): Likewise.\n+\t(*sse2_cvtpd2dq): Likewise.\n+\t(*sse2_cvttpd2dq): Likewise.\n+\t(sse2_cvtsd2ss): Likewise.\n+\t(sse2_cvtss2sd): Likewise.\n+\t(*sse2_cvtpd2ps): Likewise.\n+\t(sse2_cvtps2pd): Likewise.\n+\n 2010-10-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/46137"}, {"sha": "3cde476b5fd3a18303ec608d0268491f6f7ece51", "filename": "gcc/config/i386/bdver1.md", "status": "added", "additions": 796, "deletions": 0, "changes": 796, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2Fconfig%2Fi386%2Fbdver1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2Fconfig%2Fi386%2Fbdver1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbdver1.md?ref=6a08ffca63fad95a1915c948452c7ab25bcade9e", "patch": "@@ -0,0 +1,796 @@\n+;; Copyright (C) 2010, Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+;;\n+;; AMD bdver1 Scheduling\n+;;\n+;; The bdver1 contains four pipelined FP units, two integer units and\n+;; two address generation units.\n+;;\n+;; The predecode logic is determining boundaries of instructions in the 64\n+;; byte cache line.  So the cache line straddling problem of K6 might be issue\n+;; here as well, but it is not noted in the documentation.\n+;;\n+;; Three DirectPath instructions decoders and only one VectorPath decoder\n+;; is available.  They can decode three DirectPath instructions or one\n+;; VectorPath instruction per cycle.\n+;;\n+;; The load/store queue unit is not attached to the schedulers but\n+;; communicates with all the execution units separately instead.\n+\n+\n+(define_attr \"bdver1_decode\" \"direct,vector,double\"\n+  (const_string \"direct\"))\n+\n+(define_automaton \"bdver1,bdver1_int,bdver1_load,bdver1_mult,bdver1_fp\")\n+\n+(define_cpu_unit \"bdver1-decode0\" \"bdver1\")\n+(define_cpu_unit \"bdver1-decode1\" \"bdver1\")\n+(define_cpu_unit \"bdver1-decode2\" \"bdver1\")\n+(define_cpu_unit \"bdver1-decodev\" \"bdver1\")\n+\n+;; Model the fact that double decoded instruction may take 2 cycles\n+;; to decode when decoder2 and decoder0 in next cycle\n+;; is used (this is needed to allow throughput of 1.5 double decoded\n+;; instructions per cycle).\n+;;\n+;; In order to avoid dependence between reservation of decoder\n+;; and other units, we model decoder as two stage fully pipelined unit\n+;; and only double decoded instruction may occupy unit in the first cycle.\n+;; With this scheme however two double instructions can be issued cycle0.\n+;;\n+;; Avoid this by using presence set requiring decoder0 to be allocated\n+;; too.  Vector decoded instructions then can't be issued when modeled\n+;; as consuming decoder0+decoder1+decoder2.\n+;; We solve that by specialized vector decoder unit and exclusion set.\n+(presence_set \"bdver1-decode2\" \"bdver1-decode0\")\n+(exclusion_set \"bdver1-decodev\" \"bdver1-decode0,bdver1-decode1,bdver1-decode2\")\n+\n+(define_reservation \"bdver1-vector\" \"nothing,bdver1-decodev\")\n+(define_reservation \"bdver1-direct1\" \"nothing,bdver1-decode1\")\n+(define_reservation \"bdver1-direct\" \"nothing,\n+\t\t\t\t     (bdver1-decode0 | bdver1-decode1\n+\t\t\t\t     | bdver1-decode2)\")\n+;; Double instructions behaves like two direct instructions.\n+(define_reservation \"bdver1-double\" \"((bdver1-decode2,bdver1-decode0)\n+\t\t\t\t     | (nothing,(bdver1-decode0 + bdver1-decode1))\n+\t\t\t\t     | (nothing,(bdver1-decode1 + bdver1-decode2)))\")\n+\n+\n+(define_cpu_unit \"bdver1-ieu0\" \"bdver1_int\")\n+(define_cpu_unit \"bdver1-ieu1\" \"bdver1_int\")\n+(define_reservation \"bdver1-ieu\" \"(bdver1-ieu0 | bdver1-ieu1)\")\n+\n+(define_cpu_unit \"bdver1-agu0\" \"bdver1_int\")\n+(define_cpu_unit \"bdver1-agu1\" \"bdver1_int\")\n+(define_reservation \"bdver1-agu\" \"(bdver1-agu0 | bdver1-agu1)\")\n+\n+(define_cpu_unit \"bdver1-mult\" \"bdver1_mult\")\n+\n+(define_cpu_unit \"bdver1-load0\" \"bdver1_load\")\n+(define_cpu_unit \"bdver1-load1\" \"bdver1_load\")\n+(define_reservation \"bdver1-load\" \"bdver1-agu,\n+\t\t\t\t   (bdver1-load0 | bdver1-load1),nothing\")\n+;; 128bit SSE instructions issue two loads at once.\n+(define_reservation \"bdver1-load2\" \"bdver1-agu,\n+\t\t\t\t   (bdver1-load0 + bdver1-load1),nothing\")\n+\n+(define_reservation \"bdver1-store\" \"(bdver1-load0 | bdver1-load1)\")\n+;; 128bit SSE instructions issue two stores at once.\n+(define_reservation \"bdver1-store2\" \"(bdver1-load0 + bdver1-load1)\")\n+\n+;; The FP operations start to execute at stage 12 in the pipeline, while\n+;; integer operations start to execute at stage 9 for athlon and 11 for K8\n+;; Compensate the difference for athlon because it results in significantly\n+;; smaller automata.\n+;; NOTE: the above information was just copied from athlon.md, and was not\n+;; actually verified for bdver1.\n+(define_reservation \"bdver1-fpsched\" \"nothing,nothing,nothing\")\n+;; The floating point loads.\n+(define_reservation \"bdver1-fpload\" \"(bdver1-fpsched + bdver1-load)\")\n+(define_reservation \"bdver1-fpload2\" \"(bdver1-fpsched + bdver1-load2)\")\n+\n+;; Four FP units.\n+(define_cpu_unit \"bdver1-ffma0\" \"bdver1_fp\")\n+(define_cpu_unit \"bdver1-ffma1\" \"bdver1_fp\")\n+(define_cpu_unit \"bdver1-fmal0\" \"bdver1_fp\")\n+(define_cpu_unit \"bdver1-fmal1\" \"bdver1_fp\")\n+\n+(define_reservation \"bdver1-ffma\"     \"(bdver1-ffma0 | bdver1-ffma1)\")\n+(define_reservation \"bdver1-fcvt\"     \"bdver1-ffma0\")\n+(define_reservation \"bdver1-fmma\"     \"bdver1-ffma0\")\n+(define_reservation \"bdver1-fxbar\"    \"bdver1-ffma1\")\n+(define_reservation \"bdver1-fmal\"     \"(bdver1-fmal0 | bdver1-fmal1)\")\n+(define_reservation \"bdver1-fsto\"     \"bdver1-fmal1\")\n+\n+;; Vector operations usually consume many of pipes.\n+(define_reservation \"bdver1-fvector\"  \"(bdver1-ffma0 + bdver1-ffma1\n+\t\t\t\t\t+ bdver1-fmal0 + bdver1-fmal1)\")\n+\n+;; Jump instructions are executed in the branch unit completely transparent to us.\n+(define_insn_reservation \"bdver1_call\" 0\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"call,callv\"))\n+\t\t\t \"bdver1-double,bdver1-agu,bdver1-ieu\")\n+;; PUSH mem is double path.\n+(define_insn_reservation \"bdver1_push\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"push\"))\n+\t\t\t \"bdver1-direct,bdver1-agu,bdver1-store\")\n+;; POP r16/mem are double path.\n+(define_insn_reservation \"bdver1_pop\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"pop\"))\n+\t\t\t \"bdver1-direct,(bdver1-ieu+bdver1-load)\")\n+;; LEAVE no latency info so far, assume same with amdfam10.\n+(define_insn_reservation \"bdver1_leave\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"leave\"))\n+\t\t\t \"bdver1-vector,(bdver1-ieu+bdver1-load)\")\n+;; LEA executes in AGU unit with 1 cycle latency on BDVER1.\n+(define_insn_reservation \"bdver1_lea\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"lea\"))\n+\t\t\t \"bdver1-direct,bdver1-agu,nothing\")\n+\n+;; MUL executes in special multiplier unit attached to IEU1.\n+(define_insn_reservation \"bdver1_imul_DI\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n+\t\t\t \"bdver1-direct1,bdver1-ieu1,bdver1-mult,nothing,bdver1-ieu1\")\n+(define_insn_reservation \"bdver1_imul\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n+\t\t\t \"bdver1-direct1,bdver1-ieu1,bdver1-mult,bdver1-ieu1\")\n+(define_insn_reservation \"bdver1_imul_mem_DI\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load,both\"))))\n+\t\t\t \"bdver1-direct1,bdver1-load,bdver1-ieu,bdver1-mult,nothing,bdver1-ieu\")\n+(define_insn_reservation \"bdver1_imul_mem\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"imul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n+\t\t\t \"bdver1-direct1,bdver1-load,bdver1-ieu,bdver1-mult,bdver1-ieu\")\n+\n+;; IDIV cannot execute in parallel with other instructions.  Dealing with it\n+;; as with short latency vector instruction is good approximation avoiding\n+;; scheduler from trying too hard to can hide it's latency by overlap with\n+;; other instructions.\n+;; ??? Experiments show that the IDIV can overlap with roughly 6 cycles\n+;; of the other code.\n+(define_insn_reservation \"bdver1_idiv\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n+\t\t\t \"bdver1-vector,(bdver1-ieu0*6+(bdver1-fpsched,bdver1-fvector))\")\n+\n+(define_insn_reservation \"bdver1_idiv_mem\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n+\t\t\t \"bdver1-vector,((bdver1-load,bdver1-ieu0*6)+(bdver1-fpsched,bdver1-fvector))\")\n+\n+;; The parallelism of string instructions is not documented.  Model it same way\n+;; as IDIV to create smaller automata.  This probably does not matter much.\n+;; Using the same heuristics for bdver1 as amdfam10 and K8 with IDIV.\n+(define_insn_reservation \"bdver1_str\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"str\")\n+\t\t\t\t   (eq_attr \"memory\" \"load,both,store\")))\n+\t\t\t \"bdver1-vector,bdver1-load,bdver1-ieu0*6\")\n+\n+;; Integer instructions.\n+(define_insn_reservation \"bdver1_idirect\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n+\t\t\t \"bdver1-direct,bdver1-ieu\")\n+(define_insn_reservation \"bdver1_ivector\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n+\t\t\t \"bdver1-vector,bdver1-ieu,bdver1-ieu\")\n+(define_insn_reservation \"bdver1_idirect_loadmov\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"imov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-load\")\n+(define_insn_reservation \"bdver1_idirect_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-load,bdver1-ieu\")\n+(define_insn_reservation \"bdver1_ivector_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-vector,bdver1-load,bdver1-ieu,bdver1-ieu\")\n+(define_insn_reservation \"bdver1_idirect_movstore\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"imov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store\")))\n+\t\t\t \"bdver1-direct,bdver1-agu,bdver1-store\")\n+(define_insn_reservation \"bdver1_idirect_both\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"both\"))))\n+\t\t\t \"bdver1-direct,bdver1-load,\n+\t\t\t  bdver1-ieu,bdver1-store,\n+\t\t\t  bdver1-store\")\n+(define_insn_reservation \"bdver1_ivector_both\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"both\"))))\n+\t\t\t \"bdver1-vector,bdver1-load,\n+\t\t\t  bdver1-ieu,\n+\t\t\t  bdver1-ieu,\n+\t\t\t  bdver1-store\")\n+(define_insn_reservation \"bdver1_idirect_store\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n+\t\t\t \"bdver1-direct,(bdver1-ieu+bdver1-agu),\n+\t\t\t  bdver1-store\")\n+(define_insn_reservation \"bdver1_ivector_store\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"vector\")\n+\t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n+\t\t\t \"bdver1-vector,(bdver1-ieu+bdver1-agu),bdver1-ieu,\n+\t\t\t  bdver1-store\")\n+\n+;; BDVER1 floating point units.\n+(define_insn_reservation \"bdver1_fldxf\" 13\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n+\t\t\t \"bdver1-vector,bdver1-fpload2,bdver1-fvector*9\")\n+(define_insn_reservation \"bdver1_fld\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fstxf\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"store,both\")\n+\t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n+\t\t\t \"bdver1-vector,(bdver1-fpsched+bdver1-agu),(bdver1-store2+(bdver1-fvector*6))\")\n+(define_insn_reservation \"bdver1_fst\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n+\t\t\t \"bdver1-double,(bdver1-fpsched+bdver1-agu),(bdver1-fsto+bdver1-store)\")\n+(define_insn_reservation \"bdver1_fist\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fistp,fisttp\"))\n+\t\t\t \"bdver1-double,(bdver1-fpsched+bdver1-agu),(bdver1-fsto+bdver1-store)\")\n+(define_insn_reservation \"bdver1_fmov_bdver1\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fmov\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fadd_load\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fop\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fadd\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fop\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fmul_load\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-double,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fmul\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fmul\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fsgn\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fsgn\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fdiv_load\" 46\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fdiv\" 42\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fdiv\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fpspc_load\" 103\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fpspc\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-vector,bdver1-fpload,bdver1-fvector\")\n+(define_insn_reservation \"bdver1_fpspc\" 100\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fpspc\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-vector,bdver1-fpload,bdver1-fvector\")\n+(define_insn_reservation \"bdver1_fcmov_load\" 17\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-vector,bdver1-fpload,bdver1-fvector\")\n+(define_insn_reservation \"bdver1_fcmov\" 15\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fcmov\"))\n+\t\t\t \"bdver1-vector,bdver1-fpsched,bdver1-fvector\")\n+(define_insn_reservation \"bdver1_fcomi_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmp\")\n+\t\t\t\t   (and (eq_attr \"bdver1_decode\" \"double\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-ffma | bdver1-fsto)\")\n+(define_insn_reservation \"bdver1_fcomi\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"bdver1_decode\" \"double\")\n+\t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-ffma | bdver1-fsto)\")\n+(define_insn_reservation \"bdver1_fcom_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"fcmp\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fcom\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fcmp\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_fxch\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"fxch\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+\n+;; SSE loads.\n+(define_insn_reservation \"bdver1_ssevector_avx128_unaligned_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"prefix\" \"vex\")\n+\t\t\t\t\t(and (eq_attr \"movu\" \"1\")\n+\t\t\t\t\t     (and (eq_attr \"mode\" \"V4SF,V2DF\")\n+\t\t\t\t\t\t  (eq_attr \"memory\" \"load\"))))))\n+\t\t\t \"bdver1-direct,bdver1-fpload\")\n+(define_insn_reservation \"bdver1_ssevector_avx256_unaligned_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"movu\" \"1\")\n+\t\t\t\t        (and (eq_attr \"mode\" \"V8SF,V4DF\")\n+\t\t\t\t             (eq_attr \"memory\" \"load\")))))\n+\t\t\t \"bdver1-double,bdver1-fpload\")\n+(define_insn_reservation \"bdver1_ssevector_sse128_unaligned_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"movu\" \"1\")\n+\t\t\t\t        (and (eq_attr \"mode\" \"V4SF,V2DF\")\n+\t\t\t\t             (eq_attr \"memory\" \"load\")))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_ssevector_avx128_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"prefix\" \"vex\")\n+\t\t\t\t        (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n+\t\t\t\t             (eq_attr \"memory\" \"load\")))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_ssevector_avx256_load\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF,OI\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_ssevector_sse128_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload\")\n+(define_insn_reservation \"bdver1_ssescalar_movq_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_ssescalar_vmovss_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"prefix\" \"vex\")\n+\t\t\t\t        (and (eq_attr \"mode\" \"SF\")\n+\t\t\t\t             (eq_attr \"memory\" \"load\")))))\n+\t\t\t \"bdver1-direct,bdver1-fpload\")\n+(define_insn_reservation \"bdver1_ssescalar_sse128_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload, bdver1-ffma\")\n+(define_insn_reservation \"bdver1_mmxsse_load\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload, bdver1-fmal\")\n+\n+;; SSE stores.\n+(define_insn_reservation \"bdver1_sse_store_avx256\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF,OI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store,both\"))))\n+\t\t\t \"bdver1-double,(bdver1-fpsched+bdver1-agu),((bdver1-fsto+bdver1-store)*2)\")\n+(define_insn_reservation \"bdver1_sse_store\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"store,both\"))))\n+\t\t\t \"bdver1-direct,(bdver1-fpsched+bdver1-agu),((bdver1-fsto+bdver1-store)*2)\")\n+(define_insn_reservation \"bdver1_mmxsse_store_short\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n+\t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n+\t\t\t \"bdver1-direct,(bdver1-fpsched+bdver1-agu),(bdver1-fsto+bdver1-store)\")\n+\n+;; Register moves.\n+(define_insn_reservation \"bdver1_ssevector_avx256\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF,OI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_movss_movsd\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemov\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+                                        (eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_mmxssemov\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n+\t\t\t\t   (eq_attr \"memory\" \"none\")))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fmal\")\n+;; SSE logs.\n+(define_insn_reservation \"bdver1_sselog_load_256\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sselog,sselog1\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_sselog_256\" 3\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sselog,sselog1\")\n+                                   (eq_attr \"mode\" \"V8SF\")))\n+\t\t\t \"bdver1-double,bdver1-fpsched,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_sselog_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sselog,sselog1\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fxbar\")\n+(define_insn_reservation \"bdver1_sselog\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"sselog,sselog1\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fxbar\")\n+\n+;; PCMP actually executes in FMAL.\n+(define_insn_reservation \"bdver1_ssecmp_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_ssecmp\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"ssecmp\"))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_ssecomi_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecomi\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-ffma | bdver1-fsto)\")\n+(define_insn_reservation \"bdver1_ssecomi\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (eq_attr \"type\" \"ssecomi\"))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-ffma | bdver1-fsto)\")\n+\n+;; Conversions behaves very irregularly and the scheduling is critical here.\n+;; Take each instruction separately.\n+\n+;; 256 bit conversion.\n+(define_insn_reservation \"bdver1_vcvtX2Y_avx256_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t\t(ior (ior (match_operand:V4DF 0 \"register_operand\")\n+\t\t\t\t\t          (ior (match_operand:V8SF 0 \"register_operand\")\n+\t\t\t\t\t\t       (match_operand:V8SI 0 \"register_operand\")))\n+\t\t\t\t\t     (ior (match_operand:V4DF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t\t  (ior (match_operand:V8SF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t\t       (match_operand:V8SI 1 \"nonimmediate_operand\")))))))\n+\t\t\t \"bdver1-vector,bdver1-fpload,bdver1-fvector\")\n+(define_insn_reservation \"bdver1_vcvtX2Y_avx256\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t\t(ior (ior (match_operand:V4DF 0 \"register_operand\")\n+\t\t\t\t\t          (ior (match_operand:V8SF 0 \"register_operand\")\n+\t\t\t\t\t\t       (match_operand:V8SI 0 \"register_operand\")))\n+\t\t\t\t\t     (ior (match_operand:V4DF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t\t  (ior (match_operand:V8SF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t\t       (match_operand:V8SI 1 \"nonimmediate_operand\")))))))\n+\t\t\t \"bdver1-vector,bdver1-fpsched,bdver1-fvector\")\n+;; CVTSS2SD, CVTSD2SS.\n+(define_insn_reservation \"bdver1_ssecvt_cvtss2sd_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fcvt\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtss2sd\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fcvt\")\n+;; CVTSI2SD, CVTSI2SS, CVTSI2SDQ, CVTSI2SSQ.\n+(define_insn_reservation \"bdver1_sseicvt_cvtsi2sd_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fcvt\")\n+(define_insn_reservation \"bdver1_sseicvt_cvtsi2sd\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(nothing | bdver1-fcvt)\")\n+;; CVTPD2PS.\n+(define_insn_reservation \"bdver1_ssecvt_cvtpd2ps_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+                                        (and (match_operand:V4SF 0 \"register_operand\")\n+\t\t\t\t\t     (match_operand:V2DF 1 \"nonimmediate_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-fxbar | bdver1-fcvt)\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtpd2ps\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+                                        (and (match_operand:V4SF 0 \"register_operand\")\n+\t\t\t\t\t     (match_operand:V2DF 1 \"nonimmediate_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-fxbar | bdver1-fcvt)\")\n+;; CVTPI2PS, CVTDQ2PS.\n+(define_insn_reservation \"bdver1_ssecvt_cvtdq2ps_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+                                        (and (match_operand:V4SF 0 \"register_operand\")\n+\t\t\t\t\t     (ior (match_operand:V2SI 1 \"nonimmediate_operand\")\n+\t\t\t\t\t          (match_operand:V4SI 1 \"nonimmediate_operand\"))))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fcvt\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtdq2ps\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+                                        (and (match_operand:V4SF 0 \"register_operand\")\n+\t\t\t\t\t     (ior (match_operand:V2SI 1 \"nonimmediate_operand\")\n+\t\t\t\t\t          (match_operand:V4SI 1 \"nonimmediate_operand\"))))))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fcvt\")\n+;; CVTDQ2PD.\n+(define_insn_reservation \"bdver1_ssecvt_cvtdq2pd_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+                                        (and (match_operand:V2DF 0 \"register_operand\")\n+\t\t\t\t\t     (match_operand:V4SI 1 \"nonimmediate_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-fxbar | bdver1-fcvt)\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtdq2pd\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+                                        (and (match_operand:V2DF 0 \"register_operand\")\n+\t\t\t\t\t     (match_operand:V4SI 1 \"nonimmediate_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-fxbar | bdver1-fcvt)\")\n+;; CVTPS2PD, CVTPI2PD.\n+(define_insn_reservation \"bdver1_ssecvt_cvtps2pd_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+                                        (and (match_operand:V2DF 0 \"register_operand\")\n+\t\t\t\t\t     (ior (match_operand:V2SI 1 \"nonimmediate_operand\")\n+\t\t\t\t\t          (match_operand:V4SF 1 \"nonimmediate_operand\"))))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-fxbar | bdver1-fcvt)\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtps2pd\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+                                        (and (match_operand:V2DF 0 \"register_operand\")\n+\t\t\t\t\t     (ior (match_operand:V2SI 1 \"nonimmediate_operand\")\n+\t\t\t\t\t          (match_operand:V4SF 1 \"nonimmediate_operand\"))))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-fxbar | bdver1-fcvt)\")\n+;; CVTSD2SI, CVTSD2SIQ, CVTSS2SI, CVTSS2SIQ, CVTTSD2SI, CVTTSD2SIQ, CVTTSS2SI, CVTTSS2SIQ.\n+(define_insn_reservation \"bdver1_ssecvt_cvtsX2si_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SI,DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-fcvt | bdver1-fsto)\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtsX2si\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SI,DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-fcvt | bdver1-fsto)\")\n+;; CVTPD2PI, CVTTPD2PI.\n+(define_insn_reservation \"bdver1_ssecvt_cvtpd2pi_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t     (match_operand:V2SI 0 \"register_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-fcvt | bdver1-fxbar)\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtpd2pi\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t     (match_operand:V2SI 0 \"register_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-fcvt | bdver1-fxbar)\")\n+;; CVTPD2DQ, CVTTPD2DQ.\n+(define_insn_reservation \"bdver1_ssecvt_cvtpd2dq_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t     (match_operand:V4SI 0 \"register_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-fcvt | bdver1-fxbar)\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtpd2dq\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n+\t\t\t\t\t     (match_operand:V4SI 0 \"register_operand\")))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-fcvt | bdver1-fxbar)\")\n+;; CVTPS2PI, CVTTPS2PI, CVTPS2DQ, CVTTPS2DQ.\n+(define_insn_reservation \"bdver1_ssecvt_cvtps2pi_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+                                   (and (eq_attr \"memory\" \"load\")\n+\t\t\t\t        (and (match_operand:V4SF 1 \"nonimmediate_operand\")\n+\t\t\t\t             (ior (match_operand: V2SI 0 \"register_operand\")\n+\t\t\t\t\t\t  (match_operand: V4SI 0 \"register_operand\"))))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fcvt\")\n+(define_insn_reservation \"bdver1_ssecvt_cvtps2pi\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n+\t\t\t\t   (and (eq_attr \"memory\" \"none\")\n+\t\t\t\t        (and (match_operand:V4SF 1 \"nonimmediate_operand\")\n+\t\t\t\t             (ior (match_operand: V2SI 0 \"register_operand\")\n+\t\t\t\t\t\t  (match_operand: V4SI 0 \"register_operand\"))))))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fcvt\")\n+\n+;; SSE MUL, ADD, and MULADD.\n+(define_insn_reservation \"bdver1_ssemuladd_load_256\" 11\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,ssemuladd\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_ssemuladd_256\" 7\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,ssemuladd\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_ssemuladd_load\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,ssemuladd\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_ssemuladd\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,ssemuladd\")\n+\t\t\t\t   (eq_attr \"memory\" \"none\")))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-ffma\")\n+(define_insn_reservation \"bdver1_sseimul_load\" 8\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseimul\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fmma\")\n+(define_insn_reservation \"bdver1_sseimul\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseimul\")\n+\t\t\t\t   (eq_attr \"memory\" \"none\")))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fmma\")\n+(define_insn_reservation \"bdver1_sseiadd_load\" 6\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseiadd\")\n+\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t \"bdver1-direct,bdver1-fpload,bdver1-fmal\")\n+(define_insn_reservation \"bdver1_sseiadd\" 2\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"sseiadd\")\n+\t\t\t\t   (eq_attr \"memory\" \"none\")))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,bdver1-fmal\")\n+\n+;; SSE DIV: no throughput information (assume same as amdfam10).\n+(define_insn_reservation \"bdver1_ssediv_double_load_256\" 31\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V4DF\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_double_256\" 27\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V4DF\")\n+\t\t\t\t        (eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_single_load_256\" 28\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF\")\n+\t\t\t\t        (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-double,bdver1-fpload,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_single_256\" 24\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"V8SF\")\n+\t\t\t\t        (eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-double,bdver1-fpsched,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_double_load\" 31\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DF,V2DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_double\" 27\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DF,V2DF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_single_load\" 28\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,V4SF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpload,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+(define_insn_reservation \"bdver1_ssediv_single\" 24\n+\t\t\t (and (eq_attr \"cpu\" \"bdver1\")\n+\t\t\t      (and (eq_attr \"type\" \"ssediv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SF,V4SF\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"bdver1-direct,bdver1-fpsched,(bdver1-ffma0*17 | bdver1-ffma1*17)\")\n+\n+(define_insn_reservation \"bdver1_sseins\" 3\n+                         (and (eq_attr \"cpu\" \"bdver1\")\n+                              (and (eq_attr \"type\" \"sseins\")\n+                                   (eq_attr \"mode\" \"TI\")))\n+                         \"bdver1-direct,bdver1-fpsched,bdver1-fxbar\")\n+"}, {"sha": "475e530ae4ed444d6c9f9529c2e9de9428c6ce4b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 64, "deletions": 20, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6a08ffca63fad95a1915c948452c7ab25bcade9e", "patch": "@@ -928,6 +928,7 @@\n (include \"ppro.md\")\n (include \"k6.md\")\n (include \"athlon.md\")\n+(include \"bdver1.md\")\n (include \"geode.md\")\n (include \"atom.md\")\n \n@@ -1456,6 +1457,7 @@\n   [(set_attr \"length\" \"1\")\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"SI\")])\n \n ;; Pentium Pro can do steps 1 through 3 in one go.\n@@ -1486,7 +1488,8 @@\n \t      ]\n \t      (const_string \"0\")))\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*cmpfp_i_sse\"\n   [(set (reg:CCFP FLAGS_REG)\n@@ -1508,7 +1511,8 @@\n \t\t      (const_string \"1\")\n \t\t      (const_string \"0\")))\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*cmpfp_i_i387\"\n   [(set (reg:CCFP FLAGS_REG)\n@@ -1528,7 +1532,8 @@\n \t   ]\n \t   (const_string \"XF\")))\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*cmpfp_iu_mixed\"\n   [(set (reg:CCFPU FLAGS_REG)\n@@ -1556,7 +1561,8 @@\n \t      ]\n \t      (const_string \"0\")))\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*cmpfp_iu_sse\"\n   [(set (reg:CCFPU FLAGS_REG)\n@@ -1578,7 +1584,8 @@\n \t\t      (const_string \"1\")\n \t\t      (const_string \"0\")))\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*cmpfp_iu_387\"\n   [(set (reg:CCFPU FLAGS_REG)\n@@ -1598,7 +1605,8 @@\n \t   ]\n \t   (const_string \"XF\")))\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"direct\")])\n \f\n ;; Push/pop instructions.\n \n@@ -2352,7 +2360,8 @@\n    (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"pent_pair\" \"np\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"double\")])\n+   (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*swap<mode>_1\"\n   [(set (match_operand:SWI12 0 \"register_operand\" \"+r\")\n@@ -2365,7 +2374,8 @@\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"pent_pair\" \"np\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"double\")])\n+   (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n ;; Not added amdfam10_decode since TARGET_PARTIAL_REG_STALL\n ;; is disabled for AMDFAM10\n@@ -4560,7 +4570,8 @@\n    (set_attr \"prefix_rex\" \"1\")\n    (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n-   (set_attr \"amdfam10_decode\" \"double,double\")])\n+   (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")])\n \n (define_insn \"fix_trunc<mode>si_sse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -4572,7 +4583,8 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n-   (set_attr \"amdfam10_decode\" \"double,double\")])\n+   (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")])\n \n ;; Shorten x87->SSE reload sequences of fix_trunc?f?i_sse patterns.\n (define_peephole2\n@@ -4827,7 +4839,8 @@\n   [(set (attr \"length\")\n \t(symbol_ref \"ix86_attr_length_address_default (insn) + 2\"))\n    (set_attr \"mode\" \"HI\")\n-   (set_attr \"unit\" \"i387\")])\n+   (set_attr \"unit\" \"i387\")\n+   (set_attr \"bdver1_decode\" \"vector\")])\n \n (define_insn \"x86_fldcw_1\"\n   [(set (reg:HI FPCR_REG)\n@@ -4839,7 +4852,8 @@\n    (set_attr \"mode\" \"HI\")\n    (set_attr \"unit\" \"i387\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"vector\")])\n+   (set_attr \"amdfam10_decode\" \"vector\")\n+   (set_attr \"bdver1_decode\" \"vector\")])\n \f\n ;; Conversion between fixed point and floating point.\n \n@@ -4993,6 +5007,7 @@\n    (set_attr \"unit\" \"*,i387,*,*,*\")\n    (set_attr \"athlon_decode\" \"*,*,double,direct,double\")\n    (set_attr \"amdfam10_decode\" \"*,*,vector,double,double\")\n+   (set_attr \"bdver1_decode\" \"*,*,double,direct,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatsi<mode>2_vector_mixed\"\n@@ -5008,6 +5023,7 @@\n    (set_attr \"unit\" \"i387,*\")\n    (set_attr \"athlon_decode\" \"*,direct\")\n    (set_attr \"amdfam10_decode\" \"*,double\")\n+   (set_attr \"bdver1_decode\" \"*,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_mixed_with_temp\"\n@@ -5023,6 +5039,7 @@\n    (set_attr \"unit\" \"*,i387,*,*\")\n    (set_attr \"athlon_decode\" \"*,*,double,direct\")\n    (set_attr \"amdfam10_decode\" \"*,*,vector,double\")\n+   (set_attr \"bdver1_decode\" \"*,*,double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_split\n@@ -5075,6 +5092,7 @@\n    (set_attr \"unit\" \"i387,*,*\")\n    (set_attr \"athlon_decode\" \"*,double,direct\")\n    (set_attr \"amdfam10_decode\" \"*,vector,double\")\n+   (set_attr \"bdver1_decode\" \"*,double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_mixed_nointerunit\"\n@@ -5098,6 +5116,7 @@\n        (const_string \"*\")))\n    (set_attr \"athlon_decode\" \"*,direct\")\n    (set_attr \"amdfam10_decode\" \"*,double\")\n+   (set_attr \"bdver1_decode\" \"*,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatsi<mode>2_vector_sse_with_temp\"\n@@ -5112,6 +5131,7 @@\n    (set_attr \"mode\" \"<MODE>,<MODE>,<ssevecmode>\")\n    (set_attr \"athlon_decode\" \"double,direct,double\")\n    (set_attr \"amdfam10_decode\" \"vector,double,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*floatsi<mode>2_vector_sse\"\n@@ -5124,6 +5144,7 @@\n    (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"athlon_decode\" \"direct\")\n    (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_split\n@@ -5259,6 +5280,7 @@\n    (set_attr \"mode\" \"<MODEF:MODE>\")\n    (set_attr \"athlon_decode\" \"double,direct\")\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"*float<SSEMODEI24:mode><MODEF:mode>2_sse_interunit\"\n@@ -5280,6 +5302,7 @@\n        (const_string \"*\")))\n    (set_attr \"athlon_decode\" \"double,direct\")\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_split\n@@ -5314,6 +5337,7 @@\n        (const_string \"*\")))\n    (set_attr \"athlon_decode\" \"direct\")\n    (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_split\n@@ -6851,6 +6875,8 @@\n ;; IMUL reg32/64, mem32/64, imm32 \tVectorPath\n ;; IMUL reg32/64, reg32/64 \t\tDirect\n ;; IMUL reg32/64, mem32/64 \t\tDirect\n+;;\n+;; On BDVER1, all above IMULs use DirectPath\n \n (define_insn \"*mul<mode>3_1\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r,r,r\")\n@@ -6879,6 +6905,7 @@\n \t\t    (match_operand 1 \"memory_operand\" \"\"))\n \t\t  (const_string \"vector\")]\n \t      (const_string \"direct\")))\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*mulsi3_1_zext\"\n@@ -6909,6 +6936,7 @@\n \t\t    (match_operand 1 \"memory_operand\" \"\"))\n \t\t  (const_string \"vector\")]\n \t      (const_string \"direct\")))\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"SI\")])\n \n ;; On AMDFAM10\n@@ -6918,6 +6946,8 @@\n ;; IMUL reg16, mem16, imm16 \tVectorPath\n ;; IMUL reg16, reg16 \t\tDirect\n ;; IMUL reg16, mem16 \t\tDirect\n+;;\n+;; On BDVER1, all HI MULs use DoublePath\n \n (define_insn \"*mulhi3_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r\")\n@@ -6942,9 +6972,10 @@\n \t(cond [(eq_attr \"alternative\" \"0,1\")\n \t\t  (const_string \"vector\")]\n \t      (const_string \"direct\")))\n+   (set_attr \"bdver1_decode\" \"double\")\n    (set_attr \"mode\" \"HI\")])\n \n-;;On AMDFAM10\n+;;On AMDFAM10 and BDVER1\n ;; MUL reg8 \tDirect\n ;; MUL mem8 \tDirect\n \n@@ -6963,6 +6994,7 @@\n         (const_string \"vector\")\n         (const_string \"direct\")))\n    (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"QI\")])\n \n (define_expand \"<u>mul<mode><dwi>3\"\n@@ -7001,6 +7033,7 @@\n         (const_string \"vector\")\n         (const_string \"double\")))\n    (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*<u>mulqihi3_1\"\n@@ -7021,6 +7054,7 @@\n         (const_string \"vector\")\n         (const_string \"direct\")))\n    (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"QI\")])\n \n (define_expand \"<s>mul<mode>3_highpart\"\n@@ -7060,6 +7094,7 @@\n         (const_string \"vector\")\n         (const_string \"double\")))\n    (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"*<s>mulsi3_highpart_1\"\n@@ -7083,6 +7118,7 @@\n         (const_string \"vector\")\n         (const_string \"double\")))\n    (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*<s>mulsi3_highpart_zext\"\n@@ -7106,6 +7142,7 @@\n         (const_string \"vector\")\n         (const_string \"double\")))\n    (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"direct\")\n    (set_attr \"mode\" \"SI\")])\n \n ;; The patterns that match these are at the end of this file.\n@@ -9094,7 +9131,8 @@\n    (set_attr \"prefix_0f\" \"1\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"vector\")])\n+   (set_attr \"amdfam10_decode\" \"vector\")\n+   (set_attr \"bdver1_decode\" \"vector\")])\n \n (define_insn \"x86_shld\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"+r*m\")\n@@ -9110,7 +9148,8 @@\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"pent_pair\" \"np\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"vector\")])\n+   (set_attr \"amdfam10_decode\" \"vector\")\n+   (set_attr \"bdver1_decode\" \"vector\")])\n \n (define_expand \"x86_shift<mode>_adj_1\"\n   [(set (reg:CCZ FLAGS_REG)\n@@ -9791,7 +9830,8 @@\n    (set_attr \"prefix_0f\" \"1\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"vector\")])\n+   (set_attr \"amdfam10_decode\" \"vector\")\n+   (set_attr \"bdver1_decode\" \"vector\")])\n \n (define_insn \"x86_shrd\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"+r*m\")\n@@ -9807,7 +9847,8 @@\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"pent_pair\" \"np\")\n    (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"vector\")])\n+   (set_attr \"amdfam10_decode\" \"vector\")\n+   (set_attr \"bdver1_decode\" \"vector\")])\n \n (define_insn \"ashrdi3_cvt\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=*d,rm\")\n@@ -12931,7 +12972,8 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")\n    (set_attr \"athlon_decode\" \"direct\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"direct\")])\n \n (define_insn \"sqrt_extend<mode>xf2_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n@@ -12943,7 +12985,8 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")\n    (set_attr \"athlon_decode\" \"direct\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"direct\")])\n \n (define_insn \"*rsqrtsf2_sse\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x\")\n@@ -12977,7 +13020,8 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"athlon_decode\" \"*\")\n-   (set_attr \"amdfam10_decode\" \"*\")])\n+   (set_attr \"amdfam10_decode\" \"*\")\n+   (set_attr \"bdver1_decode\" \"*\")])\n \n (define_expand \"sqrt<mode>2\"\n   [(set (match_operand:MODEF 0 \"register_operand\" \"\")"}, {"sha": "b45d73390638ba13f4eb6c48b826f665cdaf6154", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a08ffca63fad95a1915c948452c7ab25bcade9e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=6a08ffca63fad95a1915c948452c7ab25bcade9e", "patch": "@@ -2269,6 +2269,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"vector,double\")\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*avx_cvtsi2ssq\"\n@@ -2298,6 +2299,7 @@\n    (set_attr \"prefix_rex\" \"1\")\n    (set_attr \"athlon_decode\" \"vector,double\")\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"sse_cvtss2si\"\n@@ -2311,6 +2313,7 @@\n   \"%vcvtss2si\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n@@ -2324,6 +2327,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n@@ -2339,6 +2343,7 @@\n   \"%vcvtss2si{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DI\")])\n@@ -2352,6 +2357,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DI\")])\n@@ -2367,6 +2373,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n@@ -2382,6 +2389,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DI\")])\n@@ -2496,7 +2504,8 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"mmx\")\n    (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"mode\" \"DI\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"sse2_cvttpd2pi\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n@@ -2506,7 +2515,8 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"mmx\")\n    (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n+   (set_attr \"mode\" \"TI\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*avx_cvtsi2sd\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n@@ -2533,7 +2543,8 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"athlon_decode\" \"double,direct\")\n-   (set_attr \"amdfam10_decode\" \"vector,double\")])\n+   (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct\")])\n \n (define_insn \"*avx_cvtsi2sdq\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n@@ -2562,7 +2573,8 @@\n    (set_attr \"prefix_rex\" \"1\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"athlon_decode\" \"double,direct\")\n-   (set_attr \"amdfam10_decode\" \"vector,double\")])\n+   (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"double,direct\")])\n \n (define_insn \"sse2_cvtsd2si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -2575,6 +2587,7 @@\n   \"%vcvtsd2si\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n@@ -2588,6 +2601,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n@@ -2603,6 +2617,7 @@\n   \"%vcvtsd2siq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DI\")])\n@@ -2616,6 +2631,7 @@\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DI\")])\n@@ -2633,7 +2649,8 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n-   (set_attr \"amdfam10_decode\" \"double,double\")])\n+   (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")])\n \n (define_insn \"sse2_cvttsd2siq\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n@@ -2648,7 +2665,8 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n-   (set_attr \"amdfam10_decode\" \"double,double\")])\n+   (set_attr \"amdfam10_decode\" \"double,double\")\n+   (set_attr \"bdver1_decode\" \"double,double\")])\n \n (define_insn \"avx_cvtdq2pd256\"\n   [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n@@ -2716,7 +2734,8 @@\n    (set_attr \"prefix_data16\" \"0\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")\n-   (set_attr \"amdfam10_decode\" \"double\")])\n+   (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"avx_cvttpd2dq256\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n@@ -2746,7 +2765,8 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")\n-   (set_attr \"amdfam10_decode\" \"double\")])\n+   (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"*avx_cvtsd2ss\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n@@ -2775,6 +2795,7 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"athlon_decode\" \"vector,double\")\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"direct,direct\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*avx_cvtss2sd\"\n@@ -2805,6 +2826,7 @@\n   \"cvtss2sd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"bdver1_decode\" \"direct,direct\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"avx_cvtpd2ps256\"\n@@ -2839,7 +2861,8 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V4SF\")\n-   (set_attr \"amdfam10_decode\" \"double\")])\n+   (set_attr \"amdfam10_decode\" \"double\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_insn \"avx_cvtps2pd256\"\n   [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n@@ -2875,7 +2898,8 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V2DF\")\n    (set_attr \"prefix_data16\" \"0\")\n-   (set_attr \"amdfam10_decode\" \"direct\")])\n+   (set_attr \"amdfam10_decode\" \"direct\")\n+   (set_attr \"bdver1_decode\" \"double\")])\n \n (define_expand \"vec_unpacks_hi_v4sf\"\n   [(set (match_dup 2)"}]}