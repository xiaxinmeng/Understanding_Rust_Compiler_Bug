{"sha": "a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThmMDE0ZDczMDE4NjVjNjUxYTZmMmI0ZjA4YWVmMmEyZjRkNWU3MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-12-05T20:47:13Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-12-05T20:47:13Z"}, "message": "Add -march=ia to x86 backend\n\n\t* config.gcc: Support --with-cpu=ia.\n\n\t* config/i386/i386.c (cpu_names): Add \"ia\".\n\t(processor_alias_table): Likewise.\n\t(ix86_option_override_internal): Disallow -march=ia.\n\t* config/i386/i386.h (target_cpu_default): Add\n\tTARGET_CPU_DEFAULT_ia.\n\n\t* doc/invoke.texi: Document -mtune=ia.\n\nFrom-SVN: r205719", "tree": {"sha": "ec92d05c7d5bdf0e45b29589efd2b59cd548ff5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec92d05c7d5bdf0e45b29589efd2b59cd548ff5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58532ca6735e73ed6556662c3fe7350109055a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58532ca6735e73ed6556662c3fe7350109055a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58532ca6735e73ed6556662c3fe7350109055a26"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "f1cd9b897654f871c28694905adde3ca8b1082fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "patch": "@@ -1,3 +1,15 @@\n+2013-12-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config.gcc: Support --with-cpu=ia.\n+\n+\t* config/i386/i386.c (cpu_names): Add \"ia\".\n+\t(processor_alias_table): Likewise.\n+\t(ix86_option_override_internal): Disallow -march=ia.\n+\t* config/i386/i386.h (target_cpu_default): Add\n+\tTARGET_CPU_DEFAULT_ia.\n+\n+\t* doc/invoke.texi: Document -mtune=ia.\n+\n 2013-12-05  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/59317"}, {"sha": "dd180a019bfaa21799499627347311396e29d256", "filename": "gcc/config.gcc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "patch": "@@ -1398,7 +1398,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\tTM_MULTILIB_CONFIG=`echo $TM_MULTILIB_CONFIG | sed 's/^,//'`\n \t\t\tneed_64bit_isa=yes\n \t\t\tcase X\"${with_cpu}\" in\n-\t\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\t\t\t\n+\t\t\tXgeneric|Xia|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\t\t\t\n \t\t\t\t;;\n \t\t\tX)\n \t\t\t\tif test x$with_cpu_64 = x; then\n@@ -1407,7 +1407,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\t\t;;\n \t\t\t*)\n \t\t\t\techo \"Unsupported CPU used in --with-cpu=$with_cpu, supported values:\" 1>&2\n-\t\t\t\techo \"generic atom slm core2 corei7 corei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n+\t\t\t\techo \"generic ia atom slm core2 corei7 corei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n \t\t\t\texit 1\n \t\t\t\t;;\n \t\t\tesac\n@@ -1519,7 +1519,7 @@ i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t\ttmake_file=\"$tmake_file i386/t-sol2-64\"\n \t\tneed_64bit_isa=yes\n \t\tcase X\"${with_cpu}\" in\n-\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n+\t\tXgeneric|Xia|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n \t\t\t;;\n \t\tX)\n \t\t\tif test x$with_cpu_64 = x; then\n@@ -1528,7 +1528,7 @@ i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t\t\t;;\n \t\t*)\n \t\t\techo \"Unsupported CPU used in --with-cpu=$with_cpu, supported values:\" 1>&2\n-\t\t\techo \"generic atom slm core2 corei7 corei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n+\t\t\techo \"generic ia atom slm core2 corei7 corei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n@@ -1604,7 +1604,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t\t\tif test x$enable_targets = xall; then\n \t\t\t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n \t\t\t\tcase X\"${with_cpu}\" in\n-\t\t\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n+\t\t\t\tXgeneric|Xia|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n \t\t\t\t\t;;\n \t\t\t\tX)\n \t\t\t\t\tif test x$with_cpu_64 = x; then\n@@ -1613,7 +1613,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t\t\t\t\t;;\n \t\t\t\t*)\n \t\t\t\t\techo \"Unsupported CPU used in --with-cpu=$with_cpu, supported values:\" 1>&2\n-\t\t\t\t\techo \"generic atom slm core2 corei7 Xcorei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n+\t\t\t\t\techo \"generic ia atom slm core2 corei7 Xcorei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n \t\t\t\t\texit 1\n \t\t\t\t\t;;\n \t\t\t\tesac\n@@ -3664,7 +3664,7 @@ case \"${target}\" in\n \t\t\t\tesac\n \t\t\t\t# OK\n \t\t\t\t;;\n-\t\t\t\"\" | x86-64 | generic | native \\\n+\t\t\t\"\" | x86-64 | generic | ia | native \\\n \t\t\t| k8 | k8-sse3 | athlon64 | athlon64-sse3 | opteron \\\n \t\t\t| opteron-sse3 | athlon-fx | bdver4 | bdver3 | bdver2 \\\n \t\t\t| bdver1 | btver2 |  btver1 | amdfam10 | barcelona \\"}, {"sha": "382f8fbf0c08bbbec151a75cc16525bf6c6e8f4b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "patch": "@@ -2434,6 +2434,7 @@ static const char *const cpu_names[TARGET_CPU_DEFAULT_max] =\n   \"core-avx2\",\n   \"atom\",\n   \"slm\",\n+  \"ia\",\n   \"geode\",\n   \"k6\",\n   \"k6-2\",\n@@ -3142,6 +3143,9 @@ ix86_option_override_internal (bool main_args_p,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3\n \t| PTA_SSE4_1 | PTA_SSE4_2 | PTA_CX16 | PTA_POPCNT | PTA_AES\n \t| PTA_PCLMUL | PTA_RDRND | PTA_MOVBE | PTA_FXSR},\n+      {\"ia\", PROCESSOR_SLM, CPU_SLM,\n+\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3\n+\t| PTA_SSE4_1 | PTA_SSE4_2 | PTA_CX16 | PTA_POPCNT | PTA_FXSR},\n       {\"geode\", PROCESSOR_GEODE, CPU_GEODE,\n \tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE | PTA_PRFCHW},\n       {\"k6\", PROCESSOR_K6, CPU_K6, PTA_MMX},\n@@ -3628,6 +3632,9 @@ ix86_option_override_internal (bool main_args_p,\n   if (!strcmp (opts->x_ix86_arch_string, \"generic\"))\n     error (\"generic CPU can be used only for %stune=%s %s\",\n \t   prefix, suffix, sw);\n+  else if (!strcmp (ix86_arch_string, \"ia\"))\n+    error (\"ia CPU can be used only for %stune=%s %s\",\n+\t   prefix, suffix, sw);\n   else if (!strncmp (opts->x_ix86_arch_string, \"generic\", 7) || i == pta_size)\n     error (\"bad value (%s) for %sarch=%s %s\",\n \t   opts->x_ix86_arch_string, prefix, suffix, sw);"}, {"sha": "db81aea22d0f51807473f629da747cbc4b17246e", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "patch": "@@ -626,6 +626,7 @@ enum target_cpu_default\n   TARGET_CPU_DEFAULT_haswell,\n   TARGET_CPU_DEFAULT_atom,\n   TARGET_CPU_DEFAULT_slm,\n+  TARGET_CPU_DEFAULT_ia,\n \n   TARGET_CPU_DEFAULT_geode,\n   TARGET_CPU_DEFAULT_k6,"}, {"sha": "ed5b60f82a8d9a0efaa812b4456394d536ce5ce6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f014d7301865c651a6f2b4f08aef2a2f4d5e70/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a8f014d7301865c651a6f2b4f08aef2a2f4d5e70", "patch": "@@ -14743,7 +14743,7 @@ then @option{-mtune=pentium4} generates code that is tuned for Pentium 4\n but still runs on i686 machines.\n \n The choices for @var{cpu-type} are the same as for @option{-march}.\n-In addition, @option{-mtune} supports an extra choice for @var{cpu-type}:\n+In addition, @option{-mtune} supports 2 extra choices for @var{cpu-type}:\n \n @table @samp\n @item generic\n@@ -14764,6 +14764,26 @@ indicates the instruction set the compiler can use, and there is no\n generic instruction set applicable to all processors.  In contrast,\n @option{-mtune} indicates the processor (or, in this case, collection of\n processors) for which the code is optimized.\n+\n+@item ia\n+Produce code optimized for the most current Intel processors, which are\n+Haswell and Silvermont for this version of GCC.  If you know the CPU\n+on which your code will run, then you should use the corresponding\n+@option{-mtune} or @option{-march} option instead of @option{-mtune=ia}.\n+But, if you want your application performs better on both Haswell and\n+Silvermont, then you should use this option.\n+\n+As new Intel processors are deployed in the marketplace, the behavior of\n+this option will change.  Therefore, if you upgrade to a newer version of\n+GCC, code generation controlled by this option will change to reflect\n+the most current Intel processors at the time that version of GCC is\n+released.\n+\n+There is no @option{-march=ia} option because @option{-march} indicates\n+the instruction set the compiler can use, and there is no common\n+instruction set applicable to all processors.  In contrast,\n+@option{-mtune} indicates the processor (or, in this case, collection of\n+processors) for which the code is optimized.\n @end table\n \n @item -mcpu=@var{cpu-type}"}]}