{"sha": "66e30545db6ed4c1913e76d1085d0586ee6d055d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZlMzA1NDVkYjZlZDRjMTkxM2U3NmQxMDg1ZDA1ODZlZTZkMDU1ZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2018-12-12T08:42:28Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2018-12-12T08:42:28Z"}, "message": "rs6000, darwin - fix bootstrap.\n\nRecent changes to the lowerings for call handling in rs6000\nhave broken bootstrap for powerpc-darwin.  This patch modifies\nthe calls to handle Darwin asa subset, a subsequent patch will\nsplit Darwin out.\n\n2018-12-12  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/rs6000/darwin.md (call_indirect_nonlocal_darwin64): Remove.\n\t(call_nonlocal_darwin64): Remove.\n\t(call_value_indirect_nonlocal_darwin64): Remove.\n\t(call_value_nonlocal_darwin64): Remove.\n\t* config/rs6000/rs6000.c (rs6000_call_template_1): Handle Darwin with\n\tthe same asm output as AIX/ELFv2.  (rs6000_call_sysv): Preserve the\n\tCALL_LONG flag when needed for Darwin.\n\t* config/rs6000/rs6000.md (define expand \u201ccall\u201d): Expand Darwin as\n\tper sysv.\n\t(define_expand \u201ccall_value\u201d): Likewise.\n\t(define_expand \u201csibcall\u201d): Likewise.\n\t(define_expand \u201csibcall_value\u201d): Likewise.\n\t(call_indirect_nonlocal_sysv): Mark the clobber mode P.\n\t(call_nonlocal_sysv): Likewise.\n\t(call_nonlocal_sysv_secure): Likewise.\n\t(call_value_indirect_nonlocal_sysv): Likewise.\n\t(call_value_nonlocal_sysv): Likewise.\n\t(call_value_nonlocal_sysv_secure): Likewise.\n\t(call_local64): Mark the clobber DI.\n\t(call_value_local64): Likewise.\n\nFrom-SVN: r267046", "tree": {"sha": "8a41b51c858c657714a18dc377185277ca1ca38b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a41b51c858c657714a18dc377185277ca1ca38b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66e30545db6ed4c1913e76d1085d0586ee6d055d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e30545db6ed4c1913e76d1085d0586ee6d055d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66e30545db6ed4c1913e76d1085d0586ee6d055d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66e30545db6ed4c1913e76d1085d0586ee6d055d/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d7924f2e766834e4fec84ff093f4c355fea6be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7924f2e766834e4fec84ff093f4c355fea6be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7924f2e766834e4fec84ff093f4c355fea6be1"}], "stats": {"total": 171, "additions": 58, "deletions": 113}, "files": [{"sha": "2fba17e1ffc0f23fc2152089500338bfb4cf9b17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66e30545db6ed4c1913e76d1085d0586ee6d055d", "patch": "@@ -1,3 +1,26 @@\n+2018-12-12  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/rs6000/darwin.md (call_indirect_nonlocal_darwin64): Remove.\n+\t(call_nonlocal_darwin64): Remove.\n+\t(call_value_indirect_nonlocal_darwin64): Remove.\n+\t(call_value_nonlocal_darwin64): Remove.\n+\t* config/rs6000/rs6000.c (rs6000_call_template_1): Handle Darwin with\n+\tthe same asm output as AIX/ELFv2.  (rs6000_call_sysv): Preserve the\n+\tCALL_LONG flag when needed for Darwin.\n+\t* config/rs6000/rs6000.md (define expand \u201ccall\u201d): Expand Darwin as\n+\tper sysv.\n+\t(define_expand \u201ccall_value\u201d): Likewise.\n+\t(define_expand \u201csibcall\u201d): Likewise.\n+\t(define_expand \u201csibcall_value\u201d): Likewise.\n+\t(call_indirect_nonlocal_sysv): Mark the clobber mode P.\n+\t(call_nonlocal_sysv): Likewise.\n+\t(call_nonlocal_sysv_secure): Likewise.\n+\t(call_value_indirect_nonlocal_sysv): Likewise.\n+\t(call_value_nonlocal_sysv): Likewise.\n+\t(call_value_nonlocal_sysv_secure): Likewise.\n+\t(call_local64): Mark the clobber DI.\n+\t(call_value_local64): Likewise.\n+\n 2018-12-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/88444"}, {"sha": "ff8062c1100f9fd74d509a9f8eb13cf2a2c325c4", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=66e30545db6ed4c1913e76d1085d0586ee6d055d", "patch": "@@ -300,66 +300,6 @@ You should have received a copy of the GNU General Public License\n   \"addis %0,%1,ha16(%2-%3)\\n\\taddi %0,%0,lo16(%2-%3)\"\n   [(set_attr \"length\" \"8\")])\n \n-(define_insn \"*call_indirect_nonlocal_darwin64\"\n-  [(call (mem:SI (match_operand:DI 0 \"register_operand\" \"c,*l,c,*l\"))\n-\t (match_operand 1))\n-   (use (match_operand:SI 2 \"immediate_operand\" \"O,O,n,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n-  \"DEFAULT_ABI == ABI_DARWIN && TARGET_64BIT\"\n-{\n-  return \"b%T0l\";\n-}\n-  [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n-\n-(define_insn \"*call_nonlocal_darwin64\"\n-  [(call (mem:SI (match_operand:DI 0 \"symbol_ref_operand\" \"s,s\"))\n-\t (match_operand 1))\n-   (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n-  \"(DEFAULT_ABI == ABI_DARWIN)\n-   && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n-{\n-#if TARGET_MACHO\n-  return output_call(insn, operands, 0, 2);\n-#else\n-  gcc_unreachable ();\n-#endif\n-}\n-  [(set_attr \"type\" \"branch,branch\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_insn \"*call_value_indirect_nonlocal_darwin64\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:DI 1 \"register_operand\" \"c,*l,c,*l\"))\n-\t      (match_operand 2)))\n-   (use (match_operand:SI 3 \"immediate_operand\" \"O,O,n,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n-  \"DEFAULT_ABI == ABI_DARWIN\"\n-{\n-  return \"b%T1l\";\n-}\n-  [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n-\n-(define_insn \"*call_value_nonlocal_darwin64\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:DI 1 \"symbol_ref_operand\" \"s,s\"))\n-\t      (match_operand 2)))\n-   (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n-  \"(DEFAULT_ABI == ABI_DARWIN)\n-   && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n-{\n-#if TARGET_MACHO\n-  return output_call(insn, operands, 1, 3);\n-#else\n-  gcc_unreachable ();\n-#endif\n-}\n-  [(set_attr \"type\" \"branch,branch\")\n-   (set_attr \"length\" \"4,8\")])\n-\n (define_expand \"reload_macho_picbase\"\n   [(set (reg:SI LR_REGNO)\n         (unspec [(match_operand 0 \"\")]"}, {"sha": "5c7207598b6788559d8fef433aca411f5ce8ab83", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=66e30545db6ed4c1913e76d1085d0586ee6d055d", "patch": "@@ -21534,7 +21534,8 @@ rs6000_call_template_1 (rtx *operands, unsigned int funop, bool sibcall)\n \t    ? \"+32768\" : \"\"));\n \n   static char str[32];  /* 2 spare */\n-  if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2)\n+  if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2\n+      || DEFAULT_ABI == ABI_DARWIN)\n     sprintf (str, \"b%s %s%s%s\", sibcall ? \"\" : \"l\", z, arg,\n \t     sibcall ? \"\" : \"\\n\\tnop\");\n   else if (DEFAULT_ABI == ABI_V4)\n@@ -37958,6 +37959,7 @@ rs6000_call_sysv (rtx value, rtx func_desc, rtx tlsarg, rtx cookie)\n \n   /* Handle longcall attributes.  */\n   if ((INTVAL (cookie) & CALL_LONG) != 0\n+      && DEFAULT_ABI != ABI_DARWIN /* Darwin does it's own thing.  */\n       && GET_CODE (func_desc) == SYMBOL_REF)\n     {\n       func = rs6000_longcall_ref (func_desc, tlsarg);\n@@ -37998,8 +38000,13 @@ rs6000_call_sysv (rtx value, rtx func_desc, rtx tlsarg, rtx cookie)\n   if (value != NULL_RTX)\n     call[0] = gen_rtx_SET (value, call[0]);\n \n-  unsigned int mask = CALL_V4_SET_FP_ARGS | CALL_V4_CLEAR_FP_ARGS;\n-  call[1] = gen_rtx_USE (VOIDmode, GEN_INT (INTVAL (cookie) & mask));\n+  if (DEFAULT_ABI == ABI_DARWIN && TARGET_32BIT)\n+    call[1] = gen_rtx_USE (VOIDmode, GEN_INT (INTVAL (cookie)));\n+  else\n+    {\n+      unsigned int mask = CALL_V4_SET_FP_ARGS | CALL_V4_CLEAR_FP_ARGS;\n+      call[1] = gen_rtx_USE (VOIDmode, GEN_INT (INTVAL (cookie) & mask));\n+    }\n \n   call[2] = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (Pmode, LR_REGNO));\n "}, {"sha": "fa77e45145912b4f5f6e377f9ff89fc50593a5d8", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 25, "deletions": 50, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66e30545db6ed4c1913e76d1085d0586ee6d055d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=66e30545db6ed4c1913e76d1085d0586ee6d055d", "patch": "@@ -10266,6 +10266,7 @@\n })\n \f\n ;; Call and call_value insns\n+;; For the purposes of expanding calls, Darwin is very similar to SYSV.\n (define_expand \"call\"\n   [(parallel [(call (mem:SI (match_operand 0 \"address_operand\"))\n \t\t    (match_operand 1 \"\"))\n@@ -10283,19 +10284,11 @@\n   operands[0] = XEXP (operands[0], 0);\n \n   if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2)\n-    {\n-      rs6000_call_aix (NULL_RTX, operands[0], operands[1], operands[2]);\n-      DONE;\n-    }\n-\n-  if (DEFAULT_ABI == ABI_V4)\n-    {\n-      rs6000_call_sysv (NULL_RTX, operands[0], operands[1], operands[2]);\n-      DONE;\n-    }\n+    rs6000_call_aix (NULL_RTX, operands[0], operands[1], operands[2]);\n+  else\n+    rs6000_call_sysv (NULL_RTX, operands[0], operands[1], operands[2]);\n \n-  if (GET_CODE (operands[0]) != SYMBOL_REF)\n-    operands[0] = force_reg (Pmode, operands[0]);\n+  DONE;\n })\n \n (define_expand \"call_value\"\n@@ -10316,19 +10309,11 @@\n   operands[1] = XEXP (operands[1], 0);\n \n   if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2)\n-    {\n-      rs6000_call_aix (operands[0], operands[1], operands[2], operands[3]);\n-      DONE;\n-    }\n-\n-  if (DEFAULT_ABI == ABI_V4)\n-    {\n-      rs6000_call_sysv (operands[0], operands[1], operands[2], operands[3]);\n-      DONE;\n-    }\n+    rs6000_call_aix (operands[0], operands[1], operands[2], operands[3]);\n+  else\n+    rs6000_call_sysv (operands[0], operands[1], operands[2], operands[3]);\n \n-  if (GET_CODE (operands[1]) != SYMBOL_REF)\n-    operands[1] = force_reg (Pmode, operands[1]);\n+  DONE;\n })\n \n ;; Call to function in current module.  No TOC pointer reload needed.\n@@ -10359,7 +10344,7 @@\n   [(call (mem:SI (match_operand:DI 0 \"current_file_function_operand\" \"s,s\"))\n \t (match_operand 1))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:DI LR_REGNO))]\n   \"TARGET_64BIT && (INTVAL (operands[2]) & CALL_LONG) == 0\"\n {\n   if (INTVAL (operands[2]) & CALL_V4_SET_FP_ARGS)\n@@ -10398,7 +10383,7 @@\n \t(call (mem:SI (match_operand:DI 1 \"current_file_function_operand\" \"s,s\"))\n \t      (match_operand 2)))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:DI LR_REGNO))]\n   \"TARGET_64BIT && (INTVAL (operands[3]) & CALL_LONG) == 0\"\n {\n   if (INTVAL (operands[3]) & CALL_V4_SET_FP_ARGS)\n@@ -10423,7 +10408,7 @@\n   [(call (mem:SI (match_operand:P 0 \"indirect_call_operand\" \"c,*l,X\"))\n \t (match_operand 1))\n    (use (match_operand:SI 2 \"immediate_operand\" \"n,n,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_V4\n    || DEFAULT_ABI == ABI_DARWIN\"\n {\n@@ -10451,7 +10436,7 @@\n   [(call (mem:SI (match_operand:P 0 \"symbol_ref_operand\" \"s,s\"))\n \t (match_operand 1))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:P LR_REGNO))]\n   \"(DEFAULT_ABI == ABI_DARWIN\n    || (DEFAULT_ABI == ABI_V4\n        && (INTVAL (operands[2]) & CALL_LONG) == 0))\"\n@@ -10487,7 +10472,7 @@\n \t (match_operand 1))\n    (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n    (use (match_operand:SI 3 \"register_operand\" \"r,r\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:P LR_REGNO))]\n   \"(DEFAULT_ABI == ABI_V4\n     && TARGET_SECURE_PLT && flag_pic && !SYMBOL_REF_LOCAL_P (operands[0])\n     && (INTVAL (operands[2]) & CALL_LONG) == 0)\"\n@@ -10508,7 +10493,7 @@\n \t(call (mem:SI (match_operand:P 1 \"indirect_call_operand\" \"c,*l,X\"))\n \t      (match_operand 2)))\n    (use (match_operand:SI 3 \"immediate_operand\" \"n,n,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_V4\n    || DEFAULT_ABI == ABI_DARWIN\"\n {\n@@ -10537,7 +10522,7 @@\n \t(call (mem:SI (match_operand:P 1 \"symbol_ref_operand\" \"s,s\"))\n \t      (match_operand 2)))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:P LR_REGNO))]\n   \"(DEFAULT_ABI == ABI_DARWIN\n    || (DEFAULT_ABI == ABI_V4\n        && (INTVAL (operands[3]) & CALL_LONG) == 0))\"\n@@ -10575,7 +10560,7 @@\n \t      (match_operand 2)))\n    (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n    (use (match_operand:SI 4 \"register_operand\" \"r,r\"))\n-   (clobber (reg:SI LR_REGNO))]\n+   (clobber (reg:P LR_REGNO))]\n   \"(DEFAULT_ABI == ABI_V4\n     && TARGET_SECURE_PLT && flag_pic && !SYMBOL_REF_LOCAL_P (operands[1])\n     && (INTVAL (operands[3]) & CALL_LONG) == 0)\"\n@@ -10760,16 +10745,11 @@\n   operands[0] = XEXP (operands[0], 0);\n \n   if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2)\n-    {\n-      rs6000_sibcall_aix (NULL_RTX, operands[0], operands[1], operands[2]);\n-      DONE;\n-    }\n+    rs6000_sibcall_aix (NULL_RTX, operands[0], operands[1], operands[2]);\n+  else\n+    rs6000_sibcall_sysv (NULL_RTX, operands[0], operands[1], operands[2]);\n \n-  if (DEFAULT_ABI == ABI_V4)\n-    {\n-      rs6000_sibcall_sysv (NULL_RTX, operands[0], operands[1], operands[2]);\n-      DONE;\n-    }\n+  DONE;\n })\n \n (define_expand \"sibcall_value\"\n@@ -10791,16 +10771,11 @@\n   operands[1] = XEXP (operands[1], 0);\n \n   if (DEFAULT_ABI == ABI_AIX || DEFAULT_ABI == ABI_ELFv2)\n-    {\n-      rs6000_sibcall_aix (operands[0], operands[1], operands[2], operands[3]);\n-      DONE;\n-    }\n+    rs6000_sibcall_aix (operands[0], operands[1], operands[2], operands[3]);\n+  else\n+    rs6000_sibcall_sysv (operands[0], operands[1], operands[2], operands[3]);\n \n-  if (DEFAULT_ABI == ABI_V4)\n-    {\n-      rs6000_sibcall_sysv (operands[0], operands[1], operands[2], operands[3]);\n-      DONE;\n-    }\n+  DONE;\n })\n \n (define_insn \"*sibcall_local32\""}]}