{"sha": "a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkOGNjNjNiNDZkNTM2Y2U0ZTY2ZTllZDk5OTlkODY3ZjFjYzI3ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-11-09T12:05:56Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-11-09T12:05:56Z"}, "message": "utils.c (save_gnu_tree): Improve comments.\n\n\t* gcc-interface/utils.c (save_gnu_tree): Improve comments.\n\t(get_gnu_tree): Likewise.\n\nFrom-SVN: r166485", "tree": {"sha": "cbe0097960b5e59a0d6d5180e1d7552c6e1fe473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbe0097960b5e59a0d6d5180e1d7552c6e1fe473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e/comments", "author": null, "committer": null, "parents": [{"sha": "98cd3025d4d3204a18f327627a61b6773fd377a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cd3025d4d3204a18f327627a61b6773fd377a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98cd3025d4d3204a18f327627a61b6773fd377a5"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "c768d867423fa9bf90c14191deef7995e7c38888", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e", "patch": "@@ -1,3 +1,8 @@\n+2010-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (save_gnu_tree): Improve comments.\n+\t(get_gnu_tree): Likewise.\n+\n 2010-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (finish_fat_pointer_type): New function."}, {"sha": "fa2d09697264aa0669e90a98d7b8c93f537aa4ca", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=a1d8cc63b46d536ce4e66e9ed9999d867f1cc27e", "patch": "@@ -215,17 +215,17 @@ init_gnat_to_gnu (void)\n   associate_gnat_to_gnu = ggc_alloc_cleared_vec_tree (max_gnat_nodes);\n }\n \n-/* GNAT_ENTITY is a GNAT tree node for an entity.   GNU_DECL is the GCC tree\n-   which is to be associated with GNAT_ENTITY. Such GCC tree node is always\n-   a ..._DECL node.  If NO_CHECK is true, the latter check is suppressed.\n+/* GNAT_ENTITY is a GNAT tree node for an entity.  Associate GNU_DECL, a GCC\n+   tree node, with GNAT_ENTITY.  If GNU_DECL is not a ..._DECL node, abort.\n+   If NO_CHECK is true, the latter check is suppressed.\n \n-   If GNU_DECL is zero, a previous association is to be reset.  */\n+   If GNU_DECL is zero, reset a previous association.  */\n \n void\n save_gnu_tree (Entity_Id gnat_entity, tree gnu_decl, bool no_check)\n {\n   /* Check that GNAT_ENTITY is not already defined and that it is being set\n-     to something which is a decl.  Raise gigi 401 if not.  Usually, this\n+     to something which is a decl.  If that is not the case, this usually\n      means GNAT_ENTITY is defined twice, but occasionally is due to some\n      Gigi problem.  */\n   gcc_assert (!(gnu_decl\n@@ -235,9 +235,8 @@ save_gnu_tree (Entity_Id gnat_entity, tree gnu_decl, bool no_check)\n   SET_GNU_TREE (gnat_entity, gnu_decl);\n }\n \n-/* GNAT_ENTITY is a GNAT tree node for a defining identifier.\n-   Return the ..._DECL node that was associated with it.  If there is no tree\n-   node associated with GNAT_ENTITY, abort.\n+/* GNAT_ENTITY is a GNAT tree node for an entity.  Return the GCC tree node\n+   that was associated with it.  If there is no such tree node, abort.\n \n    In some cases, such as delayed elaboration or expressions that need to\n    be elaborated only once, GNAT_ENTITY is really not an entity.  */"}]}