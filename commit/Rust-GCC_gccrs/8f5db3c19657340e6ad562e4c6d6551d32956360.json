{"sha": "8f5db3c19657340e6ad562e4c6d6551d32956360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY1ZGIzYzE5NjU3MzQwZTZhZDU2MmU0YzZkNjU1MWQzMjk1NjM2MA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-11-07T00:02:03Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-11-07T00:02:03Z"}, "message": "reload1.c (reload): If we can not perform a particular elimination when we thought we could earlier...\n\n        * reload1.c (reload): If we can not perform a particular elimination\n        when we thought we could earlier, then we must always iterate through\n        the loop at least one more time.\nx86 should bootstrap with -O9 -fomit-frame-pointer again.\n\nFrom-SVN: r23552", "tree": {"sha": "d67603a3bd13ec372f33a235666da0c83d989f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d67603a3bd13ec372f33a235666da0c83d989f5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f5db3c19657340e6ad562e4c6d6551d32956360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5db3c19657340e6ad562e4c6d6551d32956360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5db3c19657340e6ad562e4c6d6551d32956360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5db3c19657340e6ad562e4c6d6551d32956360/comments", "author": null, "committer": null, "parents": [{"sha": "80df65c95e51ff36d97aa13eed0d0e6a4fa1beee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80df65c95e51ff36d97aa13eed0d0e6a4fa1beee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80df65c95e51ff36d97aa13eed0d0e6a4fa1beee"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "32e2fe80a5d1355e27e7d4e50f15119996232736", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5db3c19657340e6ad562e4c6d6551d32956360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5db3c19657340e6ad562e4c6d6551d32956360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f5db3c19657340e6ad562e4c6d6551d32956360", "patch": "@@ -1,3 +1,9 @@\n+Sat Nov  7 00:54:55 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* reload1.c (reload): If we can not perform a particular elimination\n+\twhen we thought we could earlier, then we must always iterate through\n+\tthe loop at least one more time.\n+\n Fri Nov  6 19:37:33 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (add_operand): Simplify the CONST_INT match."}, {"sha": "0d587ae4040d26fd681b15ceb2af753a693c91bd", "filename": "gcc/reload1.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5db3c19657340e6ad562e4c6d6551d32956360/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5db3c19657340e6ad562e4c6d6551d32956360/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=8f5db3c19657340e6ad562e4c6d6551d32956360", "patch": "@@ -927,6 +927,17 @@ reload (first, global, dumpfile)\n \t    {\n \t      spill_hard_reg (i, dumpfile, 1);\n \t      did_spill = 1;\n+\n+\t      /* Regardless of the state of spills, if we previously had\n+\t\t a register that we thought we could eliminate, but no can\n+\t\t not eliminate, we must run another pass.\n+\n+\t\t Consider pseudos which have an entry in reg_equiv_* which\n+\t\t reference an eliminable register.  We must make another pass\n+\t\t to update reg_equiv_* so that we do not substitute in the\n+\t\t old value from when we thought the elimination could be\n+\t\t performed.  */\n+\t      something_changed = 1;\n \t    }\n       }\n "}]}