{"sha": "258619bb2d420f54a510569cee8e642835f86023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU4NjE5YmIyZDQyMGY1NGE1MTA1NjljZWU4ZTY0MjgzNWY4NjAyMw==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2015-05-11T08:23:53Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2015-05-11T08:23:53Z"}, "message": "arm-protos.h (arm_declare_function_name): Declare.\n\n2015-05-11  Christian Bruel  <christian.bruel@st.com>\n\n\t* config/arm/arm-protos.h (arm_declare_function_name): Declare.\n\t(is_called_in_ARM_mode): Remove.\n\t* config/arm/arm.c (is_called_in_ARM_mode): Declare static bool.\n\t(arm_declare_function_name): Moved from from ARM_DECLARE_FUNCTION_NAME.\n\t* config/arm/arm.h (ARM_DECLARE_FUNCTION_NAME): Call\n\t arm_declare_function_name.\n\nFrom-SVN: r222997", "tree": {"sha": "bd4fd53af5fac9617ac3561a75be34f71d9cba14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd4fd53af5fac9617ac3561a75be34f71d9cba14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/258619bb2d420f54a510569cee8e642835f86023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258619bb2d420f54a510569cee8e642835f86023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258619bb2d420f54a510569cee8e642835f86023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258619bb2d420f54a510569cee8e642835f86023/comments", "author": null, "committer": null, "parents": [{"sha": "d7f3cf03e4b795e46f72873b63e8d1520dde0249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f3cf03e4b795e46f72873b63e8d1520dde0249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f3cf03e4b795e46f72873b63e8d1520dde0249"}], "stats": {"total": 57, "additions": 34, "deletions": 23}, "files": [{"sha": "88d8934bc117dcc758073ee3fb691809bbfc7ce6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258619bb2d420f54a510569cee8e642835f86023/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258619bb2d420f54a510569cee8e642835f86023/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=258619bb2d420f54a510569cee8e642835f86023", "patch": "@@ -1,3 +1,12 @@\n+2015-05-11  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* config/arm/arm-protos.h (arm_declare_function_name): Declare.\n+\t(is_called_in_ARM_mode): Remove.\n+\t* config/arm/arm.c (is_called_in_ARM_mode): Declare static bool.\n+\t(arm_declare_function_name): Moved from from ARM_DECLARE_FUNCTION_NAME.\n+\t* config/arm/arm.h (ARM_DECLARE_FUNCTION_NAME): Call\n+\t arm_declare_function_name.\n+\n 2015-05-11  Christian Bruel  <christian.bruel@st.com>\n \n \t* config/arm/arm.c (arm_option_override): Reoganized and split into :"}, {"sha": "bda20ca07cea0b3267ab9457bc3c9f254fa225af", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258619bb2d420f54a510569cee8e642835f86023/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258619bb2d420f54a510569cee8e642835f86023/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=258619bb2d420f54a510569cee8e642835f86023", "patch": "@@ -30,6 +30,7 @@ extern void arm_load_pic_register (unsigned long);\n extern int arm_volatile_func (void);\n extern void arm_expand_prologue (void);\n extern void arm_expand_epilogue (bool);\n+extern void arm_declare_function_name (FILE *, const char *, tree);\n extern void thumb2_expand_return (bool);\n extern const char *arm_strip_name_encoding (const char *);\n extern void arm_asm_output_labelref (FILE *, const char *);\n@@ -181,9 +182,6 @@ extern const char *thumb1_unexpanded_epilogue (void);\n extern void thumb1_expand_prologue (void);\n extern void thumb1_expand_epilogue (void);\n extern const char *thumb1_output_interwork (void);\n-#ifdef TREE_CODE\n-extern int is_called_in_ARM_mode (tree);\n-#endif\n extern int thumb_shiftable_const (unsigned HOST_WIDE_INT);\n #ifdef RTX_CODE\n extern enum arm_cond_code maybe_get_arm_condition_code (rtx);"}, {"sha": "cf4f2485095877c8950e25bc750f60cb7250ca2b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258619bb2d420f54a510569cee8e642835f86023/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258619bb2d420f54a510569cee8e642835f86023/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=258619bb2d420f54a510569cee8e642835f86023", "patch": "@@ -121,6 +121,7 @@ static int arm_gen_constant (enum rtx_code, machine_mode, rtx,\n static unsigned bit_count (unsigned long);\n static int arm_address_register_rtx_p (rtx, int);\n static int arm_legitimate_index_p (machine_mode, rtx, RTX_CODE, int);\n+static bool is_called_in_ARM_mode (tree);\n static int thumb2_legitimate_index_p (machine_mode, rtx, int);\n static int thumb1_base_register_rtx_p (rtx, machine_mode, int);\n static rtx arm_legitimize_address (rtx, rtx, machine_mode);\n@@ -23851,19 +23852,19 @@ thumb_far_jump_used_p (void)\n }\n \n /* Return nonzero if FUNC must be entered in ARM mode.  */\n-int\n+static bool\n is_called_in_ARM_mode (tree func)\n {\n   gcc_assert (TREE_CODE (func) == FUNCTION_DECL);\n \n   /* Ignore the problem about functions whose address is taken.  */\n   if (TARGET_CALLEE_INTERWORKING && TREE_PUBLIC (func))\n-    return TRUE;\n+    return true;\n \n #ifdef ARM_PE\n   return lookup_attribute (\"interfacearm\", DECL_ATTRIBUTES (func)) != NULL_TREE;\n #else\n-  return FALSE;\n+  return false;\n #endif\n }\n \n@@ -29233,6 +29234,25 @@ arm_is_constant_pool_ref (rtx x)\n \t  && CONSTANT_POOL_ADDRESS_P (XEXP (x, 0)));\n }\n \n+void\n+arm_declare_function_name (FILE *stream, const char *name, tree decl)\n+{\n+  if (TARGET_THUMB)\n+    {\n+      if (is_called_in_ARM_mode (decl)\n+\t  || (TARGET_THUMB1 && !TARGET_THUMB1_ONLY\n+\t      && cfun->is_thunk))\n+\tfprintf (stream, \"\\t.code 32\\n\");\n+      else if (TARGET_THUMB1)\n+\tfprintf (stream, \"\\t.code\\t16\\n\\t.thumb_func\\n\");\n+      else\n+\tfprintf (stream, \"\\t.thumb\\n\\t.thumb_func\\n\");\n+    }\n+\n+  if (TARGET_POKE_FUNCTION_NAME)\n+    arm_poke_function_name (stream, (const char *) name);\n+}\n+\n /* If MEM is in the form of [base+offset], extract the two parts\n    of address and set to BASE and OFFSET, otherwise return false\n    after clearing BASE and OFFSET.  */"}, {"sha": "ba37c42296d16cdf7fb0a0ea9298fbe36b93319d", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258619bb2d420f54a510569cee8e642835f86023/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258619bb2d420f54a510569cee8e642835f86023/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=258619bb2d420f54a510569cee8e642835f86023", "patch": "@@ -2183,23 +2183,7 @@ extern int making_const_table;\n    ? 1 : 0)\n \n #define ARM_DECLARE_FUNCTION_NAME(STREAM, NAME, DECL) \t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TARGET_THUMB) \t\t\t\t\\\n-        {\t\t\t\t\t\t\\\n-          if (is_called_in_ARM_mode (DECL)\t\t\\\n-\t      || (TARGET_THUMB1 && !TARGET_THUMB1_ONLY\t\\\n-\t\t  && cfun->is_thunk))\t\\\n-            fprintf (STREAM, \"\\t.code 32\\n\") ;\t\t\\\n-          else if (TARGET_THUMB1)\t\t\t\\\n-           fprintf (STREAM, \"\\t.code\\t16\\n\\t.thumb_func\\n\") ;\t\\\n-          else\t\t\t\t\t\t\\\n-           fprintf (STREAM, \"\\t.thumb\\n\\t.thumb_func\\n\") ;\t\\\n-        }\t\t\t\t\t\t\\\n-      if (TARGET_POKE_FUNCTION_NAME)\t\t\t\\\n-        arm_poke_function_name (STREAM, (const char *) NAME);\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n+  arm_declare_function_name ((STREAM), (NAME), (DECL));\n \n /* For aliases of functions we use .thumb_set instead.  */\n #define ASM_OUTPUT_DEF_FROM_DECLS(FILE, DECL1, DECL2)\t\t\\"}]}