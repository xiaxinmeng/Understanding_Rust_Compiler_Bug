{"sha": "c7f1781582ea16a4b5213278a984c83d948f08b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdmMTc4MTU4MmVhMTZhNGI1MjEzMjc4YTk4NGM4M2Q5NDhmMDhiMQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-02-09T15:58:05Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-02-09T15:58:05Z"}, "message": "re PR fortran/47637 ([OOP] Memory leak involving INTENT(OUT) CLASS argument w/ allocatable components)\n\n2011-02-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47637\n\t* trans-decl.c (init_intent_out_dt): Handle CLASS arguments.\n\n\n2011-02-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47637\n\t* gfortran.dg/auto_dealloc_2.f90: New.\n\nFrom-SVN: r169978", "tree": {"sha": "f490d73efdf704fe0d2c053e63a92ff5fbf0a25a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f490d73efdf704fe0d2c053e63a92ff5fbf0a25a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7f1781582ea16a4b5213278a984c83d948f08b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f1781582ea16a4b5213278a984c83d948f08b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f1781582ea16a4b5213278a984c83d948f08b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f1781582ea16a4b5213278a984c83d948f08b1/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67b6839f9965ead41034070d6b9c681fe66c8e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b6839f9965ead41034070d6b9c681fe66c8e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b6839f9965ead41034070d6b9c681fe66c8e4d"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "14ae30f9757e4077dc580c1e1c8efedaeefbb092", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c7f1781582ea16a4b5213278a984c83d948f08b1", "patch": "@@ -1,3 +1,8 @@\n+2011-02-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47637\n+\t* trans-decl.c (init_intent_out_dt): Handle CLASS arguments.\n+\n 2011-02-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* io.c (match_io_element): Do not set dt if not inquire."}, {"sha": "793b26207302dbf4b4628eeafb14bbd8e1f399c6", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=c7f1781582ea16a4b5213278a984c83d948f08b1", "patch": "@@ -3192,6 +3192,32 @@ init_intent_out_dt (gfc_symbol * proc_sym, gfc_wrapped_block * block)\n        else if (f->sym->value)\n \t  gfc_init_default_dt (f->sym, &init, true);\n       }\n+    else if (f->sym && f->sym->attr.intent == INTENT_OUT\n+\t     && f->sym->ts.type == BT_CLASS\n+\t     && !CLASS_DATA (f->sym)->attr.class_pointer\n+\t     && CLASS_DATA (f->sym)->ts.u.derived->attr.alloc_comp)\n+      {\n+\ttree decl = build_fold_indirect_ref_loc (input_location,\n+\t\t\t\t\t\t f->sym->backend_decl);\n+\ttmp = CLASS_DATA (f->sym)->backend_decl;\n+\ttmp = fold_build3_loc (input_location, COMPONENT_REF,\n+\t\t\t       TREE_TYPE (tmp), decl, tmp, NULL_TREE);\n+\ttmp = build_fold_indirect_ref_loc (input_location, tmp);\n+\ttmp = gfc_deallocate_alloc_comp (CLASS_DATA (f->sym)->ts.u.derived,\n+\t\t\t\t\t tmp,\n+\t\t\t\t\t CLASS_DATA (f->sym)->as ?\n+\t\t\t\t\t CLASS_DATA (f->sym)->as->rank : 0);\n+\n+\tif (f->sym->attr.optional || f->sym->ns->proc_name->attr.entry_master)\n+\t  {\n+\t    present = gfc_conv_expr_present (f->sym);\n+\t    tmp = build3_loc (input_location, COND_EXPR, TREE_TYPE (tmp),\n+\t\t\t      present, tmp,\n+\t\t\t      build_empty_stmt (input_location));\n+\t  }\n+\n+\tgfc_add_expr_to_block (&init, tmp);\n+      }\n \n   gfc_add_init_cleanup (block, gfc_finish_block (&init), NULL_TREE);\n }"}, {"sha": "044dd3a5790f26add290f8d713ab4f1ea5d312d0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7f1781582ea16a4b5213278a984c83d948f08b1", "patch": "@@ -1,3 +1,8 @@\n+2011-02-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47637\n+\t* gfortran.dg/auto_dealloc_2.f90: New.\n+\n 2011-02-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/builtins-config.h: Remove __sgi handling."}, {"sha": "4cbda828895f0b214b7ff3e0e837cc069b6350b9", "filename": "gcc/testsuite/gfortran.dg/auto_dealloc_2.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_dealloc_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f1781582ea16a4b5213278a984c83d948f08b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_dealloc_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_dealloc_2.f90?ref=c7f1781582ea16a4b5213278a984c83d948f08b1", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR 47637: [OOP] Memory leak involving INTENT(OUT) CLASS argument w/ allocatable components\n+!\n+! Contributed by Rich Townsend <townsend@astro.wisc.edu>\n+\n+program test\n+\n+type :: t\n+  integer, allocatable :: i(:)\n+end type\n+\n+type(t) :: a\n+\n+call init(a)\n+call init(a)\n+\n+contains\n+\n+  subroutine init(x)\n+    class(t), intent(out) :: x\n+    allocate(x%i(1000))\n+  end subroutine\n+\n+end program \n+\n+! { dg-final { scan-tree-dump-times \"__builtin_free\" 2 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}