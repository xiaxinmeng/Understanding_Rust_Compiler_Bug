{"sha": "ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0ZDc4ZWIyZjkxZWMxYjUyNzhhNGEyMzQ2NzA1NTA4OWNjYzIyZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-04-02T01:56:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-04-02T01:56:17Z"}, "message": "final.c (alter_subreg): Allow the target to hook by-mode subreg hard register number changes.\n\n* final.c (alter_subreg): Allow the target to hook by-mode subreg\nhard register number changes.\n\nFrom-SVN: r18946", "tree": {"sha": "922ce3c162ba7fe51d2e1c2fb79adbdb13372e37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/922ce3c162ba7fe51d2e1c2fb79adbdb13372e37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/comments", "author": null, "committer": null, "parents": [{"sha": "4901a643933d7005c4745beec0fee58552412b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4901a643933d7005c4745beec0fee58552412b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4901a643933d7005c4745beec0fee58552412b2b"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "578b9b7ac9bf9f72b94c1c3c435ad94456db113c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "patch": "@@ -5,6 +5,8 @@ Thu Apr  2 01:01:34 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* emit-rtl.c (gen_lowpart_common): Skip count by HARD_REGNO_NREGS.\n \t(gen_highpart): Likewise.\n+\t* final.c (alter_subreg): Allow the target to hook by-mode subreg\n+\thard register number changes.\n \t\n Wed Apr  1 22:26:22 1998  Jeffrey A Law  (law@cygnus.com)\n "}, {"sha": "6b851f20be745f3fb5a84f924d10bc054dbcba73", "filename": "gcc/final.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "patch": "@@ -2891,9 +2891,20 @@ alter_subreg (x)\n \n   if (GET_CODE (y) == REG)\n     {\n-      /* If the containing reg really gets a hard reg, so do we.  */\n+      /* If the word size is larger than the size of this register,\n+\t adjust the register number to compensate.  */\n+      /* ??? Note that this just catches stragglers created by/for\n+\t integrate.  It would be better if we either caught these\n+\t earlier, or kept _all_ subregs until now and eliminate\n+\t gen_lowpart and friends.  */\n+\n       PUT_CODE (x, REG);\n+#ifdef ALTER_HARD_SUBREG\n+      REGNO (x) = ALTER_HARD_SUBREG(GET_MODE (x), SUBREG_WORD (x),\n+\t\t\t\t    GET_MODE (y), REGNO (y));\n+#else\n       REGNO (x) = REGNO (y) + SUBREG_WORD (x);\n+#endif\n     }\n   else if (GET_CODE (y) == MEM)\n     {"}, {"sha": "ad578386be67d109d81ac380ea187f099abd0cf4", "filename": "gcc/tm.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4d78eb2f91ec1b5278a4a23467055089ccc22f/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=ce4d78eb2f91ec1b5278a4a23467055089ccc22f", "patch": "@@ -1403,6 +1403,17 @@ definition of this macro is\n     / UNITS_PER_WORD))\n @end smallexample\n \n+@findex ALTER_HARD_SUBREG\n+@item ALTER_HARD_SUBREG (@var{tgt_mode}, @var{word}, @var{src_mode}, @var{regno})\n+A C expression that returns an adjusted hard register number for \n+\n+@smallexample\n+(subreg:@var{tgt_mode} (reg:@var{src_mode} @var{regno}) @var{word})\n+@end smallexample\n+\n+This may be needed if the target machine has mixed sized big-endian\n+registers, like Sparc v9.\n+\n @findex HARD_REGNO_MODE_OK\n @item HARD_REGNO_MODE_OK (@var{regno}, @var{mode})\n A C expression that is nonzero if it is permissible to store a value"}]}