{"sha": "12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkMmRjNWU2NzkwNWEyMmUwYmY2ZDhiNGE0OWIxY2UyNDYyODRhOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-03-18T07:10:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-18T07:10:33Z"}, "message": "re PR c/56566 (bogus \"is narrower than values of its type\" warning)\n\n\tPR c/56566\n\t* tree.c (tree_int_cst_min_precision): For integer_zerop (value)\n\treturn 1 even for !unsignedp.\n\n\t* c-c++-common/pr56566.c: New test.\n\nFrom-SVN: r196767", "tree": {"sha": "90cd1769b3c65fd0d483617a9235af7981d5d905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90cd1769b3c65fd0d483617a9235af7981d5d905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "136357ac8d1da764c452aa4316ebf8ea7e027457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136357ac8d1da764c452aa4316ebf8ea7e027457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136357ac8d1da764c452aa4316ebf8ea7e027457"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "c91609e89c2991067e121d71e008253eacf45d10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "patch": "@@ -1,3 +1,9 @@\n+2013-03-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/56566\n+\t* tree.c (tree_int_cst_min_precision): For integer_zerop (value)\n+\treturn 1 even for !unsignedp.\n+\n 2013-03-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (isa): Add x64 and nox64."}, {"sha": "8f14a53cdb410c0e60cfed99441b931033b90a54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "patch": "@@ -1,3 +1,8 @@\n+2013-03-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/56566\n+\t* c-c++-common/pr56566.c: New test.\n+\n 2013-03-17  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/template/abstract-dr337.C: XFAIL."}, {"sha": "e753d933a4fead0ae65f1ae70d159120e7eff023", "filename": "gcc/testsuite/c-c++-common/pr56566.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr56566.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr56566.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr56566.c?ref=12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "patch": "@@ -0,0 +1,14 @@\n+/* PR c/56566 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct S1 { enum E1 { N1 = -1, Z1 = 0 } e : 1; };\n+struct S2 { enum E2 { N2 = -1 } e : 1; };\n+struct S3 { enum E3 { Z3 = 0 } e : 1; };\n+struct S4 { enum E4 { N4 = -2, Z4 = 1 } e : 2; };\n+struct S5 { enum E5 { N5 = -3, Z5 = 1 } e : 3; };\n+struct S6 { enum E6 { N6 = -2, Z6 = 1 } e : 1; }; // { dg-warning \"too small|narrower\" }\n+struct S7 { enum E7 { N7 = -3, Z7 = 1 } e : 2; }; // { dg-warning \"too small|narrower\" }\n+struct S8 { enum E8 { Z8 = 1 } e : 1; };\n+struct S9 { enum E9 { Z9 = 2 } e : 2; };\n+struct S0 { enum E0 { Z0 = 2 } e : 1; };\t  // { dg-warning \"too small|narrower\" }"}, {"sha": "31f8037deb89eee560df64d750fb473247a6291a", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=12d2dc5e67905a22e0bf6d8b4a49b1ce246284a8", "patch": "@@ -6648,8 +6648,6 @@ tree_int_cst_sgn (const_tree t)\n unsigned int\n tree_int_cst_min_precision (tree value, bool unsignedp)\n {\n-  int log;\n-\n   /* If the value is negative, compute its negative minus 1.  The latter\n      adjustment is because the absolute value of the largest negative value\n      is one larger than the largest positive value.  This is equivalent to\n@@ -6659,14 +6657,14 @@ tree_int_cst_min_precision (tree value, bool unsignedp)\n     value = fold_build1 (BIT_NOT_EXPR, TREE_TYPE (value), value);\n \n   /* Return the number of bits needed, taking into account the fact\n-     that we need one more bit for a signed than unsigned type.  */\n+     that we need one more bit for a signed than unsigned type.\n+     If value is 0 or -1, the minimum precision is 1 no matter\n+     whether unsignedp is true or false.  */\n \n   if (integer_zerop (value))\n-    log = 0;\n+    return 1;\n   else\n-    log = tree_floor_log2 (value);\n-\n-  return log + 1 + !unsignedp;\n+    return tree_floor_log2 (value) + 1 + !unsignedp;\n }\n \n /* Compare two constructor-element-type constants.  Return 1 if the lists"}]}