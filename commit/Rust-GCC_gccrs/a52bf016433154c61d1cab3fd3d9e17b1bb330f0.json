{"sha": "a52bf016433154c61d1cab3fd3d9e17b1bb330f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyYmYwMTY0MzMxNTRjNjFkMWNhYjNmZDNkOWUxN2IxYmIzMzBmMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-03T18:21:20Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-03T18:23:44Z"}, "message": "c++: using-decl instantiation\n\nIn streaming using decls I needed to check some assumptions.  This\nadds those checks to the instantiation machinery.\n\n\tgcc/cp/\n\t* pt.c (tsubst_expr): Simplify using decl instantiation, add\n\tasserts.", "tree": {"sha": "f64e81fbc14e1281a6d9b10e41f1cdde525840a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f64e81fbc14e1281a6d9b10e41f1cdde525840a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a52bf016433154c61d1cab3fd3d9e17b1bb330f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52bf016433154c61d1cab3fd3d9e17b1bb330f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a52bf016433154c61d1cab3fd3d9e17b1bb330f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52bf016433154c61d1cab3fd3d9e17b1bb330f0/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78f2f08ac8f22a0ad412a2abf5225b5fe3176bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f2f08ac8f22a0ad412a2abf5225b5fe3176bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78f2f08ac8f22a0ad412a2abf5225b5fe3176bcf"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "b782fb535ebbd4646fa3626834503434cbbdd427", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a52bf016433154c61d1cab3fd3d9e17b1bb330f0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a52bf016433154c61d1cab3fd3d9e17b1bb330f0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a52bf016433154c61d1cab3fd3d9e17b1bb330f0", "patch": "@@ -18058,11 +18058,18 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t  finish_label_decl (DECL_NAME (decl));\n \telse if (TREE_CODE (decl) == USING_DECL)\n \t  {\n+\t    /* We cannot have a member-using decl here (until 'using\n+\t       enum T' is a thing).  */\n+\t    gcc_checking_assert (!DECL_DEPENDENT_P (decl));\n+\n+\t    /* This must be a non-dependent using-decl, and we'll have\n+\t       used the names it found during template parsing.  We do\n+\t       not want to do the lookup again, because we might not\n+\t       find the things we found then.  (Again, using enum T\n+\t       might mean we have to do things here.)  */\n \t    tree scope = USING_DECL_SCOPE (decl);\n-\t    tree name = DECL_NAME (decl);\n-\n-\t    scope = tsubst (scope, args, complain, in_decl);\n-\t    finish_nonmember_using_decl (scope, name);\n+\t    gcc_checking_assert (scope\n+\t\t\t\t == tsubst (scope, args, complain, in_decl));\n \t  }\n \telse if (is_capture_proxy (decl)\n \t\t && !DECL_TEMPLATE_INSTANTIATION (current_function_decl))"}]}