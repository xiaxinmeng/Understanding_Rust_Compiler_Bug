{"sha": "7c999b5781074ab69ec3604b13017625197872a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5OTliNTc4MTA3NGFiNjllYzM2MDRiMTMwMTc2MjUxOTc4NzJhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-27T04:01:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-27T04:01:46Z"}, "message": "re PR c++/47956 ([C++0x] gcc accepts static data member declaration with initializer for non-const literal type if type-specifier is auto)\n\n\tPR c++/47956\n\t* decl.c (check_static_variable_definition): Now static.\n\t(cp_finish_decl): Call it here.\n\t(grokdeclarator): Not here.\n\t* pt.c (instantiate_class_template_1): Or here.\n\t* cp-tree.h: Don't declare it.\n\nFrom-SVN: r174317", "tree": {"sha": "a110f301d7082068a3ed15d57a08a467657c445a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a110f301d7082068a3ed15d57a08a467657c445a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c999b5781074ab69ec3604b13017625197872a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c999b5781074ab69ec3604b13017625197872a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c999b5781074ab69ec3604b13017625197872a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c999b5781074ab69ec3604b13017625197872a9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fd1dd1461e89d9d4b44e6f9615fbca288ec40f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd1dd1461e89d9d4b44e6f9615fbca288ec40f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fd1dd1461e89d9d4b44e6f9615fbca288ec40f8"}], "stats": {"total": 53, "additions": 30, "deletions": 23}, "files": [{"sha": "577273d3706ae1aaad5a62f33785d8de3aa00d4a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -1,3 +1,12 @@\n+2011-05-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/47956\n+\t* decl.c (check_static_variable_definition): Now static.\n+\t(cp_finish_decl): Call it here.\n+\t(grokdeclarator): Not here.\n+\t* pt.c (instantiate_class_template_1): Or here.\n+\t* cp-tree.h: Don't declare it.\n+\n 2011-05-26  Janis Johnson  <janis187@us.ibm.com>\n \t    Nathan Froyd  <froydnj@codesourcery.com>\n "}, {"sha": "a01253e7f4863bc2c0dd435f30971e5946ddfd08", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -4895,7 +4895,6 @@ extern void finish_stmt\t\t\t\t(void);\n extern tree static_fn_type\t\t\t(tree);\n extern void revert_static_member_fn\t\t(tree);\n extern void fixup_anonymous_aggr\t\t(tree);\n-extern int check_static_variable_definition\t(tree, tree);\n extern tree compute_array_index_type\t\t(tree, tree, tsubst_flags_t);\n extern tree check_default_argument\t\t(tree, tree);\n typedef int (*walk_namespaces_fn)\t\t(tree, void *);"}, {"sha": "a5248800b5a05905631e90767a81f59f90b82690", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -74,6 +74,7 @@ static void push_local_name (tree);\n static tree grok_reference_init (tree, tree, tree, tree *);\n static tree grokvardecl (tree, tree, const cp_decl_specifier_seq *,\n \t\t\t int, int, tree);\n+static int check_static_variable_definition (tree, tree);\n static void record_unknown_type (tree, const char *);\n static tree builtin_function_1 (tree, tree, bool);\n static tree build_library_fn_1 (tree, enum tree_code, tree);\n@@ -5909,6 +5910,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n   if (current_class_type\n       && CP_DECL_CONTEXT (decl) == current_class_type\n       && TYPE_BEING_DEFINED (current_class_type)\n+      && !CLASSTYPE_TEMPLATE_INSTANTIATION (current_class_type)\n       && (DECL_INITIAL (decl) || init))\n     DECL_INITIALIZED_IN_CLASS_P (decl) = 1;\n \n@@ -5939,6 +5941,11 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n   if (!ensure_literal_type_for_constexpr_object (decl))\n     DECL_DECLARED_CONSTEXPR_P (decl) = 0;\n \n+  if (TREE_CODE (decl) == VAR_DECL\n+      && DECL_CLASS_SCOPE_P (decl)\n+      && DECL_INITIALIZED_IN_CLASS_P (decl))\n+    check_static_variable_definition (decl, type);\n+\n   if (init && TREE_CODE (decl) == FUNCTION_DECL)\n     {\n       tree clone;\n@@ -7640,9 +7647,12 @@ build_ptrmem_type (tree class_type, tree member_type)\n    messages.  Return 1 if the definition is particularly bad, or 0\n    otherwise.  */\n \n-int\n+static int\n check_static_variable_definition (tree decl, tree type)\n {\n+  /* Can't check yet if we don't know the type.  */\n+  if (dependent_type_p (type))\n+    return 0;\n   /* If DECL is declared constexpr, we'll do the appropriate checks\n      in check_initializer.  */\n   if (DECL_P (decl) && DECL_DECLARED_CONSTEXPR_P (decl))\n@@ -10025,21 +10035,6 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t\tstaticp = 1;\n \t\t      }\n \t\t  }\n-\n-\t\tif (uses_template_parms (type))\n-\t\t  /* We'll check at instantiation time.  */\n-\t\t  ;\n-\t\telse if (constexpr_p)\n-\t\t  /* constexpr has the same requirements.  */\n-\t\t  ;\n-\t\telse if (check_static_variable_definition (unqualified_id,\n-\t\t\t\t\t\t\t   type))\n-\t\t  /* If we just return the declaration, crashes\n-\t\t     will sometimes occur.  We therefore return\n-\t\t     void_type_node, as if this was a friend\n-\t\t     declaration, to cause callers to completely\n-\t\t     ignore this declaration.  */\n-\t\t  return error_mark_node;\n \t      }\n \n \t    if (staticp)"}, {"sha": "3b26700244d615ff63f81579213e7abbe0264628", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -8414,8 +8414,6 @@ instantiate_class_template_1 (tree type)\n \t\t\t /*init_const_expr_p=*/false,\n \t\t\t /*asmspec_tree=*/NULL_TREE,\n \t\t\t /*flags=*/0);\n-\t\t      if (DECL_INITIALIZED_IN_CLASS_P (r))\n-\t\t\tcheck_static_variable_definition (r, TREE_TYPE (r));\n \t\t    }\n \t\t  else if (TREE_CODE (r) == FIELD_DECL)\n \t\t    {"}, {"sha": "8703117b5fee1904569ae4145ae7b65fdf73d76c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -1,3 +1,10 @@\n+2011-05-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/auto7.C: Update.\n+\t* g++.dg/template/crash50.C: Adjust.\n+\t* g++.dg/template/static9.C: Adjust.\n+\t* g++.old-deja/g++.ext/memconst.C: Adjust.\n+\n 2011-05-26  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* gcc.dg/march.c: Ignore a note for some targets."}, {"sha": "e7ab7236d059d36aa0577067173e83a0cd244759", "filename": "gcc/testsuite/g++.dg/cpp0x/auto7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto7.C?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -7,7 +7,7 @@ auto j;\t\t\t// { dg-error \"has no initializer\" }\n \n template<int> struct A\n {\n-  static auto k = 7;\n+  static auto k = 7;\t// { dg-error \"non-const\" }\n   static auto l;\t// { dg-error \"has no initializer\" }\n   auto m;\t\t// { dg-error \"has no initializer\" }\n };"}, {"sha": "286685ac838b7386d08d5ac463d912c140e634cf", "filename": "gcc/testsuite/g++.dg/template/crash50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash50.C?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -3,5 +3,5 @@\n \n struct A\n {\n-  template<int> void* foo(; // { dg-error \"primary-expression|initialization|static\" }\n+  template<int> void* foo(; // { dg-error \"primary-expression|initialization|static|template\" }\n };"}, {"sha": "ab70101a19c42a20c374d92393af8050443620e7", "filename": "gcc/testsuite/g++.dg/template/static9.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -3,7 +3,6 @@\n template<typename T> struct A\n {\n   static const T i = 0; // { dg-error \"declared void\" \"void\" }\n-\t\t\t// { dg-error \"invalid|non-literal\" \"invalid\" { target *-*-* } 5 }\n };\n \n A<void> a; // { dg-message \"instantiated\" }"}, {"sha": "d9347635c2a669263f7629f074b2d1e3e2a3992f", "filename": "gcc/testsuite/g++.old-deja/g++.ext/memconst.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fmemconst.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c999b5781074ab69ec3604b13017625197872a9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fmemconst.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fmemconst.C?ref=7c999b5781074ab69ec3604b13017625197872a9", "patch": "@@ -21,5 +21,5 @@ public:\n void\n foo::bar ()\n {\n-    qwerty QWERTY ((unsigned short*)dummy_key); // { dg-error \"\" } \n+    qwerty QWERTY ((unsigned short*)dummy_key);\n }"}]}