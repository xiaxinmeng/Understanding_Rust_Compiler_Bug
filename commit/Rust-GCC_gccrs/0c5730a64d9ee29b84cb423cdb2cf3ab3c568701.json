{"sha": "0c5730a64d9ee29b84cb423cdb2cf3ab3c568701", "node_id": "C_kwDOANBUbNoAKDBjNTczMGE2NGQ5ZWUyOWI4NGNiNDIzY2RiMmNmM2FiM2M1Njg3MDE", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-07-09T09:10:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-13T10:01:22Z"}, "message": "[Ada] Small housekeeping work in gigi\n\ngcc/ada/\n\n\t* gcc-interface/trans.cc (gnat_to_gnu) <N_Assignment_Statement>: Fix\n\ta couple of minor issues in the commentary.", "tree": {"sha": "c256ea9472ad49a2a02325a9c96a3b4434ca68df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c256ea9472ad49a2a02325a9c96a3b4434ca68df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c5730a64d9ee29b84cb423cdb2cf3ab3c568701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5730a64d9ee29b84cb423cdb2cf3ab3c568701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c5730a64d9ee29b84cb423cdb2cf3ab3c568701", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5730a64d9ee29b84cb423cdb2cf3ab3c568701/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f3f64b9e777a706662554ef39a512544244ef0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3f64b9e777a706662554ef39a512544244ef0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3f64b9e777a706662554ef39a512544244ef0c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "c1dd567b2e4e2ad3ddd3289ec375f493fb8ce4bd", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5730a64d9ee29b84cb423cdb2cf3ab3c568701/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5730a64d9ee29b84cb423cdb2cf3ab3c568701/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=0c5730a64d9ee29b84cb423cdb2cf3ab3c568701", "patch": "@@ -7181,7 +7181,7 @@ gnat_to_gnu (Node_Id gnat_node)\n       break;\n \n     case N_Assignment_Statement:\n-      /* Get the LHS and RHS of the statement and convert any reference to an\n+      /* First get the LHS of the statement and convert any reference to an\n \t unconstrained array into a reference to the underlying array.  */\n       gnu_lhs = maybe_unconstrained_array (gnat_to_gnu (Name (gnat_node)));\n \n@@ -7191,13 +7191,17 @@ gnat_to_gnu (Node_Id gnat_node)\n \t   && !valid_constant_size_p (TYPE_SIZE_UNIT (TREE_TYPE (gnu_lhs))))\n \tgnu_result = build_call_raise (SE_Object_Too_Large, gnat_node,\n \t\t\t\t       N_Raise_Storage_Error);\n+\n+      /* If the RHS is a function call, let Call_to_gnu do the entire work.  */\n       else if (Nkind (Expression (gnat_node)) == N_Function_Call)\n \t{\n \t  get_atomic_access (Name (gnat_node), &aa_type, &aa_sync);\n \t  gnu_result\n \t    = Call_to_gnu (Expression (gnat_node), &gnu_result_type, gnu_lhs,\n \t\t\t   aa_type, aa_sync);\n \t}\n+\n+      /* Otherwise we need to build the assignment statement manually.  */\n       else\n \t{\n \t  const Node_Id gnat_expr = Expression (gnat_node);\n@@ -7223,6 +7227,9 @@ gnat_to_gnu (Node_Id gnat_node)\n \t\t       && Is_Single_Aggregate (gnat_temp));\n \t      gnu_rhs = gnat_to_gnu (gnat_temp);\n \t    }\n+\n+\t  /* Otherwise get the RHS of the statement and do the same processing\n+\t     as for the LHS above.  */\n \t  else\n \t    gnu_rhs = maybe_unconstrained_array (gnat_to_gnu (gnat_expr));\n "}]}