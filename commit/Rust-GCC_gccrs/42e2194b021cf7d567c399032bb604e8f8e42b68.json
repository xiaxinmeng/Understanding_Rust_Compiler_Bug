{"sha": "42e2194b021cf7d567c399032bb604e8f8e42b68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlMjE5NGIwMjFjZjdkNTY3YzM5OTAzMmJiNjA0ZThmOGU0MmI2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-07T18:26:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-07T18:26:52Z"}, "message": "(no_record_file): New variable.\n\n(main): Set it for -imacros and -include files.\n(do_endif): Don't call record_control_macro for -include or -imacros files or\nfiles included from -imacros.\n\nFrom-SVN: r6708", "tree": {"sha": "5c299753f909766b8ed50919180a089614e65556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c299753f909766b8ed50919180a089614e65556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42e2194b021cf7d567c399032bb604e8f8e42b68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e2194b021cf7d567c399032bb604e8f8e42b68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42e2194b021cf7d567c399032bb604e8f8e42b68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e2194b021cf7d567c399032bb604e8f8e42b68/comments", "author": null, "committer": null, "parents": [{"sha": "df716623488e0e495a4a721651fe6f6bcc40a76a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df716623488e0e495a4a721651fe6f6bcc40a76a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df716623488e0e495a4a721651fe6f6bcc40a76a"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "951bad508b05a59f8bcd466e9a51e47c12f67a4f", "filename": "gcc/cccp.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e2194b021cf7d567c399032bb604e8f8e42b68/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e2194b021cf7d567c399032bb604e8f8e42b68/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=42e2194b021cf7d567c399032bb604e8f8e42b68", "patch": "@@ -467,6 +467,11 @@ int traditional;\n \n static int no_output;\n \n+/* Nonzero means this file was included with a -imacros or -include\n+   command line and should not be recorded as an include file.  */\n+\n+static int no_record_file;\n+\n /* Nonzero means that we have finished processing the command line options.\n    This flag is used to decide whether or not to issue certain errors\n    and/or warnings.  */\n@@ -1802,7 +1807,7 @@ main (argc, argv)\n      Much like #including them, but with no_output set\n      so that only their macro definitions matter.  */\n \n-  no_output++;\n+  no_output++; no_record_file++;\n   for (i = 1; i < argc; i++)\n     if (pend_files[i]) {\n       int fd = open (pend_files[i], O_RDONLY, 0666);\n@@ -1812,7 +1817,7 @@ main (argc, argv)\n       }\n       finclude (fd, pend_files[i], &outbuf, 0, NULL_PTR);\n     }\n-  no_output--;\n+  no_output--; no_record_file--;\n \n   /* Copy the entire contents of the main input file into\n      the stacked input buffer previously allocated for it.  */\n@@ -2002,6 +2007,7 @@ main (argc, argv)\n \n   /* Scan the -include files before the main input.  */\n \n+  no_record_file++;\n   for (i = 1; i < argc; i++)\n     if (pend_includes[i]) {\n       int fd = open (pend_includes[i], O_RDONLY, 0666);\n@@ -2011,6 +2017,7 @@ main (argc, argv)\n       }\n       finclude (fd, pend_includes[i], &outbuf, 0, NULL_PTR);\n     }\n+  no_record_file--;\n \n   /* Scan the input, processing macros and directives.  */\n \n@@ -7055,8 +7062,13 @@ do_endif (buf, limit, op, keyword)\n       /* If we get here, this #endif ends a #ifndef\n \t that contains all of the file (aside from whitespace).\n \t Arrange not to include the file again\n-\t if the macro that was tested is defined.  */\n-      if (indepth != 0)\n+\t if the macro that was tested is defined.\n+\n+\t Do not do this for the top-level file in a -include or any\n+\t file in a -imacros.  */\n+      if (indepth != 0\n+\t  && ! (indepth == 1 && no_record_file)\n+\t  && ! (no_record_file && no_output))\n \trecord_control_macro (ip->fname, temp->control_macro);\n     fail: ;\n     }"}]}