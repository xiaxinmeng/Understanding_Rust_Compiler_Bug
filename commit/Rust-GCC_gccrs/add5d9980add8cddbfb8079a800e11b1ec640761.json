{"sha": "add5d9980add8cddbfb8079a800e11b1ec640761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRkNWQ5OTgwYWRkOGNkZGJmYjgwNzlhODAwZTExYjFlYzY0MDc2MQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-04-09T20:24:11Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-04-09T20:24:11Z"}, "message": "ipa-cp.c (ipcp_lats_are_equal): Return true also if the two lattices are addresses of CONST_DECLs with the same...\n\n2010-04-09  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-cp.c (ipcp_lats_are_equal): Return true also if the two\n\tlattices are addresses of CONST_DECLs with the same initial value.\n\t(ipcp_print_all_lattices): Print values of CONST_DECLs.\n\t* ipa-prop.c (ipa_print_node_jump_functions): Likewise.\n\nFrom-SVN: r158176", "tree": {"sha": "1544c1eda2afa69906ff167880adf1228b76c93d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1544c1eda2afa69906ff167880adf1228b76c93d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/add5d9980add8cddbfb8079a800e11b1ec640761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add5d9980add8cddbfb8079a800e11b1ec640761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add5d9980add8cddbfb8079a800e11b1ec640761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add5d9980add8cddbfb8079a800e11b1ec640761/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43ba743ca91e5dce17fc695392bab956ed5c79f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ba743ca91e5dce17fc695392bab956ed5c79f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ba743ca91e5dce17fc695392bab956ed5c79f4"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "1c57d045fb1108a72a374d8ca89833eb58357cae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5d9980add8cddbfb8079a800e11b1ec640761/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5d9980add8cddbfb8079a800e11b1ec640761/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=add5d9980add8cddbfb8079a800e11b1ec640761", "patch": "@@ -1,3 +1,10 @@\n+2010-04-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-cp.c (ipcp_lats_are_equal): Return true also if the two\n+\tlattices are addresses of CONST_DECLs with the same initial value.\n+\t(ipcp_print_all_lattices): Print values of CONST_DECLs.\n+\t* ipa-prop.c (ipa_print_node_jump_functions): Likewise.\n+\n 2010-04-09  Eric Botcazou  <ebotcazou@adacore.com>\n             Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n "}, {"sha": "527c0c42530bc542e2346e9b64dbac3acfccb90d", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5d9980add8cddbfb8079a800e11b1ec640761/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5d9980add8cddbfb8079a800e11b1ec640761/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=add5d9980add8cddbfb8079a800e11b1ec640761", "patch": "@@ -227,10 +227,14 @@ ipcp_lats_are_equal (struct ipcp_lattice *lat1, struct ipcp_lattice *lat2)\n   if (lat1->type != lat2->type)\n     return false;\n \n-  if (operand_equal_p (lat1->constant, lat2->constant, 0))\n-    return true;\n-\n-  return false;\n+  if (TREE_CODE (lat1->constant) ==  ADDR_EXPR\n+      && TREE_CODE (lat2->constant) ==  ADDR_EXPR\n+      && TREE_CODE (TREE_OPERAND (lat1->constant, 0)) == CONST_DECL\n+      && TREE_CODE (TREE_OPERAND (lat2->constant, 0)) == CONST_DECL)\n+    return operand_equal_p (DECL_INITIAL (TREE_OPERAND (lat1->constant, 0)),\n+\t\t\t    DECL_INITIAL (TREE_OPERAND (lat2->constant, 0)), 0);\n+  else\n+    return operand_equal_p (lat1->constant, lat2->constant, 0);\n }\n \n /* Compute Meet arithmetics:\n@@ -386,8 +390,16 @@ ipcp_print_all_lattices (FILE * f)\n \t  fprintf (f, \"    param [%d]: \", i);\n \t  if (lat->type == IPA_CONST_VALUE)\n \t    {\n+\t      tree cst = lat->constant;\n \t      fprintf (f, \"type is CONST \");\n-\t      print_generic_expr (f, lat->constant, 0);\n+\t      print_generic_expr (f, cst, 0);\n+\t      if (TREE_CODE (cst) == ADDR_EXPR\n+\t\t  && TREE_CODE (TREE_OPERAND (cst, 0)) == CONST_DECL)\n+\t\t{\n+\t\t  fprintf (f, \" -> \");\n+\t\t  print_generic_expr (f, DECL_INITIAL (TREE_OPERAND (cst, 0)),\n+\t\t\t\t\t\t       0);\n+\t\t}\n \t      fprintf (f, \"\\n\");\n \t    }\n \t  else if (lat->type == IPA_TOP)"}, {"sha": "c6d58b1d4526592429aea6974ea386ec1876ace5", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add5d9980add8cddbfb8079a800e11b1ec640761/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add5d9980add8cddbfb8079a800e11b1ec640761/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=add5d9980add8cddbfb8079a800e11b1ec640761", "patch": "@@ -291,6 +291,13 @@ ipa_print_node_jump_functions (FILE *f, struct cgraph_node *node)\n \t      tree val = jump_func->value.constant;\n \t      fprintf (f, \"CONST: \");\n \t      print_generic_expr (f, val, 0);\n+\t      if (TREE_CODE (val) == ADDR_EXPR\n+\t\t  && TREE_CODE (TREE_OPERAND (val, 0)) == CONST_DECL)\n+\t\t{\n+\t\t  fprintf (f, \" -> \");\n+\t\t  print_generic_expr (f, DECL_INITIAL (TREE_OPERAND (val, 0)),\n+\t\t\t\t\t\t       0);\n+\t\t}\n \t      fprintf (f, \"\\n\");\n \t    }\n \t  else if (type == IPA_JF_CONST_MEMBER_PTR)"}]}