{"sha": "45af64a72b4794566c2f9938ca6d4714c1784e62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVhZjY0YTcyYjQ3OTQ1NjZjMmY5OTM4Y2E2ZDQ3MTRjMTc4NGU2Mg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2012-12-18T09:57:48Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2012-12-18T09:57:48Z"}, "message": "Main.java (parseClasses): Don't scan inner classes if our item is a file.\n\n2012-12-17  Andrew Haley  <aph@redhat.com>\n\n\t* tools/gnu/classpath/tools/javah/Main.java (parseClasses): Don't\n\tscan inner classes if our item is a file.\n\nFrom-SVN: r194573", "tree": {"sha": "42bf542900544059c6eafeb4ae398dd7058a56c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42bf542900544059c6eafeb4ae398dd7058a56c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45af64a72b4794566c2f9938ca6d4714c1784e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45af64a72b4794566c2f9938ca6d4714c1784e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45af64a72b4794566c2f9938ca6d4714c1784e62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45af64a72b4794566c2f9938ca6d4714c1784e62/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93d3dd5997f8e051242a87af82672c838a4e040c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d3dd5997f8e051242a87af82672c838a4e040c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93d3dd5997f8e051242a87af82672c838a4e040c"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "83eac3f8d0d85fdd0c99dd0bf52f132255906bb5", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45af64a72b4794566c2f9938ca6d4714c1784e62/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45af64a72b4794566c2f9938ca6d4714c1784e62/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=45af64a72b4794566c2f9938ca6d4714c1784e62", "patch": "@@ -1,3 +1,8 @@\n+2012-12-17  Andrew Haley  <aph@redhat.com>\n+\n+\t* tools/gnu/classpath/tools/javah/Main.java (parseClasses): Don't\n+\tscan inner classes if our item is a file.\n+\n 2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* configure: Regenerated."}, {"sha": "12f1a7d9813f91f4be90cfa4bbf08708ac7aadee", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/Main.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45af64a72b4794566c2f9938ca6d4714c1784e62/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMain.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45af64a72b4794566c2f9938ca6d4714c1784e62/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMain.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMain.class?ref=45af64a72b4794566c2f9938ca6d4714c1784e62"}, {"sha": "2bea36cafc28df779e9cc97fff4eec0c1dce4da1", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/Main.java", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45af64a72b4794566c2f9938ca6d4714c1784e62/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMain.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45af64a72b4794566c2f9938ca6d4714c1784e62/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMain.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMain.java?ref=45af64a72b4794566c2f9938ca6d4714c1784e62", "patch": "@@ -370,16 +370,19 @@ private Map<File,ClassWrapper> parseClasses(Iterator<Object> inputs)\n         results.put(filename, klass);\n         parsed.add(item.toString());\n \n-        // Check to see if there are inner classes to also parse\n-        Iterator<?> innerClasses = klass.innerClasses.iterator();\n-        HashSet<Object> innerNames = new HashSet<Object>();\n-        while (innerClasses.hasNext())\n+        if (! (item instanceof File))\n           {\n-            String innerName = ((InnerClassNode) innerClasses.next()).name;\n-            if (!parsed.contains(innerName))\n-              innerNames.add(innerName);\n+            // Check to see if there are inner classes to also parse\n+            Iterator<?> innerClasses = klass.innerClasses.iterator();\n+            HashSet<Object> innerNames = new HashSet<Object>();\n+            while (innerClasses.hasNext())\n+              {\n+                String innerName = ((InnerClassNode) innerClasses.next()).name;\n+                if (!parsed.contains(innerName))\n+                  innerNames.add(innerName);\n+              }\n+            results.putAll(parseClasses(innerNames.iterator()));\n           }\n-        results.putAll(parseClasses(innerNames.iterator()));\n       }\n     return results;\n   }"}]}