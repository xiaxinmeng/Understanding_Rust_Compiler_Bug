{"sha": "dd950cbbb97ff5ebc203cba6c2112edd322b6f35", "node_id": "C_kwDOANBUbNoAKGRkOTUwY2JiYjk3ZmY1ZWJjMjAzY2JhNmMyMTEyZWRkMzIyYjZmMzU", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2022-08-23T14:47:13Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-13T13:00:02Z"}, "message": "Use DW_ATE_UTF for the Rust 'char' type\n\nThe Rust 'char' type should use the DWARF DW_ATE_UTF encoding.\n\n\tgcc/\n\t* dwarf2out.cc (is_rust): New.\n\t(base_type_die): Use DW_ATE_UTF for the Rust 'char' type.\n\t(gen_compile_unit_die): Handle \"GNU Rust\".\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\nCo-authored-by: Marc Poulhi\u00e8s <dkm@kataplop.net>", "tree": {"sha": "16b962ee025f53bd101f93300a74bf298d4feb62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16b962ee025f53bd101f93300a74bf298d4feb62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd950cbbb97ff5ebc203cba6c2112edd322b6f35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd950cbbb97ff5ebc203cba6c2112edd322b6f35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd950cbbb97ff5ebc203cba6c2112edd322b6f35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd950cbbb97ff5ebc203cba6c2112edd322b6f35/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4fddbe9592e9feb37ce567d90af822b75995531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fddbe9592e9feb37ce567d90af822b75995531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fddbe9592e9feb37ce567d90af822b75995531"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "ed06707a7b474a194ea7e02063be1083ac415643", "filename": "gcc/dwarf2out.cc", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd950cbbb97ff5ebc203cba6c2112edd322b6f35/gcc%2Fdwarf2out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd950cbbb97ff5ebc203cba6c2112edd322b6f35/gcc%2Fdwarf2out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.cc?ref=dd950cbbb97ff5ebc203cba6c2112edd322b6f35", "patch": "@@ -5600,6 +5600,17 @@ is_fortran (const_tree decl)\n   return is_fortran ();\n }\n \n+/* Return TRUE if the language is Rust.\n+   Note, returns FALSE for dwarf_version < 5 && dwarf_strict. */\n+\n+static inline bool\n+is_rust ()\n+{\n+  unsigned int lang = get_AT_unsigned (comp_unit_die (), DW_AT_language);\n+\n+  return lang == DW_LANG_Rust;\n+}\n+\n /* Return TRUE if the language is Ada.  */\n \n static inline bool\n@@ -13232,7 +13243,11 @@ base_type_die (tree type, bool reverse)\n \t}\n       if (TYPE_STRING_FLAG (type))\n \t{\n-\t  if (TYPE_UNSIGNED (type))\n+\t  if ((dwarf_version >= 4 || !dwarf_strict)\n+\t      && is_rust ()\n+\t      && int_size_in_bytes (type) == 4)\n+\t    encoding = DW_ATE_UTF;\n+\t  else if (TYPE_UNSIGNED (type))\n \t    encoding = DW_ATE_unsigned_char;\n \t  else\n \t    encoding = DW_ATE_signed_char;\n@@ -25231,6 +25246,8 @@ gen_compile_unit_die (const char *filename)\n \t{\n \t  if (strcmp (language_string, \"GNU Go\") == 0)\n \t    language = DW_LANG_Go;\n+\t  else if (strcmp (language_string, \"GNU Rust\") == 0)\n+\t    language = DW_LANG_Rust;\n \t}\n     }\n   /* Use a degraded Fortran setting in strict DWARF2 so is_fortran works.  */"}]}