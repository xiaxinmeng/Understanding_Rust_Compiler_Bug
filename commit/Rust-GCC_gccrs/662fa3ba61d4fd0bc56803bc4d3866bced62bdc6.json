{"sha": "662fa3ba61d4fd0bc56803bc4d3866bced62bdc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyZmEzYmE2MWQ0ZmQwYmM1NjgwM2JjNGQzODY2YmNlZDYyYmRjNg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-05-04T21:32:27Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-05-04T21:32:27Z"}, "message": "[RS6000] out-of-line exit register restore funcs\n\n\t* config/rs6000/rs6000.c (rs6000_savres_strategy): Don't use\n\tout-of-line gpr restore for one or two regs if that would add\n\ta save of lr.\n\nFrom-SVN: r235907", "tree": {"sha": "44aeb019b93c79e5dbdc5b9ab47e47b7ffd759cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44aeb019b93c79e5dbdc5b9ab47e47b7ffd759cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdab73dc76d4551c652a3f3d686e765e637c95d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdab73dc76d4551c652a3f3d686e765e637c95d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdab73dc76d4551c652a3f3d686e765e637c95d9"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "629ee45c06ea6e05a6b1561657d616b2da63a8f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=662fa3ba61d4fd0bc56803bc4d3866bced62bdc6", "patch": "@@ -1,3 +1,9 @@\n+2016-05-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_savres_strategy): Don't use\n+\tout-of-line gpr restore for one or two regs if that would add\n+\ta save of lr.\n+\n 2016-05-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/70873"}, {"sha": "77092fa3f8b4980c3126d1015044348a7ad22858", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662fa3ba61d4fd0bc56803bc4d3866bced62bdc6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=662fa3ba61d4fd0bc56803bc4d3866bced62bdc6", "patch": "@@ -23422,6 +23422,15 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n \t  }\n     }\n \n+  /* info->lr_save_p isn't yet set if the only reason lr needs to be\n+     saved is an out-of-line save or restore.  Set up the value for\n+     the next test (excluding out-of-line gprs).  */\n+  bool lr_save_p = (info->lr_save_p\n+\t\t    || !(strategy & SAVE_INLINE_FPRS)\n+\t\t    || !(strategy & SAVE_INLINE_VRS)\n+\t\t    || !(strategy & REST_INLINE_FPRS)\n+\t\t    || !(strategy & REST_INLINE_VRS));\n+\n   if (TARGET_MULTIPLE\n       && !TARGET_POWERPC64\n       && !(TARGET_SPE_ABI && info->spe_64bit_regs_used)\n@@ -23431,15 +23440,6 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n \t since the store-multiple instruction will always be smaller.  */\n       strategy |= SAVE_INLINE_GPRS | SAVE_MULTIPLE;\n \n-      /* info->lr_save_p isn't yet set if the only reason lr needs to be\n-\t saved is an out-of-line save or restore.  Set up the value for\n-\t the next test (excluding out-of-line gprs).  */\n-      bool lr_save_p = (info->lr_save_p\n-\t\t\t|| !(strategy & SAVE_INLINE_FPRS)\n-\t\t\t|| !(strategy & SAVE_INLINE_VRS)\n-\t\t\t|| !(strategy & REST_INLINE_FPRS)\n-\t\t\t|| !(strategy & REST_INLINE_VRS));\n-\n       /* The situation is more complicated with load multiple.  We'd\n \t prefer to use the out-of-line routines for restores, since the\n \t \"exit\" out-of-line routines can handle the restore of LR and the\n@@ -23452,6 +23452,12 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n \tstrategy |= REST_INLINE_GPRS | REST_MULTIPLE;\n     }\n \n+  /* Using the \"exit\" out-of-line routine does not improve code size\n+     if using it would require lr to be saved and if only saving one\n+     or two gprs.  */\n+  else if (!lr_save_p && info->first_gp_reg_save > 29)\n+    strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n+\n   /* We can only use load multiple or the out-of-line routines to\n      restore gprs if we've saved all the registers from\n      first_gp_reg_save.  Otherwise, we risk loading garbage."}]}