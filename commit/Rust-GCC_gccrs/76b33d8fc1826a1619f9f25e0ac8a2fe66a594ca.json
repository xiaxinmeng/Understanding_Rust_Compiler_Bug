{"sha": "76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZiMzNkOGZjMTgyNmExNjE5ZjlmMjVlMGFjOGEyZmU2NmE1OTRjYQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-06-15T20:07:34Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-06-15T20:07:34Z"}, "message": "re PR fortran/36515 (Integer read from stdin yields a value overflow for a valid integer.)\n\n2008-06-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/36515\n\t* gfortran.dg/no_range_check_2.f90: New test.\n\nFrom-SVN: r136823", "tree": {"sha": "dc3783706782480c844b7a82b8f434224becc55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc3783706782480c844b7a82b8f434224becc55e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca/comments", "author": null, "committer": null, "parents": [{"sha": "a9608b5743857c8e672f5e6437c25cf41a63c0cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9608b5743857c8e672f5e6437c25cf41a63c0cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9608b5743857c8e672f5e6437c25cf41a63c0cb"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "6084985374f49a334e496a414d09162f0b44c3b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca", "patch": "@@ -1,3 +1,8 @@\n+2008-06-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/36515\n+\t* gfortran.dg/no_range_check_2.f90: New test.\n+\n 2008-06-15  Mark Shinwell  <shinwell@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_mips_loongson): New."}, {"sha": "4b45c4c8e4f213e26cba02fe38c869dfec09e9ce", "filename": "gcc/testsuite/gfortran.dg/no_range_check_2.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca/gcc%2Ftestsuite%2Fgfortran.dg%2Fno_range_check_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca/gcc%2Ftestsuite%2Fgfortran.dg%2Fno_range_check_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fno_range_check_2.f90?ref=76b33d8fc1826a1619f9f25e0ac8a2fe66a594ca", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run }\n+! { dg-options \"-fno-range-check\" }\n+! PR36515 Integer read a value overflow for an invalid integer.\n+! This tests that -fno-range-check allows this legacy behavior at runtime.\n+program int_range\n+character(25) :: inputline = \"-2147483648\"\n+integer*4 smallest\n+read(inputline,100) smallest\n+100 format(1i11)\n+if (smallest.ne.-2147483648) call abort\n+end"}]}