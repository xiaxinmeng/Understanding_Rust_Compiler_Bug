{"sha": "f33fc0775706e4db80d584c477608e28f4da0a6f", "node_id": "C_kwDOANBUbNoAKGYzM2ZjMDc3NTcwNmU0ZGI4MGQ1ODRjNDc3NjA4ZTI4ZjRkYTBhNmY", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2023-03-27T02:42:23Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2023-03-27T02:42:23Z"}, "message": "rs6000: Ensure vec_sld shift count in allowable range [PR109082]\n\nAs PR109082 shows, some uses of vec_sld in emmintrin.h don't\nstrictly guarantee the given shift count is in the range\n0-15 (inclusive).  This patch is to make the argument\nrange constraint honored for those uses.\n\n\tPR target/109082\n\ngcc/ChangeLog:\n\n\t* config/rs6000/emmintrin.h (_mm_bslli_si128): Check __N is not less\n\tthan zero when calling vec_sld.\n\t(_mm_bsrli_si128): Return __A if __N is zero, check __N is bigger than\n\tzero when calling vec_sld.\n\t(_mm_slli_si128): Return __A if _imm5 is zero, check _imm5 is bigger\n\tthan zero when calling vec_sld.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/powerpc/pr109082.c: New test.", "tree": {"sha": "ba46658dc9c57c168bc1f4103a04bbce494b63e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba46658dc9c57c168bc1f4103a04bbce494b63e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f33fc0775706e4db80d584c477608e28f4da0a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33fc0775706e4db80d584c477608e28f4da0a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33fc0775706e4db80d584c477608e28f4da0a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33fc0775706e4db80d584c477608e28f4da0a6f/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a36a9541526708881f2ac0c4f180506bcf80bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a36a9541526708881f2ac0c4f180506bcf80bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a36a9541526708881f2ac0c4f180506bcf80bb"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "bfff7ff6feaa1be8d08b93b6a4c57a1c5ad95fd1", "filename": "gcc/config/rs6000/emmintrin.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f33fc0775706e4db80d584c477608e28f4da0a6f/gcc%2Fconfig%2Frs6000%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f33fc0775706e4db80d584c477608e28f4da0a6f/gcc%2Fconfig%2Frs6000%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Femmintrin.h?ref=f33fc0775706e4db80d584c477608e28f4da0a6f", "patch": "@@ -1601,7 +1601,7 @@ _mm_bslli_si128 (__m128i __A, const int __N)\n   __v16qu __result;\n   const __v16qu __zeros = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n \n-  if (__N < 16)\n+  if (__N >= 0 && __N < 16)\n     __result = vec_sld ((__v16qu) __A, __zeros, __N);\n   else\n     __result = __zeros;\n@@ -1615,7 +1615,9 @@ _mm_bsrli_si128 (__m128i __A, const int __N)\n   __v16qu __result;\n   const __v16qu __zeros = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n \n-  if (__N < 16)\n+  if (__N == 0)\n+    return __A;\n+  else if (__N > 0 && __N < 16)\n #ifdef __LITTLE_ENDIAN__\n     if (__builtin_constant_p(__N))\n       /* Would like to use Vector Shift Left Double by Octet\n@@ -1650,7 +1652,9 @@ _mm_slli_si128 (__m128i __A, const int _imm5)\n   __v16qu __result;\n   const __v16qu __zeros = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n \n-  if (_imm5 < 16)\n+  if (_imm5 == 0)\n+    return __A;\n+  else if (_imm5 > 0 && _imm5 < 16)\n #ifdef __LITTLE_ENDIAN__\n     __result = vec_sld ((__v16qu) __A, __zeros, _imm5);\n #else"}, {"sha": "ffa1c099eed27dcb4649cf46eb176a0b6a7c9dfa", "filename": "gcc/testsuite/gcc.target/powerpc/pr109082.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f33fc0775706e4db80d584c477608e28f4da0a6f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr109082.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f33fc0775706e4db80d584c477608e28f4da0a6f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr109082.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr109082.c?ref=f33fc0775706e4db80d584c477608e28f4da0a6f", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-O2 -mvsx\" } */\n+\n+/* Verify there is no warning message.  */\n+\n+#define NO_WARN_X86_INTRINSICS 1\n+#include <emmintrin.h>\n+\n+__m128i\n+foo (__m128i A)\n+{\n+  return _mm_bsrli_si128 (A, 0);\n+}"}]}