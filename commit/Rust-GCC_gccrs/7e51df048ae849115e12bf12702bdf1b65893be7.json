{"sha": "7e51df048ae849115e12bf12702bdf1b65893be7", "node_id": "C_kwDOANBUbNoAKDdlNTFkZjA0OGFlODQ5MTE1ZTEyYmYxMjcwMmJkZjFiNjU4OTNiZTc", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-08-20T18:36:28Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-08-22T18:40:12Z"}, "message": "Fortran: fix simplification of intrinsics IBCLR and IBSET [PR106557]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/106557\n\t* simplify.cc (gfc_simplify_ibclr): Ensure consistent results of\n\tthe simplification by dropping a redundant memory representation\n\tof argument x.\n\t(gfc_simplify_ibset): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/106557\n\t* gfortran.dg/pr106557.f90: New test.", "tree": {"sha": "f463cc93368457f29f1c1e9f7c933526eb3c1964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f463cc93368457f29f1c1e9f7c933526eb3c1964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e51df048ae849115e12bf12702bdf1b65893be7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e51df048ae849115e12bf12702bdf1b65893be7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e51df048ae849115e12bf12702bdf1b65893be7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e51df048ae849115e12bf12702bdf1b65893be7/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6316324fceaef431799a8b386de5cc9881d6898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6316324fceaef431799a8b386de5cc9881d6898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6316324fceaef431799a8b386de5cc9881d6898"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "f992c31e5d74374bbb685fa2f6a5cbd7d352b89e", "filename": "gcc/fortran/simplify.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51df048ae849115e12bf12702bdf1b65893be7/gcc%2Ffortran%2Fsimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51df048ae849115e12bf12702bdf1b65893be7/gcc%2Ffortran%2Fsimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.cc?ref=7e51df048ae849115e12bf12702bdf1b65893be7", "patch": "@@ -3380,6 +3380,13 @@ gfc_simplify_ibclr (gfc_expr *x, gfc_expr *y)\n   k = gfc_validate_kind (x->ts.type, x->ts.kind, false);\n \n   result = gfc_copy_expr (x);\n+  /* Drop any separate memory representation of x to avoid potential\n+     inconsistencies in result.  */\n+  if (result->representation.string)\n+    {\n+      free (result->representation.string);\n+      result->representation.string = NULL;\n+    }\n \n   convert_mpz_to_unsigned (result->value.integer,\n \t\t\t   gfc_integer_kinds[k].bit_size);\n@@ -3471,6 +3478,13 @@ gfc_simplify_ibset (gfc_expr *x, gfc_expr *y)\n   k = gfc_validate_kind (x->ts.type, x->ts.kind, false);\n \n   result = gfc_copy_expr (x);\n+  /* Drop any separate memory representation of x to avoid potential\n+     inconsistencies in result.  */\n+  if (result->representation.string)\n+    {\n+      free (result->representation.string);\n+      result->representation.string = NULL;\n+    }\n \n   convert_mpz_to_unsigned (result->value.integer,\n \t\t\t   gfc_integer_kinds[k].bit_size);"}, {"sha": "d073f3e71864fd4b5cdf55e64d2bc338cca317d0", "filename": "gcc/testsuite/gfortran.dg/pr106557.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51df048ae849115e12bf12702bdf1b65893be7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106557.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51df048ae849115e12bf12702bdf1b65893be7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106557.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106557.f90?ref=7e51df048ae849115e12bf12702bdf1b65893be7", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! { dg-additional-options \"-fdump-tree-original\" }\n+! PR fortran/106557 - nesting intrinsics ibset and transfer gives wrong result\n+\n+program p\n+  implicit none\n+  character(1) :: s\n+\n+  write(s,'(i1)') ibset (transfer (0, 0), 0)\n+  if (s /= '1') stop 1\n+  write(s,'(i1)') ibclr (transfer (1, 0), 0)\n+  if (s /= '0') stop 2\n+\n+  ! These shall be fully resolved at compile time:\n+  if (transfer   (ibset (transfer (0, 0), 0), 0) /= 1) stop 3\n+  if (transfer   (ibclr (transfer (1, 0), 0), 0) /= 0) stop 4\n+end\n+\n+! { dg-final { scan-tree-dump-times \"_gfortran_stop_numeric\" 2 \"original\" } }"}]}