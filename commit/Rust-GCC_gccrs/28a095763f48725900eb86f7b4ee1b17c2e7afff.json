{"sha": "28a095763f48725900eb86f7b4ee1b17c2e7afff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhhMDk1NzYzZjQ4NzI1OTAwZWI4NmY3YjRlZTFiMTdjMmU3YWZmZg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2018-11-27T01:56:06Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2018-11-27T01:56:06Z"}, "message": "[RS6000] PowerPC -mcpu=native support\n\nThe -mcpu=native support has bit-rotted a little, in particular the\nfallback when the native cpu couldn't be determined.  This patch fixes\nthe bit-rot and reorganizes ASM_CPU_SPEC so that it should be a little\neasier to keep the -mcpu=native data up to date.\n\nThe patch also changes the fix for PR63177 (-mpower9-vector being\npassed by the user when the default is -mpower8) to also apply when\n-mcpu=powerpc64le and -mcpu=native is given.  I'll note that the hack\nfor PR63177 should probably be extended to lots of other options, if\nwe're going to continue supporting all those sub-architecture options\n(-mpower9-vector, -mpower8-vector, -mcrypto, -mdirect-move, -mhtm,\n-mvsx and others) in the positive sense.  I think those should have\nonly been supported in their -mno- variants..\n\n\t* config/rs6000/aix71.h (ASM_SPEC): Don't select default -maix64\n\tcpu here.\n\t(ASM_CPU_SPEC): Do so here.  Rewrite using if .. else if .. specs\n\tform.  Error on missing -mcpu case.\n\t* config/rs6000/driver-rs6000.c (asm_names <_AIX>): Update NULL case.\n\t(asm_names <!_AIX>): Add missing cpus.  Update NULL case.  Apply\n\tPR63177 fix for -mcpu=power8 and -mcpu=powerpc64le.\n\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Rewrite using if ..\n\telse if .. specs form.  Error on missing -mcpu case.  Don't output\n\tduplicate -maltivec.  Apply PR63177 fix for -mcpu=powerpc64le.\n\nFrom-SVN: r266502", "tree": {"sha": "fe44222f3f91b3397f46fd04d6b70cc98003635f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe44222f3f91b3397f46fd04d6b70cc98003635f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28a095763f48725900eb86f7b4ee1b17c2e7afff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a095763f48725900eb86f7b4ee1b17c2e7afff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a095763f48725900eb86f7b4ee1b17c2e7afff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a095763f48725900eb86f7b4ee1b17c2e7afff/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3da39f52ff740ad4263a000c48fd5a6d9afd18fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da39f52ff740ad4263a000c48fd5a6d9afd18fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da39f52ff740ad4263a000c48fd5a6d9afd18fd"}], "stats": {"total": 223, "additions": 121, "deletions": 102}, "files": [{"sha": "d8e374fb15f427c6085d8e97091cd20b858ac9d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28a095763f48725900eb86f7b4ee1b17c2e7afff", "patch": "@@ -1,3 +1,16 @@\n+2018-11-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/aix71.h (ASM_SPEC): Don't select default -maix64\n+\tcpu here.\n+\t(ASM_CPU_SPEC): Do so here.  Rewrite using if .. else if .. specs\n+\tform.  Error on missing -mcpu case.\n+\t* config/rs6000/driver-rs6000.c (asm_names <_AIX>): Update NULL case.\n+\t(asm_names <!_AIX>): Add missing cpus.  Update NULL case.  Apply\n+\tPR63177 fix for -mcpu=power8 and -mcpu=powerpc64le.\n+\t* config/rs6000/rs6000.h (ASM_CPU_SPEC): Rewrite using if ..\n+\telse if .. specs form.  Error on missing -mcpu case.  Don't output\n+\tduplicate -maltivec.  Apply PR63177 fix for -mcpu=powerpc64le.\n+\n 2018-11-26  David Malcolm  <dmalcolm@redhat.com>\n \n \t* dump-context.h (dump_context::dump_loc): Convert 1st param from"}, {"sha": "2398ed64baa4a281193132423f152261af930ca7", "filename": "gcc/config/rs6000/aix71.h", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2Fconfig%2Frs6000%2Faix71.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2Fconfig%2Frs6000%2Faix71.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix71.h?ref=28a095763f48725900eb86f7b4ee1b17c2e7afff", "patch": "@@ -59,39 +59,37 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-u %{maix64:-a64 %{!mcpu*:-mppc64}} %(asm_cpu)\"\n+#define ASM_SPEC \"-u %{maix64:-a64} %(asm_cpu)\"\n \n /* Common ASM definitions used by ASM_SPEC amongst the various targets for\n    handling -mcpu=xxx switches.  There is a parallel list in driver-rs6000.c to\n    provide the default assembler options if the user uses -mcpu=native, so if\n    you make changes here, make them there also.  */\n #undef ASM_CPU_SPEC\n #define ASM_CPU_SPEC \\\n-\"%{!mcpu*: %{!maix64: \\\n-  %{mpowerpc64: -mppc64} \\\n-  %{maltivec: -m970} \\\n-  %{!maltivec: %{!mpowerpc64: %(asm_default)}}}} \\\n-%{mcpu=native: %(asm_cpu_native)} \\\n-%{mcpu=power3: -m620} \\\n-%{mcpu=power4: -mpwr4} \\\n-%{mcpu=power5: -mpwr5} \\\n-%{mcpu=power5+: -mpwr5x} \\\n-%{mcpu=power6: -mpwr6} \\\n-%{mcpu=power6x: -mpwr6} \\\n-%{mcpu=power7: -mpwr7} \\\n-%{mcpu=power8: -mpwr8} \\\n-%{mcpu=power9: -mpwr9} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=rs64a: -mppc} \\\n-%{mcpu=603: -m603} \\\n-%{mcpu=603e: -m603} \\\n-%{mcpu=604: -m604} \\\n-%{mcpu=604e: -m604} \\\n-%{mcpu=620: -m620} \\\n-%{mcpu=630: -m620} \\\n-%{mcpu=970: -m970} \\\n-%{mcpu=G5: -m970} \\\n-%{mvsx: %{!mcpu*: -mpwr6}} \\\n+\"%{mcpu=native: %(asm_cpu_native); \\\n+  mcpu=power9: -mpwr9; \\\n+  mcpu=power8: -mpwr8; \\\n+  mcpu=power7: -mpwr7; \\\n+  mcpu=power6x|mcpu=power6: -mpwr6; \\\n+  mcpu=power5+: -mpwr5x; \\\n+  mcpu=power5: -mpwr5; \\\n+  mcpu=power4: -mpwr4; \\\n+  mcpu=power3: -m620; \\\n+  mcpu=powerpc: -mppc; \\\n+  mcpu=rs64a: -mppc; \\\n+  mcpu=603: -m603; \\\n+  mcpu=603e: -m603; \\\n+  mcpu=604: -m604; \\\n+  mcpu=604e: -m604; \\\n+  mcpu=620: -m620; \\\n+  mcpu=630: -m620; \\\n+  mcpu=970|mcpu=G5: -m970; \\\n+  !mcpu*: %{mvsx: -mpwr6; \\\n+\t    maltivec: -m970; \\\n+\t    maix64|mpowerpc64: -mppc64; \\\n+\t    : %(asm_default)}; \\\n+  :%eMissing -mcpu option in ASM_SPEC_CPU?\\n} \\\n -many\"\n \n #undef\tASM_DEFAULT_SPEC"}, {"sha": "0a48d46d658d2431b39f4d47ea5b727c3a3e1ccd", "filename": "gcc/config/rs6000/driver-rs6000.c", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c?ref=28a095763f48725900eb86f7b4ee1b17c2e7afff", "patch": "@@ -459,23 +459,25 @@ static const struct asm_name asm_names[] = {\n   { \"970\",\t\"-m970\" },\n   { \"G5\",\t\"-m970\" },\n   { NULL,\t\"\\\n-%{!maix64: \\\n-%{mpowerpc64: -mppc64} \\\n-%{maltivec: -m970} \\\n-%{!maltivec: %{!mpowerpc64: %(asm_default)}}}\" },\n+  %{mvsx: -mpwr6; \\\n+    maltivec: -m970; \\\n+    maix64|mpowerpc64: -mppc64; \\\n+    : %(asm_default)}\" },\n \n #else\n   { \"cell\",\t\"-mcell\" },\n   { \"power3\",\t\"-mppc64\" },\n   { \"power4\",\t\"-mpower4\" },\n   { \"power5\",\t\"-mpower5\" },\n   { \"power5+\",\t\"-mpower5\" },\n-  { \"power6\",\t\"-mpower6 -maltivec\" },\n-  { \"power6x\",\t\"-mpower6 -maltivec\" },\n+  { \"power6\",\t\"-mpower6 %{!mvsx:%{!maltivec:-maltivec}}\" },\n+  { \"power6x\",\t\"-mpower6 %{!mvsx:%{!maltivec:-maltivec}}\" },\n   { \"power7\",\t\"-mpower7\" },\n-  { \"power8\",\t\"-mpower8\" },\n+  { \"power8\",\t\"%{mpower9-vector:-mpower9;:-mpower8}\" },\n   { \"power9\",\t\"-mpower9\" },\n+  { \"a2\",\t\"-ma2\" },\n   { \"powerpc\",\t\"-mppc\" },\n+  { \"powerpc64le\", \"%{mpower9-vector:-mpower9;:-mpower8}\" },\n   { \"rs64a\",\t\"-mppc64\" },\n   { \"401\",\t\"-mppc\" },\n   { \"403\",\t\"-m403\" },\n@@ -485,6 +487,8 @@ static const struct asm_name asm_names[] = {\n   { \"440fp\",\t\"-m440\" },\n   { \"464\",\t\"-m440\" },\n   { \"464fp\",\t\"-m440\" },\n+  { \"476\",\t\"-m476\" },\n+  { \"476fp\",\t\"-m476\" },\n   { \"505\",\t\"-mppc\" },\n   { \"601\",\t\"-m601\" },\n   { \"602\",\t\"-mppc\" },\n@@ -498,23 +502,29 @@ static const struct asm_name asm_names[] = {\n   { \"740\",\t\"-mppc\" },\n   { \"750\",\t\"-mppc\" },\n   { \"G3\",\t\"-mppc\" },\n-  { \"7400\",\t\"-mppc -maltivec\" },\n-  { \"7450\",\t\"-mppc -maltivec\" },\n-  { \"G4\",\t\"-mppc -maltivec\" },\n+  { \"7400\",\t\"-mppc %{!mvsx:%{!maltivec:-maltivec}}\" },\n+  { \"7450\",\t\"-mppc %{!mvsx:%{!maltivec:-maltivec}}\" },\n+  { \"G4\",\t\"-mppc %{!mvsx:%{!maltivec:-maltivec}}\" },\n   { \"801\",\t\"-mppc\" },\n   { \"821\",\t\"-mppc\" },\n   { \"823\",\t\"-mppc\" },\n   { \"860\",\t\"-mppc\" },\n-  { \"970\",\t\"-mpower4 -maltivec\" },\n-  { \"G5\",\t\"-mpower4 -maltivec\" },\n+  { \"970\",\t\"-mpower4 %{!mvsx:%{!maltivec:-maltivec}}\" },\n+  { \"G5\",\t\"-mpower4 %{!mvsx:%{!maltivec:-maltivec}}\" },\n   { \"8540\",\t\"-me500\" },\n   { \"8548\",\t\"-me500\" },\n   { \"e300c2\",\t\"-me300\" },\n   { \"e300c3\",\t\"-me300\" },\n   { \"e500mc\",\t\"-me500mc\" },\n+  { \"e500mc64\",\t\"-me500mc64\" },\n+  { \"e5500\",\t\"-me5500\" },\n+  { \"e6500\",\t\"-me6500\" },\n   { NULL,\t\"\\\n-%{mpowerpc64*: -mppc64} \\\n-%{!mpowerpc64*: %(asm_default)}\" },\n+%{mpower9-vector: -mpower9; \\\n+  mpower8-vector|mcrypto|mdirect-move|mhtm: -mpower8; \\\n+  mvsx: -mpower7; \\\n+  mpowerpc64: -mppc64; \\\n+  : %(asm_default)}\" },\n #endif\n };\n "}, {"sha": "e62664fe2fbfcb2e6254b6e87717bfb48e004918", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 60, "deletions": 62, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28a095763f48725900eb86f7b4ee1b17c2e7afff/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=28a095763f48725900eb86f7b4ee1b17c2e7afff", "patch": "@@ -76,68 +76,66 @@\n    you make changes here, make them also there.  PR63177: Do not pass -mpower8\n    to the assembler if -mpower9-vector was also used.  */\n #define ASM_CPU_SPEC \\\n-\"%{!mcpu*: \\\n-  %{mpowerpc64*: -mppc64} \\\n-  %{!mpowerpc64*: %(asm_default)}} \\\n-%{mcpu=native: %(asm_cpu_native)} \\\n-%{mcpu=cell: -mcell} \\\n-%{mcpu=power3: -mppc64} \\\n-%{mcpu=power4: -mpower4} \\\n-%{mcpu=power5: -mpower5} \\\n-%{mcpu=power5+: -mpower5} \\\n-%{mcpu=power6: -mpower6 -maltivec} \\\n-%{mcpu=power6x: -mpower6 -maltivec} \\\n-%{mcpu=power7: -mpower7} \\\n-%{mcpu=power8: %{!mpower9-vector: -mpower8}} \\\n-%{mcpu=power9: -mpower9} \\\n-%{mcpu=a2: -ma2} \\\n-%{mcpu=powerpc: -mppc} \\\n-%{mcpu=powerpc64le: -mpower8} \\\n-%{mcpu=rs64a: -mppc64} \\\n-%{mcpu=401: -mppc} \\\n-%{mcpu=403: -m403} \\\n-%{mcpu=405: -m405} \\\n-%{mcpu=405fp: -m405} \\\n-%{mcpu=440: -m440} \\\n-%{mcpu=440fp: -m440} \\\n-%{mcpu=464: -m440} \\\n-%{mcpu=464fp: -m440} \\\n-%{mcpu=476: -m476} \\\n-%{mcpu=476fp: -m476} \\\n-%{mcpu=505: -mppc} \\\n-%{mcpu=601: -m601} \\\n-%{mcpu=602: -mppc} \\\n-%{mcpu=603: -mppc} \\\n-%{mcpu=603e: -mppc} \\\n-%{mcpu=ec603e: -mppc} \\\n-%{mcpu=604: -mppc} \\\n-%{mcpu=604e: -mppc} \\\n-%{mcpu=620: -mppc64} \\\n-%{mcpu=630: -mppc64} \\\n-%{mcpu=740: -mppc} \\\n-%{mcpu=750: -mppc} \\\n-%{mcpu=G3: -mppc} \\\n-%{mcpu=7400: -mppc -maltivec} \\\n-%{mcpu=7450: -mppc -maltivec} \\\n-%{mcpu=G4: -mppc -maltivec} \\\n-%{mcpu=801: -mppc} \\\n-%{mcpu=821: -mppc} \\\n-%{mcpu=823: -mppc} \\\n-%{mcpu=860: -mppc} \\\n-%{mcpu=970: -mpower4 -maltivec} \\\n-%{mcpu=G5: -mpower4 -maltivec} \\\n-%{mcpu=8540: -me500} \\\n-%{mcpu=8548: -me500} \\\n-%{mcpu=e300c2: -me300} \\\n-%{mcpu=e300c3: -me300} \\\n-%{mcpu=e500mc: -me500mc} \\\n-%{mcpu=e500mc64: -me500mc64} \\\n-%{mcpu=e5500: -me5500} \\\n-%{mcpu=e6500: -me6500} \\\n-%{maltivec: -maltivec} \\\n-%{mvsx: -mvsx %{!maltivec: -maltivec} %{!mcpu*: -mpower7}} \\\n-%{mpower8-vector|mcrypto|mdirect-move|mhtm: %{!mcpu*: -mpower8}} \\\n-%{mpower9-vector: %{!mcpu*|mcpu=power8: -mpower9}} \\\n+\"%{mcpu=native: %(asm_cpu_native); \\\n+  mcpu=power9: -mpower9; \\\n+  mcpu=power8|mcpu=powerpc64le: %{mpower9-vector: -mpower9;: -mpower8}; \\\n+  mcpu=power7: -mpower7; \\\n+  mcpu=power6x: -mpower6 %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=power6: -mpower6 %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=power5+: -mpower5; \\\n+  mcpu=power5: -mpower5; \\\n+  mcpu=power4: -mpower4; \\\n+  mcpu=power3: -mppc64; \\\n+  mcpu=powerpc: -mppc; \\\n+  mcpu=a2: -ma2; \\\n+  mcpu=cell: -mcell; \\\n+  mcpu=rs64a: -mppc64; \\\n+  mcpu=401: -mppc; \\\n+  mcpu=403: -m403; \\\n+  mcpu=405: -m405; \\\n+  mcpu=405fp: -m405; \\\n+  mcpu=440: -m440; \\\n+  mcpu=440fp: -m440; \\\n+  mcpu=464: -m440; \\\n+  mcpu=464fp: -m440; \\\n+  mcpu=476: -m476; \\\n+  mcpu=476fp: -m476; \\\n+  mcpu=505: -mppc; \\\n+  mcpu=601: -m601; \\\n+  mcpu=602: -mppc; \\\n+  mcpu=603: -mppc; \\\n+  mcpu=603e: -mppc; \\\n+  mcpu=ec603e: -mppc; \\\n+  mcpu=604: -mppc; \\\n+  mcpu=604e: -mppc; \\\n+  mcpu=620: -mppc64; \\\n+  mcpu=630: -mppc64; \\\n+  mcpu=740: -mppc; \\\n+  mcpu=750: -mppc; \\\n+  mcpu=G3: -mppc; \\\n+  mcpu=7400: -mppc %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=7450: -mppc %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=G4: -mppc %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=801: -mppc; \\\n+  mcpu=821: -mppc; \\\n+  mcpu=823: -mppc; \\\n+  mcpu=860: -mppc; \\\n+  mcpu=970: -mpower4 %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=G5: -mpower4 %{!mvsx:%{!maltivec:-maltivec}}; \\\n+  mcpu=8540: -me500; \\\n+  mcpu=8548: -me500; \\\n+  mcpu=e300c2: -me300; \\\n+  mcpu=e300c3: -me300; \\\n+  mcpu=e500mc: -me500mc; \\\n+  mcpu=e500mc64: -me500mc64; \\\n+  mcpu=e5500: -me5500; \\\n+  mcpu=e6500: -me6500; \\\n+  !mcpu*: %{mpower9-vector: -mpower9; \\\n+\t    mpower8-vector|mcrypto|mdirect-move|mhtm: -mpower8; \\\n+\t    mvsx: -mpower7; \\\n+\t    mpowerpc64: -mppc64;: %(asm_default)}; \\\n+  :%eMissing -mcpu option in ASM_SPEC_CPU?\\n} \\\n+%{mvsx: -mvsx -maltivec; maltivec: -maltivec} \\\n -many\"\n \n #define CPP_DEFAULT_SPEC \"\""}]}