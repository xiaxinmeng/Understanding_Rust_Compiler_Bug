{"sha": "67f63f32d59b22241faa6f3390757ce9535f8898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmNjNmMzJkNTliMjIyNDFmYWE2ZjMzOTA3NTdjZTk1MzVmODg5OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-17T19:03:12Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-17T19:03:12Z"}, "message": "ChangeLog.3: Fix comment typos.\n\n\t* ChangeLog.3: Fix comment typos.\n\t* ChangeLog.6: Likewise.\n\t* config/d30v/d30v.c: Likewise.\n\t* config/h8300/h8300.md: Likewise.\n\t* config/m32r/m32r.md: Likewise.\n\t* config/mips/mips.c: Likewise.\n\t* config/mips/mips.md: Likewise.\n\t* config/ns32k/NOTES: Likewise.\n\nFrom-SVN: r68104", "tree": {"sha": "5bd476260d08ca0498e8f54c872e5c713ceed268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bd476260d08ca0498e8f54c872e5c713ceed268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f63f32d59b22241faa6f3390757ce9535f8898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f63f32d59b22241faa6f3390757ce9535f8898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f63f32d59b22241faa6f3390757ce9535f8898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f63f32d59b22241faa6f3390757ce9535f8898/comments", "author": null, "committer": null, "parents": [{"sha": "0d5c606b64f7ff6e7f1cd44fd4b11b24fca72ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5c606b64f7ff6e7f1cd44fd4b11b24fca72ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d5c606b64f7ff6e7f1cd44fd4b11b24fca72ae1"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "8c9e0b90e91be4f73d8bff96e12b934c4355e626", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -1,3 +1,14 @@\n+2003-06-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* ChangeLog.3: Fix comment typos.\n+\t* ChangeLog.6: Likewise.\n+\t* config/d30v/d30v.c: Likewise.\n+\t* config/h8300/h8300.md: Likewise.\n+\t* config/m32r/m32r.md: Likewise.\n+\t* config/mips/mips.c: Likewise.\n+\t* config/mips/mips.md: Likewise.\n+\t* config/ns32k/NOTES: Likewise.\n+\n 2003-06-17  Ranjit Mathew  <rmathew@hotmail.com>\n             Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \t"}, {"sha": "52df96025fbf25b48b5b4296045d61fd6199a889", "filename": "gcc/ChangeLog.3", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2FChangeLog.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2FChangeLog.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.3?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -14863,9 +14863,9 @@ Mon Jan 24 16:56:10 2000  Jim Wilson  <wilson@cygnus.com>\n \n 2000-01-24  Richard Henderson  <rth@cygnus.com>\n \n-\t* rtl.def: Add unordered fp comparisions.\n+\t* rtl.def: Add unordered fp comparisons.\n \t* tree.def: Likewise.\n-\t* tree.h: Add ISO C 9x unordered fp comparision builtins.\n+\t* tree.h: Add ISO C 9x unordered fp comparison builtins.\n \n \t* builtins.c (expand_tree_builtin): New function.\n \t* c-typeck.c (build_function_call): Use it."}, {"sha": "a6f412aa3c85f08a33225ceb2a0e2d42b7f0ccf8", "filename": "gcc/ChangeLog.6", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2FChangeLog.6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2FChangeLog.6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.6?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -10043,7 +10043,7 @@ Tue Sep 25 17:13:56 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t* config/i386/i386.c (ix86_init_builtins): Correct return type\n \tbuilding v4hi_ftype_v4hi_int_int tree node.\n \t(ix86_expand_sse_comi): Fix typo swapping operands.\n-\tDon't swap comparision condition, it is already swapped.\n+\tDon't swap comparison condition, it is already swapped.\n \t(ix86_expand_sse_compare): Before swapping operands\n \tmove operand 1 into new rtx and not the target rtx.\n \tDon't swap comparison condition, it is already swapped."}, {"sha": "4093ab27abf75751e79de3825a80f03981519a8a", "filename": "gcc/config/d30v/d30v.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fd30v%2Fd30v.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fd30v%2Fd30v.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.c?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -2891,8 +2891,8 @@ d30v_print_operand (stream, x, letter)\n       letter = 'T';\n       /* FALLTHRU */\n \n-    case 'F':\t/* Print an appropriate suffix for a false comparision.  */\n-    case 'T':\t/* Print an appropriate suffix for a true  comparision.  */\n+    case 'F':\t/* Print an appropriate suffix for a false comparison.  */\n+    case 'T':\t/* Print an appropriate suffix for a true  comparison.  */\n       /* Note that the sense of appropriate suffix is for conditional execution\n \t and opposite of what branches want.  Branches just use the inverse\n \t operation.  */"}, {"sha": "6897668d64ff8f73658f99da8b14d0eeece38944", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -4180,7 +4180,7 @@\n \t\t      (pc)))]\n   \"operands[4] = GEN_INT (- INTVAL (operands[1]));\")\n \n-;; For certain (in)equaltity comparisions against a constant, we can\n+;; For certain (in)equaltity comparisons against a constant, we can\n ;; XOR the register with the constant, and test the register against\n ;; 0.\n "}, {"sha": "1dff60e5beeec4f525f34cf0e215cd7ec3932702", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -2477,7 +2477,7 @@\n   if (! zero_and_one (operands [2], operands [3]))\n     FAIL;\n \n-  /* Generate the comparision that will set the carry flag.  */\n+  /* Generate the comparison that will set the carry flag.  */\n   operands[1] = gen_compare (GET_CODE (operands[1]), m32r_compare_op0,\n \t\t\t     m32r_compare_op1, TRUE);\n "}, {"sha": "714f637d6201a9c590890078094e7312a2d2dd75", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -9622,7 +9622,7 @@ mips_output_conditional_branch (insn,\n   /* The kind of comparison we are doing.  */\n   enum rtx_code code = GET_CODE (operands[0]);\n   /* Nonzero if the opcode for the comparison needs a `z' indicating\n-     that it is a comparision against zero.  */\n+     that it is a comparison against zero.  */\n   int need_z_p;\n   /* A string to use in the assembly output to represent the first\n      operand.  */\n@@ -9860,7 +9860,7 @@ mips_output_conditional_branch (insn,\n \n \tstrcpy (buffer, \"%(%<%[\");\n \tc = strchr (buffer, '\\0');\n-\t/* Generate the reversed comparision.  This takes four\n+\t/* Generate the reversed comparison.  This takes four\n \t   bytes.  */\n \tif (float_p)\n \t  sprintf (c, \"%%*b%s\\t%%Z2%s\","}, {"sha": "b26960a9a0f7b7a57bfca66d419a689133d365d8", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -6886,7 +6886,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set_attr \"type\"\t\"branch\")\n    (set_attr \"mode\"\t\"none\")])\n \n-;; Conditional branch on equality comparision.\n+;; Conditional branch on equality comparison.\n \n (define_insn \"branch_equality\"\n   [(set (pc)"}, {"sha": "6c5ff9bce7a5cf3113362e279a62144fa94e264e", "filename": "gcc/config/ns32k/NOTES", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fns32k%2FNOTES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f63f32d59b22241faa6f3390757ce9535f8898/gcc%2Fconfig%2Fns32k%2FNOTES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2FNOTES?ref=67f63f32d59b22241faa6f3390757ce9535f8898", "patch": "@@ -12,7 +12,7 @@ Ian Dall <ian@beware.dropbear.id.au>\n The ns32x81 fpu handles most operands in hardware, but traps on NaN,\n Inf and Denormalized numbers. The correct behavior can be handled by\n the trap handler. This is mostly transparent to the compiler, but in\n-the case of floating point comparisions, the trap handler and the\n+the case of floating point comparisons, the trap handler and the\n compiler must co-operate.\n \n Comparing a Nan with anything (including another Nan) is an unordered\n@@ -90,7 +90,7 @@ For example the emitted code for the case of RLT is\n \n which is, in effect \"branch if not less than and not unordered.\"\n \n-These extra comparisions are safe if the trap handler doesn't set the\n+These extra comparisons are safe if the trap handler doesn't set the\n L flag, since in that case the additional \"bhi\" instructions are never\n taken. Also, these extra branch instructions are controlled by the\n \"-mieee-compare\" option."}]}