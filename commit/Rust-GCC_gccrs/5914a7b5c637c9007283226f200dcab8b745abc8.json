{"sha": "5914a7b5c637c9007283226f200dcab8b745abc8", "node_id": "C_kwDOANBUbNoAKDU5MTRhN2I1YzYzN2M5MDA3MjgzMjI2ZjIwMGRjYWI4Yjc0NWFiYzg", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-11-04T13:43:36Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-11-04T13:43:36Z"}, "message": "testsuite: Add more guards to complex tests\n\nThis test hopefully fixes all the remaining target specific test issues by\n\n1: Unrolling all add testcases by 16 using pragma GCC unroll\n2. On armhf use Adv.SIMD instead of MVE to test. MVE's autovec is too incomplete\n   to be a general test target.\n3. Add appropriate vect_<type> and float<size> guards on testcases.\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/103042\n\t* gcc.dg/vect/complex/bb-slp-complex-add-pattern-int.c: Update guards.\n\t* gcc.dg/vect/complex/bb-slp-complex-add-pattern-long.c: Likewise.\n\t* gcc.dg/vect/complex/bb-slp-complex-add-pattern-short.c: Likewise.\n\t* gcc.dg/vect/complex/bb-slp-complex-add-pattern-unsigned-int.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/bb-slp-complex-add-pattern-unsigned-long.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/bb-slp-complex-add-pattern-unsigned-short.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/complex-add-pattern-template.c: Likewise.\n\t* gcc.dg/vect/complex/complex-add-template.c: Likewise.\n\t* gcc.dg/vect/complex/complex-operations-run.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-half-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-double.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-half-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mla-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mla-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mla-half-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mls-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mls-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mls-half-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mul-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mul-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-mul-half-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-complex-add-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-add-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-add-half-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-add-pattern-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-add-pattern-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-add-pattern-half-float.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mla-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mla-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mla-half-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mls-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mls-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mls-half-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mul-double.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mul-float.c: Likewise.\n\t* gcc.dg/vect/complex/fast-math-complex-mul-half-float.c: Likewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-byte.c: Likewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-int.c: Likewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-long.c: Likewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-short.c: Likewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-byte.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-int.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-long.c:\n\tLikewise.\n\t* gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-short.c:\n\tLikewise.", "tree": {"sha": "e2939f4eee2dce0cea50c6bc20520d05e98e1f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2939f4eee2dce0cea50c6bc20520d05e98e1f79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5914a7b5c637c9007283226f200dcab8b745abc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5914a7b5c637c9007283226f200dcab8b745abc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5914a7b5c637c9007283226f200dcab8b745abc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5914a7b5c637c9007283226f200dcab8b745abc8/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "347682ea4637c57c386908d6e1aa52e4efaace53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347682ea4637c57c386908d6e1aa52e4efaace53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/347682ea4637c57c386908d6e1aa52e4efaace53"}], "stats": {"total": 179, "additions": 123, "deletions": 56}, "files": [{"sha": "cead05f1cc4e02790630a6cbfe8378c2de3778f3", "filename": "gcc/testsuite/gcc.dg/vect/complex/bb-slp-complex-add-pattern-int.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-int.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n \n #define TYPE int32_t\n@@ -9,6 +10,6 @@\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_byte } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_int && !arch64_sve2 } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_int } && ! target { aarch64_sve2 } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}, {"sha": "6ed561a00416b5aef2e514820ab94489df7aa86b", "filename": "gcc/testsuite/gcc.dg/vect/complex/bb-slp-complex-add-pattern-long.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-long.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-long.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-long.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,15 +1,18 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_long } */\n+/* { dg-require-effective-target vect_long } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE int64_t\n #define N 16\n #include <stdint.h>\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_long } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_long && !arch64_sve2 } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_long } && ! target { aarch64_sve2 } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}, {"sha": "8928386a5174154719fbc86c6f11d5f886cf1f4a", "filename": "gcc/testsuite/gcc.dg/vect/complex/bb-slp-complex-add-pattern-short.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-short.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,14 +1,17 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE int16_t\n #define N 16\n #include <stdint.h>\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_short } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_short && !arch64_sve2 } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_short } && ! target { aarch64_sve2 } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}, {"sha": "4ab4b9a446a8f13c052a569aa694016b22bb2b3b", "filename": "gcc/testsuite/gcc.dg/vect/complex/bb-slp-complex-add-pattern-unsigned-int.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-int.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,14 +1,17 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE uint32_t\n #define N 16\n #include <stdint.h>\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_int } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_int && !arch64_sve2 } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_int } && ! target { aarch64_sve2 } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}, {"sha": "4976bf5e50d493f0ec733d783dd4b4b7902d05ed", "filename": "gcc/testsuite/gcc.dg/vect/complex/bb-slp-complex-add-pattern-unsigned-long.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-long.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-long.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-long.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,14 +1,17 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n+/* { dg-require-effective-target vect_long } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE uint64_t\n #define N 16\n #include <stdint.h>\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_long } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_long && !arch64_sve2 } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_long } && ! target { aarch64_sve2 } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}, {"sha": "8846c9889fb64cdba614553e70052901039f1752", "filename": "gcc/testsuite/gcc.dg/vect/complex/bb-slp-complex-add-pattern-unsigned-short.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fbb-slp-complex-add-pattern-unsigned-short.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,14 +1,17 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE uint16_t\n #define N 16\n #include <stdint.h>\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_short } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_short && !arch64_sve2 } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_short } && ! target { aarch64_sve2 } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}, {"sha": "658af294f1c81ab28fb961202e165ea8813dff88", "filename": "gcc/testsuite/gcc.dg/vect/complex/complex-add-pattern-template.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-add-pattern-template.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-add-pattern-template.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-add-pattern-template.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,5 +1,8 @@\n void add90 (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i+=2)\n     {\n       c[i] = a[i] - b[i+1];\n@@ -11,6 +14,9 @@ void add90 (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N])\n \n void add270 (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i+=2)\n     {\n       c[i] = a[i] + b[i+1];\n@@ -22,6 +28,9 @@ void add270 (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N])\n \n void addMixed (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i+=4)\n     {\n       c[i] = a[i] - b[i+1];\n@@ -34,6 +43,9 @@ void addMixed (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N])\n void add90HandUnrolled (TYPE a[restrict N], TYPE b[restrict N],\n \t\t\tTYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < (N /2); i+=4)\n     {\n       c[i] = a[i] - b[i+1];\n@@ -48,6 +60,9 @@ void add90HandUnrolled (TYPE a[restrict N], TYPE b[restrict N],\n void add90Hybrid (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N],\n \t\t  TYPE d[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i+=2)\n     {\n       c[i] = a[i] - b[i+1];\n@@ -57,4 +72,4 @@ void add90Hybrid (TYPE a[restrict N], TYPE b[restrict N], TYPE c[restrict N],\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 2 \"vect\" } } */\n\\ No newline at end of file\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 2 \"vect\" } } */"}, {"sha": "f37ab98813faebfbde96fedf647099468609bfd4", "filename": "gcc/testsuite/gcc.dg/vect/complex/complex-add-template.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-add-template.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-add-template.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-add-template.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -3,13 +3,19 @@\n void add0 (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t   _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = a[i] + b[i];\n }\n \n void add90snd (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t       _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = a[i] + (b[i] * I);\n }\n@@ -19,13 +25,19 @@ void add90snd (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n void add180snd (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t        _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = a[i] + (b[i] * I * I);\n }\n \n void add270snd (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t        _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = a[i] + (b[i] * I * I * I);\n }\n@@ -35,6 +47,9 @@ void add270snd (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n void add90fst (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t       _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = (a[i] * I) + b[i];\n }\n@@ -44,13 +59,19 @@ void add90fst (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n void add180fst (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t        _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = (a[i] * I * I) + b[i];\n }\n \n void add270fst (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t        _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = (a[i] * I * I * I) + b[i];\n }\n@@ -60,20 +81,29 @@ void add270fst (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n void addconjfst (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t\t _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = ~a[i] + b[i];\n }\n \n void addconjsnd (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t\t _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = a[i] + ~b[i];\n }\n \n void addconjboth (_Complex TYPE a[restrict N], _Complex TYPE b[restrict N],\n \t\t  _Complex TYPE c[restrict N])\n {\n+#if defined (UNROLL)\n+#pragma GCC unroll 16\n+#endif\n   for (int i=0; i < N; i++)\n     c[i] = ~a[i] + ~b[i];\n }"}, {"sha": "14ac512a8efa4d9af8cd274d995a8e642ac9f10f", "filename": "gcc/testsuite/gcc.dg/vect/complex/complex-operations-run.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-operations-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-operations-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fcomplex-operations-run.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target vect_complex_add_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #include <stdio.h>\n #include <complex.h>"}, {"sha": "2e611b77c7631b305d79fe21c4b95c8593dcc369", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-double.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,9 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+\n+#define UNROLL\n \n #define TYPE double\n #define N 16"}, {"sha": "1e63a5f2c5e1a478ae9ea1f49c6eb21665cfca8c", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-float.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,9 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+\n+#define UNROLL\n \n #define TYPE float\n #define N 16"}, {"sha": "0ae49c16438c503ad59010a9b170e54764419c36", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-half-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_half } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 16"}, {"sha": "3f5619b78ce55c83df07f22dfe58fbb6f56e66ac", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-double.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,10 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_double } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE double\n #define N 16"}, {"sha": "a961a852775f29ade98d61100358cc36c394f3de", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-float.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,9 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+\n+#define UNROLL\n \n #define TYPE float\n #define N 16"}, {"sha": "885fd97c5d23eb5a53f358bb5d64625805704966", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-half-float.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,10 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_half } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+\n+#define UNROLL\n \n #define TYPE _Float16\n #define N 16"}, {"sha": "462063abc3041d466e8b0261252054a46ef48e15", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mla-double.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 16"}, {"sha": "a88adc8184ece3d6d61c66a42233fde0f1721a78", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mla-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -2,7 +2,6 @@\n /* { dg-require-effective-target vect_complex_add_float } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 16"}, {"sha": "510092028d5697b4f48ed4e3d60d586988671d02", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mla-half-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mla-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_half } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 16"}, {"sha": "a434fd1f1d3235392a0240b5861c85d39c48d551", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mls-double.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 16"}, {"sha": "b7ccbbdb75743182022465243efcb128ef97fd0c", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mls-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -2,7 +2,6 @@\n /* { dg-require-effective-target vect_complex_add_float } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 16"}, {"sha": "217401bae59e658c1f920c4619f0858c95cc3322", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mls-half-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mls-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_half } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 16"}, {"sha": "f7e9386334e1b259d43d35f4bc6b79010d020e6a", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mul-double.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 16"}, {"sha": "0dc9c52555640c34f794e0f57c04f3ea0510fdc9", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mul-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -2,7 +2,6 @@\n /* { dg-require-effective-target vect_complex_add_float } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 16"}, {"sha": "309b168dfb0813aea39e144813325e4e0910c77c", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-mul-half-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-mul-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_half } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 16"}, {"sha": "f935405e3d942cc68e49b2b21ca543e23076e0c9", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-add-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 200"}, {"sha": "71f391db7bba8ac7c4ce090f650c32d9180ee4f9", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-add-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 200"}, {"sha": "e5b826f1ca77d262c7d0a39b6b8446255a9dea36", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-add-half-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 200"}, {"sha": "5b70d834c2435c316bdbf119a1e2ace15f68b8e7", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-add-pattern-double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 200"}, {"sha": "3ef05645a2c95ab2269276bd23f2db2afd016c1a", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-add-pattern-float.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 200"}, {"sha": "06a9216add747ab2880f92828483333dabb30496", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-add-pattern-half-float.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-add-pattern-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+/* { dg-require-effective-target float16 } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 200"}, {"sha": "3ec46e5cf6694e0ccf23d6e7db094a9df996afbd", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mla-double.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 200"}, {"sha": "af59323023a6a15340ded60155f130671d840f68", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mla-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target vect_complex_add_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 200"}, {"sha": "34146f3d1e7f123231c7f39ccfa1aba832ee87ca", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mla-half-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mla-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 200"}, {"sha": "0982a2b8ead9bec96f6dcbceaeac9c2ebcbda300", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mls-double.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 200"}, {"sha": "a069533b22a64f62bd8dd6b6bdd3b771c7b7ea4d", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mls-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 200"}, {"sha": "89ac54c2a42a114a1afb6dead0504b04c37c3f98", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mls-half-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mls-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 200"}, {"sha": "56a8ea4ae0232cb3051a780157902fdb03a9e942", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mul-double.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-double.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double\n #define N 200"}, {"sha": "969416d7dc7779ee6feaa8e069a1a3687dd53559", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mul-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float\n #define N 200"}, {"sha": "da1b9213a6b3e1df4fdc4ecf6ffbf3645975a5ba", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-complex-mul-half-float.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-complex-mul-half-float.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 200"}, {"sha": "bf7c135fa1a8ccf7cf23c783e8572c8d12f245bd", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-byte.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #define TYPE int8_t\n #define N 200"}, {"sha": "2fd2a9f0617ab1d741826970d0db6ed9a8f393ec", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-int.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-int.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #define TYPE int32_t\n #define N 200"}, {"sha": "11a6f53ccebe685058fd486be06b9f3574531f86", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-long.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-long.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-long.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-long.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_long } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE int64_t\n #define N 200"}, {"sha": "8cbb8ac0c19061e7fe4d2978bccc24df0990d540", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-short.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-short.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #define TYPE int16_t\n #define N 200"}, {"sha": "9477f0d92d8f8f761d84916677ecce9f2a5c6fee", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-byte.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-byte.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-byte.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-byte.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #define TYPE uint8_t\n #define N 200"}, {"sha": "41f60042ee9a32c26831d1d415f6a2b4a1b20777", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-int.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-int.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #define TYPE uint32_t\n #define N 200"}, {"sha": "796dabdb9ba9fbb2b9f1242e0f8e0efe52614f8b", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-long.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-long.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-long.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-long.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_long } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n+\n+#define UNROLL\n \n #define TYPE uint64_t\n #define N 200"}, {"sha": "6260be4d12161b9d25d5fecd9fd13b1ba0c76dbd", "filename": "gcc/testsuite/gcc.dg/vect/complex/vect-complex-add-pattern-unsigned-short.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5914a7b5c637c9007283226f200dcab8b745abc8/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Fvect-complex-add-pattern-unsigned-short.c?ref=5914a7b5c637c9007283226f200dcab8b745abc8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target stdint_types } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-add-options arm_v8_3a_complex_neon } */\n \n #define TYPE uint16_t\n #define N 200"}]}