{"sha": "e54375d85d4aa5889869c2672158083b2106b623", "node_id": "C_kwDOANBUbNoAKGU1NDM3NWQ4NWQ0YWE1ODg5ODY5YzI2NzIxNTgwODNiMjEwNmI2MjM", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-12-12T07:43:58Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-12-26T01:11:44Z"}, "message": "x86: Add a new option -mdaz-ftz to enable FTZ and DAZ flags in MXCSR.\n\nif (mdaz-ftz)\n  link crtfastmath.o\nelse if ((Ofast || ffast-math || funsafe-math-optimizations)\n     \t && !shared && !mno-daz-ftz)\n  link crtfastmath.o\nelse\n  Don't link crtfastmath.o\n\ngcc/ChangeLog:\n\n\tPR target/55522\n\tPR target/36821\n\t* config/i386/gnu-user-common.h (GNU_USER_TARGET_MATHFILE_SPEC):\n\tLink crtfastmath.o whenever -mdaz-ftz is specified. Don't link\n\tcrtfastmath.o when -share or -mno-daz-ftz is specified.\n\t* config/i386/i386.opt (mdaz-ftz): New option.\n\t* doc/invoke.texi (x86 options): Document mftz-daz.", "tree": {"sha": "5570081bb54818c753f2f39d2fd1c5ebc230c8be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5570081bb54818c753f2f39d2fd1c5ebc230c8be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e54375d85d4aa5889869c2672158083b2106b623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54375d85d4aa5889869c2672158083b2106b623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54375d85d4aa5889869c2672158083b2106b623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54375d85d4aa5889869c2672158083b2106b623/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc38aee755ddd50496f9a1d517a9cdd86301967d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc38aee755ddd50496f9a1d517a9cdd86301967d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc38aee755ddd50496f9a1d517a9cdd86301967d"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "f910524a6c39b379ce072c4419dec35a04660862", "filename": "gcc/config/i386/gnu-user-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54375d85d4aa5889869c2672158083b2106b623/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54375d85d4aa5889869c2672158083b2106b623/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h?ref=e54375d85d4aa5889869c2672158083b2106b623", "patch": "@@ -47,7 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Similar to standard GNU userspace, but adding -ffast-math support.  */\n #define GNU_USER_TARGET_MATHFILE_SPEC \\\n-  \"%{Ofast|ffast-math|funsafe-math-optimizations:%{!shared:crtfastmath.o%s}} \\\n+  \"%{mdaz-ftz:crtfastmath.o%s;Ofast|ffast-math|funsafe-math-optimizations:%{!shared:%{!mno-daz-ftz:crtfastmath.o%s}}} \\\n    %{mpc32:crtprec32.o%s} \\\n    %{mpc64:crtprec64.o%s} \\\n    %{mpc80:crtprec80.o%s}\""}, {"sha": "0b7df4297342da59f3768ecafb36465d373d457f", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54375d85d4aa5889869c2672158083b2106b623/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54375d85d4aa5889869c2672158083b2106b623/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=e54375d85d4aa5889869c2672158083b2106b623", "patch": "@@ -420,6 +420,10 @@ mpc80\n Target RejectNegative\n Set 80387 floating-point precision to 80-bit.\n \n+mdaz-ftz\n+Target\n+Set the FTZ and DAZ Flags.\n+\n mpreferred-stack-boundary=\n Target RejectNegative Joined UInteger Var(ix86_preferred_stack_boundary_arg)\n Attempt to keep stack aligned to this power of 2."}, {"sha": "0bbf709e0e98b6e0e94af14c0fe570edd2c9fde7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e54375d85d4aa5889869c2672158083b2106b623/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e54375d85d4aa5889869c2672158083b2106b623/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e54375d85d4aa5889869c2672158083b2106b623", "patch": "@@ -1433,7 +1433,7 @@ See RS/6000 and PowerPC Options.\n -m96bit-long-double  -mlong-double-64  -mlong-double-80  -mlong-double-128 @gol\n -mregparm=@var{num}  -msseregparm @gol\n -mveclibabi=@var{type}  -mvect8-ret-in-mem @gol\n--mpc32  -mpc64  -mpc80  -mstackrealign @gol\n+-mpc32  -mpc64  -mpc80  -mdaz-ftz -mstackrealign @gol\n -momit-leaf-frame-pointer  -mno-red-zone  -mno-tls-direct-seg-refs @gol\n -mcmodel=@var{code-model}  -mabi=@var{name}  -maddress-mode=@var{mode} @gol\n -m32  -m64  -mx32  -m16  -miamcu  -mlarge-data-threshold=@var{num} @gol\n@@ -32793,6 +32793,16 @@ are enabled by default; routines in such libraries could suffer significant\n loss of accuracy, typically through so-called ``catastrophic cancellation'',\n when this option is used to set the precision to less than extended precision.\n \n+@item -mdaz-ftz\n+@opindex mdaz-ftz\n+\n+The flush-to-zero (FTZ) and denormals-are-zero (DAZ) flags in the MXCSR register\n+are used to control floating-point calculations.SSE and AVX instructions\n+including scalar and vector instructions could benefit from enabling the FTZ\n+and DAZ flags when @option{-mdaz-ftz} is specified. Don't set FTZ/DAZ flags\n+when @option{-mno-daz-ftz} or @option{-shared} is specified, @option{-mdaz-ftz}\n+will set FTZ/DAZ flags even with @option{-shared}.\n+\n @item -mstackrealign\n @opindex mstackrealign\n Realign the stack at entry.  On the x86, the @option{-mstackrealign}"}]}