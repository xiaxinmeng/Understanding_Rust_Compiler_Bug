{"sha": "685bc70fd8dfd17fa62266c2ad05567b37540119", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1YmM3MGZkOGRmZDE3ZmE2MjI2NmMyYWQwNTU2N2IzNzU0MDExOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:56:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:56:53Z"}, "message": "[multiple changes]\n\n2013-01-02  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb, exp_ch4.adb, exp_ch6.adb, exp_ch7.adb, exp_ch9.adb,\n\texp_disp.adb, exp_dist.adb, exp_intr.adb, exp_prag.adb, exp_util.adb,\n\tfreeze.adb, gnat1drv.adb, inline.adb, layout.adb, lib-xref.adb,\n\tpar-ch10.adb, par-labl.adb, par-load.adb, par-util.adb, restrict.adb,\n\tsem_ch13.adb, sem_ch4.adb, sem_ch6.adb, sem_dim.adb, sem_elab.adb,\n\tsem_res.adb, sem_warn.adb, sinput-l.adb: Add tags to warning messages.\n\t* sem_ch6.ads, warnsw.ads, opt.ads: Minor comment updates.\n\n2013-01-02  Robert Dewar  <dewar@adacore.com>\n\n\t* err_vars.ads: Minor comment fix.\n\n2013-01-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Refine predicate.\n\nFrom-SVN: r194787", "tree": {"sha": "879be21173429efea2e6377f4341e24c29907f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/879be21173429efea2e6377f4341e24c29907f6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/685bc70fd8dfd17fa62266c2ad05567b37540119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685bc70fd8dfd17fa62266c2ad05567b37540119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685bc70fd8dfd17fa62266c2ad05567b37540119", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685bc70fd8dfd17fa62266c2ad05567b37540119/comments", "author": null, "committer": null, "parents": [{"sha": "324ac54054c45c6641e601f02b74568c277f903d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324ac54054c45c6641e601f02b74568c277f903d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/324ac54054c45c6641e601f02b74568c277f903d"}], "stats": {"total": 604, "additions": 326, "deletions": 278}, "files": [{"sha": "a8f5bf81296339a88259c0c5a4decfb98883fe2d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -1,3 +1,21 @@\n+2013-01-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb, exp_ch4.adb, exp_ch6.adb, exp_ch7.adb, exp_ch9.adb,\n+\texp_disp.adb, exp_dist.adb, exp_intr.adb, exp_prag.adb, exp_util.adb,\n+\tfreeze.adb, gnat1drv.adb, inline.adb, layout.adb, lib-xref.adb,\n+\tpar-ch10.adb, par-labl.adb, par-load.adb, par-util.adb, restrict.adb,\n+\tsem_ch13.adb, sem_ch4.adb, sem_ch6.adb, sem_dim.adb, sem_elab.adb,\n+\tsem_res.adb, sem_warn.adb, sinput-l.adb: Add tags to warning messages.\n+\t* sem_ch6.ads, warnsw.ads, opt.ads: Minor comment updates.\n+\n+2013-01-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* err_vars.ads: Minor comment fix.\n+\n+2013-01-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Refine predicate.\n+\n 2013-01-02  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.ads: Minor comment fixes."}, {"sha": "d01db36c7288e770bb1d7589d683dc71e8e2c385", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -599,10 +599,10 @@ package body Checks is\n       begin\n          if Address_Clause_Overlay_Warnings then\n             Error_Msg_FE\n-              (\"?specified address for& may be inconsistent with alignment \",\n+              (\"?o?specified address for& may be inconsistent with alignment\",\n                Aexp, E);\n             Error_Msg_FE\n-              (\"\\?program execution may be erroneous (RM 13.3(27))\",\n+              (\"\\?o?program execution may be erroneous (RM 13.3(27))\",\n                Aexp, E);\n             Set_Address_Warning_Posted (AC);\n          end if;\n@@ -1624,7 +1624,7 @@ package body Checks is\n                      exit;\n                   else\n                      Apply_Compile_Time_Constraint_Error\n-                       (N, \"incorrect value for discriminant&?\",\n+                       (N, \"incorrect value for discriminant&??\",\n                         CE_Discriminant_Check_Failed, Ent => Discr);\n                      return;\n                   end if;\n@@ -2467,9 +2467,9 @@ package body Checks is\n          elsif S = Predicate_Function (Typ) then\n             Error_Msg_N\n               (\"predicate check includes a function call that \"\n-               & \"requires a predicate check?\", Parent (N));\n+               & \"requires a predicate check??\", Parent (N));\n             Error_Msg_N\n-              (\"\\this will result in infinite recursion?\", Parent (N));\n+              (\"\\this will result in infinite recursion??\", Parent (N));\n             Insert_Action (N,\n               Make_Raise_Storage_Error (Sloc (N),\n                 Reason => SE_Infinite_Recursion));\n@@ -2558,7 +2558,7 @@ package body Checks is\n       procedure Bad_Value is\n       begin\n          Apply_Compile_Time_Constraint_Error\n-           (Expr, \"value not in range of}?\", CE_Range_Check_Failed,\n+           (Expr, \"value not in range of}??\", CE_Range_Check_Failed,\n             Ent => Target_Typ,\n             Typ => Target_Typ);\n       end Bad_Value;\n@@ -2904,7 +2904,7 @@ package body Checks is\n               and then Entity (Cond) = Standard_True\n             then\n                Apply_Compile_Time_Constraint_Error\n-                 (Ck_Node, \"wrong length for array of}?\",\n+                 (Ck_Node, \"wrong length for array of}??\",\n                   CE_Length_Check_Failed,\n                   Ent => Target_Typ,\n                   Typ => Target_Typ);\n@@ -2984,7 +2984,7 @@ package body Checks is\n \n                if Nkind (Ck_Node) = N_Range then\n                   Apply_Compile_Time_Constraint_Error\n-                    (Low_Bound (Ck_Node), \"static range out of bounds of}?\",\n+                    (Low_Bound (Ck_Node), \"static range out of bounds of}??\",\n                      CE_Range_Check_Failed,\n                      Ent => Target_Typ,\n                      Typ => Target_Typ);\n@@ -3539,11 +3539,11 @@ package body Checks is\n          case Check is\n             when Access_Check =>\n                Error_Msg_N\n-                 (\"Constraint_Error may be raised (access check)?\",\n+                 (\"Constraint_Error may be raised (access check)??\",\n                   Parent (Nod));\n             when Division_Check =>\n                Error_Msg_N\n-                 (\"Constraint_Error may be raised (zero divide)?\",\n+                 (\"Constraint_Error may be raised (zero divide)??\",\n                   Parent (Nod));\n \n             when others =>\n@@ -3552,10 +3552,10 @@ package body Checks is\n \n          if K = N_Op_And then\n             Error_Msg_N -- CODEFIX\n-              (\"use `AND THEN` instead of AND?\", P);\n+              (\"use `AND THEN` instead of AND??\", P);\n          else\n             Error_Msg_N -- CODEFIX\n-              (\"use `OR ELSE` instead of OR?\", P);\n+              (\"use `OR ELSE` instead of OR??\", P);\n          end if;\n \n          --  If not short-circuited, we need the check\n@@ -3694,7 +3694,8 @@ package body Checks is\n \n          Apply_Compile_Time_Constraint_Error\n            (N      => Expression (N),\n-            Msg    => \"(Ada 2005) null-excluding objects must be initialized?\",\n+            Msg    =>\n+              \"(Ada 2005) null-excluding objects must be initialized??\",\n             Reason => CE_Null_Not_Allowed);\n       end if;\n \n@@ -3712,7 +3713,7 @@ package body Checks is\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n                      Msg    => \"(Ada 2005) null not allowed \" &\n-                               \"in null-excluding components?\",\n+                               \"in null-excluding components??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when N_Object_Declaration =>\n@@ -3726,7 +3727,7 @@ package body Checks is\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n                      Msg    => \"(Ada 2005) null not allowed \" &\n-                               \"in null-excluding formals?\",\n+                               \"in null-excluding formals??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when others =>\n@@ -6466,7 +6467,7 @@ package body Checks is\n          if not Inside_Init_Proc then\n             Apply_Compile_Time_Constraint_Error\n               (N,\n-               \"null value not allowed here?\",\n+               \"null value not allowed here??\",\n                CE_Access_Check_Failed);\n          else\n             Insert_Action (N,\n@@ -8251,12 +8252,12 @@ package body Checks is\n                            if L_Length > R_Length then\n                               Add_Check\n                                 (Compile_Time_Constraint_Error\n-                                  (Wnode, \"too few elements for}?\", T_Typ));\n+                                  (Wnode, \"too few elements for}??\", T_Typ));\n \n                            elsif  L_Length < R_Length then\n                               Add_Check\n                                 (Compile_Time_Constraint_Error\n-                                  (Wnode, \"too many elements for}?\", T_Typ));\n+                                  (Wnode, \"too many elements for}??\", T_Typ));\n                            end if;\n \n                         --  The comparison for an individual index subtype\n@@ -8802,13 +8803,13 @@ package body Checks is\n                         Add_Check\n                           (Compile_Time_Constraint_Error\n                              (Low_Bound (Ck_Node),\n-                              \"static value out of range of}?\", T_Typ));\n+                              \"static value out of range of}??\", T_Typ));\n \n                      else\n                         Add_Check\n                           (Compile_Time_Constraint_Error\n                             (Wnode,\n-                             \"static range out of bounds of}?\", T_Typ));\n+                             \"static range out of bounds of}??\", T_Typ));\n                      end if;\n                   end if;\n \n@@ -8817,13 +8818,13 @@ package body Checks is\n                         Add_Check\n                           (Compile_Time_Constraint_Error\n                              (High_Bound (Ck_Node),\n-                              \"static value out of range of}?\", T_Typ));\n+                              \"static value out of range of}??\", T_Typ));\n \n                      else\n                         Add_Check\n                           (Compile_Time_Constraint_Error\n                              (Wnode,\n-                              \"static range out of bounds of}?\", T_Typ));\n+                              \"static range out of bounds of}??\", T_Typ));\n                      end if;\n                   end if;\n                end if;\n@@ -8944,13 +8945,13 @@ package body Checks is\n                         Add_Check\n                           (Compile_Time_Constraint_Error\n                              (Ck_Node,\n-                              \"static value out of range of}?\", T_Typ));\n+                              \"static value out of range of}??\", T_Typ));\n \n                      else\n                         Add_Check\n                           (Compile_Time_Constraint_Error\n                              (Wnode,\n-                              \"static value out of range of}?\", T_Typ));\n+                              \"static value out of range of}??\", T_Typ));\n                      end if;\n                   end if;\n \n@@ -9132,7 +9133,7 @@ package body Checks is\n                         then\n                            Add_Check\n                              (Compile_Time_Constraint_Error\n-                               (Wnode, \"value out of range of}?\", T_Typ));\n+                               (Wnode, \"value out of range of}??\", T_Typ));\n \n                         else\n                            Evolve_Or_Else"}, {"sha": "ecfbc54ce81598688af445db5a9a55cb7e36d489", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -89,7 +89,7 @@ package Err_Vars is\n    --  to force an initial reference to the real source file name.\n \n    Warning_Doc_Switch : Boolean := False;\n-   --  If this is set True, then the ??/?x?/?.x? sequences in error messages\n+   --  If this is set True, then the ??/?x?/?x? sequences in error messages\n    --  are active (see errout.ads for details). If this switch is False, then\n    --  these sequences are ignored (i.e. simply equivalent to a single ?). The\n    --  -gnatw.d switch sets this flag True, -gnatw.D sets this flag False."}, {"sha": "446a310345b24d3a6a384f322b5efe4e12b9f7ea", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -5685,8 +5685,8 @@ package body Exp_Ch4 is\n \n             if Lcheck = LT or else Ucheck = GT then\n                if Warn1 then\n-                  Error_Msg_N (\"??range test optimized away\", N);\n-                  Error_Msg_N (\"\\??value is known to be out of range\", N);\n+                  Error_Msg_N (\"?c?range test optimized away\", N);\n+                  Error_Msg_N (\"\\?c?value is known to be out of range\", N);\n                end if;\n \n                Rewrite (N, New_Reference_To (Standard_False, Loc));\n@@ -5699,8 +5699,8 @@ package body Exp_Ch4 is\n \n             elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n                if Warn1 then\n-                  Error_Msg_N (\"??range test optimized away\", N);\n-                  Error_Msg_N (\"\\??value is known to be in range\", N);\n+                  Error_Msg_N (\"?c?range test optimized away\", N);\n+                  Error_Msg_N (\"\\?c?value is known to be in range\", N);\n                end if;\n \n                Rewrite (N, New_Reference_To (Standard_True, Loc));\n@@ -5756,25 +5756,25 @@ package body Exp_Ch4 is\n \n                if Lcheck = LT or else Ucheck = GT then\n                   Error_Msg_N\n-                    (\"??value can only be in range if it is invalid\", N);\n+                    (\"?c?value can only be in range if it is invalid\", N);\n \n                --  Result is in range for valid value\n \n                elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n                   Error_Msg_N\n-                    (\"??value can only be out of range if it is invalid\", N);\n+                    (\"?c?value can only be out of range if it is invalid\", N);\n \n                --  Lower bound check succeeds if value is valid\n \n                elsif Warn2 and then Lcheck in Compare_GE then\n                   Error_Msg_N\n-                    (\"??lower bound check only fails if it is invalid\", Lo);\n+                    (\"?c?lower bound check only fails if it is invalid\", Lo);\n \n                --  Upper bound  check succeeds if value is valid\n \n                elsif Warn2 and then Ucheck in Compare_LE then\n                   Error_Msg_N\n-                    (\"??upper bound check only fails for invalid values\", Hi);\n+                    (\"?c?upper bound check only fails for invalid values\", Hi);\n                end if;\n             end if;\n          end;"}, {"sha": "cd83d45bddcfa9992a626de491cd4507348d3bcb", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -1450,7 +1450,7 @@ package body Exp_Ch6 is\n            and then Is_Valued_Procedure (Scope (Formal))\n          then\n             Error_Msg_N\n-              (\"by_reference actual may be misaligned?\", Actual);\n+              (\"by_reference actual may be misaligned??\", Actual);\n             return False;\n \n          else\n@@ -1527,8 +1527,9 @@ package body Exp_Ch6 is\n               and then In_Open_Scopes (Entity (Actual))\n             then\n                if Scope (Subp) /= Entity (Actual) then\n-                  Error_Msg_N (\"operation outside protected type may not \"\n-                    & \"call back its protected operations?\", Actual);\n+                  Error_Msg_N\n+                    (\"operation outside protected type may not \"\n+                     & \"call back its protected operations??\", Actual);\n                end if;\n \n                Rewrite (Actual,\n@@ -2002,8 +2003,7 @@ package body Exp_Ch6 is\n                          (Loc, Sloc (Body_To_Inline (Spec)))\n             then\n                Error_Msg_NE\n-                 (\"cannot inline& (body not seen yet)?\",\n-                  Call_Node, Subp);\n+                 (\"cannot inline& (body not seen yet)??\", Call_Node, Subp);\n \n             else\n                declare\n@@ -2122,7 +2122,7 @@ package body Exp_Ch6 is\n \n                if not In_Same_Extended_Unit (Call_Node, Subp) then\n                   Cannot_Inline\n-                    (\"cannot inline& (body not seen yet)\", Call_Node, Subp,\n+                    (\"cannot inline& (body not seen yet)?\", Call_Node, Subp,\n                      Is_Serious => True);\n \n                elsif In_Open_Scopes (Subp) then\n@@ -2136,7 +2136,7 @@ package body Exp_Ch6 is\n                     and then Optimization_Level = 0\n                   then\n                      Error_Msg_N\n-                       (\"call to recursive subprogram cannot be inlined?\",\n+                       (\"call to recursive subprogram cannot be inlined?p?\",\n                         N);\n \n                   --  Do not emit error compiling runtime packages\n@@ -2145,7 +2145,7 @@ package body Exp_Ch6 is\n                     (Unit_File_Name (Get_Source_Unit (Subp)))\n                   then\n                      Error_Msg_N\n-                       (\"call to recursive subprogram cannot be inlined?\",\n+                       (\"call to recursive subprogram cannot be inlined??\",\n                         N);\n \n                   else\n@@ -3790,7 +3790,8 @@ package body Exp_Ch6 is\n                     and then In_Same_Extended_Unit (Sloc (Spec), Loc)\n                   then\n                      Cannot_Inline\n-                      (\"cannot inline& (body not seen yet)?\", Call_Node, Subp);\n+                       (\"cannot inline& (body not seen yet)?\",\n+                        Call_Node, Subp);\n                   end if;\n                end if;\n             end Inlined_Subprogram;\n@@ -4644,7 +4645,7 @@ package body Exp_Ch6 is\n       --  subprograms this must be done explicitly.\n \n       if In_Open_Scopes (Subp) then\n-         Error_Msg_N (\"call to recursive subprogram cannot be inlined?\", N);\n+         Error_Msg_N (\"call to recursive subprogram cannot be inlined??\", N);\n          Set_Is_Inlined (Subp, False);\n          return;\n "}, {"sha": "72892828b61cf536321374a19794fc5dbf0ea678", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -148,6 +148,7 @@ package body Exp_Ch7 is\n    --  Set the field Node_To_Be_Wrapped of the current scope\n \n    --  ??? The entire comment needs to be rewritten\n+   --  ??? which entire comment?\n \n    -----------------------------\n    -- Finalization Management --\n@@ -3379,7 +3380,7 @@ package body Exp_Ch7 is\n          --  with the array case and non-discriminated record cases.\n \n          Error_Msg_N\n-           (\"task/protected object in variant record will not be freed?\", N);\n+           (\"task/protected object in variant record will not be freed??\", N);\n          return New_List (Make_Null_Statement (Loc));\n       end if;\n "}, {"sha": "49e7efeba6e97645da4d5cca549069a93296a90e", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -8812,9 +8812,7 @@ package body Exp_Ch9 is\n \n       if Present (Private_Declarations (Pdef)) then\n          Priv := First (Private_Declarations (Pdef));\n-\n          while Present (Priv) loop\n-\n             if Nkind (Priv) = N_Component_Declaration then\n                if not Static_Component_Size (Defining_Identifier (Priv)) then\n \n@@ -8827,10 +8825,10 @@ package body Exp_Ch9 is\n                      Check_Restriction (No_Implicit_Heap_Allocations, Priv);\n \n                   elsif Restriction_Active (No_Implicit_Heap_Allocations) then\n-                     Error_Msg_N (\"component has non-static size?\", Priv);\n+                     Error_Msg_N (\"component has non-static size??\", Priv);\n                      Error_Msg_NE\n                        (\"\\creation of protected object of type& will violate\"\n-                        & \" restriction No_Implicit_Heap_Allocations?\",\n+                        & \" restriction No_Implicit_Heap_Allocations??\",\n                         Priv, Prot_Typ);\n                   end if;\n                end if;"}, {"sha": "c0872ade55fa7e4453e8301b9b273db2a447b67b", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -8431,11 +8431,11 @@ package body Exp_Disp is\n       if Is_Controlled (Typ) then\n          if not Finalized then\n             Error_Msg_N\n-              (\"controlled type has no explicit Finalize method?\", Typ);\n+              (\"controlled type has no explicit Finalize method??\", Typ);\n \n          elsif not Adjusted then\n             Error_Msg_N\n-              (\"controlled type has no explicit Adjust method?\", Typ);\n+              (\"controlled type has no explicit Adjust method??\", Typ);\n          end if;\n       end if;\n \n@@ -8754,7 +8754,7 @@ package body Exp_Disp is\n       if Has_CPP_Constructors (Typ)\n         and then No (Init_Proc (Typ))\n       then\n-         Error_Msg_N (\"?default constructor must be imported from C++\", Typ);\n+         Error_Msg_N (\"??default constructor must be imported from C++\", Typ);\n       end if;\n    end Set_CPP_Constructors;\n "}, {"sha": "8649fafff54f48202d8f28bc287f7f0690a4157a", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -7417,6 +7417,7 @@ package body Exp_Dist is\n \n             --  If the current parameter has a dynamic constrained status, then\n             --  this status is transmitted as well.\n+\n             --  This should be done for accessibility as well ???\n \n             if Nkind (Parameter_Type (Current_Parameter)) /="}, {"sha": "c3389ddce82e802b6c6ec9684130f54beacd9673", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -1045,9 +1045,9 @@ package body Exp_Intr is\n                  and then Is_Entity_Name (Nam2)\n                  and then Entity (Prefix (Nam1)) = Entity (Nam2)\n                then\n-                  Error_Msg_N (\"abort may take time to complete?\", N);\n-                  Error_Msg_N (\"\\deallocation might have no effect?\", N);\n-                  Error_Msg_N (\"\\safer to wait for termination.?\", N);\n+                  Error_Msg_N (\"abort may take time to complete??\", N);\n+                  Error_Msg_N (\"\\deallocation might have no effect??\", N);\n+                  Error_Msg_N (\"\\safer to wait for termination??\", N);\n                end if;\n             end if;\n          end;"}, {"sha": "537fa01eafdab7712868c87f488b524501073185", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -448,10 +448,12 @@ package body Exp_Prag is\n            and then Entity (Original_Node (Cond)) = Standard_False\n          then\n             return;\n+\n          elsif Nam = Name_Assertion then\n-            Error_Msg_N (\"?assertion will fail at run time\", N);\n+            Error_Msg_N (\"?A?assertion will fail at run time\", N);\n          else\n-            Error_Msg_N (\"?check will fail at run time\", N);\n+\n+            Error_Msg_N (\"?A?check will fail at run time\", N);\n          end if;\n       end if;\n    end Expand_Pragma_Check;"}, {"sha": "29d8182ff83348791e16e59b96748a2d6c182dd0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -225,10 +225,10 @@ package body Exp_Util is\n \n          if Present (Msg_Node) then\n             Error_Msg_N\n-              (\"?n?info: atomic synchronization set for &\", Msg_Node);\n+              (\"?N?info: atomic synchronization set for &\", Msg_Node);\n          else\n             Error_Msg_N\n-              (\"?n?info: atomic synchronization set\", N);\n+              (\"?N?info: atomic synchronization set\", N);\n          end if;\n       end if;\n    end Activate_Atomic_Synchronization;\n@@ -5127,7 +5127,7 @@ package body Exp_Util is\n \n             if W then\n                Error_Msg_F\n-                 (\"??this code can never be executed and has been deleted!\",\n+                 (\"?t?this code can never be executed and has been deleted!\",\n                   N);\n             end if;\n          end if;"}, {"sha": "de49b86a13cb4b829e03bad46e1e7198e8364274", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 55, "deletions": 46, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -1817,6 +1817,10 @@ package body Freeze is\n          Decl : constant Node_Id := Declaration_Node (Underlying_Type (Utype));\n \n       begin\n+         if not Warn_On_Suspicious_Modulus_Value then\n+            return;\n+         end if;\n+\n          if Nkind (Decl) = N_Full_Type_Declaration then\n             declare\n                Tdef : constant Node_Id := Type_Definition (Decl);\n@@ -1826,6 +1830,7 @@ package body Freeze is\n                   declare\n                      Modulus : constant Node_Id :=\n                                  Original_Node (Expression (Tdef));\n+\n                   begin\n                      if Nkind (Modulus) = N_Integer_Literal then\n                         declare\n@@ -1870,7 +1875,7 @@ package body Freeze is\n \n                            Error_Msg_Uint_1 := Modv;\n                            Error_Msg_N\n-                             (\"?2 '*'*^' may have been intended here\",\n+                             (\"?M?2 '*'*^' may have been intended here\",\n                               Modulus);\n                         end;\n                      end if;\n@@ -2285,7 +2290,7 @@ package body Freeze is\n \n             if not (Placed_Component or else Is_Packed (Rec)) then\n                Error_Msg_N\n-                 (\"?scalar storage order specified but no component clause\",\n+                 (\"??scalar storage order specified but no component clause\",\n                   ADC);\n             end if;\n \n@@ -2304,9 +2309,9 @@ package body Freeze is\n \n          if Present (ADC) and then Base_Type (Rec) = Rec then\n             if not (Placed_Component or else Is_Packed (Rec)) then\n-               Error_Msg_N (\"?bit order specification has no effect\", ADC);\n+               Error_Msg_N (\"??bit order specification has no effect\", ADC);\n                Error_Msg_N\n-                 (\"\\?since no component clauses were specified\", ADC);\n+                 (\"\\??since no component clauses were specified\", ADC);\n \n             --  Here is where we do the processing for reversed bit order\n \n@@ -2371,7 +2376,7 @@ package body Freeze is\n \n             if Warn_On_Redundant_Constructs then\n                Error_Msg_N -- CODEFIX\n-                 (\"?pragma Pack has no effect, no unplaced components\",\n+                 (\"??pragma Pack has no effect, no unplaced components\",\n                   Get_Rep_Pragma (Rec, Name_Pack));\n             end if;\n          end if;\n@@ -2478,14 +2483,16 @@ package body Freeze is\n \n                   if Convention (E) = Convention_C then\n                      Error_Msg_N\n-                       (\"?variant record has no direct equivalent in C\", A2);\n+                       (\"?x?variant record has no direct equivalent in C\",\n+                        A2);\n                   else\n                      Error_Msg_N\n-                       (\"?variant record has no direct equivalent in C++\", A2);\n+                       (\"?x?variant record has no direct equivalent in C++\",\n+                        A2);\n                   end if;\n \n                   Error_Msg_NE\n-                    (\"\\?use of convention for type& is dubious\", A2, E);\n+                    (\"\\?x?use of convention for type& is dubious\", A2, E);\n                end if;\n             end;\n          end if;\n@@ -2689,6 +2696,7 @@ package body Freeze is\n       --  Case of entity being frozen is other than a type\n \n       if not Is_Type (E) then\n+\n          --  If entity is exported or imported and does not have an external\n          --  name, now is the time to provide the appropriate default name.\n          --  Skip this if the entity is stubbed, since we don't need a name\n@@ -2805,7 +2813,7 @@ package body Freeze is\n                           and then Esize (F_Type) > Ttypes.System_Address_Size\n                         then\n                            Error_Msg_N\n-                             (\"?type of & does not correspond to C pointer!\",\n+                             (\"?x?type of & does not correspond to C pointer!\",\n                               Formal);\n \n                         --  Check suspicious return of boolean\n@@ -2816,10 +2824,11 @@ package body Freeze is\n                           and then not Has_Size_Clause (F_Type)\n                           and then VM_Target = No_VM\n                         then\n-                           Error_Msg_N (\"& is an 8-bit Ada Boolean?\", Formal);\n+                           Error_Msg_N\n+                             (\"& is an 8-bit Ada Boolean?x?\", Formal);\n                            Error_Msg_N\n                              (\"\\use appropriate corresponding type in C \"\n-                              & \"(e.g. char)?\", Formal);\n+                              & \"(e.g. char)?x?\", Formal);\n \n                         --  Check suspicious tagged type\n \n@@ -2831,7 +2840,7 @@ package body Freeze is\n                           and then Convention (E) = Convention_C\n                         then\n                            Error_Msg_N\n-                             (\"?& involves a tagged type which does not \"\n+                             (\"?x?& involves a tagged type which does not \"\n                               & \"correspond to any C type!\", Formal);\n \n                         --  Check wrong convention subprogram pointer\n@@ -2840,11 +2849,11 @@ package body Freeze is\n                           and then not Has_Foreign_Convention (F_Type)\n                         then\n                            Error_Msg_N\n-                             (\"?subprogram pointer & should \"\n+                             (\"?x?subprogram pointer & should \"\n                               & \"have foreign convention!\", Formal);\n                            Error_Msg_Sloc := Sloc (F_Type);\n                            Error_Msg_NE\n-                             (\"\\?add Convention pragma to declaration of &#\",\n+                             (\"\\?x?add Convention pragma to declaration of &#\",\n                               Formal, F_Type);\n                         end if;\n \n@@ -2880,17 +2889,17 @@ package body Freeze is\n \n                            if Formal = First_Formal (E) then\n                               Error_Msg_NE\n-                                (\"?in inherited operation&\", Warn_Node, E);\n+                                (\"??in inherited operation&\", Warn_Node, E);\n                            end if;\n                         else\n                            Warn_Node := Formal;\n                         end if;\n \n                         Error_Msg_NE\n-                          (\"?type of argument& is unconstrained array\",\n+                          (\"?x?type of argument& is unconstrained array\",\n                            Warn_Node, Formal);\n                         Error_Msg_NE\n-                          (\"?foreign caller must pass bounds explicitly\",\n+                          (\"?x?foreign caller must pass bounds explicitly\",\n                            Warn_Node, Formal);\n                         Error_Msg_Qual_Level := 0;\n                      end if;\n@@ -2951,7 +2960,7 @@ package body Freeze is\n                           and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n-                             (\"?return type of& does not \"\n+                             (\"?x?return type of& does not \"\n                               & \"correspond to C pointer!\", E);\n \n                         --  Check suspicious return of boolean\n@@ -2968,11 +2977,11 @@ package body Freeze is\n                                     Result_Definition (Declaration_Node (E));\n                            begin\n                               Error_Msg_NE\n-                                (\"return type of & is an 8-bit Ada Boolean?\",\n+                                (\"return type of & is an 8-bit Ada Boolean?x?\",\n                                  N, E);\n                               Error_Msg_NE\n                                 (\"\\use appropriate corresponding type in C \"\n-                                 & \"(e.g. char)?\", N, E);\n+                                 & \"(e.g. char)?x?\", N, E);\n                            end;\n \n                         --  Check suspicious return tagged type\n@@ -2987,7 +2996,7 @@ package body Freeze is\n                           and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n-                             (\"?return type of & does not \"\n+                             (\"?x?return type of & does not \"\n                               & \"correspond to C type!\", E);\n \n                         --  Check return of wrong convention subprogram pointer\n@@ -2998,11 +3007,11 @@ package body Freeze is\n                           and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n-                             (\"?& should return a foreign \"\n+                             (\"?x?& should return a foreign \"\n                               & \"convention subprogram pointer\", E);\n                            Error_Msg_Sloc := Sloc (R_Type);\n                            Error_Msg_NE\n-                             (\"\\?add Convention pragma to declaration of& #\",\n+                             (\"\\?x?add Convention pragma to declaration of& #\",\n                               E, R_Type);\n                         end if;\n                      end if;\n@@ -3037,7 +3046,7 @@ package body Freeze is\n                        and then not Has_Warnings_Off (R_Type)\n                      then\n                         Error_Msg_N\n-                          (\"?foreign convention function& should not \" &\n+                          (\"?x?foreign convention function& should not \" &\n                            \"return unconstrained array!\", E);\n                      end if;\n                   end if;\n@@ -3054,9 +3063,9 @@ package body Freeze is\n                  and then Present (Contract (E))\n                  and then Present (Spec_PPC_List (Contract (E)))\n                then\n-                  Error_Msg_NE (\"pre/post conditions on imported subprogram \"\n-                     & \"are not enforced?\",\n-                     E, Spec_PPC_List (Contract (E)));\n+                  Error_Msg_NE\n+                    (\"pre/post conditions on imported subprogram \"\n+                     & \"are not enforced??\", E, Spec_PPC_List (Contract (E)));\n                end if;\n \n             end if;\n@@ -3218,7 +3227,7 @@ package body Freeze is\n                then\n                   Error_Msg_Uint_1 := UI_From_Int (Standard_Integer_Size);\n                   Error_Msg_N\n-                    (\"?convention C enumeration object has size less than ^\",\n+                    (\"??convention C enumeration object has size less than ^\",\n                      E);\n                   Error_Msg_N (\"\\?use explicit size clause to set size\", E);\n                end if;\n@@ -3595,10 +3604,10 @@ package body Freeze is\n                            then\n                               Error_Msg_Sloc := Sloc (Comp_Size_C);\n                               Error_Msg_NE\n-                                (\"?pragma Pack for& ignored!\",\n+                                (\"?r?pragma Pack for& ignored!\",\n                                  Pack_Pragma, Ent);\n                               Error_Msg_N\n-                                (\"\\?explicit component size given#!\",\n+                                (\"\\?r?explicit component size given#!\",\n                                  Pack_Pragma);\n                               Set_Is_Packed (Base_Type (Ent), False);\n                               Set_Is_Bit_Packed_Array (Base_Type (Ent), False);\n@@ -3628,10 +3637,10 @@ package body Freeze is\n \n                               if Present (Pack_Pragma) then\n                                  Error_Msg_N\n-                                   (\"?pragma Pack causes component size \"\n+                                   (\"??pragma Pack causes component size \"\n                                     & \"to be ^!\", Pack_Pragma);\n                                  Error_Msg_N\n-                                   (\"\\?use Component_Size to set \"\n+                                   (\"\\??use Component_Size to set \"\n                                     & \"desired value!\", Pack_Pragma);\n                               end if;\n                            end if;\n@@ -3784,22 +3793,22 @@ package body Freeze is\n                   then\n                      Error_Msg_NE\n                        (\"non-atomic components of type& may not be \"\n-                        & \"accessible by separate tasks?\", Clause, E);\n+                        & \"accessible by separate tasks??\", Clause, E);\n \n                      if Has_Component_Size_Clause (E) then\n                         Error_Msg_Sloc :=\n                           Sloc\n                             (Get_Attribute_Definition_Clause\n                                  (FS, Attribute_Component_Size));\n                         Error_Msg_N\n-                          (\"\\because of component size clause#?\",\n+                          (\"\\because of component size clause#??\",\n                            Clause);\n \n                      elsif Has_Pragma_Pack (E) then\n                         Error_Msg_Sloc :=\n                           Sloc (Get_Rep_Pragma (FS, Name_Pack));\n                         Error_Msg_N\n-                          (\"\\because of pragma Pack#?\", Clause);\n+                          (\"\\because of pragma Pack#??\", Clause);\n                      end if;\n                   end if;\n \n@@ -4273,16 +4282,16 @@ package body Freeze is\n \n                if Ada_Version >= Ada_2005 then\n                   Error_Msg_N\n-                    (\"\\would be legal if Storage_Size of 0 given?\", E);\n+                    (\"\\would be legal if Storage_Size of 0 given??\", E);\n \n                elsif No_Pool_Assigned (E) then\n                   Error_Msg_N\n-                    (\"\\would be legal in Ada 2005?\", E);\n+                    (\"\\would be legal in Ada 2005??\", E);\n \n                else\n                   Error_Msg_N\n                     (\"\\would be legal in Ada 2005 if \"\n-                     & \"Storage_Size of 0 given?\", E);\n+                     & \"Storage_Size of 0 given??\", E);\n                end if;\n             end if;\n          end if;\n@@ -4839,7 +4848,7 @@ package body Freeze is\n            and then not Is_Character_Type (Typ)\n          then\n             Error_Msg_N\n-              (\"C enum types have the size of a C int?\", Size_Clause (Typ));\n+              (\"C enum types have the size of a C int??\", Size_Clause (Typ));\n          end if;\n \n          Adjust_Esize_For_Alignment (Typ);\n@@ -6081,7 +6090,7 @@ package body Freeze is\n            and then Warn_On_Export_Import\n          then\n             Error_Msg_N\n-              (\"?Valued_Procedure has no effect for convention Ada\", E);\n+              (\"??Valued_Procedure has no effect for convention Ada\", E);\n             Set_Is_Valued_Procedure (E, False);\n          end if;\n \n@@ -6133,7 +6142,7 @@ package body Freeze is\n               and then VM_Target = No_VM\n             then\n                Error_Msg_N\n-                (\"?foreign convention function& should not return \" &\n+                (\"?x?foreign convention function& should not return \" &\n                   \"unconstrained array\", E);\n                return;\n             end if;\n@@ -6150,7 +6159,7 @@ package body Freeze is\n                  and then Present (Default_Value (F))\n                then\n                   Error_Msg_N\n-                    (\"?parameter cannot be defaulted in non-Ada call\",\n+                    (\"?x?parameter cannot be defaulted in non-Ada call\",\n                      Default_Value (F));\n                end if;\n \n@@ -6575,11 +6584,11 @@ package body Freeze is\n          if Present (Old) then\n             Error_Msg_Node_2 := Old;\n             Error_Msg_N\n-              (\"default initialization of & may modify &?\",\n+              (\"default initialization of & may modify &??\",\n                Nam);\n          else\n             Error_Msg_N\n-              (\"default initialization of & may modify overlaid storage?\",\n+              (\"default initialization of & may modify overlaid storage??\",\n                Nam);\n          end if;\n \n@@ -6602,7 +6611,7 @@ package body Freeze is\n                   then\n                      Error_Msg_NE\n                        (\"\\packed array component& \" &\n-                        \"will be initialized to zero?\",\n+                        \"will be initialized to zero??\",\n                         Nam, Comp);\n                      exit;\n                   else\n@@ -6614,7 +6623,7 @@ package body Freeze is\n \n          Error_Msg_N\n            (\"\\use pragma Import for & to \" &\n-            \"suppress initialization (RM B.1(24))?\",\n+            \"suppress initialization (RM B.1(24))??\",\n             Nam);\n       end if;\n    end Warn_Overlay;"}, {"sha": "6e90c2b6d058dbf7a5f9aa851959c3c6ebe54678", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -677,9 +677,9 @@ procedure Gnat1drv is\n               and then not Compilation_Errors\n             then\n                Error_Msg_N\n-                 (\"package $$ does not require a body?\", Main_Unit_Node);\n+                 (\"package $$ does not require a body??\", Main_Unit_Node);\n                Error_Msg_File_1 := Fname;\n-               Error_Msg_N (\"body in file{? will be ignored\", Main_Unit_Node);\n+               Error_Msg_N (\"body in file{ will be ignored??\", Main_Unit_Node);\n \n                --  Ada 95 cases of a body file present when no body is\n                --  permitted. This we consider to be an error."}, {"sha": "cba417507b61f5874e87f591e375fc613fd1003d", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -699,11 +699,11 @@ package body Inline is\n \n                         Error_Msg_Unit_1 := Bname;\n                         Error_Msg_N\n-                          (\"one or more inlined subprograms accessed in $!?\",\n+                          (\"one or more inlined subprograms accessed in $!??\",\n                            Comp_Unit);\n                         Error_Msg_File_1 :=\n                           Get_File_Name (Bname, Subunit => False);\n-                        Error_Msg_N (\"\\but file{ was not found!?\", Comp_Unit);\n+                        Error_Msg_N (\"\\but file{ was not found!??\", Comp_Unit);\n \n                      else\n                         --  If the package to be inlined is an ancestor unit of\n@@ -882,11 +882,11 @@ package body Inline is\n                               then\n                                  Error_Msg_Node_2 := Child_Spec;\n                                  Error_Msg_NE\n-                                   (\"body of & depends on child unit&?\",\n-                                      With_Clause, P);\n+                                   (\"body of & depends on child unit&??\",\n+                                    With_Clause, P);\n                                  Error_Msg_N\n-                                   (\"\\subprograms in body cannot be inlined?\",\n-                                      With_Clause);\n+                                   (\"\\subprograms in body cannot be inlined??\",\n+                                    With_Clause);\n \n                                  --  Disable further inlining from this unit,\n                                  --  and keep Taft-amendment types incomplete.\n@@ -916,8 +916,8 @@ package body Inline is\n                   elsif Ineffective_Inline_Warnings then\n                      Error_Msg_Unit_1 := Bname;\n                      Error_Msg_N\n-                       (\"unable to inline subprograms defined in $?\", P);\n-                     Error_Msg_N (\"\\body not found?\", P);\n+                       (\"unable to inline subprograms defined in $??\", P);\n+                     Error_Msg_N (\"\\body not found??\", P);\n                      return;\n                   end if;\n                end if;"}, {"sha": "3ac620ca4ca40794ef260582f730012d23231114", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -2435,7 +2435,7 @@ package body Layout is\n                  Convention (E) = Convention_CPP)\n             then\n                Error_Msg_N\n-                 (\"?this access type does not correspond to C pointer\", E);\n+                 (\"?x?this access type does not correspond to C pointer\", E);\n             end if;\n \n          --  If the designated type is a limited view it is unanalyzed. We can\n@@ -2804,7 +2804,7 @@ package body Layout is\n       begin\n          if Spec > Max then\n             Error_Msg_Uint_1 := Spec - Max;\n-            Error_Msg_NE (\"?^ bits of & unused\", SC, E);\n+            Error_Msg_NE (\"??^ bits of & unused\", SC, E);\n          end if;\n       end Check_Unused_Bits;\n \n@@ -2883,8 +2883,8 @@ package body Layout is\n         and then not Is_Atomic (E)\n       then\n          if not Size_Known_At_Compile_Time (E) then\n-            Error_Msg_N (\"Optimize_Alignment has no effect for &\", E);\n-            Error_Msg_N (\"\\pragma is ignored for variable length record?\", E);\n+            Error_Msg_N (\"Optimize_Alignment has no effect for &??\", E);\n+            Error_Msg_N (\"\\pragma is ignored for variable length record??\", E);\n          else\n             Align := 1;\n          end if;"}, {"sha": "2f01dd4480faee2da7e631dd559406464acd68d8", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -597,7 +597,7 @@ package body Lib.Xref is\n         and then Warn_On_Ada_2005_Compatibility\n         and then (Typ = 'm' or else Typ = 'r' or else Typ = 's')\n       then\n-         Error_Msg_NE (\"& is only defined in Ada 2005?\", N, E);\n+         Error_Msg_NE (\"& is only defined in Ada 2005?y?\", N, E);\n       end if;\n \n       --  Warn if reference to Ada 2012 entity not in Ada 2012 mode. We only\n@@ -609,7 +609,7 @@ package body Lib.Xref is\n         and then Warn_On_Ada_2012_Compatibility\n         and then (Typ = 'm' or else Typ = 'r')\n       then\n-         Error_Msg_NE (\"& is only defined in Ada 2012?\", N, E);\n+         Error_Msg_NE (\"& is only defined in Ada 2012?y?\", N, E);\n       end if;\n \n       --  Never collect references if not in main source unit. However, we omit\n@@ -841,7 +841,7 @@ package body Lib.Xref is\n                   while Present (BE) loop\n                      if Chars (BE) = Chars (E) then\n                         Error_Msg_NE -- CODEFIX\n-                          (\"?pragma Unreferenced given for&!\", N, BE);\n+                          (\"??pragma Unreferenced given for&!\", N, BE);\n                         exit;\n                      end if;\n "}, {"sha": "aa7d2ba90fbf9ee18f3ce8fc7bce340df833b4b5", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -174,7 +174,8 @@ package Opt is\n \n    Address_Clause_Overlay_Warnings : Boolean := True;\n    --  GNAT\n-   --  Set False to disable address clause warnings\n+   --  Set False to disable address clause warnings. Modified by use of\n+   --  -gnatwo/O.\n \n    Address_Is_Private : Boolean := False;\n    --  GNAT, GNATBIND\n@@ -317,6 +318,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to enable checking for unreferenced entities other\n    --  than formal parameters (for which see Check_Unreferenced_Formals)\n+   --  Modified by use of -gnatwu/U.\n \n    Check_Unreferenced_Formals : Boolean := False;\n    --  GNAT\n@@ -332,6 +334,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to enable checking for unused withs, and also the case\n    --  of withing a package and using none of the entities in the package.\n+   --  Modified by use of -gnatwu/U.\n \n    CodePeer_Mode : Boolean := False;\n    --  GNAT, GNATBIND\n@@ -714,7 +717,7 @@ package Opt is\n    Implementation_Unit_Warnings : Boolean := True;\n    --  GNAT\n    --  Set True to active warnings for use of implementation internal units.\n-   --  Can be controlled by use of -gnatwi/-gnatwI.\n+   --  Modified by use of -gnatwi/-gnatwI.\n \n    Implicit_Packing : Boolean := False;\n    --  GNAT\n@@ -824,8 +827,7 @@ package Opt is\n    --  GNAT\n    --  List inherited invariants, preconditions, and postconditions from\n    --  Invariant'Class, Pre'Class, and Post'Class aspects. Also list inherited\n-   --  subtype predicates. Set True by use of -gnatw.l and False by use of\n-   --  -gnatw.L.\n+   --  subtype predicates. Modified by use of -gnatw.l/.L.\n \n    List_Restrictions : Boolean := False;\n    --  GNATBIND\n@@ -1467,31 +1469,31 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate all warnings on Ada 2005 compatibility issues,\n    --  including warnings on Ada 2005 obsolescent features used in Ada 2005\n-   --  mode. Set by default, set False by -gnatwY.\n+   --  mode. Set by default, modified by use of -gnatwy/Y.\n \n    Warn_On_Ada_2012_Compatibility : Boolean := True;\n    --  GNAT\n    --  Set to True to generate all warnings on Ada 2012 compatibility issues,\n    --  including warnings on Ada 2012 obsolescent features used in Ada 2012\n-   --  mode. Set False by -gnatwY.\n+   --  mode. Modified by use of -gnatwy/Y.\n \n    Warn_On_All_Unread_Out_Parameters : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings in all cases where a variable is\n    --  modified by being passed as to an OUT formal, but the resulting value is\n-   --  never read. The default is that this warning is suppressed, except in\n-   --  the case of\n+   --  never read. The default is that this warning is suppressed. Modified\n+   --  by use of gnatw.o/.O.\n \n    Warn_On_Assertion_Failure : Boolean := True;\n    --  GNAT\n    --  Set to True to activate warnings on assertions that can be determined\n-   --  at compile time will always fail. Set false by -gnatw.A.\n+   --  at compile time will always fail. Modified by use of -gnatw.a/.A.\n \n    Warn_On_Assumed_Low_Bound : Boolean := True;\n    --  GNAT\n    --  Set to True to activate warnings for string parameters that are indexed\n-   --  with literals or S'Length, presumably assuming a lower bound of one. Set\n-   --  False by -gnatwW.\n+   --  with literals or S'Length, presumably assuming a lower bound of one.\n+   --  Modified by use of -gnatww/W.\n \n    Warn_On_Atomic_Synchronization : Boolean := False;\n    --  GNAT\n@@ -1542,7 +1544,8 @@ package Opt is\n    --  Set to True to generate warnings if a variable is assigned but is never\n    --  read. Also controls warnings for similar cases involving out parameters,\n    --  but only if there is only one out parameter for the procedure involved.\n-   --  The default is that this warning is suppressed.\n+   --  The default is that this warning is suppressed, modified by use of\n+   --  -gnatwm/M.\n \n    Warn_On_No_Value_Assigned : Boolean := True;\n    --  GNAT\n@@ -1583,6 +1586,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate warnings when a writable actual which is not\n    --  a by-copy type overlaps with another actual in a subprogram call.\n+   --  Modified by use of -gnatw.i/.I.\n \n    Warn_On_Questionable_Missing_Parens : Boolean := True;\n    --  GNAT\n@@ -1612,7 +1616,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate warnings for suspicious contracts expressed as\n    --  pragmas or aspects precondition and postcondition. The default is that\n-   --  this warning is disabled.\n+   --  this warning is disabled. Modified by use of -gnatw.t/.T.\n \n    Warn_On_Suspicious_Modulus_Value : Boolean := True;\n    --  GNAT\n@@ -1623,7 +1627,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate warnings for unchecked conversions that may have\n    --  non-portable semantics (e.g. because sizes of types differ). Modified\n-   --  by use of -gnatw.z/.Z.\n+   --  by use of -gnatwz/Z.\n \n    Warn_On_Unordered_Enumeration_Type : Boolean := False;\n    --  GNAT\n@@ -1647,7 +1651,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate warnings for use of Pragma Warnings (Off, ent),\n    --  where either the pragma is never used, or it could be replaced by a\n-   --  pragma Unmodified or Unreferenced.\n+   --  pragma Unmodified or Unreferenced. Modified by use of -gnatw.w/.W.\n \n    type Warning_Mode_Type is (Suppress, Normal, Treat_As_Error);\n    Warning_Mode : Warning_Mode_Type := Normal;"}, {"sha": "ddd88b3eea3fa2bae8f90447925f31b614d00cfa", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -314,8 +314,9 @@ package body Ch10 is\n                --  Do not complain if there is a pragma No_Body\n \n                if not No_Body then\n-                  Error_Msg_SC (\"?file contains no compilation units\");\n+                  Error_Msg_SC (\"??file contains no compilation units\");\n                end if;\n+\n             else\n                Error_Msg_SC (\"compilation unit expected\");\n                Cunit_Error_Flag := True;"}, {"sha": "f709dd088eef55aae37ba1625182e991228d0c87", "filename": "gcc/ada/par-labl.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-labl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-labl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-labl.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -81,6 +81,7 @@ procedure Labl is\n       --  Note that in the worst case, this is quadratic in the number\n       --  of labels.  However, labels are not all that common, and this\n       --  is only called for explicit labels.\n+\n       --  ???Nonetheless, the efficiency could be improved. For example,\n       --  call Labl for each body, rather than once per compilation.\n \n@@ -356,7 +357,7 @@ procedure Labl is\n          Remove (Loop_Header);\n          Rewrite (Loop_End, Loop_Stmt);\n          Error_Msg_N\n-           (\"info: code between label and backwards goto rewritten as loop?\",\n+           (\"info: code between label and backwards goto rewritten as loop??\",\n              Loop_End);\n       end Rewrite_As_Loop;\n "}, {"sha": "f5bf99d9d9e5524d8aff8baae2f65bc7553a04c5", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -172,7 +172,7 @@ begin\n    then\n       Error_Msg_File_1 := File_Name;\n       Error_Msg\n-        (\"?file name does not match unit name, should be{\", Sloc (Curunit));\n+        (\"??file name does not match unit name, should be{\", Sloc (Curunit));\n    end if;\n \n    --  For units other than the main unit, the expected unit name is set and"}, {"sha": "fa592a7ea5058661d37c612ec4088a9fd38123a4", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -186,7 +186,7 @@ package body Util is\n            or else (Token_Name = Name_Interface\n                      and then Prev_Token /= Tok_Pragma)\n          then\n-            Error_Msg_N (\"& is a reserved word in Ada 2005?\", Token_Node);\n+            Error_Msg_N (\"& is a reserved word in Ada 2005?y?\", Token_Node);\n          end if;\n       end if;\n \n@@ -196,7 +196,7 @@ package body Util is\n         and then Warn_On_Ada_2012_Compatibility\n       then\n          if Token_Name = Name_Some then\n-            Error_Msg_N (\"& is a reserved word in Ada 2012?\", Token_Node);\n+            Error_Msg_N (\"& is a reserved word in Ada 2012?y?\", Token_Node);\n          end if;\n       end if;\n \n@@ -761,7 +761,7 @@ package body Util is\n             C : constant Entity_Id := Current_Entity (N);\n          begin\n             if Present (C) and then Sloc (C) = Standard_Location then\n-               Error_Msg_N (\"redefinition of entity& in Standard?\", N);\n+               Error_Msg_N (\"redefinition of entity& in Standard?K?\", N);\n             end if;\n          end;\n       end if;"}, {"sha": "d4acf1dd912bb246e15eb6b566ec9eca35fdbe3a", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -582,7 +582,7 @@ package body Restrict is\n \n             if No_Dependences.Table (J).Warn then\n                Error_Msg\n-                 (\"?violation of restriction `No_Dependence '='> &`#\",\n+                 (\"??violation of restriction `No_Dependence '='> &`#\",\n                   Sloc (Err));\n             else\n                Error_Msg\n@@ -798,9 +798,9 @@ package body Restrict is\n \n       if Warn_On_Obsolescent_Feature then\n          Error_Msg_Name_1 := Old_Name;\n-         Error_Msg_N (\"restriction identifier % is obsolescent?\", N);\n+         Error_Msg_N (\"restriction identifier % is obsolescent?j?\", N);\n          Error_Msg_Name_1 := New_Name;\n-         Error_Msg_N (\"|use restriction identifier % instead\", N);\n+         Error_Msg_N (\"|use restriction identifier % instead?j?\", N);\n       end if;\n \n       return New_Name;\n@@ -951,7 +951,7 @@ package body Restrict is\n       --  Set warning message if warning\n \n       if Restriction_Warnings (R) then\n-         Add_Char ('?');\n+         Add_Str (\"??\");\n \n       --  If real violation (not warning), then mark it as non-serious unless\n       --  it is a violation of No_Finalization in which case we leave it as a\n@@ -1012,7 +1012,7 @@ package body Restrict is\n          --  Set as warning if warning case\n \n          if Restriction_Warnings (R) then\n-            Add_Char ('?');\n+            Add_Str (\"??\");\n          end if;\n \n          --  Set main message"}, {"sha": "d3c735b38edc26664abda3ec6468892951be4478", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -13008,11 +13008,21 @@ package body Sem_Ch12 is\n                  and then Present (Original_Node (N2))\n                  and then Present (Entity (Original_Node (N2)))\n                then\n-                  N2 := Original_Node (N2);\n-                  Set_Associated_Node (N, N2);\n-               end if;\n+                  if Is_Global (Entity (Original_Node (N2))) then\n+                     N2 := Original_Node (N2);\n+                     Set_Associated_Node (N, N2);\n+                     Set_Global_Type (N, N2);\n+\n+                  else\n+                     --  Renaming is local, and will be resolved in instance\n+\n+                     Set_Associated_Node (N, Empty);\n+                     Set_Etype  (N, Empty);\n+                  end if;\n \n-               Set_Global_Type (N, N2);\n+               else\n+                  Set_Global_Type (N, N2);\n+               end if;\n \n             elsif Nkind (N) = N_Op_Concat\n               and then Is_Generic_Type (Etype (N2))"}, {"sha": "37e521cb09943314b0e9d58a13d2cf8194d46863", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -5339,7 +5339,7 @@ package body Sem_Ch13 is\n                if Inherit and Opt.List_Inherited_Aspects then\n                   Error_Msg_Sloc := Sloc (Ritem);\n                   Error_Msg_N\n-                    (\"?info: & inherits `Invariant''Class` aspect from #\",\n+                    (\"?L?info: & inherits `Invariant''Class` aspect from #\",\n                      Typ);\n                end if;\n             end if;\n@@ -5563,7 +5563,7 @@ package body Sem_Ch13 is\n             then\n                Error_Msg_Sloc := Sloc (Predicate_Function (T));\n                Error_Msg_Node_2 := T;\n-               Error_Msg_N (\"info: & inherits predicate from & #??\", Typ);\n+               Error_Msg_N (\"info: & inherits predicate from & #?L?\", Typ);\n             end if;\n          end if;\n       end Add_Call;\n@@ -9797,7 +9797,7 @@ package body Sem_Ch13 is\n            or else OpenVMS_On_Target\n          then\n             Error_Msg_N\n-              (\"?Z?conversion between pointers with different conventions!\",\n+              (\"?z?conversion between pointers with different conventions!\",\n                N);\n          end if;\n       end if;\n@@ -9824,7 +9824,7 @@ package body Sem_Ch13 is\n \n             if Source = Calendar_Time or else Target = Calendar_Time then\n                Error_Msg_N\n-                 (\"?Z?representation of 'Time values may change between \" &\n+                 (\"?z?representation of 'Time values may change between \" &\n                   \"'G'N'A'T versions\", N);\n             end if;\n          end;\n@@ -9925,15 +9925,15 @@ package body Sem_Ch13 is\n \n                if Source_Siz /= Target_Siz then\n                   Error_Msg\n-                    (\"?Z?types for unchecked conversion have different sizes!\",\n+                    (\"?z?types for unchecked conversion have different sizes!\",\n                      Eloc);\n \n                   if All_Errors_Mode then\n                      Error_Msg_Name_1 := Chars (Source);\n                      Error_Msg_Uint_1 := Source_Siz;\n                      Error_Msg_Name_2 := Chars (Target);\n                      Error_Msg_Uint_2 := Target_Siz;\n-                     Error_Msg (\"\\size of % is ^, size of % is ^?Z?\", Eloc);\n+                     Error_Msg (\"\\size of % is ^, size of % is ^?z?\", Eloc);\n \n                      Error_Msg_Uint_1 := UI_Abs (Source_Siz - Target_Siz);\n \n@@ -9943,41 +9943,41 @@ package body Sem_Ch13 is\n                      then\n                         if Source_Siz > Target_Siz then\n                            Error_Msg\n-                             (\"\\?Z?^ high order bits of source will \"\n+                             (\"\\?z?^ high order bits of source will \"\n                               & \"be ignored!\", Eloc);\n \n                         elsif Is_Unsigned_Type (Source) then\n                            Error_Msg\n-                             (\"\\?Z?source will be extended with ^ high order \"\n+                             (\"\\?z?source will be extended with ^ high order \"\n                               & \"zero bits?!\", Eloc);\n \n                         else\n                            Error_Msg\n-                             (\"\\?Z?source will be extended with ^ high order \"\n+                             (\"\\?z?source will be extended with ^ high order \"\n                               & \"sign bits!\", Eloc);\n                         end if;\n \n                      elsif Source_Siz < Target_Siz then\n                         if Is_Discrete_Type (Target) then\n                            if Bytes_Big_Endian then\n                               Error_Msg\n-                                (\"\\?Z?target value will include ^ undefined \"\n+                                (\"\\?z?target value will include ^ undefined \"\n                                  & \"low order bits!\", Eloc);\n                            else\n                               Error_Msg\n-                                (\"\\?Z?target value will include ^ undefined \"\n+                                (\"\\?z?target value will include ^ undefined \"\n                                  & \"high order bits!\", Eloc);\n                            end if;\n \n                         else\n                            Error_Msg\n-                             (\"\\?Z?^ trailing bits of target value will be \"\n+                             (\"\\?z?^ trailing bits of target value will be \"\n                               & \"undefined!\", Eloc);\n                         end if;\n \n                      else pragma Assert (Source_Siz > Target_Siz);\n                         Error_Msg\n-                          (\"\\?Z?^ trailing bits of source will be ignored!\",\n+                          (\"\\?z?^ trailing bits of source will be ignored!\",\n                            Eloc);\n                      end if;\n                   end if;\n@@ -10030,10 +10030,10 @@ package body Sem_Ch13 is\n                            Error_Msg_Node_1 := D_Target;\n                            Error_Msg_Node_2 := D_Source;\n                            Error_Msg\n-                             (\"?Z?alignment of & (^) is stricter than \"\n+                             (\"?z?alignment of & (^) is stricter than \"\n                               & \"alignment of & (^)!\", Eloc);\n                            Error_Msg\n-                             (\"\\?Z?resulting access value may have invalid \"\n+                             (\"\\?z?resulting access value may have invalid \"\n                               & \"alignment!\", Eloc);\n                         end if;\n                      end;"}, {"sha": "14e7f93da7c6970abd7430babe4c412a806837c3", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -635,10 +635,9 @@ package body Sem_Ch4 is\n                      Insert_Action (N, Not_Null_Check);\n                      Analyze (Not_Null_Check);\n \n-                  else\n-                     --  Seems weird for the following to be a warning ???\n-\n-                     Error_Msg_N (\"null value not allowed here??\", E);\n+                  elsif Warn_On_Ada_2012_Compatibility then\n+                     Error_Msg_N\n+                       (\"null value not allowed here in Ada 2012?y?\", E);\n                   end if;\n                end;\n             end if;"}, {"sha": "eae2df3c0006bc58733b04b9e3ded26ca1fdda12", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -3788,6 +3788,7 @@ package body Sem_Ch6 is\n                      if Has_Excluded_Statement (Then_Statements (E)) then\n                         return True;\n                      end if;\n+\n                      Next (E);\n                   end loop;\n                end if;\n@@ -3975,7 +3976,7 @@ package body Sem_Ch6 is\n             then\n                Cannot_Inline\n                  (\"cannot inline & (call returns unconstrained type)?\",\n-                    N, Subp);\n+                  N, Subp);\n                return Abandon;\n             else\n                return OK;\n@@ -7287,17 +7288,18 @@ package body Sem_Ch6 is\n       then\n          if Present (Last_Postcondition) then\n             if Present (Last_Contract_Case) then\n-               Error_Msg_N (\"neither function postcondition nor \"\n-                            & \"contract cases mention result??\",\n-                            Last_Postcondition);\n+               Error_Msg_N\n+                 (\"neither function postcondition nor \"\n+                  & \"contract cases mention result?T?\", Last_Postcondition);\n \n             else\n-               Error_Msg_N (\"function postcondition does not mention result??\",\n-                            Last_Postcondition);\n+               Error_Msg_N\n+                 (\"function postcondition does not mention result?T?\",\n+                  Last_Postcondition);\n             end if;\n          else\n-            Error_Msg_N (\"contract cases do not mention result??\",\n-                         Last_Contract_Case);\n+            Error_Msg_N\n+              (\"contract cases do not mention result?T?\", Last_Contract_Case);\n          end if;\n       end if;\n    end Check_Subprogram_Contract;\n@@ -9364,10 +9366,12 @@ package body Sem_Ch6 is\n                   if Class_Present (P) and then not Split_PPC (P) then\n                      if Pragma_Name (P) = Name_Precondition then\n                         Error_Msg_N\n-                          (\"info: & inherits `Pre''Class` aspect from #?\", E);\n+                          (\"info: & inherits `Pre''Class` aspect from #?L?\",\n+                           E);\n                      else\n                         Error_Msg_N\n-                          (\"info: & inherits `Post''Class` aspect from #?\", E);\n+                          (\"info: & inherits `Post''Class` aspect from #?L?\",\n+                           E);\n                      end if;\n                   end if;\n "}, {"sha": "a0df51ef21e0ee54357fc3f178b1c6ca115caea4", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -58,29 +58,30 @@ package Sem_Ch6 is\n       Is_Serious : Boolean := False);\n    --  This procedure is called if the node N, an instance of a call to\n    --  subprogram Subp, cannot be inlined. Msg is the message to be issued,\n-   --  which ends with ? (but not ?p?, this routine takes care of the need\n-   --  to change ? to ?p?). Temporarily the behavior of this routine depends\n-   --  on the value of -gnatd.k:\n+   --  which ends with ? (it does not end with ?p?, this routine takes care of\n+   --  the need to change ? to ?p?). Temporarily the behavior of this routine\n+   --  depends on the value of -gnatd.k:\n    --\n    --    * If -gnatd.k is not set (ie. old inlining model) then if Subp has\n    --      a pragma Always_Inlined, then an error message is issued (by\n    --      removing the last character of Msg). If Subp is not Always_Inlined,\n    --      then a warning is issued if the flag Ineffective_Inline_Warnings\n-   --      is set, and if not, the call has no effect.\n+   --      is set, adding ?p to the msg, and if not, the call has no effect.\n    --\n    --    * If -gnatd.k is set (ie. new inlining model) then:\n    --      - If Is_Serious is true, then an error is reported (by removing the\n    --        last character of Msg);\n+   --\n    --      - otherwise:\n    --\n    --        * Compiling without optimizations if Subp has a pragma\n    --          Always_Inlined, then an error message is issued; if Subp is\n    --          not Always_Inlined, then a warning is issued if the flag\n-   --          Ineffective_Inline_Warnings is set, and if not, the call\n-   --          has no effect.\n+   --          Ineffective_Inline_Warnings is set (adding p?), and if not,\n+   --          the call has no effect.\n    --\n    --        * Compiling with optimizations then a warning is issued if the\n-   --          flag Ineffective_Inline_Warnings is set; otherwise the call has\n+   --          flag Ineffective_Inline_Warnings is set (adding p?); otherwise\n    --          no effect since inlining may be performed by the backend.\n \n    procedure Check_Conventions (Typ : Entity_Id);"}, {"sha": "be14d47ef5c451664d8124bb0732c209b39d62d0", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -2451,7 +2451,7 @@ package body Sem_Dim is\n       Add_String_To_Name_Buffer (Symbol_Of (Typ));\n \n       Error_Msg_Name_1 := Name_Find;\n-      Error_Msg_N (\"?assumed to be%%\", N);\n+      Error_Msg_N (\"??assumed to be%%\", N);\n    end Dim_Warning_For_Numeric_Literal;\n \n    ----------------------------------------"}, {"sha": "125caefbc961fca55794fc65ff5fb6cbec7b7836", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -1030,7 +1030,7 @@ package body Sem_Elab is\n                   Error_Msg_Node_2 := W_Scope;\n                   Error_Msg_NE\n                     (\"call to& in elaboration code \" &\n-                     \"requires pragma Elaborate_All on&??\", N, E);\n+                     \"requires pragma Elaborate_All on&?l?\", N, E);\n                end if;\n \n                --  Set indication for binder to generate Elaborate_All\n@@ -2506,7 +2506,7 @@ package body Sem_Elab is\n                Error_Msg_Node_2 := Task_Scope;\n                Error_Msg_NE\n                  (\"activation of an instance of task type&\" &\n-                  \" requires pragma Elaborate_All on &??\", N, Ent);\n+                  \" requires pragma Elaborate_All on &?l?\", N, Ent);\n             end if;\n \n             Activate_Elaborate_All_Desirable (N, Task_Scope);"}, {"sha": "5559f178419ac9ea4caa174c5b528656ac026ddd", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -8891,7 +8891,7 @@ package body Sem_Res is\n                      --  of the First_Node call here.\n \n                      Error_Msg_F\n-                       (\"??assertion would fail at run time!\",\n+                       (\"?A?assertion would fail at run time!\",\n                         Expression\n                           (First (Pragma_Argument_Associations (Orig))));\n                   end if;\n@@ -8922,7 +8922,7 @@ package body Sem_Res is\n                      --  comment above for an explanation of why we do this.\n \n                      Error_Msg_F\n-                       (\"??check would fail at run time!\",\n+                       (\"?A?check would fail at run time!\",\n                         Expression\n                           (Last (Pragma_Argument_Associations (Orig))));\n                   end if;"}, {"sha": "e79403995e7c0346efed3bcb6e459eed1f9682a0", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 73, "deletions": 77, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -1083,7 +1083,7 @@ package body Sem_Warn is\n                     and then not Is_Imported (E1)\n                   then\n                      Error_Msg_N\n-                       (\"??& is not modified, volatile has no effect!\", E1);\n+                       (\"?k?& is not modified, volatile has no effect!\", E1);\n \n                   --  Another special case, Exception_Occurrence, this catches\n                   --  the case of exception choice (and a bit more too, but not\n@@ -1105,7 +1105,7 @@ package body Sem_Warn is\n                         then\n                            if not Warnings_Off_E1 then\n                               Error_Msg_N -- CODEFIX\n-                                (\"??& is not modified, \"\n+                                (\"?k?& is not modified, \"\n                                  & \"could be declared constant!\",\n                                  E1);\n                            end if;\n@@ -1237,15 +1237,15 @@ package body Sem_Warn is\n                              and then not Warnings_Off_E1\n                            then\n                               Output_Reference_Error\n-                                (\"?v?formal parameter& is read but \"\n+                                (\"?f?formal parameter& is read but \"\n                                  & \"never assigned!\");\n                            end if;\n \n                         elsif not Has_Pragma_Unreferenced_Check_Spec (E1)\n                           and then not Warnings_Off_E1\n                         then\n                            Output_Reference_Error\n-                             (\"?v?formal parameter& is not referenced!\");\n+                             (\"?f?formal parameter& is not referenced!\");\n                         end if;\n                      end if;\n \n@@ -2112,7 +2112,7 @@ package body Sem_Warn is\n                      if Entity (Nam) = Pack then\n                         Error_Msg_Qual_Level := 1;\n                         Error_Msg_NE -- CODEFIX\n-                          (\"?no entities of package& are referenced!\",\n+                          (\"?u?no entities of package& are referenced!\",\n                              Nam, Pack);\n                         Error_Msg_Qual_Level := 0;\n                      end if;\n@@ -2309,7 +2309,7 @@ package body Sem_Warn is\n \n                      elsif Has_Visible_Entities (Entity (Name (Item))) then\n                         Error_Msg_N -- CODEFIX\n-                          (\"?unit& is not referenced!\", Name (Item));\n+                          (\"?u?unit& is not referenced!\", Name (Item));\n                      end if;\n                   end if;\n \n@@ -2386,7 +2386,7 @@ package body Sem_Warn is\n                                 Has_Unreferenced (Entity (Name (Item)))\n                               then\n                                  Error_Msg_N -- CODEFIX\n-                                   (\"?no entities of & are referenced!\",\n+                                   (\"?u?no entities of & are referenced!\",\n                                     Name (Item));\n                               end if;\n \n@@ -2402,7 +2402,7 @@ package body Sem_Warn is\n                                 and then not Has_Unreferenced (Pack)\n                               then\n                                  Error_Msg_NE -- CODEFIX\n-                                   (\"?no entities of & are referenced!\",\n+                                   (\"?u?no entities of & are referenced!\",\n                                      Unit_Declaration_Node (Pack),\n                                      Pack);\n                               end if;\n@@ -2452,12 +2452,12 @@ package body Sem_Warn is\n \n                            elsif Unreferenced_In_Spec (Item) then\n                               Error_Msg_N -- CODEFIX\n-                                (\"?unit& is not referenced in spec!\",\n+                                (\"?u?unit& is not referenced in spec!\",\n                                  Name (Item));\n \n                            elsif No_Entities_Ref_In_Spec (Item) then\n                               Error_Msg_N -- CODEFIX\n-                                (\"?no entities of & are referenced in spec!\",\n+                                (\"?u?no entities of & are referenced in spec!\",\n                                  Name (Item));\n \n                            else\n@@ -2470,7 +2470,7 @@ package body Sem_Warn is\n \n                            if not Is_Visible_Renaming then\n                               Error_Msg_N -- CODEFIX\n-                                (\"\\?with clause might be moved to body!\",\n+                                (\"\\?u?with clause might be moved to body!\",\n                                  Name (Item));\n                            end if;\n \n@@ -2498,7 +2498,7 @@ package body Sem_Warn is\n                         Set_Unreferenced_In_Spec (Item);\n                      else\n                         Error_Msg_N -- CODEFIX\n-                          (\"?unit& is never instantiated!\", Name (Item));\n+                          (\"?u?unit& is never instantiated!\", Name (Item));\n                      end if;\n \n                   --  If unit was indeed instantiated, make sure that flag is\n@@ -2507,9 +2507,9 @@ package body Sem_Warn is\n \n                   elsif Unreferenced_In_Spec (Item) then\n                      Error_Msg_N\n-                       (\"?unit& is not instantiated in spec!\", Name (Item));\n+                       (\"?u?unit& is not instantiated in spec!\", Name (Item));\n                      Error_Msg_N -- CODEFIX\n-                       (\"\\?with clause can be moved to body!\", Name (Item));\n+                       (\"\\?u?with clause can be moved to body!\", Name (Item));\n                   end if;\n                end if;\n             end if;\n@@ -2521,9 +2521,7 @@ package body Sem_Warn is\n    --  Start of processing for Check_Unused_Withs\n \n    begin\n-      if not Opt.Check_Withs\n-        or else Operating_Mode = Check_Syntax\n-      then\n+      if not Opt.Check_Withs or else Operating_Mode = Check_Syntax then\n          return;\n       end if;\n \n@@ -2794,9 +2792,9 @@ package body Sem_Warn is\n                if not Is_Trivial_Subprogram (Scope (E1)) then\n                   if Warn_On_Constant then\n                      Error_Msg_N\n-                       (\"?formal parameter & is not modified!\", E1);\n+                       (\"?u?formal parameter & is not modified!\", E1);\n                      Error_Msg_N\n-                       (\"\\?mode could be IN instead of `IN OUT`!\", E1);\n+                       (\"\\?u?mode could be IN instead of `IN OUT`!\", E1);\n \n                      --  We do not generate warnings for IN OUT parameters\n                      --  unless we have at least -gnatwu. This is deliberately\n@@ -2806,7 +2804,7 @@ package body Sem_Warn is\n \n                   elsif Check_Unreferenced then\n                      Error_Msg_N\n-                       (\"?formal parameter& is read but \"\n+                       (\"?u?formal parameter& is read but \"\n                         & \"never assigned!\", E1);\n                   end if;\n                end if;\n@@ -2865,13 +2863,13 @@ package body Sem_Warn is\n       if Nkind (P) = N_With_Clause then\n          if Ekind (E) = E_Package then\n             Error_Msg_NE\n-              (\"?with of obsolescent package& declared#\", N, E);\n+              (\"??with of obsolescent package& declared#\", N, E);\n          elsif Ekind (E) = E_Procedure then\n             Error_Msg_NE\n-              (\"?with of obsolescent procedure& declared#\", N, E);\n+              (\"??with of obsolescent procedure& declared#\", N, E);\n          else\n             Error_Msg_NE\n-              (\"?with of obsolescent function& declared#\", N, E);\n+              (\"??with of obsolescent function& declared#\", N, E);\n          end if;\n \n       --  If we do not have a with clause, then ignore any reference to an\n@@ -2885,51 +2883,49 @@ package body Sem_Warn is\n \n       elsif Nkind (P) = N_Procedure_Call_Statement then\n          Error_Msg_NE\n-           (\"?call to obsolescent procedure& declared#\", N, E);\n+           (\"??call to obsolescent procedure& declared#\", N, E);\n \n       --  Function call\n \n       elsif Nkind (P) = N_Function_Call then\n          Error_Msg_NE\n-           (\"?call to obsolescent function& declared#\", N, E);\n+           (\"??call to obsolescent function& declared#\", N, E);\n \n       --  Reference to obsolescent type\n \n       elsif Is_Type (E) then\n          Error_Msg_NE\n-           (\"?reference to obsolescent type& declared#\", N, E);\n+           (\"??reference to obsolescent type& declared#\", N, E);\n \n       --  Reference to obsolescent component\n \n       elsif Ekind_In (E, E_Component, E_Discriminant) then\n          Error_Msg_NE\n-           (\"?reference to obsolescent component& declared#\", N, E);\n+           (\"??reference to obsolescent component& declared#\", N, E);\n \n       --  Reference to obsolescent variable\n \n       elsif Ekind (E) = E_Variable then\n          Error_Msg_NE\n-           (\"?reference to obsolescent variable& declared#\", N, E);\n+           (\"??reference to obsolescent variable& declared#\", N, E);\n \n       --  Reference to obsolescent constant\n \n-      elsif Ekind (E) = E_Constant\n-        or else Ekind (E) in Named_Kind\n-      then\n+      elsif Ekind (E) = E_Constant or else Ekind (E) in Named_Kind then\n          Error_Msg_NE\n-           (\"?reference to obsolescent constant& declared#\", N, E);\n+           (\"??reference to obsolescent constant& declared#\", N, E);\n \n       --  Reference to obsolescent enumeration literal\n \n       elsif Ekind (E) = E_Enumeration_Literal then\n          Error_Msg_NE\n-           (\"?reference to obsolescent enumeration literal& declared#\", N, E);\n+           (\"??reference to obsolescent enumeration literal& declared#\", N, E);\n \n       --  Generic message for any other case we missed\n \n       else\n          Error_Msg_NE\n-           (\"?reference to obsolescent entity& declared#\", N, E);\n+           (\"??reference to obsolescent entity& declared#\", N, E);\n       end if;\n \n       --  Output additional warning if present\n@@ -2939,7 +2935,7 @@ package body Sem_Warn is\n             String_To_Name_Buffer (Obsolescent_Warnings.Table (J).Msg);\n             Error_Msg_Strlen := Name_Len;\n             Error_Msg_String (1 .. Name_Len) := Name_Buffer (1 .. Name_Len);\n-            Error_Msg_N (\"\\\\?~\", N);\n+            Error_Msg_N (\"\\\\??~\", N);\n             exit;\n          end if;\n       end loop;\n@@ -2993,21 +2989,21 @@ package body Sem_Warn is\n \n             elsif Warnings_Off_Used_Unmodified (E) then\n                Error_Msg_NE\n-                 (\"?could use Unmodified instead of \"\n+                 (\"?W?could use Unmodified instead of \"\n                   & \"Warnings Off for &\", Pragma_Identifier (N), E);\n \n             --  Used only in context where Unreferenced would have worked\n \n             elsif Warnings_Off_Used_Unreferenced (E) then\n                Error_Msg_NE\n-                 (\"?could use Unreferenced instead of \"\n+                 (\"?W?could use Unreferenced instead of \"\n                   & \"Warnings Off for &\", Pragma_Identifier (N), E);\n \n             --  Not used at all\n \n             else\n                Error_Msg_NE\n-                 (\"?pragma Warnings Off for & unused, \"\n+                 (\"?W?pragma Warnings Off for & unused, \"\n                   & \"could be omitted\", N, E);\n             end if;\n          end;\n@@ -3249,16 +3245,16 @@ package body Sem_Warn is\n                     and then Nkind (Cond) /= N_Op_Not\n                   then\n                      Error_Msg_NE\n-                       (\"object & is always True?\", Cond, Original_Node (C));\n+                       (\"object & is always True?c?\", Cond, Original_Node (C));\n                      Track (Original_Node (C), Cond);\n \n                   else\n-                     Error_Msg_N (\"condition is always True?\", Cond);\n+                     Error_Msg_N (\"condition is always True?c?\", Cond);\n                      Track (Cond, Cond);\n                   end if;\n \n                else\n-                  Error_Msg_N (\"condition is always False?\", Cond);\n+                  Error_Msg_N (\"condition is always False?c?\", Cond);\n                   Track (Cond, Cond);\n                end if;\n             end;\n@@ -3388,23 +3384,23 @@ package body Sem_Warn is\n                         then\n                            if Act1 = First_Actual (N) then\n                               Error_Msg_FE\n-                                (\"`IN OUT` prefix overlaps with actual for&?\",\n-                                 Act1, Form);\n+                                (\"`IN OUT` prefix overlaps with \"\n+                                 & \"actual for&?I?\", Act1, Form);\n \n                            else\n                               --  For greater clarity, give name of formal.\n \n                               Error_Msg_Node_2 := Form;\n                               Error_Msg_FE\n-                                (\"writable actual for & overlaps with\"\n-                                  & \"  actual for&?\", Act1, Form);\n+                                (\"writable actual for & overlaps with \"\n+                                  & \"actual for&?I?\", Act1, Form);\n                            end if;\n \n                         else\n                            Error_Msg_Node_2 := Form;\n                            Error_Msg_FE\n                              (\"writable actual for & overlaps with\"\n-                               & \" actual for&?\", Act1, Form1);\n+                               & \" actual for&?I?\", Act1, Form1);\n                         end if;\n                      end;\n                   end if;\n@@ -3514,7 +3510,7 @@ package body Sem_Warn is\n          begin\n             Error_Msg_Uint_1 := Low_Bound;\n             Error_Msg_FE -- CODEFIX\n-              (\"?index for& may assume lower bound of^\", X, Ent);\n+              (\"?w?index for& may assume lower bound of^\", X, Ent);\n          end Warn1;\n \n       --  Start of processing for Test_Suspicious_Index\n@@ -3539,11 +3535,11 @@ package body Sem_Warn is\n             if Nkind (Original_Node (X)) = N_Integer_Literal then\n                if Intval (X) = Low_Bound then\n                   Error_Msg_FE -- CODEFIX\n-                    (\"\\suggested replacement: `&''First`\", X, Ent);\n+                    (\"\\?w?suggested replacement: `&''First`\", X, Ent);\n                else\n                   Error_Msg_Uint_1 := Intval (X) - Low_Bound;\n                   Error_Msg_FE -- CODEFIX\n-                    (\"\\suggested replacement: `&''First + ^`\", X, Ent);\n+                    (\"\\?w?suggested replacement: `&''First + ^`\", X, Ent);\n \n                end if;\n \n@@ -3649,7 +3645,7 @@ package body Sem_Warn is\n                --  Replacement subscript is now in string buffer\n \n                Error_Msg_FE -- CODEFIX\n-                 (\"\\suggested replacement: `&~`\", Original_Node (X), Ent);\n+                 (\"\\?w?suggested replacement: `&~`\", Original_Node (X), Ent);\n             end if;\n \n          --  Case where subscript is of the form X'Length\n@@ -3658,7 +3654,7 @@ package body Sem_Warn is\n             Warn1;\n             Error_Msg_Node_2 := Ent;\n             Error_Msg_FE\n-              (\"\\suggest replacement of `&''Length` by `&''Last`\",\n+              (\"\\?w?suggest replacement of `&''Length` by `&''Last`\",\n                X, Ent);\n \n          --  Case where subscript is of the form X'Length - expression\n@@ -3669,7 +3665,7 @@ package body Sem_Warn is\n             Warn1;\n             Error_Msg_Node_2 := Ent;\n             Error_Msg_FE\n-              (\"\\suggest replacement of `&''Length` by `&''Last`\",\n+              (\"\\?w?suggest replacement of `&''Length` by `&''Last`\",\n                Left_Opnd (X), Ent);\n          end if;\n       end Test_Suspicious_Index;\n@@ -3797,7 +3793,7 @@ package body Sem_Warn is\n                   then\n                      if not Has_Pragma_Unmodified_Check_Spec (E) then\n                         Error_Msg_N -- CODEFIX\n-                          (\"?variable & is assigned but never read!\", E);\n+                          (\"?u?variable & is assigned but never read!\", E);\n                      end if;\n \n                      Set_Last_Assignment (E, Empty);\n@@ -3821,10 +3817,10 @@ package body Sem_Warn is\n                        and then Comes_From_Source (Renamed_Object (E))\n                      then\n                         Error_Msg_N -- CODEFIX\n-                          (\"?renamed variable & is not referenced!\", E);\n+                          (\"?u?renamed variable & is not referenced!\", E);\n                      else\n                         Error_Msg_N -- CODEFIX\n-                          (\"?variable & is not referenced!\", E);\n+                          (\"?u?variable & is not referenced!\", E);\n                      end if;\n                   end if;\n                end if;\n@@ -3834,10 +3830,10 @@ package body Sem_Warn is\n                  and then Comes_From_Source (Renamed_Object (E))\n                then\n                   Error_Msg_N -- CODEFIX\n-                    (\"?renamed constant & is not referenced!\", E);\n+                    (\"?u?renamed constant & is not referenced!\", E);\n                else\n                   Error_Msg_N -- CODEFIX\n-                    (\"?constant & is not referenced!\", E);\n+                    (\"?u?constant & is not referenced!\", E);\n                end if;\n \n             when E_In_Parameter     |\n@@ -3846,8 +3842,8 @@ package body Sem_Warn is\n                --  Do not emit message for formals of a renaming, because\n                --  they are never referenced explicitly.\n \n-               if Nkind (Original_Node (Unit_Declaration_Node (Scope (E))))\n-                 /= N_Subprogram_Renaming_Declaration\n+               if Nkind (Original_Node (Unit_Declaration_Node (Scope (E)))) /=\n+                                          N_Subprogram_Renaming_Declaration\n                then\n                   --  Suppress this message for an IN OUT parameter of a\n                   --  non-scalar type, since it is normal to have only an\n@@ -3863,7 +3859,7 @@ package body Sem_Warn is\n \n                      if not Is_Trivial_Subprogram (Scope (E)) then\n                         Error_Msg_NE -- CODEFIX\n-                          (\"?formal parameter & is not referenced!\",\n+                          (\"?u?formal parameter & is not referenced!\",\n                            E, Spec_E);\n                      end if;\n                   end if;\n@@ -3873,56 +3869,56 @@ package body Sem_Warn is\n                null;\n \n             when E_Discriminant =>\n-               Error_Msg_N (\"?discriminant & is not referenced!\", E);\n+               Error_Msg_N (\"?u?discriminant & is not referenced!\", E);\n \n             when E_Named_Integer |\n                  E_Named_Real    =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?named number & is not referenced!\", E);\n+                 (\"?u?named number & is not referenced!\", E);\n \n             when Formal_Object_Kind =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?formal object & is not referenced!\", E);\n+                 (\"?u?formal object & is not referenced!\", E);\n \n             when E_Enumeration_Literal =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?literal & is not referenced!\", E);\n+                 (\"?u?literal & is not referenced!\", E);\n \n             when E_Function =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?function & is not referenced!\", E);\n+                 (\"?u?function & is not referenced!\", E);\n \n             when E_Procedure =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?procedure & is not referenced!\", E);\n+                 (\"?u?procedure & is not referenced!\", E);\n \n             when E_Package =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?package & is not referenced!\", E);\n+                 (\"?u?package & is not referenced!\", E);\n \n             when E_Exception =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?exception & is not referenced!\", E);\n+                 (\"?u?exception & is not referenced!\", E);\n \n             when E_Label =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?label & is not referenced!\", E);\n+                 (\"?u?label & is not referenced!\", E);\n \n             when E_Generic_Procedure =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?generic procedure & is never instantiated!\", E);\n+                 (\"?u?generic procedure & is never instantiated!\", E);\n \n             when E_Generic_Function =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?generic function & is never instantiated!\", E);\n+                 (\"?u?generic function & is never instantiated!\", E);\n \n             when Type_Kind =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?type & is not referenced!\", E);\n+                 (\"?u?type & is not referenced!\", E);\n \n             when others =>\n                Error_Msg_N -- CODEFIX\n-                 (\"?& is not referenced!\", E);\n+                 (\"?u?& is not referenced!\", E);\n          end case;\n \n          --  Kill warnings on the entity on which the message has been posted\n@@ -4024,12 +4020,12 @@ package body Sem_Warn is\n                                                   N_Parameter_Association)\n                         then\n                            Error_Msg_NE\n-                             (\"?& modified by call, but value never \"\n+                             (\"?m?& modified by call, but value never \"\n                               & \"referenced\", LA, Ent);\n \n                         else\n                            Error_Msg_NE -- CODEFIX\n-                             (\"?useless assignment to&, value never \"\n+                             (\"?m?useless assignment to&, value never \"\n                               & \"referenced!\", LA, Ent);\n                         end if;\n                      end if;\n@@ -4051,11 +4047,11 @@ package body Sem_Warn is\n                                                N_Parameter_Association)\n                      then\n                         Error_Msg_NE\n-                          (\"?& modified by call, but value overwritten #!\",\n+                          (\"?m?& modified by call, but value overwritten #!\",\n                            LA, Ent);\n                      else\n                         Error_Msg_NE -- CODEFIX\n-                          (\"?useless assignment to&, value overwritten #!\",\n+                          (\"?m?useless assignment to&, value overwritten #!\",\n                            LA, Ent);\n                      end if;\n                   end;"}, {"sha": "64a7cdb68b4079fdf3af186d75949537ebb8e0a1", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -668,7 +668,7 @@ package body Sinput.L is\n \n                         if not Status then\n                            Errout.Error_Msg\n-                             (\"?could not write processed file \"\"\" &\n+                             (\"??could not write processed file \"\"\" &\n                               Name_Buffer (1 .. Name_Len) & '\"',\n                               Lo);\n                         end if;"}, {"sha": "45983e9511467db3e66a8f15cb1f5a594947066f", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685bc70fd8dfd17fa62266c2ad05567b37540119/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=685bc70fd8dfd17fa62266c2ad05567b37540119", "patch": "@@ -44,12 +44,13 @@ package Warnsw is\n    Warn_On_Overridden_Size : Boolean := False;\n    --  Warn when explicit record component clause or array component_size\n    --  clause specifies a size that overrides a size for the typen which was\n-   --  set with an explicit size clause. Off by default, set by -gnatw.s (but\n-   --  not -gnatwa).\n+   --  set with an explicit size clause. Off by default, modified by use of\n+   --  -gnatw.s/.S, but not set by -gnatwa.\n \n    Warn_On_Standard_Redefinition : Boolean := False;\n    --  Warn when a program defines an identifier that matches a name in\n-   --  Standard. Off by default, set by -gnatw.k (and also by -gnatwa).\n+   --  Standard. Off by default, modified by use of -gnatw.k/.K, but not\n+   --  affected by -gnatwa.\n \n    -----------------\n    -- Subprograms --"}]}