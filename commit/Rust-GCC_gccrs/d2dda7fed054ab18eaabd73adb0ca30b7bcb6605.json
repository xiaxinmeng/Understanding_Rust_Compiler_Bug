{"sha": "d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkZGE3ZmVkMDU0YWIxOGVhYWJkNzNhZGIwY2EzMGI3YmNiNjYwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-12-03T23:06:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-12-03T23:06:55Z"}, "message": "omp-low.c (lookup_decl_in_outer_ctx): Allow calling this with !ctx->is_nested.\n\n\t* omp-low.c (lookup_decl_in_outer_ctx): Allow calling this\n\twith !ctx->is_nested.\n\t(maybe_lookup_decl_in_outer_ctx): Look up in outer contexts\n\teven if !ctx->is_nested.\n\t(lower_copyprivate_clauses, lower_send_clauses,\n\tlower_send_shared_vars): Call lookup_decl_in_outer_ctx\n\tunconditionally.\n\n\t* testsuite/libgomp.c/private-1.c: New test.\n\nFrom-SVN: r130590", "tree": {"sha": "29377c3f249eb97a42a6b0e5ab3ed8a3948909b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29377c3f249eb97a42a6b0e5ab3ed8a3948909b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22164c3db7653556de1044be9491034c1c40bf8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22164c3db7653556de1044be9491034c1c40bf8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22164c3db7653556de1044be9491034c1c40bf8e"}], "stats": {"total": 87, "additions": 73, "deletions": 14}, "files": [{"sha": "3994e5421c669bfe8f21e4bdb99b865ac5d58712", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "patch": "@@ -1,5 +1,13 @@\n 2007-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* omp-low.c (lookup_decl_in_outer_ctx): Allow calling this\n+\twith !ctx->is_nested.\n+\t(maybe_lookup_decl_in_outer_ctx): Look up in outer contexts\n+\teven if !ctx->is_nested.\n+\t(lower_copyprivate_clauses, lower_send_clauses,\n+\tlower_send_shared_vars): Call lookup_decl_in_outer_ctx\n+\tunconditionally.\n+\n \tPR middle-end/29749\n \t* fold-const.c (fold_binary) <case BIT_AND_EXPR>: Optimize\n \t(X << C1) & C2 into (X << C1) & (C2 | ((1 << C1) - 1))"}, {"sha": "420e7553f51b3fb89987e0e2627421a6f78699b9", "filename": "gcc/omp-low.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "patch": "@@ -1518,12 +1518,10 @@ lookup_decl_in_outer_ctx (tree decl, omp_context *ctx)\n   tree t;\n   omp_context *up;\n \n-  gcc_assert (ctx->is_nested);\n-\n   for (up = ctx->outer, t = NULL; up && t == NULL; up = up->outer)\n     t = maybe_lookup_decl (decl, up);\n \n-  gcc_assert (t || is_global_var (decl));\n+  gcc_assert (!ctx->is_nested || t || is_global_var (decl));\n \n   return t ? t : decl;\n }\n@@ -1538,9 +1536,8 @@ maybe_lookup_decl_in_outer_ctx (tree decl, omp_context *ctx)\n   tree t = NULL;\n   omp_context *up;\n \n-  if (ctx->is_nested)\n-    for (up = ctx->outer, t = NULL; up && t == NULL; up = up->outer)\n-      t = maybe_lookup_decl (decl, up);\n+  for (up = ctx->outer, t = NULL; up && t == NULL; up = up->outer)\n+    t = maybe_lookup_decl (decl, up);\n \n   return t ? t : decl;\n }\n@@ -2012,7 +2009,7 @@ lower_copyprivate_clauses (tree clauses, tree *slist, tree *rlist,\n       by_ref = use_pointer_for_field (var, false);\n \n       ref = build_sender_ref (var, ctx);\n-      x = (ctx->is_nested) ? lookup_decl_in_outer_ctx (var, ctx) : var;\n+      x = lookup_decl_in_outer_ctx (var, ctx);\n       x = by_ref ? build_fold_addr_expr (x) : x;\n       x = build_gimple_modify_stmt (ref, x);\n       gimplify_and_add (x, slist);\n@@ -2053,9 +2050,8 @@ lower_send_clauses (tree clauses, tree *ilist, tree *olist, omp_context *ctx)\n \t  continue;\n \t}\n \n-      var = val = OMP_CLAUSE_DECL (c);\n-      if (ctx->is_nested)\n-\tvar = lookup_decl_in_outer_ctx (val, ctx);\n+      val = OMP_CLAUSE_DECL (c);\n+      var = lookup_decl_in_outer_ctx (val, ctx);\n \n       if (OMP_CLAUSE_CODE (c) != OMP_CLAUSE_COPYIN\n \t  && is_global_var (var))\n@@ -2127,13 +2123,10 @@ lower_send_shared_vars (tree *ilist, tree *olist, omp_context *ctx)\n       if (!nvar || !DECL_HAS_VALUE_EXPR_P (nvar))\n \tcontinue;\n \n-      var = ovar;\n-\n       /* If CTX is a nested parallel directive.  Find the immediately\n \t enclosing parallel or workshare construct that contains a\n \t mapping for OVAR.  */\n-      if (ctx->is_nested)\n-\tvar = lookup_decl_in_outer_ctx (ovar, ctx);\n+      var = lookup_decl_in_outer_ctx (ovar, ctx);\n \n       if (use_pointer_for_field (ovar, true))\n \t{"}, {"sha": "76293bdd8ced8b7c2ce8cc67eb1210f263361b86", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "patch": "@@ -1,3 +1,7 @@\n+2007-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c/private-1.c: New test.\n+\n 2007-11-29  Andris Pavenis <andris.pavenis@iki.fi>\n \t    Paolo Bonzini  <bonzini@gnu.org>\n "}, {"sha": "1d3659b25fa3acf66e3d0576cf30cb62918ea976", "filename": "libgomp/testsuite/libgomp.c/private-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/libgomp%2Ftestsuite%2Flibgomp.c%2Fprivate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2dda7fed054ab18eaabd73adb0ca30b7bcb6605/libgomp%2Ftestsuite%2Flibgomp.c%2Fprivate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fprivate-1.c?ref=d2dda7fed054ab18eaabd73adb0ca30b7bcb6605", "patch": "@@ -0,0 +1,54 @@\n+extern void abort (void);\n+\n+int a = 18;\n+\n+void\n+f1 (int i, int j, int k)\n+{\n+  int l = 6, m = 7, n = 8;\n+#pragma omp parallel private(j, m) shared(k, n) firstprivate(i, l) \\\n+\t    num_threads(1)\n+  {\n+    j = 6;\n+    m = 5;\n+    if (++a != 19 || ++i != 9 || j != 6 || ++l != 7 || m != 5 || ++n != 9)\n+      #pragma omp atomic\n+\tk++;\n+  }\n+  if (a != 19 || i != 8 || j != 26 || k != 0 || l != 6 || m != 7 || n != 9)\n+    abort ();\n+}\n+\n+int v1 = 1, v2 = 2, v5 = 5;\n+int err;\n+\n+void\n+f2 (void)\n+{\n+  int v3 = 3;\n+#pragma omp sections private (v1) firstprivate (v2)\n+  {\n+  #pragma omp section\n+    {\n+      int v4 = 4;\n+      v1 = 7;\n+      #pragma omp parallel num_threads(1) firstprivate(v1, v2, v3, v4)\n+\t{\n+\t  if (++v1 != 8 || ++v2 != 3 || ++v3 != 4 || ++v4 != 5 || ++v5 != 6)\n+\t    err = 1;\n+\t}\n+      if (v1 != 7 || v2 != 2 || v3 != 3 || v4 != 4 || v5 != 6)\n+\tabort ();\n+      if (err)\n+\tabort ();\n+    }\n+  }\n+}\n+\n+int\n+main (void)\n+{\n+  f1 (8, 26, 0);\n+  f2 ();\n+  return 0;\n+}"}]}