{"sha": "2b9d5ad7df2f309a7835e7023d794afe492edfa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI5ZDVhZDdkZjJmMzA5YTc4MzVlNzAyM2Q3OTRhZmU0OTJlZGZhMg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2012-07-06T11:37:36Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2012-07-06T11:37:36Z"}, "message": "re PR debug/53820 (ICE in vt_expand_var_loc_chain, at var-tracking.c:8029)\n\nPR debug/53820\n* var-tracking.c (vt_add_function_parameter): Convert\ninternal_arg_pointer into arg_pointer-based address even\nwithout DRAP.\n\nFrom-SVN: r189326", "tree": {"sha": "9fcc811f111eb60cad9a818816d0cece2a9ef7ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fcc811f111eb60cad9a818816d0cece2a9ef7ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b9d5ad7df2f309a7835e7023d794afe492edfa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b9d5ad7df2f309a7835e7023d794afe492edfa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b9d5ad7df2f309a7835e7023d794afe492edfa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b9d5ad7df2f309a7835e7023d794afe492edfa2/comments", "author": null, "committer": null, "parents": [{"sha": "fe8fb1c4c0c8793ffeb30cc470bfefcf4d13bfb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8fb1c4c0c8793ffeb30cc470bfefcf4d13bfb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8fb1c4c0c8793ffeb30cc470bfefcf4d13bfb4"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "9ccc668db32a54fc52c3b3e5235e4735d7ab656b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9d5ad7df2f309a7835e7023d794afe492edfa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9d5ad7df2f309a7835e7023d794afe492edfa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b9d5ad7df2f309a7835e7023d794afe492edfa2", "patch": "@@ -1,3 +1,10 @@\n+2012-07-06  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/53820\n+\t* var-tracking.c (vt_add_function_parameter): Convert\n+\tinternal_arg_pointer into arg_pointer-based address even\n+\twithout DRAP.\n+\n 2012-07-06  Alexandre Oilva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/53827"}, {"sha": "5288c284227bb27f7b1c8351c1de5984552b680b", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b9d5ad7df2f309a7835e7023d794afe492edfa2/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b9d5ad7df2f309a7835e7023d794afe492edfa2/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=2b9d5ad7df2f309a7835e7023d794afe492edfa2", "patch": "@@ -9327,14 +9327,11 @@ vt_add_function_parameter (tree parm)\n   if (GET_MODE (decl_rtl) == BLKmode || GET_MODE (incoming) == BLKmode)\n     return;\n \n-  /* If there is a DRAP register, rewrite the incoming location of parameters\n-     passed on the stack into MEMs based on the argument pointer, as the DRAP\n-     register can be reused for other purposes and we do not track locations\n-     based on generic registers.  But the prerequisite is that this argument\n-     pointer be also the virtual CFA pointer, see vt_initialize.  */\n+  /* If there is a DRAP register or a pseudo in internal_arg_pointer,\n+     rewrite the incoming location of parameters passed on the stack\n+     into MEMs based on the argument pointer, so that incoming doesn't\n+     depend on a pseudo.  */\n   if (MEM_P (incoming)\n-      && stack_realign_drap\n-      && arg_pointer_rtx == cfa_base_rtx\n       && (XEXP (incoming, 0) == crtl->args.internal_arg_pointer\n \t  || (GET_CODE (XEXP (incoming, 0)) == PLUS\n \t      && XEXP (XEXP (incoming, 0), 0)"}]}