{"sha": "dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1ZDRlZmJjZTNlNjU4N2IzMWRhOGQ2ZDFjNTAyYWVhODBhY2ZjYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-02-01T03:48:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-02-01T03:48:52Z"}, "message": "fold-const.c (fold, [...]): Do not lose side effects when optimizing 0 % X.\n\n\n\t* fold-const.c (fold, case CEIL_MOD_EXPR): Do not lose side\n\teffects when optimizing 0 % X.  Do not try to optimize X % 0.\n\n\t* gcc.c-torture/execute/20050131-1.c: New test.\n\t* gcc.dg/wcaselabel.c: New test.\n\nFrom-SVN: r94516", "tree": {"sha": "156482e0e2154f02927d2baaf5e214e13f2ba2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/156482e0e2154f02927d2baaf5e214e13f2ba2d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/comments", "author": null, "committer": null, "parents": [{"sha": "3dcec1e9e797af50ef38718cf19e0742e1c6a96a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dcec1e9e797af50ef38718cf19e0742e1c6a96a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dcec1e9e797af50ef38718cf19e0742e1c6a96a"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "5320b6dffa6335c08d8c207dce62595df1a13585", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "patch": "@@ -1,3 +1,8 @@\n+2005-01-31  Jeff Law  <law@redhat.com>\n+\n+        * fold-const.c (fold, case CEIL_MOD_EXPR): Do not lose side\n+        effects when optimizing 0 % X.  Do not try to optimize X % 0.\n+\n 2005-01-31  James E. Wilson  <wilson@specifixinc.com>\n \n \t* config/ia64/itanium1.md (1_scall bypass): Change 2_mmalua to"}, {"sha": "22857428a5c575c890ee705240db561a093d35eb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "patch": "@@ -7938,12 +7938,21 @@ fold (tree expr)\n     case FLOOR_MOD_EXPR:\n     case ROUND_MOD_EXPR:\n     case TRUNC_MOD_EXPR:\n-      /* 0 % X is always zero as is X % 1.  */\n-      if (integer_zerop (arg0) || integer_onep (arg1))\n+      /* X % 1 is always zero, but be sure to preserve any side\n+\t effects in X.  */\n+      if (integer_onep (arg1))\n \treturn omit_one_operand (type, integer_zero_node, arg0);\n+\n+      /* X % 0, return X % 0 unchanged so that we can get the\n+\t proper warnings and errors.  */\n       if (integer_zerop (arg1))\n \treturn t;\n \n+      /* 0 % X is always zero, but be sure to preserve any side\n+\t effects in X.  Place this after checking for X == 0.  */\n+      if (integer_zerop (arg0))\n+\treturn omit_one_operand (type, integer_zero_node, arg1);\n+\n       /* X % -1 is zero.  */\n       if (!TYPE_UNSIGNED (type)\n \t  && TREE_CODE (arg1) == INTEGER_CST"}, {"sha": "b697d41120d42236f283a76aebd3fa8410cee0d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "patch": "@@ -1,3 +1,8 @@\n+2005-01-31  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.c-torture/execute/20050131-1.c: New test.\n+\t* gcc.dg/wcaselabel.c: New test.\n+\n 2005-01-31  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/other/warning1.C: Adjust error messags."}, {"sha": "9fae91181d5be69f9fa9fd457887a21b7c4a3841", "filename": "gcc/testsuite/gcc.c-torture/execute/20050131-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050131-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050131-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050131-1.c?ref=dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "patch": "@@ -0,0 +1,18 @@\n+/* Verify that we do not lose side effects on a MOD expression.  */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+int\n+foo (int a)\n+{\n+  int x = 0 % a++;\n+  return a;\n+}\n+\n+main()\n+{\n+  if (foo (9) != 10)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "6f673dfaf690716f5c9604552fda78d6f3887dea", "filename": "gcc/testsuite/gcc.dg/wcaselabel-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ftestsuite%2Fgcc.dg%2Fwcaselabel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5d4efbce3e6587b31da8d6d1c502aea80acfcc/gcc%2Ftestsuite%2Fgcc.dg%2Fwcaselabel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwcaselabel-1.c?ref=dc5d4efbce3e6587b31da8d6d1c502aea80acfcc", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-w\" } */\n+\n+\n+int foo(int x)\n+{\n+  switch(x)\n+  {\n+\n+  case 0 % 0:\t /* { dg-error \"case label does not reduce to an integer constant\" } */\n+    return 1;\n+  default:\n+    return 2;\n+  }\n+}"}]}