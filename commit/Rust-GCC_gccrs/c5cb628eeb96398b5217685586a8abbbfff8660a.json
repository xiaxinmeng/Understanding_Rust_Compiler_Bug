{"sha": "c5cb628eeb96398b5217685586a8abbbfff8660a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVjYjYyOGVlYjk2Mzk4YjUyMTc2ODU1ODZhOGFiYmJmZmY4NjYwYQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-09-27T13:38:55Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-09-27T13:38:55Z"}, "message": "[ARM] Fix -Wimplicit-fallthrough warnings\n\n\t* config/arm/arm.c (const_ok_for_op): Use \"Fall through\" comment form\n\texpected by -Wimplicit-fallthrough.\n\t(thumb1_size_rtx_costs): Likewise.\n\t(thumb2_reorg): Likewise.\n\t(tls_mentioned_p): Add \"Fall through\" comment.\n\t(thumb2_reorg): Likewise.\n\t* config/arm/arm-builtins.c (arm_expand_neon_args): Use \"Fall through\"\n\tcomment form expected by -Wimplicit-fallthrough.\n\nFrom-SVN: r240537", "tree": {"sha": "b2a720c814c9d5e1350ce499abd89bc28fb25f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2a720c814c9d5e1350ce499abd89bc28fb25f06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5cb628eeb96398b5217685586a8abbbfff8660a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5cb628eeb96398b5217685586a8abbbfff8660a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5cb628eeb96398b5217685586a8abbbfff8660a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5cb628eeb96398b5217685586a8abbbfff8660a/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bebe00865b2220d5422a461da9ba00dd996faed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebe00865b2220d5422a461da9ba00dd996faed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebe00865b2220d5422a461da9ba00dd996faed6"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "374a0841b7d3af64606e121d5963dcf3bf168433", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cb628eeb96398b5217685586a8abbbfff8660a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cb628eeb96398b5217685586a8abbbfff8660a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5cb628eeb96398b5217685586a8abbbfff8660a", "patch": "@@ -1,3 +1,14 @@\n+2016-09-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (const_ok_for_op): Use \"Fall through\" comment form\n+\texpected by -Wimplicit-fallthrough.\n+\t(thumb1_size_rtx_costs): Likewise.\n+\t(thumb2_reorg): Likewise.\n+\t(tls_mentioned_p): Add \"Fall through\" comment.\n+\t(thumb2_reorg): Likewise.\n+\t* config/arm/arm-builtins.c (arm_expand_neon_args): Use \"Fall through\"\n+\tcomment form expected by -Wimplicit-fallthrough.\n+\n 2016-09-27  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/46266"}, {"sha": "4fafefc4050a94ff8da0d214dcdbc046890fe927", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cb628eeb96398b5217685586a8abbbfff8660a/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cb628eeb96398b5217685586a8abbbfff8660a/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=c5cb628eeb96398b5217685586a8abbbfff8660a", "patch": "@@ -2153,9 +2153,9 @@ arm_expand_neon_args (rtx target, machine_mode map_mode, int fcode,\n \t\t  enum machine_mode vmode = mode[argc - 1];\n \t\t  neon_lane_bounds (op[argc], 0, GET_MODE_NUNITS (vmode), exp);\n \t\t}\n-\t      /* Fall through - if the lane index isn't a constant then\n-\t\t the next case will error.  */\n-\n+\t      /* If the lane index isn't a constant then the next\n+\t\t case will error.  */\n+\t      /* Fall through.  */\n \t    case NEON_ARG_CONSTANT:\n constant_arg:\n \t      if (!(*insn_data[icode].operand[opno].predicate)"}, {"sha": "705fa0078f0d9e9931c9edb61f04cd5ab9228cf4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cb628eeb96398b5217685586a8abbbfff8660a/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cb628eeb96398b5217685586a8abbbfff8660a/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c5cb628eeb96398b5217685586a8abbbfff8660a", "patch": "@@ -4001,8 +4001,7 @@ const_ok_for_op (HOST_WIDE_INT i, enum rtx_code code)\n \t  && ((i & 0xfffff000) == 0\n \t      || ((-i) & 0xfffff000) == 0))\n \treturn 1;\n-      /* else fall through.  */\n-\n+      /* Fall through.  */\n     case COMPARE:\n     case EQ:\n     case NE:\n@@ -9129,7 +9128,7 @@ thumb1_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n \t  || (GET_CODE (XEXP (x, 1)) == MULT\n \t      && power_of_two_operand (XEXP (XEXP (x, 1), 1), SImode)))\n \treturn COSTS_N_INSNS (2);\n-      /* On purpose fall through for normal RTX.  */\n+      /* Fall through.  */\n     case COMPARE:\n     case NEG:\n     case NOT:\n@@ -13371,6 +13370,7 @@ tls_mentioned_p (rtx x)\n       if (XINT (x, 1) == UNSPEC_TLS)\n \treturn 1;\n \n+    /* Fall through.  */\n     default:\n       return 0;\n     }\n@@ -17568,7 +17568,7 @@ thumb2_reorg (void)\n \t\t\t test the global flag here.  */\n \t\t      if (!optimize_size)\n \t\t\tbreak;\n-\t\t      /* else fall through.  */\n+\t\t      /* Fall through.  */\n \t\t    case AND:\n \t\t    case IOR:\n \t\t    case XOR:"}]}