{"sha": "3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UzOTcwYTI3NjExZDZjZjJjNWQ4Y2ZhYTczZTllMTdmMzhiNTMwYw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-07-17T09:20:51Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-07-17T09:20:51Z"}, "message": "c-typeck.c (parser_build_binary_op): Condition warnings for X<=Y<=Z on -Wparentheses instead of -Wextra.\n\n\t* c-typeck.c (parser_build_binary_op): Condition warnings for\n\tX<=Y<=Z on -Wparentheses instead of -Wextra.\n\t* doc/invoke.texi: Update.  Document that most of -Wparentheses is\n\tsupported for C only.\n\ntestsuite:\n\t* gcc.dg/Wparentheses-2.c, gcc.dg/Wparentheses-3.c,\n\tgcc.dg/Wparentheses-4.c, Wparentheses-5.c, Wparentheses-6.c,\n\tWparentheses-7.c, Wparentheses-8.c, Wparentheses-9.c: New tests.\n\nFrom-SVN: r84860", "tree": {"sha": "e4dd6ebe816e96ed4438c19008d235f68f8c19fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4dd6ebe816e96ed4438c19008d235f68f8c19fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10c383a4be1ee140d5387bb0448ffb160e97896d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c383a4be1ee140d5387bb0448ffb160e97896d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c383a4be1ee140d5387bb0448ffb160e97896d"}], "stats": {"total": 694, "additions": 683, "deletions": 11}, "files": [{"sha": "6e902afd7ad7918bd344d99d982a1ee2b959d467", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -1,3 +1,10 @@\n+2004-07-17  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* c-typeck.c (parser_build_binary_op): Condition warnings for\n+\tX<=Y<=Z on -Wparentheses instead of -Wextra.\n+\t* doc/invoke.texi: Update.  Document that most of -Wparentheses is\n+\tsupported for C only.\n+\n 2004-07-17  Steven Bosscher  <stevenb@suse.de>\n \n \t* cfgcleanup.c (try_simplify_condjump): Don't remove line"}, {"sha": "4befd126f0859f2d633b73c2d7722f635182bb6a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -2170,12 +2170,13 @@ parser_build_binary_op (enum tree_code code, tree arg1, tree arg2)\n \t  if (TREE_CODE_CLASS (code1) == '<' || TREE_CODE_CLASS (code2) == '<')\n \t    warning (\"suggest parentheses around comparison in operand of &\");\n \t}\n-    }\n+      /* Similarly, check for cases like 1<=i<=10 that are probably errors.  */\n+      if (TREE_CODE_CLASS (code) == '<'\n+\t  && (TREE_CODE_CLASS (code1) == '<'\n+\t      || TREE_CODE_CLASS (code2) == '<'))\n+\twarning (\"comparisons like X<=Y<=Z do not have their mathematical meaning\");\n \n-  /* Similarly, check for cases like 1<=i<=10 that are probably errors.  */\n-  if (TREE_CODE_CLASS (code) == '<' && extra_warnings\n-      && (TREE_CODE_CLASS (code1) == '<' || TREE_CODE_CLASS (code2) == '<'))\n-    warning (\"comparisons like X<=Y<=Z do not have their mathematical meaning\");\n+    }\n \n   unsigned_conversion_warning (result, arg1);\n   unsigned_conversion_warning (result, arg2);"}, {"sha": "14f756b1c4dc0bb6530ddce1baa63d9c0539e8db", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -2250,7 +2250,13 @@ Warn if a user-supplied include directory does not exist.\n Warn if parentheses are omitted in certain contexts, such\n as when there is an assignment in a context where a truth value\n is expected, or when operators are nested whose precedence people\n-often get confused about.\n+often get confused about.  Only the warning for an assignment used as\n+a truth value is supported when compiling C++; the other warnings are\n+only supported when compiling C@.\n+\n+Also warn if a comparison like @samp{x<=y<=z} appears; this is\n+equivalent to @samp{(x<=y ? 1 : 0) <= z}, which is a different\n+interpretation from that of ordinary mathematical notation.\n \n Also warn about constructions where there may be confusion to which\n @code{if} statement an @code{else} branch belongs.  Here is an example of\n@@ -2568,11 +2574,6 @@ but @samp{x[(void)i,j]} will not.\n @item\n An unsigned value is compared against zero with @samp{<} or @samp{>=}.\n \n-@item\n-A comparison like @samp{x<=y<=z} appears; this is equivalent to\n-@samp{(x<=y ? 1 : 0) <= z}, which is a different interpretation from\n-that of ordinary mathematical notation.\n-\n @item\n Storage-class specifiers like @code{static} are not the first things in\n a declaration.  According to the C Standard, this usage is obsolescent."}, {"sha": "d2c90e29f9901c15cbea48289ce2767b292d38b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -1,3 +1,9 @@\n+2004-07-17  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* gcc.dg/Wparentheses-2.c, gcc.dg/Wparentheses-3.c,\n+\tgcc.dg/Wparentheses-4.c, Wparentheses-5.c, Wparentheses-6.c,\n+\tWparentheses-7.c, Wparentheses-8.c, Wparentheses-9.c: New tests.\n+\n 2004-07-16  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.c-torture/compile/20020210-1.c: Remove XFAIL."}, {"sha": "e4110a8ceed97983f4283f40adea160808bacabc", "filename": "gcc/testsuite/gcc.dg/Wparentheses-2.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-2.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,67 @@\n+/* Test operation of -Wparentheses.  Warnings for X<=Y<=Z should be\n+   there rather than hidden in -Wextra.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  foo (a <= b <= c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((a <= b) <= c);\n+  foo (a <= (b <= c));\n+  foo (1 <= 2 <= c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 <= 2) <= c);\n+  foo (1 <= (2 <= c));\n+  foo (1 <= 2 <= 3); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 <= 2) <= 3);\n+  foo (1 <= (2 <= 3));\n+  foo (a > b > c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((a > b) > c);\n+  foo (a > (b > c));\n+  foo (1 > 2 > c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 > 2) > c);\n+  foo (1 > (2 > c));\n+  foo (1 > 2 > 3); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 > 2) > 3);\n+  foo (1 > (2 > 3));\n+  foo (a < b <= c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((a < b) <= c);\n+  foo (a < (b <= c));\n+  foo (1 < 2 <= c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 < 2) <= c);\n+  foo (1 < (2 <= c));\n+  foo (1 < 2 <= 3); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 < 2) <= 3);\n+  foo (1 < (2 <= 3));\n+  foo (a <= b > c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((a <= b) > c);\n+  foo (a <= (b > c));\n+  foo (1 <= 2 > c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 <= 2) > c);\n+  foo (1 <= (2 > c));\n+  foo (1 <= 2 > 3); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 <= 2) > 3);\n+  foo (1 <= (2 > 3));\n+  foo (a <= b == c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((a <= b) == c);\n+  foo (a <= (b == c));\n+  foo (1 <= 2 == c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 <= 2) == c);\n+  foo (1 <= (2 == c));\n+  foo (1 <= 2 == 3); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 <= 2) == 3);\n+  foo (1 <= (2 == 3));\n+  foo (a != b != c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((a != b) != c);\n+  foo (a != (b != c));\n+  foo (1 != 2 != c); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 != 2) != c);\n+  foo (1 != (2 != c));\n+  foo (1 != 2 != 3); /* { dg-warning \"comparison\" \"correct warning\" } */\n+  foo ((1 != 2) != 3);\n+  foo (1 != (2 != 3));\n+}"}, {"sha": "64899887c389e4afe78d7e2fc573ad301068448b", "filename": "gcc/testsuite/gcc.dg/Wparentheses-3.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-3.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,68 @@\n+/* Test operation of -Wparentheses.  Warnings for assignments used as\n+   truth-values.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses -std=gnu99\" } */\n+\n+int foo (int);\n+\n+int a, b, c;\n+_Bool d;\n+\n+int\n+bar (void)\n+{\n+  if (a = b) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (0);\n+  if ((a = b))\n+    foo (1);\n+  if (a = a) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (2);\n+  if ((a = a))\n+    foo (3);\n+  if (b = c) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (4);\n+  else\n+    foo (5);\n+  if ((b = c))\n+    foo (6);\n+  else\n+    foo (7);\n+  if (b = b) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (8);\n+  else\n+    foo (9);\n+  if ((b = b))\n+    foo (10);\n+  else\n+    foo (11);\n+  while (c = b) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (12);\n+  while ((c = b))\n+    foo (13);\n+  while (c = c) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (14);\n+  while ((c = c))\n+    foo (15);\n+  do foo (16); while (a = b); /* { dg-warning \"assignment\" \"correct warning\" } */\n+  do foo (17); while ((a = b));\n+  do foo (18); while (a = a); /* { dg-warning \"assignment\" \"correct warning\" } */\n+  do foo (19); while ((a = a));\n+  for (;c = b;) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (20);\n+  for (;(c = b);)\n+    foo (21);\n+  for (;c = c;) /* { dg-warning \"assignment\" \"correct warning\" } */\n+    foo (22);\n+  for (;(c = c);)\n+    foo (23);\n+  d = a = b; /* { dg-warning \"assignment\" \"correct warning\" } */\n+  foo (24);\n+  d = (a = b);\n+  foo (25);\n+  d = a = a; /* { dg-warning \"assignment\" \"correct warning\" } */\n+  foo (26);\n+  d = (a = a);\n+  foo (27);\n+}"}, {"sha": "dfc9d1008efc3212f6da6343fa405430cb2cc194", "filename": "gcc/testsuite/gcc.dg/Wparentheses-4.c", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-4.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,85 @@\n+/* Test operation of -Wparentheses.  Precedence warnings.  + or -\n+   inside shift.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  foo (a + b << c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a + b) << c);\n+  foo (a + (b << c));\n+  foo (1 + 2 << c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) << c);\n+  foo (1 + (2 << c));\n+  foo (1 + 2 << 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) << 3);\n+  foo (1 + (2 << 3));\n+  foo (a << b + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a << b) + c);\n+  foo (a << (b + c));\n+  foo (1 << 2 + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 << 2) + c);\n+  foo (1 << (2 + c));\n+  foo (1 << 2 + 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 << 2) + 3);\n+  foo (1 << (2 + 3));\n+  foo (a + b >> c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a + b) >> c);\n+  foo (a + (b >> c));\n+  foo (1 + 2 >> c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) >> c);\n+  foo (1 + (2 >> c));\n+  foo (1 + 2 >> 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) >> 3);\n+  foo (1 + (2 >> 3));\n+  foo (a >> b + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a >> b) + c);\n+  foo (a >> (b + c));\n+  foo (1 >> 2 + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 >> 2) + c);\n+  foo (1 >> (2 + c));\n+  foo (1 >> 2 + 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 >> 2) + 3);\n+  foo (1 >> (2 + 3));\n+  foo (a - b << c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a - b) << c);\n+  foo (a - (b << c));\n+  foo (6 - 5 << c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 - 5) << c);\n+  foo (6 - (5 << c));\n+  foo (6 - 5 << 4); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 - 5) << 4);\n+  foo (6 - (5 << 4));\n+  foo (a << b - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a << b) - c);\n+  foo (a << (b - c));\n+  foo (6 << 5 - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 << 5) - c);\n+  foo (6 << (5 - c));\n+  foo (6 << 5 - 4); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 << 5) - 4);\n+  foo (6 << (5 - 4));\n+  foo (a - b >> c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a - b) >> c);\n+  foo (a - (b >> c));\n+  foo (6 - 5 >> c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 - 5) >> c);\n+  foo (6 - (5 >> c));\n+  foo (6 - 5 >> 4); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 - 5) >> 4);\n+  foo (6 - (5 >> 4));\n+  foo (a >> b - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a >> b) - c);\n+  foo (a >> (b - c));\n+  foo (6 >> 5 - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 >> 5) - c);\n+  foo (6 >> (5 - c));\n+  foo (6 >> 5 - 4); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((6 >> 5) - 4);\n+  foo (6 >> (5 - 4));\n+}"}, {"sha": "be12f73f1c2ff8b84a808ec81776badb0ce5620e", "filename": "gcc/testsuite/gcc.dg/Wparentheses-5.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-5.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,31 @@\n+/* Test operation of -Wparentheses.  Precedence warnings.  && inside\n+   ||.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  foo (a && b || c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a && b) || c);\n+  foo (a && (b || c));\n+  foo (1 && 2 || c); /* { dg-warning \"parentheses\" \"correct warning\" { xfail *-*-* } } */\n+  foo ((1 && 2) || c);\n+  foo (1 && (2 || c));\n+  foo (1 && 2 || 3); /* { dg-warning \"parentheses\" \"correct warning\" { xfail *-*-* } } */\n+  foo ((1 && 2) || 3);\n+  foo (1 && (2 || 3));\n+  foo (a || b && c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a || b) && c);\n+  foo (a || (b && c));\n+  foo (1 || 2 && c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 || 2) && c);\n+  foo (1 || (2 && c));\n+  foo (1 || 2 && 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 || 2) && 3);\n+  foo (1 || (2 && 3));\n+}"}, {"sha": "2d2cc161394342a041b082d59b79ba6c1311bd06", "filename": "gcc/testsuite/gcc.dg/Wparentheses-6.c", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-6.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,121 @@\n+/* Test operation of -Wparentheses.  Precedence warnings.  & or ^ or +\n+   or - or comparison inside |.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  foo (a & b | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) | c);\n+  foo (a & (b | c));\n+  foo (1 & 2 | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) | c);\n+  foo (1 & (2 | c));\n+  foo (1 & 2 | 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) | 3);\n+  foo (1 & (2 | 3));\n+  foo (a | b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a | b) & c);\n+  foo (a | (b & c));\n+  foo (1 | 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) & c);\n+  foo (1 | (2 & c));\n+  foo (1 | 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) & 3);\n+  foo (1 | (2 & 3));\n+  foo (a ^ b | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) | c);\n+  foo (a ^ (b | c));\n+  foo (1 ^ 2 | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) | c);\n+  foo (1 ^ (2 | c));\n+  foo (1 ^ 2 | 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) | 3);\n+  foo (1 ^ (2 | 3));\n+  foo (a | b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a | b) ^ c);\n+  foo (a | (b ^ c));\n+  foo (1 | 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) ^ c);\n+  foo (1 | (2 ^ c));\n+  foo (1 | 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) ^ 3);\n+  foo (1 | (2 ^ 3));\n+  foo (a + b | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a + b) | c);\n+  foo (a + (b | c));\n+  foo (1 + 2 | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) | c);\n+  foo (1 + (2 | c));\n+  foo (1 + 2 | 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) | 3);\n+  foo (1 + (2 | 3));\n+  foo (a | b + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a | b) + c);\n+  foo (a | (b + c));\n+  foo (1 | 2 + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) + c);\n+  foo (1 | (2 + c));\n+  foo (1 | 2 + 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) + 3);\n+  foo (1 | (2 + 3));\n+  foo (a - b | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a - b) | c);\n+  foo (a - (b | c));\n+  foo (1 - 2 | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 - 2) | c);\n+  foo (1 - (2 | c));\n+  foo (1 - 2 | 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 - 2) | 3);\n+  foo (1 - (2 | 3));\n+  foo (a | b - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a | b) - c);\n+  foo (a | (b - c));\n+  foo (1 | 2 - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) - c);\n+  foo (1 | (2 - c));\n+  foo (1 | 2 - 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) - 3);\n+  foo (1 | (2 - 3));\n+  foo (a > b | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a > b) | c);\n+  foo (a > (b | c));\n+  foo (1 > 2 | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 > 2) | c);\n+  foo (1 > (2 | c));\n+  foo (1 > 2 | 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 > 2) | 3);\n+  foo (1 > (2 | 3));\n+  foo (a | b > c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a | b) > c);\n+  foo (a | (b > c));\n+  foo (1 | 2 > c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) > c);\n+  foo (1 | (2 > c));\n+  foo (1 | 2 > 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) > 3);\n+  foo (1 | (2 > 3));\n+  foo (a <= b | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a <= b) | c);\n+  foo (a <= (b | c));\n+  foo (1 <= 2 | c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 <= 2) | c);\n+  foo (1 <= (2 | c));\n+  foo (1 <= 2 | 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 <= 2) | 3);\n+  foo (1 <= (2 | 3));\n+  foo (a | b <= c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a | b) <= c);\n+  foo (a | (b <= c));\n+  foo (1 | 2 <= c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) <= c);\n+  foo (1 | (2 <= c));\n+  foo (1 | 2 <= 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 | 2) <= 3);\n+  foo (1 | (2 <= 3));\n+}"}, {"sha": "f3516969d23307e75a16df061101fd2436411b75", "filename": "gcc/testsuite/gcc.dg/Wparentheses-7.c", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-7.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,121 @@\n+/* Test operation of -Wparentheses.  Precedence warnings.  & or + or -\n+   or comparison inside ^.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  foo (a & b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) ^ c);\n+  foo (a & (b ^ c));\n+  foo (1 & 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) ^ c);\n+  foo (1 & (2 ^ c));\n+  foo (1 & 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) ^ 3);\n+  foo (1 & (2 ^ 3));\n+  foo (a ^ b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) & c);\n+  foo (a ^ (b & c));\n+  foo (1 ^ 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) & c);\n+  foo (1 ^ (2 & c));\n+  foo (1 ^ 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) & 3);\n+  foo (1 ^ (2 & 3));\n+  foo (a + b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a + b) ^ c);\n+  foo (a + (b ^ c));\n+  foo (1 + 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) ^ c);\n+  foo (1 + (2 ^ c));\n+  foo (1 + 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) ^ 3);\n+  foo (1 + (2 ^ 3));\n+  foo (a ^ b + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) + c);\n+  foo (a ^ (b + c));\n+  foo (1 ^ 2 + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) + c);\n+  foo (1 ^ (2 + c));\n+  foo (1 ^ 2 + 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) + 3);\n+  foo (1 ^ (2 + 3));\n+  foo (a - b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a - b) ^ c);\n+  foo (a - (b ^ c));\n+  foo (1 - 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 - 2) ^ c);\n+  foo (1 - (2 ^ c));\n+  foo (1 - 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 - 2) ^ 3);\n+  foo (1 - (2 ^ 3));\n+  foo (a ^ b - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) - c);\n+  foo (a ^ (b - c));\n+  foo (1 ^ 2 - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) - c);\n+  foo (1 ^ (2 - c));\n+  foo (1 ^ 2 - 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) - 3);\n+  foo (1 ^ (2 - 3));\n+  foo (a >= b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a >= b) ^ c);\n+  foo (a >= (b ^ c));\n+  foo (1 >= 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 >= 2) ^ c);\n+  foo (1 >= (2 ^ c));\n+  foo (1 >= 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 >= 2) ^ 3);\n+  foo (1 >= (2 ^ 3));\n+  foo (a ^ b >= c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) >= c);\n+  foo (a ^ (b >= c));\n+  foo (1 ^ 2 >= c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) >= c);\n+  foo (1 ^ (2 >= c));\n+  foo (1 ^ 2 >= 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) >= 3);\n+  foo (1 ^ (2 >= 3));\n+  foo (a == b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a == b) ^ c);\n+  foo (a == (b ^ c));\n+  foo (1 == 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 == 2) ^ c);\n+  foo (1 == (2 ^ c));\n+  foo (1 == 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 == 2) ^ 3);\n+  foo (1 == (2 ^ 3));\n+  foo (a ^ b == c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) == c);\n+  foo (a ^ (b == c));\n+  foo (1 ^ 2 == c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) == c);\n+  foo (1 ^ (2 == c));\n+  foo (1 ^ 2 == 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) == 3);\n+  foo (1 ^ (2 == 3));\n+  foo (a < b ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a < b) ^ c);\n+  foo (a < (b ^ c));\n+  foo (1 < 2 ^ c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 < 2) ^ c);\n+  foo (1 < (2 ^ c));\n+  foo (1 < 2 ^ 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 < 2) ^ 3);\n+  foo (1 < (2 ^ 3));\n+  foo (a ^ b < c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a ^ b) < c);\n+  foo (a ^ (b < c));\n+  foo (1 ^ 2 < c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) < c);\n+  foo (1 ^ (2 < c));\n+  foo (1 ^ 2 < 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 ^ 2) < 3);\n+  foo (1 ^ (2 < 3));\n+}"}, {"sha": "ff34ee0a520c6617ae045ded3e908c6976c89051", "filename": "gcc/testsuite/gcc.dg/Wparentheses-8.c", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-8.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,103 @@\n+/* Test operation of -Wparentheses.  Precedence warnings.  + or - or\n+   comparison inside &.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  foo (a + b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a + b) & c);\n+  foo (a + (b & c));\n+  foo (1 + 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) & c);\n+  foo (1 + (2 & c));\n+  foo (1 + 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 + 2) & 3);\n+  foo (1 + (2 & 3));\n+  foo (a & b + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) + c);\n+  foo (a & (b + c));\n+  foo (1 & 2 + c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) + c);\n+  foo (1 & (2 + c));\n+  foo (1 & 2 + 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) + 3);\n+  foo (1 & (2 + 3));\n+  foo (a - b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a - b) & c);\n+  foo (a - (b & c));\n+  foo (1 - 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 - 2) & c);\n+  foo (1 - (2 & c));\n+  foo (1 - 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 - 2) & 3);\n+  foo (1 - (2 & 3));\n+  foo (a & b - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) - c);\n+  foo (a & (b - c));\n+  foo (1 & 2 - c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) - c);\n+  foo (1 & (2 - c));\n+  foo (1 & 2 - 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) - 3);\n+  foo (1 & (2 - 3));\n+  foo (a < b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a < b) & c);\n+  foo (a < (b & c));\n+  foo (1 < 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 < 2) & c);\n+  foo (1 < (2 & c));\n+  foo (1 < 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 < 2) & 3);\n+  foo (1 < (2 & 3));\n+  foo (a & b < c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) < c);\n+  foo (a & (b < c));\n+  foo (1 & 2 < c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) < c);\n+  foo (1 & (2 < c));\n+  foo (1 & 2 < 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) < 3);\n+  foo (1 & (2 < 3));\n+  foo (a == b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a == b) & c);\n+  foo (a == (b & c));\n+  foo (1 == 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 == 2) & c);\n+  foo (1 == (2 & c));\n+  foo (1 == 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 == 2) & 3);\n+  foo (1 == (2 & 3));\n+  foo (a & b == c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) == c);\n+  foo (a & (b == c));\n+  foo (1 & 2 == c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) == c);\n+  foo (1 & (2 == c));\n+  foo (1 & 2 == 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) == 3);\n+  foo (1 & (2 == 3));\n+  foo (a != b & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a != b) & c);\n+  foo (a != (b & c));\n+  foo (1 != 2 & c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 != 2) & c);\n+  foo (1 != (2 & c));\n+  foo (1 != 2 & 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 != 2) & 3);\n+  foo (1 != (2 & 3));\n+  foo (a & b != c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((a & b) != c);\n+  foo (a & (b != c));\n+  foo (1 & 2 != c); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) != c);\n+  foo (1 & (2 != c));\n+  foo (1 & 2 != 3); /* { dg-warning \"parentheses\" \"correct warning\" } */\n+  foo ((1 & 2) != 3);\n+  foo (1 & (2 != 3));\n+}"}, {"sha": "0fff6ea1aa376f79687948a429ec9ca460bec4a2", "filename": "gcc/testsuite/gcc.dg/Wparentheses-9.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWparentheses-9.c?ref=3e3970a27611d6cf2c5d8cfaa73e9e17f38b530c", "patch": "@@ -0,0 +1,61 @@\n+/* Test operation of -Wparentheses.  Warnings for ambiguous else.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+int foo (int);\n+\n+int a, b, c;\n+\n+int\n+bar (void)\n+{\n+  if (a)\n+    foo (0);\n+  if (b)\n+    foo (1);\n+  else\n+    foo (2);\n+  if (c) /* { dg-warning \"ambiguous\" \"correct warning\" } */\n+    if (a)\n+      foo (3);\n+    else\n+      foo (4);\n+  if (a)\n+    if (c)\n+      foo (5);\n+  if (a)\n+    if (b) /* { dg-warning \"ambiguous\" \"correct warning\" } */\n+      if (c)\n+\tfoo (6);\n+      else\n+\tfoo (7);\n+  if (a) /* { dg-warning \"ambiguous\" \"correct warning\" } */\n+    if (b)\n+      if (c)\n+\tfoo (8);\n+      else\n+\tfoo (9);\n+    else\n+      foo (10);\n+  if (a)\n+    if (b)\n+      if (c)\n+\tfoo (11);\n+      else\n+\tfoo (12);\n+    else\n+      foo (13);\n+  else\n+    foo (14);\n+  if (a) {\n+    if (b)\n+      if (c)\n+\tfoo (15);\n+      else\n+\tfoo (16);\n+    else\n+      foo (17);\n+  }\n+}"}]}