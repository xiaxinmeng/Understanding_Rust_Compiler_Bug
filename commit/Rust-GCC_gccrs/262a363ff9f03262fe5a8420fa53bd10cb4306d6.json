{"sha": "262a363ff9f03262fe5a8420fa53bd10cb4306d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYyYTM2M2ZmOWYwMzI2MmZlNWE4NDIwZmE1M2JkMTBjYjQzMDZkNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-08T08:37:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-08T08:37:17Z"}, "message": "re PR tree-optimization/69083 (ICE at -O3 in 64-bit mode on x86_64-linux-gnu (verify_gimple failed))\n\n\tPR tree-optimization/69083\n\t* tree-vect-slp.c (vect_get_constant_vectors): For\n\tVECTOR_BOOLEAN_TYPE_P assert op is fold_convertible_p to vector_type's\n\telement type.  If op is fold_convertible_p to vector_type's element\n\ttype, use NOP_EXPR instead of VCE.\n\n\t* gcc.dg/vect/pr69083.c: New test.\n\nFrom-SVN: r232153", "tree": {"sha": "0a80aa1d1fc5c04316113d0580d1a82f7b860e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a80aa1d1fc5c04316113d0580d1a82f7b860e8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/262a363ff9f03262fe5a8420fa53bd10cb4306d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262a363ff9f03262fe5a8420fa53bd10cb4306d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/262a363ff9f03262fe5a8420fa53bd10cb4306d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262a363ff9f03262fe5a8420fa53bd10cb4306d6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e1f093f7466ee77557e5ffad9b3ab9ae945e4e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1f093f7466ee77557e5ffad9b3ab9ae945e4e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1f093f7466ee77557e5ffad9b3ab9ae945e4e3"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "5402c36b3783828c0fd8399c5faa42c05c6080f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=262a363ff9f03262fe5a8420fa53bd10cb4306d6", "patch": "@@ -1,3 +1,11 @@\n+2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69083\n+\t* tree-vect-slp.c (vect_get_constant_vectors): For\n+\tVECTOR_BOOLEAN_TYPE_P assert op is fold_convertible_p to vector_type's\n+\telement type.  If op is fold_convertible_p to vector_type's element\n+\ttype, use NOP_EXPR instead of VCE.\n+\n 2016-01-08  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/67778"}, {"sha": "63a6e88f32ee324c1deacf72a4d1f2fbef235859", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=262a363ff9f03262fe5a8420fa53bd10cb4306d6", "patch": "@@ -1,3 +1,8 @@\n+2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69083\n+\t* gcc.dg/vect/pr69083.c: New test.\n+\n 2016-01-08  Sujoy Saraswati  <sujoy.saraswati@hpe.com>\n \n \tPR tree-optimization/61441"}, {"sha": "dd8b347333e345495a4b699927cfabb368bd37f9", "filename": "gcc/testsuite/gcc.dg/vect/pr69083.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr69083.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr69083.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr69083.c?ref=262a363ff9f03262fe5a8420fa53bd10cb4306d6", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/69083 */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+int d;\n+short f;\n+\n+void\n+foo (int a, int b, int e, short c)\n+{\n+  for (; e; e++)\n+    {\n+      int j;\n+      for (j = 0; j < 3; j++)\n+\t{\n+\t  f = 7 >> b ? a : b;\n+\t  d |= c == 1 ^ 1 == f;\n+\t}\n+    }\n+}"}, {"sha": "b029f6179754fcad67962fda13e9157e122945d1", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262a363ff9f03262fe5a8420fa53bd10cb4306d6/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=262a363ff9f03262fe5a8420fa53bd10cb4306d6", "patch": "@@ -2967,9 +2967,22 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n \t\t{\n \t\t  tree new_temp = make_ssa_name (TREE_TYPE (vector_type));\n \t\t  gimple *init_stmt;\n-\t\t  op = build1 (VIEW_CONVERT_EXPR, TREE_TYPE (vector_type), op);\n-\t\t  init_stmt\n-\t\t    = gimple_build_assign (new_temp, VIEW_CONVERT_EXPR, op);\n+\t\t  if (VECTOR_BOOLEAN_TYPE_P (vector_type))\n+\t\t    {\n+\t\t      gcc_assert (fold_convertible_p (TREE_TYPE (vector_type),\n+\t\t\t\t\t\t      op));\n+\t\t      init_stmt = gimple_build_assign (new_temp, NOP_EXPR, op);\n+\t\t    }\n+\t\t  else if (fold_convertible_p (TREE_TYPE (vector_type), op))\n+\t\t    init_stmt = gimple_build_assign (new_temp, NOP_EXPR, op);\n+\t\t  else\n+\t\t    {\n+\t\t      op = build1 (VIEW_CONVERT_EXPR, TREE_TYPE (vector_type),\n+\t\t\t\t   op);\n+\t\t      init_stmt\n+\t\t\t= gimple_build_assign (new_temp, VIEW_CONVERT_EXPR,\n+\t\t\t\t\t       op);\n+\t\t    }\n \t\t  gimple_seq_add_stmt (&ctor_seq, init_stmt);\n \t\t  op = new_temp;\n \t\t}"}]}