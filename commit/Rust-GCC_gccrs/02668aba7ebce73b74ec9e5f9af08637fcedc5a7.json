{"sha": "02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI2NjhhYmE3ZWJjZTczYjc0ZWM5ZTVmOWFmMDg2MzdmY2VkYzVhNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-09-20T22:15:07Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-09-20T22:15:07Z"}, "message": "c-decl.c (check_bitfield_type_and_width): Don't allow _Bool bit-fields wider than one bit.\n\n\t* c-decl.c (check_bitfield_type_and_width): Don't allow _Bool\n\tbit-fields wider than one bit.\n\ntestsuite:\n\t* gcc.dg/c99-bool-2.c, gcc.dg/c99-bool-3.c: New tests.\n\nFrom-SVN: r128634", "tree": {"sha": "8ea10ee415e476cfe0b3f1c8340a58cf30831a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea10ee415e476cfe0b3f1c8340a58cf30831a74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fa6b0af1f0a8ec3d6799f54a7c8feedbbc0d4f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa6b0af1f0a8ec3d6799f54a7c8feedbbc0d4f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fa6b0af1f0a8ec3d6799f54a7c8feedbbc0d4f9"}], "stats": {"total": 75, "additions": 57, "deletions": 18}, "files": [{"sha": "99d77b157144917187d2b67f26e0a94b2160711a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "patch": "@@ -1,3 +1,8 @@\n+2007-09-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-decl.c (check_bitfield_type_and_width): Don't allow _Bool\n+\tbit-fields wider than one bit.\n+\n 2007-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/33316"}, {"sha": "493a57ed714c6fea2d9b59f955d7dd842cbc703b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "patch": "@@ -3853,10 +3853,7 @@ check_bitfield_type_and_width (tree *type, tree *width, const char *orig_name)\n       && type_mv != boolean_type_node)\n     pedwarn (\"type of bit-field %qs is a GCC extension\", name);\n \n-  if (type_mv == boolean_type_node)\n-    max_width = CHAR_TYPE_SIZE;\n-  else\n-    max_width = TYPE_PRECISION (*type);\n+  max_width = TYPE_PRECISION (*type);\n \n   if (0 < compare_tree_int (*width, max_width))\n     {"}, {"sha": "e641604870ef2ff412cb5797bcc3d4b93d6fa619", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "patch": "@@ -1,3 +1,7 @@\n+2007-09-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c99-bool-2.c, gcc.dg/c99-bool-3.c: New tests.\n+\n 2007-09-20  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33221"}, {"sha": "7ec99a76bfdeb40f9ccaafc0f8af1e8640e04229", "filename": "gcc/testsuite/gcc.dg/c99-bool-1.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-1.c?ref=02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "patch": "@@ -32,8 +32,6 @@ int c = __bool_true_false_are_defined;\n struct foo\n {\n   _Bool a : 1;\n-  _Bool b : 2;\n-  _Bool c : 7;\n } sf;\n \n #define str(x) xstr(x)\n@@ -242,21 +240,9 @@ main (void)\n     sf.a = 1;\n     if (sf.a != 1)\n       abort ();\n-    sf.b = 1;\n-    if (sf.b != 1)\n-      abort ();\n-    sf.c = 1;\n-    if (sf.c != 1)\n-      abort ();\n     sf.a = 0;\n     if (sf.a != 0)\n       abort ();\n-    sf.b = 0;\n-    if (sf.b != 0)\n-      abort ();\n-    sf.c = 0;\n-    if (sf.c != 0)\n-      abort ();\n   }\n   exit (0);\n }"}, {"sha": "5a577a428d6d25cc2351b4cffc9b78e3e8bb5a53", "filename": "gcc/testsuite/gcc.dg/c99-bool-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-2.c?ref=02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "patch": "@@ -0,0 +1,14 @@\n+/* Test for _Bool bit-fields.  After TC2, the width of a _Bool\n+   bit-field must not extend the width (number of sign and value bits)\n+   of _Bool, which is implementation-defined but is 1 unless the\n+   implementation defines representations for values greater than 1 in\n+   type _Bool and allows for _Bool objects to have such types, which\n+   GCC does not.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+struct foo\n+{\n+  _Bool b : 2; /* { dg-error \"width\" } */\n+};"}, {"sha": "f93547ac01614a9e668fbbb3ed56bab8c036a5b2", "filename": "gcc/testsuite/gcc.dg/c99-bool-3.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02668aba7ebce73b74ec9e5f9af08637fcedc5a7/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-bool-3.c?ref=02668aba7ebce73b74ec9e5f9af08637fcedc5a7", "patch": "@@ -0,0 +1,33 @@\n+/* Test for _Bool bit-fields.  They have the semantics of _Bool, at\n+   least for now (DR#335 Spring 2007 discussion).  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do run } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+struct foo\n+{\n+  _Bool a : 1;\n+} sf;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  int i;\n+  for (i = 0; i < sizeof (struct foo); i++)\n+    *((unsigned char *)&sf + i) = (unsigned char) -1;\n+  sf.a = 2;\n+  if (sf.a != 1)\n+    abort ();\n+  sf.a = 0;\n+  if (sf.a != 0)\n+    abort ();\n+  sf.a = 0.2;\n+  if (sf.a != 1)\n+    abort ();\n+  sf.a = &sf;\n+  if (sf.a != 1)\n+    abort ();\n+  exit (0);\n+}"}]}