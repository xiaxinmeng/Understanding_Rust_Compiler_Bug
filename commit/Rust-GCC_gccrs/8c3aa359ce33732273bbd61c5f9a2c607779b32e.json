{"sha": "8c3aa359ce33732273bbd61c5f9a2c607779b32e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMzYWEzNTljZTMzNzMyMjczYmJkNjFjNWY5YTJjNjA3Nzc5YjMyZQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-20T09:41:46Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-24T09:28:04Z"}, "message": "More explicit checking of which OMP constructs we're expecting, part II\n\nIn particular, more precisely highlight what applies generally vs. the special\nhandling for the current 'parloops'-based OpenACC 'kernels' implementation.\n\n\tgcc/\n\t* omp-expand.c (expand_oacc_for): More explicit checking of which\n\tOMP constructs we're expecting.", "tree": {"sha": "bc9415c3a4c19cd2bd319adab417d98203c9f571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc9415c3a4c19cd2bd319adab417d98203c9f571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c3aa359ce33732273bbd61c5f9a2c607779b32e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3aa359ce33732273bbd61c5f9a2c607779b32e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3aa359ce33732273bbd61c5f9a2c607779b32e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3aa359ce33732273bbd61c5f9a2c607779b32e/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f72175357d04b0e71d2043be48551d7904a233b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f72175357d04b0e71d2043be48551d7904a233b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f72175357d04b0e71d2043be48551d7904a233b6"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "928644b099ce7e898ba700390c2fb1821ca21bcf", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3aa359ce33732273bbd61c5f9a2c607779b32e/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3aa359ce33732273bbd61c5f9a2c607779b32e/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=8c3aa359ce33732273bbd61c5f9a2c607779b32e", "patch": "@@ -7413,6 +7413,21 @@ expand_omp_taskloop_for_inner (struct omp_region *region,\n static void\n expand_oacc_for (struct omp_region *region, struct omp_for_data *fd)\n {\n+  bool is_oacc_kernels_parallelized\n+    = (lookup_attribute (\"oacc kernels parallelized\",\n+\t\t\t DECL_ATTRIBUTES (current_function_decl)) != NULL);\n+  {\n+    bool is_oacc_kernels\n+      = (lookup_attribute (\"oacc kernels\",\n+\t\t\t   DECL_ATTRIBUTES (current_function_decl)) != NULL);\n+    if (is_oacc_kernels_parallelized)\n+      gcc_checking_assert (is_oacc_kernels);\n+  }\n+  gcc_assert (gimple_in_ssa_p (cfun) == is_oacc_kernels_parallelized);\n+  /* In the following, some of the 'gimple_in_ssa_p (cfun)' conditionals are\n+     for SSA specifics, and some are for 'parloops' OpenACC\n+     'kernels'-parallelized specifics.  */\n+\n   tree v = fd->loop.v;\n   enum tree_code cond_code = fd->loop.cond_code;\n   enum tree_code plus_code = PLUS_EXPR;"}]}