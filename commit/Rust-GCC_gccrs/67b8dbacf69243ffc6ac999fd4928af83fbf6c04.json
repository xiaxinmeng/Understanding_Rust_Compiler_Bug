{"sha": "67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiOGRiYWNmNjkyNDNmZmM2YWM5OTlmZDQ5MjhhZjgzZmJmNmMwNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-31T14:07:59Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-31T14:07:59Z"}, "message": "Change comment style to one we normally use.\n\n2017-05-31  Martin Liska  <mliska@suse.cz>\n\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction):\n\tChange comment style to one we normally use.\n\t(vectorizable_reduction): Likewise.\n\t(vectorizable_induction): Likewise.\n\t* tree-vect-stmts.c (vectorizable_mask_load_store): Likewise.\n\t(vectorizable_call): Likewise.\n\t(vectorizable_simd_clone_call): Likewise.\n\t(vectorizable_conversion): Likewise.\n\t(vectorizable_assignment): Likewise.\n\t(vectorizable_shift): Likewise.\n\t(vectorizable_operation): Likewise.\n\t(vectorizable_store): Likewise.\n\t(vectorizable_load): Likewise.\n\t* tree-vectorizer.h: Likewise.\n\nFrom-SVN: r248740", "tree": {"sha": "e8e896d4ee4c94a5ffbe6329785b64041ffeeb4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e896d4ee4c94a5ffbe6329785b64041ffeeb4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "892c1fcec6dbb4d552c072bda50fef8b6418fdc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892c1fcec6dbb4d552c072bda50fef8b6418fdc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892c1fcec6dbb4d552c072bda50fef8b6418fdc1"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "707c71a778e4350c093faece5b4837d6123d6ea7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "patch": "@@ -1,3 +1,20 @@\n+2017-05-31  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction):\n+\tChange comment style to one we normally use.\n+\t(vectorizable_reduction): Likewise.\n+\t(vectorizable_induction): Likewise.\n+\t* tree-vect-stmts.c (vectorizable_mask_load_store): Likewise.\n+\t(vectorizable_call): Likewise.\n+\t(vectorizable_simd_clone_call): Likewise.\n+\t(vectorizable_conversion): Likewise.\n+\t(vectorizable_assignment): Likewise.\n+\t(vectorizable_shift): Likewise.\n+\t(vectorizable_operation): Likewise.\n+\t(vectorizable_store): Likewise.\n+\t(vectorizable_load): Likewise.\n+\t* tree-vectorizer.h: Likewise.\n+\n 2017-05-31  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* passes.c (emergency_dump_function): New."}, {"sha": "d3ad0d5652efef470b0371de1836dabe4875088d", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "patch": "@@ -4855,8 +4855,8 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple *stmt,\n       tree tmp;\n       tree vec_elem_type;\n \n-      /*** Case 1:  Create:\n-           v_out2 = reduc_expr <v_out1>  */\n+      /* Case 1:  Create:\n+         v_out2 = reduc_expr <v_out1>  */\n \n       if (dump_enabled_p ())\n         dump_printf_loc (MSG_NOTE, vect_location,\n@@ -4931,7 +4931,7 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple *stmt,\n           int elt_offset;\n \n           tree zero_vec = build_zero_cst (vectype);\n-          /*** Case 2: Create:\n+          /* Case 2: Create:\n              for (offset = nelements/2; offset >= 1; offset/=2)\n                 {\n                   Create:  va' = vec_shift <va, offset>\n@@ -4982,7 +4982,7 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple *stmt,\n         }\n       else\n         {\n-          /*** Case 3: Create:\n+          /* Case 3: Create:\n              s = extract_field <v_out2, 0>\n              for (offset = element_size;\n                   offset < vector_size;\n@@ -6080,7 +6080,7 @@ vectorizable_reduction (gimple *stmt, gimple_stmt_iterator *gsi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform reduction.\\n\");\n@@ -6508,7 +6508,7 @@ vectorizable_induction (gimple *phi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform induction phi.\\n\");"}, {"sha": "7490b08b454697bc87d10b9443ff2c96ccdb6714", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "patch": "@@ -2136,7 +2136,7 @@ vectorizable_mask_load_store (gimple *stmt, gimple_stmt_iterator *gsi,\n     }\n   gcc_assert (memory_access_type == STMT_VINFO_MEMORY_ACCESS_TYPE (stmt_info));\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (memory_access_type == VMAT_GATHER_SCATTER)\n     {\n@@ -2818,7 +2818,7 @@ vectorizable_call (gimple *gs, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform call.\\n\");\n@@ -3462,7 +3462,7 @@ vectorizable_simd_clone_call (gimple *stmt, gimple_stmt_iterator *gsi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform call.\\n\");\n@@ -4324,7 +4324,7 @@ vectorizable_conversion (gimple *stmt, gimple_stmt_iterator *gsi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location,\n                      \"transform conversion. ncopies = %d.\\n\", ncopies);\n@@ -4722,7 +4722,7 @@ vectorizable_assignment (gimple *stmt, gimple_stmt_iterator *gsi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform assignment.\\n\");\n \n@@ -5093,7 +5093,7 @@ vectorizable_shift (gimple *stmt, gimple_stmt_iterator *gsi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location,\n@@ -5421,7 +5421,7 @@ vectorizable_operation (gimple *stmt, gimple_stmt_iterator *gsi,\n       return true;\n     }\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location,\n@@ -5756,7 +5756,7 @@ vectorizable_store (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n     }\n   gcc_assert (memory_access_type == STMT_VINFO_MEMORY_ACCESS_TYPE (stmt_info));\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   ensure_base_align (stmt_info, dr);\n \n@@ -6743,7 +6743,7 @@ vectorizable_load (gimple *stmt, gimple_stmt_iterator *gsi, gimple **vec_stmt,\n     dump_printf_loc (MSG_NOTE, vect_location,\n                      \"transform load. ncopies = %d\\n\", ncopies);\n \n-  /** Transform.  **/\n+  /* Transform.  */\n \n   ensure_base_align (stmt_info, dr);\n "}, {"sha": "df8da9eb1fda004d567c7a0dfc7d38019408bc02", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b8dbacf69243ffc6ac999fd4928af83fbf6c04/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=67b8dbacf69243ffc6ac999fd4928af83fbf6c04", "patch": "@@ -544,9 +544,9 @@ typedef struct _stmt_vec_info {\n   gimple *vectorized_stmt;\n \n \n-  /** The following is relevant only for stmts that contain a non-scalar\n+  /* The following is relevant only for stmts that contain a non-scalar\n      data-ref (array/pointer/struct access). A GIMPLE stmt is expected to have\n-     at most one such data-ref.  **/\n+     at most one such data-ref.  */\n \n   /* Information about the data-ref (access function, etc),\n      relative to the inner-most containing loop.  */"}]}