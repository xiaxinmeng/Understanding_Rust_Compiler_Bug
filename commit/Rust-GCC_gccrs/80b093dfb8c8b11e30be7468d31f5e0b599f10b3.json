{"sha": "80b093dfb8c8b11e30be7468d31f5e0b599f10b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiMDkzZGZiOGM4YjExZTMwYmU3NDY4ZDMxZjVlMGI1OTlmMTBiMw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2008-05-24T00:46:59Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2008-05-24T00:46:59Z"}, "message": "m32c.c (m32c_return_addr_rtx): Change pointer type for A24 to PSImode.\n\n* config/m32c/m32c.c (m32c_return_addr_rtx): Change pointer type\nfor A24 to PSImode.\n(m32c_address_cost): Detail costs for indirect offsets.\n\nFrom-SVN: r135842", "tree": {"sha": "3628615dff3fa623a5e493ef624ee543ace52f73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3628615dff3fa623a5e493ef624ee543ace52f73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b093dfb8c8b11e30be7468d31f5e0b599f10b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b093dfb8c8b11e30be7468d31f5e0b599f10b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b093dfb8c8b11e30be7468d31f5e0b599f10b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b093dfb8c8b11e30be7468d31f5e0b599f10b3/comments", "author": null, "committer": null, "parents": [{"sha": "e7854e7d79c8ae82bf1b4c19c8ed279af7795228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7854e7d79c8ae82bf1b4c19c8ed279af7795228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7854e7d79c8ae82bf1b4c19c8ed279af7795228"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "cde9086127626e3e0646f5611c2023d092aecc95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b093dfb8c8b11e30be7468d31f5e0b599f10b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b093dfb8c8b11e30be7468d31f5e0b599f10b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80b093dfb8c8b11e30be7468d31f5e0b599f10b3", "patch": "@@ -1,3 +1,9 @@\n+2008-05-23  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/m32c/m32c.c (m32c_return_addr_rtx): Change pointer type\n+\tfor A24 to PSImode.\n+\t(m32c_address_cost): Detail costs for indirect offsets.\n+\n 2008-05-23  Rafael Espindola  <espindola@google.com>\n \n \t* see.c (see_get_extension_data): Don't use SUBREG_REG to test"}, {"sha": "697e42a79485b7dcc9c1e7df9f8121c0c6c99e4b", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b093dfb8c8b11e30be7468d31f5e0b599f10b3/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b093dfb8c8b11e30be7468d31f5e0b599f10b3/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=80b093dfb8c8b11e30be7468d31f5e0b599f10b3", "patch": "@@ -1099,7 +1099,8 @@ m32c_return_addr_rtx (int count)\n \n   if (TARGET_A24)\n     {\n-      mode = SImode;\n+      /* It's four bytes */\n+      mode = PSImode;\n       offset = 4;\n     }\n   else\n@@ -2199,16 +2200,36 @@ m32c_rtx_costs (rtx x, int code, int outer_code, int *total)\n static int\n m32c_address_cost (rtx addr)\n {\n+  int i;\n   /*  fprintf(stderr, \"\\naddress_cost\\n\");\n       debug_rtx(addr);*/\n   switch (GET_CODE (addr))\n     {\n     case CONST_INT:\n-      return COSTS_N_INSNS(1);\n+      i = INTVAL (addr);\n+      if (i == 0)\n+\treturn COSTS_N_INSNS(1);\n+      if (0 < i && i <= 255)\n+\treturn COSTS_N_INSNS(2);\n+      if (0 < i && i <= 65535)\n+\treturn COSTS_N_INSNS(3);\n+      return COSTS_N_INSNS(4);\n     case SYMBOL_REF:\n-      return COSTS_N_INSNS(3);\n+      return COSTS_N_INSNS(4);\n     case REG:\n-      return COSTS_N_INSNS(2);\n+      return COSTS_N_INSNS(1);\n+    case PLUS:\n+      if (GET_CODE (XEXP (addr, 1)) == CONST_INT)\n+\t{\n+\t  i = INTVAL (XEXP (addr, 1));\n+\t  if (i == 0)\n+\t    return COSTS_N_INSNS(1);\n+\t  if (0 < i && i <= 255)\n+\t    return COSTS_N_INSNS(2);\n+\t  if (0 < i && i <= 65535)\n+\t    return COSTS_N_INSNS(3);\n+\t}\n+      return COSTS_N_INSNS(4);\n     default:\n       return 0;\n     }"}]}