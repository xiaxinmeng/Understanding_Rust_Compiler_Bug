{"sha": "9f943b2446f2d0a345bbf9b4be3d3a4316372270", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5NDNiMjQ0NmYyZDBhMzQ1YmJmOWI0YmUzZDNhNDMxNjM3MjI3MA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2018-04-26T01:12:56Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2018-04-26T01:12:56Z"}, "message": "As mentioned in <http://gcc.gnu.org/ml/gcc/2018-03/msg00133.html> the bogus adjustment to 160 from 144 (which is reverted here)...\n\nAs mentioned in <http://gcc.gnu.org/ml/gcc/2018-03/msg00133.html>\nthe bogus adjustment to 160 from 144 (which is reverted here),\nis a single-token commit in upstream r301307, an attempt to\ncorrect a failed build due to an upstream change to compile the\nruntime with D_FILE_OFFSET_BITS=64.  The correct fix is here:\njust use the right include.  Yes, user-struct-stat64-as-stat is\nactually 160 for MIPS o32 and I hear user-struct-stat is also\n160 for n32.  There are additional fields appended for\nuser-struct-stat!  I guess for MIPS it's as bad as it gets for\nmixing up kernel and user struct stat.  The context of the patch\ndoesn't show that in the #else there's the correct include, the\none for <asm/stat.h> to get the kernel-struct-stat.  If you\ncan't compile it, IMHO the kernel headers are just too old; 3.2\nis fine for example.\n\n\t* sanitizer_common/sanitizer_platform_limits_linux.cc: Do not\n\ttake the shortcut to #include <sys/stat.h> for MIPS instead of\n\tthe kernel <asm/stat.h>.  Explain why sys/stat.h is misleading\n\tor wrong to get the kernel struct stat.\n\t* sanitizer_common/sanitizer_platform_limits_posix.h [__mips__]:\n\tCorrect the value for 32-bit non-android struct_kernel_stat_sz.\n\nFrom-SVN: r259664", "tree": {"sha": "51e67cae8c7ea5aa4bb2435b34353fef35aa1bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e67cae8c7ea5aa4bb2435b34353fef35aa1bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f943b2446f2d0a345bbf9b4be3d3a4316372270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f943b2446f2d0a345bbf9b4be3d3a4316372270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f943b2446f2d0a345bbf9b4be3d3a4316372270", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f943b2446f2d0a345bbf9b4be3d3a4316372270/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc40f16691a29b2934a3410cc3dc867584d52acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc40f16691a29b2934a3410cc3dc867584d52acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc40f16691a29b2934a3410cc3dc867584d52acf"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "141291f9e837b369b980ed0047dc2530752ea17f", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f943b2446f2d0a345bbf9b4be3d3a4316372270/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f943b2446f2d0a345bbf9b4be3d3a4316372270/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=9f943b2446f2d0a345bbf9b4be3d3a4316372270", "patch": "@@ -1,5 +1,12 @@\n 2018-04-26  Hans-Peter Nilsson  <hp@axis.com>\n \n+\t* sanitizer_common/sanitizer_platform_limits_linux.cc: Do not\n+\ttake the shortcut to #include <sys/stat.h> for MIPS instead of\n+\tthe kernel <asm/stat.h>.  Explain why sys/stat.h is misleading\n+\tor wrong to get the kernel struct stat.\n+\t* sanitizer_common/sanitizer_platform_limits_posix.h [__mips__]:\n+\tCorrect the value for 32-bit non-android struct_kernel_stat_sz.\n+\n \t* sanitizer_common/sanitizer_atomic_clang_other.h [_MIPS_SIM\n \t&& _MIPS_SIM == _ABIO32] (lock): Add initializer for .pad member.\n "}, {"sha": "3a9065381293d589a6f6ceb543903fd2f4e75074", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f943b2446f2d0a345bbf9b4be3d3a4316372270/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f943b2446f2d0a345bbf9b4be3d3a4316372270/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc?ref=9f943b2446f2d0a345bbf9b4be3d3a4316372270", "patch": "@@ -25,9 +25,12 @@\n \n // With old kernels (and even new kernels on powerpc) asm/stat.h uses types that\n // are not defined anywhere in userspace headers. Fake them. This seems to work\n-// fine with newer headers, too.\n+// fine with newer headers, too.  Beware that with <sys/stat.h>, struct stat\n+// takes the form of struct stat64 on 32-bit platforms if _FILE_OFFSET_BITS=64.\n+// Also, for some platforms (e.g. mips) there are additional members in the\n+// <sys/stat.h> struct stat:s.\n #include <linux/posix_types.h>\n-#if defined(__x86_64__) ||  defined(__mips__)\n+#if defined(__x86_64__)\n #include <sys/stat.h>\n #else\n #define ino_t __kernel_ino_t"}, {"sha": "132e5e9beea19ea2e194681908e3378af1083338", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f943b2446f2d0a345bbf9b4be3d3a4316372270/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f943b2446f2d0a345bbf9b4be3d3a4316372270/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h?ref=9f943b2446f2d0a345bbf9b4be3d3a4316372270", "patch": "@@ -86,7 +86,7 @@ namespace __sanitizer {\n #elif defined(__mips__)\n   const unsigned struct_kernel_stat_sz =\n                  SANITIZER_ANDROID ? FIRST_32_SECOND_64(104, 128) :\n-                                     FIRST_32_SECOND_64(160, 216);\n+                                     FIRST_32_SECOND_64(144, 216);\n   const unsigned struct_kernel_stat64_sz = 104;\n #elif defined(__s390__) && !defined(__s390x__)\n   const unsigned struct_kernel_stat_sz = 64;"}]}