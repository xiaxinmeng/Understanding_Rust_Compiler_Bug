{"sha": "33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "node_id": "C_kwDOANBUbNoAKDMzZGUwZmZjZjA1MGU1ODFlYjkzMWViNGYxYzVhZDljMGNkYzZiZjY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-18T19:49:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-21T09:40:40Z"}, "message": "libstdc++: Fix std::move_only_function for incomplete parameter types\n\nThe std::move_only_function::__param_t alias template attempts to\noptimize argument passing for the invoker, by passing by rvalue\nreference for types that are non-trivial or large. However, the\nprecondition for is_trivally_copyable makes it unsuitable for using\nhere, and can cause ODR violations. Just use is_scalar instead, and pass\nall class types (even small, trivial ones) by value.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/mofunc_impl.h (move_only_function::__param_t):\n\tUse __is_scalar instead of is_trivially_copyable.\n\t* testsuite/20_util/move_only_function/call.cc: Check parameters\n\tinvolving incomplete types.", "tree": {"sha": "f57b15a4b3aea8925819c9786512c1deaa74b085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f57b15a4b3aea8925819c9786512c1deaa74b085"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9de836c2b22f878cff592b96e11c1b95d4d36ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9de836c2b22f878cff592b96e11c1b95d4d36ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9de836c2b22f878cff592b96e11c1b95d4d36ee"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "47e1e5063069c51518e0162ffe5506d8ad38e91d", "filename": "libstdc++-v3/include/bits/mofunc_impl.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmofunc_impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmofunc_impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmofunc_impl.h?ref=33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "patch": "@@ -205,10 +205,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     private:\n       template<typename _Tp>\n-\tusing __param_t\n-\t  = __conditional_t<is_trivially_copyable_v<_Tp>\n-\t\t\t      && sizeof(_Tp) <= sizeof(long),\n-\t\t\t    _Tp, _Tp&&>;\n+\tusing __param_t = __conditional_t<is_scalar_v<_Tp>, _Tp, _Tp&&>;\n \n       using _Invoker = _Res (*)(_Mofunc_base _GLIBCXX_MOF_CV*,\n \t\t\t\t__param_t<_ArgTypes>...) noexcept(_Noex);"}, {"sha": "3e15983641216a98018c7fe421f4174a09e0255c", "filename": "libstdc++-v3/testsuite/20_util/move_only_function/call.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_only_function%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_only_function%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove_only_function%2Fcall.cc?ref=33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "patch": "@@ -191,10 +191,21 @@ test04()\n   VERIFY( std::move(std::as_const(f5))() == 3 );\n }\n \n+struct Incomplete;\n+\n+void\n+test_params()\n+{\n+  std::move_only_function<void(Incomplete)> f1;\n+  std::move_only_function<void(Incomplete&)> f2;\n+  std::move_only_function<void(Incomplete&&)> f3;\n+}\n+\n int main()\n {\n   test01();\n   test02();\n   test03();\n   test04();\n+  test_params();\n }"}]}