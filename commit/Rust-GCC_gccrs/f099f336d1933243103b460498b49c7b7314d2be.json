{"sha": "f099f336d1933243103b460498b49c7b7314d2be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5OWYzMzZkMTkzMzI0MzEwM2I0NjA0OThiNDljN2I3MzE0ZDJiZQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-03-27T16:17:16Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-03-27T16:17:16Z"}, "message": "[multiple changes]\n\nSat Mar 27 15:13:21 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.h (EXPR_WFL_GET_LINECOL): Set a line and column count\n \tusing a WFL compound value.\n\t* parse.y (xref.h): Include.\n\t(maybe_create_class_interface_decl): Set DECL_SOURCE_LINE to the\n \tWFL compound value.\n\t(register_fields): Set WFL compound value to lineno if doing\n \txrefs.\n\t(java_complete_expand_method): Call expand_xref if flag_emit_xref\n \tis set.\n\t* xref.c (system.h, jcf.h, parse.h, obstack.h): Include.\n\t* xref.h (expand_xref): Prototype renamed from xref_generate.\nSat Mar 27 14:16:32 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.h (BLOCK_CHAIN_DECL): New use GET_CURRENT_BLOCK.\n\t(GET_CURRENT_BLOCK): New macro.\n\t* parse.y (current_static_block): New global variable.\n\t(method_body:): Define action.\n\t(complete_method_declaration): Set current_function_decl to NULL\n \twhen work on the current method is done.\n\t(declare_local_variables): Use GET_CURRENT_BLOCK.\n\t(java_method_add_stmt): Likewise.\n\t(java_complete_expand_method): Disable the use of `this' when\n \texpanding <clinit>.\n\t(enter_a_block): If no current method exist, use\n \tcurrent_static_block to link static initializer blocks.\n\t(exit_block): Rewritten to use current_static_block when no current\n \tmethod decl exists.\n\t(lookup_name_in_blocks): Use GET_CURRENT_BLOCK.\n\t(patch_return): Forbid the use of `return' in static initializers.\n\t(patch_throw_statement): Fixed indentation. Issue specific error\n \tfor uncaught thrown checked exception in static initializer\n \tblocks. Removed FIXME.\n\nFrom-SVN: r26018", "tree": {"sha": "5c845724777068a4a854675479295670fdb5e96e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c845724777068a4a854675479295670fdb5e96e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f099f336d1933243103b460498b49c7b7314d2be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f099f336d1933243103b460498b49c7b7314d2be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f099f336d1933243103b460498b49c7b7314d2be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f099f336d1933243103b460498b49c7b7314d2be/comments", "author": null, "committer": null, "parents": [{"sha": "f1b0c0d8a3e03b8b587749e4087ccc2f20715279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b0c0d8a3e03b8b587749e4087ccc2f20715279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b0c0d8a3e03b8b587749e4087ccc2f20715279"}], "stats": {"total": 1110, "additions": 632, "deletions": 478}, "files": [{"sha": "487d0bfaa595d528e01c437d24068a2060ad24d3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f099f336d1933243103b460498b49c7b7314d2be", "patch": "@@ -15,6 +15,42 @@ Sat Mar 27 15:49:18 1999  Per Bothner  <bothner@cygnus.com>\n \t(patch_loop_statement):  Re-organize.\n \t(patch_bc_statement):  Re-write.\n \n+Sat Mar 27 15:13:21 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.h (EXPR_WFL_GET_LINECOL): Set a line and column count\n+ \tusing a WFL compound value.\n+\t* parse.y (xref.h): Include.\n+\t(maybe_create_class_interface_decl): Set DECL_SOURCE_LINE to the\n+ \tWFL compound value.\n+\t(register_fields): Set WFL compound value to lineno if doing\n+ \txrefs.\n+\t(java_complete_expand_method): Call expand_xref if flag_emit_xref\n+ \tis set.\n+\t* xref.c (system.h, jcf.h, parse.h, obstack.h): Include.\n+\t* xref.h (expand_xref): Prototype renamed from xref_generate.\n+\n+Sat Mar 27 14:16:32 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.h (BLOCK_CHAIN_DECL): New use GET_CURRENT_BLOCK.\n+\t(GET_CURRENT_BLOCK): New macro.\n+\t* parse.y (current_static_block): New global variable.\n+\t(method_body:): Define action.\n+\t(complete_method_declaration): Set current_function_decl to NULL\n+ \twhen work on the current method is done.\n+\t(declare_local_variables): Use GET_CURRENT_BLOCK.\n+\t(java_method_add_stmt): Likewise.\n+\t(java_complete_expand_method): Disable the use of `this' when\n+ \texpanding <clinit>.\n+\t(enter_a_block): If no current method exist, use\n+ \tcurrent_static_block to link static initializer blocks.\n+\t(exit_block): Rewritten to use current_static_block when no current\n+ \tmethod decl exists.\n+\t(lookup_name_in_blocks): Use GET_CURRENT_BLOCK.\n+\t(patch_return): Forbid the use of `return' in static initializers.\n+\t(patch_throw_statement): Fixed indentation. Issue specific error\n+ \tfor uncaught thrown checked exception in static initializer\n+ \tblocks. Removed FIXME.\n+\n 1999-03-25  Zack Weinberg  <zack@rabi.columbia.edu>\n \n \t* java/Make-lang.in: Remove all references to gcj.o/gcj.c."}, {"sha": "bdce35974c0cc6843faf76918f804687592d89b1", "filename": "gcc/java/parse.c", "status": "modified", "additions": 500, "deletions": 449, "changes": 949, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=f099f336d1933243103b460498b49c7b7314d2be", "patch": "@@ -137,6 +137,7 @@\n #include \"zipfile.h\"\n #include \"convert.h\"\n #include \"buffer.h\"\n+#include \"xref.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -367,7 +368,11 @@ static tree java_lang_id = NULL_TREE;\n /* The \"java.lang.Cloneable\" qualified name.  */\n static tree java_lang_cloneable = NULL_TREE;\n \n-#line 295 \"./parse.y\"\n+/* Context and flag for static blocks */\n+static tree current_static_block = NULL_TREE;\n+\n+\n+#line 300 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -377,7 +382,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 305 \"./parse.y\"\n+#line 310 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -674,56 +679,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   449,   455,   457,   458,   459,   460,   461,   465,   467,   470,\n-   472,   473,   476,   478,   481,   485,   489,   493,   499,   501,\n-   503,   505,   510,   512,   515,   519,   524,   529,   531,   532,\n-   533,   534,   535,   536,   537,   540,   545,   551,   553,   556,\n-   559,   561,   565,   567,   570,   597,   599,   603,   616,   618,\n-   622,   629,   630,   632,   642,   647,   662,   666,   669,   672,\n-   675,   677,   679,   684,   688,   690,   692,   694,   698,   700,\n-   702,   709,   715,   720,   724,   727,   731,   733,   736,   738,\n-   739,   740,   744,   746,   748,   749,   751,   756,   759,   769,\n-   772,   774,   778,   781,   788,   794,   802,   804,   806,   808,\n-   810,   814,   816,   820,   827,   828,   832,   835,   837,   839,\n-   841,   843,   845,   847,   849,   856,   859,   861,   870,   872,\n-   876,   881,   886,   890,   895,   897,   899,   906,   908,   910,\n-   914,   917,   919,   923,   925,   926,   931,   936,   942,   950,\n-   957,   960,   963,   967,   970,   974,   983,   985,   987,   992,\n-   999,  1007,  1009,  1013,  1020,  1030,  1034,  1037,  1040,  1043,\n-  1046,  1049,  1052,  1055,  1057,  1061,  1067,  1072,  1074,  1078,\n-  1081,  1085,  1087,  1090,  1092,  1093,  1095,  1099,  1103,  1109,\n-  1114,  1117,  1119,  1123,  1129,  1133,  1138,  1141,  1145,  1150,\n-  1158,  1160,  1163,  1165,  1167,  1171,  1175,  1178,  1182,  1184,\n-  1185,  1186,  1187,  1188,  1198,  1200,  1201,  1202,  1203,  1206,\n-  1208,  1209,  1210,  1211,  1212,  1213,  1214,  1215,  1216,  1217,\n-  1220,  1225,  1236,  1239,  1243,  1250,  1260,  1266,  1272,  1278,\n-  1280,  1286,  1288,  1294,  1296,  1298,  1300,  1302,  1306,  1308,\n-  1309,  1310,  1311,  1312,  1313,  1316,  1322,  1324,  1326,  1330,\n-  1335,  1340,  1346,  1356,  1362,  1364,  1366,  1373,  1376,  1378,\n-  1380,  1384,  1386,  1389,  1393,  1395,  1398,  1405,  1411,  1413,\n-  1415,  1419,  1427,  1430,  1432,  1434,  1438,  1443,  1452,  1457,\n-  1460,  1467,  1469,  1471,  1475,  1478,  1487,  1494,  1496,  1500,\n-  1513,  1515,  1521,  1527,  1531,  1533,  1537,  1540,  1542,  1546,\n-  1549,  1551,  1553,  1557,  1560,  1562,  1564,  1568,  1571,  1573,\n-  1575,  1579,  1585,  1587,  1591,  1598,  1600,  1602,  1604,  1608,\n-  1616,  1619,  1621,  1626,  1630,  1632,  1639,  1647,  1664,  1666,\n-  1668,  1672,  1675,  1680,  1682,  1685,  1687,  1689,  1691,  1692,\n-  1693,  1694,  1698,  1700,  1702,  1707,  1709,  1711,  1713,  1715,\n-  1719,  1722,  1727,  1729,  1734,  1735,  1736,  1737,  1738,  1740,\n-  1742,  1744,  1746,  1748,  1752,  1754,  1757,  1763,  1768,  1772,\n-  1775,  1777,  1779,  1783,  1785,  1787,  1789,  1793,  1796,  1800,\n-  1806,  1808,  1816,  1843,  1845,  1849,  1854,  1861,  1865,  1868,\n-  1870,  1881,  1892,  1897,  1906,  1908,  1912,  1915,  1917,  1922,\n-  1927,  1932,  1939,  1941,  1942,  1943,  1946,  1951,  1956,  1958,\n-  1959,  1961,  1963,  1964,  1966,  1970,  1973,  1977,  1980,  1984,\n-  1986,  1988,  1990,  1991,  1993,  1997,  2006,  2008,  2010,  2023,\n-  2025,  2031,  2033,  2035,  2039,  2041,  2046,  2051,  2056,  2058,\n-  2060,  2064,  2066,  2071,  2076,  2078,  2082,  2084,  2089,  2094,\n-  2099,  2101,  2103,  2107,  2109,  2114,  2119,  2124,  2129,  2131,\n-  2133,  2135,  2137,  2139,  2143,  2145,  2150,  2155,  2157,  2161,\n-  2163,  2168,  2172,  2174,  2179,  2183,  2185,  2190,  2194,  2196,\n-  2201,  2205,  2207,  2212,  2216,  2218,  2223,  2229,  2231,  2235,\n-  2237,  2240,  2243,  2251,  2253,  2254,  2257,  2259,  2262,  2266\n+   454,   460,   462,   463,   464,   465,   466,   470,   472,   475,\n+   477,   478,   481,   483,   486,   490,   494,   498,   504,   506,\n+   508,   510,   515,   517,   520,   524,   529,   534,   536,   537,\n+   538,   539,   540,   541,   542,   545,   550,   556,   558,   561,\n+   564,   566,   570,   572,   575,   602,   604,   608,   621,   623,\n+   627,   634,   635,   637,   647,   652,   667,   671,   674,   677,\n+   680,   682,   684,   689,   693,   695,   697,   699,   703,   705,\n+   707,   714,   720,   725,   729,   732,   736,   738,   741,   743,\n+   744,   745,   749,   751,   753,   754,   756,   761,   764,   774,\n+   777,   779,   783,   786,   793,   799,   807,   809,   811,   813,\n+   815,   819,   821,   825,   832,   833,   837,   840,   842,   844,\n+   846,   848,   850,   852,   854,   861,   864,   866,   875,   877,\n+   881,   886,   891,   895,   900,   902,   904,   911,   913,   915,\n+   919,   922,   924,   928,   930,   931,   936,   942,   949,   957,\n+   964,   967,   970,   974,   977,   981,   990,   992,   994,   999,\n+  1006,  1014,  1016,  1020,  1027,  1037,  1041,  1044,  1047,  1050,\n+  1053,  1056,  1059,  1062,  1064,  1068,  1074,  1079,  1081,  1085,\n+  1088,  1092,  1094,  1097,  1099,  1100,  1102,  1106,  1110,  1116,\n+  1121,  1124,  1126,  1130,  1136,  1140,  1145,  1148,  1152,  1157,\n+  1165,  1167,  1170,  1172,  1174,  1178,  1182,  1185,  1189,  1191,\n+  1192,  1193,  1194,  1195,  1205,  1207,  1208,  1209,  1210,  1213,\n+  1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,\n+  1227,  1232,  1243,  1246,  1250,  1257,  1267,  1273,  1279,  1285,\n+  1287,  1293,  1295,  1301,  1303,  1305,  1307,  1309,  1313,  1315,\n+  1316,  1317,  1318,  1319,  1320,  1323,  1329,  1331,  1333,  1337,\n+  1342,  1347,  1353,  1363,  1369,  1371,  1373,  1380,  1383,  1385,\n+  1387,  1391,  1393,  1396,  1400,  1402,  1405,  1412,  1418,  1420,\n+  1422,  1426,  1434,  1437,  1439,  1441,  1445,  1450,  1459,  1464,\n+  1467,  1474,  1476,  1478,  1482,  1485,  1494,  1501,  1503,  1507,\n+  1520,  1522,  1528,  1534,  1538,  1540,  1544,  1547,  1549,  1553,\n+  1556,  1558,  1560,  1564,  1567,  1569,  1571,  1575,  1578,  1580,\n+  1582,  1586,  1592,  1594,  1598,  1605,  1607,  1609,  1611,  1615,\n+  1623,  1626,  1628,  1633,  1637,  1639,  1646,  1654,  1671,  1673,\n+  1675,  1679,  1682,  1687,  1689,  1692,  1694,  1696,  1698,  1699,\n+  1700,  1701,  1705,  1707,  1709,  1714,  1716,  1718,  1720,  1722,\n+  1726,  1729,  1734,  1736,  1741,  1742,  1743,  1744,  1745,  1747,\n+  1749,  1751,  1753,  1755,  1759,  1761,  1764,  1770,  1775,  1779,\n+  1782,  1784,  1786,  1790,  1792,  1794,  1796,  1800,  1803,  1807,\n+  1813,  1815,  1823,  1850,  1852,  1856,  1861,  1868,  1872,  1875,\n+  1877,  1888,  1899,  1904,  1913,  1915,  1919,  1922,  1924,  1929,\n+  1934,  1939,  1946,  1948,  1949,  1950,  1953,  1958,  1963,  1965,\n+  1966,  1968,  1970,  1971,  1973,  1977,  1980,  1984,  1987,  1991,\n+  1993,  1995,  1997,  1998,  2000,  2004,  2013,  2015,  2017,  2030,\n+  2032,  2038,  2040,  2042,  2046,  2048,  2053,  2058,  2063,  2065,\n+  2067,  2071,  2073,  2078,  2083,  2085,  2089,  2091,  2096,  2101,\n+  2106,  2108,  2110,  2114,  2116,  2121,  2126,  2131,  2136,  2138,\n+  2140,  2142,  2144,  2146,  2150,  2152,  2157,  2162,  2164,  2168,\n+  2170,  2175,  2179,  2181,  2186,  2190,  2192,  2197,  2201,  2203,\n+  2208,  2212,  2214,  2219,  2223,  2225,  2230,  2236,  2238,  2242,\n+  2244,  2247,  2250,  2258,  2260,  2261,  2264,  2266,  2269,  2273\n };\n #endif\n \n@@ -2719,66 +2724,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 451 \"./parse.y\"\n+#line 456 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 495 \"./parse.y\"\n+#line 500 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 500 \"./parse.y\"\n+#line 505 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 502 \"./parse.y\"\n+#line 507 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 504 \"./parse.y\"\n+#line 509 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 506 \"./parse.y\"\n+#line 511 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 521 \"./parse.y\"\n+#line 526 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 530 \"./parse.y\"\n+#line 535 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 542 \"./parse.y\"\n+#line 547 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 546 \"./parse.y\"\n+#line 551 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 558 \"./parse.y\"\n+#line 563 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 560 \"./parse.y\"\n+#line 565 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 562 \"./parse.y\"\n+#line 567 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 572 \"./parse.y\"\n+#line 577 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2806,15 +2811,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 598 \"./parse.y\"\n+#line 603 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 600 \"./parse.y\"\n+#line 605 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 605 \"./parse.y\"\n+#line 610 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2828,40 +2833,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 617 \"./parse.y\"\n+#line 622 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 619 \"./parse.y\"\n+#line 624 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 624 \"./parse.y\"\n+#line 629 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 631 \"./parse.y\"\n+#line 636 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 633 \"./parse.y\"\n+#line 638 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 644 \"./parse.y\"\n+#line 649 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 648 \"./parse.y\"\n+#line 653 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2875,123 +2880,123 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 664 \"./parse.y\"\n+#line 669 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 666 \"./parse.y\"\n+#line 671 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 670 \"./parse.y\"\n+#line 675 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 672 \"./parse.y\"\n+#line 677 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 676 \"./parse.y\"\n+#line 681 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 678 \"./parse.y\"\n+#line 683 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 680 \"./parse.y\"\n+#line 685 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 685 \"./parse.y\"\n+#line 690 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 689 \"./parse.y\"\n+#line 694 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 691 \"./parse.y\"\n+#line 696 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 693 \"./parse.y\"\n+#line 698 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 695 \"./parse.y\"\n+#line 700 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 699 \"./parse.y\"\n+#line 704 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 701 \"./parse.y\"\n+#line 706 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 703 \"./parse.y\"\n+#line 708 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 711 \"./parse.y\"\n+#line 716 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 716 \"./parse.y\"\n+#line 721 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 721 \"./parse.y\"\n+#line 726 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 726 \"./parse.y\"\n+#line 731 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 728 \"./parse.y\"\n+#line 733 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 741 \"./parse.y\"\n+#line 746 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 747 \"./parse.y\"\n+#line 752 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 750 \"./parse.y\"\n+#line 755 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 752 \"./parse.y\"\n+#line 757 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 758 \"./parse.y\"\n+#line 763 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 760 \"./parse.y\"\n+#line 765 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3001,19 +3006,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 773 \"./parse.y\"\n+#line 778 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 775 \"./parse.y\"\n+#line 780 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 780 \"./parse.y\"\n+#line 785 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 782 \"./parse.y\"\n+#line 787 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3022,101 +3027,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 789 \"./parse.y\"\n+#line 794 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 795 \"./parse.y\"\n+#line 800 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 805 \"./parse.y\"\n+#line 810 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 807 \"./parse.y\"\n+#line 812 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 809 \"./parse.y\"\n+#line 814 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 811 \"./parse.y\"\n+#line 816 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 822 \"./parse.y\"\n+#line 827 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 827 \"./parse.y\"\n+#line 832 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 829 \"./parse.y\"\n+#line 834 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 834 \"./parse.y\"\n+#line 839 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 836 \"./parse.y\"\n+#line 841 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 838 \"./parse.y\"\n+#line 843 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 840 \"./parse.y\"\n+#line 845 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 842 \"./parse.y\"\n+#line 847 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 844 \"./parse.y\"\n+#line 849 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 846 \"./parse.y\"\n+#line 851 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 848 \"./parse.y\"\n+#line 853 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 850 \"./parse.y\"\n+#line 855 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 858 \"./parse.y\"\n+#line 863 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 860 \"./parse.y\"\n+#line 865 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 862 \"./parse.y\"\n+#line 867 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3127,346 +3132,348 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 871 \"./parse.y\"\n+#line 876 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 873 \"./parse.y\"\n+#line 878 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 878 \"./parse.y\"\n+#line 883 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 882 \"./parse.y\"\n+#line 887 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 887 \"./parse.y\"\n+#line 892 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 892 \"./parse.y\"\n+#line 897 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 896 \"./parse.y\"\n+#line 901 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 126:\n-#line 898 \"./parse.y\"\n+#line 903 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 900 \"./parse.y\"\n+#line 905 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 907 \"./parse.y\"\n+#line 912 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 909 \"./parse.y\"\n+#line 914 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 911 \"./parse.y\"\n+#line 916 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 916 \"./parse.y\"\n+#line 921 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 918 \"./parse.y\"\n+#line 923 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 920 \"./parse.y\"\n+#line 925 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 927 \"./parse.y\"\n+#line 932 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 933 \"./parse.y\"\n+#line 938 \"./parse.y\"\n {\n-\t\t  RULE (\"STATIC_INITIALIZER\");\n+\t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n+\t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 937 \"./parse.y\"\n+#line 943 \"./parse.y\"\n {\n-\t\t  RULE (\"STATIC_INITIALIZER\");\n+\t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n+\t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 944 \"./parse.y\"\n+#line 951 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 952 \"./parse.y\"\n+#line 959 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 957 \"./parse.y\"\n+#line 964 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 962 \"./parse.y\"\n+#line 969 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 964 \"./parse.y\"\n+#line 971 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 969 \"./parse.y\"\n+#line 976 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 971 \"./parse.y\"\n+#line 978 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 979 \"./parse.y\"\n+#line 986 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 984 \"./parse.y\"\n+#line 991 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 986 \"./parse.y\"\n+#line 993 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 988 \"./parse.y\"\n+#line 995 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 994 \"./parse.y\"\n+#line 1001 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 1000 \"./parse.y\"\n+#line 1007 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 152:\n-#line 1008 \"./parse.y\"\n+#line 1015 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1010 \"./parse.y\"\n+#line 1017 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 154:\n-#line 1015 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 155:\n-#line 1021 \"./parse.y\"\n+#line 1028 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 156:\n-#line 1032 \"./parse.y\"\n+#line 1039 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 157:\n-#line 1034 \"./parse.y\"\n+#line 1041 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 158:\n-#line 1038 \"./parse.y\"\n+#line 1045 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1040 \"./parse.y\"\n+#line 1047 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1044 \"./parse.y\"\n+#line 1051 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 161:\n-#line 1046 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1050 \"./parse.y\"\n+#line 1057 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 163:\n-#line 1052 \"./parse.y\"\n+#line 1059 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1056 \"./parse.y\"\n+#line 1063 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1058 \"./parse.y\"\n+#line 1065 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 166:\n-#line 1063 \"./parse.y\"\n+#line 1070 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 167:\n-#line 1068 \"./parse.y\"\n+#line 1075 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 168:\n-#line 1073 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 169:\n-#line 1075 \"./parse.y\"\n+#line 1082 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 170:\n-#line 1080 \"./parse.y\"\n+#line 1087 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1082 \"./parse.y\"\n+#line 1089 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 176:\n-#line 1094 \"./parse.y\"\n+#line 1101 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 177:\n-#line 1096 \"./parse.y\"\n+#line 1103 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 179:\n-#line 1105 \"./parse.y\"\n+#line 1112 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 180:\n-#line 1110 \"./parse.y\"\n+#line 1117 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 181:\n-#line 1116 \"./parse.y\"\n+#line 1123 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 182:\n-#line 1118 \"./parse.y\"\n+#line 1125 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 183:\n-#line 1120 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 184:\n-#line 1125 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 185:\n-#line 1130 \"./parse.y\"\n+#line 1137 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 186:\n-#line 1134 \"./parse.y\"\n+#line 1141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1140 \"./parse.y\"\n+#line 1147 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 188:\n-#line 1142 \"./parse.y\"\n+#line 1149 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1147 \"./parse.y\"\n+#line 1154 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1152 \"./parse.y\"\n+#line 1159 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 194:\n-#line 1166 \"./parse.y\"\n+#line 1173 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1168 \"./parse.y\"\n+#line 1175 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1177 \"./parse.y\"\n+#line 1184 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1179 \"./parse.y\"\n+#line 1186 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1189 \"./parse.y\"\n+#line 1196 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3476,11 +3483,11 @@ case 204:\n \t\t;\n     break;}\n case 221:\n-#line 1222 \"./parse.y\"\n+#line 1229 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1227 \"./parse.y\"\n+#line 1234 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3490,19 +3497,19 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1238 \"./parse.y\"\n+#line 1245 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 224:\n-#line 1240 \"./parse.y\"\n+#line 1247 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1245 \"./parse.y\"\n+#line 1252 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1252 \"./parse.y\"\n+#line 1259 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3513,108 +3520,108 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1261 \"./parse.y\"\n+#line 1268 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1267 \"./parse.y\"\n+#line 1274 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1273 \"./parse.y\"\n+#line 1280 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1279 \"./parse.y\"\n+#line 1286 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1281 \"./parse.y\"\n+#line 1288 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1287 \"./parse.y\"\n+#line 1294 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1289 \"./parse.y\"\n+#line 1296 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1295 \"./parse.y\"\n+#line 1302 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1297 \"./parse.y\"\n+#line 1304 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1299 \"./parse.y\"\n+#line 1306 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1301 \"./parse.y\"\n+#line 1308 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1303 \"./parse.y\"\n+#line 1310 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1318 \"./parse.y\"\n+#line 1325 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 247:\n-#line 1323 \"./parse.y\"\n+#line 1330 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1325 \"./parse.y\"\n+#line 1332 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1327 \"./parse.y\"\n+#line 1334 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1332 \"./parse.y\"\n+#line 1339 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1337 \"./parse.y\"\n+#line 1344 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1342 \"./parse.y\"\n+#line 1349 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1346 \"./parse.y\"\n+#line 1353 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3625,112 +3632,112 @@ case 253:\n \t\t;\n     break;}\n case 254:\n-#line 1358 \"./parse.y\"\n+#line 1365 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1363 \"./parse.y\"\n+#line 1370 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1365 \"./parse.y\"\n+#line 1372 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1367 \"./parse.y\"\n+#line 1374 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1375 \"./parse.y\"\n+#line 1382 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1377 \"./parse.y\"\n+#line 1384 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1379 \"./parse.y\"\n+#line 1386 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1381 \"./parse.y\"\n+#line 1388 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 267:\n-#line 1400 \"./parse.y\"\n+#line 1407 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1406 \"./parse.y\"\n+#line 1413 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1412 \"./parse.y\"\n+#line 1419 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1414 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1416 \"./parse.y\"\n+#line 1423 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1421 \"./parse.y\"\n+#line 1428 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1429 \"./parse.y\"\n+#line 1436 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1431 \"./parse.y\"\n+#line 1438 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1433 \"./parse.y\"\n+#line 1440 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1435 \"./parse.y\"\n+#line 1442 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1440 \"./parse.y\"\n+#line 1447 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1445 \"./parse.y\"\n+#line 1452 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1454 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1459 \"./parse.y\"\n+#line 1466 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 281:\n-#line 1461 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3739,23 +3746,23 @@ case 281:\n \t\t;\n     break;}\n case 282:\n-#line 1468 \"./parse.y\"\n+#line 1475 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1470 \"./parse.y\"\n+#line 1477 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1472 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1477 \"./parse.y\"\n+#line 1484 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1479 \"./parse.y\"\n+#line 1486 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3764,23 +3771,23 @@ case 286:\n \t\t;\n     break;}\n case 287:\n-#line 1489 \"./parse.y\"\n+#line 1496 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1495 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1497 \"./parse.y\"\n+#line 1504 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1502 \"./parse.y\"\n+#line 1509 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3793,179 +3800,179 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1514 \"./parse.y\"\n+#line 1521 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1516 \"./parse.y\"\n+#line 1523 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1522 \"./parse.y\"\n+#line 1529 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1528 \"./parse.y\"\n+#line 1535 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1532 \"./parse.y\"\n+#line 1539 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1534 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1539 \"./parse.y\"\n+#line 1546 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1541 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1543 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1548 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1550 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1552 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1554 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1559 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1561 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1563 \"./parse.y\"\n+#line 1570 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1565 \"./parse.y\"\n+#line 1572 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1570 \"./parse.y\"\n+#line 1577 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1572 \"./parse.y\"\n+#line 1579 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1574 \"./parse.y\"\n+#line 1581 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1576 \"./parse.y\"\n+#line 1583 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1581 \"./parse.y\"\n+#line 1588 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1586 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1588 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1593 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1599 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1601 \"./parse.y\"\n+#line 1608 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1603 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1605 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1610 \"./parse.y\"\n+#line 1617 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1618 \"./parse.y\"\n+#line 1625 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1620 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1622 \"./parse.y\"\n+#line 1629 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 324:\n-#line 1627 \"./parse.y\"\n+#line 1634 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1633 \"./parse.y\"\n+#line 1640 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1641 \"./parse.y\"\n+#line 1648 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1649 \"./parse.y\"\n+#line 1656 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3983,184 +3990,184 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1665 \"./parse.y\"\n+#line 1672 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1667 \"./parse.y\"\n+#line 1674 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1669 \"./parse.y\"\n+#line 1676 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1674 \"./parse.y\"\n+#line 1681 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 333:\n-#line 1676 \"./parse.y\"\n+#line 1683 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1688 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1690 \"./parse.y\"\n+#line 1697 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1699 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1701 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1703 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1708 \"./parse.y\"\n+#line 1715 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1710 \"./parse.y\"\n+#line 1717 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1712 \"./parse.y\"\n+#line 1719 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1714 \"./parse.y\"\n+#line 1721 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1716 \"./parse.y\"\n+#line 1723 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1721 \"./parse.y\"\n+#line 1728 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1723 \"./parse.y\"\n+#line 1730 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1728 \"./parse.y\"\n+#line 1735 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1730 \"./parse.y\"\n+#line 1737 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1739 \"./parse.y\"\n+#line 1746 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1741 \"./parse.y\"\n+#line 1748 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1743 \"./parse.y\"\n+#line 1750 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1745 \"./parse.y\"\n+#line 1752 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1747 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1749 \"./parse.y\"\n+#line 1756 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1759 \"./parse.y\"\n+#line 1766 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1764 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1769 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1774 \"./parse.y\"\n+#line 1781 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1776 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1778 \"./parse.y\"\n+#line 1785 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1780 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 374:\n-#line 1784 \"./parse.y\"\n+#line 1791 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1786 \"./parse.y\"\n+#line 1793 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1788 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1790 \"./parse.y\"\n+#line 1797 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1795 \"./parse.y\"\n+#line 1802 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1797 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1802 \"./parse.y\"\n+#line 1809 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1807 \"./parse.y\"\n+#line 1814 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1809 \"./parse.y\"\n+#line 1816 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1818 \"./parse.y\"\n+#line 1825 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4188,19 +4195,19 @@ case 383:\n \t\t;\n     break;}\n case 384:\n-#line 1844 \"./parse.y\"\n+#line 1851 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 385:\n-#line 1846 \"./parse.y\"\n+#line 1853 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1851 \"./parse.y\"\n+#line 1858 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1855 \"./parse.y\"\n+#line 1862 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4209,19 +4216,19 @@ case 387:\n \t\t;\n     break;}\n case 388:\n-#line 1862 \"./parse.y\"\n+#line 1869 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1867 \"./parse.y\"\n+#line 1874 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1869 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1871 \"./parse.y\"\n+#line 1878 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4234,7 +4241,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1882 \"./parse.y\"\n+#line 1889 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4247,121 +4254,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1893 \"./parse.y\"\n+#line 1900 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1898 \"./parse.y\"\n+#line 1905 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1907 \"./parse.y\"\n+#line 1914 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1909 \"./parse.y\"\n+#line 1916 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1914 \"./parse.y\"\n+#line 1921 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1916 \"./parse.y\"\n+#line 1923 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1918 \"./parse.y\"\n+#line 1925 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1923 \"./parse.y\"\n+#line 1930 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1928 \"./parse.y\"\n+#line 1935 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1933 \"./parse.y\"\n+#line 1940 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1948 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1953 \"./parse.y\"\n+#line 1960 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1960 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1962 \"./parse.y\"\n+#line 1969 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1965 \"./parse.y\"\n+#line 1972 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1967 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 1972 \"./parse.y\"\n+#line 1979 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 1974 \"./parse.y\"\n+#line 1981 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 1979 \"./parse.y\"\n+#line 1986 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 1981 \"./parse.y\"\n+#line 1988 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 1987 \"./parse.y\"\n+#line 1994 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 1989 \"./parse.y\"\n+#line 1996 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 1992 \"./parse.y\"\n+#line 1999 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1994 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 1999 \"./parse.y\"\n+#line 2006 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4371,15 +4378,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 2007 \"./parse.y\"\n+#line 2014 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2009 \"./parse.y\"\n+#line 2016 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 2011 \"./parse.y\"\n+#line 2018 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4394,275 +4401,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 2024 \"./parse.y\"\n+#line 2031 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 2026 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 2032 \"./parse.y\"\n+#line 2039 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2034 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 2036 \"./parse.y\"\n+#line 2043 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2042 \"./parse.y\"\n+#line 2049 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 2047 \"./parse.y\"\n+#line 2054 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2052 \"./parse.y\"\n+#line 2059 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2057 \"./parse.y\"\n+#line 2064 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2059 \"./parse.y\"\n+#line 2066 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2061 \"./parse.y\"\n+#line 2068 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2067 \"./parse.y\"\n+#line 2074 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2072 \"./parse.y\"\n+#line 2079 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2077 \"./parse.y\"\n+#line 2084 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2079 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2085 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2090 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2095 \"./parse.y\"\n+#line 2102 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2100 \"./parse.y\"\n+#line 2107 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2102 \"./parse.y\"\n+#line 2109 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2104 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2110 \"./parse.y\"\n+#line 2117 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2115 \"./parse.y\"\n+#line 2122 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2120 \"./parse.y\"\n+#line 2127 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2125 \"./parse.y\"\n+#line 2132 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2130 \"./parse.y\"\n+#line 2137 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2132 \"./parse.y\"\n+#line 2139 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2134 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2136 \"./parse.y\"\n+#line 2143 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2138 \"./parse.y\"\n+#line 2145 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2140 \"./parse.y\"\n+#line 2147 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2146 \"./parse.y\"\n+#line 2153 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2151 \"./parse.y\"\n+#line 2158 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2156 \"./parse.y\"\n+#line 2163 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2158 \"./parse.y\"\n+#line 2165 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2164 \"./parse.y\"\n+#line 2171 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2169 \"./parse.y\"\n+#line 2176 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2175 \"./parse.y\"\n+#line 2182 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2180 \"./parse.y\"\n+#line 2187 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2186 \"./parse.y\"\n+#line 2193 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2191 \"./parse.y\"\n+#line 2198 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2197 \"./parse.y\"\n+#line 2204 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2202 \"./parse.y\"\n+#line 2209 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2208 \"./parse.y\"\n+#line 2215 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2213 \"./parse.y\"\n+#line 2220 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2219 \"./parse.y\"\n+#line 2226 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2224 \"./parse.y\"\n+#line 2231 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2230 \"./parse.y\"\n+#line 2237 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2232 \"./parse.y\"\n+#line 2239 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2242 \"./parse.y\"\n+#line 2249 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2244 \"./parse.y\"\n+#line 2251 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4867,7 +4874,7 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2270 \"./parse.y\"\n+#line 2277 \"./parse.y\"\n \n \f\n \n@@ -5451,7 +5458,11 @@ maybe_create_class_interface_decl (decl, qualified_name, cl)\n   \n   /* Take care of the file and line business */\n   DECL_SOURCE_FILE (decl) = EXPR_WFL_FILENAME (cl);\n-  DECL_SOURCE_LINE (decl) = EXPR_WFL_LINENO (cl);\n+  /* If we're emiting xrefs, store the line/col number information */\n+  if (flag_emit_xref)\n+    DECL_SOURCE_LINE (decl) = EXPR_WFL_LINECOL (cl);\n+  else\n+    DECL_SOURCE_LINE (decl) = EXPR_WFL_LINENO (cl);\n   CLASS_FROM_SOURCE_P (TREE_TYPE (decl)) = 1;\n   CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P (TREE_TYPE (decl)) =\n     IS_A_COMMAND_LINE_FILENAME_P (EXPR_WFL_FILENAME_NODE (cl));\n@@ -5743,7 +5754,10 @@ register_fields (flags, type, variable_list)\n \n       /* Set lineno to the line the field was found and create a\n          declaration for it. Eventually sets the @deprecated tag flag. */\n-      lineno = EXPR_WFL_LINENO (cl);\n+      if (flag_emit_xref)\n+\tlineno = EXPR_WFL_LINECOL (cl);\n+      else\n+\tlineno = EXPR_WFL_LINENO (cl);\n       field_decl = add_field (class_type, current_name, real_type, flags);\n       CHECK_DEPRECATED (field_decl);\n       \n@@ -6071,6 +6085,9 @@ finish_method_declaration (method_body)\n   /* Merge last line of the function with first line, directly in the\n      function decl. It will be used to emit correct debug info. */\n   DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n+  /* So we don't have an irrelevant function declaration context for\n+     the next static block we'll see. */\n+  current_function_decl = NULL_TREE;\n }\n \n /* Build a an error message for constructor circularity errors.  */\n@@ -7838,11 +7855,11 @@ declare_local_variables (modifier, type, vlist)\n \n   /* Push a new block if statements were seen between the last time we\n      pushed a block and now. Keep a cound of block to close */\n-  if (BLOCK_EXPR_BODY (DECL_FUNCTION_BODY (current_function_decl)))\n+  if (BLOCK_EXPR_BODY (GET_CURRENT_BLOCK (current_function_decl)))\n     {\n-      tree body = DECL_FUNCTION_BODY (current_function_decl);\n+      tree body = GET_CURRENT_BLOCK (current_function_decl);\n       tree b = enter_block ();\n-      BLOCK_EXPR_ORIGIN(b) = body;\n+      BLOCK_EXPR_ORIGIN (b) = body;\n     }\n \n   if (modifier)\n@@ -8099,7 +8116,7 @@ tree\n java_method_add_stmt (fndecl, expr)\n      tree fndecl, expr;\n {\n-  return add_stmt_to_block (DECL_FUNCTION_BODY (fndecl), NULL_TREE, expr);\n+  return add_stmt_to_block (GET_CURRENT_BLOCK (fndecl), NULL_TREE, expr);\n }\n \n static tree\n@@ -8290,6 +8307,8 @@ java_complete_expand_methods ()\n \t{\n \t  if (flag_emit_class_files)\n \t    write_classfile (current_class);\n+\t  if (flag_emit_xref)\n+\t    expand_xref (current_class);\n \t  else if (! flag_syntax_only)\n \t    finish_class (current_class);\n \t}\n@@ -8330,8 +8349,13 @@ java_complete_expand_method (mdecl)\n \n       if (block_body != NULL_TREE)\n \t{\n+\t  /* Prevent the use of `this' inside <clinit> */\n+\t  if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+\t    ctxp->explicit_constructor_p = 1;\n+\n \t  block_body = java_complete_tree (block_body);\n \t  check_for_initialization (block_body);\n+\t  ctxp->explicit_constructor_p = 0;\n \t}\n       BLOCK_EXPR_BODY (fbody) = block_body;\n \n@@ -10871,7 +10895,12 @@ enter_a_block (b)\n {\n   tree fndecl = current_function_decl; \n \n-  if (!DECL_FUNCTION_BODY (fndecl))\n+  if (!fndecl) {\n+    BLOCK_SUPERCONTEXT (b) = current_static_block;\n+    current_static_block = b;\n+  }\n+\n+  else if (!DECL_FUNCTION_BODY (fndecl))\n     {\n       BLOCK_SUPERCONTEXT (b) = fndecl;\n       DECL_FUNCTION_BODY (fndecl) = b;\n@@ -10891,11 +10920,20 @@ enter_a_block (b)\n static tree\n exit_block ()\n {\n-  tree b = DECL_FUNCTION_BODY (current_function_decl);\n-\n-  if (BLOCK_SUPERCONTEXT (b) != current_function_decl)\n-    DECL_FUNCTION_BODY (current_function_decl) = BLOCK_SUPERCONTEXT (b);\n+  tree b;\n+  if (current_function_decl)\n+    {\n+      b = DECL_FUNCTION_BODY (current_function_decl);\n+      if (BLOCK_SUPERCONTEXT (b) != current_function_decl)\n+\tDECL_FUNCTION_BODY (current_function_decl) = BLOCK_SUPERCONTEXT (b);\n+    }\n+  else\n+    {\n+      b = current_static_block;\n \n+      if (BLOCK_SUPERCONTEXT (b))\n+\tcurrent_static_block = BLOCK_SUPERCONTEXT (b);\n+    }\n   return b;\n }\n \n@@ -10907,7 +10945,7 @@ static tree\n lookup_name_in_blocks (name)\n      tree name;\n {\n-  tree b = DECL_FUNCTION_BODY (current_function_decl);\n+  tree b = GET_CURRENT_BLOCK (current_function_decl);\n \n   while (b != current_function_decl)\n     {\n@@ -10929,7 +10967,7 @@ lookup_name_in_blocks (name)\n static void\n maybe_absorb_scoping_blocks ()\n {\n-  while (BLOCK_EXPR_ORIGIN (DECL_FUNCTION_BODY (current_function_decl)))\n+  while (BLOCK_EXPR_ORIGIN (GET_CURRENT_BLOCK (current_function_decl)))\n     {\n       tree b = exit_block ();\n       java_method_add_stmt (current_function_decl, b);\n@@ -12874,14 +12912,22 @@ patch_return (node)\n   if (return_exp && (mtype == void_type_node || DECL_CONSTRUCTOR_P (meth)))\n     error_found = 1;\n \n+  /* It's invalid to use a return statement in a static block */\n+  if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+    error_found = 1;\n+\n   /* It's invalid to have a no return value within a function that\n      isn't declared with the keyword `void' */\n   if (!return_exp && (mtype != void_type_node && !DECL_CONSTRUCTOR_P (meth)))\n     error_found = 2;\n \n   if (error_found)\n     {\n-      if (!DECL_CONSTRUCTOR_P (meth))\n+      if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+\tparse_error_context (wfl_operator,\n+\t\t\t     \"`return' inside static initializer.\");\n+\n+      else if (!DECL_CONSTRUCTOR_P (meth))\n \t{\n \t  char *t = strdup (lang_printable_name (mtype, 0));\n \t  parse_error_context (wfl_operator, \n@@ -13584,8 +13630,7 @@ patch_throw_statement (node, wfl_op1)\n      throws clause the declaration. */\n   SET_WFL_OPERATOR (wfl_operator, node, wfl_op1);\n   if (!unchecked_ok)\n-    tryblock_throws_ok = \n-      check_thrown_exceptions_do (TREE_TYPE (expr));\n+    tryblock_throws_ok = check_thrown_exceptions_do (TREE_TYPE (expr));\n   if (!(unchecked_ok || tryblock_throws_ok))\n     {\n       /* If there is a surrounding try block that has no matching\n@@ -13599,11 +13644,22 @@ patch_throw_statement (node, wfl_op1)\n \t\t\t     lang_printable_name (type, 0));\n       /* If we have no surrounding try statement and the method doesn't have\n \t any throws, report it now. FIXME */\n+\n+      /* We report that the exception can't be throw from a try block\n+         in all circumstances but when the `throw' is inside a static\n+         block. */\n       else if (!EXCEPTIONS_P (currently_caught_type_list) \n \t       && !tryblock_throws_ok)\n-\tparse_error_context (wfl_operator, \"Checked exception `%s' isn't \"\n-\t\t\t     \"thrown from a `try' block\", \n-\t\t\t     lang_printable_name (type, 0));\n+\t{\n+\t  if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+\t    parse_error_context (wfl_operator, \"Checked exception `%s' can't \"\n+\t\t\t\t \"be thrown in initializer\",\n+\t\t\t\t lang_printable_name (type, 0));\n+\t  else\n+\t    parse_error_context (wfl_operator, \"Checked exception `%s' isn't \"\n+\t\t\t\t \"thrown from a `try' block\", \n+\t\t\t\t lang_printable_name (type, 0));\n+\t}\n       /* Otherwise, the current method doesn't have the appropriate\n          throws declaration */\n       else\n@@ -13614,11 +13670,6 @@ patch_throw_statement (node, wfl_op1)\n       return error_mark_node;\n     }\n \n-  /* If a throw statement is contained in a static initializer, then a\n-     compile-time check ensures that either its value is always an\n-     unchecked exception or its value is always caught by some try\n-     statement that contains it. FIXME, static initializer. */\n-  \n   if (! flag_emit_class_files)\n     BUILD_THROW (node, expr);\n   return node;"}, {"sha": "52d9917df87292d62002f844ff485356fec7ce03", "filename": "gcc/java/parse.h", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=f099f336d1933243103b460498b49c7b7314d2be", "patch": "@@ -456,10 +456,15 @@ typedef struct _jdeplist {\n #define BLOCK_CHAIN_DECL(NODE)\t\t\t\t\t\t    \\\n   {\t\t \t\t\t\t\t\t\t    \\\n     TREE_CHAIN ((NODE)) = \t\t\t\t\t\t    \\\n-      BLOCK_EXPR_DECLS (DECL_FUNCTION_BODY (current_function_decl));\t    \\\n-    BLOCK_EXPR_DECLS (DECL_FUNCTION_BODY (current_function_decl)) = (NODE); \\\n+      BLOCK_EXPR_DECLS (GET_CURRENT_BLOCK (current_function_decl));         \\\n+    BLOCK_EXPR_DECLS (GET_CURRENT_BLOCK (current_function_decl)) = (NODE);  \\\n   }\n \n+/* Return the current block, either found in the body of the currently\n+   declared function or in the current static block being defined. */\n+#define GET_CURRENT_BLOCK(F) ((F) ? DECL_FUNCTION_BODY ((F)) :\t\\\n+\t\t\t     current_static_block)\n+\n /* For an artificial BLOCK (created to house a local variable declaration not\n    at the start of an existing block), the parent block;  otherwise NULL. */\n #define BLOCK_EXPR_ORIGIN(NODE) BLOCK_ABSTRACT_ORIGIN(NODE)\n@@ -472,6 +477,13 @@ typedef struct _jdeplist {\n #define DECL_SOURCE_LINE_FIRST(DECL)    (DECL_SOURCE_LINE(DECL) & 0x0000ffff)\n #define DECL_SOURCE_LINE_LAST(DECL)     (DECL_SOURCE_LINE(DECL) >> 16)\n \n+/* Retrieve line/column from a WFL. */\n+#define EXPR_WFL_GET_LINECOL(V,LINE,COL)\t\\\n+  {\t\t\t\t\t\t\\\n+     (LINE) = (V) >> 12;\t\t\t\\\n+     (COL) = (V) & 0xfff;\t\t\t\\\n+   }\n+\n /* Build a WFL for expression nodes */\n #define BUILD_EXPR_WFL(NODE, WFL)\t\t\t\t\t\\\n   build_expr_wfl ((NODE), input_filename, EXPR_WFL_LINENO ((WFL)), \t\\"}, {"sha": "3792cba9691ed090e028531dca57877e0c59614d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 77, "deletions": 26, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f099f336d1933243103b460498b49c7b7314d2be", "patch": "@@ -61,6 +61,7 @@ definitions and other extensions.  */\n #include \"zipfile.h\"\n #include \"convert.h\"\n #include \"buffer.h\"\n+#include \"xref.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -290,6 +291,10 @@ static tree java_lang_id = NULL_TREE;\n \n /* The \"java.lang.Cloneable\" qualified name.  */\n static tree java_lang_cloneable = NULL_TREE;\n+\n+/* Context and flag for static blocks */\n+static tree current_static_block = NULL_TREE;\n+\n %}\n \n %union {\n@@ -931,11 +936,13 @@ method_body:\n static_initializer:\n \tstatic block\n \t\t{\n-\t\t  RULE (\"STATIC_INITIALIZER\");\n+\t\t  TREE_CHAIN ($2) = ctxp->static_initialized;\n+\t\t  ctxp->static_initialized = $2;\n \t\t}\n |\tstatic block SC_TK\t/* Shouldn't be here. FIXME */\n \t\t{\n-\t\t  RULE (\"STATIC_INITIALIZER\");\n+\t\t  TREE_CHAIN ($2) = ctxp->static_initialized;\n+\t\t  ctxp->static_initialized = $2;\n \t\t}\n ;\n \n@@ -2850,7 +2857,11 @@ maybe_create_class_interface_decl (decl, qualified_name, cl)\n   \n   /* Take care of the file and line business */\n   DECL_SOURCE_FILE (decl) = EXPR_WFL_FILENAME (cl);\n-  DECL_SOURCE_LINE (decl) = EXPR_WFL_LINENO (cl);\n+  /* If we're emiting xrefs, store the line/col number information */\n+  if (flag_emit_xref)\n+    DECL_SOURCE_LINE (decl) = EXPR_WFL_LINECOL (cl);\n+  else\n+    DECL_SOURCE_LINE (decl) = EXPR_WFL_LINENO (cl);\n   CLASS_FROM_SOURCE_P (TREE_TYPE (decl)) = 1;\n   CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P (TREE_TYPE (decl)) =\n     IS_A_COMMAND_LINE_FILENAME_P (EXPR_WFL_FILENAME_NODE (cl));\n@@ -3142,7 +3153,10 @@ register_fields (flags, type, variable_list)\n \n       /* Set lineno to the line the field was found and create a\n          declaration for it. Eventually sets the @deprecated tag flag. */\n-      lineno = EXPR_WFL_LINENO (cl);\n+      if (flag_emit_xref)\n+\tlineno = EXPR_WFL_LINECOL (cl);\n+      else\n+\tlineno = EXPR_WFL_LINENO (cl);\n       field_decl = add_field (class_type, current_name, real_type, flags);\n       CHECK_DEPRECATED (field_decl);\n       \n@@ -3470,6 +3484,9 @@ finish_method_declaration (method_body)\n   /* Merge last line of the function with first line, directly in the\n      function decl. It will be used to emit correct debug info. */\n   DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n+  /* So we don't have an irrelevant function declaration context for\n+     the next static block we'll see. */\n+  current_function_decl = NULL_TREE;\n }\n \n /* Build a an error message for constructor circularity errors.  */\n@@ -5237,11 +5254,11 @@ declare_local_variables (modifier, type, vlist)\n \n   /* Push a new block if statements were seen between the last time we\n      pushed a block and now. Keep a cound of block to close */\n-  if (BLOCK_EXPR_BODY (DECL_FUNCTION_BODY (current_function_decl)))\n+  if (BLOCK_EXPR_BODY (GET_CURRENT_BLOCK (current_function_decl)))\n     {\n-      tree body = DECL_FUNCTION_BODY (current_function_decl);\n+      tree body = GET_CURRENT_BLOCK (current_function_decl);\n       tree b = enter_block ();\n-      BLOCK_EXPR_ORIGIN(b) = body;\n+      BLOCK_EXPR_ORIGIN (b) = body;\n     }\n \n   if (modifier)\n@@ -5498,7 +5515,7 @@ tree\n java_method_add_stmt (fndecl, expr)\n      tree fndecl, expr;\n {\n-  return add_stmt_to_block (DECL_FUNCTION_BODY (fndecl), NULL_TREE, expr);\n+  return add_stmt_to_block (GET_CURRENT_BLOCK (fndecl), NULL_TREE, expr);\n }\n \n static tree\n@@ -5689,6 +5706,8 @@ java_complete_expand_methods ()\n \t{\n \t  if (flag_emit_class_files)\n \t    write_classfile (current_class);\n+\t  if (flag_emit_xref)\n+\t    expand_xref (current_class);\n \t  else if (! flag_syntax_only)\n \t    finish_class (current_class);\n \t}\n@@ -5729,8 +5748,13 @@ java_complete_expand_method (mdecl)\n \n       if (block_body != NULL_TREE)\n \t{\n+\t  /* Prevent the use of `this' inside <clinit> */\n+\t  if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+\t    ctxp->explicit_constructor_p = 1;\n+\n \t  block_body = java_complete_tree (block_body);\n \t  check_for_initialization (block_body);\n+\t  ctxp->explicit_constructor_p = 0;\n \t}\n       BLOCK_EXPR_BODY (fbody) = block_body;\n \n@@ -8270,7 +8294,12 @@ enter_a_block (b)\n {\n   tree fndecl = current_function_decl; \n \n-  if (!DECL_FUNCTION_BODY (fndecl))\n+  if (!fndecl) {\n+    BLOCK_SUPERCONTEXT (b) = current_static_block;\n+    current_static_block = b;\n+  }\n+\n+  else if (!DECL_FUNCTION_BODY (fndecl))\n     {\n       BLOCK_SUPERCONTEXT (b) = fndecl;\n       DECL_FUNCTION_BODY (fndecl) = b;\n@@ -8290,11 +8319,20 @@ enter_a_block (b)\n static tree\n exit_block ()\n {\n-  tree b = DECL_FUNCTION_BODY (current_function_decl);\n-\n-  if (BLOCK_SUPERCONTEXT (b) != current_function_decl)\n-    DECL_FUNCTION_BODY (current_function_decl) = BLOCK_SUPERCONTEXT (b);\n+  tree b;\n+  if (current_function_decl)\n+    {\n+      b = DECL_FUNCTION_BODY (current_function_decl);\n+      if (BLOCK_SUPERCONTEXT (b) != current_function_decl)\n+\tDECL_FUNCTION_BODY (current_function_decl) = BLOCK_SUPERCONTEXT (b);\n+    }\n+  else\n+    {\n+      b = current_static_block;\n \n+      if (BLOCK_SUPERCONTEXT (b))\n+\tcurrent_static_block = BLOCK_SUPERCONTEXT (b);\n+    }\n   return b;\n }\n \n@@ -8306,7 +8344,7 @@ static tree\n lookup_name_in_blocks (name)\n      tree name;\n {\n-  tree b = DECL_FUNCTION_BODY (current_function_decl);\n+  tree b = GET_CURRENT_BLOCK (current_function_decl);\n \n   while (b != current_function_decl)\n     {\n@@ -8328,7 +8366,7 @@ lookup_name_in_blocks (name)\n static void\n maybe_absorb_scoping_blocks ()\n {\n-  while (BLOCK_EXPR_ORIGIN (DECL_FUNCTION_BODY (current_function_decl)))\n+  while (BLOCK_EXPR_ORIGIN (GET_CURRENT_BLOCK (current_function_decl)))\n     {\n       tree b = exit_block ();\n       java_method_add_stmt (current_function_decl, b);\n@@ -10273,14 +10311,22 @@ patch_return (node)\n   if (return_exp && (mtype == void_type_node || DECL_CONSTRUCTOR_P (meth)))\n     error_found = 1;\n \n+  /* It's invalid to use a return statement in a static block */\n+  if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+    error_found = 1;\n+\n   /* It's invalid to have a no return value within a function that\n      isn't declared with the keyword `void' */\n   if (!return_exp && (mtype != void_type_node && !DECL_CONSTRUCTOR_P (meth)))\n     error_found = 2;\n \n   if (error_found)\n     {\n-      if (!DECL_CONSTRUCTOR_P (meth))\n+      if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+\tparse_error_context (wfl_operator,\n+\t\t\t     \"`return' inside static initializer.\");\n+\n+      else if (!DECL_CONSTRUCTOR_P (meth))\n \t{\n \t  char *t = strdup (lang_printable_name (mtype, 0));\n \t  parse_error_context (wfl_operator, \n@@ -10983,8 +11029,7 @@ patch_throw_statement (node, wfl_op1)\n      throws clause the declaration. */\n   SET_WFL_OPERATOR (wfl_operator, node, wfl_op1);\n   if (!unchecked_ok)\n-    tryblock_throws_ok = \n-      check_thrown_exceptions_do (TREE_TYPE (expr));\n+    tryblock_throws_ok = check_thrown_exceptions_do (TREE_TYPE (expr));\n   if (!(unchecked_ok || tryblock_throws_ok))\n     {\n       /* If there is a surrounding try block that has no matching\n@@ -10998,11 +11043,22 @@ patch_throw_statement (node, wfl_op1)\n \t\t\t     lang_printable_name (type, 0));\n       /* If we have no surrounding try statement and the method doesn't have\n \t any throws, report it now. FIXME */\n+\n+      /* We report that the exception can't be throw from a try block\n+         in all circumstances but when the `throw' is inside a static\n+         block. */\n       else if (!EXCEPTIONS_P (currently_caught_type_list) \n \t       && !tryblock_throws_ok)\n-\tparse_error_context (wfl_operator, \"Checked exception `%s' isn't \"\n-\t\t\t     \"thrown from a `try' block\", \n-\t\t\t     lang_printable_name (type, 0));\n+\t{\n+\t  if (DECL_NAME (current_function_decl) == clinit_identifier_node)\n+\t    parse_error_context (wfl_operator, \"Checked exception `%s' can't \"\n+\t\t\t\t \"be thrown in initializer\",\n+\t\t\t\t lang_printable_name (type, 0));\n+\t  else\n+\t    parse_error_context (wfl_operator, \"Checked exception `%s' isn't \"\n+\t\t\t\t \"thrown from a `try' block\", \n+\t\t\t\t lang_printable_name (type, 0));\n+\t}\n       /* Otherwise, the current method doesn't have the appropriate\n          throws declaration */\n       else\n@@ -11013,11 +11069,6 @@ patch_throw_statement (node, wfl_op1)\n       return error_mark_node;\n     }\n \n-  /* If a throw statement is contained in a static initializer, then a\n-     compile-time check ensures that either its value is always an\n-     unchecked exception or its value is always caught by some try\n-     statement that contains it. FIXME, static initializer. */\n-  \n   if (! flag_emit_class_files)\n     BUILD_THROW (node, expr);\n   return node;"}, {"sha": "906dfedbc584c260d614af418d33d0cbfc9de523", "filename": "gcc/java/xref.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.c?ref=f099f336d1933243103b460498b49c7b7314d2be", "patch": "@@ -26,9 +26,13 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n #include <stdio.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"java-tree.h\"\n #include \"xref.h\"\n+#include \"jcf.h\"\n+#include \"parse.h\"\n+#include \"obstack.h\"\n \n \n static xref_flag_table xref_table [] = {"}, {"sha": "6089d31255c9d6daac130d58f505919dc5be14a9", "filename": "gcc/java/xref.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fxref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099f336d1933243103b460498b49c7b7314d2be/gcc%2Fjava%2Fxref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.h?ref=f099f336d1933243103b460498b49c7b7314d2be", "patch": "@@ -25,7 +25,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Exported functions. */\n int xref_flag_value PROTO ((char *));\n-void xref_generate PROTO ((tree));\n+void expand_xref PROTO ((tree));\n \n /* flag_emit_xref range of possible values. */\n "}]}