{"sha": "ddd3985ef531626ad904f1f2b7d72a07d72b6cd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkMzk4NWVmNTMxNjI2YWQ5MDRmMWYyYjdkNzJhMDdkNzJiNmNkNQ==", "commit": {"author": {"name": "Kyle Galloway", "email": "kgallowa@redhat.com", "date": "2007-05-04T19:48:33Z"}, "committer": {"name": "Kyle Galloway", "email": "kgallowa@gcc.gnu.org", "date": "2007-05-04T19:48:33Z"}, "message": "natVMVirtualMachine.cc (getClassMethod): Change to use JVMTI.\n\n2007-05-04  Kyle Galloway  <kgallowa@redhat.com>\n\n\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getClassMethod): Change\n\tto use JVMTI.\n\nFrom-SVN: r124447", "tree": {"sha": "9ffa87e722d37cfbe71db832db350dec81b3fe28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ffa87e722d37cfbe71db832db350dec81b3fe28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5/comments", "author": null, "committer": null, "parents": [{"sha": "640afd95c0529c9d951bf0e4a5e60175f598d00a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640afd95c0529c9d951bf0e4a5e60175f598d00a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640afd95c0529c9d951bf0e4a5e60175f598d00a"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "427d09ea2c4ffd45f75e5097e754a5862b3ed50f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ddd3985ef531626ad904f1f2b7d72a07d72b6cd5", "patch": "@@ -1,3 +1,8 @@\n+2007-05-04  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getClassMethod): Change\n+\tto use JVMTI.\n+\n 2007-05-03  Keith Seitz  <keiths@redhat.com>\n \n \t* interpret.cc: Don't include ExceptionEvent.h."}, {"sha": "3c89b9863ecdc0b6112b3d4f22963cd7a4f6cc15", "filename": "libjava/gnu/classpath/jdwp/natVMVirtualMachine.cc", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd3985ef531626ad904f1f2b7d72a07d72b6cd5/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMVirtualMachine.cc?ref=ddd3985ef531626ad904f1f2b7d72a07d72b6cd5", "patch": "@@ -510,12 +510,25 @@ gnu::classpath::jdwp::VMMethod *\n gnu::classpath::jdwp::VMVirtualMachine::\n getClassMethod (jclass klass, jlong id)\n {\n-  jmethodID method = reinterpret_cast<jmethodID> (id);\n-  _Jv_MethodBase *bmeth = _Jv_FindInterpreterMethod (klass, method);\n-  if (bmeth != NULL)\n-    return new gnu::classpath::jdwp::VMMethod (klass, id);\n+  jint count;\n+  jmethodID *methods;\n+  jvmtiError err = _jdwp_jvmtiEnv->GetClassMethods (klass, &count, &methods);\n+  if (err != JVMTI_ERROR_NONE)\n+    throw_jvmti_error (err);\n+\n+  jmethodID meth_id = reinterpret_cast<jmethodID> (id);\n+\n+  using namespace gnu::classpath::jdwp;\n+\n+  // Check if this method is defined for the given class and if so return a\n+  // VMMethod representing it.\n+  for (int i = 0; i < count; i++)\n+    {\n+      if (methods[i] == meth_id)\n+        return new VMMethod (klass, reinterpret_cast<jlong> (meth_id));\n+    }\n \n-  throw new gnu::classpath::jdwp::exception::InvalidMethodException (id);\n+  throw new exception::InvalidMethodException (id);\n }\n \n java::util::ArrayList *"}]}