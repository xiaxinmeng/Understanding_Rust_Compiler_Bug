{"sha": "2959ff8e7dd8b06bee76636af84c5aee06971397", "node_id": "C_kwDOANBUbNoAKDI5NTlmZjhlN2RkOGIwNmJlZTc2NjM2YWY4NGM1YWVlMDY5NzEzOTc", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-10T13:10:59Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-10T13:15:21Z"}, "message": "macro: Add assertion to avoid undefined behavior\n\nThis also fixes the undefined behavior. Once again we are hurt by\n`std::vector<T>::back()` returning references and not\npointers/`std::optional<T>`s!\n\nThe cause of the bug was some overzealous popping from the context\nvector in block expressions. The amount of calls to `pop_context` is now\nthe same as the amount of calls to `push_context`", "tree": {"sha": "947ce9f45a069b8c0c6e844bcd5bec51311d0d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/947ce9f45a069b8c0c6e844bcd5bec51311d0d9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2959ff8e7dd8b06bee76636af84c5aee06971397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2959ff8e7dd8b06bee76636af84c5aee06971397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2959ff8e7dd8b06bee76636af84c5aee06971397", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2959ff8e7dd8b06bee76636af84c5aee06971397/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140f6a698b4d7157e6a33cd7b41c27b39ecbf76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140f6a698b4d7157e6a33cd7b41c27b39ecbf76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140f6a698b4d7157e6a33cd7b41c27b39ecbf76e"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "c7c6867dd1027ef658951453518287c32da0639a", "filename": "gcc/rust/expand/rust-attribute-visitor.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2959ff8e7dd8b06bee76636af84c5aee06971397/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2959ff8e7dd8b06bee76636af84c5aee06971397/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-attribute-visitor.cc?ref=2959ff8e7dd8b06bee76636af84c5aee06971397", "patch": "@@ -1193,7 +1193,6 @@ AttrVisitor::visit (AST::BlockExpr &expr)\n   if (expander.fails_cfg_with_expand (expr.get_outer_attrs ()))\n     {\n       expr.mark_for_strip ();\n-      expander.pop_context ();\n       return;\n     }\n \n@@ -1203,7 +1202,6 @@ AttrVisitor::visit (AST::BlockExpr &expr)\n   if (expander.fails_cfg_with_expand (expr.get_inner_attrs ()))\n     {\n       expr.mark_for_strip ();\n-      expander.pop_context ();\n       return;\n     }\n "}, {"sha": "a5825249f338eb222c5ecda64739a594abd95574", "filename": "gcc/rust/expand/rust-macro-expand.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2959ff8e7dd8b06bee76636af84c5aee06971397/gcc%2Frust%2Fexpand%2Frust-macro-expand.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2959ff8e7dd8b06bee76636af84c5aee06971397/gcc%2Frust%2Fexpand%2Frust-macro-expand.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.h?ref=2959ff8e7dd8b06bee76636af84c5aee06971397", "patch": "@@ -275,8 +275,11 @@ struct MacroExpander\n \n   ContextType pop_context ()\n   {\n+    rust_assert (!context.empty ());\n+\n     ContextType t = context.back ();\n     context.pop_back ();\n+\n     return t;\n   }\n "}, {"sha": "d762bb7fb9e52354ecc497deb3b479f633c03bd0", "filename": "gcc/testsuite/rust/compile/macro-issue1233.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2959ff8e7dd8b06bee76636af84c5aee06971397/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue1233.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2959ff8e7dd8b06bee76636af84c5aee06971397/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue1233.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue1233.rs?ref=2959ff8e7dd8b06bee76636af84c5aee06971397", "patch": "@@ -0,0 +1,22 @@\n+// { dg-additional-options \"-w\" }\n+\n+macro_rules! impl_uint {\n+    ($($ty:ident = $lang:literal),*) => {\n+        $(\n+            impl $ty {\n+                pub fn to_le(self) -> Self {\n+                    #[cfg(not(target_endian = \"little\"))]\n+                    {\n+                        self\n+                    }\n+                    #[cfg(target_endian = \"little\")]\n+                    {\n+                        self\n+                    }\n+                }\n+            }\n+        )*\n+    }\n+}\n+\n+impl_uint!(u8 = \"u8\", u16 = \"u16\", u32 = \"u32\");"}]}