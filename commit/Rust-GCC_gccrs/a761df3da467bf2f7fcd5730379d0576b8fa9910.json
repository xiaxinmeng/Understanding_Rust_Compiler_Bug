{"sha": "a761df3da467bf2f7fcd5730379d0576b8fa9910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2MWRmM2RhNDY3YmYyZjdmY2Q1NzMwMzc5ZDA1NzZiOGZhOTkxMA==", "commit": {"author": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2009-12-31T17:44:32Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2009-12-31T17:44:32Z"}, "message": "Windows patch\n\nFrom-SVN: r155540", "tree": {"sha": "413bf962b43b4c0fe1180b5401b187f3dcb74d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/413bf962b43b4c0fe1180b5401b187f3dcb74d07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a761df3da467bf2f7fcd5730379d0576b8fa9910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a761df3da467bf2f7fcd5730379d0576b8fa9910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a761df3da467bf2f7fcd5730379d0576b8fa9910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a761df3da467bf2f7fcd5730379d0576b8fa9910/comments", "author": null, "committer": null, "parents": [{"sha": "0d6f2a8037b2040d04556fe3c07dc506defba5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6f2a8037b2040d04556fe3c07dc506defba5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6f2a8037b2040d04556fe3c07dc506defba5bf"}], "stats": {"total": 66, "additions": 45, "deletions": 21}, "files": [{"sha": "0dc5de45dc968843a2effab53c3dccde58c709aa", "filename": "libffi/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -1,3 +1,16 @@\n+2009-12-31  Kay Tietz  <ktietz70@googlemail.com>\n+\n+\t* testsuite/libffi.call/ffitest.h,\n+\ttestsuite/libffi.special/ffitestcxx.h (PRIdLL, PRuLL): Fix\n+\tdefinitions.\n+\n+2009-12-31  Carlo Bramini  <carlo.bramix@libero.it>\n+\n+\t* configure.ac (AM_LTLDFLAGS): Define for windows hosts.\n+\t* Makefile.am (libffi_la_LDFLAGS): Add AM_LTLDFLAGS.\n+\t* configure: Rebuilt.\n+\t* Makefile.in: Rebuilt.\n+\n 2009-12-31  Anthony Green  <green@redhat.com>\n \t    Blake Chaffin.\n "}, {"sha": "6e414de707dc403c821f8d90c1b593d936fcc5a1", "filename": "libffi/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -168,7 +168,7 @@ AM_CFLAGS = -Wall -g -fexceptions\n \n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n \n-libffi_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS)\n+libffi_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS) $(AM_LTLDFLAGS)\n \n AM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n AM_CCASFLAGS = $(AM_CPPFLAGS)"}, {"sha": "a7196130421ee38ab46ff3d87f7607ff3d32cbf0", "filename": "libffi/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -262,6 +262,7 @@ distcleancheck_listfiles = find . -type f -print\n ACLOCAL = @ACLOCAL@\n ALLOCA = @ALLOCA@\n AMTAR = @AMTAR@\n+AM_LTLDFLAGS = @AM_LTLDFLAGS@\n AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n@@ -472,7 +473,7 @@ libffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\n nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n AM_CFLAGS = -Wall -g -fexceptions\n LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-libffi_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS)\n+libffi_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LTLDFLAGS) $(AM_LTLDFLAGS)\n AM_CPPFLAGS = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n AM_CCASFLAGS = $(AM_CPPFLAGS)\n all: fficonfig.h"}, {"sha": "b849fe32c1c16195e2cf30241f1cc4e3b7e397ec", "filename": "libffi/configure", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.64 for libffi 3.0.8.\n+# Generated by GNU Autoconf 2.64 for libffi 3.0.9.\n #\n # Report bugs to <http://gcc.gnu.org/bugs.html>.\n #\n@@ -559,8 +559,8 @@ MAKEFLAGS=\n # Identity of this package.\n PACKAGE_NAME='libffi'\n PACKAGE_TARNAME='libffi'\n-PACKAGE_VERSION='3.0.8'\n-PACKAGE_STRING='libffi 3.0.8'\n+PACKAGE_VERSION='3.0.9'\n+PACKAGE_STRING='libffi 3.0.9'\n PACKAGE_BUGREPORT='http://gcc.gnu.org/bugs.html'\n PACKAGE_URL=''\n \n@@ -662,6 +662,7 @@ SPARC_FALSE\n SPARC_TRUE\n MIPS_FALSE\n MIPS_TRUE\n+AM_LTLDFLAGS\n AM_RUNTESTFLAGS\n TESTSUBDIR_FALSE\n TESTSUBDIR_TRUE\n@@ -1347,7 +1348,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures libffi 3.0.8 to adapt to many kinds of systems.\n+\\`configure' configures libffi 3.0.9 to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -1418,7 +1419,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of libffi 3.0.8:\";;\n+     short | recursive ) echo \"Configuration of libffi 3.0.9:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -1526,7 +1527,7 @@ fi\n test -n \"$ac_init_help\" && exit $ac_status\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-libffi configure 3.0.8\n+libffi configure 3.0.9\n generated by GNU Autoconf 2.64\n \n Copyright (C) 2009 Free Software Foundation, Inc.\n@@ -2075,7 +2076,7 @@ cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by libffi $as_me 3.0.8, which was\n+It was created by libffi $as_me 3.0.9, which was\n generated by GNU Autoconf 2.64.  Invocation command line was\n \n   $ $0 $@\n@@ -3042,7 +3043,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='libffi'\n- VERSION='3.0.8'\n+ VERSION='3.0.9'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -10773,7 +10774,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10776 \"configure\"\n+#line 10777 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10879,7 +10880,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10882 \"configure\"\n+#line 10883 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11358,6 +11359,8 @@ case \"$host\" in\n \t;;\n   i?86-win32* | i?86-*-cygwin* | i?86-*-mingw*)\n \tTARGET=X86_WIN32; TARGETDIR=x86\n+\t# All mingw/cygwin/win32 builds require this for sharedlib\n+\tAM_LTLDFLAGS=\"-no-undefined\"\n \t;;\n   i?86-*-darwin*)\n \tTARGET=X86_DARWIN; TARGETDIR=x86\n@@ -11437,6 +11440,7 @@ esac\n \n \n \n+\n if test $TARGETDIR = unknown; then\n   as_fn_error \"\\\"libffi has not been ported to $host.\\\"\" \"$LINENO\" 5\n fi\n@@ -13194,7 +13198,7 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n # report actual input values of CONFIG_FILES etc. instead of their\n # values after options handling.\n ac_log=\"\n-This file was extended by libffi $as_me 3.0.8, which was\n+This file was extended by libffi $as_me 3.0.9, which was\n generated by GNU Autoconf 2.64.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -13262,7 +13266,7 @@ Report bugs to <http://gcc.gnu.org/bugs.html>.\"\n _ACEOF\n cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n ac_cs_version=\"\\\\\n-libffi config.status 3.0.8\n+libffi config.status 3.0.9\n configured by $0, generated by GNU Autoconf 2.64,\n   with options \\\\\"`$as_echo \"$ac_configure_args\" | sed 's/^ //; s/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n "}, {"sha": "a3988395bcce9b4f5eb6b5503640f6f03ffed874", "filename": "libffi/configure.ac", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -2,7 +2,7 @@ dnl Process this with autoconf to create configure\n \n AC_PREREQ(2.64)\n \n-AC_INIT([libffi], [3.0.8], [http://gcc.gnu.org/bugs.html])\n+AC_INIT([libffi], [3.0.9], [http://gcc.gnu.org/bugs.html])\n AC_CONFIG_HEADERS([fficonfig.h])\n \n AM_ENABLE_MULTILIB(, ..)\n@@ -82,6 +82,8 @@ case \"$host\" in\n \t;;\n   i?86-win32* | i?86-*-cygwin* | i?86-*-mingw*)\n \tTARGET=X86_WIN32; TARGETDIR=x86\n+\t# All mingw/cygwin/win32 builds require this for sharedlib\n+\tAM_LTLDFLAGS=\"-no-undefined\"\n \t;;\n   i?86-*-darwin*)\n \tTARGET=X86_DARWIN; TARGETDIR=x86\n@@ -160,6 +162,7 @@ case \"$host\" in\n esac\n \n AC_SUBST(AM_RUNTESTFLAGS)\n+AC_SUBST(AM_LTLDFLAGS)\n \n if test $TARGETDIR = unknown; then\n   AC_MSG_ERROR([\"libffi has not been ported to $host.\"])"}, {"sha": "0953e52fb71ae73b2609fa07a10e2f7b0ca747e5", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -84,6 +84,7 @@ DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n ACLOCAL = @ACLOCAL@\n ALLOCA = @ALLOCA@\n AMTAR = @AMTAR@\n+AM_LTLDFLAGS = @AM_LTLDFLAGS@\n AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n AR = @AR@\n AUTOCONF = @AUTOCONF@"}, {"sha": "265189f8527accd29bb3438227d3dcecac0bfd6b", "filename": "libffi/man/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Fman%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Fman%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.in?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -82,6 +82,7 @@ DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n ACLOCAL = @ACLOCAL@\n ALLOCA = @ALLOCA@\n AMTAR = @AMTAR@\n+AM_LTLDFLAGS = @AM_LTLDFLAGS@\n AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n AR = @AR@\n AUTOCONF = @AUTOCONF@"}, {"sha": "97295f0f6ecd662ff49983db4ef41c5937a8a614", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -59,6 +59,7 @@ DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n ACLOCAL = @ACLOCAL@\n ALLOCA = @ALLOCA@\n AMTAR = @AMTAR@\n+AM_LTLDFLAGS = @AM_LTLDFLAGS@\n AM_RUNTESTFLAGS = \n AR = @AR@\n AUTOCONF = @AUTOCONF@"}, {"sha": "a54b2146f9c8a2d900d2cc40e064a7c6229a7fc6", "filename": "libffi/testsuite/libffi.call/ffitest.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fffitest.h?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -46,9 +46,9 @@\n #endif\n \n /* MinGW kludge.  */\n-#ifdef WIN64\n-#define PRIdLL \"PRId64\"\n-#define PRIuLL \"PRIu64\"\n+#ifdef _WIN64\n+#define PRIdLL \"I64d\"\n+#define PRIuLL \"I64u\"\n #else\n #define PRIdLL \"lld\"\n #define PRIuLL \"llu\""}, {"sha": "e300cce9d9da11449c2d24cd52d5f693ab3ae41e", "filename": "libffi/testsuite/libffi.special/ffitestcxx.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a761df3da467bf2f7fcd5730379d0576b8fa9910/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Fffitestcxx.h?ref=a761df3da467bf2f7fcd5730379d0576b8fa9910", "patch": "@@ -45,9 +45,9 @@\n \n \n /* MinGW kludge.  */\n-#ifdef WIN64\n-#define PRIdLL \"PRId64\"\n-#define PRIuLL \"PRIu64\"\n+#ifdef _WIN64\n+#define PRIdLL \"I64d\"\n+#define PRIuLL \"I64u\"\n #else\n #define PRIdLL \"lld\"\n #define PRIuLL \"llu\""}]}