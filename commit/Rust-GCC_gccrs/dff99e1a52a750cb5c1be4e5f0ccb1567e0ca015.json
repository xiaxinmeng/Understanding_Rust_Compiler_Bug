{"sha": "dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZmOTllMWE1MmE3NTBjYjVjMWJlNGU1ZjBjY2IxNTY3ZTBjYTAxNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T13:57:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T13:57:09Z"}, "message": "[multiple changes]\n\n2011-08-30  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch12.adb (Check_Private_View): Exchange the private and full view\n\tof a designated type when the related access type is an actual in an\n\tinstance. This ensures that the full view of designated type is\n\tavailable when inside the body of the instance.\n\n2011-08-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (May_Be_Lvalue): To determine whether a reference may be\n\tin a position to be modified, a slice is treated like an indexed\n\tcomponent.\n\nFrom-SVN: r178308", "tree": {"sha": "7cb1ff0e6c6dc2fb39501b599bcc0e9943641376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cb1ff0e6c6dc2fb39501b599bcc0e9943641376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/comments", "author": null, "committer": null, "parents": [{"sha": "63be2a5ab4f84b257cb17d3a8f16bc56ff8927bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63be2a5ab4f84b257cb17d3a8f16bc56ff8927bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63be2a5ab4f84b257cb17d3a8f16bc56ff8927bc"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "fcb90dd9c3c6fc7f6d4d0d82e6daf661545f47a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "patch": "@@ -1,3 +1,16 @@\n+2011-08-30  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch12.adb (Check_Private_View): Exchange the private and full view\n+\tof a designated type when the related access type is an actual in an\n+\tinstance. This ensures that the full view of designated type is\n+\tavailable when inside the body of the instance.\n+\n+2011-08-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (May_Be_Lvalue): To determine whether a reference may be\n+\tin a position to be modified, a slice is treated like an indexed\n+\tcomponent.\n+\n 2011-08-30  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-oscons-tmplt.c, g-socket.ads: Adjust maximum allowed value for"}, {"sha": "b9c8ab1598135b85b8677e4c09c8dd56f253442f", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "patch": "@@ -5749,12 +5749,17 @@ package body Sem_Ch12 is\n             end if;\n \n          --  For composite types with inconsistent representation exchange\n-         --  component types accordingly.\n+         --  component types accordingly. We exchange the private and full view\n+         --  of a designated type when the related access type is an actual in\n+         --  an instance. This ensures that the full view of designated type is\n+         --  available when inside the body of the instance.\n+         --  Is this right ???\n \n          elsif Is_Access_Type (T)\n            and then Is_Private_Type (Designated_Type (T))\n            and then not Has_Private_View (N)\n            and then Present (Full_View (Designated_Type (T)))\n+           and then Used_As_Generic_Actual (T)\n          then\n             Switch_View (Designated_Type (T));\n "}, {"sha": "4b48a5ab505b492bed5bfac77c767b1c01d3fc3a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=dff99e1a52a750cb5c1be4e5f0ccb1567e0ca015", "patch": "@@ -9044,7 +9044,7 @@ package body Sem_Util is\n          --  or slice is an lvalue, except if it is an access type, where we\n          --  have an implicit dereference.\n \n-         when N_Indexed_Component    =>\n+         when N_Indexed_Component | N_Slice    =>\n             if N /= Prefix (P)\n               or else (Present (Etype (N)) and then Is_Access_Type (Etype (N)))\n             then"}]}