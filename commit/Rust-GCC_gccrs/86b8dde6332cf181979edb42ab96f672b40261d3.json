{"sha": "86b8dde6332cf181979edb42ab96f672b40261d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZiOGRkZTYzMzJjZjE4MTk3OWVkYjQyYWI5NmY2NzJiNDAyNjFkMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-08-09T07:28:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-08-09T07:28:54Z"}, "message": "Finish preliminary wchar_t implementation, with trivial encodings.\n\n\n2000-08-09  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\tFinish preliminary wchar_t implementation, with trivial encodings.\n\t* docs/configopts.html: Add bits about canonical configure option\n\tchecking.\n\n\t* testsuite/27_io/iostream_objects.cc: Replace this file (which\n\thas newly-declared-illegal mixing of wide/narrow stdstreams) with...\n\t* testsuite/27_io/narrow_stream_objects.cc: New file.\n\t* testsuite/27_io/wide_stream_objects.cc: New file.\n\n\t* bits/fstream.tcc (underflow): Temporarily hack a solution\n\ttogether that writes from the external file to the internal\n\tbuffers. This removes codecvt from the loop, and is incorrect.\n\t(_M_really_overflow): Same here.\n\n\t* testsuite/21_strings/inserters_extractors.cc (test05): Tweaks.\n\nFrom-SVN: r35582", "tree": {"sha": "5f227693ea8727a813c0dc35fa09a37d91d69419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f227693ea8727a813c0dc35fa09a37d91d69419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86b8dde6332cf181979edb42ab96f672b40261d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b8dde6332cf181979edb42ab96f672b40261d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b8dde6332cf181979edb42ab96f672b40261d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b8dde6332cf181979edb42ab96f672b40261d3/comments", "author": null, "committer": null, "parents": [{"sha": "08e72a192902ca20803e5b423bfb6cfdc983642e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e72a192902ca20803e5b423bfb6cfdc983642e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e72a192902ca20803e5b423bfb6cfdc983642e"}], "stats": {"total": 117, "additions": 102, "deletions": 15}, "files": [{"sha": "e79003312ac83c1403025fd26897066faf0ff1b8", "filename": "libstdc++-v3/testsuite/27_io/narrow_stream_objects.cc", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8dde6332cf181979edb42ab96f672b40261d3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fnarrow_stream_objects.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8dde6332cf181979edb42ab96f672b40261d3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fnarrow_stream_objects.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fnarrow_stream_objects.cc?ref=86b8dde6332cf181979edb42ab96f672b40261d3", "patch": "@@ -0,0 +1,99 @@\n+// 2000-08-02 bkoz\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// Include all the headers except for iostream.\n+#include <algorithm>\n+#include <bitset>\n+#include <complex>\n+#include <deque>\n+#include <exception>\n+#include <fstream>\n+#include <functional>\n+#include <iomanip>\n+#include <ios>\n+#include <iosfwd>\n+#include <istream>\n+#include <iterator>\n+#include <limits>\n+#include <list>\n+#include <locale>\n+#include <map>\n+#include <memory>\n+#include <new>\n+#include <numeric>\n+#include <ostream>\n+#include <queue>\n+#include <set>\n+#include <sstream>\n+#include <stack>\n+#include <stdexcept>\n+#include <streambuf>\n+#include <string>\n+#include <typeinfo>\n+#include <utility>\n+#include <valarray>\n+#include <vector>\n+#include <cassert>\n+#include <cctype>\n+#include <cerrno>\n+#include <cfloat>\n+#include <ciso646>\n+#include <climits>\n+#include <clocale>\n+#include <cmath>\n+#include <csetjmp>\n+#include <csignal>\n+#include <cstdarg>\n+#include <cstddef>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n+#include <ctime>\n+\n+// Include iostream last, just to make is as difficult as possible to\n+// properly initialize the standard iostream objects.\n+#include <iostream>\n+\n+// Make sure all the standard streams are defined.\n+bool test01()\n+{\n+  bool test = true;\n+\n+  char array1[20];\n+  typedef std::ios::traits_type ctraits_type;\n+  ctraits_type::int_type i = 15;\n+  ctraits_type::copy(array1, \"testing istream\", i);\n+  array1[i] = '\\0';\n+  std::cout << \"testing cout\" << std::endl;\n+  std::cerr << \"testing cerr\" << std::endl;\n+  test &= std::cerr.flags() & std::ios_base::unitbuf;\n+  std::clog << \"testing clog\" << std::endl;\n+  // std::cin >> array1; // requires somebody to type something in.\n+  test &= std::cin.tie() == &std::cout;\n+\n+  return test;\n+}\n+\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5901d08d0e94614b5749c15d2a250a1171e8b331", "filename": "libstdc++-v3/testsuite/27_io/wide_stream_objects.cc", "status": "renamed", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8dde6332cf181979edb42ab96f672b40261d3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fwide_stream_objects.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8dde6332cf181979edb42ab96f672b40261d3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fwide_stream_objects.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fwide_stream_objects.cc?ref=86b8dde6332cf181979edb42ab96f672b40261d3", "patch": "@@ -1,6 +1,6 @@\n-// 990519 bkoz\n+// 2000-08-02 bkoz\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -81,18 +81,6 @@ bool test01()\n {\n   bool test = true;\n \n-  char array1[20];\n-  typedef std::ios::traits_type ctraits_type;\n-  ctraits_type::int_type i = 15;\n-  ctraits_type::copy(array1, \"testing istream\", i);\n-  array1[i] = '\\0';\n-  std::cout << \"testing cout\" << std::endl;\n-  std::cerr << \"testing cerr\" << std::endl;\n-  test &= std::cerr.flags() & std::ios_base::unitbuf;\n-  std::clog << \"testing clog\" << std::endl;\n-  // std::cin >> array1; // requires somebody to type something in.\n-  test &= std::cin.tie() == &std::cout;\n-\n #ifdef _GLIBCPP_USE_WCHAR_T\n   wchar_t array2[20];\n   typedef std::wios::traits_type wtraits_type;\n@@ -106,7 +94,7 @@ bool test01()\n   test &= std::wcin.tie() == &std::wcout;\n #endif\n \n-  return true;\n+  return test;\n }\n \n ", "previous_filename": "libstdc++-v3/testsuite/27_io/iostream_objects.cc"}]}