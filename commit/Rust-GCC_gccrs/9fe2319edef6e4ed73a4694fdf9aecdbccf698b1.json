{"sha": "9fe2319edef6e4ed73a4694fdf9aecdbccf698b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZlMjMxOWVkZWY2ZTRlZDczYTQ2OTRmZGY5YWVjZGJjY2Y2OThiMQ==", "commit": {"author": {"name": "Rask Ingemann Lambertsen", "email": "rask@sygehus.dk", "date": "2007-10-29T23:54:54Z"}, "committer": {"name": "Rask Ingemann Lambertsen", "email": "rask@gcc.gnu.org", "date": "2007-10-29T23:54:54Z"}, "message": "longlong.h (add_ssaaaa): Support Intel asm syntax in i386 and x86_64 versions.\n\n\t* longlong.h (add_ssaaaa): Support Intel asm syntax in i386 and\n\tx86_64 versions.\n\t(sub_ddmmss): Likewise.\n\t(umul_ppmm): Likewise.\n\t(udiv_qrnnd): Likewise.\n\nFrom-SVN: r129756", "tree": {"sha": "19c9f2d44b15ee660cece60fcf1fff723d43fd1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19c9f2d44b15ee660cece60fcf1fff723d43fd1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1/comments", "author": null, "committer": null, "parents": [{"sha": "9f143763f0c95e495a4c2e62dc551eb4ed7106ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f143763f0c95e495a4c2e62dc551eb4ed7106ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f143763f0c95e495a4c2e62dc551eb4ed7106ef"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "8e85aae9a07fbc76e007ac613897cbb76416f179", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fe2319edef6e4ed73a4694fdf9aecdbccf698b1", "patch": "@@ -1,3 +1,11 @@\n+2007-10-29  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\t* longlong.h (add_ssaaaa): Support Intel asm syntax in i386 and\n+\tx86_64 versions.\n+\t(sub_ddmmss): Likewise.\n+\t(umul_ppmm): Likewise.\n+\t(udiv_qrnnd): Likewise.\n+\n 2007-10-29  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR testsuite/24841"}, {"sha": "6c24564bd3e846db05c16ca367df25e093e3fa63", "filename": "gcc/longlong.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fe2319edef6e4ed73a4694fdf9aecdbccf698b1/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=9fe2319edef6e4ed73a4694fdf9aecdbccf698b1", "patch": "@@ -319,29 +319,29 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if (defined (__i386__) || defined (__i486__)) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addl %5,%1\\n\\tadcl %3,%0\"\t\t\t\t\t\\\n+  __asm__ (\"add{l} {%5,%1|%1,%5}\\n\\tadc{l} {%3,%0|%0,%3}\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subl %5,%1\\n\\tsbbl %3,%0\"\t\t\t\t\t\\\n+  __asm__ (\"sub{l} {%5,%1|%1,%5}\\n\\tsbb{l} {%3,%0|%0,%3}\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define umul_ppmm(w1, w0, u, v) \\\n-  __asm__ (\"mull %3\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"mul{l} %3\"\t\t\t\t\t\t\t\\\n \t   : \"=a\" ((USItype) (w0)),\t\t\t\t\t\\\n \t     \"=d\" ((USItype) (w1))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (u)),\t\t\t\t\t\\\n \t     \"rm\" ((USItype) (v)))\n #define udiv_qrnnd(q, r, n1, n0, dv) \\\n-  __asm__ (\"divl %4\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"div{l} %4\"\t\t\t\t\t\t\t\\\n \t   : \"=a\" ((USItype) (q)),\t\t\t\t\t\\\n \t     \"=d\" ((USItype) (r))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (n0)),\t\t\t\t\t\\\n@@ -355,29 +355,29 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if (defined (__x86_64__) || defined (__i386__)) && W_TYPE_SIZE == 64\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addq %5,%1\\n\\tadcq %3,%0\"\t\t\t\t\t\\\n+  __asm__ (\"add{q} {%5,%1|%1,%5}\\n\\tadc{q} {%3,%0|%0,%3}\"\t\t\\\n \t   : \"=r\" ((UDItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((UDItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((UDItype) (ah)),\t\t\t\t\t\\\n \t     \"rme\" ((UDItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((UDItype) (al)),\t\t\t\t\t\\\n \t     \"rme\" ((UDItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subq %5,%1\\n\\tsbbq %3,%0\"\t\t\t\t\t\\\n+  __asm__ (\"sub{q} {%5,%1|%1,%5}\\n\\tsbb{q} {%3,%0|%0,%3}\"\t\t\\\n \t   : \"=r\" ((UDItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((UDItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((UDItype) (ah)),\t\t\t\t\t\\\n \t     \"rme\" ((UDItype) (bh)),\t\t\t\t\t\\\n \t     \"1\" ((UDItype) (al)),\t\t\t\t\t\\\n \t     \"rme\" ((UDItype) (bl)))\n #define umul_ppmm(w1, w0, u, v) \\\n-  __asm__ (\"mulq %3\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"mul{q} %3\"\t\t\t\t\t\t\t\\\n \t   : \"=a\" ((UDItype) (w0)),\t\t\t\t\t\\\n \t     \"=d\" ((UDItype) (w1))\t\t\t\t\t\\\n \t   : \"%0\" ((UDItype) (u)),\t\t\t\t\t\\\n \t     \"rm\" ((UDItype) (v)))\n #define udiv_qrnnd(q, r, n1, n0, dv) \\\n-  __asm__ (\"divq %4\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"div{q} %4\"\t\t\t\t\t\t\t\\\n \t   : \"=a\" ((UDItype) (q)),\t\t\t\t\t\\\n \t     \"=d\" ((UDItype) (r))\t\t\t\t\t\\\n \t   : \"0\" ((UDItype) (n0)),\t\t\t\t\t\\"}]}