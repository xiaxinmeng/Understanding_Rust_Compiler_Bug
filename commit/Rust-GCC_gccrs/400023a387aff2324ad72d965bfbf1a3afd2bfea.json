{"sha": "400023a387aff2324ad72d965bfbf1a3afd2bfea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwMDIzYTM4N2FmZjIzMjRhZDcyZDk2NWJmYmYxYTNhZmQyYmZlYQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-14T22:00:20Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-14T22:00:20Z"}, "message": "c-parse.in (finish_parse): Add comment about cpp_destroy.\n\n        * c-parse.in (finish_parse): Add comment about cpp_destroy.\n        * cp/lex.c (finish_parse): Similarly.\n        * cppinit.c (cpp_cleanup): Rename cpp_destroy for clarity.\n        Return the number of errors encountered.\n        * cpplib.h (cpp_cleanup): Rename cpp_destroy, return int.\n        * cppmain.c (main): Don't call cpp_destroy.\n\nFrom-SVN: r39020", "tree": {"sha": "50cf96bbdb5a327d25f89c6505861b5c2d979351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50cf96bbdb5a327d25f89c6505861b5c2d979351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/400023a387aff2324ad72d965bfbf1a3afd2bfea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400023a387aff2324ad72d965bfbf1a3afd2bfea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400023a387aff2324ad72d965bfbf1a3afd2bfea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400023a387aff2324ad72d965bfbf1a3afd2bfea/comments", "author": null, "committer": null, "parents": [{"sha": "984ad2c6332bdf6fb4ce651345b20f1473aff23a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984ad2c6332bdf6fb4ce651345b20f1473aff23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/984ad2c6332bdf6fb4ce651345b20f1473aff23a"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "7e81eee3af28df2949f13bae0a70780f613b0ff6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=400023a387aff2324ad72d965bfbf1a3afd2bfea", "patch": "@@ -1,3 +1,12 @@\n+2001-01-14  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * c-parse.in (finish_parse): Add comment about cpp_destroy.\n+        * cp/lex.c (finish_parse): Similarly.\n+        * cppinit.c (cpp_cleanup): Rename cpp_destroy for clarity.\n+        Return the number of errors encountered.\n+        * cpplib.h (cpp_cleanup): Rename cpp_destroy, return int.\n+        * cppmain.c (main): Don't call cpp_destroy.\n+\n 2001-01-14  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* configure.in: Require at least perl 5.6.0 to regenerate"}, {"sha": "30f2551b26f8ee4779ec18697e602d24cb741692", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=400023a387aff2324ad72d965bfbf1a3afd2bfea", "patch": "@@ -3161,6 +3161,7 @@ void\n finish_parse ()\n {\n   cpp_finish (parse_in);\n+  /* Call to cpp_destroy () omitted for performance reasons.  */\n   errorcount += cpp_errors (parse_in);\n }\n "}, {"sha": "c19d784fa6d00b73caf2254cb47d20468f424080", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=400023a387aff2324ad72d965bfbf1a3afd2bfea", "patch": "@@ -755,6 +755,7 @@ void\n finish_parse ()\n {\n   cpp_finish (parse_in);\n+  /* Call to cpp_destroy () omitted for performance reasons.  */\n   errorcount += cpp_errors (parse_in);\n }\n \f"}, {"sha": "9250f0807ed22f07c29878f12c601d1b80df771c", "filename": "gcc/cppinit.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=400023a387aff2324ad72d965bfbf1a3afd2bfea", "patch": "@@ -557,12 +557,13 @@ cpp_create_reader (lang)\n   return pfile;\n }\n \n-/* Free resources used by PFILE.\n-   This is the cpp_reader 'finalizer' or 'destructor' (in C++ terminology).  */\n-void\n-cpp_cleanup (pfile)\n+/* Free resources used by PFILE.  Accessing PFILE after this function\n+   returns leads to undefined behaviour.  */\n+int\n+cpp_destroy (pfile)\n      cpp_reader *pfile;\n {\n+  int result;\n   struct file_name_list *dir, *dirn;\n   cpp_context *context, *contextn;\n \n@@ -600,6 +601,11 @@ cpp_cleanup (pfile)\n       contextn = context->next;\n       free (context);\n     }\n+\n+  result = pfile->errors;\n+  free (pfile);\n+\n+  return result;\n }\n \n "}, {"sha": "c109a0f8ca6154d350da731c8f5e09c875038eb4", "filename": "gcc/cpplib.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=400023a387aff2324ad72d965bfbf1a3afd2bfea", "patch": "@@ -494,6 +494,10 @@ struct cpp_hashnode\n /* Call this first to get a handle to pass to other functions.  */\n extern cpp_reader *cpp_create_reader PARAMS ((enum c_lang));\n \n+/* Call this to release the handle.  Any use of the handle after this\n+   function returns is invalid.  Returns cpp_errors (pfile).  */\n+extern int cpp_destroy PARAMS ((cpp_reader *));\n+\n /* Call these to get pointers to the options and callback structures\n    for a given reader.  These pointers are good until you call\n    cpp_finish on that reader.  You can either edit the callbacks\n@@ -529,7 +533,6 @@ extern void cpp_register_pragma_space PARAMS ((cpp_reader *, const char *));\n \n extern int cpp_start_read PARAMS ((cpp_reader *, const char *));\n extern void cpp_finish PARAMS ((cpp_reader *));\n-extern void cpp_cleanup PARAMS ((cpp_reader *));\n extern int cpp_avoid_paste PARAMS ((cpp_reader *, const cpp_token *,\n \t\t\t\t    const cpp_token *));\n extern enum cpp_ttype cpp_can_paste PARAMS ((cpp_reader *, const cpp_token *,"}, {"sha": "61f48746a801e46d7a90ef7068d72d3c2288982a", "filename": "gcc/cppmain.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400023a387aff2324ad72d965bfbf1a3afd2bfea/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=400023a387aff2324ad72d965bfbf1a3afd2bfea", "patch": "@@ -79,9 +79,7 @@ main (argc, argv)\n   \n   do_preprocessing (argc, argv);\n \n-  /* Reader destructor.  */\n-  cpp_cleanup (pfile);\n-\n+  /* Call to cpp_destroy () omitted for performance reasons.  */\n   if (cpp_errors (pfile))\n     return FATAL_EXIT_CODE;\n "}]}