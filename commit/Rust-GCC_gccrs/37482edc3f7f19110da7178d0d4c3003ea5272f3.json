{"sha": "37482edc3f7f19110da7178d0d4c3003ea5272f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0ODJlZGMzZjdmMTkxMTBkYTcxNzhkMGQ0YzMwMDNlYTUyNzJmMw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-17T18:33:14Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-19T17:34:52Z"}, "message": "d/dmd: Merge upstream dmd d1a606599\n\nFixes long standing regression in the D front-end implemention, and adds\na new field to allow retrieving a list of all content imports from the\ncode generator.\n\nReviewed-on: https://github.com/dlang/dmd/pull/10913\n\t     https://github.com/dlang/dmd/pull/10933", "tree": {"sha": "4315c56858f31991be0342d1964b064eecdddd80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4315c56858f31991be0342d1964b064eecdddd80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37482edc3f7f19110da7178d0d4c3003ea5272f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37482edc3f7f19110da7178d0d4c3003ea5272f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37482edc3f7f19110da7178d0d4c3003ea5272f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37482edc3f7f19110da7178d0d4c3003ea5272f3/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f22712bd8a2ed57d3cc7e6fa92730bd5852e27b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22712bd8a2ed57d3cc7e6fa92730bd5852e27b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22712bd8a2ed57d3cc7e6fa92730bd5852e27b3"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "a421448a2871cc716b80be343aa7a54c935c701b", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -1,4 +1,4 @@\n-b061bd744cb4eb94a7118581387d988d4ec25e97\n+d1a606599e7c2bea8fda8bf5e3ddceb486ae69ac\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "4609d6a9f54ddcb351531824e4350fa9d6e5fa93", "filename": "gcc/d/dmd/dclass.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2Fdclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2Fdclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdclass.c?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -395,7 +395,6 @@ void ClassDeclaration::semantic(Scope *sc)\n     }\n     else if (symtab && !scx)\n     {\n-        semanticRun = PASSsemanticdone;\n         return;\n     }\n     semanticRun = PASSsemantic;"}, {"sha": "fed36cf9242c179570338a01171d722b75eebf02", "filename": "gcc/d/dmd/expressionsem.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.c?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -2370,6 +2370,7 @@ class ExpressionSemanticVisitor : public Visitor\n             return setError();\n         }\n \n+        sc->_module->contentImportedFiles.push(name);\n         if (global.params.verbose)\n             message(\"file      %.*s\\t(%s)\", (int)se->len, (char *)se->string, name);\n         if (global.params.moduleDeps != NULL)"}, {"sha": "f4253d326578db6c567f1160ec2f8dce0e513b0d", "filename": "gcc/d/dmd/module.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2Fmodule.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Fd%2Fdmd%2Fmodule.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmodule.h?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -76,6 +76,7 @@ class Module : public Package\n     unsigned numlines;  // number of lines in source file\n     int isDocFile;      // if it is a documentation input file, not D source\n     bool isPackageFile; // if it is a package.d\n+    Strings contentImportedFiles;  // array of files whose content was imported\n     int needmoduleinfo;\n \n     int selfimports;            // 0: don't know, 1: does not, 2: does"}, {"sha": "79b78e1e52aef30a4a6b59da9809850eaf63bc85", "filename": "gcc/testsuite/gdc.test/compilable/imports/pr9471a.d", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471a.d?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -0,0 +1,2 @@\n+import imports.pr9471c;\n+class AggregateDeclaration : ScopeDsymbol { }"}, {"sha": "a46a12c496fd5657dd95237b1ba3683efff1a8e5", "filename": "gcc/testsuite/gdc.test/compilable/imports/pr9471b.d", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471b.d?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -0,0 +1,5 @@\n+import imports.pr9471a;\n+class ClassDeclaration : AggregateDeclaration\n+{\n+    void isBaseOf();\n+}"}, {"sha": "d80a61480ce00e3e8ff579a215792deb9bddcd44", "filename": "gcc/testsuite/gdc.test/compilable/imports/pr9471c.d", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471c.d?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -0,0 +1,18 @@\n+import imports.pr9471b;\n+\n+struct Array(T)\n+{\n+    static if (is(typeof(T.opCmp))) { }\n+}\n+alias ClassDeclarations = Array!ClassDeclaration;\n+\n+class Dsymbol\n+{\n+    void addObjcSymbols(ClassDeclarations);\n+}\n+\n+class ScopeDsymbol : Dsymbol\n+{\n+    import imports.pr9471d;\n+    void importScope();\n+}"}, {"sha": "187b908329484a744753122fc539ecb379064df4", "filename": "gcc/testsuite/gdc.test/compilable/imports/pr9471d.d", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471d.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471d.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Fpr9471d.d?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -0,0 +1 @@\n+// Module needs to be imported to trigger bug."}, {"sha": "37ff32e4957325a4659f35b5f2f49f550d7a1705", "filename": "gcc/testsuite/gdc.test/compilable/pr9471.d", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fpr9471.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fpr9471.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fpr9471.d?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -0,0 +1,6 @@\n+// PERMUTE_ARGS:\n+// EXTRA_FILES: imports/pr9471a.d imports/pr9471b.d imports/pr9471c.d imports/pr9471d.d\n+import imports.pr9471a;\n+import imports.pr9471b;\n+\n+static assert (__traits(getVirtualIndex, ClassDeclaration.isBaseOf) == 7);"}, {"sha": "b73ee01ce425780768712e55572b882660694c40", "filename": "gcc/testsuite/gdc.test/runnable/traits.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37482edc3f7f19110da7178d0d4c3003ea5272f3/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d?ref=37482edc3f7f19110da7178d0d4c3003ea5272f3", "patch": "@@ -1253,7 +1253,7 @@ struct S10096X\n     this(this) {}\n     ~this() {}\n \n-    string getStr() in(str) out(r; r == str) { return str; }\n+    string getStr() in { assert(str); } out(r) { assert(r == str); } body { return str; }\n }\n static assert(\n     [__traits(allMembers, S10096X)] ==\n@@ -1271,7 +1271,7 @@ class C10096X\n     this(int) {}\n     ~this() {}\n \n-    string getStr() in(str) out(r; r == str) { return str;\n+    string getStr() in { assert(str); } out(r) { assert(r == str); } body { return str; }\n }\n static assert(\n     [__traits(allMembers, C10096X)] =="}]}