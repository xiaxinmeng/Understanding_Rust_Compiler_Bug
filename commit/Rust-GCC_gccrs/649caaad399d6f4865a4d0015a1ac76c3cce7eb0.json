{"sha": "649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5Y2FhYWQzOTlkNmY0ODY1YTRkMDAxNWExYWM3NmMzY2NlN2ViMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-15T13:28:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-15T13:28:08Z"}, "message": "tree-ssa-sccvn.h (vn_reference_lookup): Adjust prototype.\n\n2008-04-15  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.h (vn_reference_lookup): Adjust prototype.\n\t* tree-ssa-sccvn.c (vn_reference_lookup): New parameter maywalk.\n\t(visit_reference_op_load): Do walk vuse-vdef chains on\n\tvn_reference_lookup.\n\t(visit_reference_op_store): But do not here.\n\t* tree-vn.c (vn_lookup): Do not walk vuse-vdef chains on\n\tvn_reference_lookup.\n\t(vn_lookup_with_vuses): But do so here.\n\nFrom-SVN: r134314", "tree": {"sha": "9098d5ac54a9f0a83f6c1809c9d7cb33b7f481de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9098d5ac54a9f0a83f6c1809c9d7cb33b7f481de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "462c31ef75b495fd95f18a91864c471d2cb76494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462c31ef75b495fd95f18a91864c471d2cb76494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/462c31ef75b495fd95f18a91864c471d2cb76494"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "b00f53d6085f9aa6c06ca2d80ac42e0816fb1035", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "patch": "@@ -1,3 +1,14 @@\n+2008-04-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.h (vn_reference_lookup): Adjust prototype.\n+\t* tree-ssa-sccvn.c (vn_reference_lookup): New parameter maywalk.\n+\t(visit_reference_op_load): Do walk vuse-vdef chains on\n+\tvn_reference_lookup.\n+\t(visit_reference_op_store): But do not here.\n+\t* tree-vn.c (vn_lookup): Do not walk vuse-vdef chains on\n+\tvn_reference_lookup.\n+\t(vn_lookup_with_vuses): But do so here.\n+\n 2008-04-14  Ian Lance Taylor  <iant@google.com>\n \n \t* fold-const.c (fold_overflow_warning): Remove assertion."}, {"sha": "849eade1d210c3b3322daa9f304c4eecb44ca101", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "patch": "@@ -735,7 +735,7 @@ vn_reference_lookup_1 (vn_reference_t vr)\n    it does not exist in the hash table. */\n \n tree\n-vn_reference_lookup (tree op, VEC (tree, gc) *vuses)\n+vn_reference_lookup (tree op, VEC (tree, gc) *vuses, bool maywalk)\n {\n   struct vn_reference_s vr1;\n   tree result, def_stmt;\n@@ -748,6 +748,7 @@ vn_reference_lookup (tree op, VEC (tree, gc) *vuses)\n   /* If there is a single defining statement for all virtual uses, we can\n      use that, following virtual use-def chains.  */\n   if (!result\n+      && maywalk\n       && vr1.vuses\n       && VEC_length (tree, vr1.vuses) >= 1\n       && !get_call_expr_in (op)\n@@ -1188,7 +1189,7 @@ static bool\n visit_reference_op_load (tree lhs, tree op, tree stmt)\n {\n   bool changed = false;\n-  tree result = vn_reference_lookup (op, shared_vuses_from_stmt (stmt));\n+  tree result = vn_reference_lookup (op, shared_vuses_from_stmt (stmt), true);\n \n   /* We handle type-punning through unions by value-numbering based\n      on offset and size of the access.  Be prepared to handle a\n@@ -1294,7 +1295,7 @@ visit_reference_op_store (tree lhs, tree op, tree stmt)\n      Otherwise, the vdefs for the store are used when inserting into\n      the table, since the store generates a new memory state.  */\n \n-  result = vn_reference_lookup (lhs, shared_vuses_from_stmt (stmt));\n+  result = vn_reference_lookup (lhs, shared_vuses_from_stmt (stmt), false);\n \n   if (result)\n     {"}, {"sha": "ecc3297af429db928104277973cdfc56fbf0fad0", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "patch": "@@ -59,7 +59,7 @@ void free_scc_vn (void);\n void switch_to_PRE_table (void);\n tree vn_nary_op_lookup (tree);\n void vn_nary_op_insert (tree, tree);\n-tree vn_reference_lookup (tree, VEC (tree, gc) *);\n+tree vn_reference_lookup (tree, VEC (tree, gc) *, bool);\n void vn_reference_insert (tree, tree, VEC (tree, gc) *);\n VEC (tree, gc) *shared_vuses_from_stmt (tree);\n VEC (tree, gc) *copy_vuses_from_stmt (tree);"}, {"sha": "c09dfb762849e80429c083c1a42e1fa9df879f3b", "filename": "gcc/tree-vn.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2Ftree-vn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649caaad399d6f4865a4d0015a1ac76c3cce7eb0/gcc%2Ftree-vn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vn.c?ref=649caaad399d6f4865a4d0015a1ac76c3cce7eb0", "patch": "@@ -255,7 +255,7 @@ vn_lookup (tree expr)\n       /* In the case of array-refs of constants, for example, we can\n \t end up with no vuses.  */\n     case tcc_reference:\n-      return vn_reference_lookup (expr, NULL);\n+      return vn_reference_lookup (expr, NULL, false);\n       break;\n       /* It is possible to have CALL_EXPR with no vuses for things\n \t like \"cos\", and these will fall into vn_lookup.   */\n@@ -264,7 +264,7 @@ vn_lookup (tree expr)\n     case tcc_expression:\n     case tcc_declaration:\n       if (TREE_CODE (expr) == CALL_EXPR || DECL_P (expr))\n-\treturn vn_reference_lookup (expr, NULL);\n+\treturn vn_reference_lookup (expr, NULL, false);\n       else if (TREE_CODE (expr) == SSA_NAME)\n \treturn SSA_NAME_VALUE (expr);\n       else if (TREE_CODE (expr) == ADDR_EXPR)\n@@ -308,7 +308,7 @@ vn_lookup_with_vuses (tree expr, VEC (tree, gc) *vuses)\n   if (is_gimple_min_invariant (expr) || TREE_CODE (expr) == FIELD_DECL)\n     return expr;\n \n-  return vn_reference_lookup (expr, vuses);\n+  return vn_reference_lookup (expr, vuses, true);\n }\n \n static tree"}]}