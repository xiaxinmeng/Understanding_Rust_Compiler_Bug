{"sha": "460545e85a1705b24868f5d67ed5cc6e8de27763", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYwNTQ1ZTg1YTE3MDViMjQ4NjhmNWQ2N2VkNWNjNmU4ZGUyNzc2Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2016-04-17T16:08:27Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-04-17T16:08:27Z"}, "message": "predict.c (combine_predictions_for_bb): Add dry_run parmaeter.\n\n\n\t* predict.c (combine_predictions_for_bb): Add dry_run parmaeter.\n\t(tree_estimate_probability): Likewise.\n\t(pass_profile::execute): Update.\n\t(report_predictor_hitrates): New function.\n\t* profile.c (compute_branch_probabilities): Use it.\n\t* predict.h (report_predictor_hitrates): Declare.\n\nFrom-SVN: r235082", "tree": {"sha": "8b17781c72abea0097ae16f0f158a2f6d1f6400b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b17781c72abea0097ae16f0f158a2f6d1f6400b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/460545e85a1705b24868f5d67ed5cc6e8de27763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460545e85a1705b24868f5d67ed5cc6e8de27763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/460545e85a1705b24868f5d67ed5cc6e8de27763", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460545e85a1705b24868f5d67ed5cc6e8de27763/comments", "author": null, "committer": null, "parents": [{"sha": "69a4e898c8f508f0c56c72c791a38bc432e9fa69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a4e898c8f508f0c56c72c791a38bc432e9fa69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a4e898c8f508f0c56c72c791a38bc432e9fa69"}], "stats": {"total": 60, "additions": 51, "deletions": 9}, "files": [{"sha": "f6d8870f1dc18190d119b83ce6fc34b6555ece7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=460545e85a1705b24868f5d67ed5cc6e8de27763", "patch": "@@ -1,3 +1,12 @@\n+2016-04-17  Jan Hubicka  <jh@suse.cz>\n+\n+\t* predict.c (combine_predictions_for_bb): Add dry_run parmaeter.\n+\t(tree_estimate_probability): Likewise.\n+\t(pass_profile::execute): Update.\n+\t(report_predictor_hitrates): New function.\n+\t* profile.c (compute_branch_probabilities): Use it.\n+\t* predict.h (report_predictor_hitrates): Declare.\n+\n 2016-04-17  Jan Hubicka  <jh@suse.cz>\n \n \tPR ipa/70018"}, {"sha": "f1e22aef5f41f394d0ea439c0d3f130d9b81aa1f", "filename": "gcc/predict.c", "status": "modified", "additions": 39, "deletions": 9, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=460545e85a1705b24868f5d67ed5cc6e8de27763", "patch": "@@ -842,10 +842,11 @@ combine_predictions_for_insn (rtx_insn *insn, basic_block bb)\n }\n \n /* Combine predictions into single probability and store them into CFG.\n-   Remove now useless prediction entries.  */\n+   Remove now useless prediction entries.\n+   If DRY_RUN is set, only produce dumps and do not modify profile.  */\n \n static void\n-combine_predictions_for_bb (basic_block bb)\n+combine_predictions_for_bb (basic_block bb, bool dry_run)\n {\n   int best_probability = PROB_EVEN;\n   enum br_predictor best_predictor = END_PREDICTORS;\n@@ -876,7 +877,7 @@ combine_predictions_for_bb (basic_block bb)\n      this later.  */\n   if (nedges != 2)\n     {\n-      if (!bb->count)\n+      if (!bb->count && !dry_run)\n \tset_even_probabilities (bb);\n       clear_bb_predictions (bb);\n       if (dump_file)\n@@ -982,7 +983,7 @@ combine_predictions_for_bb (basic_block bb)\n     }\n   clear_bb_predictions (bb);\n \n-  if (!bb->count)\n+  if (!bb->count && !dry_run)\n     {\n       first->probability = combined_probability;\n       second->probability = REG_BR_PROB_BASE - combined_probability;\n@@ -2327,10 +2328,11 @@ tree_estimate_probability_bb (basic_block bb)\n \n /* Predict branch probabilities and estimate profile of the tree CFG.\n    This function can be called from the loop optimizers to recompute\n-   the profile information.  */\n+   the profile information.\n+   If DRY_RUN is set, do not modify CFG and only produce dump files.  */\n \n void\n-tree_estimate_probability (void)\n+tree_estimate_probability (bool dry_run)\n {\n   basic_block bb;\n \n@@ -2352,15 +2354,16 @@ tree_estimate_probability (void)\n     tree_estimate_probability_bb (bb);\n \n   FOR_EACH_BB_FN (bb, cfun)\n-    combine_predictions_for_bb (bb);\n+    combine_predictions_for_bb (bb, dry_run);\n \n   if (flag_checking)\n     bb_predictions->traverse<void *, assert_is_empty> (NULL);\n \n   delete bb_predictions;\n   bb_predictions = NULL;\n \n-  estimate_bb_frequencies (false);\n+  if (!dry_run)\n+    estimate_bb_frequencies (false);\n   free_dominance_info (CDI_POST_DOMINATORS);\n   remove_fake_exit_edges ();\n }\n@@ -3040,7 +3043,7 @@ pass_profile::execute (function *fun)\n   if (nb_loops > 1)\n     scev_initialize ();\n \n-  tree_estimate_probability ();\n+  tree_estimate_probability (false);\n \n   if (nb_loops > 1)\n     scev_finalize ();\n@@ -3191,3 +3194,30 @@ rebuild_frequencies (void)\n     gcc_unreachable ();\n   timevar_pop (TV_REBUILD_FREQUENCIES);\n }\n+\n+/* Perform a dry run of the branch prediction pass and report comparsion of\n+   the predicted and real profile into the dump file.  */\n+\n+void\n+report_predictor_hitrates (void)\n+{\n+  unsigned nb_loops;\n+\n+  loop_optimizer_init (LOOPS_NORMAL);\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    flow_loops_dump (dump_file, NULL, 0);\n+\n+  mark_irreducible_loops ();\n+\n+  nb_loops = number_of_loops (cfun);\n+  if (nb_loops > 1)\n+    scev_initialize ();\n+\n+  tree_estimate_probability (true);\n+\n+  if (nb_loops > 1)\n+    scev_finalize ();\n+\n+  loop_optimizer_finalize ();\n+}\n+"}, {"sha": "a725596e8123abaf0de42f1a2f36ee4302a93f21", "filename": "gcc/predict.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2Fpredict.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2Fpredict.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.h?ref=460545e85a1705b24868f5d67ed5cc6e8de27763", "patch": "@@ -90,5 +90,6 @@ extern void compute_function_frequency (void);\n extern tree build_predict_expr (enum br_predictor, enum prediction);\n extern const char *predictor_name (enum br_predictor);\n extern void rebuild_frequencies (void);\n+extern void report_predictor_hitrates (void);\n \n #endif  /* GCC_PREDICT_H */"}, {"sha": "39c81d4fbafeb8bd9e6cc1144a1a992bb5fd3ce4", "filename": "gcc/profile.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460545e85a1705b24868f5d67ed5cc6e8de27763/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=460545e85a1705b24868f5d67ed5cc6e8de27763", "patch": "@@ -845,6 +845,8 @@ compute_branch_probabilities (unsigned cfg_checksum, unsigned lineno_checksum)\n       fputc ('\\n', dump_file);\n       fputc ('\\n', dump_file);\n     }\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    report_predictor_hitrates ();\n \n   free_aux_for_blocks ();\n }"}]}