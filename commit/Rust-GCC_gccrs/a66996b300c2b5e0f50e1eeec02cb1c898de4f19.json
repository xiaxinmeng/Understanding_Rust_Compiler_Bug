{"sha": "a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY2OTk2YjMwMGMyYjVlMGY1MGUxZWVlYzAyY2IxYzg5OGRlNGYxOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-05-26T15:14:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-26T15:14:52Z"}, "message": "sem_attr.adb: (Resolve_Attribute, case 'address): S (A ..\n\n2008-05-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb:\n\t(Resolve_Attribute, case 'address):  S (A .. B)' address can be safely\n\tconverted to S (A)'address only if A .. B is known to be a non-null\n\trange.\n\nFrom-SVN: r135936", "tree": {"sha": "50fcecd54449d5ec4818edec2cc77b3636dbb19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50fcecd54449d5ec4818edec2cc77b3636dbb19f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66996b300c2b5e0f50e1eeec02cb1c898de4f19/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d693e39d020f8707434fe2e9f07849a9177fc5c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d693e39d020f8707434fe2e9f07849a9177fc5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d693e39d020f8707434fe2e9f07849a9177fc5c5"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "79a6f020feb69e06f1ae208e0cd257598b25428a", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66996b300c2b5e0f50e1eeec02cb1c898de4f19/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66996b300c2b5e0f50e1eeec02cb1c898de4f19/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "patch": "@@ -8089,28 +8089,41 @@ package body Sem_Attr is\n                --  Arr (X .. Y)'address is identical to Arr (X)'address,\n                --  even if the array is packed and the slice itself is not\n                --  addressable. Transform the prefix into an indexed component.\n+               --  Note that the transformation is safe only if we know that\n+               --  the slice is non-null.\n \n                declare\n                   Loc : constant Source_Ptr := Sloc (P);\n                   D   : constant Node_Id := Discrete_Range (P);\n                   Lo  : Node_Id;\n \n                begin\n-                  if Is_Entity_Name (D) then\n+                  if Is_Entity_Name (D)\n+                    and then\n+                      Not_Null_Range\n+                        (Type_Low_Bound (Entity (D)),\n+                         Type_High_Bound (Entity (D)))\n+                  then\n                      Lo :=\n                        Make_Attribute_Reference (Loc,\n                           Prefix => (New_Occurrence_Of (Entity (D), Loc)),\n                           Attribute_Name => Name_First);\n-                  else\n+\n+                  elsif Not_Null_Range (Low_Bound (D), High_Bound (D)) then\n                      Lo := Low_Bound (D);\n+\n+                  else\n+                     Lo := Empty;\n                   end if;\n \n-                  Rewrite (P,\n-                     Make_Indexed_Component (Loc,\n-                        Prefix =>  Relocate_Node (Prefix (P)),\n-                        Expressions => New_List (Lo)));\n+                  if Present (Lo) then\n+                     Rewrite (P,\n+                        Make_Indexed_Component (Loc,\n+                           Prefix =>  Relocate_Node (Prefix (P)),\n+                           Expressions => New_List (Lo)));\n \n-                  Analyze_And_Resolve (P);\n+                     Analyze_And_Resolve (P);\n+                  end if;\n                end;\n             end if;\n          end Address_Attribute;"}]}