{"sha": "a6bc04232912152fff06106d082c8f04a6d6fa91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZiYzA0MjMyOTEyMTUyZmZmMDYxMDZkMDgyYzhmMDRhNmQ2ZmE5MQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-01-27T21:53:40Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-01-27T21:53:40Z"}, "message": "re PR testsuite/52011 (FAIL: gcc.dg/lto/trans-mem-* c_lto_trans-mem-*.o assemble, -flto -fgnu-tm in 32 bit mode)\n\n       PR testsuite/52011\n        * gcc.dg/lto/trans-mem.h: New file.\n        * gcc.dg/lto/trans-mem-2_0.c: Include it.\n        * gcc.dg/lto/trans-mem-1_1.c: Same.\n        * gcc.dg/lto/trans-mem-4_1.c: Same.\n        * gcc.dg/lto/trans-mem-3_1.c: Same.\n\nFrom-SVN: r183648", "tree": {"sha": "cc65b5fa9baa01064e5e7e26ee11e5d581da8912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc65b5fa9baa01064e5e7e26ee11e5d581da8912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6bc04232912152fff06106d082c8f04a6d6fa91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bc04232912152fff06106d082c8f04a6d6fa91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bc04232912152fff06106d082c8f04a6d6fa91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bc04232912152fff06106d082c8f04a6d6fa91/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dcbaaa984509967baf669a2e9888098960bfa9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcbaaa984509967baf669a2e9888098960bfa9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcbaaa984509967baf669a2e9888098960bfa9a"}], "stats": {"total": 74, "additions": 35, "deletions": 39}, "files": [{"sha": "b3cb2338dc4401ef8058f1f1084b744ed3a64b48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6bc04232912152fff06106d082c8f04a6d6fa91", "patch": "@@ -1,3 +1,12 @@\n+2012-01-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR testsuite/52011\n+\t* gcc.dg/lto/trans-mem.h: New file.\n+\t* gcc.dg/lto/trans-mem-2_0.c: Include it.\n+\t* gcc.dg/lto/trans-mem-1_1.c: Same.\n+\t* gcc.dg/lto/trans-mem-4_1.c: Same.\n+\t* gcc.dg/lto/trans-mem-3_1.c: Same.\n+\n 2012-01-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52022"}, {"sha": "f49a2626e58558e482b96fad2fd545e02a28e5ff", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-1_1.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-1_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-1_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-1_1.c?ref=a6bc04232912152fff06106d082c8f04a6d6fa91", "patch": "@@ -1,10 +1 @@\n-#include <stdint.h>\n-\n-#define noinline __attribute__((noinline,noclone,used))\n-\n-noinline uint32_t _ITM_beginTransaction(uint32_t a, ...) { asm(\"\"); }\n-noinline void _ITM_commitTransaction (void) { asm(\"\"); }\n-noinline void _ITM_WU4 (void *a, uint32_t b) { asm(\"\"); }\n-noinline void _ITM_WU8 (void *a, uint64_t b) { asm(\"\"); }\n-noinline void _ITM_registerTMCloneTable (void) { asm(\"\"); }\n-noinline void _ITM_deregisterTMCloneTable (void) { asm(\"\"); }\n+#include \"trans-mem.h\""}, {"sha": "b27060228758f1046a8299fbd70d86210e8dd045", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-2_0.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-2_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-2_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-2_0.c?ref=a6bc04232912152fff06106d082c8f04a6d6fa91", "patch": "@@ -2,19 +2,10 @@\n /* { dg-lto-do link } */\n /* { dg-require-effective-target stdint_types } */\n \n-#include <stdint.h>\n+#include \"trans-mem.h\"\n \n extern void foobar() __attribute__((transaction_callable));\n \n-#define noinline __attribute__((noinline,noclone,used))\n-\n-noinline uint32_t _ITM_beginTransaction(uint32_t a, ...) { asm(\"\"); }\n-noinline void _ITM_commitTransaction (void) { asm(\"\"); }\n-noinline void _ITM_WU4 (void *a, uint32_t b) { asm(\"\"); }\n-noinline void _ITM_WU8 (void *a, uint64_t b) { asm(\"\"); }\n-noinline void _ITM_registerTMCloneTable (void) { asm(\"\"); }\n-noinline void _ITM_deregisterTMCloneTable (void) { asm(\"\"); }\n-\n main()\n {\n   __transaction_relaxed"}, {"sha": "4b7f7d7510b1dc73c3eed5464c206f62895bed32", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-3_1.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-3_1.c?ref=a6bc04232912152fff06106d082c8f04a6d6fa91", "patch": "@@ -1,19 +1,10 @@\n /* { dg-options \"-fgnu-tm\" } */\n \n-#include <stdint.h>\n+#include \"trans-mem.h\"\n \n extern int i;\n \n main()\n {\n   __transaction_atomic { i = 0; }\n }\n-\n-#define noinline __attribute__((noinline,noclone,used))\n-\n-noinline uint32_t _ITM_beginTransaction(uint32_t a, ...) { asm(\"\"); }\n-noinline void _ITM_commitTransaction (void) { asm(\"\"); }\n-noinline void _ITM_WU4 (void *a, uint32_t b) { asm(\"\"); }\n-noinline void _ITM_WU8 (void *a, uint64_t b) { asm(\"\"); }\n-noinline void _ITM_registerTMCloneTable (void) { asm(\"\"); }\n-noinline void _ITM_deregisterTMCloneTable (void) { asm(\"\"); }"}, {"sha": "620ce16b8c8bb7a0a2953144e4a56e9273e372a1", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem-4_1.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-4_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-4_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem-4_1.c?ref=a6bc04232912152fff06106d082c8f04a6d6fa91", "patch": "@@ -1,14 +1,6 @@\n-#include <stdint.h>\n+#include \"trans-mem.h\"\n \n __attribute__((transaction_safe))\n void foo() \n {\n }\n-\n-uint32_t _ITM_beginTransaction(uint32_t prop, ...)\n-{\n-}\n-\n-void __builtin__ITM_commitTransaction (void)\n-{\n-}"}, {"sha": "add5a297b5172f6ed9877fb8f85eacebf0a42991", "filename": "gcc/testsuite/gcc.dg/lto/trans-mem.h", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6bc04232912152fff06106d082c8f04a6d6fa91/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Ftrans-mem.h?ref=a6bc04232912152fff06106d082c8f04a6d6fa91", "patch": "@@ -0,0 +1,22 @@\n+#include <stdint.h>\n+\n+/* Dummy declarations for common TM supporting functions.  */\n+\n+/* These must be in sync with both libitm/libitm.h and the TM builtin\n+   definitions in gcc/gtm-builtins.def.  */\n+\n+#define noinline __attribute__((noinline,noclone,used))\n+\n+#ifdef __i386__\n+/* Only for 32-bit x86.  */\n+# define ITM_REGPARM\t__attribute__((regparm(2)))\n+#else\n+# define ITM_REGPARM\n+#endif\n+\n+ITM_REGPARM noinline uint32_t _ITM_beginTransaction(uint32_t a, ...) { asm(\"\"); }\n+ITM_REGPARM noinline void _ITM_commitTransaction (void) { asm(\"\"); }\n+ITM_REGPARM noinline void _ITM_WU4 (void *a, uint32_t b) { asm(\"\"); }\n+ITM_REGPARM noinline void _ITM_WU8 (void *a, uint64_t b) { asm(\"\"); }\n+noinline void _ITM_registerTMCloneTable (void) { asm(\"\"); }\n+noinline void _ITM_deregisterTMCloneTable (void) { asm(\"\"); }"}]}