{"sha": "f32ac70daee2c86644800079493e4f3b17a49830", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMyYWM3MGRhZWUyYzg2NjQ0ODAwMDc5NDkzZTRmM2IxN2E0OTgzMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-12-18T05:57:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-12-18T05:57:43Z"}, "message": "calls.c (expand_call): Don't try to be clever about expanding the return slot address.\n\n        * calls.c (expand_call): Don't try to be clever about expanding\n        the return slot address.\n\nFrom-SVN: r60234", "tree": {"sha": "ace7a9fdeba560f12c24f3ad831008ac12133114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ace7a9fdeba560f12c24f3ad831008ac12133114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f32ac70daee2c86644800079493e4f3b17a49830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f32ac70daee2c86644800079493e4f3b17a49830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f32ac70daee2c86644800079493e4f3b17a49830", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f32ac70daee2c86644800079493e4f3b17a49830/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "212f6dd0fe0cb1a00ff7dfe0a16cb11cbbe7e6fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212f6dd0fe0cb1a00ff7dfe0a16cb11cbbe7e6fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212f6dd0fe0cb1a00ff7dfe0a16cb11cbbe7e6fa"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "52a4c886bccf4aa46936dad717da31a6ad3f3214", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f32ac70daee2c86644800079493e4f3b17a49830/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f32ac70daee2c86644800079493e4f3b17a49830/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f32ac70daee2c86644800079493e4f3b17a49830", "patch": "@@ -1,3 +1,11 @@\n+2002-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* calls.c (expand_call): Don't try to be clever about expanding\n+\tthe return slot address.\n+\n+\t* calls.c (expand_call): Handle CALL_EXPR_HAS_RETURN_SLOT_ADDR\n+\twith special struct-return ABIs.\n+\n 2002-12-18  Kaz kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/linux.h (NO_IMPLICIT_EXTERN_C, CPLUSPLUS_CPP_SPEC):"}, {"sha": "2be53a85d13d9a65f414fb188a7649e069f4aa3f", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f32ac70daee2c86644800079493e4f3b17a49830/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f32ac70daee2c86644800079493e4f3b17a49830/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=f32ac70daee2c86644800079493e4f3b17a49830", "patch": "@@ -2249,18 +2249,13 @@ expand_call (exp, target, ignore)\n \n \tif (CALL_EXPR_HAS_RETURN_SLOT_ADDR (exp))\n \t  {\n-\t    /* The structure value address arg is already in actparms.  */\n-\t    if (struct_value_rtx == 0)\n-\t      /* We want to pass it as a normal argument, so leave it.  */\n-\t      structure_value_addr_parm = 1;\n-\t    else\n-\t      {\n-\t\t/* We want to pass it in a special location.  */\n-\t\ttree return_arg = TREE_VALUE (actparms);\n-\t\tactparms = TREE_CHAIN (actparms);\n-\t\tstructure_value_addr = expand_expr (return_arg, struct_value_rtx,\n-\t\t\t\t\t\t    VOIDmode, EXPAND_NORMAL);\n-\t      }\n+\t    /* The structure value address arg is already in actparms.\n+\t       Pull it out.  It might be nice to just leave it there, but\n+\t       we need to set structure_value_addr.  */\n+\t    tree return_arg = TREE_VALUE (actparms);\n+\t    actparms = TREE_CHAIN (actparms);\n+\t    structure_value_addr = expand_expr (return_arg, NULL_RTX,\n+\t\t\t\t\t\tVOIDmode, EXPAND_NORMAL);\n \t  }\n \telse if (target && GET_CODE (target) == MEM)\n \t  structure_value_addr = XEXP (target, 0);"}]}