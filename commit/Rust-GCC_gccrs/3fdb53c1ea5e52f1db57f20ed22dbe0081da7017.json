{"sha": "3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkYjUzYzFlYTVlNTJmMWRiNTdmMjBlZDIyZGJlMDA4MWRhNzAxNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-02-25T10:54:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-02-25T10:54:07Z"}, "message": "invoke.texi (-fsanitize=): Move from optimization to debugging options.\n\n2013-02-25  Tobias Burnus  <burnus@net-b.de>\n\n        * doc/invoke.texi (-fsanitize=): Move from optimization\n        to debugging options.\n\nFrom-SVN: r196254", "tree": {"sha": "d1562ed098e784c3f99d9f2066c9cebf4184f474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1562ed098e784c3f99d9f2066c9cebf4184f474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017/comments", "author": null, "committer": null, "parents": [{"sha": "ed358aeac7f440516b2e09453581b9e16e1c604c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed358aeac7f440516b2e09453581b9e16e1c604c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed358aeac7f440516b2e09453581b9e16e1c604c"}], "stats": {"total": 43, "additions": 24, "deletions": 19}, "files": [{"sha": "7b495e783affcfdab846372c6de02e60aea902ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "patch": "@@ -1,3 +1,8 @@\n+2013-02-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* doc/invoke.texi (-fsanitize=): Move from optimization\n+\tto debugging options.\n+\n 2013-02-25  Andrey Belevantsev  <abel@ispras.ru>\n \n \t* sched-deps.c (sched_analyze_insn): Fix typo in comment.\n@@ -36,7 +41,7 @@\n \t* config/mips/mips.md (multimem): New type.\n \t(length): Differentiate between 17-bit and 18-bit branch offsets.\n \t(MOVEP1, MOVEP2): New mode iterator.\n- \t(mov_<load>l): Use ZC constraint.\n+\t(mov_<load>l): Use ZC constraint.\n \t(mov_<load>r): Likewise.\n \t(mov_<store>l): Likewise.\n \t(mov_<store>r): Likewise.\n@@ -90,7 +95,7 @@\n \t(mips_attribute_table): Add micromips, nomicromips and nocompression.\n \t(mips_mips16_decl_p): Delete.\n \t(mips_nomips16_decl_p): Delete.\n- \t(mips_get_compress_on_flags): New function.\n+\t(mips_get_compress_on_flags): New function.\n \t(mips_get_compress_off_flags): New function.\n \t(mips_get_compress_mode): New function.\n \t(mips_get_compress_on_name): New function.\n@@ -167,10 +172,10 @@\n \n 2013-02-22  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n-        * config/arm/arm.md (split for extendsidi): Update condition.\n-        (zero_extend<mode>di2,extend<mode>di2): Add an alternative.\n-        * config/arm/iterators.md (qhs_extenddi_cstr): Likewise.\n-        (qhs_zextenddi_cstr): Likewise.\n+\t* config/arm/arm.md (split for extendsidi): Update condition.\n+\t(zero_extend<mode>di2,extend<mode>di2): Add an alternative.\n+\t* config/arm/iterators.md (qhs_extenddi_cstr): Likewise.\n+\t(qhs_zextenddi_cstr): Likewise.\n \n 2013-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -325,7 +330,7 @@\n \t* config/microblaze/microblaze.h: Add TARGET_HAS_CLZ as combined \n \tversion and TARGET_PATTERN_COMPARE check\n \t* config/microblaze/microblaze.md: New clzsi2 instruction\n-\t\n+\n 2012-02-19  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n \n \t*  config/microblaze/microblaze.md (call_value_intern): Check symbol is "}, {"sha": "7088dd0701382e3a07ec335241e8683f3b6ecaf3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "patch": "@@ -5033,6 +5033,18 @@ other options are processed, and it does so only once, no matter how\n many times it is given.  This is mainly intended to be used with\n @option{-fcompare-debug}.\n \n+@item -fsanitize=address\n+Enable AddressSanitizer, a fast memory error detector.\n+Memory access instructions will be instrumented to detect\n+out-of-bounds and use-after-free bugs.\n+See @uref{http://code.google.com/p/address-sanitizer/} for more details.\n+\n+@item -fsanitize=thread\n+Enable ThreadSanitizer, a fast data race detector.\n+Memory access instructions will be instrumented to detect\n+data race bugs.\n+See @uref{http://code.google.com/p/data-race-test/wiki/ThreadSanitizer} for more details.\n+\n @item -fdump-final-insns@r{[}=@var{file}@r{]}\n @opindex fdump-final-insns\n Dump the final internal representation (RTL) to @var{file}.  If the\n@@ -6866,18 +6878,6 @@ assumptions based on that.\n \n The default is @option{-fzero-initialized-in-bss}.\n \n-@item -fsanitize=address\n-Enable AddressSanitizer, a fast memory error detector.\n-Memory access instructions will be instrumented to detect\n-out-of-bounds and use-after-free bugs.\n-See @uref{http://code.google.com/p/address-sanitizer/} for more details.\n-\n-@item -fsanitize=thread\n-Enable ThreadSanitizer, a fast data race detector.\n-Memory access instructions will be instrumented to detect\n-data race bugs. \n-See @uref{http://code.google.com/p/data-race-test/wiki/ThreadSanitizer} for more details.\n-\n @item -fmudflap -fmudflapth -fmudflapir\n @opindex fmudflap\n @opindex fmudflapth"}]}