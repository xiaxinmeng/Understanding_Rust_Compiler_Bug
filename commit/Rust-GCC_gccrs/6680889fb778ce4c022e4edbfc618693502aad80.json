{"sha": "6680889fb778ce4c022e4edbfc618693502aad80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4MDg4OWZiNzc4Y2U0YzAyMmU0ZWRiZmM2MTg2OTM1MDJhYWQ4MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-27T16:29:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-27T16:29:35Z"}, "message": "(qty_compare{,_1}): Give multi-word regs higher priority, as stated in\nthe comments.\n\nFrom-SVN: r6649", "tree": {"sha": "68c379f0a9dd8c980f1ebce40570530a435a0b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68c379f0a9dd8c980f1ebce40570530a435a0b4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6680889fb778ce4c022e4edbfc618693502aad80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6680889fb778ce4c022e4edbfc618693502aad80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6680889fb778ce4c022e4edbfc618693502aad80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6680889fb778ce4c022e4edbfc618693502aad80/comments", "author": null, "committer": null, "parents": [{"sha": "0a5152d0d7e7ff30b7a581123bca3f5cc11cf436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a5152d0d7e7ff30b7a581123bca3f5cc11cf436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a5152d0d7e7ff30b7a581123bca3f5cc11cf436"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "a7b272f8de456912e9113621460b5946df733f68", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6680889fb778ce4c022e4edbfc618693502aad80/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6680889fb778ce4c022e4edbfc618693502aad80/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=6680889fb778ce4c022e4edbfc618693502aad80", "patch": "@@ -1503,12 +1503,12 @@ qty_compare (q1, q2)\n      times a register can occur in one insn (surely less than 100).\n      Multiplying this by 10000 can't overflow.  */\n   register int pri1\n-    = (((double) (floor_log2 (qty_n_refs[q1]) * qty_n_refs[q1])\n-\t/ ((qty_death[q1] - qty_birth[q1]) * qty_size[q1]))\n+    = (((double) (floor_log2 (qty_n_refs[q1]) * qty_n_refs[q1] * qty_size[q1])\n+\t/ (qty_death[q1] - qty_birth[q1]))\n        * 10000);\n   register int pri2\n-    = (((double) (floor_log2 (qty_n_refs[q2]) * qty_n_refs[q2])\n-\t/ ((qty_death[q2] - qty_birth[q2]) * qty_size[q2]))\n+    = (((double) (floor_log2 (qty_n_refs[q2]) * qty_n_refs[q2] * qty_size[q2])\n+\t/ (qty_death[q2] - qty_birth[q2]))\n        * 10000);\n   return pri2 - pri1;\n }\n@@ -1524,12 +1524,14 @@ qty_compare_1 (q1, q2)\n      times a register can occur in one insn (surely less than 100).\n      Multiplying this by 10000 can't overflow.  */\n   register int pri1\n-    = (((double) (floor_log2 (qty_n_refs[*q1]) * qty_n_refs[*q1])\n-\t/ ((qty_death[*q1] - qty_birth[*q1]) * qty_size[*q1]))\n+    = (((double) (floor_log2 (qty_n_refs[*q1]) * qty_n_refs[*q1]\n+\t\t  * qty_size[*q1])\n+\t/ (qty_death[*q1] - qty_birth[*q1]))\n        * 10000);\n   register int pri2\n-    = (((double) (floor_log2 (qty_n_refs[*q2]) * qty_n_refs[*q2])\n-\t/ ((qty_death[*q2] - qty_birth[*q2]) * qty_size[*q2]))\n+    = (((double) (floor_log2 (qty_n_refs[*q2]) * qty_n_refs[*q2]\n+\t\t  * qty_size[*q2])\n+\t/ (qty_death[*q2] - qty_birth[*q2]))\n        * 10000);\n \n   tem = pri2 - pri1;"}]}