{"sha": "b82ef848dc741bdd01707574c3f2bdd615cdef54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyZWY4NDhkYzc0MWJkZDAxNzA3NTc0YzNmMmJkZDYxNWNkZWY1NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-06-10T14:18:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-06-10T14:18:50Z"}, "message": "re PR tree-optimization/61438 (ICE on valid code at -O3 on x86_64-linux-gnu in in loop_preheader_edge, at cfgloop.c:1668)\n\n2014-06-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/61438\n\t* tree-ssa-pre.c (eliminate_dom_walker): Add do_pre member.\n\t(eliminate_dom_walker::before_dom_children): Only try to inhibit\n\tinsertion of IVs if running PRE.\n\t(eliminate): Adjust.\n\t(pass_pre::execute): Likewise.\n\t(pass_fre::execute): Likewise.\n\n\t* gcc.dg/torture/pr61438.c: New testcase.\n\nFrom-SVN: r211413", "tree": {"sha": "426a2af6b454d1bfad4520184a8e55c5ddca3086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/426a2af6b454d1bfad4520184a8e55c5ddca3086"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82ef848dc741bdd01707574c3f2bdd615cdef54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82ef848dc741bdd01707574c3f2bdd615cdef54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82ef848dc741bdd01707574c3f2bdd615cdef54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82ef848dc741bdd01707574c3f2bdd615cdef54/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cdf0ab72f4bca350201d615c335ff655d426cc69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf0ab72f4bca350201d615c335ff655d426cc69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdf0ab72f4bca350201d615c335ff655d426cc69"}], "stats": {"total": 80, "additions": 74, "deletions": 6}, "files": [{"sha": "180d1c87c18805a5845214025a755fc46824b337", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b82ef848dc741bdd01707574c3f2bdd615cdef54", "patch": "@@ -1,3 +1,13 @@\n+2014-06-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61438\n+\t* tree-ssa-pre.c (eliminate_dom_walker): Add do_pre member.\n+\t(eliminate_dom_walker::before_dom_children): Only try to inhibit\n+\tinsertion of IVs if running PRE.\n+\t(eliminate): Adjust.\n+\t(pass_pre::execute): Likewise.\n+\t(pass_fre::execute): Likewise.\n+\n 2014-06-10  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/61456"}, {"sha": "53b613426c197546a8c0c9f93a22c8493839b39c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b82ef848dc741bdd01707574c3f2bdd615cdef54", "patch": "@@ -1,3 +1,8 @@\n+2014-06-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/61438\n+\t* gcc.dg/torture/pr61438.c: New testcase.\n+\n 2014-06-10  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/61456"}, {"sha": "23819992411184dfb2165ad91348d9da8293c911", "filename": "gcc/testsuite/gcc.dg/torture/pr61438.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61438.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61438.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61438.c?ref=b82ef848dc741bdd01707574c3f2bdd615cdef54", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int a, c, **d, e, g;\n+static int b = 1;\n+\n+struct\n+{\n+  int f0;\n+} f;\n+\n+void\n+foo ()\n+{\n+  int h, *i = &a;\n+  for (; e;)\n+    {\n+      for (c = 0; c < 1; c++)\n+\tfor (; b;)\n+\t  ;\n+      for (;;)\n+\t{\n+\t  if (a)\n+\t    {\n+\t      for (; f.f0; f.f0++)\n+\t\t;\n+\t      if (g)\n+\t\tbreak;\n+\t    }\n+\t  for (h = 0; h < 2; h++)\n+\t    {\n+\t      i = *d;\n+\t      if (!i)\n+\t\tabort ();\n+\t    }\n+\t}\n+    }\n+  if (!i)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (); \n+  return 0;\n+}"}, {"sha": "89e94e93fdf8ca67cd0a445ba74bc6b66902ebd8", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82ef848dc741bdd01707574c3f2bdd615cdef54/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=b82ef848dc741bdd01707574c3f2bdd615cdef54", "patch": "@@ -3992,10 +3992,13 @@ eliminate_insert (gimple_stmt_iterator *gsi, tree val)\n class eliminate_dom_walker : public dom_walker\n {\n public:\n-  eliminate_dom_walker (cdi_direction direction) : dom_walker (direction) {}\n+  eliminate_dom_walker (cdi_direction direction, bool do_pre_)\n+      : dom_walker (direction), do_pre (do_pre_) {}\n \n   virtual void before_dom_children (basic_block);\n   virtual void after_dom_children (basic_block);\n+\n+  bool do_pre;\n };\n \n /* Perform elimination for the basic-block B during the domwalk.  */\n@@ -4192,7 +4195,8 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n \t\t variable.  In other cases the vectorizer won't do anything\n \t\t anyway (either it's loop invariant or a complicated\n \t\t expression).  */\n-\t      if (flag_tree_loop_vectorize\n+\t      if (do_pre\n+\t\t  && flag_tree_loop_vectorize\n \t\t  && gimple_assign_single_p (stmt)\n \t\t  && TREE_CODE (sprime) == SSA_NAME\n \t\t  && loop_outer (b->loop_father))\n@@ -4434,7 +4438,7 @@ eliminate_dom_walker::after_dom_children (basic_block)\n /* Eliminate fully redundant computations.  */\n \n static unsigned int\n-eliminate (void)\n+eliminate (bool do_pre)\n {\n   gimple_stmt_iterator gsi;\n   gimple stmt;\n@@ -4448,7 +4452,8 @@ eliminate (void)\n   el_avail.create (0);\n   el_avail_stack.create (0);\n \n-  eliminate_dom_walker (CDI_DOMINATORS).walk (cfun->cfg->x_entry_block_ptr);\n+  eliminate_dom_walker (CDI_DOMINATORS,\n+\t\t\tdo_pre).walk (cfun->cfg->x_entry_block_ptr);\n \n   el_avail.release ();\n   el_avail_stack.release ();\n@@ -4779,7 +4784,7 @@ pass_pre::execute (function *fun)\n   gsi_commit_edge_inserts ();\n \n   /* Remove all the redundant expressions.  */\n-  todo |= eliminate ();\n+  todo |= eliminate (true);\n \n   statistics_counter_event (fun, \"Insertions\", pre_stats.insertions);\n   statistics_counter_event (fun, \"PA inserted\", pre_stats.pa_insert);\n@@ -4864,7 +4869,7 @@ pass_fre::execute (function *fun)\n   memset (&pre_stats, 0, sizeof (pre_stats));\n \n   /* Remove all the redundant expressions.  */\n-  todo |= eliminate ();\n+  todo |= eliminate (false);\n \n   todo |= fini_eliminate ();\n "}]}