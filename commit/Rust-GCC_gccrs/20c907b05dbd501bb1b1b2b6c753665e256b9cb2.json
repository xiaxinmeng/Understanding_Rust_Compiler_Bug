{"sha": "20c907b05dbd501bb1b1b2b6c753665e256b9cb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBjOTA3YjA1ZGJkNTAxYmIxYjFiMmI2Yzc1MzY2NWUyNTZiOWNiMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-12-28T18:00:23Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-12-28T18:00:23Z"}, "message": "* config/h8300/h8300.md: Fix formatting.\n\nFrom-SVN: r48348", "tree": {"sha": "1bc682496f2f869619784f220fbb17fc34362ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bc682496f2f869619784f220fbb17fc34362ff3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20c907b05dbd501bb1b1b2b6c753665e256b9cb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20c907b05dbd501bb1b1b2b6c753665e256b9cb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20c907b05dbd501bb1b1b2b6c753665e256b9cb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20c907b05dbd501bb1b1b2b6c753665e256b9cb2/comments", "author": null, "committer": null, "parents": [{"sha": "7addeb4dcd1009c34469263039824c694382a846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7addeb4dcd1009c34469263039824c694382a846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7addeb4dcd1009c34469263039824c694382a846"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "b9dfd9b97592da0574ccf0cd6d4bf6cdc98caf2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20c907b05dbd501bb1b1b2b6c753665e256b9cb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20c907b05dbd501bb1b1b2b6c753665e256b9cb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20c907b05dbd501bb1b1b2b6c753665e256b9cb2", "patch": "@@ -1,3 +1,7 @@\n+2001-12-28  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md: Fix formatting.\n+\n 2001-12-28  Geoff Keating  <geoffk@redhat.com>\n \n \t* varasm.c (record_constant_1): Correct parameter to recursive"}, {"sha": "de911dcda8762ea91ca20fa227abb429fc6e35aa", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20c907b05dbd501bb1b1b2b6c753665e256b9cb2/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20c907b05dbd501bb1b1b2b6c753665e256b9cb2/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=20c907b05dbd501bb1b1b2b6c753665e256b9cb2", "patch": "@@ -142,7 +142,7 @@\n   [(set (match_operand:QI 0 \"general_operand_dst\" \"=r,r ,<,r,r,m\")\n \t(match_operand:QI 1 \"general_operand_src\" \" I,r>,r,n,m,r\"))]\n   \"TARGET_H8300\n-   && (register_operand (operands[0],QImode)\n+   && (register_operand (operands[0], QImode)\n        || register_operand (operands[1], QImode))\"\n   \"@\n    sub.b\t%X0,%X0\n@@ -158,7 +158,7 @@\n   [(set (match_operand:QI 0 \"general_operand_dst\" \"=r,r ,<,r,r,m\")\n \t(match_operand:QI 1 \"general_operand_src\" \" I,r>,r,n,m,r\"))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n-   && (register_operand (operands[0],QImode)\n+   && (register_operand (operands[0], QImode)\n        || register_operand (operands[1], QImode))\"\n   \"@\n    sub.b\t%X0,%X0\n@@ -232,7 +232,7 @@\n   [(set (match_operand:HI 0 \"general_operand_dst\" \"=r,r,<,r,r,m\")\n \t(match_operand:HI 1 \"general_operand_src\" \"I,r>,r,i,m,r\"))]\n   \"TARGET_H8300\n-   && (register_operand (operands[0],HImode)\n+   && (register_operand (operands[0], HImode)\n        || register_operand (operands[1], HImode))\n    && !(GET_CODE (operands[0]) == MEM\n \t&& GET_CODE (XEXP (operands[0], 0)) == PRE_DEC\n@@ -253,7 +253,7 @@\n   [(set (match_operand:HI 0 \"general_operand_dst\" \"=r,r,<,r,r,m\")\n \t(match_operand:HI 1 \"general_operand_src\" \"I,r>,r,i,m,r\"))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n-   && (register_operand (operands[0],HImode)\n+   && (register_operand (operands[0], HImode)\n        || register_operand (operands[1], HImode))\"\n   \"@\n    sub.w\t%T0,%T0\n@@ -361,15 +361,15 @@\n       /* Make sure we don't trample the register we index with.  */\n       if (GET_CODE (operands[1]) == MEM)\n \t{\n-\t  rtx inside = XEXP (operands[1],0);\n+\t  rtx inside = XEXP (operands[1], 0);\n \t  if (REG_P (inside))\n \t    {\n \t      rn = REGNO (inside);\n \t    }\n \t  else if (GET_CODE (inside) == PLUS)\n \t    {\n-\t      rtx lhs = XEXP (inside,0);\n-\t      rtx rhs = XEXP (inside,1);\n+\t      rtx lhs = XEXP (inside, 0);\n+\t      rtx rhs = XEXP (inside, 1);\n \t      if (REG_P (lhs)) rn = REGNO (lhs);\n \t      if (REG_P (rhs)) rn = REGNO (rhs);\n \t    }\n@@ -428,15 +428,15 @@\n       /* Make sure we don't trample the register we index with.  */\n       if (GET_CODE (operands[1]) == MEM)\n \t{\n-\t  rtx inside = XEXP (operands[1],0);\n+\t  rtx inside = XEXP (operands[1], 0);\n \t  if (REG_P (inside))\n \t    {\n \t      rn = REGNO (inside);\n \t    }\n \t  else if (GET_CODE (inside) == PLUS)\n \t    {\n-\t      rtx lhs = XEXP (inside,0);\n-\t      rtx rhs = XEXP (inside,1);\n+\t      rtx lhs = XEXP (inside, 0);\n+\t      rtx rhs = XEXP (inside, 1);\n \t      if (REG_P (lhs)) rn = REGNO (lhs);\n \t      if (REG_P (rhs)) rn = REGNO (rhs);\n \t    }\n@@ -1805,21 +1805,21 @@\n \t(ashift:QI (match_operand:QI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (QImode, ASHIFT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (QImode, ASHIFT, operands)) DONE; else FAIL;\")\n \n (define_expand \"ashrqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"\")\n \t(ashiftrt:QI (match_operand:QI 1 \"register_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (QImode, ASHIFTRT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (QImode, ASHIFTRT, operands)) DONE; else FAIL;\")\n \n (define_expand \"lshrqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"\")\n \t(lshiftrt:QI (match_operand:QI 1 \"register_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (QImode, LSHIFTRT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (QImode, LSHIFTRT, operands)) DONE; else FAIL;\")\n \n (define_insn \"\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r,r\")\n@@ -1839,21 +1839,21 @@\n \t(ashift:HI (match_operand:HI 1 \"nonmemory_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (HImode, ASHIFT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (HImode, ASHIFT, operands)) DONE; else FAIL;\")\n \n (define_expand \"lshrhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n \t(lshiftrt:HI (match_operand:HI 1 \"general_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (HImode, LSHIFTRT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (HImode, LSHIFTRT, operands)) DONE; else FAIL;\")\n \n (define_expand \"ashrhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n \t(ashiftrt:HI (match_operand:HI 1 \"register_operand\" \"\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (HImode, ASHIFTRT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (HImode, ASHIFTRT, operands)) DONE; else FAIL;\")\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n@@ -1874,23 +1874,23 @@\n \t (match_operand:SI 1 \"general_operand\" \"\")\n \t (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (SImode, ASHIFT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (SImode, ASHIFT, operands)) DONE; else FAIL;\")\n \n (define_expand \"lshrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(lshiftrt:SI\n \t (match_operand:SI 1 \"general_operand\" \"\")\n \t (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (SImode, LSHIFTRT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (SImode, LSHIFTRT, operands)) DONE; else FAIL;\")\n \n (define_expand \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ashiftrt:SI\n \t (match_operand:SI 1 \"general_operand\" \"\")\n \t (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_shift (SImode, ASHIFTRT, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_shift (SImode, ASHIFTRT, operands)) DONE; else FAIL;\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -1912,7 +1912,7 @@\n \t(rotate:QI (match_operand:QI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_rotate (ROTATE, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n \n (define_insn \"*rotlqi3_1\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n@@ -1928,7 +1928,7 @@\n \t(rotate:HI (match_operand:HI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_rotate (ROTATE, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n \n (define_insn \"*rotlhi3_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n@@ -1944,7 +1944,7 @@\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n-  \"if (expand_a_rotate (ROTATE, operands)) DONE;else FAIL;\")\n+  \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n \n (define_insn \"*rotlsi3_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")"}]}