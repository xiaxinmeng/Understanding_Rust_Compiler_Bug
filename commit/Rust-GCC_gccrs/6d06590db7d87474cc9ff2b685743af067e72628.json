{"sha": "6d06590db7d87474cc9ff2b685743af067e72628", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwNjU5MGRiN2Q4NzQ3NGNjOWZmMmI2ODU3NDNhZjA2N2U3MjYyOA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2010-07-13T09:48:58Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2010-07-13T09:48:58Z"}, "message": "expmed.c (MAX_BITS_PER_WORD): Moved to expmed.h.\n\n2010-07-13  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\t* expmed.c (MAX_BITS_PER_WORD): Moved to expmed.h.\n\t* expmed.h (MAX_BITS_PER_WORD): Moved from expmed.c\n\nFrom-SVN: r162133", "tree": {"sha": "8a0b68433a0b70a92e0878e435e94b02454b7d1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a0b68433a0b70a92e0878e435e94b02454b7d1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d06590db7d87474cc9ff2b685743af067e72628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d06590db7d87474cc9ff2b685743af067e72628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d06590db7d87474cc9ff2b685743af067e72628", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d06590db7d87474cc9ff2b685743af067e72628/comments", "author": null, "committer": null, "parents": [{"sha": "ea2d8f125470dabe1f33a4865ce7a81e27de4408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2d8f125470dabe1f33a4865ce7a81e27de4408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea2d8f125470dabe1f33a4865ce7a81e27de4408"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "9e7db93585588bb5c2294df626402797cc850479", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06590db7d87474cc9ff2b685743af067e72628/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06590db7d87474cc9ff2b685743af067e72628/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d06590db7d87474cc9ff2b685743af067e72628", "patch": "@@ -1,3 +1,8 @@\n+2010-07-13  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* expmed.c (MAX_BITS_PER_WORD): Moved to expmed.h.\n+\t* expmed.h (MAX_BITS_PER_WORD): Moved from expmed.c.\n+\n 2010-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/i386/sol2-unwind.h (x86_64_fallback_frame_state): Correct"}, {"sha": "e6b30e42b2a975eda9313b04042f7cdac7ab278f", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06590db7d87474cc9ff2b685743af067e72628/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06590db7d87474cc9ff2b685743af067e72628/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=6d06590db7d87474cc9ff2b685743af067e72628", "patch": "@@ -69,13 +69,6 @@ static rtx expand_sdiv_pow2 (enum machine_mode, rtx, HOST_WIDE_INT);\n #define SLOW_UNALIGNED_ACCESS(MODE, ALIGN) STRICT_ALIGNMENT\n #endif\n \n-/* For compilers that support multiple targets with different word sizes,\n-   MAX_BITS_PER_WORD contains the biggest value of BITS_PER_WORD.  An example\n-   is the H8/300(H) compiler.  */\n-\n-#ifndef MAX_BITS_PER_WORD\n-#define MAX_BITS_PER_WORD BITS_PER_WORD\n-#endif\n \n /* Reduce conditional compilation elsewhere.  */\n #ifndef HAVE_insv"}, {"sha": "bd12cd25c7b4c5d3b5ab21d3ecb7fd4012ad5084", "filename": "gcc/expmed.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06590db7d87474cc9ff2b685743af067e72628/gcc%2Fexpmed.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06590db7d87474cc9ff2b685743af067e72628/gcc%2Fexpmed.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.h?ref=6d06590db7d87474cc9ff2b685743af067e72628", "patch": "@@ -65,6 +65,14 @@ struct mult_cost {\n \t\t\t\t || ((X)->cost == (Y)->cost\t\\\n \t\t\t\t     && (X)->latency < (Y)->latency))\n \n+/* For compilers that support multiple targets with different word sizes,\n+   MAX_BITS_PER_WORD contains the biggest value of BITS_PER_WORD.  An example\n+   is the H8/300(H) compiler.  */\n+\n+#ifndef MAX_BITS_PER_WORD\n+#define MAX_BITS_PER_WORD BITS_PER_WORD\n+#endif\n+\n /* This structure records a sequence of operations.\n    `ops' is the number of operations recorded.\n    `cost' is their total cost."}]}