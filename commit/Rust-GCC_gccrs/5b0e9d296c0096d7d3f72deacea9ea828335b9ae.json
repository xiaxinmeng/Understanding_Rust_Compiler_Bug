{"sha": "5b0e9d296c0096d7d3f72deacea9ea828335b9ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwZTlkMjk2YzAwOTZkN2QzZjcyZGVhY2VhOWVhODI4MzM1YjlhZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-08-22T05:02:48Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-08-22T05:02:48Z"}, "message": "config-ml.in (CC, CXX): Avoid trailing whitespace.\n\n* config-ml.in (CC, CXX): Avoid trailing whitespace.\n(LD_LIBRARY_PATH, SHLIB_PATH): Adjust for multilibs and export to\nsub-configures.\n\nFrom-SVN: r35864", "tree": {"sha": "d1a7bc94ef3bb2a74d28e39cf8f36e9ed05dd3e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1a7bc94ef3bb2a74d28e39cf8f36e9ed05dd3e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0e9d296c0096d7d3f72deacea9ea828335b9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0e9d296c0096d7d3f72deacea9ea828335b9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0e9d296c0096d7d3f72deacea9ea828335b9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0e9d296c0096d7d3f72deacea9ea828335b9ae/comments", "author": null, "committer": null, "parents": [{"sha": "9adfd959802a1d956b41459603c72fb7d77f2848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9adfd959802a1d956b41459603c72fb7d77f2848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9adfd959802a1d956b41459603c72fb7d77f2848"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "af6aacc955237b86db690ef48a1e4534bd881292", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0e9d296c0096d7d3f72deacea9ea828335b9ae/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0e9d296c0096d7d3f72deacea9ea828335b9ae/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5b0e9d296c0096d7d3f72deacea9ea828335b9ae", "patch": "@@ -1,3 +1,9 @@\n+2000-08-22  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config-ml.in (CC, CXX): Avoid trailing whitespace.\n+\t(LD_LIBRARY_PATH, SHLIB_PATH): Adjust for multilibs and export to\n+\tsub-configures.\n+\n 2000-08-21  DJ Delorie  <dj@redhat.com>\n \n \t* MAINTAINERS: Add self as a libiberty maintainer"}, {"sha": "c968bf0d71918eaaa41665555836e0aa030475f2", "filename": "config-ml.in", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0e9d296c0096d7d3f72deacea9ea828335b9ae/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0e9d296c0096d7d3f72deacea9ea828335b9ae/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=5b0e9d296c0096d7d3f72deacea9ea828335b9ae", "patch": "@@ -753,11 +753,11 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n         break\n       fi\n     done\n-    ml_config_env='CC=\"${CC_} $flags\" CXX=\"${CXX_} $flags\"'\n+    ml_config_env='CC=\"${CC_}$flags\" CXX=\"${CXX_}$flags\"'\n \n     if [ \"${with_target_subdir}\" = \".\" ]; then\n-\tCC_=$CC\n-\tCXX_=$CXX\n+\tCC_=$CC' '\n+\tCXX_=$CXX' '\n     else\n \t# Create a regular expression that matches any string as long\n \t# as ML_POPDIR.\n@@ -786,6 +786,39 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n \t  esac\n \tdone\n \n+\tif test \"x${LD_LIBRARY_PATH+set}\" = xset; then\n+\t  LD_LIBRARY_PATH_=\n+\t  for arg in `echo \"$LD_LIBRARY_PATH\" | tr ':' ' '`; do\n+\t    case \"$arg\" in\n+\t    \"${ML_POPDIR}\"/*)\n+\t      arg=`echo \"X${arg}\" | sed -n \"s/X\\\\(${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"`\n+\t      ;;\n+\t    esac\n+\t    if test \"x$LD_LIBRARY_PATH_\" != x; then\n+\t      LD_LIBRARY_PATH_=$LD_LIBRARY_PATH_:$arg\n+\t    else\n+\t      LD_LIBRARY_PATH_=$arg\n+\t    fi\n+          done\n+\t  ml_config_env=\"$ml_config_env LD_LIBRARY_PATH=$LD_LIBRARY_PATH_\"\n+\tfi\n+\n+\tif test \"x${SHLIB_PATH+set}\" = xset; then\n+\t  SHLIB_PATH_=\n+\t  for arg in `echo \"$SHLIB_PATH\" | tr ':' ' '`; do\n+\t    case \"$arg\" in\n+\t    \"${ML_POPDIR}\"/*)\n+\t      arg=`echo \"X${arg}\" | sed -n \"s/X\\\\(${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"`\n+\t      ;;\n+\t    esac\n+\t    if test \"x$SHLIB_PATH_\" != x; then\n+\t      SHLIB_PATH_=$SHLIB_PATH_:$arg\n+\t    else\n+\t      SHLIB_PATH_=$arg\n+\t    fi\n+          done\n+\t  ml_config_env=\"$ml_config_env SHLIB_PATH=$SHLIB_PATH_\"\n+\tfi\n     fi\n \n     if eval ${ml_config_env} ${ml_config_shell} ${ml_recprog} \\"}]}