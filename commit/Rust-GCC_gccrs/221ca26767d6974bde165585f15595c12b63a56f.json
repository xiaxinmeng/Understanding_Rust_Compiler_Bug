{"sha": "221ca26767d6974bde165585f15595c12b63a56f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIxY2EyNjc2N2Q2OTc0YmRlMTY1NTg1ZjE1NTk1YzEyYjYzYTU2Zg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-05-17T18:53:11Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-05-17T18:53:11Z"}, "message": "cris.md (ncond, [...]): Remove separate define_code_attr.\n\n\t* config/cris/cris.md (ncond, ocode, rcond): Remove separate\n\tdefine_code_attr.\n\t(\"b<ncond:code>\", \"b<ocond:code>\", \"b<rcond:code>\")\n\t(\"*b<ncond:code>_reversed\", \"*b<ocond:code>_reversed\")\n\t(\"*b<rcond:code>_reversed\", \"s<ncond:code>\", \"s<rcond:code>\")\n\t(\"s<ocond:code>\"): Rename from respectively \"b<ncond>\",\n\t\"b<ocond>\", \"b<rcond>\", (\"*b<ncond>_reversed\",\n\t\"*b<ocond>_reversed\", \"*b<rcond>_reversed\", \"s<ncond>\",\n\t\"s<rcond>\" and \"s<ocond>\".\n\t(\"b<ocond:code>\", \"*b<ocond:code>_reversed\")\n\t(\"*b<rcond:code>_reversed\"): Remove extraneous backslashes in\n\toutput statement section.\n\nFrom-SVN: r99846", "tree": {"sha": "4c27eb61ccfc6380dacfda762fa54ab32e91b480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c27eb61ccfc6380dacfda762fa54ab32e91b480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/221ca26767d6974bde165585f15595c12b63a56f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221ca26767d6974bde165585f15595c12b63a56f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221ca26767d6974bde165585f15595c12b63a56f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221ca26767d6974bde165585f15595c12b63a56f/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3a02333fa1c9f0d9fed99707b9da2e51754374d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a02333fa1c9f0d9fed99707b9da2e51754374d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3a02333fa1c9f0d9fed99707b9da2e51754374d"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "9e8979b0820220a26f2e0fc47589019fadb9c66f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221ca26767d6974bde165585f15595c12b63a56f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221ca26767d6974bde165585f15595c12b63a56f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=221ca26767d6974bde165585f15595c12b63a56f", "patch": "@@ -1,3 +1,18 @@\n+2005-05-17  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.md (ncond, ocode, rcond): Remove separate\n+\tdefine_code_attr.\n+\t(\"b<ncond:code>\", \"b<ocond:code>\", \"b<rcond:code>\")\n+\t(\"*b<ncond:code>_reversed\", \"*b<ocond:code>_reversed\")\n+\t(\"*b<rcond:code>_reversed\", \"s<ncond:code>\", \"s<rcond:code>\")\n+\t(\"s<ocond:code>\"): Rename from respectively \"b<ncond>\",\n+\t\"b<ocond>\", \"b<rcond>\", (\"*b<ncond>_reversed\",\n+\t\"*b<ocond>_reversed\", \"*b<rcond>_reversed\", \"s<ncond>\",\n+\t\"s<rcond>\" and \"s<ocond>\".\n+\t(\"b<ocond:code>\", \"*b<ocond:code>_reversed\")\n+\t(\"*b<rcond:code>_reversed\"): Remove extraneous backslashes in\n+\toutput statement section.\n+\n 2005-05-17  Roger Sayle  <roger@eyesopen.com>\n \n \t* c-typeck.c (common_type): Also handle BOOLEAN_TYPEs."}, {"sha": "8878b560e31a45a92cf4eb19cecd664e25bd97a1", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/221ca26767d6974bde165585f15595c12b63a56f/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/221ca26767d6974bde165585f15595c12b63a56f/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=221ca26767d6974bde165585f15595c12b63a56f", "patch": "@@ -164,16 +164,9 @@\n (define_code_attr shlr [(ashiftrt \"ashr\") (lshiftrt \"lshr\") (ashift \"ashl\")])\n (define_code_attr slr [(ashiftrt \"asr\") (lshiftrt \"lsr\") (ashift \"lsl\")])\n \n-;; For conditional branches and sCC.  We define an attribute by the\n-;; same name as the macro, so the insn names here is seen as\n-;; b<ncond>, b<ocond> etc. rather than b<code> b<code> etc.\n (define_code_macro ncond [eq ne gtu ltu geu leu])\n-(define_code_attr  ncond [(eq \"eq\") (ne \"ne\") (gtu \"gtu\") (ltu \"ltu\")\n-\t\t\t  (geu \"geu\") (leu \"leu\")])\n (define_code_macro ocond [gt le])\n-(define_code_attr ocond [(gt \"gt\") (le \"le\")])\n (define_code_macro rcond [lt ge])\n-(define_code_attr rcond [(lt \"lt\") (ge \"ge\")])\n (define_code_attr CC [(eq \"eq\") (ne \"ne\") (gt \"gt\") (gtu \"hi\") (lt \"lt\")\n \t\t      (ltu \"lo\") (ge \"ge\") (geu \"hs\") (le \"le\") (leu \"ls\")])\n (define_code_attr rCC [(eq \"ne\") (ne \"eq\") (gt \"le\") (gtu \"ls\") (lt \"ge\")\n@@ -2638,7 +2631,7 @@\n ;; e.g. m68k, so we have to check if overflow bit is set on all \"signed\"\n ;; conditions.\n \n-(define_insn \"b<ncond>\"\n+(define_insn \"b<ncond:code>\"\n   [(set (pc)\n \t(if_then_else (ncond (cc0)\n \t\t\t     (const_int 0))\n@@ -2648,7 +2641,7 @@\n   \"b<CC> %l0%#\"\n   [(set_attr \"slottable\" \"has_slot\")])\n \n-(define_insn \"b<ocond>\"\n+(define_insn \"b<ocond:code>\"\n   [(set (pc)\n \t(if_then_else (ocond (cc0)\n \t\t\t     (const_int 0))\n@@ -2658,11 +2651,11 @@\n {\n   return\n     (cc_prev_status.flags & CC_NO_OVERFLOW)\n-    ? 0 : \\\"b<CC> %l0%#\\\";\n+    ? 0 : \"b<CC> %l0%#\";\n }\n   [(set_attr \"slottable\" \"has_slot\")])\n \n-(define_insn \"b<rcond>\"\n+(define_insn \"b<rcond:code>\"\n   [(set (pc)\n \t(if_then_else (rcond (cc0)\n \t\t\t     (const_int 0))\n@@ -2678,7 +2671,7 @@\n \f\n ;; Reversed anonymous patterns to the ones above, as mandated.\n \n-(define_insn \"*b<ncond>_reversed\"\n+(define_insn \"*b<ncond:code>_reversed\"\n   [(set (pc)\n \t(if_then_else (ncond (cc0)\n \t\t\t     (const_int 0))\n@@ -2688,7 +2681,7 @@\n   \"b<rCC> %l0%#\"\n   [(set_attr \"slottable\" \"has_slot\")])\n \n-(define_insn \"*b<ocond>_reversed\"\n+(define_insn \"*b<ocond:code>_reversed\"\n   [(set (pc)\n \t(if_then_else (ocond (cc0)\n \t\t\t     (const_int 0))\n@@ -2698,11 +2691,11 @@\n {\n   return\n     (cc_prev_status.flags & CC_NO_OVERFLOW)\n-    ? 0 : \\\"b<rCC> %l0%#\\\";\n+    ? 0 : \"b<rCC> %l0%#\";\n }\n   [(set_attr \"slottable\" \"has_slot\")])\n \n-(define_insn \"*b<rcond>_reversed\"\n+(define_insn \"*b<rcond:code>_reversed\"\n   [(set (pc)\n \t(if_then_else (rcond (cc0)\n \t\t\t     (const_int 0))\n@@ -2712,7 +2705,7 @@\n {\n   return\n     (cc_prev_status.flags & CC_NO_OVERFLOW)\n-    ? \\\"b<roCC> %l0%#\\\" : \\\"b<rCC> %l0%#\\\";\n+    ? \"b<roCC> %l0%#\" : \"b<rCC> %l0%#\";\n }\n   [(set_attr \"slottable\" \"has_slot\")])\n \f\n@@ -2721,15 +2714,15 @@\n ;; Like bCC, we have to check the overflow bit for\n ;; signed conditions.\n \n-(define_insn \"s<ncond>\"\n+(define_insn \"s<ncond:code>\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ncond:SI (cc0) (const_int 0)))]\n   \"\"\n   \"s<CC> %0\"\n   [(set_attr \"slottable\" \"yes\")\n    (set_attr \"cc\" \"none\")])\n \n-(define_insn \"s<rcond>\"\n+(define_insn \"s<rcond:code>\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(rcond:SI (cc0) (const_int 0)))]\n   \"\"\n@@ -2741,7 +2734,7 @@\n   [(set_attr \"slottable\" \"yes\")\n    (set_attr \"cc\" \"none\")])\n \n-(define_insn \"s<ocond>\"\n+(define_insn \"s<ocond:code>\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ocond:SI (cc0) (const_int 0)))]\n   \"\""}]}