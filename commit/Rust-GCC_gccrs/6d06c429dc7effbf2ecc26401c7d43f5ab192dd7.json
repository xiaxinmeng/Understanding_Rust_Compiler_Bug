{"sha": "6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwNmM0MjlkYzdlZmZiZjJlY2MyNjQwMWM3ZDQzZjVhYjE5MmRkNw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-11-19T21:31:23Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-11-19T21:31:23Z"}, "message": "re PR sanitizer/63939 (Massive asan failures (356) on darwin)\n\n\tPR sanitizer/63939\n\t* c-c++-common/asan/heap-overflow-1.c: Ajust dg-output.\n\t* c-c++-common/asan/memcmp-1.c: Likewise.\n\t* c-c++-common/asan/strncpy-overflow-1.c: Likewise.\n\t* c-c++-common/asan/use-after-free-1.c: Likewise.\n\nFrom-SVN: r217813", "tree": {"sha": "f4db34a337bd2f487bc062a1ad8b60072f8e22e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4db34a337bd2f487bc062a1ad8b60072f8e22e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d1f12d56b2702c2568ab19cf286d5498cc4b067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d1f12d56b2702c2568ab19cf286d5498cc4b067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d1f12d56b2702c2568ab19cf286d5498cc4b067"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "326db9a8c8c2ba60b84f6e189bc67d27e706cbaa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "patch": "@@ -1,3 +1,11 @@\n+2014-11-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR sanitizer/63939\n+\t* c-c++-common/asan/heap-overflow-1.c: Ajust dg-output.\n+\t* c-c++-common/asan/memcmp-1.c: Likewise.\n+\t* c-c++-common/asan/strncpy-overflow-1.c: Likewise.\n+\t* c-c++-common/asan/use-after-free-1.c: Likewise.\n+\n 2014-11-19  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/63854"}, {"sha": "64dd7c8267be7b85803a9113f5a3066f41735d5c", "filename": "gcc/testsuite/c-c++-common/asan/heap-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fheap-overflow-1.c?ref=6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "patch": "@@ -27,5 +27,5 @@ int main(int argc, char **argv) {\n /* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:21|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 0 bytes to the right of 10-byte region\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*heap-overflow-1.c:19|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "3dff9dff2882f5620946a166be77b2c25a99dca7", "filename": "gcc/testsuite/c-c++-common/asan/memcmp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fmemcmp-1.c?ref=6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "patch": "@@ -16,5 +16,5 @@ main ()\n }\n \n /* { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow.*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)memcmp |\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)memcmp |\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "95e1e7f78f141ea180fadddb76cc0896fb4fadd6", "filename": "gcc/testsuite/c-c++-common/asan/strncpy-overflow-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrncpy-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrncpy-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fstrncpy-overflow-1.c?ref=6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "patch": "@@ -13,9 +13,9 @@ int main(int argc, char **argv) {\n }\n \n /* { dg-output \"WRITE of size \\[0-9\\]* at 0x\\[0-9a-f\\]+ thread T0\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)strncpy|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)strncpy|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*strncpy-overflow-1.c:11|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 0 bytes to the right of 9-byte region\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*strncpy-overflow-1.c:10|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "78c5488c48cfdfe569cbd357ec1a3c8e09fa92a4", "filename": "gcc/testsuite/c-c++-common/asan/use-after-free-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-free-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06c429dc7effbf2ecc26401c7d43f5ab192dd7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-free-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-free-1.c?ref=6d06c429dc7effbf2ecc26401c7d43f5ab192dd7", "patch": "@@ -15,8 +15,8 @@ int main() {\n /* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*use-after-free-1.c:9|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*0x\\[0-9a-f\\]+ is located 5 bytes inside of 10-byte region .0x\\[0-9a-f\\]+,0x\\[0-9a-f\\]+\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*freed by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)free|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)free|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*use-after-free-1.c:8|\\[^\\n\\r]*:0)|\\[(\\]).*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*previously allocated by thread T0 here:\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"    #0 0x\\[0-9a-f\\]+ (in _*(interceptor_|wrap_|)malloc|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #1 0x\\[0-9a-f\\]+ (in _*main (\\[^\\n\\r]*use-after-free-1.c:7|\\[^\\n\\r]*:0)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}]}