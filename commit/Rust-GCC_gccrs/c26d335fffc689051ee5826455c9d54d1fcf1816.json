{"sha": "c26d335fffc689051ee5826455c9d54d1fcf1816", "node_id": "C_kwDOANBUbNoAKGMyNmQzMzVmZmZjNjg5MDUxZWU1ODI2NDU1YzlkNTRkMWZjZjE4MTY", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-13T22:55:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-13T22:59:31Z"}, "message": "Fix bogus -Wstringop-overflow warning\n\nIf you compile the testcase with -O2 -fno-inline -Wall, you get:\n\nIn function 'process_array3':\ncc1: warning: 'process_array4' accessing 4 bytes in a region of size 3 [-\nWstringop-overflow=]\ncc1: note: referencing argument 1 of type 'char[4]'\nt.c:6:6: note: in a call to function 'process_array4'\n    6 | void process_array4 (char a[4], int n)\n      |      ^~~~~~~~~~~~~~\ncc1: warning: 'process_array4' accessing 4 bytes in a region of size 3 [-\nWstringop-overflow=]\ncc1: note: referencing argument 1 of type 'char[4]'\nt.c:6:6: note: in a call to function 'process_array4'\n\nThat's because the ICF IPA pass has identified the two functions and turned\nprocess_array3 into a wrapper of process_array4.\n\ngcc/\n\t* gimple-ssa-warn-access.cc (pass_waccess::check_call): Return\n\tearly for calls made from thunks.\n\ngcc/testsuite/\n\t* gcc.dg/Wstringop-overflow-89.c: New test.", "tree": {"sha": "e535bd578278e70ec247442af67c9aa835359ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e535bd578278e70ec247442af67c9aa835359ede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c26d335fffc689051ee5826455c9d54d1fcf1816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26d335fffc689051ee5826455c9d54d1fcf1816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c26d335fffc689051ee5826455c9d54d1fcf1816", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26d335fffc689051ee5826455c9d54d1fcf1816/comments", "author": null, "committer": null, "parents": [{"sha": "537e08cfad04e79fb97d368e397cfc7e782865ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537e08cfad04e79fb97d368e397cfc7e782865ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537e08cfad04e79fb97d368e397cfc7e782865ec"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "59a70530600dba48064030d01da2a151c1fbe9ba", "filename": "gcc/gimple-ssa-warn-access.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26d335fffc689051ee5826455c9d54d1fcf1816/gcc%2Fgimple-ssa-warn-access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26d335fffc689051ee5826455c9d54d1fcf1816/gcc%2Fgimple-ssa-warn-access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-access.cc?ref=c26d335fffc689051ee5826455c9d54d1fcf1816", "patch": "@@ -4291,14 +4291,18 @@ pass_waccess::check_pointer_uses (gimple *stmt, tree ptr,\n void\n pass_waccess::check_call (gcall *stmt)\n {\n-  if (gimple_call_builtin_p (stmt, BUILT_IN_NORMAL))\n-    check_builtin (stmt);\n+  /* Skip special calls generated by the compiler.  */\n+  if (gimple_call_from_thunk_p (stmt))\n+    return;\n \n   /* .ASAN_MARK doesn't access any vars, only modifies shadow memory.  */\n   if (gimple_call_internal_p (stmt)\n       && gimple_call_internal_fn (stmt) == IFN_ASAN_MARK)\n     return;\n \n+  if (gimple_call_builtin_p (stmt, BUILT_IN_NORMAL))\n+    check_builtin (stmt);\n+\n   if (!m_early_checks_p)\n     if (tree callee = gimple_call_fndecl (stmt))\n       {"}, {"sha": "ba25a9386a765ac71f7a2bae43048c79257669e5", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-89.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26d335fffc689051ee5826455c9d54d1fcf1816/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-89.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26d335fffc689051ee5826455c9d54d1fcf1816/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-89.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-89.c?ref=c26d335fffc689051ee5826455c9d54d1fcf1816", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-inline -Wall\" } */\n+\n+extern void process (char);\n+\n+void process_array4 (char a[4], int n)\n+{\n+  for (int i = 0; i < n; i++)\n+    process (a[i]);\n+}\n+\n+void process_array3 (char a[3], int n)\n+{\n+  for (int i = 0; i < n; i++)\n+    process (a[i]);\n+}"}]}