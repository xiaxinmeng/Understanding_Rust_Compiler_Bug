{"sha": "8db9d05e0f0642262300e89585da7c2667928993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRiOWQwNWUwZjA2NDIyNjIzMDBlODk1ODVkYTdjMjY2NzkyODk5Mw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-12-22T14:50:29Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-12-22T14:50:29Z"}, "message": "varasm: Propagate litpool decl alignment to generated RTX.\n\nWhen pushing a value into the literal pool the resulting decl might\nget a higher alignment than the original expression depending on how a\ntarget defines CONSTANT_ALIGNMENT.  Generating an RTX for the constant\npool access we currently use the alignment from the original\nexpression.  Changed with the attached patch.\n\nThis fixes a GCC 6 regression for S/390.  For arrays of string\nconstants as in the attached testcase encode_section_info is not able\nto figure out that the constant pool slot is already properly aligned\nsince the mem_align field in the rtx is not set properly.\n\ngcc/ChangeLog:\n\n2016-12-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* varasm.c (build_constant_desc): Use the alignment of the var\n\tdecl instead of the original expression.\n\ngcc/testsuite/ChangeLog:\n\n2016-12-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/litpool-str-1.c: New test.\n\nFrom-SVN: r243888", "tree": {"sha": "b224567ef58decaaa51a7eba54c6eee97a6dd51a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b224567ef58decaaa51a7eba54c6eee97a6dd51a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8db9d05e0f0642262300e89585da7c2667928993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8db9d05e0f0642262300e89585da7c2667928993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8db9d05e0f0642262300e89585da7c2667928993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8db9d05e0f0642262300e89585da7c2667928993/comments", "author": null, "committer": null, "parents": [{"sha": "cbbb9dabbb498b27ca4cf7337a7c8aa013498bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbb9dabbb498b27ca4cf7337a7c8aa013498bb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbbb9dabbb498b27ca4cf7337a7c8aa013498bb0"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "64f7b88d3adeded1ae168291dfed049bfaf32e28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8db9d05e0f0642262300e89585da7c2667928993/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8db9d05e0f0642262300e89585da7c2667928993/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8db9d05e0f0642262300e89585da7c2667928993", "patch": "@@ -1,3 +1,8 @@\n+2016-12-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* varasm.c (build_constant_desc): Use the alignment of the var\n+\tdecl instead of the original expression.\n+\n 2016-12-22  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390-c.c (s390_cpu_cpp_builtins_internal): Define"}, {"sha": "368f7eaceb164dcff8cc7695c8d1f1fa8f7f373e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8db9d05e0f0642262300e89585da7c2667928993/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8db9d05e0f0642262300e89585da7c2667928993/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8db9d05e0f0642262300e89585da7c2667928993", "patch": "@@ -1,3 +1,7 @@\n+2016-12-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/litpool-str-1.c: New test.\n+\n 2016-12-22  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/md/setmem_long-1.c: Use \"s390_useable_hw\"."}, {"sha": "cd921d2a56529ea1b18cc1e1f64b3485dc5a3270", "filename": "gcc/testsuite/gcc.target/s390/litpool-str-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8db9d05e0f0642262300e89585da7c2667928993/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Flitpool-str-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8db9d05e0f0642262300e89585da7c2667928993/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Flitpool-str-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Flitpool-str-1.c?ref=8db9d05e0f0642262300e89585da7c2667928993", "patch": "@@ -0,0 +1,22 @@\n+/* Make sure strings are recognized as being accessible through larl.\n+   This requires the symbol ref alignment properly propagated to\n+   encode_section_info.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-march=z900 -O2 -fpic\" } */\n+\n+\n+extern void foo(const char*, const char*, const char*);\n+\n+void bar(int i)\n+{\n+  const char t1[10] = \"test\";\n+  const char t2[10] = \"test2\";\n+  const char t3[2][10] = {\n+       \"foofoofoo\",\n+       \"barbarbar\",\n+    };\n+  foo(t1, t2, t3[i]);\n+}\n+\n+/* { dg-final { scan-assembler-not \"GOTOFF\" } } */"}, {"sha": "75d5ad6842d4d68f6d3102d21077d4fee348e85b", "filename": "gcc/varasm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8db9d05e0f0642262300e89585da7c2667928993/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8db9d05e0f0642262300e89585da7c2667928993/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8db9d05e0f0642262300e89585da7c2667928993", "patch": "@@ -3296,6 +3296,10 @@ build_constant_desc (tree exp)\n   set_mem_attributes (rtl, exp, 1);\n   set_mem_alias_set (rtl, 0);\n \n+  /* Putting EXP into the literal pool might have imposed a different\n+     alignment which should be visible in the RTX as well.  */\n+  set_mem_align (rtl, DECL_ALIGN (decl));\n+\n   /* We cannot share RTX'es in pool entries.\n      Mark this piece of RTL as required for unsharing.  */\n   RTX_FLAG (rtl, used) = 1;"}]}