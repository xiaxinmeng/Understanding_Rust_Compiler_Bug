{"sha": "fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhMDUxYWYxOGZmY2M5ZTQ0NzYzYzEwNmUyMWZlM2NmNWUwZDNjYQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-12-09T20:08:39Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-12-09T20:08:39Z"}, "message": "[AArch64]Improve error message for non-constant immediates\n\ngcc/:\n\n\t* gcc/config/aarch64-builtins.c (aarch64_simd_expand_args): Update error\n\tmessage for SIMD_ARG_CONSTANT.\n\ngcc/testsuite/:\n\n\t* gcc.target/aarch64/arg-type-diagnostics-1.c: Call intrinsic, update\n\texpected error message.\n\nFrom-SVN: r218534", "tree": {"sha": "2a6552dbf063942d900e657879d12892db75ca5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a6552dbf063942d900e657879d12892db75ca5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/comments", "author": null, "committer": null, "parents": [{"sha": "d1e5f2c7e2a800e99509aadb9cdc6d3e76eeb1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e5f2c7e2a800e99509aadb9cdc6d3e76eeb1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e5f2c7e2a800e99509aadb9cdc6d3e76eeb1a9"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "4ba56768e611a6ed7fd320c4ae305a9a10d24cf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "patch": "@@ -1,3 +1,8 @@\n+2014-12-09  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc/config/aarch64-builtins.c (aarch64_simd_expand_args): Update error\n+\tmessage for SIMD_ARG_CONSTANT.\n+\n 2014-12-09  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (aarch64_types_binopv_qualifiers,"}, {"sha": "e3779a499cb7e455ad867ff02c8aa870758d77c7", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "patch": "@@ -926,8 +926,8 @@ aarch64_simd_expand_args (rtx target, int icode, int have_retval,\n \t      if (!(*insn_data[icode].operand[opc].predicate)\n \t\t  (op[opc], mode))\n \t      {\n-\t\terror_at (EXPR_LOCATION (exp), \"incompatible type for argument %d, \"\n-\t\t       \"expected %<const int%>\", opc + 1);\n+\t\terror (\"%Kargument %d must be a constant immediate\",\n+\t\t       exp, opc + 1 - have_retval);\n \t\treturn const0_rtx;\n \t      }\n \t      break;"}, {"sha": "8e536a42325168054012a1379ca79b2a27c6209b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "patch": "@@ -1,3 +1,8 @@\n+2014-12-09  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/arg-type-diagnostics-1.c: Call intrinsic, update\n+\texpected error message.\n+\n 2014-12-09  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/simd/vset_lane_s16_const_1.c: New test."}, {"sha": "a7b7cd3bd8d40faaabbe48a1d382e9860d4497ff", "filename": "gcc/testsuite/gcc.target/aarch64/arg-type-diagnostics-1.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Farg-type-diagnostics-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca051af18ffcc9e44763c106e21fe3cf5e0d3ca/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Farg-type-diagnostics-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Farg-type-diagnostics-1.c?ref=fca051af18ffcc9e44763c106e21fe3cf5e0d3ca", "patch": "@@ -3,13 +3,16 @@\n \n #include \"arm_neon.h\"\n \n-void foo ()\n+void foo (int a)\n {\n-  int a;\n   int32x2_t arg1;\n   int32x2_t arg2;\n   int32x2_t result;\n   arg1 = vcreate_s32 (UINT64_C (0x0000ffffffffffff));\n   arg2 = vcreate_s32 (UINT64_C (0x16497fffffffffff));\n-  result = __builtin_aarch64_srsra_nv2si (arg1, arg2, a); /* { dg-error \"incompatible type for argument\" } */\n+  /* The correct line number is in the preamble to the error message,\n+     not in the final line (which is all that dg-error inspects). Hence,\n+     we have to tell dg-error to ignore the line number.  */\n+  result = vrsra_n_s32 (arg1, arg2, a);\n+  /* { dg-error \"must be a constant immediate\" \"\" { target *-*-* } 0 } */\n }"}]}