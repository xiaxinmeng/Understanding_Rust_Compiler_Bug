{"sha": "3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RiYmI3YWY1YjRkZDNhZTAxYTkzNDcwODFmNGI0ODZkMzc1MjE2MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-06-09T04:18:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-06-09T04:18:54Z"}, "message": "parser.c (cp_parser_type_id_1): 'auto' type is ok with a late-specified return type.\n\n\t* parser.c (cp_parser_type_id_1): 'auto' type is ok with a\n\tlate-specified return type.\n\nFrom-SVN: r148306", "tree": {"sha": "b7e0fcb69c34f807be32cbe3b5ca5c32518d8e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e0fcb69c34f807be32cbe3b5ca5c32518d8e1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92b672095e73e4f09750f5f5b010ecabc1e001c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b672095e73e4f09750f5f5b010ecabc1e001c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92b672095e73e4f09750f5f5b010ecabc1e001c4"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "c4e84aa14b8e00cdac97eba3c455081ef78877a5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "patch": "@@ -1,3 +1,8 @@\n+2009-06-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_type_id_1): 'auto' type is ok with a\n+\tlate-specified return type.\n+\n 2009-06-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/40373"}, {"sha": "b988850d206e1b614acfe61838a1bec8f1b06b2d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "patch": "@@ -13848,8 +13848,17 @@ cp_parser_type_id_1 (cp_parser* parser, bool is_template_arg)\n   if (type_specifier_seq.type\n       && type_uses_auto (type_specifier_seq.type))\n     {\n-      error (\"invalid use of %<auto%>\");\n-      return error_mark_node;\n+      /* A type-id with type 'auto' is only ok if the abstract declarator\n+\t is a function declarator with a late-specified return type.  */\n+      if (abstract_declarator\n+\t  && abstract_declarator->kind == cdk_function\n+\t  && abstract_declarator->u.function.late_return_type)\n+\t/* OK */;\n+      else\n+\t{\n+\t  error (\"invalid use of %<auto%>\");\n+\t  return error_mark_node;\n+\t}\n     }\n   \n   return groktypename (&type_specifier_seq, abstract_declarator,"}, {"sha": "b08a0b91930b2eaf77f3cff72f51736693065994", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "patch": "@@ -1,3 +1,7 @@\n+2009-06-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/auto15.C: New.\n+\n 2009-06-08  Jan Hubicka  <jh@suse.cz>\n \n \tPR debug/39834"}, {"sha": "b23e1e2fd6fd5bc91258a796be22d625fb7182c5", "filename": "gcc/testsuite/g++.dg/cpp0x/auto15.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dbbb7af5b4dd3ae01a9347081f4b486d3752160/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto15.C?ref=3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "patch": "@@ -0,0 +1,13 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+template< typename Fn > struct function;\n+\n+template< typename Result, typename ... ArgTypes >\n+struct function< auto (ArgTypes...)->Result > {\n+};\n+\n+int main()\n+{\n+   function< auto(double)->int > y;\n+   return 0;\n+}"}]}