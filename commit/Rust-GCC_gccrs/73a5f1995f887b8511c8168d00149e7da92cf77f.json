{"sha": "73a5f1995f887b8511c8168d00149e7da92cf77f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhNWYxOTk1Zjg4N2I4NTExYzgxNjhkMDAxNDllN2RhOTJjZjc3Zg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-10-18T18:06:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-10-18T18:06:41Z"}, "message": "tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Guard VIEW_CONVERT_EXPR case against invalid gimple.\n\n2008-10-18  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Guard\n\tVIEW_CONVERT_EXPR case against invalid gimple.\n\nFrom-SVN: r141212", "tree": {"sha": "4fd74938520320c45dcbb0803de64867f7b9d032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd74938520320c45dcbb0803de64867f7b9d032"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73a5f1995f887b8511c8168d00149e7da92cf77f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a5f1995f887b8511c8168d00149e7da92cf77f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a5f1995f887b8511c8168d00149e7da92cf77f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a5f1995f887b8511c8168d00149e7da92cf77f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8168c08f08e2e309c855793dde24757acaceb8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8168c08f08e2e309c855793dde24757acaceb8ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8168c08f08e2e309c855793dde24757acaceb8ec"}], "stats": {"total": 46, "additions": 28, "deletions": 18}, "files": [{"sha": "12a9f5274b184b88e85d75e5d26b34ba9339aee3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a5f1995f887b8511c8168d00149e7da92cf77f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a5f1995f887b8511c8168d00149e7da92cf77f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73a5f1995f887b8511c8168d00149e7da92cf77f", "patch": "@@ -1,3 +1,8 @@\n+2008-10-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Guard\n+\tVIEW_CONVERT_EXPR case against invalid gimple.\n+\n 2008-10-17  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* c-parser.c (c_parser_binary_expression): Silence the"}, {"sha": "7a5233bd1f89e057dd643f06c0e18deb1ef2d913", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a5f1995f887b8511c8168d00149e7da92cf77f/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a5f1995f887b8511c8168d00149e7da92cf77f/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=73a5f1995f887b8511c8168d00149e7da92cf77f", "patch": "@@ -767,31 +767,36 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n       && TREE_OPERAND (rhs, 0) == name\n       && TYPE_SIZE (TREE_TYPE (rhs))\n       && TYPE_SIZE (TREE_TYPE (TREE_OPERAND (def_rhs, 0)))\n-      /* Function decls should not be used for VCE either as it could be\n-         a function descriptor that we want and not the actual function code.  */\n+      /* Function decls should not be used for VCE either as it could be a\n+         function descriptor that we want and not the actual function code.  */\n       && TREE_CODE (TREE_OPERAND (def_rhs, 0)) != FUNCTION_DECL\n       /* We should not convert volatile loads to non volatile loads. */\n       && !TYPE_VOLATILE (TREE_TYPE (rhs))\n       && !TYPE_VOLATILE (TREE_TYPE (TREE_OPERAND (def_rhs, 0)))\n       && operand_equal_p (TYPE_SIZE (TREE_TYPE (rhs)),\n \t\t\t  TYPE_SIZE (TREE_TYPE (TREE_OPERAND (def_rhs, 0))), 0)) \n    {\n-      bool res = true;\n-      tree new_rhs = unshare_expr (TREE_OPERAND (def_rhs, 0));\n-      new_rhs = fold_build1 (VIEW_CONVERT_EXPR, TREE_TYPE (rhs), new_rhs);\n-      /* If we have folded the VCE, then we have to create a new statement.  */\n-      if (TREE_CODE (new_rhs) != VIEW_CONVERT_EXPR)\n-\t{\n-\t  gimple_stmt_iterator gsi = gsi_for_stmt (use_stmt);\n-\t  new_rhs = force_gimple_operand_gsi (&gsi, new_rhs, true, NULL, true, GSI_SAME_STMT);\n-\t  /* As we change the deference to a SSA_NAME, we need to return false to make sure that\n-\t     the statement does not get removed.  */\n-\t  res = false;\n-\t}\n-      *rhsp = new_rhs;\n-      fold_stmt_inplace (use_stmt);\n-      tidy_after_forward_propagate_addr (use_stmt);\n-      return res;\n+     tree new_rhs = unshare_expr (TREE_OPERAND (def_rhs, 0));\n+     new_rhs = fold_build1 (VIEW_CONVERT_EXPR, TREE_TYPE (rhs), new_rhs);\n+     if (TREE_CODE (new_rhs) != VIEW_CONVERT_EXPR)\n+       {\n+\t /* If we have folded the VIEW_CONVERT_EXPR then the result is only\n+\t    valid if we can replace the whole rhs of the use statement.  */\n+\t if (rhs != gimple_assign_rhs1 (use_stmt))\n+\t   return false;\n+\t new_rhs = force_gimple_operand_gsi (use_stmt_gsi, new_rhs, true, NULL,\n+\t\t\t\t\t     true, GSI_NEW_STMT);\n+\t gimple_assign_set_rhs1 (use_stmt, new_rhs);\n+       }\n+     else\n+       {\n+\t /* We may have arbitrary VIEW_CONVERT_EXPRs in a nested component\n+\t    reference.  Place it there and fold the thing.  */\n+\t *rhsp = new_rhs;\n+\t fold_stmt_inplace (use_stmt);\n+       }\n+     tidy_after_forward_propagate_addr (use_stmt);\n+     return true;\n    }\n \n   /* If the use of the ADDR_EXPR is not a POINTER_PLUS_EXPR, there"}]}