{"sha": "ae526fe5cb554626a0b656c8c13ad1f66844fa43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1MjZmZTVjYjU1NDYyNmEwYjY1NmM4YzEzYWQxZjY2ODQ0ZmE0Mw==", "commit": {"author": {"name": "Alexander Potapenko", "email": "glider@google.com", "date": "2013-02-04T20:08:29Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-02-04T20:08:29Z"}, "message": "re PR sanitizer/55617 (static constructors are not being instrumented correctly on darwin)\n\n2013-02-04  Alexander Potapenko <glider@google.com>\n            Jack Howarth  <howarth@bromo.med.uc.edu>\n\t        Jakub Jelinek  <jakub@redhat.com>\n\n\t\tPR sanitizer/55617\n\t\t* config/darwin.c (sort_ctor_records): Stabilized qsort\n\t\ton constructor priority by using original position.\n\t\t(finalize_ctors): New routine to sort constructors by\n\t\tpriority before use in assemble_integer.\n\t\t(machopic_asm_out_constructor): Use finalize_ctors if needed.\n\nCo-Authored-By: Jack Howarth <howarth@bromo.med.uc.edu>\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r195735", "tree": {"sha": "c7b15cd7c8f45511faa73368fafacaa92984f621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7b15cd7c8f45511faa73368fafacaa92984f621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae526fe5cb554626a0b656c8c13ad1f66844fa43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae526fe5cb554626a0b656c8c13ad1f66844fa43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae526fe5cb554626a0b656c8c13ad1f66844fa43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae526fe5cb554626a0b656c8c13ad1f66844fa43/comments", "author": {"login": "ramosian-glider", "id": 912627, "node_id": "MDQ6VXNlcjkxMjYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/912627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramosian-glider", "html_url": "https://github.com/ramosian-glider", "followers_url": "https://api.github.com/users/ramosian-glider/followers", "following_url": "https://api.github.com/users/ramosian-glider/following{/other_user}", "gists_url": "https://api.github.com/users/ramosian-glider/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramosian-glider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramosian-glider/subscriptions", "organizations_url": "https://api.github.com/users/ramosian-glider/orgs", "repos_url": "https://api.github.com/users/ramosian-glider/repos", "events_url": "https://api.github.com/users/ramosian-glider/events{/privacy}", "received_events_url": "https://api.github.com/users/ramosian-glider/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "240d63482d9342b7ac8632ded9ec81785be5faa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240d63482d9342b7ac8632ded9ec81785be5faa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240d63482d9342b7ac8632ded9ec81785be5faa4"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "bfb857d102a4f601805cafdf745cff7ff8b0cf89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae526fe5cb554626a0b656c8c13ad1f66844fa43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae526fe5cb554626a0b656c8c13ad1f66844fa43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae526fe5cb554626a0b656c8c13ad1f66844fa43", "patch": "@@ -1,3 +1,14 @@\n+2013-02-04  Alexander Potapenko <glider@google.com>\n+            Jack Howarth  <howarth@bromo.med.uc.edu>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/55617\n+\t* config/darwin.c (sort_ctor_records): Stabilized qsort\n+\ton constructor priority by using original position.\n+\t(finalize_ctors): New routine to sort constructors by\n+\tpriority before use in assemble_integer.\n+\t(machopic_asm_out_constructor): Use finalize_ctors if needed.\n+\n 2013-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/54314"}, {"sha": "f1bf24aa91dde3ff83f76e5d139450eb5747cfa9", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae526fe5cb554626a0b656c8c13ad1f66844fa43/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae526fe5cb554626a0b656c8c13ad1f66844fa43/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=ae526fe5cb554626a0b656c8c13ad1f66844fa43", "patch": "@@ -83,6 +83,14 @@ along with GCC; see the file COPYING3.  If not see\n    kernel) the stubs might still be required, and this will be set true.  */\n int darwin_emit_branch_islands = false;\n \n+typedef struct GTY(()) ctor_record {\n+  rtx symbol;\n+  int priority;\t\t/* constructor priority */\n+  int position;\t\t/* original position */\n+} ctor_record;\n+\n+static GTY(()) vec<ctor_record, va_gc> *ctors = NULL;\n+\n /* A flag to determine whether we are running c++ or obj-c++.  This has to be\n    settable from non-c-family contexts too (i.e. we can't use the c_dialect_\n    functions).  */\n@@ -1708,15 +1716,48 @@ machopic_select_rtx_section (enum machine_mode mode, rtx x,\n void\n machopic_asm_out_constructor (rtx symbol, int priority ATTRIBUTE_UNUSED)\n {\n+  ctor_record new_elt = {symbol, priority, vec_safe_length (ctors)};\n+\n+  vec_safe_push (ctors, new_elt);\n+\n+  if (! MACHOPIC_INDIRECT)\n+    fprintf (asm_out_file, \".reference .constructors_used\\n\");\n+}\n+\n+static int\n+sort_ctor_records (const void * a, const void * b)\n+{\n+  const ctor_record *ca = (const ctor_record *)a;\n+  const ctor_record *cb = (const ctor_record *)b;\n+  if (ca->priority > cb->priority)\n+    return 1;\n+  if (ca->priority < cb->priority)\n+    return -1;\n+  if (ca->position > cb->position)\n+    return 1;\n+  if (ca->position < cb->position)\n+    return -1;\n+  return 0;\n+}\n+\n+static void \n+finalize_ctors()\n+{\n+  unsigned int i;\n+  ctor_record *elt;\n+ \n   if (MACHOPIC_INDIRECT)\n     switch_to_section (darwin_sections[mod_init_section]);\n   else\n     switch_to_section (darwin_sections[constructor_section]);\n-  assemble_align (POINTER_SIZE);\n-  assemble_integer (symbol, POINTER_SIZE / BITS_PER_UNIT, POINTER_SIZE, 1);\n \n-  if (! MACHOPIC_INDIRECT)\n-    fprintf (asm_out_file, \".reference .constructors_used\\n\");\n+  if (vec_safe_length (ctors) > 1)\n+    ctors->qsort (sort_ctor_records);\n+  FOR_EACH_VEC_SAFE_ELT (ctors, i, elt)\n+    {\n+      assemble_align (POINTER_SIZE);\n+      assemble_integer (elt->symbol, POINTER_SIZE / BITS_PER_UNIT, POINTER_SIZE, 1);\n+    }\n }\n \n void\n@@ -2762,6 +2803,8 @@ darwin_file_start (void)\n void\n darwin_file_end (void)\n {\n+  if (!vec_safe_is_empty (ctors))\n+    finalize_ctors();\n   machopic_finish (asm_out_file);\n   if (strcmp (lang_hooks.name, \"GNU C++\") == 0)\n     {"}]}