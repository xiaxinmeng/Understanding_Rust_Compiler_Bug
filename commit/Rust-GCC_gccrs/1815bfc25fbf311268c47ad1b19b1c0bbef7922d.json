{"sha": "1815bfc25fbf311268c47ad1b19b1c0bbef7922d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxNWJmYzI1ZmJmMzExMjY4YzQ3YWQxYjE5YjFjMGJiZWY3OTIyZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-17T21:44:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-17T21:44:50Z"}, "message": "(block_number, BLOCK_NUM, reg_to_stack): Use ints, not shorts to count\nblocks.\n\nFrom-SVN: r4177", "tree": {"sha": "0f8f4d5ddd5385ad0f223bb2f69a998921489318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f8f4d5ddd5385ad0f223bb2f69a998921489318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1815bfc25fbf311268c47ad1b19b1c0bbef7922d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1815bfc25fbf311268c47ad1b19b1c0bbef7922d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1815bfc25fbf311268c47ad1b19b1c0bbef7922d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1815bfc25fbf311268c47ad1b19b1c0bbef7922d/comments", "author": null, "committer": null, "parents": [{"sha": "7ee8a9d536a16c34416eccfc246c156ff4da98b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee8a9d536a16c34416eccfc246c156ff4da98b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee8a9d536a16c34416eccfc246c156ff4da98b9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cde0ca30e44d6e19c08d5ed13ec6782da9b7f7b5", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1815bfc25fbf311268c47ad1b19b1c0bbef7922d/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1815bfc25fbf311268c47ad1b19b1c0bbef7922d/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=1815bfc25fbf311268c47ad1b19b1c0bbef7922d", "patch": "@@ -216,7 +216,7 @@ static HARD_REG_SET *block_out_reg_set;\n    later, but only to look up an insn that is the head or tail of some\n    block.  life_analysis and the stack register conversion process can\n    add insns within a block. */\n-static short *block_number;\n+static int *block_number;\n \n /* This is the register file for all register after conversion */\n static rtx FP_mode_reg[FIRST_PSEUDO_REGISTER][(int) MAX_MACHINE_MODE];\n@@ -226,7 +226,7 @@ static rtx FP_mode_reg[FIRST_PSEUDO_REGISTER][(int) MAX_MACHINE_MODE];\n \n #define BLOCK_NUM(INSN)  \\\n   (((INSN_UID (INSN) > max_uid)\t\\\n-    ? (short *)(abort() , 0)\t\t\\\n+    ? (int *)(abort() , 0)\t\t\\\n     : block_number)[INSN_UID (INSN)])\n \n extern rtx gen_jump ();\n@@ -366,7 +366,7 @@ reg_to_stack (first, file)\n   bzero (block_stack_in, blocks * sizeof (struct stack_def));\n   bzero (block_out_reg_set, blocks * sizeof (HARD_REG_SET));\n \n-  block_number = (short *) alloca ((max_uid + 1) * sizeof (short));\n+  block_number = (int *) alloca ((max_uid + 1) * sizeof (int));\n \n   find_blocks (first);\n   stack_reg_life_analysis (first);"}]}