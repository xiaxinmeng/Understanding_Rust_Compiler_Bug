{"sha": "9e350e99cb9f93ea99216c9c2a40517111636116", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzNTBlOTljYjlmOTNlYTk5MjE2YzljMmE0MDUxNzExMTYzNjExNg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-05-19T16:25:12Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-05-19T16:25:12Z"}, "message": "collect2.c: Include diagnostic.h.\n\n\t* collect2.c: Include diagnostic.h.\n\t(fatal_perror, fatal, error, fancy_abort): Remove.\n\t(main): Set progname.  Call xmalloc_set_program_name and\n\tdiagnostic_initialize.\n\t(maybe_run_lto_and_relink, main, collect_execute, scan_prog_file,\n\tscan_libraries, resolve_lib_name): Call fatal_error instead of\n\tfatal and fatal_perror.\n\t* collect2.h (error, fatal, fatal_perror): Don't declare.\n\t* tlink.c: Include diagnostic-core.h.\n\t(recompile_files): Call fatal_error instead of fatal_perror.\n\t* Makefile.in (COLLECT2_OBJS): Include diagnostic.o,\n\tpretty-print.o and input.o.\n\t(collect2.o, tlink.o): Update dependencies.\n\ntestsuite:\n\t* lib/prune.exe (prune_gcc_output): Expect \"error:\" in collect2\n\toutput.\n\nFrom-SVN: r173915", "tree": {"sha": "d058c00dc1d7bc91f5480576092941a860ad9b64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d058c00dc1d7bc91f5480576092941a860ad9b64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e350e99cb9f93ea99216c9c2a40517111636116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e350e99cb9f93ea99216c9c2a40517111636116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e350e99cb9f93ea99216c9c2a40517111636116", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e350e99cb9f93ea99216c9c2a40517111636116/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86ff4081df5f17cefaff375ab48fa0685ea3c3f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ff4081df5f17cefaff375ab48fa0685ea3c3f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ff4081df5f17cefaff375ab48fa0685ea3c3f8"}], "stats": {"total": 176, "additions": 75, "deletions": 101}, "files": [{"sha": "8dddfb46c5413c63321a4d23a8153c8f80925e26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -1,3 +1,19 @@\n+2011-05-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* collect2.c: Include diagnostic.h.\n+\t(fatal_perror, fatal, error, fancy_abort): Remove.\n+\t(main): Set progname.  Call xmalloc_set_program_name and\n+\tdiagnostic_initialize.\n+\t(maybe_run_lto_and_relink, main, collect_execute, scan_prog_file,\n+\tscan_libraries, resolve_lib_name): Call fatal_error instead of\n+\tfatal and fatal_perror.\n+\t* collect2.h (error, fatal, fatal_perror): Don't declare.\n+\t* tlink.c: Include diagnostic-core.h.\n+\t(recompile_files): Call fatal_error instead of fatal_perror.\n+\t* Makefile.in (COLLECT2_OBJS): Include diagnostic.o,\n+\tpretty-print.o and input.o.\n+\t(collect2.o, tlink.o): Update dependencies.\n+\n 2011-05-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/i386/i386.md (tls_initial_exec_64_sun): Add semicolon."}, {"sha": "27ffbbc9df101638619cb16e5bc97e6eee1e7a0d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -2089,7 +2089,8 @@ sbitmap.o: sbitmap.c sbitmap.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(BASIC_BLOCK\n ebitmap.o: ebitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(EBITMAP_H)\n sparseset.o: sparseset.c $(SYSTEM_H) sparseset.h $(CONFIG_H)\n \n-COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o intl.o version.o\n+COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o intl.o version.o \\\n+  diagnostic.o pretty-print.o input.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this.\n@@ -2098,7 +2099,8 @@ collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n \tmv -f T$@ $@\n \n collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h \\\n-\t$(OBSTACK_H) $(DEMANGLE_H) collect2.h collect2-aix.h version.h\n+\t$(OBSTACK_H) $(DEMANGLE_H) collect2.h collect2-aix.h version.h \\\n+\t$(DIAGNOSTIC_H)\n \t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS)  \\\n \t-DTARGET_MACHINE=\\\"$(target_noncanonical)\\\" \\\n \t-c $(srcdir)/collect2.c $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n@@ -2107,7 +2109,7 @@ collect2-aix.o : collect2-aix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     collect2-aix.h\n \n tlink.o: tlink.c $(DEMANGLE_H) $(HASHTAB_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(OBSTACK_H) collect2.h intl.h\n+    $(OBSTACK_H) collect2.h intl.h $(DIAGNOSTIC_CORE_H)\n \n lto-wrapper$(exeext): lto-wrapper.o intl.o $(LIBDEPS)\n \t+$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ lto-wrapper.o intl.o $(LIBS)"}, {"sha": "dadf82d34b143b8c25a6a39a89b4954494e2beaa", "filename": "gcc/collect2.c", "status": "modified", "additions": 42, "deletions": 88, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -44,6 +44,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"collect2.h\"\n #include \"collect2-aix.h\"\n+#include \"diagnostic.h\"\n #include \"demangle.h\"\n #include \"obstack.h\"\n #include \"intl.h\"\n@@ -444,62 +445,6 @@ notice_translated (const char *cmsgid, ...)\n   vfprintf (stderr, cmsgid, ap);\n   va_end (ap);\n }\n-\n-/* Die when sys call fails.  */\n-\n-void\n-fatal_perror (const char * cmsgid, ...)\n-{\n-  int e = errno;\n-  va_list ap;\n-\n-  va_start (ap, cmsgid);\n-  fprintf (stderr, \"collect2: \");\n-  vfprintf (stderr, _(cmsgid), ap);\n-  fprintf (stderr, \": %s\\n\", xstrerror (e));\n-  va_end (ap);\n-\n-  collect_exit (FATAL_EXIT_CODE);\n-}\n-\n-/* Just die.  */\n-\n-void\n-fatal (const char * cmsgid, ...)\n-{\n-  va_list ap;\n-\n-  va_start (ap, cmsgid);\n-  fprintf (stderr, \"collect2: \");\n-  vfprintf (stderr, _(cmsgid), ap);\n-  fprintf (stderr, \"\\n\");\n-  va_end (ap);\n-\n-  collect_exit (FATAL_EXIT_CODE);\n-}\n-\n-/* Write error message.  */\n-\n-void\n-error (const char * gmsgid, ...)\n-{\n-  va_list ap;\n-\n-  va_start (ap, gmsgid);\n-  fprintf (stderr, \"collect2: \");\n-  vfprintf (stderr, _(gmsgid), ap);\n-  fprintf (stderr, \"\\n\");\n-  va_end(ap);\n-}\n-\n-/* In case obstack is linked in, and abort is defined to fancy_abort,\n-   provide a default entry.  */\n-\n-void\n-fancy_abort (const char *file, int line, const char *func)\n-{\n-  fatal (\"internal gcc abort in %s, at %s:%d\", func, file, line);\n-}\n \f\n static void\n handler (int signo)\n@@ -953,7 +898,7 @@ maybe_run_lto_and_relink (char **lto_ld_argv, char **object_lst,\n       size_t num_files;\n \n       if (!lto_wrapper)\n-\tfatal (\"COLLECT_LTO_WRAPPER must be set\");\n+\tfatal_error (\"COLLECT_LTO_WRAPPER must be set\");\n \n       num_lto_c_args++;\n \n@@ -1151,6 +1096,13 @@ main (int argc, char **argv)\n   int num_c_args;\n   char **old_argv;\n \n+  p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+  xmalloc_set_program_name (progname);\n+\n   old_argv = argv;\n   expandargv (&argc, &argv);\n   if (argv != old_argv)\n@@ -1181,6 +1133,8 @@ main (int argc, char **argv)\n \n   gcc_init_libintl ();\n \n+  diagnostic_initialize (global_dc, 0);\n+\n   /* Do not invoke xcalloc before this point, since locale needs to be\n      set first, in case a diagnostic is issued.  */\n \n@@ -1270,7 +1224,7 @@ main (int argc, char **argv)\n   c_ptr = CONST_CAST2 (const char **, char **, c_argv);\n \n   if (argc < 2)\n-    fatal (\"no arguments\");\n+    fatal_error (\"no arguments\");\n \n #ifdef SIGQUIT\n   if (signal (SIGQUIT, SIG_IGN) != SIG_IGN)\n@@ -1671,10 +1625,10 @@ main (int argc, char **argv)\n \n       exportf = fopen (export_file, \"w\");\n       if (exportf == (FILE *) 0)\n-\tfatal_perror (\"fopen %s\", export_file);\n+\tfatal_error (\"fopen %s: %m\", export_file);\n       write_aix_file (exportf, exports.first);\n       if (fclose (exportf))\n-\tfatal_perror (\"fclose %s\", export_file);\n+\tfatal_error (\"fclose %s: %m\", export_file);\n     }\n #endif\n \n@@ -1854,12 +1808,12 @@ main (int argc, char **argv)\n   maybe_unlink(output_file);\n   outf = fopen (c_file, \"w\");\n   if (outf == (FILE *) 0)\n-    fatal_perror (\"fopen %s\", c_file);\n+    fatal_error (\"fopen %s: %m\", c_file);\n \n   write_c_file (outf, c_file);\n \n   if (fclose (outf))\n-    fatal_perror (\"fclose %s\", c_file);\n+    fatal_error (\"fclose %s: %m\", c_file);\n \n   /* Tell the linker that we have initializer and finalizer functions.  */\n #ifdef LD_INIT_SWITCH\n@@ -1889,10 +1843,10 @@ main (int argc, char **argv)\n #endif\n       exportf = fopen (export_file, \"w\");\n       if (exportf == (FILE *) 0)\n-\tfatal_perror (\"fopen %s\", export_file);\n+\tfatal_error (\"fopen %s: %m\", export_file);\n       write_aix_file (exportf, exports.first);\n       if (fclose (exportf))\n-\tfatal_perror (\"fclose %s\", export_file);\n+\tfatal_error (\"fclose %s: %m\", export_file);\n     }\n #endif\n \n@@ -1956,7 +1910,7 @@ collect_wait (const char *prog, struct pex_obj *pex)\n   int status;\n \n   if (!pex_get_status (pex, 1, &status))\n-    fatal_perror (\"can't get program status\");\n+    fatal_error (\"can't get program status: %m\");\n   pex_free (pex);\n \n   if (status)\n@@ -2025,17 +1979,17 @@ collect_execute (const char *prog, char **argv, const char *outname,\n       f = fopen (response_file, \"w\");\n \n       if (f == NULL)\n-        fatal (\"could not open response file %s\", response_file);\n+        fatal_error (\"could not open response file %s\", response_file);\n \n       status = writeargv (current_argv, f);\n \n       if (status)\n-        fatal (\"could not write to response file %s\", response_file);\n+        fatal_error (\"could not write to response file %s\", response_file);\n \n       status = fclose (f);\n \n       if (EOF == status)\n-        fatal (\"could not close response file %s\", response_file);\n+        fatal_error (\"could not close response file %s\", response_file);\n \n       response_arg = concat (\"@\", response_file, NULL);\n       response_argv[0] = argv0;\n@@ -2068,11 +2022,11 @@ collect_execute (const char *prog, char **argv, const char *outname,\n      since we might not end up needing something that we could not find.  */\n \n   if (argv[0] == 0)\n-    fatal (\"cannot find '%s'\", prog);\n+    fatal_error (\"cannot find '%s'\", prog);\n \n   pex = pex_init (0, \"collect2\", NULL);\n   if (pex == NULL)\n-    fatal_perror (\"pex_init failed\");\n+    fatal_error (\"pex_init failed: %m\");\n \n   errmsg = pex_run (pex, flags, argv[0], argv, outname,\n \t\t    errname, &err);\n@@ -2081,10 +2035,10 @@ collect_execute (const char *prog, char **argv, const char *outname,\n       if (err != 0)\n \t{\n \t  errno = err;\n-\t  fatal_perror (errmsg);\n+\t  fatal_error (\"%s: %m\", _(errmsg));\n \t}\n       else\n-\tfatal (errmsg);\n+\tfatal_error (errmsg);\n     }\n \n   free (response_arg);\n@@ -2582,7 +2536,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \n   /* If we do not have an `nm', complain.  */\n   if (nm_file_name == 0)\n-    fatal (\"cannot find 'nm'\");\n+    fatal_error (\"cannot find 'nm'\");\n \n   nm_argv[argc++] = nm_file_name;\n   if (NM_FLAGS[0] != '\\0')\n@@ -2608,7 +2562,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \n   pex = pex_init (PEX_USE_PIPES, \"collect2\", NULL);\n   if (pex == NULL)\n-    fatal_perror (\"pex_init failed\");\n+    fatal_error (\"pex_init failed: %m\");\n \n   errmsg = pex_run (pex, 0, nm_file_name, real_nm_argv, NULL, HOST_BIT_BUCKET,\n \t\t    &err);\n@@ -2617,10 +2571,10 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n       if (err != 0)\n \t{\n \t  errno = err;\n-\t  fatal_perror (errmsg);\n+\t  fatal_error (\"%s: %m\", _(errmsg));\n \t}\n       else\n-\tfatal (errmsg);\n+\tfatal_error (errmsg);\n     }\n \n   int_handler  = (void (*) (int)) signal (SIGINT,  SIG_IGN);\n@@ -2630,7 +2584,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \n   inf = pex_read_output (pex, 0);\n   if (inf == NULL)\n-    fatal_perror (\"can't open nm output\");\n+    fatal_error (\"can't open nm output: %m\");\n \n   if (debug)\n     {\n@@ -2713,7 +2667,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \t  if (! (filter & SCAN_INIT))\n \t    break;\n \t  if (which_pass != PASS_LIB)\n-\t    fatal (\"init function found in object %s\", prog_name);\n+\t    fatal_error (\"init function found in object %s\", prog_name);\n #ifndef LD_INIT_SWITCH\n \t  add_to_list (&constructors, name);\n #endif\n@@ -2723,7 +2677,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \t  if (! (filter & SCAN_FINI))\n \t    break;\n \t  if (which_pass != PASS_LIB)\n-\t    fatal (\"fini function found in object %s\", prog_name);\n+\t    fatal_error (\"fini function found in object %s\", prog_name);\n #ifndef LD_FINI_SWITCH\n \t  add_to_list (&destructors, name);\n #endif\n@@ -2804,18 +2758,18 @@ scan_libraries (const char *prog_name)\n \n   pex = pex_init (PEX_USE_PIPES, \"collect2\", NULL);\n   if (pex == NULL)\n-    fatal_perror (\"pex_init failed\");\n+    fatal_error (\"pex_init failed: %m\");\n \n   errmsg = pex_run (pex, 0, ldd_file_name, real_ldd_argv, NULL, NULL, &err);\n   if (errmsg != NULL)\n     {\n       if (err != 0)\n \t{\n \t  errno = err;\n-\t  fatal_perror (errmsg);\n+\t  fatal_error (\"%s: %m\", _(errmsg));\n \t}\n       else\n-\tfatal (errmsg);\n+\tfatal_error (errmsg);\n     }\n \n   int_handler  = (void (*) (int)) signal (SIGINT,  SIG_IGN);\n@@ -2825,7 +2779,7 @@ scan_libraries (const char *prog_name)\n \n   inf = pex_read_output (pex, 0);\n   if (inf == NULL)\n-    fatal_perror (\"can't open ldd output\");\n+    fatal_error (\"can't open ldd output: %m\");\n \n   if (debug)\n     notice (\"\\nldd output with constructors/destructors.\\n\");\n@@ -2843,7 +2797,7 @@ scan_libraries (const char *prog_name)\n \n       name = p;\n       if (strncmp (name, \"not found\", sizeof (\"not found\") - 1) == 0)\n-\tfatal (\"dynamic dependency %s not found\", buf);\n+\tfatal_error (\"dynamic dependency %s not found\", buf);\n \n       /* Find the end of the symbol name.  */\n       for (end = p;\n@@ -2855,7 +2809,7 @@ scan_libraries (const char *prog_name)\n       if (access (name, R_OK) == 0)\n \tadd_to_list (&libraries, name);\n       else\n-\tfatal (\"unable to open dynamic dependency '%s'\", buf);\n+\tfatal_error (\"unable to open dynamic dependency '%s'\", buf);\n \n       if (debug)\n \tfprintf (stderr, \"\\t%s\\n\", buf);\n@@ -3016,7 +2970,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n       if ((ldptr = ldopen (CONST_CAST (char *, prog_name), ldptr)) != NULL)\n \t{\n \t  if (! MY_ISCOFF (HEADER (ldptr).f_magic))\n-\t    fatal (\"%s: not a COFF file\", prog_name);\n+\t    fatal_error (\"%s: not a COFF file\", prog_name);\n \n \t  if (GCC_CHECK_HDR (ldptr))\n \t    {\n@@ -3146,7 +3100,7 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \t}\n       else\n \t{\n-\t  fatal (\"%s: cannot open as COFF file\", prog_name);\n+\t  fatal_error (\"%s: cannot open as COFF file\", prog_name);\n \t}\n #ifdef COLLECT_EXPORT_LIST\n       /* On AIX loop continues while there are more members in archive.  */\n@@ -3204,7 +3158,7 @@ resolve_lib_name (const char *name)\n   if (debug)\n     fprintf (stderr, \"not found\\n\");\n   else\n-    fatal (\"library lib%s not found\", name);\n+    fatal_error (\"library lib%s not found\", name);\n   return (NULL);\n }\n #endif /* COLLECT_EXPORT_LIST */"}, {"sha": "e18892d3a55e3101b2398189b8f8d87aea583f63", "filename": "gcc/collect2.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Fcollect2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Fcollect2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.h?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -1,5 +1,5 @@\n /* Header file for collect/tlink routines.\n-   Copyright (C) 1998, 2003, 2004, 2005, 2007, 2010\n+   Copyright (C) 1998, 2003, 2004, 2005, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -41,11 +41,7 @@ extern struct obstack temporary_obstack;\n extern char *temporary_firstobj;\n extern bool vflag, debug;\n \n-extern void error (const char *, ...) ATTRIBUTE_PRINTF_1;\n extern void notice_translated (const char *, ...) ATTRIBUTE_PRINTF_1;\n extern void notice (const char *, ...) ATTRIBUTE_PRINTF_1;\n-extern void fatal (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n-extern void fatal_perror (const char *, ...)\n-  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n \n #endif /* ! GCC_COLLECT2_H */"}, {"sha": "7a9dacdf9a91e77c1859c65ffbafc15bcfa09f6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -1,3 +1,8 @@\n+2011-05-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/prune.exe (prune_gcc_output): Expect \"error:\" in collect2\n+\toutput.\n+\n 2011-05-19  Richard Guenther  <rguenther@suse.de>\n \n \tPR testsuite/49063"}, {"sha": "29d69b97341520b500aeb022ae7619c1a59e8712", "filename": "gcc/testsuite/lib/prune.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Ftestsuite%2Flib%2Fprune.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Ftestsuite%2Flib%2Fprune.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprune.exp?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 1997, 1999, 2000, 2002, 2004, 2007, 2008, 2010\n+#   Copyright (C) 1997, 1999, 2000, 2002, 2004, 2007, 2008, 2010, 2011\n #   Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -25,7 +25,7 @@ proc prune_gcc_output { text } {\n     regsub -all \"(^|\\n)\\[^\\n\\]*:   (recursively )?instantiated from \\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)\\[^\\n\\]*:   . skipping \\[0-9\\]* instantiation contexts \\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)    inlined from \\[^\\n\\]*\" $text \"\" text\n-    regsub -all \"(^|\\n)collect2: ld returned \\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)collect2: error: ld returned \\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)collect: re(compiling|linking)\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)Please submit.*instructions\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)\\[0-9\\]\\[0-9\\]* errors\\.\" $text \"\" text"}, {"sha": "f0540478e72ea23e4fd2de0d467f403200646c90", "filename": "gcc/tlink.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e350e99cb9f93ea99216c9c2a40517111636116/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=9e350e99cb9f93ea99216c9c2a40517111636116", "patch": "@@ -2,7 +2,7 @@\n    them.\n \n    Copyright (C) 1995, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008,\n-   2009, 2010 Free Software Foundation, Inc.\n+   2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Jason Merrill (jason@cygnus.com).\n \n This file is part of GCC.\n@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"demangle.h\"\n #include \"collect2.h\"\n #include \"filenames.h\"\n+#include \"diagnostic-core.h\"\n \n /* TARGET_64BIT may be defined to use driver specific functionality. */\n #undef TARGET_64BIT\n@@ -477,9 +478,9 @@ recompile_files (void)\n \t the new file name already exists.  Therefore, we explicitly\n \t remove the old file first.  */\n       if (remove (f->key) == -1)\n-\tfatal_perror (\"removing .rpo file\");\n+\tfatal_error (\"removing .rpo file: %m\");\n       if (rename (outname, f->key) == -1)\n-\tfatal_perror (\"renaming .rpo file\");\n+\tfatal_error (\"renaming .rpo file: %m\");\n \n       if (!f->args)\n \t{"}]}