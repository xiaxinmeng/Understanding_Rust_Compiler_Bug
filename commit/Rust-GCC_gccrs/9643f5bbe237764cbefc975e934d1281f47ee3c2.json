{"sha": "9643f5bbe237764cbefc975e934d1281f47ee3c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY0M2Y1YmJlMjM3NzY0Y2JlZmM5NzVlOTM0ZDEyODFmNDdlZTNjMg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-06-04T13:40:53Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-06-05T16:04:12Z"}, "message": "Add 'libgomp.oacc-c-c++-common/struct-copyout-{1,2}.c'\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/struct-copyout-1.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/struct-copyout-2.c: New test.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "9e67d1e7f1c67c1c5197f7b6d7bef0f24081fb8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e67d1e7f1c67c1c5197f7b6d7bef0f24081fb8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9643f5bbe237764cbefc975e934d1281f47ee3c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9643f5bbe237764cbefc975e934d1281f47ee3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9643f5bbe237764cbefc975e934d1281f47ee3c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9643f5bbe237764cbefc975e934d1281f47ee3c2/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5905cbdbcf6d760303ca87f27e04824f26976de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5905cbdbcf6d760303ca87f27e04824f26976de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5905cbdbcf6d760303ca87f27e04824f26976de4"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "b86f1c921a989e709eead1df9d5a51012189858c", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/struct-copyout-1.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9643f5bbe237764cbefc975e934d1281f47ee3c2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstruct-copyout-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9643f5bbe237764cbefc975e934d1281f47ee3c2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstruct-copyout-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstruct-copyout-1.c?ref=9643f5bbe237764cbefc975e934d1281f47ee3c2", "patch": "@@ -0,0 +1,38 @@\n+#include <assert.h>\n+\n+struct str1 {\n+  int a;\n+  int b;\n+};\n+\n+struct str2 {\n+  int c;\n+  int d;\n+  struct str1 s;\n+};\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  struct str2 t;\n+\n+  t.c = 1;\n+  t.d = 2;\n+  t.s.a = 3;\n+  t.s.b = 4;\n+\n+  #pragma acc enter data copyin(t.s)\n+\n+  #pragma acc serial present(t.s) /* { dg-warning \"using vector_length \\\\(32\\\\), ignoring 1\" \"\" { target openacc_nvidia_accel_selected } } */\n+  {\n+    t.s.a = 5;\n+    t.s.b = 6;\n+  }\n+\n+  #pragma acc exit data copyout(t.s)\n+\n+  assert (t.s.a == 5);\n+  assert (t.s.b == 6);\n+\n+  return 0;\n+}"}, {"sha": "4dd8a3a7e17533607d5acea0a850b35d11fe9823", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/struct-copyout-2.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9643f5bbe237764cbefc975e934d1281f47ee3c2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstruct-copyout-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9643f5bbe237764cbefc975e934d1281f47ee3c2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstruct-copyout-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstruct-copyout-2.c?ref=9643f5bbe237764cbefc975e934d1281f47ee3c2", "patch": "@@ -0,0 +1,44 @@\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+struct str1 {\n+  int a;\n+  int b;\n+  int *c;\n+};\n+\n+#define N 1024\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  struct str1 s;\n+\n+  s.a = 1;\n+  s.b = 2;\n+  s.c = (int *) malloc (sizeof (int) * N);\n+\n+  for (int i = 0; i < N; i++)\n+    s.c[i] = i + 10;\n+\n+  #pragma acc enter data copyin(s.a, s.b, s.c[0:N])\n+\n+  #pragma acc serial present(s.a, s.b, s.c[0:N]) /* { dg-warning \"using vector_length \\\\(32\\\\), ignoring 1\" \"\" { target openacc_nvidia_accel_selected } } */\n+  {\n+    s.a = 3;\n+    s.b = 4;\n+    for (int i = 0; i < N; i++)\n+      s.c[i] = i + 20;\n+  }\n+\n+  #pragma acc exit data copyout(s.a, s.b, s.c[0:N])\n+\n+  assert (s.a == 3);\n+  assert (s.b == 4);\n+  for (int i = 0; i < N; i++)\n+    assert (s.c[i] == i + 20);\n+\n+  free (s.c);\n+\n+  return 0;\n+}"}]}