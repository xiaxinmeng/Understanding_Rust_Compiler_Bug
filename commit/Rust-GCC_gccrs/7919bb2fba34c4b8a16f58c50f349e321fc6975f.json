{"sha": "7919bb2fba34c4b8a16f58c50f349e321fc6975f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkxOWJiMmZiYTM0YzRiOGExNmY1OGM1MGYzNDllMzIxZmM2OTc1Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-10T13:53:10Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-10T13:53:10Z"}, "message": "[multiple changes]\n\n2007-12-10  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/25_algorithms/nth_element/2.cc: Avoid -Wall warnings.\n\t* testsuite/27_io/basic_streambuf/sgetc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_streambuf/sgetc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sgetn/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/snextc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/peek/wchar_t/12296.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n\t28277-2.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n\t28277-3.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n\t28277-4.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/char/\n\t28277-3.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/inserters_character/char/\n\t28277-4.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.\n\t* testsuite/19_diagnostics/error_code/operators/bool_neg.cc: Likewise.\n\t* testsuite/18_support/headers/cstddef/macros.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/\n\twchar_t/28277.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/\n\tchar/28277.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/25913.cc: Likewise.\n\t* testsuite/ext/pb_ds/example/priority_queue_xref.cc: Likewise.\n\t* testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc: Likewise.\n\t* testsuite/ext/vstring/inserters_extractors/char/28277.cc: Likewise.\n\t* testsuite/ext/enc_filebuf/char/13598.cc: Likewise.\n\t* testsuite/22_locale/collate/compare/char/2.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/5.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/6.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/7.cc: Likewise.\n\t* testsuite/22_locale/time_put/put/char/8.cc: Likewise.\n\t* testsuite/22_locale/codecvt/unshift/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/length/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/length/char/2.cc: Likewise.\n\t* testsuite/22_locale/codecvt/in/wchar_t/9.cc: Likewise.\n\t* testsuite/22_locale/codecvt/in/char/1.cc: Likewise.\n\t* testsuite/22_locale/codecvt/out/char/1.cc: Likewise.\n\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/num_get/get/char/1.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/random/uniform_int/\n\t33128.cc: Likewise.\n\t* testsuite/tr1/2_general_utilities/shared_ptr/thread/\n\tmutex_weaktoshared.cc: Likewise.\n\t* testsuite/tr1/2_general_utilities/shared_ptr/thread/\n\tdefault_weaktoshared.cc: Likewise.\n\t* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/\n\trange.cc: Likewise.\n\t* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/\n\trange.cc: Likewise.\n\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/\n\trange.cc: Likewise.\n\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/\n\trange.cc: Likewise.\n\t* testsuite/23_containers/multimap/operations/1.cc: Likewise.\n\t* testsuite/23_containers/set/operations/1.cc: Likewise.\n\t* testsuite/23_containers/vector/bool/capacity/29134.cc: Likewise.\n\t* testsuite/23_containers/deque/modifiers/erase/1.cc: Likewise.\n\t* testsuite/23_containers/deque/modifiers/erase/2.cc: Likewise.\n\t* testsuite/23_containers/multiset/operations/1.cc: Likewise.\n\t* testsuite/23_containers/map/operations/1.cc: Likewise.\n\t* testsuite/util/testsuite_hooks.cc: Likewise.\n\t* testsuite/util/testsuite_rvalref.h: Likewise.\n\n2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n\n\t* include/ext/throw_allocator.h (print_to_string): Change sprintf\n\tformat to %lu and cast ref.second.{first,second} to long.\n\t* include/debug/safe_iterator.tcc (_M_can_advance): Add parens to\n\tavoid warnings.\n\nFrom-SVN: r130743", "tree": {"sha": "efaf75a0cf56d1509cf98b8e8e38285285b0cf4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efaf75a0cf56d1509cf98b8e8e38285285b0cf4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7919bb2fba34c4b8a16f58c50f349e321fc6975f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7919bb2fba34c4b8a16f58c50f349e321fc6975f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7919bb2fba34c4b8a16f58c50f349e321fc6975f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7919bb2fba34c4b8a16f58c50f349e321fc6975f/comments", "author": null, "committer": null, "parents": [{"sha": "502630f495cd78b97fd3788e049640210bce8ddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502630f495cd78b97fd3788e049640210bce8ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502630f495cd78b97fd3788e049640210bce8ddb"}], "stats": {"total": 364, "additions": 231, "deletions": 133}, "files": [{"sha": "ae85dcef2a51cc94afe58f34064b4a889e016f21", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,3 +1,82 @@\n+2007-12-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/25_algorithms/nth_element/2.cc: Avoid -Wall warnings.\n+\t* testsuite/27_io/basic_streambuf/sgetc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/sgetc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sgetn/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/snextc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/peek/wchar_t/12296.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n+\t28277-2.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n+\t28277-3.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/\n+\t28277-4.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/char/\n+\t28277-3.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/inserters_character/char/\n+\t28277-4.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_code/operators/bool_neg.cc: Likewise.\n+\t* testsuite/18_support/headers/cstddef/macros.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/inserters_extractors/\n+\twchar_t/28277.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/inserters_extractors/\n+\tchar/28277.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/25913.cc: Likewise.\n+\t* testsuite/ext/pb_ds/example/priority_queue_xref.cc: Likewise.\n+\t* testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc: Likewise.\n+\t* testsuite/ext/vstring/inserters_extractors/char/28277.cc: Likewise.\n+\t* testsuite/ext/enc_filebuf/char/13598.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/char/2.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/5.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/6.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/7.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/8.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/unshift/char/1.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/char/1.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/char/2.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/in/wchar_t/9.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/in/char/1.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/char/1.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/char/1.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/random/uniform_int/\n+\t33128.cc: Likewise.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/thread/\n+\tmutex_weaktoshared.cc: Likewise.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/thread/\n+\tdefault_weaktoshared.cc: Likewise.\n+\t* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/\n+\trange.cc: Likewise.\n+\t* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/\n+\trange.cc: Likewise.\n+\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/\n+\trange.cc: Likewise.\n+\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/\n+\trange.cc: Likewise.\n+\t* testsuite/23_containers/multimap/operations/1.cc: Likewise.\n+\t* testsuite/23_containers/set/operations/1.cc: Likewise.\n+\t* testsuite/23_containers/vector/bool/capacity/29134.cc: Likewise.\n+\t* testsuite/23_containers/deque/modifiers/erase/1.cc: Likewise.\n+\t* testsuite/23_containers/deque/modifiers/erase/2.cc: Likewise.\n+\t* testsuite/23_containers/multiset/operations/1.cc: Likewise.\n+\t* testsuite/23_containers/map/operations/1.cc: Likewise.\n+\t* testsuite/util/testsuite_hooks.cc: Likewise.\n+\t* testsuite/util/testsuite_rvalref.h: Likewise.\n+\n+2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* include/ext/throw_allocator.h (print_to_string): Change sprintf\n+\tformat to %lu and cast ref.second.{first,second} to long.\n+\t* include/debug/safe_iterator.tcc (_M_can_advance): Add parens to\n+\tavoid warnings.\n+\n 2007-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/ext/howto.html: Update."}, {"sha": "a4cce068e96f0a1227267484a0b6d131a8807afa", "filename": "libstdc++-v3/include/debug/safe_iterator.tcc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.tcc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // Debugging iterator implementation (out of line) -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -54,8 +54,8 @@ namespace __gnu_debug\n \t    static_cast<const _Sequence*>(_M_sequence)->begin();\n \t  std::pair<difference_type, _Distance_precision> __dist =\n \t    this->_M_get_distance(__begin, *this);\n-\t  bool __ok =  (__dist.second == __dp_exact && __dist.first >= -__n\n-\t\t\t|| __dist.second != __dp_exact && __dist.first > 0);\n+\t  bool __ok =  ((__dist.second == __dp_exact && __dist.first >= -__n)\n+\t\t\t|| (__dist.second != __dp_exact && __dist.first > 0));\n \t  return __ok;\n \t}\n       else\n@@ -64,8 +64,8 @@ namespace __gnu_debug\n \t    static_cast<const _Sequence*>(_M_sequence)->end();\n \t  std::pair<difference_type, _Distance_precision> __dist =\n \t    this->_M_get_distance(*this, __end);\n-\t  bool __ok = (__dist.second == __dp_exact && __dist.first >= __n\n-\t\t       || __dist.second != __dp_exact && __dist.first > 0);\n+\t  bool __ok = ((__dist.second == __dp_exact && __dist.first >= __n)\n+\t\t       || (__dist.second != __dp_exact && __dist.first > 0));\n \t  return __ok;\n \t}\n     }"}, {"sha": "04204cb55fc18c67101f3593a073484f5be46399", "filename": "libstdc++-v3/include/ext/throw_allocator.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -430,15 +430,17 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n     char buf[40];\n     const char tab('\\t');\n     s += \"address: \";\n-    sprintf(buf, \"%p\", ref.first);\n+    __builtin_sprintf(buf, \"%p\", ref.first);\n     s += buf;\n     s += tab;\n     s += \"label: \";\n-    sprintf(buf, \"%u\", ref.second.first);\n+    unsigned long l = static_cast<unsigned long>(ref.second.first);\n+    __builtin_sprintf(buf, \"%lu\", l);\n     s += buf;\n     s += tab;\n     s += \"size: \";\n-    sprintf(buf, \"%u\", ref.second.second);\n+    l = static_cast<unsigned long>(ref.second.second);\n+    __builtin_sprintf(buf, \"%lu\", l);\n     s += buf;\n     s += '\\n';\n   }"}, {"sha": "6cad8c00ffd28e3a603f123cfebb8270edda003c", "filename": "libstdc++-v3/testsuite/18_support/headers/cstddef/macros.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstddef%2Fmacros.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstddef%2Fmacros.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstddef%2Fmacros.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile }\n // 2001-02-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,7 +43,7 @@ namespace gnu\n   void test02()\n   {\n     // Must not be (void*)0\n-    const int j = NULL;\n+    const int j __attribute__((unused)) = NULL;\n \n #ifndef NULL\n     #error \"NULL_must_be_a_macro\""}, {"sha": "30b83d1da69307eab66b4a4d51d5fdbc576443dd", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/bool.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -26,7 +26,6 @@\n int main()\n {\n   bool test __attribute__((unused)) = true;\n-  bool b;\n \n   // 1\n   std::error_code e1;"}, {"sha": "6af9d13a61d8d9f1928100bb4ee50eb385b7e4ba", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_code/operators/bool_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_code%2Foperators%2Fbool_neg.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -28,7 +28,7 @@ int main()\n   std::error_code e;\n   int i = e; \n \n-  return 0;\n+  return i;\n }\n \n // { dg-error \"invalid conversion\" \"\" { target *-*-* } 29 }"}, {"sha": "56019a7494b9115cbb0b0b762445ae1002a94c63", "filename": "libstdc++-v3/testsuite/20_util/raw_storage_iterator/requirements/typedefs.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fraw_storage_iterator%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fraw_storage_iterator%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fraw_storage_iterator%2Frequirements%2Ftypedefs.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile }\n // 2001-06-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2003, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,7 +29,6 @@ void test01()\n   using namespace std;\n \n   // Check for required typedefs\n-  long l;\n   typedef raw_storage_iterator<long*, long> test_iterator;\n   typedef test_iterator::value_type value_type;\n   typedef test_iterator::difference_type difference_type;"}, {"sha": "5f60c2ff62729bd3860e623263285a5608254094", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/28277.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F28277.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ void test01()\n   oss_01 << str_01;\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == string::size_type(width) );\n }\n \n int main()"}, {"sha": "653f4de36db5788da13a7b6498587db24f4ec6c8", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/28277.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F28277.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ void test01()\n   oss_01 << str_01;\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == wstring::size_type(width) );\n }\n \n int main()"}, {"sha": "43bf0283d64db500e77feb93da05da505f8eea37", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/in/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -36,7 +36,7 @@ void test01()\n   bool test __attribute__((unused)) = true;\n   const char* \t\tc_lit = \"black pearl jasmine tea\";\n   const char* \t        from_next;\n-  int \t\t\tsize = 25;\n+  int \t\t\tsize = 23;\n   char* \t\tc_arr = new char[size];\n   char*                 c_ref = new char[size];\n   char*\t\t\tto_next;"}, {"sha": "01935eabd9763c81c6dc7bffd16c04be6ecbb230", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/in/wchar_t/9.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fwchar_t%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fwchar_t%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fin%2Fwchar_t%2F9.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -128,9 +128,6 @@ void test09()\n       r1 = cvt->in(state01, efrom, e_lit + i, efrom_next, \n \t\t   ito, i_arr + esize, ito_next);\n       \n-      printf(\"%d %d %d %x %x\\n\", efrom - e_lit, i, efrom_next - e_lit,\n-\t     efrom[-1], ito[-1]);\n-\n       // It it not clear if partial should ever be returned here\n       // (see DR 382).\n       VERIFY( r1 == codecvt_base::ok || r1 == codecvt_base::partial );"}, {"sha": "76c293f11a51e0b0273b4f152bdf69a0a436884e", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/length/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Flength%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Flength%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Flength%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -33,7 +33,7 @@ void test01()\n \n   bool test __attribute__((unused)) = true;\n   const char* \t\tc_lit = \"black pearl jasmine tea\";\n-  int \t\t\tsize = 25;\n+  int \t\t\tsize = 23;\n \n   locale \t\tloc = locale::classic();\n   c_codecvt::state_type state;"}, {"sha": "0642e31da3ece3c0396c97e99a31023bfbbc8802", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/length/char/2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Flength%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Flength%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Flength%2Fchar%2F2.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -51,7 +51,7 @@ void test02()\n \n   bool test __attribute__((unused)) = true;\n   const char* \t\tc_lit = \"black pearl jasmine tea\";\n-  int \t\t\tsize = 25;\n+  int \t\t\tsize = 23;\n \n   locale \t\tloc (locale::classic(), new length_codecvt);\n   c_codecvt::state_type state;"}, {"sha": "7581e2a123b22741222146b712e788564e0b54f2", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/out/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fout%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fout%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fout%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -36,7 +36,7 @@ void test01()\n   bool test __attribute__((unused)) = true;\n   const char* \t\tc_lit = \"black pearl jasmine tea\";\n   const char* \t        from_next;\n-  int \t\t\tsize = 25;\n+  int \t\t\tsize = 23;\n   char* \t\tc_arr = new char[size];\n   char*                 c_ref = new char[size];\n   char*\t\t\tto_next;"}, {"sha": "c6ecb25c3839e05f527843803b7b5d2c2d87f9d4", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/unshift/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funshift%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funshift%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funshift%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -36,7 +36,7 @@ void test01()\n   bool test __attribute__((unused)) = true;\n   const char* \t\tc_lit = \"black pearl jasmine tea\";\n   const char* \t        from_next;\n-  int \t\t\tsize = 25;\n+  int \t\t\tsize = 23;\n   char* \t\tc_arr = new char[size];\n   char*                 c_ref = new char[size];\n   char*\t\t\tto_next;"}, {"sha": "53354292ed66c22215b2485d2be5b87d3ffa44b2", "filename": "libstdc++-v3/testsuite/22_locale/collate/compare/char/2.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Fcompare%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Fcompare%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Fcompare%2Fchar%2F2.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-08-15 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2005 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,19 +49,17 @@ void test02()\n \n   // int compare(const charT*, const charT*, const charT*, const charT*) const\n \n-  const char* strlit1 = \"monkey picked tikuanyin oolong\";\n   const char* strlit3 = \"\ufffduglein Augment\"; // \"C\" == \"Augment \ufffduglein\"\n   const char* strlit4 = \"Base ba\ufffd Ba\ufffd Bast\"; // \"C\" == \"Base ba\ufffd Ba\ufffd Bast\"\n \n   int i1;\n   int i2;\n-  int size1 = char_traits<char>::length(strlit1) - 1;\n   int size3 = char_traits<char>::length(strlit3) - 1;\n   int size4 = char_traits<char>::length(strlit4) - 1;\n \n   i1 = coll_de.compare(strlit3, strlit3 + size3, strlit3, strlit3 + 7);\n   VERIFY ( i1 == 1 );\n-  i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + size1);\n+  i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + size3);\n   VERIFY ( i1 == -1 );\n   i1 = coll_de.compare(strlit3, strlit3 + 7, strlit3, strlit3 + 7);\n   VERIFY ( i1 == 0 );"}, {"sha": "1aff586a125d812f91bc79fa55ce74cc542e114b", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/char/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -45,7 +45,6 @@ void test01()\n   bool b1 = true;\n   bool b0 = false;\n   unsigned long ul1 = 1294967294;\n-  unsigned long ul2 = 0;\n   unsigned long ul;\n   double d1 =  1.02345e+308;\n   double d2 = 3.15e-308;"}, {"sha": "a6268e2719f0f653162317f40c799d9676c1f535", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -45,7 +45,6 @@ void test01()\n   bool b1 = true;\n   bool b0 = false;\n   unsigned long ul1 = 1294967294;\n-  unsigned long ul2 = 0;\n   unsigned long ul;\n   double d1 =  1.02345e+308;\n   double d2 = 3.15e-308;"}, {"sha": "cf38a79902ec7c21d20232cd97a8e377ca3bc997", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/5.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F5.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,8 +53,9 @@ void test05()\n \t\t\t\t      date, date + traits::length(date));\n   string result5 = oss.str();\n   VERIFY( result5 == \"Sunday, the second of April\");\n-  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, '*', &time1,\n+\t\t\t\t      date_ex,\n+\t\t\t\t      date_ex + traits::length(date_ex));\n   string result6 = oss.str();\n   VERIFY( result6 != result5 );\n }"}, {"sha": "8ef33f536c65db6c1900b5578f7ec6b5c531a0d5", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/6.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F6.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,7 +56,8 @@ void test06()\n   string result7 = oss.str();\n   VERIFY( result7 == \"Sonntag, the second of April\");\n   iterator_type os_it08 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+\t\t\t\t      date_ex,\n+\t\t\t\t      date_ex + traits::length(date_ex));\n   string result8 = oss.str();\n   VERIFY( result8 != result7 );\n }"}, {"sha": "f17c6b94ce7fd97951418cd053f31a1da039a80c", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/7.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F7.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,7 +56,8 @@ void test07()\n   string result9 = oss.str();\n   VERIFY( result9 == \"Sunday, the second of April\");\n   iterator_type os_it10 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+\t\t\t\t      date_ex,\n+\t\t\t\t      date_ex + traits::length(date_ex));\n   string result10 = oss.str();\n   VERIFY( result10 != result9 );\n }"}, {"sha": "2da9be0b146d51973cb3faca95a76166ae671405", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/char/8.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fchar%2F8.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,7 +55,8 @@ void test08()\n   string result11 = oss.str();\n   VERIFY( result11 == \"dimanche, the second of avril\");\n   iterator_type os_it12 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+\t\t\t\t      date_ex,\n+\t\t\t\t      date_ex + traits::length(date_ex));\n   string result12 = oss.str();\n   VERIFY( result12 != result11 );\n }"}, {"sha": "d635968c162e9a16e74db5310e3f2cc503461f19", "filename": "libstdc++-v3/testsuite/22_locale/time_put/put/wchar_t/5.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put%2Fput%2Fwchar_t%2F5.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 \n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,8 +55,9 @@ void test05()\n \t\t\t\t      date, date + traits::length(date));\n   wstring result5 = oss.str();\n   VERIFY( result5 == L\"Sunday, the second of April\");\n-  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, L'*', &time1, \n-\t\t\t\t      date_ex, date_ex + traits::length(date));\n+  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, L'*', &time1,\n+\t\t\t\t      date_ex,\n+\t\t\t\t      date_ex + traits::length(date_ex));\n   wstring result6 = oss.str();\n   VERIFY( result6 != result5 );\n }"}, {"sha": "5fe41db88def8ca3c6429bd9756165a52aa9ee8d", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/1.cc", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2005-11-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,12 +29,12 @@ const int A2[] = {0, 2, 3, 4, 10, 11, 12, 13, 14, 15};\n const int A3[] = {0, 2, 3, 4, 10, 11};\n const int A4[] = {4, 10, 11};\n const int A5[] = {4, 10};\n-const int  N = sizeof(A)  / sizeof(int);\n-const int N1 = sizeof(A1) / sizeof(int);\n-const int N2 = sizeof(A2) / sizeof(int);\n-const int N3 = sizeof(A3) / sizeof(int);\n-const int N4 = sizeof(A4) / sizeof(int);\n-const int N5 = sizeof(A5) / sizeof(int);\n+const unsigned  N = sizeof(A)  / sizeof(int);\n+const unsigned N1 = sizeof(A1) / sizeof(int);\n+const unsigned N2 = sizeof(A2) / sizeof(int);\n+const unsigned N3 = sizeof(A3) / sizeof(int);\n+const unsigned N4 = sizeof(A4) / sizeof(int);\n+const unsigned N5 = sizeof(A5) / sizeof(int);\n \n void\n test01()\n@@ -85,17 +85,17 @@ test02()\n   typedef deque_type::iterator        iterator_type;\n \n   deque_type v, v1, v2, v3, v4, v5;\n-  for (int i = 0; i < N; ++i)\n+  for (unsigned i = 0; i < N; ++i)\n     v.push_back(std::deque<int>(1, A[i]));\n-  for (int i = 0; i < N1; ++i)\n+  for (unsigned i = 0; i < N1; ++i)\n     v1.push_back(std::deque<int>(1, A1[i]));\n-  for (int i = 0; i < N2; ++i)\n+  for (unsigned i = 0; i < N2; ++i)\n     v2.push_back(std::deque<int>(1, A2[i]));\n-  for (int i = 0; i < N3; ++i)\n+  for (unsigned i = 0; i < N3; ++i)\n     v3.push_back(std::deque<int>(1, A3[i]));\n-  for (int i = 0; i < N4; ++i)\n+  for (unsigned i = 0; i < N4; ++i)\n     v4.push_back(std::deque<int>(1, A4[i]));\n-  for (int i = 0; i < N5; ++i)\n+  for (unsigned i = 0; i < N5; ++i)\n     v5.push_back(std::deque<int>(1, A5[i]));\n   \n   iterator_type it1 = v.erase(v.begin() + 1);"}, {"sha": "93ced1b906451fe03d6d8a7b31199af287c1e16b", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/2.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F2.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2005-11-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,14 +32,14 @@ const int A3[] = {-5, 0, 1, 2, 8, 9, 10, 11};\n const int A4[] = {2, 8, 9, 10, 11};\n const int A5[] = {2, 8, 10, 11};\n const int A6[] = {2, 8, 10};\n-const int  N = sizeof(A)  / sizeof(int);\n-const int N0 = sizeof(A0) / sizeof(int);\n-const int N1 = sizeof(A1) / sizeof(int);\n-const int N2 = sizeof(A2) / sizeof(int);\n-const int N3 = sizeof(A3) / sizeof(int);\n-const int N4 = sizeof(A4) / sizeof(int);\n-const int N5 = sizeof(A5) / sizeof(int);\n-const int N6 = sizeof(A6) / sizeof(int);\n+const unsigned  N = sizeof(A)  / sizeof(int);\n+const unsigned N0 = sizeof(A0) / sizeof(int);\n+const unsigned N1 = sizeof(A1) / sizeof(int);\n+const unsigned N2 = sizeof(A2) / sizeof(int);\n+const unsigned N3 = sizeof(A3) / sizeof(int);\n+const unsigned N4 = sizeof(A4) / sizeof(int);\n+const unsigned N5 = sizeof(A5) / sizeof(int);\n+const unsigned N6 = sizeof(A6) / sizeof(int);\n \n template<int Size>\n   class My_class"}, {"sha": "35355380461126edd3872ff4feb02c289a045a8d", "filename": "libstdc++-v3/testsuite/23_containers/map/operations/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-11-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -128,6 +128,7 @@ void test01()\n   VERIFY( pp0.second == irt1.first );\n }\n \n+int\n main()\n {\n   test01();"}, {"sha": "b781ca2f9479ab11ee9e08b2d459237b32ac1163", "filename": "libstdc++-v3/testsuite/23_containers/multimap/operations/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-11-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -127,6 +127,7 @@ void test01()\n   VERIFY( pp0.second == iter1 );\n }\n \n+int\n main()\n {\n   test01();"}, {"sha": "a37a0a1a637e5c7fa2e40ec41408f0788b86fcc5", "filename": "libstdc++-v3/testsuite/23_containers/multiset/operations/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-11-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -126,6 +126,7 @@ void test01()\n   VERIFY( pp0.second == iter1 );\n }\n \n+int\n main()\n {\n   test01();"}, {"sha": "b0e6dc507e0ade61ede6381626321bbdae4b7998", "filename": "libstdc++-v3/testsuite/23_containers/set/operations/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-11-25  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -127,6 +127,7 @@ void test01()\n   VERIFY( pp0.second == irt1.first );\n }\n \n+int\n main()\n {\n   test01();"}, {"sha": "6d71b23ff30e65de70330827ef36573aa7c51863", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/capacity/29134.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fcapacity%2F29134.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -39,8 +39,10 @@ void test01()\n   // Actually, vector<bool> is special, see libstdc++/31370.\n   vector<bool> vb;\n   typedef vector<bool>::difference_type difference_type;\n+  typedef vector<bool>::size_type size_type;\n   VERIFY( vb.max_size()\n-\t  == (numeric_limits<difference_type>::max() - int(_S_word_bit) + 1) );\n+\t  == size_type(numeric_limits<difference_type>::max()\n+\t\t       - int(_S_word_bit) + 1) );\n }\n \n int main()"}, {"sha": "84f959ae9a259e27a702d13273f65d012f59aeab", "filename": "libstdc++-v3/testsuite/25_algorithms/nth_element/2.cc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2F2.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,27 +23,27 @@\n #include <testsuite_hooks.h>\n \n void\n-test_set(std::vector<int>& v, int size)\n+test_set(std::vector<unsigned>& v, unsigned size)\n {\n   v.clear();\n \n-  for (int i = 0; i < size; i += 4)\n+  for (unsigned i = 0; i < size; i += 4)\n     {\n       v.push_back(i / 2);\n       v.push_back((size - 2) - (i / 2));\n     }\n-  for (int i = 1; i < size; i += 2)\n+  for (unsigned i = 1; i < size; i += 2)\n     v.push_back(i);\n }\n \n void\n-do_test01(int size)\n+do_test01(unsigned size)\n {\n   bool test __attribute__((unused)) = true;\n \n-  std::vector<int> v, s;\n+  std::vector<unsigned> v, s;\n \n-  for (int j = 0; j < size; ++j)\n+  for (unsigned j = 0; j < size; ++j)\n     {\n       test_set(v, size);\n       s = v;\n@@ -53,18 +53,18 @@ do_test01(int size)\n \n       VERIFY( v[j] == s[j] );\n       \n-      for (int i = 0; i < j; ++i)\n+      for (unsigned i = 0; i < j; ++i)\n \tVERIFY( !(v[j] < v[i]) );\n \n-      for (int i = j; i < v.size(); ++i)\n+      for (unsigned i = j; i < v.size(); ++i)\n \tVERIFY( !(v[i] < v[j]) );\n     }\n }\n \n void\n test01()\n {\n-  for (int size = 4; size <= 1 << 10; size <<= 1)\n+  for (unsigned size = 4; size <= 1 << 10; size <<= 1)\n     do_test01(size);\n }\n "}, {"sha": "c034f3a151f932d9662e54f57f0f62ff8a9625f2", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/25913.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F25913.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F25913.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F25913.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -43,5 +43,5 @@ bool isnormal(const employee&)\n void test01()\n {\n   manager m;\n-  bool b = isnormal(m);\n+  isnormal(m);\n }"}, {"sha": "4f3c1b157588f43aef019c5d3e1e651883118fba", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/wchar_t/12296.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F12296.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F12296.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fwchar_t%2F12296.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,7 +30,7 @@ void test01()\n   wistringstream stream;\n   VERIFY( stream.rdstate() == ios_base::goodbit );\n   wistringstream::int_type c = stream.peek();\n-  VERIFY( c == istringstream::traits_type::eof() );\n+  VERIFY( c == wistringstream::traits_type::eof() );\n   VERIFY( stream.rdstate() == ios_base::eofbit );\n }\n "}, {"sha": "9c68320bf1717ef797e59ae8975f036393f7eae1", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/char/28277-3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F28277-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F28277-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F28277-3.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2006 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@ void test01()\n   oss_01 << 'a';\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == string::size_type(width) );\n }\n \n int main()"}, {"sha": "3ef1f8c43624f6e2c50901f621c5a180a045d0b4", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/char/28277-4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F28277-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F28277-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F28277-4.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ void test01()\n   oss_01 << str_01.c_str();\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == string::size_type(width) );\n }\n \n int main()"}, {"sha": "6213ad1f4be8ded29b84bcf64fbfde6730de1f96", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/28277-2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-2.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ void test01()\n   oss_01 << str_01.c_str();\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == wstring::size_type(width) );\n }\n \n int main()"}, {"sha": "dc5ffe5dff2bd9e8a0e0bc6ed32a981e02db43c6", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/28277-3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-3.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -38,7 +38,7 @@ void test01()\n   oss_01 << L'a';\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == wstring::size_type(width) );\n }\n \n int main()"}, {"sha": "e80242cf0a7b2b2e2a5be6e9e1f80dd72042c0e8", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/28277-4.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F28277-4.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-12  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation\n+// Copyright (C) 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ void test01()\n   oss_01 << str_01.c_str();\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == wstring::size_type(width) );\n }\n \n int main()"}, {"sha": "83989ff400f576dfe5a3099d2719549736348a1a", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/sgetc/char/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -106,11 +106,11 @@ void test01()\n   buf01.pub_setg(lit01, lit01, (lit01 + i01));\n   VERIFY( i01 == buf01.in_avail() );\n \n-  VERIFY( buf01.pub_uflow() == lit01[0] );\n+  VERIFY( buf01.pub_uflow() == traits_type::to_int_type(lit01[0]) );\n   VERIFY( buf01.sgetc() == traits_type::to_int_type(lit01[1]) );\n-  VERIFY( buf01.pub_uflow() == lit01[1] );\n+  VERIFY( buf01.pub_uflow() == traits_type::to_int_type(lit01[1]) );\n   VERIFY( buf01.sgetc() == traits_type::to_int_type(lit01[2]) );\n-  VERIFY( buf01.pub_uflow() == lit01[2] );\n+  VERIFY( buf01.pub_uflow() == traits_type::to_int_type(lit01[2]) );\n   VERIFY( buf01.sgetc() == traits_type::eof() );\n }\n "}, {"sha": "009af5d24b82364c44ed08d263f0af8b5c0ec8ae", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/sgetc/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fwchar_t%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -106,11 +106,11 @@ void test01()\n   buf01.pub_setg(lit01, lit01, (lit01 + i01));\n   VERIFY( i01 == buf01.in_avail() );\n \n-  VERIFY( buf01.pub_uflow() == lit01[0] );\n+  VERIFY( buf01.pub_uflow() == traits_type::to_int_type(lit01[0]) );\n   VERIFY( buf01.sgetc() == traits_type::to_int_type(lit01[1]) );\n-  VERIFY( buf01.pub_uflow() == lit01[1] );\n+  VERIFY( buf01.pub_uflow() == traits_type::to_int_type(lit01[1]) );\n   VERIFY( buf01.sgetc() == traits_type::to_int_type(lit01[2]) );\n-  VERIFY( buf01.pub_uflow() == lit01[2] );\n+  VERIFY( buf01.pub_uflow() == traits_type::to_int_type(lit01[2]) );\n   VERIFY( buf01.sgetc() == traits_type::eof() );\n }\n "}, {"sha": "60ae6812fae8f64a339a6970da26d54e0f25b3f0", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -47,8 +48,8 @@ void test04()\n   int_type c1 = strb_01.sbumpc();\n   int_type c2 = strb_02.sbumpc();\n   VERIFY( c1 != c2 );\n-  VERIFY( c1 == str_01[0] );\n-  VERIFY( c2 == str_02[0] ); //should equal first letter at this point\n+  VERIFY( c1 == traits_type::to_int_type(str_01[0]) );\n+  VERIFY( c2 == traits_type::to_int_type(str_02[0]) ); //should equal first letter at this point\n   int_type c3 = strb_01.sbumpc();\n   int_type c4 = strb_02.sbumpc();\n   VERIFY( c1 != c2 );"}, {"sha": "5d5830898835ad6c6cc7da0322349b7161948768", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsbumpc%2Fwchar_t%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -47,8 +47,8 @@ void test04()\n   int_type c1 = strb_01.sbumpc();\n   int_type c2 = strb_02.sbumpc();\n   VERIFY( c1 != c2 );\n-  VERIFY( c1 == str_01[0] );\n-  VERIFY( c2 == str_02[0] ); //should equal first letter at this point\n+  VERIFY( c1 == traits_type::to_int_type(str_01[0]) );\n+  VERIFY( c2 == traits_type::to_int_type(str_02[0]) ); //should equal first letter at this point\n   int_type c3 = strb_01.sbumpc();\n   int_type c4 = strb_02.sbumpc();\n   VERIFY( c1 != c2 );"}, {"sha": "6b6ad590440486a41e8280bf2b66acbcc22b3419", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sgetn/char/1.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -83,8 +84,8 @@ void test04()\n   c2 = strb_02.sgetc();\n   VERIFY( c6 == c1 ); //just by co-incidence both o's\n   VERIFY( c7 != c2 ); // n != i\n-  VERIFY( c1 == str_01[13] );\n-  VERIFY( c2 == str_02[13] ); //should equal fourteenth letter at this point\n+  VERIFY( c1 == traits_type::to_int_type(str_01[13]) );\n+  VERIFY( c2 == traits_type::to_int_type(str_02[13]) ); //should equal fourteenth letter at this point\n   strmsz_1 = strb_03.sgetn(carray1, 10);\n   VERIFY( !strmsz_1 ); //zero\n   strmsz_1 = strb_02.in_avail();"}, {"sha": "f77cb97c376887a4302fcc00f7a90baa9045e021", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsgetn%2Fwchar_t%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -83,8 +84,8 @@ void test04()\n   c2 = strb_02.sgetc();\n   VERIFY( c6 == c1 ); //just by co-incidence both o's\n   VERIFY( c7 != c2 ); // n != i\n-  VERIFY( c1 == str_01[13] );\n-  VERIFY( c2 == str_02[13] ); //should equal fourteenth letter at this point\n+  VERIFY( c1 == traits_type::to_int_type(str_01[13]) );\n+  VERIFY( c2 == traits_type::to_int_type(str_02[13]) ); //should equal fourteenth letter at this point\n   strmsz_1 = strb_03.sgetn(carray1, 10);\n   VERIFY( !strmsz_1 ); //zero\n   strmsz_1 = strb_02.in_avail();"}, {"sha": "1383f83fb0decb42ee4465fa8ab6ddbdee2a1dd9", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/snextc/char/1.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fchar%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -62,8 +63,8 @@ void test04()\n   c7 = strb_02.snextc();\n   VERIFY( c6 != c8 );\n   VERIFY( c7 != c9 );\n-  VERIFY( c6 == str_01[3] );\n-  VERIFY( c7 == str_02[3] ); //should equal fourth letter at this point\n+  VERIFY( c6 == traits_type::to_int_type(str_01[3]) );\n+  VERIFY( c7 == traits_type::to_int_type(str_02[3]) ); //should equal fourth letter at this point\n   c5 = strb_03.snextc();\n   VERIFY( c5 == traits_type::eof() );\n }"}, {"sha": "955390b80301264fb348da17e361d3b46e7d0e17", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fsnextc%2Fwchar_t%2F1.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,7 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == wchar_t\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -62,8 +63,8 @@ void test04()\n   c7 = strb_02.snextc();\n   VERIFY( c6 != c8 );\n   VERIFY( c7 != c9 );\n-  VERIFY( c6 == str_01[3] );\n-  VERIFY( c7 == str_02[3] ); //should equal fourth letter at this point\n+  VERIFY( c6 == traits_type::to_int_type(str_01[3]) );\n+  VERIFY( c7 == traits_type::to_int_type(str_02[3]) ); //should equal fourth letter at this point\n   c5 = strb_03.snextc();\n   VERIFY( c5 == traits_type::eof() );\n }"}, {"sha": "767ae32eb2cda6c3e20300f0de318c1f17dda977", "filename": "libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // { dg-require-iconv \"ISO-8859-1\" }\n \n-// Copyright (C) 2004, 2007 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,6 +20,7 @@\n \n #include <locale>\n #include <cstring>\n+#include <cstddef>\n #include <testsuite_hooks.h>\n #include <ext/enc_filebuf.h>\n \n@@ -41,8 +42,8 @@ int main()\n   std::streamsize n = fb.sputn(str, std::strlen(str));\n   int s = fb.pubsync();\n   fb.close();\n-  \n-  VERIFY( n == std::strlen(str) );\n+\n+  VERIFY( std::size_t(n) == std::strlen(str) );\n   VERIFY( s == 0 );\n   \n   return 0;"}, {"sha": "7565e73e5c0ccdb11f116194e1a96421ccc3b093", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/priority_queue_xref.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_xref.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_xref.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fpriority_queue_xref.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -80,7 +80,7 @@ class mapped_priority_queue\n   push(const int& r_str);\n \n   // Returns a const reference to the largest int in the container.\n-  const int\n+  int\n   top() const\n   {\n     assert(!empty());"}, {"sha": "eb506b0c81d689b8be60463c6465fbbb40bf19e6", "filename": "libstdc++-v3/testsuite/ext/vstring/inserters_extractors/char/28277.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Finserters_extractors%2Fchar%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Finserters_extractors%2Fchar%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Finserters_extractors%2Fchar%2F28277.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -38,7 +38,7 @@ void test01()\n   oss_01 << str_01;\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == __gnu_cxx::__vstring::size_type(width) );\n }\n \n int main()"}, {"sha": "205a99525f66f38cbe36d347f2b92090be783d81", "filename": "libstdc++-v3/testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Finserters_extractors%2Fwchar_t%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Finserters_extractors%2Fwchar_t%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Finserters_extractors%2Fwchar_t%2F28277.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -38,7 +38,7 @@ void test01()\n   oss_01 << str_01;\n \n   VERIFY( oss_01.good() );\n-  VERIFY( oss_01.str().size() == width );\n+  VERIFY( oss_01.str().size() == __gnu_cxx::__wvstring::size_type(width) );\n }\n \n int main()"}, {"sha": "6f521ed95b0ad1bf95843dcb4e2e8eae47b44c2a", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/thread/default_weaktoshared.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -162,7 +162,7 @@ test01()\n #endif\n   \n   pthread_attr_t tattr;\n-  int ret = pthread_attr_init(&tattr);\n+  pthread_attr_init(&tattr);\n \n   shared_and_weak_pools pools(obj_pool, weak_pool[0]);\n   pthread_create(threads, &tattr, thread_hammer_and_kill, reinterpret_cast<void*>(&pools));"}, {"sha": "b2461348c56bb260e296fb99e6c9fdc85ad3b598", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/thread/mutex_weaktoshared.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -164,7 +164,7 @@ test01()\n #endif\n   \n   pthread_attr_t tattr;\n-  int ret = pthread_attr_init(&tattr);\n+  pthread_attr_init(&tattr);\n \n   shared_and_weak_pools pools(obj_pool, weak_pool[0]);\n   pthread_create(threads, &tattr, thread_hammer_and_kill, reinterpret_cast<void*>(&pools));"}, {"sha": "f699ba324489c60021b07bcd0ceb2d326a3eb3b5", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/uniform_int/33128.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Funiform_int%2F33128.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Funiform_int%2F33128.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Funiform_int%2F33128.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -23,7 +23,7 @@\n #include <testsuite_hooks.h>\n \n // libstdc++/33128\n-int test01()\n+void test01()\n {\n   bool test __attribute__((unused)) = true;\n "}, {"sha": "d5bfb417a1d1d97799b0224ed85898c0c766d910", "filename": "libstdc++-v3/testsuite/tr1/7_regular_expressions/basic_regex/assign/char/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fassign%2Fchar%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fassign%2Fchar%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fassign%2Fchar%2Frange.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -32,7 +32,7 @@ void test01()\n \n   char s[] = \"a+b|c\";\n   test_type re;\n-  re.assign(s, s + sizeof(s));\n+  re.assign(s, s + 5);\n }\n \n int"}, {"sha": "1e97c6a5ce62298b6348a25fc594bd2b16d840ba", "filename": "libstdc++-v3/testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fassign%2Fwchar_t%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fassign%2Fwchar_t%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fassign%2Fwchar_t%2Frange.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -32,7 +32,7 @@ void test01()\n \n   wchar_t s[] = L\"a+b|c\";\n   test_type re;\n-  re.assign(s, s + sizeof(s));\n+  re.assign(s, s + 5);\n }\n \n int"}, {"sha": "42c2bf39879bb5c74f5772276855e3ab3b893835", "filename": "libstdc++-v3/testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fchar%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fchar%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fchar%2Frange.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -31,7 +31,7 @@ void test01()\n   typedef std::tr1::basic_regex<char> test_type;\n \n   char s[] = \"a+b|c\";\n-  test_type re(s, s + sizeof(s));\n+  test_type re(s, s + 5);\n }\n \n int"}, {"sha": "9ebebf2f601f766660ca83a759fc6749d1088821", "filename": "libstdc++-v3/testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fwchar_t%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fwchar_t%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fwchar_t%2Frange.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -31,7 +31,7 @@ void test01()\n   typedef std::tr1::basic_regex<wchar_t> test_type;\n \n   wchar_t s[] = L\"a+b|c\";\n-  test_type re(s, s + sizeof(s));\n+  test_type re(s, s + 5);\n }\n \n int"}, {"sha": "35ac5b2836fd3d592d77f2ce471b08b4722c93ad", "filename": "libstdc++-v3/testsuite/util/testsuite_hooks.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -173,7 +173,6 @@ namespace __gnu_test\n   run_tests_wrapped_locale(const char* name, const func_callback& l)\n   {\n     using namespace std;\n-    bool test = true;\n     \n     // Set the global locale. \n     locale loc_name = locale(name);\n@@ -202,7 +201,6 @@ namespace __gnu_test\n \t\t\tconst func_callback& l)\n   {\n     using namespace std;\n-    bool test = true;\n     \n #ifdef _GLIBCXX_HAVE_SETENV \n     // Set the global locale. "}, {"sha": "55d0e41654fc04b91f1d93a0a1eaba1413a86508", "filename": "libstdc++-v3/testsuite/util/testsuite_rvalref.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_rvalref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7919bb2fba34c4b8a16f58c50f349e321fc6975f/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_rvalref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_rvalref.h?ref=7919bb2fba34c4b8a16f58c50f349e321fc6975f", "patch": "@@ -72,6 +72,7 @@ namespace __gnu_test\n       VERIFY(valid == false);\n       val = newval; \n       valid = true;\n+      return *this;\n     }\n \n     rvalstruct(rvalstruct&& in)\n@@ -145,6 +146,7 @@ namespace __gnu_test\n     { \n       val = newval;\n       valid = true;\n+      return *this;\n     }\n \n     bool\n@@ -154,6 +156,7 @@ namespace __gnu_test\n       ++copycount;\n       val = in.val;\n       valid = true;\n+      return true;\n     }\n \n     copycounter&"}]}