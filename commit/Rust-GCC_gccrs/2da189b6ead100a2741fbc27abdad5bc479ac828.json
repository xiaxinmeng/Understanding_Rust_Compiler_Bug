{"sha": "2da189b6ead100a2741fbc27abdad5bc479ac828", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhMTg5YjZlYWQxMDBhMjc0MWZiYzI3YWJkYWQ1YmM0NzlhYzgyOA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-03-17T18:21:08Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-03-17T18:21:08Z"}, "message": "re PR fortran/79841 (Inconsistent diagnostics in fortran/openmp.c, function check_symbol_not_pointer)\n\n2017-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/79841\n\t* openmp.c (check_symbol_not_pointer): Adjust diagnostics.\n\nFrom-SVN: r246241", "tree": {"sha": "0a4a5d5099af4026d6660cd59688d072030cf046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a4a5d5099af4026d6660cd59688d072030cf046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2da189b6ead100a2741fbc27abdad5bc479ac828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da189b6ead100a2741fbc27abdad5bc479ac828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da189b6ead100a2741fbc27abdad5bc479ac828", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da189b6ead100a2741fbc27abdad5bc479ac828/comments", "author": null, "committer": null, "parents": [{"sha": "d1132c1bc5328086e388b39d0387f6bafad90e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1132c1bc5328086e388b39d0387f6bafad90e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1132c1bc5328086e388b39d0387f6bafad90e65"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "55dc64981e4b6aed7cb42b5092332acf47fff4f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da189b6ead100a2741fbc27abdad5bc479ac828/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da189b6ead100a2741fbc27abdad5bc479ac828/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2da189b6ead100a2741fbc27abdad5bc479ac828", "patch": "@@ -1,3 +1,8 @@\n+2017-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/79841\n+\t* openmp.c (check_symbol_not_pointer): Adjust diagnostics.\n+\n 2017-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/80010"}, {"sha": "11f4efb67a113c3b1ce6fcc87ef61a3a11ad095e", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da189b6ead100a2741fbc27abdad5bc479ac828/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da189b6ead100a2741fbc27abdad5bc479ac828/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=2da189b6ead100a2741fbc27abdad5bc479ac828", "patch": "@@ -3735,7 +3735,7 @@ check_symbol_not_pointer (gfc_symbol *sym, locus loc, const char *name)\n     gfc_error (\"Cray pointer object %qs of derived type in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if (sym->ts.type == BT_DERIVED && sym->attr.cray_pointee)\n-    gfc_error (\"Cray pointee object of derived type %qs in %s clause at %L\",\n+    gfc_error (\"Cray pointee object %qs of derived type in %s clause at %L\",\n \t       sym->name, name, &loc);\n \n   if ((sym->ts.type == BT_ASSUMED && sym->attr.pointer)\n@@ -3746,12 +3746,12 @@ check_symbol_not_pointer (gfc_symbol *sym, locus loc, const char *name)\n   if ((sym->ts.type == BT_ASSUMED && sym->attr.cray_pointer)\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.cray_pointer))\n-    gfc_error (\"Cray pointer object of polymorphic type %qs in %s clause at %L\",\n+    gfc_error (\"Cray pointer object %qs of polymorphic type in %s clause at %L\",\n \t       sym->name, name, &loc);\n   if ((sym->ts.type == BT_ASSUMED && sym->attr.cray_pointee)\n       || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n \t  && CLASS_DATA (sym)->attr.cray_pointee))\n-    gfc_error (\"Cray pointee object of polymorphic type %qs in %s clause at %L\",\n+    gfc_error (\"Cray pointee object %qs of polymorphic type in %s clause at %L\",\n \t       sym->name, name, &loc);\n }\n "}]}