{"sha": "a3407e423920a7233e038318adc6dc246ba272dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM0MDdlNDIzOTIwYTcyMzNlMDM4MzE4YWRjNmRjMjQ2YmEyNzJkZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-11-23T13:08:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-23T13:08:32Z"}, "message": "* gcc.dg/setjmp-2.c: New test.\n\nFrom-SVN: r91087", "tree": {"sha": "9b453c1cf69c2a1e172120085085ee23f1e908d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b453c1cf69c2a1e172120085085ee23f1e908d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3407e423920a7233e038318adc6dc246ba272dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3407e423920a7233e038318adc6dc246ba272dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3407e423920a7233e038318adc6dc246ba272dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3407e423920a7233e038318adc6dc246ba272dd/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ed5d5b27f04ae693cc9d2c8221ce28f7dfa684c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed5d5b27f04ae693cc9d2c8221ce28f7dfa684c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ed5d5b27f04ae693cc9d2c8221ce28f7dfa684c"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "605cad3d5888fbfc5d78750978fc75cdbf48e6f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3407e423920a7233e038318adc6dc246ba272dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3407e423920a7233e038318adc6dc246ba272dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a3407e423920a7233e038318adc6dc246ba272dd", "patch": "@@ -1,3 +1,7 @@\n+2004-11-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/setjmp-2.c: New test.\n+\n 2004-11-22  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* gcc.target/sparc/align.c, gcc.target/sparc/combined-2.c,"}, {"sha": "6c89f8e96970eecbdc2f506256ec7ff78de612e8", "filename": "gcc/testsuite/gcc.dg/setjmp-2.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3407e423920a7233e038318adc6dc246ba272dd/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3407e423920a7233e038318adc6dc246ba272dd/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c?ref=a3407e423920a7233e038318adc6dc246ba272dd", "patch": "@@ -0,0 +1,48 @@\n+/* PR middle-end/17813 */\n+/* Origin: Tom Hughes <tom@compton.nu> */\n+/* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n+/* { dg-options \"-O -fomit-frame-pointer -march=i386\" { target i?86-*-linux* } } */\n+/* { dg-options \"-O -fomit-frame-pointer -m32 -march=i386\" { target x86_64-*-linux* } } */\n+\n+#include <setjmp.h>\n+#include <signal.h>\n+#include <stdlib.h>\n+\n+static jmp_buf segv_jmpbuf;\n+\n+static void segv_handler(int seg)\n+{\n+   __builtin_longjmp(segv_jmpbuf, 1);\n+}\n+\n+static int is_addressable(void *p, size_t size)\n+{\n+   volatile char * volatile cp = (volatile char *)p;\n+   volatile int ret;\n+   struct sigaction sa, origsa;\n+   sigset_t mask;\n+   \n+   sa.sa_handler = segv_handler;\n+   sa.sa_flags = 0;\n+   sigfillset(&sa.sa_mask);\n+   sigaction(SIGSEGV, &sa, &origsa);\n+   sigprocmask(SIG_SETMASK, NULL, &mask);\n+\n+   if (__builtin_setjmp(segv_jmpbuf) == 0) {\n+      while(size--)\n+\t *cp++;\n+      ret = 1;\n+    } else\n+      ret = 0;\n+\n+   sigaction(SIGSEGV, &origsa, NULL);\n+   sigprocmask(SIG_SETMASK, &mask, NULL);\n+\n+   return ret;\n+}\n+\n+int main(int argc, char **argv)\n+{\n+   is_addressable(0x0, 1);\n+   return 0;\n+}"}]}