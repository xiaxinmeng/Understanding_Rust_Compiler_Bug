{"sha": "8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNiZWRkY2MzM2NiODQyMTc2YjJiYTZiOGZmZDVlODc2NmVmZTZjYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-07-23T16:31:48Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-07-23T16:31:48Z"}, "message": "re PR tree-optimization/44914 (ICE: in calc_dfs_tree, at dominance.c:395 with -fipa-sra -fnon-call-exceptions)\n\n2010-07-23  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/44914\n\t* tree-sra.c (sra_modify_function_body): Return true if CFG was\n\tchanged, add purging dead eh edges.\n\t(ipa_sra_modify_function_body): Return true if CFG was changed,\n\tsimplify purging dead eh edges.\n\t(modify_function): Return true if CFG was changed.\n\t(perform_intra_sra): Add TODO_cleanup_cfg to the return value if CFG\n\twas changed.\n\t(ipa_early_sra): Likewise.\n\n\t* testsuite/g++.dg/tree-ssa/pr44914.C:  New test.\n\nFrom-SVN: r162468", "tree": {"sha": "798447eaf80c232acaeb850e861094c77781cfaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/798447eaf80c232acaeb850e861094c77781cfaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e40e64de70990fbc227be23b7a8b7c962eb8dce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40e64de70990fbc227be23b7a8b7c962eb8dce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40e64de70990fbc227be23b7a8b7c962eb8dce3"}], "stats": {"total": 86, "additions": 67, "deletions": 19}, "files": [{"sha": "e674f39ec13aaeb5c0b8b640da0a17a16729087e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "patch": "@@ -1,3 +1,15 @@\n+2010-07-23  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/44914\n+\t* tree-sra.c (sra_modify_function_body): Return true if CFG was\n+\tchanged, add purging dead eh edges.\n+\t(ipa_sra_modify_function_body): Return true if CFG was changed,\n+\tsimplify purging dead eh edges.\n+\t(modify_function): Return true if CFG was changed.\n+\t(perform_intra_sra): Add TODO_cleanup_cfg to the return value if CFG\n+\twas changed.\n+\t(ipa_early_sra): Likewise.\n+\n 2010-07-23  Jie Zhang  <jie@codesourcery.com>\n \n \tPR target/44290"}, {"sha": "fd8615fffac037b10929f1b9c2aa1b6324622ad3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "patch": "@@ -1,3 +1,8 @@\n+2010-07-23  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/44914\n+\t* g++.dg/tree-ssa/pr44914.C: New test.\n+\n 2010-07-23  Jie Zhang  <jie@codesourcery.com>\n \n \tPR target/44290"}, {"sha": "57ca7e83f178352d87aa7216b6abf9eb54dbb826", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr44914.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr44914.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr44914.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr44914.C?ref=8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fipa-sra -fnon-call-exceptions\" } */\n+\n+struct A\n+{\n+  ~A () { }\n+};\n+\n+struct B\n+{\n+  A a;\n+  int i;\n+  void f (int) { }\n+  B ()\n+  {\n+    f (i);\n+  }\n+};\n+\n+B b;"}, {"sha": "fa567e54e8b6ef25d342d7861caf6e8f9ecb0823", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=8cbeddcc33cb842176b2ba6b8ffd5e8766efe6cc", "patch": "@@ -2791,11 +2791,13 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi)\n }\n \n /* Traverse the function body and all modifications as decided in\n-   analyze_all_variable_accesses.  */\n+   analyze_all_variable_accesses.  Return true iff the CFG has been\n+   changed.  */\n \n-static void\n+static bool\n sra_modify_function_body (void)\n {\n+  bool cfg_changed = false;\n   basic_block bb;\n \n   FOR_EACH_BB (bb)\n@@ -2858,12 +2860,16 @@ sra_modify_function_body (void)\n \t  if (modified)\n \t    {\n \t      update_stmt (stmt);\n-\t      maybe_clean_eh_stmt (stmt);\n+\t      if (maybe_clean_eh_stmt (stmt)\n+\t\t  && gimple_purge_dead_eh_edges (gimple_bb (stmt)))\n+\t\tcfg_changed = true;\n \t    }\n \t  if (!deleted)\n \t    gsi_next (&gsi);\n \t}\n     }\n+\n+  return cfg_changed;\n }\n \n /* Generate statements initializing scalar replacements of parts of function\n@@ -2923,7 +2929,10 @@ perform_intra_sra (void)\n   if (!analyze_all_variable_accesses ())\n     goto out;\n \n-  sra_modify_function_body ();\n+  if (sra_modify_function_body ())\n+    ret = TODO_update_ssa | TODO_cleanup_cfg;\n+  else\n+    ret = TODO_update_ssa;\n   initialize_parameter_reductions ();\n \n   statistics_counter_event (cfun, \"Scalar replacements created\",\n@@ -2937,8 +2946,6 @@ perform_intra_sra (void)\n   statistics_counter_event (cfun, \"Separate LHS and RHS handling\",\n \t\t\t    sra_stats.separate_lhs_rhs_handling);\n \n-  ret = TODO_update_ssa;\n-\n  out:\n   sra_deinitialize ();\n   return ret;\n@@ -4064,17 +4071,17 @@ sra_ipa_modify_assign (gimple *stmt_ptr, gimple_stmt_iterator *gsi,\n }\n \n /* Traverse the function body and all modifications as described in\n-   ADJUSTMENTS.  */\n+   ADJUSTMENTS.  Return true iff the CFG has been changed.  */\n \n-static void\n+static bool\n ipa_sra_modify_function_body (ipa_parm_adjustment_vec adjustments)\n {\n+  bool cfg_changed = false;\n   basic_block bb;\n \n   FOR_EACH_BB (bb)\n     {\n       gimple_stmt_iterator gsi;\n-      bool bb_changed = false;\n \n       for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \treplace_removed_params_ssa_names (gsi_stmt (gsi), adjustments);\n@@ -4136,15 +4143,16 @@ ipa_sra_modify_function_body (ipa_parm_adjustment_vec adjustments)\n \n \t  if (modified)\n \t    {\n-\t      bb_changed = true;\n \t      update_stmt (stmt);\n-\t      maybe_clean_eh_stmt (stmt);\n+\t      if (maybe_clean_eh_stmt (stmt)\n+\t\t  && gimple_purge_dead_eh_edges (gimple_bb (stmt)))\n+\t\tcfg_changed = true;\n \t    }\n \t  gsi_next (&gsi);\n \t}\n-      if (bb_changed)\n-\tgimple_purge_dead_eh_edges (bb);\n     }\n+\n+  return cfg_changed;\n }\n \n /* Call gimple_debug_bind_reset_value on all debug statements describing\n@@ -4260,13 +4268,14 @@ convert_callers (struct cgraph_node *node, tree old_decl,\n }\n \n /* Perform all the modification required in IPA-SRA for NODE to have parameters\n-   as given in ADJUSTMENTS.  */\n+   as given in ADJUSTMENTS.  Return true iff the CFG has been changed.  */\n \n-static void\n+static bool\n modify_function (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n {\n   struct cgraph_node *new_node;\n   struct cgraph_edge *cs;\n+  bool cfg_changed;\n   VEC (cgraph_edge_p, heap) * redirect_callers;\n   int node_callers;\n \n@@ -4287,11 +4296,11 @@ modify_function (struct cgraph_node *node, ipa_parm_adjustment_vec adjustments)\n   push_cfun (DECL_STRUCT_FUNCTION (new_node->decl));\n \n   ipa_modify_formal_parameters (current_function_decl, adjustments, \"ISRA\");\n-  ipa_sra_modify_function_body (adjustments);\n+  cfg_changed = ipa_sra_modify_function_body (adjustments);\n   sra_ipa_reset_debug_stmts (adjustments);\n   convert_callers (new_node, node->decl, adjustments);\n   cgraph_make_node_local (new_node);\n-  return;\n+  return cfg_changed;\n }\n \n /* Return false the function is apparently unsuitable for IPA-SRA based on it's\n@@ -4415,9 +4424,11 @@ ipa_early_sra (void)\n   if (dump_file)\n     ipa_dump_param_adjustments (dump_file, adjustments, current_function_decl);\n \n-  modify_function (node, adjustments);\n+  if (modify_function (node, adjustments))\n+    ret = TODO_update_ssa | TODO_cleanup_cfg;\n+  else\n+    ret = TODO_update_ssa;\n   VEC_free (ipa_parm_adjustment_t, heap, adjustments);\n-  ret = TODO_update_ssa;\n \n   statistics_counter_event (cfun, \"Unused parameters deleted\",\n \t\t\t    sra_stats.deleted_unused_parameters);"}]}