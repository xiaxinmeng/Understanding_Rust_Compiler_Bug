{"sha": "cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZkYjk4NGJhZjhiOWNiYzBhOWI1YjU0NzM3NTM3ZDEyZDg0YjUyZg==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-09T17:24:37Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-09T17:24:37Z"}, "message": "s390.c: (s390_adjust_priority): Adapt to changed attribute names.\n\n2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.c: (s390_adjust_priority): Adapt to changed\n\tattribute names.\n\t* config/s390/2084.md: (\"x_fsimpd\", \"x_fsimps\", \"x_fdivd\", \"x_fdivs\",\n\t\"x_floadd\", \"x_floads\", \"x_fstored\", \"x_fstores\"): Rename to\n\t(\"x_fsimpdf\", \"x_fsimpsf\", \"x_fdivdf\", \"x_fdivsf\", \"x_floaddf\",\n\t\"x_floadsf\", \"x_fstoredf\", \"x_fstoresf\") and replace 'type'\n\tattribute names.\n\t* config/s390/s390.md: (\"type\"): Rename \"fsimpd, fsimps, floadd, floads,\n\tfstored, fstores, fmuld, fmuls, fdivd, fdivs, fsqrtd, fsqrts\" to\n\t\"fsimpdf, fsimpsf, floaddf, floadsf, fstoredf, fstoresf, fmuldf,\n\tfmulsf, fdivdf, fdivsf, fsqrtdf, fsqrtsf\".\n\t(\"*cmpdf_ccs_0\", \"*cmpdf_css_0_ibm\", \"*cmpdf_ccs\",\n\t\"*cmpdf_ccs_ibm\", \"*cmpsf_ccs_0\", \"*cmpsf_css_0_ibm\",\n\t\"*cmpsf_ccs\", \"*cmpsf_ccs_ibm\", \"*movdi_64\", \"*movdi_31\",\n\t\"*movsi_zarch\", \"*movsi_esa\", \"*movdf_64\", \"*movdf_31\", \"movsf\",\n\t\"*muldf3\", \"*muldf3_ibm\", \"*fmadddf\", \"*fmsubdf\", \"*mulsf3\",\n\t\"mulsf3_ibm\", \"*fmaddsf\", \"fmsubsf\", \"*divdf3\", \"*divdf3_ibm\",\n\t\"*negdf2_cc\", \"*negdf2_cconly\", \"*negdf2\", \"*negdf2_ibm\",\n\t\"*negsf2_cc\", \"*negsf2_cconly\", \"*negsf2\", \"*absdf2_cc\",\n\t\"*absdf2_cconly\", \"*absdf2\", \"*absdf2_ibm\", \"*abssf2_cc\",\n\t\"*abssf2_cconly\", \"*abssf2\", \"*abssf2_ibm\", \"*negabsdf2_cc\",\n\t\"*negabsdf2_cconly\", \"*negabsdf2\", \"*negabssf2_cc\",\n\t\"*negabssf2_cconly\", \"*negabssf2\", \"sqrtdf2\", \"sqrtsf2\"): Rename\n\t'type' value.\n\t(\"*divsf3\"): Additionally rename second pattern to\n\t\"*divsf3_ibm\".\n\t(\"truncdfsf2_ibm\", \"extendsfdf2_ieee\", \"extendsfdf2_ibm\",\n\t\"*adddf3\", \"*adddf3_cc\", \"*adddf3_cconly\", \"*adddf3_ibm\",\n\t\"*addsf3\", \"*addsf3_cc\", \"*addsf3_cconly\", \"*subdf3\",\n\t\"subdf3_cc\", \"*subdf3_cconly\", \"*subdf3_ibm\", \"*subsf3\",\n\t\"subsf3_cc\", \"*subsf3_cconly\", \"*subsf3_ibm\"): Merge identical\n\t'type values' and rename 'type' value.\n\t(\"*addsf3\"): Additionally rename second pattern to\n\t\"*addsf3_ibm\".\n\nFrom-SVN: r99456", "tree": {"sha": "cf588e08c1bf54e3c623a5e1aea29a333dfc01c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf588e08c1bf54e3c623a5e1aea29a333dfc01c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/comments", "author": null, "committer": null, "parents": [{"sha": "f337b93018fa596ef1878588c5efd4dd16caab73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f337b93018fa596ef1878588c5efd4dd16caab73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f337b93018fa596ef1878588c5efd4dd16caab73"}], "stats": {"total": 247, "additions": 142, "deletions": 105}, "files": [{"sha": "fdb1dbc29daa4038e73c14a8e8d8498f293e07b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "patch": "@@ -1,3 +1,40 @@\n+2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.c: (s390_adjust_priority): Adapt to changed \n+\tattribute names.\n+\t* config/s390/2084.md: (\"x_fsimpd\", \"x_fsimps\", \"x_fdivd\", \"x_fdivs\",\n+\t\"x_floadd\", \"x_floads\", \"x_fstored\", \"x_fstores\"): Rename to\n+\t(\"x_fsimpdf\", \"x_fsimpsf\", \"x_fdivdf\", \"x_fdivsf\", \"x_floaddf\",\n+\t\"x_floadsf\", \"x_fstoredf\", \"x_fstoresf\") and replace 'type'\n+\tattribute names.\n+\t* config/s390/s390.md: (\"type\"): Rename \"fsimpd, fsimps, floadd, floads,\n+\tfstored, fstores, fmuld, fmuls, fdivd, fdivs, fsqrtd, fsqrts\" to\n+\t\"fsimpdf, fsimpsf, floaddf, floadsf, fstoredf, fstoresf, fmuldf,\n+\tfmulsf, fdivdf, fdivsf, fsqrtdf, fsqrtsf\".\n+\t(\"*cmpdf_ccs_0\", \"*cmpdf_css_0_ibm\", \"*cmpdf_ccs\",\n+\t\"*cmpdf_ccs_ibm\", \"*cmpsf_ccs_0\", \"*cmpsf_css_0_ibm\",\n+\t\"*cmpsf_ccs\", \"*cmpsf_ccs_ibm\", \"*movdi_64\", \"*movdi_31\",\n+\t\"*movsi_zarch\", \"*movsi_esa\", \"*movdf_64\", \"*movdf_31\", \"movsf\",\n+\t\"*muldf3\", \"*muldf3_ibm\", \"*fmadddf\", \"*fmsubdf\", \"*mulsf3\",\n+\t\"mulsf3_ibm\", \"*fmaddsf\", \"fmsubsf\", \"*divdf3\", \"*divdf3_ibm\",\n+\t\"*negdf2_cc\", \"*negdf2_cconly\", \"*negdf2\", \"*negdf2_ibm\",\n+\t\"*negsf2_cc\", \"*negsf2_cconly\", \"*negsf2\", \"*absdf2_cc\",\n+\t\"*absdf2_cconly\", \"*absdf2\", \"*absdf2_ibm\", \"*abssf2_cc\",\n+\t\"*abssf2_cconly\", \"*abssf2\", \"*abssf2_ibm\", \"*negabsdf2_cc\",\n+\t\"*negabsdf2_cconly\", \"*negabsdf2\", \"*negabssf2_cc\",\n+\t\"*negabssf2_cconly\", \"*negabssf2\", \"sqrtdf2\", \"sqrtsf2\"): Rename\n+\t'type' value.\n+\t(\"*divsf3\"): Additionally rename second pattern to\n+\t\"*divsf3_ibm\".\n+\t(\"truncdfsf2_ibm\", \"extendsfdf2_ieee\", \"extendsfdf2_ibm\",\n+\t\"*adddf3\", \"*adddf3_cc\", \"*adddf3_cconly\", \"*adddf3_ibm\",\n+\t\"*addsf3\", \"*addsf3_cc\", \"*addsf3_cconly\", \"*subdf3\",\n+\t\"subdf3_cc\", \"*subdf3_cconly\", \"*subdf3_ibm\", \"*subsf3\",\n+\t\"subsf3_cc\", \"*subsf3_cconly\", \"*subsf3_ibm\"): Merge identical\n+\t'type values' and rename 'type' value.\n+\t(\"*addsf3\"): Additionally rename second pattern to\n+\t\"*addsf3_ibm\".\n+\n 2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.md: (\"SHIFT\"): New mode macro."}, {"sha": "05681c5b9dcba8f0da08e42064a2efe6e928c0b4", "filename": "gcc/config/s390/2084.md", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2Fconfig%2Fs390%2F2084.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2Fconfig%2Fs390%2F2084.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2084.md?ref=cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "patch": "@@ -156,44 +156,44 @@\n ;; Floating point insns\n ;;\n \n-(define_insn_reservation \"x_fsimpd\" 6 \n+(define_insn_reservation \"x_fsimpdf\" 6 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"fsimpd,fmuld\"))\n+       (eq_attr \"type\" \"fsimpdf,fmuldf\"))\n   \"x_e1_t,x-wr-fp\") \n \n-(define_insn_reservation \"x_fsimps\" 6 \n+(define_insn_reservation \"x_fsimpsf\" 6 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"fsimps,fmuls\"))\n+       (eq_attr \"type\" \"fsimpsf,fmulsf\"))\n   \"x_e1_t,x-wr-fp\") \n \n-(define_insn_reservation \"x_fdivd\" 36\n+(define_insn_reservation \"x_fdivdf\" 36\n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"fdivd,fsqrtd\"))\n+       (eq_attr \"type\" \"fdivdf,fsqrtdf\"))\n   \"x_e1_t*30,x-wr-fp\") \n \n-(define_insn_reservation \"x_fdivs\" 36 \n+(define_insn_reservation \"x_fdivsf\" 36 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"fdivs,fsqrts\"))\n+       (eq_attr \"type\" \"fdivsf,fsqrtsf\"))\n   \"x_e1_t*30,x-wr-fp\") \n \n-(define_insn_reservation \"x_floadd\" 6 \n+(define_insn_reservation \"x_floaddf\" 6 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"floadd\"))\n+       (eq_attr \"type\" \"floaddf\"))\n   \"x_e1_t,x-wr-fp\") \n \n-(define_insn_reservation \"x_floads\" 6 \n+(define_insn_reservation \"x_floadsf\" 6 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"floads\"))\n+       (eq_attr \"type\" \"floadsf\"))\n   \"x_e1_t,x-wr-fp\") \n \n-(define_insn_reservation \"x_fstored\" 1 \n+(define_insn_reservation \"x_fstoredf\" 1 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"fstored\"))\n+       (eq_attr \"type\" \"fstoredf\"))\n   \"x_e1_t,x-wr-fp\") \n \n-(define_insn_reservation \"x_fstores\" 1 \n+(define_insn_reservation \"x_fstoresf\" 1 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"type\" \"fstores\"))\n+       (eq_attr \"type\" \"fstoresf\"))\n   \"x_e1_t,x-wr-fp\") \n \n (define_insn_reservation \"x_ftoi\" 1 \n@@ -206,13 +206,13 @@\n        (eq_attr \"type\" \"itof\"))\n   \"x_e1_t*3,x-wr-fp\") \n \n-(define_bypass 1 \"x_fsimpd\" \"x_fstored\")\n+(define_bypass 1 \"x_fsimpdf\" \"x_fstoredf\")\n \n-(define_bypass 1 \"x_fsimps\" \"x_fstores\")\n+(define_bypass 1 \"x_fsimpsf\" \"x_fstoresf\")\n \n-(define_bypass 1 \"x_floadd\" \"x_fsimpd,x_fstored,x_floadd\")\n+(define_bypass 1 \"x_floaddf\" \"x_fsimpdf,x_fstoredf,x_floaddf\")\n \t         \n-(define_bypass 1 \"x_floads\" \"x_fsimps,x_fstores,x_floads\")\n+(define_bypass 1 \"x_floadsf\" \"x_fsimpsf,x_fstoresf,x_floadsf\")\n \n ;;\n ;; s390_agen_dep_p returns 1, if a register is set in the \n@@ -229,8 +229,8 @@\n \t         \"s390_agen_dep_p\")\n \n (define_bypass 9 \"x_int,x_agen,x_lr\" \n-                 \"x_floadd, x_floads, x_fstored, x_fstores,\\\n-\t\t  x_fsimpd, x_fsimps, x_fdivd, x_fdivs\"\n+                 \"x_floaddf, x_floadsf, x_fstoredf, x_fstoresf,\\\n+\t\t  x_fsimpdf, x_fsimpsf, x_fdivdf, x_fdivsf\"\n \t         \"s390_agen_dep_p\")\n ;;\n ;; A load type instruction uses a bypass to feed the result back\t\n@@ -242,8 +242,8 @@\n \t         \"s390_agen_dep_p\")\n \n (define_bypass 5 \"x_load\"\n-                 \"x_floadd, x_floads, x_fstored, x_fstores,\\\n-\t\t  x_fsimpd, x_fsimps, x_fdivd, x_fdivs\"\n+                 \"x_floaddf, x_floadsf, x_fstoredf, x_fstoresf,\\\n+\t\t  x_fsimpdf, x_fsimpsf, x_fdivdf, x_fdivsf\"\n \t         \"s390_agen_dep_p\")\n \n ;;\n@@ -256,8 +256,8 @@\n \t         \"s390_agen_dep_p\")\n \n (define_bypass 5 \"x_larl, x_la\"\n-                 \"x_floadd, x_floads, x_fstored, x_fstores,\\\n-\t\t  x_fsimpd, x_fsimps, x_fdivd, x_fdivs\"\n+                 \"x_floaddf, x_floadsf, x_fstoredf, x_fstoresf,\\\n+\t\t  x_fsimpdf, x_fsimpsf, x_fdivdf, x_fdivsf\"\n \t         \"s390_agen_dep_p\")\n \n ;;"}, {"sha": "69adbfe5876d82104a8962f8c20d335e9bb3c3a6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "patch": "@@ -4211,8 +4211,8 @@ s390_adjust_priority (rtx insn ATTRIBUTE_UNUSED, int priority)\n \n   switch (s390_safe_attr_type (insn))\n     {\n-      case TYPE_FSTORED:\n-      case TYPE_FSTORES:\n+      case TYPE_FSTOREDF:\n+      case TYPE_FSTORESF:\n \tpriority = priority << 3;\n \tbreak;\n       case TYPE_STORE:"}, {"sha": "ef736920ca2c0a1d9cb8dfe26bda5af1e4956abf", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 77, "deletions": 77, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdb984baf8b9cbc0a9b5b54737537d12d84b52f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=cfdb984baf8b9cbc0a9b5b54737537d12d84b52f", "patch": "@@ -158,10 +158,10 @@\n (define_attr \"type\" \"none,integer,load,lr,la,larl,lm,stm,\n \t             cs,vs,store,idiv,\n                      imulhi,imulsi,imuldi,\n-\t\t     branch,jsr,fsimpd,fsimps,\n-\t\t     floadd,floads,fstored, fstores,\n-\t\t     fmuld,fmuls,fdivd,fdivs,\n-\t\t     ftoi,itof,fsqrtd,fsqrts,\n+\t\t     branch,jsr,fsimpdf,fsimpsf,\n+\t\t     floaddf,floadsf,fstoredf,fstoresf,\n+\t\t     fmuldf,fmulsf,fdivdf,fdivsf,\n+\t\t     ftoi,itof,fsqrtdf,fsqrtsf,\n                      other\"\n   (cond [(eq_attr \"op_type\" \"NN\")  (const_string \"other\")\n          (eq_attr \"op_type\" \"SS\")  (const_string \"cs\")]\n@@ -701,7 +701,7 @@\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltdbr\\t%0,%0\"\n    [(set_attr \"op_type\" \"RRE\")\n-    (set_attr \"type\"  \"fsimpd\")])\n+    (set_attr \"type\"  \"fsimpdf\")])\n \n (define_insn \"*cmpdf_ccs_0_ibm\"\n   [(set (reg 33)\n@@ -710,7 +710,7 @@\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"ltdr\\t%0,%0\"\n    [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"  \"fsimpd\")])\n+    (set_attr \"type\"  \"fsimpdf\")])\n \n (define_insn \"*cmpdf_ccs\"\n   [(set (reg 33)\n@@ -721,7 +721,7 @@\n    cdbr\\t%0,%1\n    cdb\\t%0,%1\"\n    [(set_attr \"op_type\" \"RRE,RXE\")\n-    (set_attr \"type\"  \"fsimpd\")])\n+    (set_attr \"type\"  \"fsimpdf\")])\n \n (define_insn \"*cmpdf_ccs_ibm\"\n   [(set (reg 33)\n@@ -732,7 +732,7 @@\n    cdr\\t%0,%1\n    cd\\t%0,%1\"\n    [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"type\"  \"fsimpd\")])\n+    (set_attr \"type\"  \"fsimpdf\")])\n \n \n ; SF instructions\n@@ -744,7 +744,7 @@\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"ltebr\\t%0,%0\"\n    [(set_attr \"op_type\" \"RRE\")\n-    (set_attr \"type\"  \"fsimps\")])\n+    (set_attr \"type\"  \"fsimpsf\")])\n \n (define_insn \"*cmpsf_ccs_0_ibm\"\n   [(set (reg 33)\n@@ -753,7 +753,7 @@\n   \"s390_match_ccmode(insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lter\\t%0,%0\"\n    [(set_attr \"op_type\" \"RR\")\n-    (set_attr \"type\"  \"fsimps\")])\n+    (set_attr \"type\"  \"fsimpsf\")])\n \n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n@@ -764,7 +764,7 @@\n    cebr\\t%0,%1\n    ceb\\t%0,%1\"\n    [(set_attr \"op_type\" \"RRE,RXE\")\n-    (set_attr \"type\"  \"fsimps\")])\n+    (set_attr \"type\"  \"fsimpsf\")])\n \n (define_insn \"*cmpsf_ccs\"\n   [(set (reg 33)\n@@ -775,7 +775,7 @@\n    cer\\t%0,%1\n    ce\\t%0,%1\"\n    [(set_attr \"op_type\" \"RR,RX\")\n-    (set_attr \"type\"  \"fsimps\")])\n+    (set_attr \"type\"  \"fsimpsf\")])\n \n \n ;;\n@@ -904,7 +904,7 @@\n   [(set_attr \"op_type\" \"RI,RI,RI,RI,RI,RXY,RRE,RXY,RXY,\n                         RR,RX,RXY,RX,RXY,*,*,RS,RS,SS\")\n    (set_attr \"type\" \"*,*,*,*,*,la,lr,load,store,\n-                     floadd,floadd,floadd,fstored,fstored,*,*,*,*,*\")])\n+                     floaddf,floaddf,floaddf,fstoredf,fstoredf,*,*,*,*,*\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -955,7 +955,7 @@\n    stdy\\t%1,%0\n    #\"\n   [(set_attr \"op_type\" \"RS,RS,*,*,RR,RX,RXY,RX,RXY,SS\")\n-   (set_attr \"type\" \"lm,stm,*,*,floadd,floadd,floadd,fstored,fstored,*\")])\n+   (set_attr \"type\" \"lm,stm,*,*,floaddf,floaddf,floaddf,fstoredf,fstoredf,*\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n@@ -1119,7 +1119,7 @@\n   [(set_attr \"op_type\" \"RI,RI,RI,RXY,RR,RX,RXY,RX,RXY,\n                         RR,RX,RXY,RX,RXY,RRE,RRE,RS,RS,SS\")\n    (set_attr \"type\" \"*,*,*,la,lr,load,load,store,store,\n-                     floads,floads,floads,fstores,fstores,*,*,*,*,*\")])\n+                     floadsf,floadsf,floadsf,fstoresf,fstoresf,*,*,*,*,*\")])\n \n (define_insn \"*movsi_esa\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,R,!*f,!*f,!R,d,t,Q,t,?Q\")\n@@ -1139,7 +1139,7 @@\n    lam\\t%0,%0,%S1\n    #\"\n   [(set_attr \"op_type\" \"RI,RR,RX,RX,RR,RX,RX,RRE,RRE,RS,RS,SS\")\n-   (set_attr \"type\" \"*,lr,load,store,floads,floads,fstores,*,*,*,*,*\")])\n+   (set_attr \"type\" \"*,lr,load,store,floadsf,floadsf,fstoresf,*,*,*,*,*\")])\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -1396,7 +1396,7 @@\n    stg\\t%1,%0\n    #\"\n   [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RRE,RXY,RXY,SS\")\n-   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lr,load,store,*\")])\n+   (set_attr \"type\" \"floaddf,floaddf,floaddf,fstoredf,fstoredf,lr,load,store,*\")])\n \n (define_insn \"*movdf_31\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,R,T,d,Q,d,o,Q\")\n@@ -1414,7 +1414,7 @@\n    #\n    #\"\n   [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RS,RS,*,*,SS\")\n-   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lm,stm,*,*,*\")])\n+   (set_attr \"type\" \"floaddf,floaddf,floaddf,fstoredf,fstoredf,lm,stm,*,*,*\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -1491,7 +1491,7 @@\n    sty\\t%1,%0\n    #\"\n   [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY,SS\")\n-   (set_attr \"type\" \"floads,floads,floads,fstores,fstores,\n+   (set_attr \"type\" \"floadsf,floadsf,floadsf,fstoresf,fstoresf,\n                      lr,load,load,store,store,*\")])\n \n ;\n@@ -3074,7 +3074,7 @@\n    ler\\t%0,%1\n    le\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"   \"floads,floads\")])\n+   (set_attr \"type\"   \"floadsf\")])\n \n ;\n ; extendsfdf2 instruction pattern(s).\n@@ -3100,7 +3100,7 @@\n    ldebr\\t%0,%1\n    ldeb\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"   \"floads,floads\")])\n+   (set_attr \"type\"   \"floadsf\")])\n \n (define_insn \"extendsfdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -3111,7 +3111,7 @@\n    sdr\\t%0,%0\\;ler\\t%0,%1\n    sdr\\t%0,%0\\;le\\t%0,%1\"\n   [(set_attr \"length\"   \"4,6\")\n-   (set_attr \"type\"     \"floads,floads\")])\n+   (set_attr \"type\"     \"floadsf\")])\n \n \n ;;\n@@ -3536,7 +3536,7 @@\n    adbr\\t%0,%2\n    adb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*adddf3_cc\"\n   [(set (reg 33)\n@@ -3550,7 +3550,7 @@\n    adbr\\t%0,%2\n    adb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*adddf3_cconly\"\n   [(set (reg 33)\n@@ -3563,7 +3563,7 @@\n   adbr\\t%0,%2\n   adb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*adddf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -3575,7 +3575,7 @@\n    adr\\t%0,%2\n    ad\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n ;\n ; addsf3 instruction pattern(s).\n@@ -3600,7 +3600,7 @@\n    aebr\\t%0,%2\n    aeb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n (define_insn \"*addsf3_cc\"\n   [(set (reg 33)\n@@ -3614,7 +3614,7 @@\n    aebr\\t%0,%2\n    aeb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n (define_insn \"*addsf3_cconly\"\n   [(set (reg 33)\n@@ -3627,9 +3627,9 @@\n    aebr\\t%0,%2\n    aeb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n-(define_insn \"*addsf3\"\n+(define_insn \"*addsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (plus:SF (match_operand:SF 1 \"nonimmediate_operand\" \"%0,0\")\n                  (match_operand:SF 2 \"general_operand\" \"f,R\")))\n@@ -3639,7 +3639,7 @@\n    aer\\t%0,%2\n    ae\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n \n ;;\n@@ -4004,7 +4004,7 @@\n    sdbr\\t%0,%2\n    sdb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*subdf3_cc\"\n   [(set (reg 33)\n@@ -4018,7 +4018,7 @@\n    sdbr\\t%0,%2\n    sdb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*subdf3_cconly\"\n   [(set (reg 33)\n@@ -4031,7 +4031,7 @@\n    sdbr\\t%0,%2\n    sdb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*subdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4043,7 +4043,7 @@\n    sdr\\t%0,%2\n    sd\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimpd,fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n ;\n ; subsf3 instruction pattern(s).\n@@ -4068,7 +4068,7 @@\n    sebr\\t%0,%2\n    seb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n (define_insn \"*subsf3_cc\"\n   [(set (reg 33)\n@@ -4082,7 +4082,7 @@\n    sebr\\t%0,%2\n    seb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n (define_insn \"*subsf3_cconly\"\n   [(set (reg 33)\n@@ -4095,7 +4095,7 @@\n    sebr\\t%0,%2\n    seb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n (define_insn \"*subsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -4107,7 +4107,7 @@\n    ser\\t%0,%2\n    se\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fsimps,fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n \n ;;\n@@ -4339,7 +4339,7 @@\n    mdbr\\t%0,%2\n    mdb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fmuld\")])\n+   (set_attr \"type\"     \"fmuldf\")])\n \n (define_insn \"*muldf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4350,7 +4350,7 @@\n    mdr\\t%0,%2\n    md\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"    \"fmuld\")])\n+   (set_attr \"type\"    \"fmuldf\")])\n \n (define_insn \"*fmadddf\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4362,7 +4362,7 @@\n    madbr\\t%0,%1,%2\n    madb\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmuld\")])\n+   (set_attr \"type\" \"fmuldf\")])\n \n (define_insn \"*fmsubdf\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4374,7 +4374,7 @@\n    msdbr\\t%0,%1,%2\n    msdb\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmuld\")])\n+   (set_attr \"type\" \"fmuldf\")])\n \n ;\n ; mulsf3 instruction pattern(s).\n@@ -4396,7 +4396,7 @@\n    meebr\\t%0,%2\n    meeb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fmuls\")])\n+   (set_attr \"type\"     \"fmulsf\")])\n \n (define_insn \"*mulsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -4407,7 +4407,7 @@\n    mer\\t%0,%2\n    me\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fmuls\")])\n+   (set_attr \"type\"     \"fmulsf\")])\n \n (define_insn \"*fmaddsf\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -4419,7 +4419,7 @@\n    maebr\\t%0,%1,%2\n    maeb\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmuls\")])\n+   (set_attr \"type\" \"fmulsf\")])\n \n (define_insn \"*fmsubsf\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n@@ -4431,7 +4431,7 @@\n    msebr\\t%0,%1,%2\n    mseb\\t%0,%1,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\" \"fmuls\")])\n+   (set_attr \"type\" \"fmulsf\")])\n \n ;;\n ;;- Divide and modulo instructions.\n@@ -4889,7 +4889,7 @@\n    ddbr\\t%0,%2\n    ddb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fdivd\")])\n+   (set_attr \"type\"     \"fdivdf\")])\n \n (define_insn \"*divdf3_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4900,7 +4900,7 @@\n    ddr\\t%0,%2\n    dd\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fdivd\")])\n+   (set_attr \"type\"     \"fdivdf\")])\n \n ;\n ; divsf3 instruction pattern(s).\n@@ -4922,9 +4922,9 @@\n    debr\\t%0,%2\n    deb\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RRE,RXE\")\n-   (set_attr \"type\"     \"fdivs\")])\n+   (set_attr \"type\"     \"fdivsf\")])\n \n-(define_insn \"*divsf3\"\n+(define_insn \"*divsf3_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n         (div:SF (match_operand:SF 1 \"register_operand\" \"0,0\")\n                 (match_operand:SF 2 \"general_operand\" \"f,R\")))]\n@@ -4933,7 +4933,7 @@\n    der\\t%0,%2\n    de\\t%0,%2\"\n   [(set_attr \"op_type\"  \"RR,RX\")\n-   (set_attr \"type\"     \"fdivs\")])\n+   (set_attr \"type\"     \"fdivsf\")])\n \n \n ;;\n@@ -5913,7 +5913,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcdbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n   \n (define_insn \"*negdf2_cconly\"\n   [(set (reg 33)\n@@ -5923,7 +5923,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcdbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n   \n (define_insn \"*negdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -5932,7 +5932,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcdbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*negdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -5941,7 +5941,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lcdr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n ;\n ; negsf2 instruction pattern(s).\n@@ -5964,7 +5964,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n   \n (define_insn \"*negsf2_cconly\"\n   [(set (reg 33)\n@@ -5974,7 +5974,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n   \n (define_insn \"*negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -5983,16 +5983,16 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lcebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n-(define_insn \"*negsf2\"\n+(define_insn \"*negsf2_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n         (neg:SF (match_operand:SF 1 \"register_operand\" \"f\")))\n    (clobber (reg:CC 33))]\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lcer\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n \n ;;\n@@ -6071,7 +6071,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpdbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n   \n (define_insn \"*absdf2_cconly\"\n   [(set (reg 33)\n@@ -6081,7 +6081,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpdbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n   \n (define_insn \"*absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -6090,7 +6090,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpdbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*absdf2_ibm\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -6099,7 +6099,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lpdr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n ;\n ; abssf2 instruction pattern(s).\n@@ -6122,7 +6122,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n   \n (define_insn \"*abssf2_cconly\"\n   [(set (reg 33)\n@@ -6132,7 +6132,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n   \n (define_insn \"*abssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -6141,7 +6141,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lpebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n (define_insn \"*abssf2_ibm\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -6150,7 +6150,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IBM_FLOAT\"\n   \"lper\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RR\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n ;;\n ;;- Negated absolute value instructions\n@@ -6221,7 +6221,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lndbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n   \n (define_insn \"*negabsdf2_cconly\"\n   [(set (reg 33)\n@@ -6231,7 +6231,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lndbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n   \n (define_insn \"*negabsdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n@@ -6240,7 +6240,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lndbr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimpd\")])\n+   (set_attr \"type\"     \"fsimpdf\")])\n \n (define_insn \"*negabssf2_cc\"\n   [(set (reg 33)\n@@ -6251,7 +6251,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lnebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n   \n (define_insn \"*negabssf2_cconly\"\n   [(set (reg 33)\n@@ -6261,7 +6261,7 @@\n   \"s390_match_ccmode (insn, CCSmode) && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lnebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n   \n (define_insn \"*negabssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -6270,7 +6270,7 @@\n   \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n   \"lnebr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n-   (set_attr \"type\"     \"fsimps\")])\n+   (set_attr \"type\"     \"fsimpsf\")])\n \n ;;\n ;;- Square root instructions.\n@@ -6288,7 +6288,7 @@\n    sqdbr\\t%0,%1\n    sqdb\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"type\" \"fsqrtd\")])\n+   (set_attr \"type\" \"fsqrtdf\")])\n \n ;\n ; sqrtsf2 instruction pattern(s).\n@@ -6302,7 +6302,7 @@\n    sqebr\\t%0,%1\n    sqeb\\t%0,%1\"\n   [(set_attr \"op_type\" \"RRE,RXE\")\n-   (set_attr \"type\" \"fsqrts\")])\n+   (set_attr \"type\" \"fsqrtsf\")])\n \n ;;\n ;;- One complement instructions."}]}