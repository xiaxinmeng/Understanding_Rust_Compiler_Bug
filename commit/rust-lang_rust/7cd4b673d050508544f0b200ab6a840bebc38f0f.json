{"sha": "7cd4b673d050508544f0b200ab6a840bebc38f0f", "node_id": "C_kwDOAAsO6NoAKDdjZDRiNjczZDA1MDUwODU0NGYwYjIwMGFiNmE4NDBiZWJjMzhmMGY", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-25T05:19:21Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-25T05:19:21Z"}, "message": "fix #104700, account for item-local in inner scope for E0425", "tree": {"sha": "6f3a1b897d2f4999d214f004276a74d28010f53d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f3a1b897d2f4999d214f004276a74d28010f53d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cd4b673d050508544f0b200ab6a840bebc38f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cd4b673d050508544f0b200ab6a840bebc38f0f", "html_url": "https://github.com/rust-lang/rust/commit/7cd4b673d050508544f0b200ab6a840bebc38f0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cd4b673d050508544f0b200ab6a840bebc38f0f/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dda298ad39a64e019a3511139c5b13ac0a18e54", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dda298ad39a64e019a3511139c5b13ac0a18e54", "html_url": "https://github.com/rust-lang/rust/commit/1dda298ad39a64e019a3511139c5b13ac0a18e54"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "8faef4c63749d1cdd399b295ea96a087c140f3a0", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4b673d050508544f0b200ab6a840bebc38f0f/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4b673d050508544f0b200ab6a840bebc38f0f/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=7cd4b673d050508544f0b200ab6a840bebc38f0f", "patch": "@@ -566,6 +566,9 @@ struct LateResolutionVisitor<'a, 'b, 'ast> {\n     /// FIXME #4948: Reuse ribs to avoid allocation.\n     ribs: PerNS<Vec<Rib<'a>>>,\n \n+    /// Previous poped `rib`, only used for diagnostic.\n+    last_block_rib: Option<Rib<'a>>,\n+\n     /// The current set of local scopes, for labels.\n     label_ribs: Vec<Rib<'a, NodeId>>,\n \n@@ -1168,6 +1171,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 type_ns: vec![Rib::new(start_rib_kind)],\n                 macro_ns: vec![Rib::new(start_rib_kind)],\n             },\n+            last_block_rib: None,\n             label_ribs: Vec::new(),\n             lifetime_ribs: Vec::new(),\n             lifetime_elision_candidates: None,\n@@ -3756,7 +3760,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             self.ribs[ValueNS].pop();\n             self.label_ribs.pop();\n         }\n-        self.ribs[ValueNS].pop();\n+        self.last_block_rib = self.ribs[ValueNS].pop();\n         if anonymous_module.is_some() {\n             self.ribs[TypeNS].pop();\n         }"}, {"sha": "b3dd5bb28a703cfdb2d7a1f204ae0ac9d14d6a13", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4b673d050508544f0b200ab6a840bebc38f0f/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4b673d050508544f0b200ab6a840bebc38f0f/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=7cd4b673d050508544f0b200ab6a840bebc38f0f", "patch": "@@ -614,6 +614,22 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 return (true, candidates);\n             }\n         }\n+\n+        // Try to find in last block rib\n+        if let Some(rib) = &self.last_block_rib {\n+            for (ident, &res) in &rib.bindings {\n+                if let Res::Local(_) = res && path.len() == 1 &&\n+                    ident.span.eq_ctxt(path[0].ident.span) &&\n+                    ident.name == path[0].ident.name {\n+                    err.span_help(\n+                        ident.span,\n+                        &format!(\"the binding `{}` is available in a different scope in the same function\", path_str),\n+                    );\n+                    return (true, candidates);\n+                }\n+            }\n+        }\n+\n         return (false, candidates);\n     }\n "}, {"sha": "e8f28c113e3ad9114d246d0172fee0133f3b3929", "filename": "src/test/ui/resolve/issue-104700-inner_scope.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4b673d050508544f0b200ab6a840bebc38f0f/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4b673d050508544f0b200ab6a840bebc38f0f/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.rs?ref=7cd4b673d050508544f0b200ab6a840bebc38f0f", "patch": "@@ -0,0 +1,11 @@\n+fn main() {\n+    let foo = 1;\n+    {\n+        let bar = 2;\n+        let test_func = |x| x > 3;\n+    }\n+    if bar == 2 { //~ ERROR cannot find value\n+        println!(\"yes\");\n+    }\n+    test_func(1); //~ ERROR cannot find function\n+}"}, {"sha": "051b234fc72d8b939201f5bd2297db15d826e01f", "filename": "src/test/ui/resolve/issue-104700-inner_scope.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4b673d050508544f0b200ab6a840bebc38f0f/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4b673d050508544f0b200ab6a840bebc38f0f/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-104700-inner_scope.stderr?ref=7cd4b673d050508544f0b200ab6a840bebc38f0f", "patch": "@@ -0,0 +1,21 @@\n+error[E0425]: cannot find value `bar` in this scope\n+  --> $DIR/issue-104700-inner_scope.rs:7:8\n+   |\n+LL |     if bar == 2 {\n+   |        ^^^\n+   |\n+help: the binding `bar` is available in a different scope in the same function\n+  --> $DIR/issue-104700-inner_scope.rs:4:13\n+   |\n+LL |         let bar = 2;\n+   |             ^^^\n+\n+error[E0425]: cannot find function `test_func` in this scope\n+  --> $DIR/issue-104700-inner_scope.rs:10:5\n+   |\n+LL |     test_func(1);\n+   |     ^^^^^^^^^ not found in this scope\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}