{"sha": "c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYTVkMzFmMzA3MTJhYTZlMThiOWIzNWQxMjRlNGQ4YTRjMzNjYTQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-05-29T19:24:47Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-05-29T19:24:47Z"}, "message": "Rollup merge of #25866 - jooert:update_guidelines, r=steveklabnik\n\nSo that rust-guidelines can be deleted and src/doc/style can prosper as the official home of the rust guidelines. :smiley:", "tree": {"sha": "f6c1ca56979bc95fedbb2d026c0819bd45d87830", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6c1ca56979bc95fedbb2d026c0819bd45d87830"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "html_url": "https://github.com/rust-lang/rust/commit/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b1f37c595c73ce44ff16d8f0a6c33f27759f9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b1f37c595c73ce44ff16d8f0a6c33f27759f9a", "html_url": "https://github.com/rust-lang/rust/commit/c7b1f37c595c73ce44ff16d8f0a6c33f27759f9a"}, {"sha": "adac861db28b79f52455b1fd3121cd1964d0aceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/adac861db28b79f52455b1fd3121cd1964d0aceb", "html_url": "https://github.com/rust-lang/rust/commit/adac861db28b79f52455b1fd3121cd1964d0aceb"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "611cd564ccac7224ceda954abe8dcaca542083b6", "filename": "src/doc/style/features/functions-and-methods/README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Ffeatures%2Ffunctions-and-methods%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Ffeatures%2Ffunctions-and-methods%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Ffeatures%2Ffunctions-and-methods%2FREADME.md?ref=c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "patch": "@@ -20,6 +20,7 @@ for any operation that is clearly associated with a particular\n type.\n \n Methods have numerous advantages over functions:\n+\n * They do not need to be imported or qualified to be used: all you\n   need is a value of the appropriate type.\n * Their invocation performs autoborrowing (including mutable borrows)."}, {"sha": "072021194c13e5676a281cf404dbbfa46442c1ae", "filename": "src/doc/style/features/functions-and-methods/input.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Ffeatures%2Ffunctions-and-methods%2Finput.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Ffeatures%2Ffunctions-and-methods%2Finput.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Ffeatures%2Ffunctions-and-methods%2Finput.md?ref=c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "patch": "@@ -159,7 +159,7 @@ fn foo(a: u8) { ... }\n Note that\n [`ascii::Ascii`](http://static.rust-lang.org/doc/master/std/ascii/struct.Ascii.html)\n is a _wrapper_ around `u8` that guarantees the highest bit is zero; see\n-[newtype patterns]() for more details on creating typesafe wrappers.\n+[newtype patterns](../types/newtype.md) for more details on creating typesafe wrappers.\n \n Static enforcement usually comes at little run-time cost: it pushes the\n costs to the boundaries (e.g. when a `u8` is first converted into an"}, {"sha": "01dff3dcceaf18f23e31252fef41d837fba35ba4", "filename": "src/doc/style/features/let.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Ffeatures%2Flet.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Ffeatures%2Flet.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Ffeatures%2Flet.md?ref=c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "patch": "@@ -34,7 +34,7 @@ Prefer\n \n ```rust\n let foo = match bar {\n-    Baz  => 0,\n+    Baz => 0,\n     Quux => 1\n };\n ```\n@@ -44,7 +44,7 @@ over\n ```rust\n let foo;\n match bar {\n-    Baz  => {\n+    Baz => {\n         foo = 0;\n     }\n     Quux => {\n@@ -61,8 +61,8 @@ conditional expression.\n Prefer\n \n ```rust\n-s.iter().map(|x| x * 2)\n-        .collect::<Vec<_>>()\n+let v = s.iter().map(|x| x * 2)\n+                .collect::<Vec<_>>();\n ```\n \n over"}, {"sha": "348be516e374d7aea536f22625aab9a8aecb86e9", "filename": "src/doc/style/ownership/builders.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Fownership%2Fbuilders.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4/src%2Fdoc%2Fstyle%2Fownership%2Fbuilders.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fownership%2Fbuilders.md?ref=c2a5d31f30712aa6e18b9b35d124e4d8a4c33ca4", "patch": "@@ -16,7 +16,7 @@ If `T` is such a data structure, consider introducing a `T` _builder_:\n    value. When possible, choose a better name: e.g. `Command` is the builder for\n    `Process`.\n 2. The builder constructor should take as parameters only the data _required_ to\n-   to make a `T`.\n+   make a `T`.\n 3. The builder should offer a suite of convenient methods for configuration,\n    including setting up compound inputs (like slices) incrementally.\n    These methods should return `self` to allow chaining."}]}