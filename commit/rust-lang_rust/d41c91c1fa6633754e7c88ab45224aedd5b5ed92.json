{"sha": "d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MWM5MWMxZmE2NjMzNzU0ZTdjODhhYjQ1MjI0YWVkZDViNWVkOTI=", "commit": {"author": {"name": "Marcin Fatyga", "email": "marcinf@google.com", "date": "2016-10-09T08:46:11Z"}, "committer": {"name": "Marcin Fatyga", "email": "marcinf@google.com", "date": "2016-10-09T10:01:17Z"}, "message": "Add or and or_else for ordering.", "tree": {"sha": "157365b97cb1be9d1aa1b45ddbf03c727030dc9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/157365b97cb1be9d1aa1b45ddbf03c727030dc9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "html_url": "https://github.com/rust-lang/rust/commit/d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/comments", "author": {"login": "rednum", "id": 754852, "node_id": "MDQ6VXNlcjc1NDg1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/754852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rednum", "html_url": "https://github.com/rednum", "followers_url": "https://api.github.com/users/rednum/followers", "following_url": "https://api.github.com/users/rednum/following{/other_user}", "gists_url": "https://api.github.com/users/rednum/gists{/gist_id}", "starred_url": "https://api.github.com/users/rednum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rednum/subscriptions", "organizations_url": "https://api.github.com/users/rednum/orgs", "repos_url": "https://api.github.com/users/rednum/repos", "events_url": "https://api.github.com/users/rednum/events{/privacy}", "received_events_url": "https://api.github.com/users/rednum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rednum", "id": 754852, "node_id": "MDQ6VXNlcjc1NDg1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/754852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rednum", "html_url": "https://github.com/rednum", "followers_url": "https://api.github.com/users/rednum/followers", "following_url": "https://api.github.com/users/rednum/following{/other_user}", "gists_url": "https://api.github.com/users/rednum/gists{/gist_id}", "starred_url": "https://api.github.com/users/rednum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rednum/subscriptions", "organizations_url": "https://api.github.com/users/rednum/orgs", "repos_url": "https://api.github.com/users/rednum/repos", "events_url": "https://api.github.com/users/rednum/events{/privacy}", "received_events_url": "https://api.github.com/users/rednum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6673db58d117d5c554559ae51b4ddf0aae3de00", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6673db58d117d5c554559ae51b4ddf0aae3de00", "html_url": "https://github.com/rust-lang/rust/commit/c6673db58d117d5c554559ae51b4ddf0aae3de00"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "58b3db0ad39594edcb3cb735bd67c34b6fb3b481", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "patch": "@@ -245,6 +245,76 @@ impl Ordering {\n             Greater => Less,\n         }\n     }\n+\n+    /// Chain two orderings. \n+    /// \n+    /// Returns `self` when it's not `Equal`. Otherwise returns `other`.\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::cmp::Ordering;\n+    ///\n+    /// let result = Ordering::Equal.or(Ordering::Less);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.or(Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.or(Ordering::Greater);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Equal.or(Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Equal);\n+    ///\n+    /// let x = (1, 2, 7);\n+    /// let y = (1, 5, 3);\n+    /// let result = x.0.cmp(y.0).or(x.1.cmp(y.1)).or(x.2.cmp(y.2));\n+    ///\n+    /// assert_eq!(result, Ordering::Less);\n+    /// ```\n+    #[unstable(feature = \"ordering_chaining\", issue = \"37053\")]\n+    pub fn or(self, other: Ordering) -> Ordering {\n+        match self {\n+            Equal => other,\n+            _ => self,\n+        }\n+    }\n+\n+    /// Chain the ordering with given function.\n+    /// \n+    /// Returns `self` when it's not `Equal`. Otherwise calls `f` and returns\n+    /// the result.\n+    /// \n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::cmp::Ordering;\n+    ///\n+    /// let result = Ordering::Equal.or_else(|| Ordering::Less);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.or_else(|| Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.or_else(|| Ordering::Greater);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Equal.or_else(|| Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Equal);\n+    ///\n+    /// let x = (1, 2, 7);\n+    /// let y = (1, 5, 3);\n+    /// let result = x.0.cmp(&y.0).or_else(|| x.1.cmp(&y.1)).or_else(|| x.2.cmp(&y.2));\n+    ///\n+    /// assert_eq!(result, Ordering::Less);\n+    /// ```\n+    #[unstable(feature = \"ordering_chaining\", issue = \"37053\")]\n+    pub fn or_else<F: FnOnce() -> Ordering>(self, f: F) -> Ordering {\n+        match self {\n+            Equal => f(),\n+            _ => self,\n+        }\n+    }\n }\n \n /// Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order)."}, {"sha": "94f66e4d15180171e35e179502640fc7c0a97565", "filename": "src/libcoretest/cmp.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/src%2Flibcoretest%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/src%2Flibcoretest%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fcmp.rs?ref=d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "patch": "@@ -41,6 +41,32 @@ fn test_ordering_order() {\n     assert_eq!(Greater.cmp(&Less), Greater);\n }\n \n+#[test]\n+fn test_ordering_or() {\n+    assert_eq!(Equal.or(Less), Less);\n+    assert_eq!(Equal.or(Equal), Equal);\n+    assert_eq!(Equal.or(Greater), Greater);\n+    assert_eq!(Less.or(Less), Less);\n+    assert_eq!(Less.or(Equal), Less);\n+    assert_eq!(Less.or(Greater), Less);\n+    assert_eq!(Greater.or(Less), Greater);\n+    assert_eq!(Greater.or(Equal), Greater);\n+    assert_eq!(Greater.or(Greater), Greater);\n+}\n+\n+#[test]\n+fn test_ordering_or_else() {\n+    assert_eq!(Equal.or_else(|| Less), Less);\n+    assert_eq!(Equal.or_else(|| Equal), Equal);\n+    assert_eq!(Equal.or_else(|| Greater), Greater);\n+    assert_eq!(Less.or_else(|| Less), Less);\n+    assert_eq!(Less.or_else(|| Equal), Less);\n+    assert_eq!(Less.or_else(|| Greater), Less);\n+    assert_eq!(Greater.or_else(|| Less), Greater);\n+    assert_eq!(Greater.or_else(|| Equal), Greater);\n+    assert_eq!(Greater.or_else(|| Greater), Greater);\n+}\n+\n #[test]\n fn test_user_defined_eq() {\n     // Our type."}, {"sha": "aad0d2fedaa104d7a10b90ccef0ffe51176b4a51", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d41c91c1fa6633754e7c88ab45224aedd5b5ed92/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=d41c91c1fa6633754e7c88ab45224aedd5b5ed92", "patch": "@@ -34,6 +34,7 @@\n #![feature(unique)]\n #![feature(iter_max_by)]\n #![feature(iter_min_by)]\n+#![feature(ordering_chaining)]\n \n extern crate core;\n extern crate test;"}]}