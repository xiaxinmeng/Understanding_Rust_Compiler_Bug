{"sha": "8ec3a833d5082a77e74a30c2d3d353ba7f5df644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzNhODMzZDUwODJhNzdlNzRhMzBjMmQzZDM1M2JhN2Y1ZGY2NDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-26T19:44:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-26T19:44:12Z"}, "message": "Auto merge of #21617 - alexcrichton:less-quotes, r=nikomatsakis\n\nThis ends up propagating all the way out to the output of dep-info which then\r\nmakes Cargo think that files are not existent (it thinks the files have quotes\r\nin their name) when they in fact do.", "tree": {"sha": "c37ba2ade579e261fa37ecdc94e5d514de23f758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37ba2ade579e261fa37ecdc94e5d514de23f758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec3a833d5082a77e74a30c2d3d353ba7f5df644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec3a833d5082a77e74a30c2d3d353ba7f5df644", "html_url": "https://github.com/rust-lang/rust/commit/8ec3a833d5082a77e74a30c2d3d353ba7f5df644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec3a833d5082a77e74a30c2d3d353ba7f5df644/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16286f5cf921a9de463d8a744c33f49837698c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/16286f5cf921a9de463d8a744c33f49837698c3d", "html_url": "https://github.com/rust-lang/rust/commit/16286f5cf921a9de463d8a744c33f49837698c3d"}, {"sha": "0dac5685783631dc4ecf3e865229a3747fe81943", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dac5685783631dc4ecf3e865229a3747fe81943", "html_url": "https://github.com/rust-lang/rust/commit/0dac5685783631dc4ecf3e865229a3747fe81943"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "e0d4f69a34cddb5dcc238acd7b1a53cefef8301c", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ec3a833d5082a77e74a30c2d3d353ba7f5df644/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec3a833d5082a77e74a30c2d3d353ba7f5df644/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=8ec3a833d5082a77e74a30c2d3d353ba7f5df644", "patch": "@@ -364,9 +364,10 @@ impl CodeMap {\n         };\n \n         // Append '\\n' in case it's not already there.\n-        // This is a workaround to prevent CodeMap.lookup_filemap_idx from accidentally\n-        // overflowing into the next filemap in case the last byte of span is also the last\n-        // byte of filemap, which leads to incorrect results from CodeMap.span_to_*.\n+        // This is a workaround to prevent CodeMap.lookup_filemap_idx from\n+        // accidentally overflowing into the next filemap in case the last byte\n+        // of span is also the last byte of filemap, which leads to incorrect\n+        // results from CodeMap.span_to_*.\n         if src.len() > 0 && !src.ends_with(\"\\n\") {\n             src.push('\\n');\n         }"}, {"sha": "0d74af5caa400729dbddafd1335adc46e2615780", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ec3a833d5082a77e74a30c2d3d353ba7f5df644/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec3a833d5082a77e74a30c2d3d353ba7f5df644/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=8ec3a833d5082a77e74a30c2d3d353ba7f5df644", "patch": "@@ -135,7 +135,7 @@ pub fn expand_include_str(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     let bytes = match File::open(&file).read_to_end() {\n         Err(e) => {\n             cx.span_err(sp,\n-                        &format!(\"couldn't read {:?}: {}\",\n+                        &format!(\"couldn't read {}: {}\",\n                                 file.display(),\n                                 e)[]);\n             return DummyResult::expr(sp);\n@@ -146,15 +146,15 @@ pub fn expand_include_str(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n         Ok(src) => {\n             // Add this input file to the code map to make it available as\n             // dependency information\n-            let filename = format!(\"{:?}\", file.display());\n+            let filename = format!(\"{}\", file.display());\n             let interned = token::intern_and_get_ident(&src[]);\n             cx.codemap().new_filemap(filename, src);\n \n             base::MacExpr::new(cx.expr_str(sp, interned))\n         }\n         Err(_) => {\n             cx.span_err(sp,\n-                        &format!(\"{:?} wasn't a utf-8 file\",\n+                        &format!(\"{} wasn't a utf-8 file\",\n                                 file.display())[]);\n             return DummyResult::expr(sp);\n         }\n@@ -171,7 +171,7 @@ pub fn expand_include_bytes(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     match File::open(&file).read_to_end() {\n         Err(e) => {\n             cx.span_err(sp,\n-                        &format!(\"couldn't read {:?}: {}\", file.display(), e)[]);\n+                        &format!(\"couldn't read {}: {}\", file.display(), e)[]);\n             return DummyResult::expr(sp);\n         }\n         Ok(bytes) => {"}]}