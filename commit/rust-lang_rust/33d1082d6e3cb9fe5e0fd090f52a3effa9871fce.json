{"sha": "33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZDEwODJkNmUzY2I5ZmU1ZTBmZDA5MGY1MmEzZWZmYTk4NzFmY2U=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-08T22:55:18Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-09T14:18:05Z"}, "message": "review comment: review wording or missing return error", "tree": {"sha": "a363eb2acc0ae2bc65399b14a2729844ebf80680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a363eb2acc0ae2bc65399b14a2729844ebf80680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "html_url": "https://github.com/rust-lang/rust/commit/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a54945b6f637eadd4848874db39b49d2764839f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a54945b6f637eadd4848874db39b49d2764839f", "html_url": "https://github.com/rust-lang/rust/commit/5a54945b6f637eadd4848874db39b49d2764839f"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "086f3d419576add588f2362ba646705fe7913a88", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -3711,7 +3711,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         if let Some(fn_span) = fn_span {\n                             err.span_label(\n                                 fn_span,\n-                                \"this function's body doesn't `return` a value\",\n+                                \"this function implicitly returns `()` as its body has no tail \\\n+                                 or `return` expression\",\n                             );\n                         }\n                     }, false);"}, {"sha": "4c421e6ada405ef7a5f7cb404e86390b2eafcb25", "filename": "src/test/ui/block-result/consider-removing-last-semi.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn f() -> String {\n    |    -      ^^^^^^ expected struct `std::string::String`, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     0u8;\n LL |     \"bla\".to_string();\n    |                      - help: consider removing this semicolon\n@@ -18,7 +18,7 @@ error[E0308]: mismatched types\n LL | fn g() -> String {\n    |    -      ^^^^^^ expected struct `std::string::String`, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     \"this won't work\".to_string();\n LL |     \"removeme\".to_string();\n    |                           - help: consider removing this semicolon"}, {"sha": "a0bdbd693f2cfc8c2c2af7d55dabba8ac150455c", "filename": "src/test/ui/block-result/issue-11714.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn blah() -> i32 {\n    |    ----      ^^^ expected i32, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     ;\n    |     - help: consider removing this semicolon"}, {"sha": "53f8eaa1ae227b1576079f8c81477a795419636c", "filename": "src/test/ui/block-result/issue-13428.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn foo() -> String {\n    |    ---      ^^^^^^ expected struct `std::string::String`, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     ;\n    |     - help: consider removing this semicolon\n@@ -18,7 +18,7 @@ error[E0308]: mismatched types\n LL | fn bar() -> String {\n    |    ---      ^^^^^^ expected struct `std::string::String`, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     \"foobar\".to_string()\n LL |     ;\n    |     - help: consider removing this semicolon"}, {"sha": "fde41567d80024b86d4511bfe40d579775d5df1a", "filename": "src/test/ui/coercion/coercion-missing-tail-expected-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fcoercion%2Fcoercion-missing-tail-expected-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fcoercion%2Fcoercion-missing-tail-expected-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion%2Fcoercion-missing-tail-expected-type.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn plus_one(x: i32) -> i32 {\n    |    --------            ^^^ expected i32, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     x + 1;\n    |          - help: consider removing this semicolon\n    |\n@@ -17,7 +17,7 @@ error[E0308]: mismatched types\n LL | fn foo() -> Result<u8, u64> {\n    |    ---      ^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     Ok(1);\n    |          - help: consider removing this semicolon\n    |"}, {"sha": "138b058f44d9e88c9959fe11989627c530510167", "filename": "src/test/ui/issues/issue-32323.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-32323.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-32323.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32323.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | pub fn f<'a, T: Tr<'a>>() -> <T as Tr<'a>>::Out {}\n    |        -                     ^^^^^^^^^^^^^^^^^^ expected associated type, found ()\n    |        |\n-   |        this function's body doesn't `return` a value\n+   |        this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `<T as Tr<'a>>::Out`\n               found type `()`"}, {"sha": "e90531bce3e867757073649dd259893a20b2bfe8", "filename": "src/test/ui/issues/issue-43162.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -16,7 +16,7 @@ error[E0308]: mismatched types\n LL | fn foo() -> bool {\n    |    ---      ^^^^ expected bool, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |\n LL |     break true;\n    |               - help: consider removing this semicolon"}, {"sha": "4a27531b4be8fb3e74d09b1d5e5993cfb4155a55", "filename": "src/test/ui/issues/issue-44023.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-44023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-44023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44023.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn \u10e1\u10d0\u10ed\u10db\u10d4\u10da\u10d0\u10d3_\u10d2\u10d4\u10db\u10e0\u10d8\u10d4\u10da\u10d8_\u10e1\u10d0\u10d3\u10d8\u10da\u10d8 ( ) -> isize {\n    |    ------------------------        ^^^^^ expected isize, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `isize`\n               found type `()`"}, {"sha": "4db3daede758f36e6e7e1b2b8235896cabe7869f", "filename": "src/test/ui/issues/issue-6458-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-6458-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fissues%2Fissue-6458-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6458-4.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn foo(b: bool) -> Result<bool,String> {\n    |    ---             ^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     Err(\"bar\".to_string());\n    |                           - help: consider removing this semicolon\n    |"}, {"sha": "24106f775794cfaecb5796678942db270ff4d30c", "filename": "src/test/ui/liveness/liveness-forgot-ret.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fliveness%2Fliveness-forgot-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fliveness%2Fliveness-forgot-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-forgot-ret.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn f(a: isize) -> isize { if god_exists(a) { return 5; }; }\n    |    -              ^^^^^ expected isize, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `isize`\n               found type `()`"}, {"sha": "9502e4467499c934a247ddc15d56115a6dc591c0", "filename": "src/test/ui/liveness/liveness-missing-ret2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fliveness%2Fliveness-missing-ret2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fliveness%2Fliveness-missing-ret2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-missing-ret2.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn f() -> isize {\n    |    -      ^^^^^ expected isize, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `isize`\n               found type `()`"}, {"sha": "7ee4cb178a6c5ff6546df679344a0d61e2c5e29c", "filename": "src/test/ui/liveness/liveness-return-last-stmt-semi.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -5,7 +5,7 @@ LL | macro_rules! test { () => { fn foo() -> i32 { 1; } } }\n    |                                ---      ^^^    - help: consider removing this semicolon\n    |                                |        |\n    |                                |        expected i32, found ()\n-   |                                this function's body doesn't `return` a value\n+   |                                this function implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     test!();\n    |     -------- in this macro invocation\n@@ -19,7 +19,7 @@ error[E0308]: mismatched types\n LL | fn no_return() -> i32 {}\n    |    ---------      ^^^ expected i32, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `i32`\n               found type `()`\n@@ -30,7 +30,7 @@ error[E0308]: mismatched types\n LL | fn bar(x: u32) -> u32 {\n    |    ---            ^^^ expected u32, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n LL |     x * 2;\n    |          - help: consider removing this semicolon\n    |\n@@ -43,7 +43,7 @@ error[E0308]: mismatched types\n LL | fn baz(x: u64) -> u32 {\n    |    ---            ^^^ expected u32, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `u32`\n               found type `()`"}, {"sha": "541e9fa4a4016491c3d7ba02a146f2a76c35d472", "filename": "src/test/ui/missing/missing-return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fmissing%2Fmissing-return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fmissing%2Fmissing-return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing%2Fmissing-return.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | fn f() -> isize { }\n    |    -      ^^^^^ expected isize, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `isize`\n               found type `()`"}, {"sha": "40f64ec8fd0e2c30682d450c8d8fe8bb887c13ee", "filename": "src/test/ui/parser/issue-62881.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -19,7 +19,7 @@ error[E0308]: mismatched types\n LL | fn f() -> isize { fn f() -> isize {} pub f<\n    |                      -      ^^^^^ expected isize, found ()\n    |                      |\n-   |                      this function's body doesn't `return` a value\n+   |                      this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `isize`\n               found type `()`"}, {"sha": "4c872d0c9d367b945e70a9b013def2c290ff57f5", "filename": "src/test/ui/parser/issue-62895.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fparser%2Fissue-62895.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d1082d6e3cb9fe5e0fd090f52a3effa9871fce/src%2Ftest%2Fui%2Fparser%2Fissue-62895.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62895.stderr?ref=33d1082d6e3cb9fe5e0fd090f52a3effa9871fce", "patch": "@@ -38,7 +38,7 @@ error[E0308]: mismatched types\n LL | fn v() -> isize {\n    |    -      ^^^^^ expected isize, found ()\n    |    |\n-   |    this function's body doesn't `return` a value\n+   |    this function implicitly returns `()` as its body has no tail or `return` expression\n    |\n    = note: expected type `isize`\n               found type `()`"}]}