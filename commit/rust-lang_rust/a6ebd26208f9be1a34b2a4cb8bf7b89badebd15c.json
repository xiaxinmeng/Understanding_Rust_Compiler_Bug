{"sha": "a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZWJkMjYyMDhmOWJlMWEzNGIyYTRjYjhiZjdiODliYWRlYmQxNWM=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2015-03-08T20:09:09Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2015-03-08T20:12:07Z"}, "message": "Update example that uses deprecated Thread::scoped", "tree": {"sha": "1591dc286dcc7e70991aea9f020aed619d8dd984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1591dc286dcc7e70991aea9f020aed619d8dd984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c", "html_url": "https://github.com/rust-lang/rust/commit/a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ead9ab84b80ba3b172d529b1d2a2917bb05b4820", "url": "https://api.github.com/repos/rust-lang/rust/commits/ead9ab84b80ba3b172d529b1d2a2917bb05b4820", "html_url": "https://github.com/rust-lang/rust/commit/ead9ab84b80ba3b172d529b1d2a2917bb05b4820"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "3e5b8ec6bef8010e7d0691101a5c592c6ef57e5f", "filename": "src/doc/intro.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c/src%2Fdoc%2Fintro.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c/src%2Fdoc%2Fintro.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fintro.md?ref=a6ebd26208f9be1a34b2a4cb8bf7b89badebd15c", "patch": "@@ -389,11 +389,11 @@ safe concurrent programs.\n Here's an example of a concurrent Rust program:\n \n ```{rust}\n-use std::thread::Thread;\n+use std::thread;\n \n fn main() {\n     let guards: Vec<_> = (0..10).map(|_| {\n-        Thread::scoped(|| {\n+        thread::scoped(|| {\n             println!(\"Hello, world!\");\n         })\n     }).collect();\n@@ -421,13 +421,13 @@ problem.\n Let's see an example. This Rust code will not compile:\n \n ```{rust,ignore}\n-use std::thread::Thread;\n+use std::thread;\n \n fn main() {\n     let mut numbers = vec![1, 2, 3];\n \n     let guards: Vec<_> = (0..3).map(|i| {\n-        Thread::scoped(move || {\n+        thread::scoped(move || {\n             numbers[i] += 1;\n             println!(\"numbers[{}] is {}\", i, numbers[i]);\n         });\n@@ -439,7 +439,7 @@ It gives us this error:\n \n ```text\n 7:25: 10:6 error: cannot move out of captured outer variable in an `FnMut` closure\n-7     Thread::scoped(move || {\n+7     thread::scoped(move || {\n 8       numbers[i] += 1;\n 9       println!(\"numbers[{}] is {}\", i, numbers[i]);\n 10     });\n@@ -471,15 +471,15 @@ mutation doesn't cause a data race.\n Here's what using an Arc with a Mutex looks like:\n \n ```{rust}\n-use std::thread::Thread;\n+use std::thread;\n use std::sync::{Arc,Mutex};\n \n fn main() {\n     let numbers = Arc::new(Mutex::new(vec![1, 2, 3]));\n \n     let guards: Vec<_> = (0..3).map(|i| {\n         let number = numbers.clone();\n-        Thread::scoped(move || {\n+        thread::scoped(move || {\n             let mut array = number.lock().unwrap();\n             array[i] += 1;\n             println!(\"numbers[{}] is {}\", i, array[i]);\n@@ -535,13 +535,13 @@ As an example, Rust's ownership system is _entirely_ at compile time. The\n safety check that makes this an error about moved values:\n \n ```{rust,ignore}\n-use std::thread::Thread;\n+use std::thread;\n \n fn main() {\n     let numbers = vec![1, 2, 3];\n \n     let guards: Vec<_> = (0..3).map(|i| {\n-        Thread::scoped(move || {\n+        thread::scoped(move || {\n             println!(\"{}\", numbers[i]);\n         });\n     }).collect();"}]}