{"sha": "65119765155bcf9e89d3b5c6c6d054254e343e1e", "node_id": "C_kwDOAAsO6NoAKDY1MTE5NzY1MTU1YmNmOWU4OWQzYjVjNmM2ZDA1NDI1NGUzNDNlMWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-04-13T21:07:20Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-04-14T09:55:37Z"}, "message": "remove redundant function param in check_for_self_assign_helper()", "tree": {"sha": "ef418c6a13c44c93dec2469d5050b491ded43d60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef418c6a13c44c93dec2469d5050b491ded43d60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65119765155bcf9e89d3b5c6c6d054254e343e1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65119765155bcf9e89d3b5c6c6d054254e343e1e", "html_url": "https://github.com/rust-lang/rust/commit/65119765155bcf9e89d3b5c6c6d054254e343e1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65119765155bcf9e89d3b5c6c6d054254e343e1e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15abc81967b1c8ed4cde8b0e3aa726aaa9323c0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/15abc81967b1c8ed4cde8b0e3aa726aaa9323c0c", "html_url": "https://github.com/rust-lang/rust/commit/15abc81967b1c8ed4cde8b0e3aa726aaa9323c0c"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8c979a124667c015e860de514c343cd14c913e49", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/65119765155bcf9e89d3b5c6c6d054254e343e1e/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65119765155bcf9e89d3b5c6c6d054254e343e1e/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=65119765155bcf9e89d3b5c6c6d054254e343e1e", "patch": "@@ -158,7 +158,6 @@ impl<'tcx> MarkSymbolVisitor<'tcx> {\n     #[allow(dead_code)] // FIXME(81658): should be used + lint reinstated after #83171 relands.\n     fn check_for_self_assign(&mut self, assign: &'tcx hir::Expr<'tcx>) {\n         fn check_for_self_assign_helper<'tcx>(\n-            tcx: TyCtxt<'tcx>,\n             typeck_results: &'tcx ty::TypeckResults<'tcx>,\n             lhs: &'tcx hir::Expr<'tcx>,\n             rhs: &'tcx hir::Expr<'tcx>,\n@@ -177,7 +176,7 @@ impl<'tcx> MarkSymbolVisitor<'tcx> {\n                 }\n                 (hir::ExprKind::Field(lhs_l, ident_l), hir::ExprKind::Field(lhs_r, ident_r)) => {\n                     if ident_l == ident_r {\n-                        return check_for_self_assign_helper(tcx, typeck_results, lhs_l, lhs_r);\n+                        return check_for_self_assign_helper(typeck_results, lhs_l, lhs_r);\n                     }\n                     return false;\n                 }\n@@ -188,7 +187,7 @@ impl<'tcx> MarkSymbolVisitor<'tcx> {\n         }\n \n         if let hir::ExprKind::Assign(lhs, rhs, _) = assign.kind {\n-            if check_for_self_assign_helper(self.tcx, self.typeck_results(), lhs, rhs)\n+            if check_for_self_assign_helper(self.typeck_results(), lhs, rhs)\n                 && !assign.span.from_expansion()\n             {\n                 let is_field_assign = matches!(lhs.kind, hir::ExprKind::Field(..));"}]}