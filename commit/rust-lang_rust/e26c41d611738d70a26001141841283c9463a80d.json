{"sha": "e26c41d611738d70a26001141841283c9463a80d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNmM0MWQ2MTE3MzhkNzBhMjYwMDExNDE4NDEyODNjOTQ2M2E4MGQ=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-09-19T21:07:23Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-09-19T21:07:23Z"}, "message": "A few doc comments", "tree": {"sha": "2a5096fd6c61fbf9e7561ba59ac732d93c442fcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a5096fd6c61fbf9e7561ba59ac732d93c442fcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e26c41d611738d70a26001141841283c9463a80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e26c41d611738d70a26001141841283c9463a80d", "html_url": "https://github.com/rust-lang/rust/commit/e26c41d611738d70a26001141841283c9463a80d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e26c41d611738d70a26001141841283c9463a80d/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58dc3b16496cbcce14101605aa1214e263b91c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/58dc3b16496cbcce14101605aa1214e263b91c87", "html_url": "https://github.com/rust-lang/rust/commit/58dc3b16496cbcce14101605aa1214e263b91c87"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "412dc4d719de09c686be91d8a0ac0fac827d53ce", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e26c41d611738d70a26001141841283c9463a80d/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e26c41d611738d70a26001141841283c9463a80d/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=e26c41d611738d70a26001141841283c9463a80d", "patch": "@@ -223,6 +223,7 @@ impl Query {\n     }\n }\n \n+/// Info associated with a text range.\n #[derive(Debug)]\n pub struct RangeInfo<T> {\n     pub range: TextRange,\n@@ -235,6 +236,8 @@ impl<T> RangeInfo<T> {\n     }\n }\n \n+/// Contains information about a call site. Specifically the\n+/// `FunctionSignature`and current parameter.\n #[derive(Debug)]\n pub struct CallInfo {\n     pub signature: FunctionSignature,\n@@ -325,11 +328,12 @@ impl Analysis {\n         (host.analysis(), file_id)\n     }\n \n+    /// Features for Analysis.\n     pub fn feature_flags(&self) -> &FeatureFlags {\n         &self.db.feature_flags\n     }\n \n-    /// Debug info about the current state of the analysis\n+    /// Debug info about the current state of the analysis.\n     pub fn status(&self) -> Cancelable<String> {\n         self.with_db(|db| status::status(&*db))\n     }\n@@ -440,20 +444,23 @@ impl Analysis {\n         })\n     }\n \n+    /// Returns the definitions from the symbol at `position`.\n     pub fn goto_definition(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n         self.with_db(|db| goto_definition::goto_definition(db, position))\n     }\n \n+    /// Returns the impls from the symbol at `position`.\n     pub fn goto_implementation(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<RangeInfo<Vec<NavigationTarget>>>> {\n         self.with_db(|db| impls::goto_implementation(db, position))\n     }\n \n+    /// Returns the type definitions for the symbol at `position`.\n     pub fn goto_type_definition(\n         &self,\n         position: FilePosition,\n@@ -540,6 +547,7 @@ impl Analysis {\n         self.with_db(|db| references::rename(db, position, new_name))\n     }\n \n+    /// Performs an operation on that may be Canceled.\n     fn with_db<F: FnOnce(&db::RootDatabase) -> T + std::panic::UnwindSafe, T>(\n         &self,\n         f: F,"}]}