{"sha": "fde59a8cb73f87ced306a29649b80c3776bab526", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZTU5YThjYjczZjg3Y2VkMzA2YTI5NjQ5YjgwYzM3NzZiYWI1MjY=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-02-12T12:58:13Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-02-12T13:02:35Z"}, "message": "Use `Iterator::all` instead of open-coding it\n\nShorter code and by initializing to the final value directly, the variable\ndoesn't need to be mut.", "tree": {"sha": "edf402588e03197ad33364eb803c48b33f2ea31a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edf402588e03197ad33364eb803c48b33f2ea31a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fde59a8cb73f87ced306a29649b80c3776bab526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fde59a8cb73f87ced306a29649b80c3776bab526", "html_url": "https://github.com/rust-lang/rust/commit/fde59a8cb73f87ced306a29649b80c3776bab526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fde59a8cb73f87ced306a29649b80c3776bab526/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9920ef7749d11fc71cc32ca4ba055bcfeaab945", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9920ef7749d11fc71cc32ca4ba055bcfeaab945", "html_url": "https://github.com/rust-lang/rust/commit/e9920ef7749d11fc71cc32ca4ba055bcfeaab945"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "10a7c1a394d3f8962c69a1865e81522584ce9093", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fde59a8cb73f87ced306a29649b80c3776bab526/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fde59a8cb73f87ced306a29649b80c3776bab526/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=fde59a8cb73f87ced306a29649b80c3776bab526", "patch": "@@ -1382,14 +1382,8 @@ fn determine_place_ancestry_relation(\n     // Assume of length of projections_b = m\n     let projections_b = &place_b.projections;\n \n-    let mut same_initial_projections = true;\n-\n-    for (proj_a, proj_b) in projections_a.iter().zip(projections_b.iter()) {\n-        if proj_a != proj_b {\n-            same_initial_projections = false;\n-            break;\n-        }\n-    }\n+    let same_initial_projections =\n+        projections_a.iter().zip(projections_b.iter()).all(|(proj_a, proj_b)| proj_a == proj_b);\n \n     if same_initial_projections {\n         // First min(n, m) projections are the same"}]}