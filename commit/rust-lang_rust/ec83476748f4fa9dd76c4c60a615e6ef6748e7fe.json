{"sha": "ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "node_id": "C_kwDOAAsO6NoAKGVjODM0NzY3NDhmNGZhOWRkNzZjNGM2MGE2MTVlNmVmNjc0OGU3ZmU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-25T17:45:10Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-25T17:45:10Z"}, "message": "Unused tuple fields in rustc_infer.", "tree": {"sha": "64b96bff89bbf142e2073e0300059c1ff35e29ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64b96bff89bbf142e2073e0300059c1ff35e29ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "html_url": "https://github.com/rust-lang/rust/commit/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a990f7c0fe4d00042269beb7ee67d0082de4e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a990f7c0fe4d00042269beb7ee67d0082de4e07", "html_url": "https://github.com/rust-lang/rust/commit/2a990f7c0fe4d00042269beb7ee67d0082de4e07"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "df16d8b2fdba99195b987e525b76149129106168", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec83476748f4fa9dd76c4c60a615e6ef6748e7fe/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=ec83476748f4fa9dd76c4c60a615e6ef6748e7fe", "patch": "@@ -2410,9 +2410,9 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         #[derive(Debug)]\n         enum SubOrigin<'hir> {\n             GAT(&'hir hir::Generics<'hir>),\n-            Impl(&'hir hir::Generics<'hir>),\n-            Trait(&'hir hir::Generics<'hir>),\n-            Fn(&'hir hir::Generics<'hir>),\n+            Impl,\n+            Trait,\n+            Fn,\n             Unknown,\n         }\n         let sub_origin = 'origin: {\n@@ -2427,34 +2427,30 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                                         kind: hir::ImplItemKind::TyAlias(..),\n                                         generics,\n                                         ..\n-                                    }) => SubOrigin::GAT(generics),\n-                                    Node::ImplItem(hir::ImplItem {\n-                                        kind: hir::ImplItemKind::Fn(..),\n-                                        generics,\n-                                        ..\n-                                    }) => SubOrigin::Fn(generics),\n-                                    Node::TraitItem(hir::TraitItem {\n+                                    })\n+                                    | Node::TraitItem(hir::TraitItem {\n                                         kind: hir::TraitItemKind::Type(..),\n                                         generics,\n                                         ..\n                                     }) => SubOrigin::GAT(generics),\n-                                    Node::TraitItem(hir::TraitItem {\n-                                        kind: hir::TraitItemKind::Fn(..),\n-                                        generics,\n+                                    Node::ImplItem(hir::ImplItem {\n+                                        kind: hir::ImplItemKind::Fn(..),\n                                         ..\n-                                    }) => SubOrigin::Fn(generics),\n-                                    Node::Item(hir::Item {\n-                                        kind: hir::ItemKind::Trait(_, _, generics, _, _),\n+                                    })\n+                                    | Node::TraitItem(hir::TraitItem {\n+                                        kind: hir::TraitItemKind::Fn(..),\n                                         ..\n-                                    }) => SubOrigin::Trait(generics),\n+                                    })\n+                                    | Node::Item(hir::Item {\n+                                        kind: hir::ItemKind::Fn(..), ..\n+                                    }) => SubOrigin::Fn,\n                                     Node::Item(hir::Item {\n-                                        kind: hir::ItemKind::Impl(hir::Impl { generics, .. }),\n+                                        kind: hir::ItemKind::Trait(..),\n                                         ..\n-                                    }) => SubOrigin::Impl(generics),\n+                                    }) => SubOrigin::Trait,\n                                     Node::Item(hir::Item {\n-                                        kind: hir::ItemKind::Fn(_, generics, _),\n-                                        ..\n-                                    }) => SubOrigin::Fn(generics),\n+                                        kind: hir::ItemKind::Impl(..), ..\n+                                    }) => SubOrigin::Impl,\n                                     _ => continue,\n                                 };\n                             }"}]}