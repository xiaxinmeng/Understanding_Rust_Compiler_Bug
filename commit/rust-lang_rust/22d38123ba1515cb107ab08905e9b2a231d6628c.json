{"sha": "22d38123ba1515cb107ab08905e9b2a231d6628c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZDM4MTIzYmExNTE1Y2IxMDdhYjA4OTA1ZTliMmEyMzFkNjYyOGM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-18T08:21:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-18T08:21:39Z"}, "message": "Rollup merge of #54232 - pnkfelix:add-way-to-disable-diagnostic-buffering, r=nikomatsakis\n\nadd `-Z dont-buffer-diagnostics`\n\nAdd `-Z dont-buffer-diagnostics`, a way to force NLL to immediately its diagnostics.\n\nThis is mainly intended for developers who want to see the error in its original context in the control flow. Two uses cases for that are:\n\n  1. `-Z treat-err-as-bug` (which then allows extraction of a stack-trace to the origin of the error)\n\n  2. RUST_LOG=... rustc, in which case it is often useful to see the logging statements that occurred immediately prior to the point where the diagnostic was signalled.", "tree": {"sha": "b572a43549a0928f6671ab08934907875312aed3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b572a43549a0928f6671ab08934907875312aed3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22d38123ba1515cb107ab08905e9b2a231d6628c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJboLWTCRBK7hj4Ov3rIwAAdHIIAC7NrkZOnQO8nClqE5g91T+3\nZQgWjAbsQnlI39ZiIO03zxKXaUkxIDhNI2PupIC5heDrr0dWOR28FP+EBox/Ldt7\n7swCi8f/VsPV9e7CtoBVwYJeAez1bFZLXscA0jtxDb8XLakNxD0BERSMJ7rQdSPK\nqitF8fiMrvVKzWkMms9E/t5xz1ox8FgKwbHlGcnv8jTAjODFRkAx+rJbBNXQEyvV\nlnYGpm683GhXPZY2YrGdvDe8Qn5SkDjpWd3z43RomtTyqW7fwzG7ad+AHfpJU2VM\nsIOZH5Wd/vEcySJTLyf586lyA/6bad3JGuYBOfhTN7rNniIUHw7wxMknjDHgFSM=\n=lwWb\n-----END PGP SIGNATURE-----\n", "payload": "tree b572a43549a0928f6671ab08934907875312aed3\nparent cdd90343b383eaa00d05c7d332ed8a92bda30892\nparent 82e17504143e7f26427269fabfb99129a602c8b9\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1537258899 +0200\ncommitter GitHub <noreply@github.com> 1537258899 +0200\n\nRollup merge of #54232 - pnkfelix:add-way-to-disable-diagnostic-buffering, r=nikomatsakis\n\nadd `-Z dont-buffer-diagnostics`\n\nAdd `-Z dont-buffer-diagnostics`, a way to force NLL to immediately its diagnostics.\n\nThis is mainly intended for developers who want to see the error in its original context in the control flow. Two uses cases for that are:\n\n  1. `-Z treat-err-as-bug` (which then allows extraction of a stack-trace to the origin of the error)\n\n  2. RUST_LOG=... rustc, in which case it is often useful to see the logging statements that occurred immediately prior to the point where the diagnostic was signalled.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22d38123ba1515cb107ab08905e9b2a231d6628c", "html_url": "https://github.com/rust-lang/rust/commit/22d38123ba1515cb107ab08905e9b2a231d6628c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22d38123ba1515cb107ab08905e9b2a231d6628c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdd90343b383eaa00d05c7d332ed8a92bda30892", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd90343b383eaa00d05c7d332ed8a92bda30892", "html_url": "https://github.com/rust-lang/rust/commit/cdd90343b383eaa00d05c7d332ed8a92bda30892"}, {"sha": "82e17504143e7f26427269fabfb99129a602c8b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/82e17504143e7f26427269fabfb99129a602c8b9", "html_url": "https://github.com/rust-lang/rust/commit/82e17504143e7f26427269fabfb99129a602c8b9"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "e4d633c3f2cf27ccb1e1bb4a2025f699f0145016", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=22d38123ba1515cb107ab08905e9b2a231d6628c", "patch": "@@ -1331,6 +1331,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"disable user provided type assertion in NLL\"),\n     nll_dont_emit_read_for_match: bool = (false, parse_bool, [UNTRACKED],\n         \"in match codegen, do not include ReadForMatch statements (used by mir-borrowck)\"),\n+    dont_buffer_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n+        \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting).\"),\n     polonius: bool = (false, parse_bool, [UNTRACKED],\n         \"enable polonius-based borrow-checker\"),\n     codegen_time_graph: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "52e1ab477038d9b1906991f8dd285be0d7b7a9ab", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=22d38123ba1515cb107ab08905e9b2a231d6628c", "patch": "@@ -1012,6 +1012,7 @@ pub fn build_session_with_source_map(\n     let can_emit_warnings = !(warnings_allow || cap_lints_allow);\n \n     let treat_err_as_bug = sopts.debugging_opts.treat_err_as_bug;\n+    let dont_buffer_diagnostics = sopts.debugging_opts.dont_buffer_diagnostics;\n     let report_delayed_bugs = sopts.debugging_opts.report_delayed_bugs;\n \n     let external_macro_backtrace = sopts.debugging_opts.external_macro_backtrace;\n@@ -1059,6 +1060,7 @@ pub fn build_session_with_source_map(\n             can_emit_warnings,\n             treat_err_as_bug,\n             report_delayed_bugs,\n+            dont_buffer_diagnostics,\n             external_macro_backtrace,\n             ..Default::default()\n         },"}, {"sha": "5e962a4af32f6de741db62fcb5748ba3f522ff8b", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=22d38123ba1515cb107ab08905e9b2a231d6628c", "patch": "@@ -21,6 +21,10 @@ use std::thread::panicking;\n use syntax_pos::{MultiSpan, Span};\n \n /// Used for emitting structured error messages and other diagnostic information.\n+///\n+/// If there is some state in a downstream crate you would like to\n+/// access in the methods of `DiagnosticBuilder` here, consider\n+/// extending `HandlerFlags`, accessed via `self.handler.flags`.\n #[must_use]\n #[derive(Clone)]\n pub struct DiagnosticBuilder<'a> {\n@@ -89,8 +93,14 @@ impl<'a> DiagnosticBuilder<'a> {\n         self.cancel();\n     }\n \n-    /// Buffers the diagnostic for later emission.\n-    pub fn buffer(self, buffered_diagnostics: &mut Vec<Diagnostic>) {\n+    /// Buffers the diagnostic for later emission, unless handler\n+    /// has disabled such buffering.\n+    pub fn buffer(mut self, buffered_diagnostics: &mut Vec<Diagnostic>) {\n+        if self.handler.flags.dont_buffer_diagnostics || self.handler.flags.treat_err_as_bug {\n+            self.emit();\n+            return;\n+        }\n+\n         // We need to use `ptr::read` because `DiagnosticBuilder`\n         // implements `Drop`.\n         let diagnostic;"}, {"sha": "d0ea6fba5ebb31ac60e59d098f9d1383d58fb681", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d38123ba1515cb107ab08905e9b2a231d6628c/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=22d38123ba1515cb107ab08905e9b2a231d6628c", "patch": "@@ -303,9 +303,20 @@ thread_local!(pub static TRACK_DIAGNOSTICS: Cell<fn(&Diagnostic)> =\n \n #[derive(Default)]\n pub struct HandlerFlags {\n+    /// If false, warning-level lints are suppressed.\n+    /// (rustc: see `--allow warnings` and `--cap-lints`)\n     pub can_emit_warnings: bool,\n+    /// If true, error-level diagnostics are upgraded to bug-level.\n+    /// (rustc: see `-Z treat-err-as-bug`)\n     pub treat_err_as_bug: bool,\n+    /// If true, immediately emit diagnostics that would otherwise be buffered.\n+    /// (rustc: see `-Z dont-buffer-diagnostics` and `-Z treat-err-as-bug`)\n+    pub dont_buffer_diagnostics: bool,\n+    /// If true, immediately print bugs registered with `delay_span_bug`.\n+    /// (rustc: see `-Z report-delayed-bugs`)\n     pub report_delayed_bugs: bool,\n+    /// show macro backtraces even for non-local macros.\n+    /// (rustc: see `-Z external-macro-backtrace`)\n     pub external_macro_backtrace: bool,\n }\n "}]}