{"sha": "488dccbe877f82e9a665aa39aa521e142fcf6efb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4OGRjY2JlODc3ZjgyZTlhNjY1YWEzOWFhNTIxZTE0MmZjZjZlZmI=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-10T13:02:41Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-10T13:02:41Z"}, "message": "Elaborate trait obligations when typechecking impls\nFixes #43784.", "tree": {"sha": "b3376b52ebbb417fcefb3f4892469f4f3492b7ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3376b52ebbb417fcefb3f4892469f4f3492b7ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/488dccbe877f82e9a665aa39aa521e142fcf6efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/488dccbe877f82e9a665aa39aa521e142fcf6efb", "html_url": "https://github.com/rust-lang/rust/commit/488dccbe877f82e9a665aa39aa521e142fcf6efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/488dccbe877f82e9a665aa39aa521e142fcf6efb/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ebc7eff46fb01c625ecce55a0537dcc78e58756", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ebc7eff46fb01c625ecce55a0537dcc78e58756", "html_url": "https://github.com/rust-lang/rust/commit/1ebc7eff46fb01c625ecce55a0537dcc78e58756"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "0ff94097c8ede5141ed863011fdfee1684c2ee39", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/488dccbe877f82e9a665aa39aa521e142fcf6efb/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/488dccbe877f82e9a665aa39aa521e142fcf6efb/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=488dccbe877f82e9a665aa39aa521e142fcf6efb", "patch": "@@ -137,20 +137,19 @@ impl<'a, 'gcx, 'tcx> WfPredicates<'a, 'gcx, 'tcx> {\n     /// `self.out`.\n     fn compute_trait_ref(&mut self, trait_ref: &ty::TraitRef<'tcx>) {\n         let obligations = self.nominal_obligations(trait_ref.def_id, trait_ref.substs);\n-        self.out.extend(obligations);\n \n         let cause = self.cause(traits::MiscObligation);\n         let param_env = self.param_env;\n \n-        let implied_obligations = traits::elaborate_predicates(self.infcx.tcx, vec![\n-            ty::Predicate::Trait(ty::Binder(\n-                ty::TraitPredicate { trait_ref: *trait_ref }\n-            ))\n-        ]);\n+        let predicates = obligations.iter()\n+                                    .map(|obligation| obligation.predicate.clone())\n+                                    .collect();\n+        let implied_obligations = traits::elaborate_predicates(self.infcx.tcx, predicates);\n         let implied_obligations = implied_obligations.map(|pred| {\n             traits::Obligation::new(cause.clone(), param_env, pred)\n         });\n-        self.out.extend(implied_obligations);\n+\n+        self.out.extend(implied_obligations.chain(obligations));\n \n         self.out.extend(\n             trait_ref.substs.types()"}]}