{"sha": "2eb3b37c91ed9611d9d61f75dab71bda5648903e", "node_id": "C_kwDOAAsO6NoAKDJlYjNiMzdjOTFlZDk2MTFkOWQ2MWY3NWRhYjcxYmRhNTY0ODkwM2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-15T18:11:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-15T18:11:57Z"}, "message": "Auto merge of #1938 - RalfJung:test, r=RalfJung\n\nadd regression test\n\nAdds a regression test for https://github.com/rust-lang/rust/issues/91636 (which was fixed by https://github.com/rust-lang/rust/pull/91856)", "tree": {"sha": "0678870dd0762317d9beb446b462611d6a8c0480", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0678870dd0762317d9beb446b462611d6a8c0480"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eb3b37c91ed9611d9d61f75dab71bda5648903e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb3b37c91ed9611d9d61f75dab71bda5648903e", "html_url": "https://github.com/rust-lang/rust/commit/2eb3b37c91ed9611d9d61f75dab71bda5648903e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eb3b37c91ed9611d9d61f75dab71bda5648903e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65cbcb0d056dfdd4cd5db8ff6913f5b987d1e8f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/65cbcb0d056dfdd4cd5db8ff6913f5b987d1e8f4", "html_url": "https://github.com/rust-lang/rust/commit/65cbcb0d056dfdd4cd5db8ff6913f5b987d1e8f4"}, {"sha": "4da38299fa9e6483642bce23204ca0445a0fc086", "url": "https://api.github.com/repos/rust-lang/rust/commits/4da38299fa9e6483642bce23204ca0445a0fc086", "html_url": "https://github.com/rust-lang/rust/commit/4da38299fa9e6483642bce23204ca0445a0fc086"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "b517ff5b95caaece6d0f2afa9b032092918c09be", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2eb3b37c91ed9611d9d61f75dab71bda5648903e/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/2eb3b37c91ed9611d9d61f75dab71bda5648903e/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=2eb3b37c91ed9611d9d61f75dab71bda5648903e", "patch": "@@ -1 +1 @@\n-404c8471aba60c2d837fa728e7c729a0f52d5830\n+c5ecc157043ba413568b09292001a4a74b541a4e"}, {"sha": "42d7958b260ff1ec94d55ebf4a129724fad4ee4c", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2eb3b37c91ed9611d9d61f75dab71bda5648903e/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb3b37c91ed9611d9d61f75dab71bda5648903e/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=2eb3b37c91ed9611d9d61f75dab71bda5648903e", "patch": "@@ -176,7 +176,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                         if let Some((original_instance, original_cnum)) = instance_and_crate {\n                             // Make sure we are consistent wrt what is 'first' and 'second'.\n                             let original_span = tcx.def_span(original_instance.def_id()).data();\n-                            let span =  tcx.def_span(def_id).data();\n+                            let span = tcx.def_span(def_id).data();\n                             if original_span < span {\n                                 throw_machine_stop!(TerminationInfo::MultipleSymbolDefinitions {\n                                     link_name,"}, {"sha": "72a4ee0de30ba768baa56c473266b901ebfeb8fd", "filename": "test-cargo-miri/build.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2eb3b37c91ed9611d9d61f75dab71bda5648903e/test-cargo-miri%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb3b37c91ed9611d9d61f75dab71bda5648903e/test-cargo-miri%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fbuild.rs?ref=2eb3b37c91ed9611d9d61f75dab71bda5648903e", "patch": "@@ -1,5 +1,3 @@\n-#![feature(asm)]\n-\n use std::env;\n \n #[cfg(miri)]\n@@ -9,7 +7,7 @@ fn not_in_miri() -> i32 {\n     // Inline assembly definitely does not work in Miri.\n     let mut dummy = 42;\n     unsafe {\n-        asm!(\"/* {} */\", in(reg) &mut dummy);\n+        std::arch::asm!(\"/* {} */\", in(reg) &mut dummy);\n     }\n     return dummy;\n }"}, {"sha": "21000bb68d2bc934157c45f47dcdddc98ac2dd42", "filename": "tests/run-pass/issue-91636.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2eb3b37c91ed9611d9d61f75dab71bda5648903e/tests%2Frun-pass%2Fissue-91636.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb3b37c91ed9611d9d61f75dab71bda5648903e/tests%2Frun-pass%2Fissue-91636.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-91636.rs?ref=2eb3b37c91ed9611d9d61f75dab71bda5648903e", "patch": "@@ -0,0 +1,20 @@\n+type BuiltIn = for<'a> fn(&str);\n+\n+struct Function {\n+    inner: BuiltIn,\n+}\n+\n+impl Function {\n+    fn new(subr: BuiltIn) -> Self {\n+        Self { inner: subr }\n+    }\n+}\n+\n+fn dummy(_: &str) {}\n+\n+fn main() {\n+    let func1 = Function::new(dummy);\n+    let func2 = Function::new(dummy);\n+    let inner: fn(&'static _) -> _ = func1.inner;\n+    assert!(inner == func2.inner);\n+}"}]}