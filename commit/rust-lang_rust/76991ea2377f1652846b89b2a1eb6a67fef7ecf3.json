{"sha": "76991ea2377f1652846b89b2a1eb6a67fef7ecf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OTkxZWEyMzc3ZjE2NTI4NDZiODliMmExZWI2YTY3ZmVmN2VjZjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-25T13:19:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-25T13:19:16Z"}, "message": "[WIP] debug logs in error-reporting", "tree": {"sha": "2c3d40a1e5888e1dae7fecf23e35add98e23a82b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c3d40a1e5888e1dae7fecf23e35add98e23a82b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76991ea2377f1652846b89b2a1eb6a67fef7ecf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76991ea2377f1652846b89b2a1eb6a67fef7ecf3", "html_url": "https://github.com/rust-lang/rust/commit/76991ea2377f1652846b89b2a1eb6a67fef7ecf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76991ea2377f1652846b89b2a1eb6a67fef7ecf3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa69e2183a97a139e1c5c5d4da9e8cd805d05084", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa69e2183a97a139e1c5c5d4da9e8cd805d05084", "html_url": "https://github.com/rust-lang/rust/commit/fa69e2183a97a139e1c5c5d4da9e8cd805d05084"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "d329718cf94c71f58219e590be3012697a117510", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/76991ea2377f1652846b89b2a1eb6a67fef7ecf3/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76991ea2377f1652846b89b2a1eb6a67fef7ecf3/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=76991ea2377f1652846b89b2a1eb6a67fef7ecf3", "patch": "@@ -81,21 +81,32 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         let (path, target_region) = self\n             .find_constraint_paths_between_regions(from_region, target_test)\n             .unwrap();\n-        debug!(\"best_blame_constraint: path={:#?}\", path);\n+        debug!(\n+            \"best_blame_constraint: path={:#?}\",\n+            path.iter()\n+                .map(|&ci| format!(\n+                    \"{:?}: {:?} ({:?}: {:?})\",\n+                    ci,\n+                    &self.constraints[ci],\n+                    self.constraint_sccs.scc(self.constraints[ci].sup),\n+                    self.constraint_sccs.scc(self.constraints[ci].sub),\n+                ))\n+                .collect::<Vec<_>>()\n+        );\n \n         // Classify each of the constraints along the path.\n         let mut categorized_path: Vec<(ConstraintCategory, Span)> = path\n             .iter()\n             .map(|&index| self.classify_constraint(index, mir))\n             .collect();\n         debug!(\n-            \"best_blame_constraint: categorized_path={:?}\",\n+            \"best_blame_constraint: categorized_path={:#?}\",\n             categorized_path\n         );\n \n         // Find what appears to be the most interesting path to report to the user.\n         categorized_path.sort_by(|p0, p1| p0.0.cmp(&p1.0));\n-        debug!(\"best_blame_constraint: sorted_path={:?}\", categorized_path);\n+        debug!(\"best_blame_constraint: sorted_path={:#?}\", categorized_path);\n \n         let &(category, span) = categorized_path.first().unwrap();\n "}]}