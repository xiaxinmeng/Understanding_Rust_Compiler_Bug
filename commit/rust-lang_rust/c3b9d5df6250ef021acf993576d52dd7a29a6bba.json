{"sha": "c3b9d5df6250ef021acf993576d52dd7a29a6bba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYjlkNWRmNjI1MGVmMDIxYWNmOTkzNTc2ZDUyZGQ3YTI5YTZiYmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-08T01:30:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-13T22:27:40Z"}, "message": "Address some review feedback", "tree": {"sha": "b07d460080b90b3e3d22e350b2b46b4768a3ef07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b07d460080b90b3e3d22e350b2b46b4768a3ef07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3b9d5df6250ef021acf993576d52dd7a29a6bba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b9d5df6250ef021acf993576d52dd7a29a6bba", "html_url": "https://github.com/rust-lang/rust/commit/c3b9d5df6250ef021acf993576d52dd7a29a6bba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3b9d5df6250ef021acf993576d52dd7a29a6bba/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc450b17e3bfe1c195f8f286a3228cca1f706a74", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc450b17e3bfe1c195f8f286a3228cca1f706a74", "html_url": "https://github.com/rust-lang/rust/commit/bc450b17e3bfe1c195f8f286a3228cca1f706a74"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "93dafc153b6b206878f5547f072e4c6718f1ae4a", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c3b9d5df6250ef021acf993576d52dd7a29a6bba/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b9d5df6250ef021acf993576d52dd7a29a6bba/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=c3b9d5df6250ef021acf993576d52dd7a29a6bba", "patch": "@@ -48,7 +48,7 @@ use ptr::RawPtr;\n use mem;\n use mem::size_of;\n use kinds::marker;\n-use raw::{Repr};\n+use raw::Repr;\n // Avoid conflicts with *both* the Slice trait (buggy) and the `slice::raw` module.\n use RawSlice = raw::Slice;\n \n@@ -227,19 +227,17 @@ pub trait ImmutableSlice<'a, T> {\n     #[deprecated = \"use binary_search\"]\n     fn bsearch(&self, f: |&T| -> Ordering) -> Option<uint>;\n \n-    /**\n-     * Binary search a sorted vector with a comparator function.\n-     *\n-     * The comparator function should implement an order consistent\n-     * with the sort order of the underlying vector, returning an\n-     * order code that indicates whether its argument is `Less`,\n-     * `Equal` or `Greater` the desired target.\n-     *\n-     * If the value is found then `Found` is returned, containing the\n-     * index of the matching element; if the value is not found then\n-     * `NotFound` is returned, containing the index where a matching\n-     * element could be inserted while maintaining sorted order.\n-     */\n+    /// Binary search a sorted vector with a comparator function.\n+    ///\n+    /// The comparator function should implement an order consistent\n+    /// with the sort order of the underlying vector, returning an\n+    /// order code that indicates whether its argument is `Less`,\n+    /// `Equal` or `Greater` the desired target.\n+    ///\n+    /// If the value is found then `Found` is returned, containing the\n+    /// index of the matching element; if the value is not found then\n+    /// `NotFound` is returned, containing the index where a matching\n+    /// element could be inserted while maintaining sorted order.\n     #[unstable]\n     fn binary_search(&self, f: |&T| -> Ordering) -> BinarySearchResult;\n "}]}