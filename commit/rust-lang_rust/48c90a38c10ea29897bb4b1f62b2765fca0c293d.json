{"sha": "48c90a38c10ea29897bb4b1f62b2765fca0c293d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YzkwYTM4YzEwZWEyOTg5N2JiNGIxZjYyYjI3NjVmY2EwYzI5M2Q=", "commit": {"author": {"name": "Ryan Scheel (Havvy)", "email": "ryan.havvy@gmail.com", "date": "2015-10-15T19:35:39Z"}, "committer": {"name": "Ryan Scheel (Havvy)", "email": "ryan.havvy@gmail.com", "date": "2015-10-15T19:35:39Z"}, "message": "Remove outdated Changing directory.", "tree": {"sha": "5f618b8ffe6225d48c15ae8bbc584bfe21107f34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f618b8ffe6225d48c15ae8bbc584bfe21107f34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c90a38c10ea29897bb4b1f62b2765fca0c293d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c90a38c10ea29897bb4b1f62b2765fca0c293d", "html_url": "https://github.com/rust-lang/rust/commit/48c90a38c10ea29897bb4b1f62b2765fca0c293d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c90a38c10ea29897bb4b1f62b2765fca0c293d/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be3d390cf51545b880c5cd78585fa408c087f786", "url": "https://api.github.com/repos/rust-lang/rust/commits/be3d390cf51545b880c5cd78585fa408c087f786", "html_url": "https://github.com/rust-lang/rust/commit/be3d390cf51545b880c5cd78585fa408c087f786"}], "stats": {"total": 66, "additions": 0, "deletions": 66}, "files": [{"sha": "508ede6c4a0ac5b768022f5b746f97f7570912d4", "filename": "src/doc/style/SUMMARY.md", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48c90a38c10ea29897bb4b1f62b2765fca0c293d/src%2Fdoc%2Fstyle%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/48c90a38c10ea29897bb4b1f62b2765fca0c293d/src%2Fdoc%2Fstyle%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2FSUMMARY.md?ref=48c90a38c10ea29897bb4b1f62b2765fca0c293d", "patch": "@@ -48,7 +48,3 @@\n * [Testing](testing/README.md)\n     * [Unit testing](testing/unit.md)\n * [FFI, platform-specific code](platform.md)\n-* [APIs for a changing Rust](changing/README.md)\n-    * [Pre-1.0 changes](changing/pre-1-0.md)\n-    * [Post-1.0 changes](changing/post-1-0.md)\n-    * [Timing unclear](changing/unclear.md)"}, {"sha": "38e76f6970c810feee03999cac78a6d334e9afde", "filename": "src/doc/style/changing/README.md", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fchanging%2FREADME.md?ref=be3d390cf51545b880c5cd78585fa408c087f786", "patch": "@@ -1,5 +0,0 @@\n-% API design for a changing Rust\n-\n-A number of planned Rust features will drastically affect the API design\n-story. This section collects some of the biggest features with concrete examples\n-of how the API will change."}, {"sha": "7ac1c837c071fda7eeae7e1194c978e76d0b93c0", "filename": "src/doc/style/changing/post-1-0.md", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2Fpost-1-0.md", "raw_url": "https://github.com/rust-lang/rust/raw/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2Fpost-1-0.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fchanging%2Fpost-1-0.md?ref=be3d390cf51545b880c5cd78585fa408c087f786", "patch": "@@ -1,12 +0,0 @@\n-% Post-1.0 changes\n-\n-### Higher-kinded types\n-\n-* A trait encompassing both `Iterable<T>` for some fixed `T` and\n-  `FromIterator<U>` for _all_ `U` (where HKT comes in).  The train\n-  could provide e.g. a default `map` method producing the same kind of\n-  the container, but with a new type parameter.\n-\n-* **Monadic-generic programming**? Can we add this without deprecating\n-  huge swaths of the API (including `Option::map`, `option::collect`,\n-  `result::collect`, `try!` etc."}, {"sha": "adadfe31a59d138b1c7dc0fd4b5f328826860d7b", "filename": "src/doc/style/changing/pre-1-0.md", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2Fpre-1-0.md", "raw_url": "https://github.com/rust-lang/rust/raw/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2Fpre-1-0.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fchanging%2Fpre-1-0.md?ref=be3d390cf51545b880c5cd78585fa408c087f786", "patch": "@@ -1,17 +0,0 @@\n-% Pre-1.0 changes\n-\n-### `std` facade\n-\n-We should revisit some APIs in `libstd` now that the facade effort is complete.\n-\n-For example, the treatment of environment variables in the new\n-`Command` API is waiting on access to hashtables before being\n-approved.\n-\n-### Trait reform\n-\n-Potential for standard conversion traits (`to`, `into`, `as`).\n-\n-Probably many other opportunities here.\n-\n-### Unboxed closures"}, {"sha": "e4b8a98e1a1622f1ac4e051facc9a3c649998050", "filename": "src/doc/style/changing/unclear.md", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2Funclear.md", "raw_url": "https://github.com/rust-lang/rust/raw/be3d390cf51545b880c5cd78585fa408c087f786/src%2Fdoc%2Fstyle%2Fchanging%2Funclear.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fchanging%2Funclear.md?ref=be3d390cf51545b880c5cd78585fa408c087f786", "patch": "@@ -1,28 +0,0 @@\n-% Changes with unclear timing\n-\n-### Associated items\n-\n-* Many traits that currently take type parameters should instead use associated\n-  types; this will _drastically_ simplify signatures in some cases.\n-\n-* Associated constants would be useful in a few places, e.g. traits for\n-  numerics, traits for paths.\n-\n-### Anonymous, unboxed return types (aka `impl Trait` types)\n-\n-* See https://github.com/rust-lang/rfcs/pull/105\n-\n-* Could affect API design in several places, e.g. the `Iterator` trait.\n-\n-### Default type parameters\n-\n-We are already using this in a few places (e.g. `HashMap`), but it's\n-feature-gated.\n-\n-### Compile-time function evaluation (CTFE)\n-\n-https://github.com/mozilla/rust/issues/11621\n-\n-### Improved constant folding\n-\n-https://github.com/rust-lang/rust/issues/7834"}]}