{"sha": "3086e44733499da24272640f73b7a0822e4b548a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwODZlNDQ3MzM0OTlkYTI0MjcyNjQwZjczYjdhMDgyMmU0YjU0OGE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T11:27:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T11:27:24Z"}, "message": "Only call build_value_labels_ranges when necessary", "tree": {"sha": "1955bb0255f3979932310cb36b23ea826edb8dea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1955bb0255f3979932310cb36b23ea826edb8dea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3086e44733499da24272640f73b7a0822e4b548a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3086e44733499da24272640f73b7a0822e4b548a", "html_url": "https://github.com/rust-lang/rust/commit/3086e44733499da24272640f73b7a0822e4b548a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3086e44733499da24272640f73b7a0822e4b548a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4187e6aae855f16651aca4973839aec8c58eb29", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4187e6aae855f16651aca4973839aec8c58eb29", "html_url": "https://github.com/rust-lang/rust/commit/d4187e6aae855f16651aca4973839aec8c58eb29"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "ee4af783d9f9a28cc22ead32ccb94f1d6c0c7278", "filename": "src/base.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3086e44733499da24272640f73b7a0822e4b548a/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3086e44733499da24272640f73b7a0822e4b548a/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=3086e44733499da24272640f73b7a0822e4b548a", "patch": "@@ -73,7 +73,14 @@ pub(crate) fn trans_fn<'tcx, B: Backend + 'static>(\n     let local_map = fx.local_map;\n     let cold_blocks = fx.cold_blocks;\n \n-    crate::pretty_clif::write_clif_file(cx.tcx, \"unopt\", instance, &context.func, &clif_comments, None);\n+    crate::pretty_clif::write_clif_file(\n+        cx.tcx,\n+        \"unopt\",\n+        None,\n+        instance,\n+        &context,\n+        &clif_comments,\n+    );\n \n     // Verify function\n     verify_func(tcx, &clif_comments, &context.func);\n@@ -101,20 +108,14 @@ pub(crate) fn trans_fn<'tcx, B: Backend + 'static>(\n     );\n \n     // Write optimized function to file for debugging\n-    {\n-        let value_ranges = context\n-            .build_value_labels_ranges(cx.module.isa())\n-            .expect(\"value location ranges\");\n-\n-        crate::pretty_clif::write_clif_file(\n-            cx.tcx,\n-            \"opt\",\n-            instance,\n-            &context.func,\n-            &clif_comments,\n-            Some(&value_ranges),\n-        );\n-    }\n+    crate::pretty_clif::write_clif_file(\n+        cx.tcx,\n+        \"opt\",\n+        Some(cx.module.isa()),\n+        instance,\n+        &context,\n+        &clif_comments,\n+    );\n \n     // Define debuginfo for function\n     let isa = cx.module.isa();"}, {"sha": "90f5876e2f1403979c24e213c2e359495281fdcb", "filename": "src/optimize/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3086e44733499da24272640f73b7a0822e4b548a/src%2Foptimize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3086e44733499da24272640f73b7a0822e4b548a/src%2Foptimize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foptimize%2Fmod.rs?ref=3086e44733499da24272640f73b7a0822e4b548a", "patch": "@@ -18,6 +18,6 @@ pub(crate) fn optimize_function<'tcx>(\n         return; // FIXME classify optimizations over opt levels\n     }\n     self::stack2reg::optimize_function(ctx, clif_comments);\n-    crate::pretty_clif::write_clif_file(tcx, \"stack2reg\", instance, &ctx.func, &*clif_comments, None);\n+    crate::pretty_clif::write_clif_file(tcx, \"stack2reg\", None, instance, &ctx, &*clif_comments);\n     crate::base::verify_func(tcx, &*clif_comments, &ctx.func);\n }"}, {"sha": "8b1e611ef2f853301b4f8986252dd96287a1bac6", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3086e44733499da24272640f73b7a0822e4b548a/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3086e44733499da24272640f73b7a0822e4b548a/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=3086e44733499da24272640f73b7a0822e4b548a", "patch": "@@ -203,16 +203,22 @@ impl<B: Backend + 'static> FunctionCx<'_, '_, B> {\n pub(crate) fn write_clif_file<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     postfix: &str,\n+    isa: Option<&dyn cranelift_codegen::isa::TargetIsa>,\n     instance: Instance<'tcx>,\n-    func: &cranelift_codegen::ir::Function,\n+    context: &cranelift_codegen::Context,\n     mut clif_comments: &CommentWriter,\n-    value_ranges: Option<&cranelift_codegen::ValueLabelsRanges>,\n ) {\n+    use std::io::Write;\n+\n     if !cfg!(debug_assertions) && !tcx.sess.opts.output_types.contains_key(&OutputType::LlvmAssembly) {\n         return;\n     }\n \n-    use std::io::Write;\n+    let value_ranges = isa.map(|isa| {\n+        context\n+            .build_value_labels_ranges(isa)\n+            .expect(\"value location ranges\")\n+    });\n \n     let symbol_name = tcx.symbol_name(instance).name.as_str();\n     let clif_file_name = format!(\n@@ -227,12 +233,12 @@ pub(crate) fn write_clif_file<'tcx>(\n     cranelift_codegen::write::decorate_function(\n         &mut clif_comments,\n         &mut clif,\n-        &func,\n+        &context.func,\n         &DisplayFunctionAnnotations {\n             isa: Some(&*crate::build_isa(\n                 tcx.sess, true, /* PIC doesn't matter here */\n             )),\n-            value_ranges,\n+            value_ranges: value_ranges.as_ref(),\n         },\n     )\n     .unwrap();"}]}