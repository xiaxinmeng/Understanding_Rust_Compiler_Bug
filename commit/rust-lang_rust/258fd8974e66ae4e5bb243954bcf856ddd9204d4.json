{"sha": "258fd8974e66ae4e5bb243954bcf856ddd9204d4", "node_id": "C_kwDOAAsO6NoAKDI1OGZkODk3NGU2NmFlNGU1YmIyNDM5NTRiY2Y4NTZkZGQ5MjA0ZDQ", "commit": {"author": {"name": "Shivani Bhardwaj", "email": "shivanib134@gmail.com", "date": "2021-12-09T17:35:08Z"}, "committer": {"name": "Shivani Bhardwaj", "email": "shivanib134@gmail.com", "date": "2021-12-09T17:41:09Z"}, "message": "Add deprecation warning for --passes", "tree": {"sha": "1239ffc383c5b70b4df46957b0ab86d5d1abf551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1239ffc383c5b70b4df46957b0ab86d5d1abf551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/258fd8974e66ae4e5bb243954bcf856ddd9204d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/258fd8974e66ae4e5bb243954bcf856ddd9204d4", "html_url": "https://github.com/rust-lang/rust/commit/258fd8974e66ae4e5bb243954bcf856ddd9204d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/258fd8974e66ae4e5bb243954bcf856ddd9204d4/comments", "author": {"login": "inashivb", "id": 57791542, "node_id": "MDQ6VXNlcjU3NzkxNTQy", "avatar_url": "https://avatars.githubusercontent.com/u/57791542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inashivb", "html_url": "https://github.com/inashivb", "followers_url": "https://api.github.com/users/inashivb/followers", "following_url": "https://api.github.com/users/inashivb/following{/other_user}", "gists_url": "https://api.github.com/users/inashivb/gists{/gist_id}", "starred_url": "https://api.github.com/users/inashivb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inashivb/subscriptions", "organizations_url": "https://api.github.com/users/inashivb/orgs", "repos_url": "https://api.github.com/users/inashivb/repos", "events_url": "https://api.github.com/users/inashivb/events{/privacy}", "received_events_url": "https://api.github.com/users/inashivb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "inashivb", "id": 57791542, "node_id": "MDQ6VXNlcjU3NzkxNTQy", "avatar_url": "https://avatars.githubusercontent.com/u/57791542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inashivb", "html_url": "https://github.com/inashivb", "followers_url": "https://api.github.com/users/inashivb/followers", "following_url": "https://api.github.com/users/inashivb/following{/other_user}", "gists_url": "https://api.github.com/users/inashivb/gists{/gist_id}", "starred_url": "https://api.github.com/users/inashivb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inashivb/subscriptions", "organizations_url": "https://api.github.com/users/inashivb/orgs", "repos_url": "https://api.github.com/users/inashivb/repos", "events_url": "https://api.github.com/users/inashivb/events{/privacy}", "received_events_url": "https://api.github.com/users/inashivb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b263ceb5cb89b6d53b5a03b47ec447c3a7f7765", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b263ceb5cb89b6d53b5a03b47ec447c3a7f7765", "html_url": "https://github.com/rust-lang/rust/commit/3b263ceb5cb89b6d53b5a03b47ec447c3a7f7765"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "2c917e0f49687a81e63376e83e776e5904e30235", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/258fd8974e66ae4e5bb243954bcf856ddd9204d4/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/258fd8974e66ae4e5bb243954bcf856ddd9204d4/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=258fd8974e66ae4e5bb243954bcf856ddd9204d4", "patch": "@@ -327,6 +327,19 @@ impl Options {\n             return Err(0);\n         }\n \n+        let color = config::parse_color(matches);\n+        let config::JsonConfig { json_rendered, json_unused_externs, .. } =\n+            config::parse_json(matches);\n+        let error_format = config::parse_error_format(matches, color, json_rendered);\n+\n+        let codegen_options = CodegenOptions::build(matches, error_format);\n+        let debugging_opts = DebuggingOptions::build(matches, error_format);\n+\n+        let diag = new_handler(error_format, None, &debugging_opts);\n+\n+        // check for deprecated options\n+        check_deprecated_options(matches, &diag);\n+\n         if matches.opt_strs(\"passes\") == [\"list\"] {\n             println!(\"Available passes for running rustdoc:\");\n             for pass in passes::PASSES {\n@@ -359,19 +372,6 @@ impl Options {\n             return Err(0);\n         }\n \n-        let color = config::parse_color(matches);\n-        let config::JsonConfig { json_rendered, json_unused_externs, .. } =\n-            config::parse_json(matches);\n-        let error_format = config::parse_error_format(matches, color, json_rendered);\n-\n-        let codegen_options = CodegenOptions::build(matches, error_format);\n-        let debugging_opts = DebuggingOptions::build(matches, error_format);\n-\n-        let diag = new_handler(error_format, None, &debugging_opts);\n-\n-        // check for deprecated options\n-        check_deprecated_options(matches, &diag);\n-\n         let mut emit = Vec::new();\n         for list in matches.opt_strs(\"emit\") {\n             for kind in list.split(',') {"}]}