{"sha": "d5827d8bc1fd18883ad7f7a220490d12f60ae704", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODI3ZDhiYzFmZDE4ODgzYWQ3ZjdhMjIwNDkwZDEyZjYwYWU3MDQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-07T17:46:21Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:29Z"}, "message": "Update `get_parent_node`", "tree": {"sha": "a8674c03de79d1dba76af4ac517b913da53dab50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8674c03de79d1dba76af4ac517b913da53dab50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5827d8bc1fd18883ad7f7a220490d12f60ae704", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5827d8bc1fd18883ad7f7a220490d12f60ae704", "html_url": "https://github.com/rust-lang/rust/commit/d5827d8bc1fd18883ad7f7a220490d12f60ae704", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5827d8bc1fd18883ad7f7a220490d12f60ae704/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b40e6baec7504ebc7c681259d268c81b1e0241b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b40e6baec7504ebc7c681259d268c81b1e0241b2", "html_url": "https://github.com/rust-lang/rust/commit/b40e6baec7504ebc7c681259d268c81b1e0241b2"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "23a80eb6b7de393c9582e2796201e7e1b2075edc", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d5827d8bc1fd18883ad7f7a220490d12f60ae704/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5827d8bc1fd18883ad7f7a220490d12f60ae704/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=d5827d8bc1fd18883ad7f7a220490d12f60ae704", "patch": "@@ -579,12 +579,11 @@ impl<'hir> Map<'hir> {\n \n     /// Retrieves the `Node` corresponding to `id`, panicking if it cannot be found.\n     pub fn get(&self, id: HirId) -> Node<'hir> {\n-        // read recorded by `find`\n         self.find(id).unwrap_or_else(|| bug!(\"couldn't find hir id {} in the HIR map\", id))\n     }\n \n     pub fn get_if_local(&self, id: DefId) -> Option<Node<'hir>> {\n-        self.as_local_hir_id(id).map(|id| self.get(id)) // read recorded by `get`\n+        self.as_local_hir_id(id).map(|id| self.get(id))\n     }\n \n     pub fn get_generics(&self, id: DefId) -> Option<&'hir Generics<'hir>> {\n@@ -628,13 +627,7 @@ impl<'hir> Map<'hir> {\n     /// from a node to the root of the HIR (unless you get back the same ID here,\n     /// which can happen if the ID is not in the map itself or is just weird).\n     pub fn get_parent_node(&self, hir_id: HirId) -> HirId {\n-        if self.dep_graph.is_fully_enabled() {\n-            let hir_id_owner = hir_id.owner;\n-            let def_path_hash = self.definitions.def_path_hash(hir_id_owner);\n-            self.dep_graph.read(DepNode::from_def_path_hash(def_path_hash, DepKind::HirBody));\n-        }\n-\n-        self.find_entry(hir_id).and_then(|x| x.parent_node()).unwrap_or(hir_id)\n+        self.get_entry(hir_id).parent_node().unwrap_or(hir_id)\n     }\n \n     /// Returns an iterator for the nodes in the ancestor tree of the `current_id`"}]}