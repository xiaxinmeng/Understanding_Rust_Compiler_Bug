{"sha": "9900211ea07a419289037b77eda218030dc32db3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MDAyMTFlYTA3YTQxOTI4OTAzN2I3N2VkYTIxODAzMGRjMzJkYjM=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-03T05:35:58Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-07T15:05:33Z"}, "message": "track_caller error numbers and text.", "tree": {"sha": "31a7c71b0f6b338610a5ad8ad1b74a087492bd57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a7c71b0f6b338610a5ad8ad1b74a087492bd57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9900211ea07a419289037b77eda218030dc32db3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9900211ea07a419289037b77eda218030dc32db3", "html_url": "https://github.com/rust-lang/rust/commit/9900211ea07a419289037b77eda218030dc32db3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9900211ea07a419289037b77eda218030dc32db3/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d931afe47061cb27dfdb44727b0a6707868ea326", "url": "https://api.github.com/repos/rust-lang/rust/commits/d931afe47061cb27dfdb44727b0a6707868ea326", "html_url": "https://github.com/rust-lang/rust/commit/d931afe47061cb27dfdb44727b0a6707868ea326"}], "stats": {"total": 60, "additions": 32, "deletions": 28}, "files": [{"sha": "6be1b6a54fb3f381eda478dd856be4abbbe5d4d3", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -1640,16 +1640,6 @@ each method; it is not possible to annotate the entire impl with an `#[inline]`\n attribute.\n \"##,\n \n-E0900: r##\"\n-FIXME(anp): change error number\n-FIXME(anp): track_caller: invalid syntax\n-\"##,\n-\n-E0901: r##\"\n-FIXME(anp): change error number\n-FIXME(anp): track_caller: no naked functions\n-\"##,\n-\n E0522: r##\"\n The lang attribute is intended for marking special items that are built-in to\n Rust itself. This includes special traits (like `Copy` and `Sized`) that affect\n@@ -2085,6 +2075,15 @@ These attributes are meant to only be used by the standard library and are\n rejected in your own crates.\n \"##,\n \n+E0736: r##\"\n+#[track_caller] and #[naked] cannot be applied to the same function.\n+\n+This is primarily due to ABI incompatibilities between the two attributes.\n+See [RFC 2091] for details on this and other limitations.\n+\n+[RFC 2091]: https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md\n+\"##,\n+\n ;\n //  E0006, // merged with E0005\n //  E0101, // replaced with E0282\n@@ -2146,4 +2145,5 @@ rejected in your own crates.\n     E0726, // non-explicit (not `'_`) elided lifetime in unsupported position\n     E0727, // `async` generators are not yet supported\n     E0728, // `await` must be in an `async` function or block\n+    E0735, // invalid track_caller application/syntax\n }"}, {"sha": "35c7ffbf14ef376cf483b8dfd0c7bcbd16a39019", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -143,7 +143,7 @@ impl CheckAttrVisitor<'tcx> {\n             struct_span_err!(\n                 self.tcx.sess,\n                 attr.span,\n-                E0900,\n+                E0735,\n                 \"attribute should be applied to function\"\n             )\n             .span_label(item.span, \"not a function\")\n@@ -153,7 +153,7 @@ impl CheckAttrVisitor<'tcx> {\n             struct_span_err!(\n                 self.tcx.sess,\n                 attr.span,\n-                E0901,\n+                E0736,\n                 \"cannot use `#[track_caller]` with `#[naked]`\",\n             )\n             .emit();"}, {"sha": "b8d1da2bbed85225e6cf79ffa52d31bae2b082a2", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -179,7 +179,7 @@ pub fn check_trait_item(tcx: TyCtxt<'_>, def_id: DefId) {\n             struct_span_err!(\n                 tcx.sess,\n                 attr.span,\n-                E0903,\n+                E0738,\n                 \"`#[track_caller]` is not supported for trait items yet.\"\n             ).emit();\n         }"}, {"sha": "7f34aa354c9e858c288ae82fff7ae59b4544aa5e", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -2599,7 +2599,7 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, id: DefId) -> CodegenFnAttrs {\n                 struct_span_err!(\n                     tcx.sess,\n                     attr.span,\n-                    E0902,\n+                    E0737,\n                     \"rust ABI is required to use `#[track_caller]`\"\n                 ).emit();\n             }"}, {"sha": "be1e34661fd1aa0c87e54e12beaa35e386591d2d", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -4908,14 +4908,18 @@ The `Box<...>` ensures that the result is of known size,\n and the pin is required to keep it in the same place in memory.\n \"##,\n \n-E0902: r##\"\n-FIXME(anp): change error number\n-FIXME(anp): track_caller: require Rust ABI to use track_caller\n+E0737: r##\"\n+#[track_caller] requires functions to have the \"Rust\" ABI for passing caller\n+location. See [RFC 2091] for details on this and other restrictions.\n+\n+[RFC 2091]: https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md\n \"##,\n \n-E0903: r##\"\n-FIXME(anp): change error number\n-FIXME(anp): track_caller: can't apply in traits\n+E0738: r##\"\n+#[track_caller] cannot be applied to trait methods. See [RFC 2091]\n+for details on this and other restrictions.\n+\n+[RFC 2091]: https://github.com/rust-lang/rfcs/blob/master/text/2091-inline-semantic.md\n \"##,\n \n ;"}, {"sha": "e39e4bee5cf9cd696b1ba10442eb3b33c16628d5", "filename": "src/test/ui/rfc-2091-track-caller/error-with-invalid-abi.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -1,9 +1,9 @@\n-error[E0902]: rust ABI is required to use `#[track_caller]`\n+error[E0737]: rust ABI is required to use `#[track_caller]`\n   --> $DIR/error-with-invalid-abi.rs:3:1\n    |\n LL | #[track_caller]\n    | ^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0902`.\n+For more information about this error, try `rustc --explain E0737`."}, {"sha": "2f5003cfdb7a57aab2466517101303f8398d4308", "filename": "src/test/ui/rfc-2091-track-caller/error-with-naked.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-naked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-naked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-naked.stderr?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -1,9 +1,9 @@\n-error[E0901]: cannot use `#[track_caller]` with `#[naked]`\n+error[E0736]: cannot use `#[track_caller]` with `#[naked]`\n   --> $DIR/error-with-naked.rs:3:1\n    |\n LL | #[track_caller]\n    | ^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0901`.\n+For more information about this error, try `rustc --explain E0736`."}, {"sha": "e3f3135cd7366a36b5eddefd82c6d2479c3993f2", "filename": "src/test/ui/rfc-2091-track-caller/error-with-trait-fns.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-trait-fns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-trait-fns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-trait-fns.stderr?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -1,9 +1,9 @@\n-error[E0903]: `#[track_caller]` is not supported for trait items yet.\n+error[E0738]: `#[track_caller]` is not supported for trait items yet.\n   --> $DIR/error-with-trait-fns.rs:4:5\n    |\n LL |     #[track_caller]\n    |     ^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0903`.\n+For more information about this error, try `rustc --explain E0738`."}, {"sha": "ac5ba0bfbaac689b2f16397095265ebdb4c21788", "filename": "src/test/ui/rfc-2091-track-caller/only-for-fns.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9900211ea07a419289037b77eda218030dc32db3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.stderr?ref=9900211ea07a419289037b77eda218030dc32db3", "patch": "@@ -1,4 +1,4 @@\n-error[E0900]: attribute should be applied to function\n+error[E0735]: attribute should be applied to function\n   --> $DIR/only-for-fns.rs:3:1\n    |\n LL | #[track_caller]\n@@ -8,4 +8,4 @@ LL | struct S;\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0900`.\n+For more information about this error, try `rustc --explain E0735`."}]}