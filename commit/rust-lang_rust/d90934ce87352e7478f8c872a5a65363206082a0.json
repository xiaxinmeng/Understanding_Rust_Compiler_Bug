{"sha": "d90934ce87352e7478f8c872a5a65363206082a0", "node_id": "C_kwDOAAsO6NoAKGQ5MDkzNGNlODczNTJlNzQ3OGY4Yzg3MmE1YTY1MzYzMjA2MDgyYTA", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2021-09-29T20:58:33Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2021-09-29T20:58:33Z"}, "message": "Fix use after drop in self-profile with llvm events", "tree": {"sha": "c75fea2291f11880f244d6e77a66c5d10bddb6a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c75fea2291f11880f244d6e77a66c5d10bddb6a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d90934ce87352e7478f8c872a5a65363206082a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d90934ce87352e7478f8c872a5a65363206082a0", "html_url": "https://github.com/rust-lang/rust/commit/d90934ce87352e7478f8c872a5a65363206082a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d90934ce87352e7478f8c872a5a65363206082a0/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f9f7810c975234ce4730488d32661a76a00428", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f9f7810c975234ce4730488d32661a76a00428", "html_url": "https://github.com/rust-lang/rust/commit/50f9f7810c975234ce4730488d32661a76a00428"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "985640fb60e04571679df5812800ab9542096bb0", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d90934ce87352e7478f8c872a5a65363206082a0/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d90934ce87352e7478f8c872a5a65363206082a0/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=d90934ce87352e7478f8c872a5a65363206082a0", "patch": "@@ -405,13 +405,15 @@ pub(crate) unsafe fn optimize_with_new_llvm_pass_manager(\n         None\n     };\n \n-    let llvm_selfprofiler = if cgcx.prof.llvm_recording_enabled() {\n-        let mut llvm_profiler = LlvmSelfProfiler::new(cgcx.prof.get_self_profiler().unwrap());\n-        &mut llvm_profiler as *mut _ as *mut c_void\n+    let mut llvm_profiler = if cgcx.prof.llvm_recording_enabled() {\n+        Some(LlvmSelfProfiler::new(cgcx.prof.get_self_profiler().unwrap()))\n     } else {\n-        std::ptr::null_mut()\n+        None\n     };\n \n+    let llvm_selfprofiler =\n+        llvm_profiler.as_mut().map(|s| s as *mut _ as *mut c_void).unwrap_or(std::ptr::null_mut());\n+\n     let extra_passes = config.passes.join(\",\");\n \n     // FIXME: NewPM doesn't provide a facility to pass custom InlineParams."}]}