{"sha": "834fcecd3152b34efc3c194ee0af530e588e0560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNGZjZWNkMzE1MmIzNGVmYzNjMTk0ZWUwYWY1MzBlNTg4ZTA1NjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-03T13:01:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-03T13:01:58Z"}, "message": "Merge #2994\n\n2994: Small cleanup r=matklad a=SomeoneToIgnore\n\nA follow-up to https://github.com/rust-analyzer/rust-analyzer/pull/2990#discussion_r374044482\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "2ebdfcc8c36e8cc45b9fa878443d9766ca3efb4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ebdfcc8c36e8cc45b9fa878443d9766ca3efb4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/834fcecd3152b34efc3c194ee0af530e588e0560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeOBnGCRBK7hj4Ov3rIwAAdHIIALCcM2XyYj1XDywnxlZ/W9jT\nO9oBbgb3jlM9rwcq0N6DuBWoe59wbknB2fFxj/gDZfnp22Q5Vk8HWcYTIq4D9I+j\njvtArXba+SNRXoOWMo6iqMNmxe50P5N22/62t2e3TF02B1MCQ7N/gsMhfH/uyVpq\n4wh4dtA46jcbWOiIk3NFZsISg8TYQDsEyXao3PmDMv5aCLTn0iyUNEFOr09LmEOK\n0eRj6BToA32uL9pBDgqLlNDJujaTXBPst4STEHEzlB2C3bYhaGdb3yrwJz6hhq44\n6TisHh9ZrZ+ZAZh9WE1A6EfADIaLyhcpcVSzPvFLCWxOyf33R4Q2Tj+SlDiz7uU=\n=nJg4\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ebdfcc8c36e8cc45b9fa878443d9766ca3efb4e\nparent d828ea535124bd63b724d038d116b949e13d041d\nparent 4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580734918 +0000\ncommitter GitHub <noreply@github.com> 1580734918 +0000\n\nMerge #2994\n\n2994: Small cleanup r=matklad a=SomeoneToIgnore\n\nA follow-up to https://github.com/rust-analyzer/rust-analyzer/pull/2990#discussion_r374044482\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/834fcecd3152b34efc3c194ee0af530e588e0560", "html_url": "https://github.com/rust-lang/rust/commit/834fcecd3152b34efc3c194ee0af530e588e0560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/834fcecd3152b34efc3c194ee0af530e588e0560/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d828ea535124bd63b724d038d116b949e13d041d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d828ea535124bd63b724d038d116b949e13d041d", "html_url": "https://github.com/rust-lang/rust/commit/d828ea535124bd63b724d038d116b949e13d041d"}, {"sha": "4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2", "html_url": "https://github.com/rust-lang/rust/commit/4f27155d5cf6b12ed0df6f7dd430dcddda9e41d2"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "e908ab1fc0341e413fdc84d12d55ce1982e387ea", "filename": "crates/ra_assists/src/assists/auto_import.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/834fcecd3152b34efc3c194ee0af530e588e0560/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834fcecd3152b34efc3c194ee0af530e588e0560/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs?ref=834fcecd3152b34efc3c194ee0af530e588e0560", "patch": "@@ -1,7 +1,6 @@\n use hir::{db::HirDatabase, ModPath};\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxKind::{NAME_REF, USE_ITEM},\n     SyntaxNode,\n };\n \n@@ -33,11 +32,11 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n ) -> Option<Assist> {\n     let path_to_import: ast::Path = ctx.find_node_at_offset()?;\n     let path_to_import_syntax = path_to_import.syntax();\n-    if path_to_import_syntax.ancestors().find(|ancestor| ancestor.kind() == USE_ITEM).is_some() {\n+    if path_to_import_syntax.ancestors().find_map(ast::UseItem::cast).is_some() {\n         return None;\n     }\n     let name_to_import =\n-        path_to_import_syntax.descendants().find(|child| child.kind() == NAME_REF)?;\n+        path_to_import_syntax.descendants().find_map(ast::NameRef::cast)?.syntax().to_string();\n \n     let module = path_to_import_syntax.ancestors().find_map(ast::Module::cast);\n     let position = match module.and_then(|it| it.item_list()) {\n@@ -54,7 +53,7 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n     }\n \n     let proposed_imports = imports_locator\n-        .find_imports(&name_to_import.to_string())\n+        .find_imports(&name_to_import)\n         .into_iter()\n         .filter_map(|module_def| module_with_name_to_import.find_use_path(ctx.db, module_def))\n         .filter(|use_path| !use_path.segments.is_empty())"}, {"sha": "de447a5aa182b9c7c23e5f10b70bd216dfba9602", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/834fcecd3152b34efc3c194ee0af530e588e0560/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834fcecd3152b34efc3c194ee0af530e588e0560/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=834fcecd3152b34efc3c194ee0af530e588e0560", "patch": "@@ -376,7 +376,7 @@ fn main() {\n     let mut start = 0;\n     (0..2).for_each(|increment| {\n         start += increment;\n-    })\n+    });\n \n     let multiply = |a, b, c, d| a * b * c * d;\n     let _: i32 = multiply(1, 2, 3, 4);\n@@ -399,37 +399,37 @@ fn main() {\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [114; 122),\n+                range: [115; 123),\n                 kind: TypeHint,\n                 label: \"|\u2026| -> i32\",\n             },\n             InlayHint {\n-                range: [126; 127),\n+                range: [127; 128),\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [129; 130),\n+                range: [130; 131),\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [132; 133),\n+                range: [133; 134),\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [135; 136),\n+                range: [136; 137),\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [200; 212),\n+                range: [201; 213),\n                 kind: TypeHint,\n                 label: \"&|\u2026| -> i32\",\n             },\n             InlayHint {\n-                range: [235; 244),\n+                range: [236; 245),\n                 kind: TypeHint,\n                 label: \"|| -> i32\",\n             },"}]}