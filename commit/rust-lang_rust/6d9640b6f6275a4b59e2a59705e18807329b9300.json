{"sha": "6d9640b6f6275a4b59e2a59705e18807329b9300", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkOTY0MGI2ZjYyNzVhNGI1OWUyYTU5NzA1ZTE4ODA3MzI5YjkzMDA=", "commit": {"author": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2018-12-01T03:19:47Z"}, "committer": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2018-12-19T00:17:58Z"}, "message": "Search other library paths when loking for link objects\n\nSupport the case when link objects are not located in Rust sysroot\nbut in other locations which could be specify through library paths.", "tree": {"sha": "34f76cd4e852e00ae96b2e0d7ff6385d44ea983d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34f76cd4e852e00ae96b2e0d7ff6385d44ea983d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d9640b6f6275a4b59e2a59705e18807329b9300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d9640b6f6275a4b59e2a59705e18807329b9300", "html_url": "https://github.com/rust-lang/rust/commit/6d9640b6f6275a4b59e2a59705e18807329b9300", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d9640b6f6275a4b59e2a59705e18807329b9300/comments", "author": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcf920fc2707c3f126a2963a686ed800eeea49e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf920fc2707c3f126a2963a686ed800eeea49e6", "html_url": "https://github.com/rust-lang/rust/commit/bcf920fc2707c3f126a2963a686ed800eeea49e6"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "55ab0724e94b4947adcc6376e1b73b593e3ae70b", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6d9640b6f6275a4b59e2a59705e18807329b9300/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9640b6f6275a4b59e2a59705e18807329b9300/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=6d9640b6f6275a4b59e2a59705e18807329b9300", "patch": "@@ -457,6 +457,21 @@ fn print_native_static_libs(sess: &Session, all_native_libs: &[NativeLibrary]) {\n     }\n }\n \n+fn get_file_path(sess: &Session, name: &str) -> PathBuf {\n+    let fs = sess.target_filesearch(PathKind::Native);\n+    let file_path = fs.get_lib_path().join(name);\n+    if file_path.exists() {\n+        return file_path\n+    }\n+    for search_path in fs.search_paths() {\n+        let file_path = search_path.dir.join(name);\n+        if file_path.exists() {\n+            return file_path\n+        }\n+    }\n+    PathBuf::from(name)\n+}\n+\n // Create a dynamic library or executable\n //\n // This will invoke the system linker/cc to create the resulting file. This\n@@ -472,7 +487,6 @@ fn link_natively(sess: &Session,\n     // The invocations of cc share some flags across platforms\n     let (pname, mut cmd) = get_linker(sess, &linker, flavor);\n \n-    let root = sess.target_filesearch(PathKind::Native).get_lib_path();\n     if let Some(args) = sess.target.target.options.pre_link_args.get(&flavor) {\n         cmd.args(args);\n     }\n@@ -500,12 +514,12 @@ fn link_natively(sess: &Session,\n         &sess.target.target.options.pre_link_objects_dll\n     };\n     for obj in pre_link_objects {\n-        cmd.arg(root.join(obj));\n+        cmd.arg(get_file_path(sess, obj));\n     }\n \n     if crate_type == config::CrateType::Executable && sess.crt_static() {\n         for obj in &sess.target.target.options.pre_link_objects_exe_crt {\n-            cmd.arg(root.join(obj));\n+            cmd.arg(get_file_path(sess, obj));\n         }\n     }\n \n@@ -529,11 +543,11 @@ fn link_natively(sess: &Session,\n         cmd.args(args);\n     }\n     for obj in &sess.target.target.options.post_link_objects {\n-        cmd.arg(root.join(obj));\n+        cmd.arg(get_file_path(sess, obj));\n     }\n     if sess.crt_static() {\n         for obj in &sess.target.target.options.post_link_objects_crt {\n-            cmd.arg(root.join(obj));\n+            cmd.arg(get_file_path(sess, obj));\n         }\n     }\n     if let Some(args) = sess.target.target.options.post_link_args.get(&flavor) {"}, {"sha": "db0a069c3f5b68fe96f87446f84e0254fa54b220", "filename": "src/test/run-make-fulldeps/libs-search-path/Makefile", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6d9640b6f6275a4b59e2a59705e18807329b9300/src%2Ftest%2Frun-make-fulldeps%2Flibs-search-path%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6d9640b6f6275a4b59e2a59705e18807329b9300/src%2Ftest%2Frun-make-fulldeps%2Flibs-search-path%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibs-search-path%2FMakefile?ref=6d9640b6f6275a4b59e2a59705e18807329b9300", "patch": "@@ -0,0 +1,16 @@\n+-include ../tools.mk\n+\n+ifeq ($(if $(IS_WINDOWS),$(IS_MSVC),no),)\n+\n+all: empty.rs\n+\tcp -r $(shell cygpath -u $(shell $(RUSTC) --print sysroot)) $(TMPDIR)/sysroot\n+\t$(RUSTC) --target $(TARGET) --sysroot $(TMPDIR)/sysroot -L$(TMPDIR)/obj -Z print-link-args empty.rs | $(CGREP) 'lib\\\\crt2.o'\n+\tmkdir -p $(TMPDIR)/obj\n+\tmv $(TMPDIR)/sysroot/lib/rustlib/$(TARGET)/lib/crt2.o $(TMPDIR)/obj/crt2.o\n+\t$(RUSTC) --target $(TARGET) --sysroot $(TMPDIR)/sysroot -L$(TMPDIR)/obj -Z print-link-args empty.rs | $(CGREP) 'obj\\\\crt2.o'\n+\n+else\n+\n+all:\n+\n+endif"}, {"sha": "3f07b46791d22753d7a5492210b1d50c99c07cc7", "filename": "src/test/run-make-fulldeps/libs-search-path/empty.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6d9640b6f6275a4b59e2a59705e18807329b9300/src%2Ftest%2Frun-make-fulldeps%2Flibs-search-path%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9640b6f6275a4b59e2a59705e18807329b9300/src%2Ftest%2Frun-make-fulldeps%2Flibs-search-path%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flibs-search-path%2Fempty.rs?ref=6d9640b6f6275a4b59e2a59705e18807329b9300", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {}"}]}