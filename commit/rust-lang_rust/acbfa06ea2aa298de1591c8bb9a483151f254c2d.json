{"sha": "acbfa06ea2aa298de1591c8bb9a483151f254c2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYmZhMDZlYTJhYTI5OGRlMTU5MWM4YmI5YTQ4MzE1MWYyNTRjMmQ=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2020-05-29T09:06:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-29T09:06:29Z"}, "message": "Mark blocks that call cold funs as cold (#1021)", "tree": {"sha": "9d4ba50c8356f421a1e3f72176ecddad7b82e96e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d4ba50c8356f421a1e3f72176ecddad7b82e96e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acbfa06ea2aa298de1591c8bb9a483151f254c2d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0NCVCRBK7hj4Ov3rIwAAdHIIAEXgCGnUgWGHsn21BKRxP120\nwgOZhdrmyqZ59OYHbhkbxEBsoLc29HVxyuPt/hW/aBnExlhcxEeamKqodkIu3bPP\n41ByJrzRaKYneGA9V0Rnv9kkAU06403LaAW5IS7crKuz7JWdGaTl4wI0qIyiZb5x\nNABufjIMxKdPmhWZTXM0Xb2PUuW9UZMZASzg52D885VHu/T5E34MidcWZWCPtkRn\nflXux89Fc8rSDrfXEIQMUoB1ZkjZsNhK544OLDYu0G4YugglNAa4SrOrxgN641ye\nz7VelR5b6G0QS5LrqgoT/fk0x4NoxYB+y5f1PWQU7oozqG3bn44jw5pTlckszcQ=\n=vdEu\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d4ba50c8356f421a1e3f72176ecddad7b82e96e\nparent bb4cc18cf27c5e0cccfd91e5da489321222d52aa\nauthor \u00d6mer Sinan A\u011facan <omeragacan@gmail.com> 1590743189 +0300\ncommitter GitHub <noreply@github.com> 1590743189 +0200\n\nMark blocks that call cold funs as cold (#1021)\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acbfa06ea2aa298de1591c8bb9a483151f254c2d", "html_url": "https://github.com/rust-lang/rust/commit/acbfa06ea2aa298de1591c8bb9a483151f254c2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acbfa06ea2aa298de1591c8bb9a483151f254c2d/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb4cc18cf27c5e0cccfd91e5da489321222d52aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4cc18cf27c5e0cccfd91e5da489321222d52aa", "html_url": "https://github.com/rust-lang/rust/commit/bb4cc18cf27c5e0cccfd91e5da489321222d52aa"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "8f59fa91bfb49adc2fc68a97c3cac3311a8d7d20", "filename": "src/abi/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/acbfa06ea2aa298de1591c8bb9a483151f254c2d/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acbfa06ea2aa298de1591c8bb9a483151f254c2d/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=acbfa06ea2aa298de1591c8bb9a483151f254c2d", "patch": "@@ -4,6 +4,7 @@ mod pass_mode;\n mod returning;\n \n use rustc_target::spec::abi::Abi;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n \n use cranelift_codegen::ir::AbiParam;\n \n@@ -431,6 +432,7 @@ pub(crate) fn codegen_fn_prelude<'tcx>(\n pub(crate) fn codegen_terminator_call<'tcx>(\n     fx: &mut FunctionCx<'_, 'tcx, impl Backend>,\n     span: Span,\n+    current_block: Block,\n     func: &Operand<'tcx>,\n     args: &[Operand<'tcx>],\n     destination: Option<(Place<'tcx>, BasicBlock)>,\n@@ -440,8 +442,6 @@ pub(crate) fn codegen_terminator_call<'tcx>(\n         .tcx\n         .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), &fn_ty.fn_sig(fx.tcx));\n \n-    // FIXME mark the current block as cold when calling a `#[cold]` function.\n-\n     let destination = destination.map(|(place, bb)| (trans_place(fx, place), bb));\n \n     // Handle special calls like instrinsics and empty drop glue.\n@@ -479,6 +479,15 @@ pub(crate) fn codegen_terminator_call<'tcx>(\n         None\n     };\n \n+    let is_cold =\n+        instance.map(|inst|\n+            fx.tcx.codegen_fn_attrs(inst.def_id())\n+                .flags.contains(CodegenFnAttrFlags::COLD))\n+                .unwrap_or(false);\n+    if is_cold {\n+        fx.cold_blocks.insert(current_block);\n+    }\n+\n     // Unpack arguments tuple for closures\n     let args = if fn_sig.abi == Abi::RustCall {\n         assert_eq!(args.len(), 2, \"rust-call abi requires two arguments\");"}, {"sha": "201b0f7a181ae2456c2077f51b7264323e759fbf", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acbfa06ea2aa298de1591c8bb9a483151f254c2d/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acbfa06ea2aa298de1591c8bb9a483151f254c2d/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=acbfa06ea2aa298de1591c8bb9a483151f254c2d", "patch": "@@ -300,6 +300,7 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, impl Backend>) {\n                 fx.tcx.sess.time(\"codegen call\", || crate::abi::codegen_terminator_call(\n                     fx,\n                     bb_data.terminator().source_info.span,\n+                    block,\n                     func,\n                     args,\n                     *destination,"}]}