{"sha": "19b63bc791dee7329922f809f5468483b0d72bc6", "node_id": "C_kwDOAAsO6NoAKDE5YjYzYmM3OTFkZWU3MzI5OTIyZjgwOWY1NDY4NDgzYjBkNzJiYzY", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-11-16T18:21:15Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-11-17T21:45:46Z"}, "message": "Edit docs for `rustc_errors::Handler::stash_diagnostic`\n\nClarify that the diagnostic can be retrieved with `steal_diagnostic`.", "tree": {"sha": "972197a717fff248cb9aed411ec31073c745ab39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/972197a717fff248cb9aed411ec31073c745ab39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19b63bc791dee7329922f809f5468483b0d72bc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19b63bc791dee7329922f809f5468483b0d72bc6", "html_url": "https://github.com/rust-lang/rust/commit/19b63bc791dee7329922f809f5468483b0d72bc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19b63bc791dee7329922f809f5468483b0d72bc6/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63c748ee23ab7b6706655146f5b7c7f579811803", "url": "https://api.github.com/repos/rust-lang/rust/commits/63c748ee23ab7b6706655146f5b7c7f579811803", "html_url": "https://github.com/rust-lang/rust/commit/63c748ee23ab7b6706655146f5b7c7f579811803"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ae88fcade6314f98c0797b530ed336c496857917", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19b63bc791dee7329922f809f5468483b0d72bc6/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19b63bc791dee7329922f809f5468483b0d72bc6/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=19b63bc791dee7329922f809f5468483b0d72bc6", "patch": "@@ -644,13 +644,14 @@ impl Handler {\n         inner.stashed_diagnostics = Default::default();\n     }\n \n-    /// Stash a given diagnostic with the given `Span` and `StashKey` as the key for later stealing.\n+    /// Stash a given diagnostic with the given `Span` and [`StashKey`] as the key.\n+    /// Retrieve a stashed diagnostic with `steal_diagnostic`.\n     pub fn stash_diagnostic(&self, span: Span, key: StashKey, diag: Diagnostic) {\n         let mut inner = self.inner.borrow_mut();\n         inner.stash((span, key), diag);\n     }\n \n-    /// Steal a previously stashed diagnostic with the given `Span` and `StashKey` as the key.\n+    /// Steal a previously stashed diagnostic with the given `Span` and [`StashKey`] as the key.\n     pub fn steal_diagnostic(&self, span: Span, key: StashKey) -> Option<DiagnosticBuilder<'_, ()>> {\n         let mut inner = self.inner.borrow_mut();\n         inner.steal((span, key)).map(|diag| DiagnosticBuilder::new_diagnostic(self, diag))"}]}