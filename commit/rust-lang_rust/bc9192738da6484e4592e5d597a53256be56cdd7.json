{"sha": "bc9192738da6484e4592e5d597a53256be56cdd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOTE5MjczOGRhNjQ4NGU0NTkyZTVkNTk3YTUzMjU2YmU1NmNkZDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-13T17:05:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-13T17:05:50Z"}, "message": "Auto merge of #31591 - alexcrichton:make-clean-with-rustbuild, r=brson\n\nAt the same time also touch up the job management on Windows to be a little more resilient to failure.", "tree": {"sha": "0972eb6698dbf8586c29cb4c2a5c2d649c02a463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0972eb6698dbf8586c29cb4c2a5c2d649c02a463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc9192738da6484e4592e5d597a53256be56cdd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9192738da6484e4592e5d597a53256be56cdd7", "html_url": "https://github.com/rust-lang/rust/commit/bc9192738da6484e4592e5d597a53256be56cdd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc9192738da6484e4592e5d597a53256be56cdd7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b7245047b802f8e01c824a6efd8197da8be82fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b7245047b802f8e01c824a6efd8197da8be82fb", "html_url": "https://github.com/rust-lang/rust/commit/4b7245047b802f8e01c824a6efd8197da8be82fb"}, {"sha": "07638b95cec645bf8f587eb7851412aa3cdf4995", "url": "https://api.github.com/repos/rust-lang/rust/commits/07638b95cec645bf8f587eb7851412aa3cdf4995", "html_url": "https://github.com/rust-lang/rust/commit/07638b95cec645bf8f587eb7851412aa3cdf4995"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "8f78fed001cf1316b9d668c339ae906c2df958ae", "filename": "src/bootstrap/build/clean.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fclean.rs?ref=bc9192738da6484e4592e5d597a53256be56cdd7", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fs;\n+use std::path::Path;\n+\n+use build::Build;\n+\n+pub fn clean(build: &Build) {\n+    for host in build.config.host.iter() {\n+\n+        let out = build.out.join(host);\n+\n+        rm_rf(build, &out.join(\"compiler-rt\"));\n+\n+        for stage in 0..4 {\n+            rm_rf(build, &out.join(format!(\"stage{}\", stage)));\n+            rm_rf(build, &out.join(format!(\"stage{}-std\", stage)));\n+            rm_rf(build, &out.join(format!(\"stage{}-rustc\", stage)));\n+        }\n+    }\n+}\n+\n+fn rm_rf(build: &Build, path: &Path) {\n+    if path.exists() {\n+        build.verbose(&format!(\"removing `{}`\", path.display()));\n+        t!(fs::remove_dir_all(path));\n+    }\n+}"}, {"sha": "d91dfe0903d1144e58e7ddcad322691f20ba88ee", "filename": "src/bootstrap/build/flags.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fflags.rs?ref=bc9192738da6484e4592e5d597a53256be56cdd7", "patch": "@@ -26,6 +26,7 @@ pub struct Flags {\n     pub src: Option<PathBuf>,\n     pub jobs: Option<u32>,\n     pub args: Vec<String>,\n+    pub clean: bool,\n }\n \n pub struct Filter {\n@@ -44,6 +45,7 @@ impl Flags {\n         opts.optopt(\"\", \"stage\", \"stage to build\", \"N\");\n         opts.optopt(\"\", \"src\", \"path to repo root\", \"DIR\");\n         opts.optopt(\"j\", \"jobs\", \"number of jobs to run in parallel\", \"JOBS\");\n+        opts.optflag(\"\", \"clean\", \"clean output directory\");\n         opts.optflag(\"h\", \"help\", \"print this help message\");\n \n         let usage = |n| -> ! {\n@@ -75,6 +77,7 @@ impl Flags {\n \n         Flags {\n             verbose: m.opt_present(\"v\"),\n+            clean: m.opt_present(\"clean\"),\n             stage: m.opt_str(\"stage\").map(|j| j.parse().unwrap()),\n             build: m.opt_str(\"build\").unwrap(),\n             host: Filter { values: m.opt_strs(\"host\") },"}, {"sha": "a4e53bc45fcfbf979836b89b8ea1bba17b834122", "filename": "src/bootstrap/build/job.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fjob.rs?ref=bc9192738da6484e4592e5d597a53256be56cdd7", "patch": "@@ -64,9 +64,20 @@ pub unsafe fn setup() {\n                                     mem::size_of_val(&info) as DWORD);\n     assert!(r != 0, \"{}\", io::Error::last_os_error());\n \n-    // Assign our process to this job object\n+    // Assign our process to this job object. Note that if this fails, one very\n+    // likely reason is that we are ourselves already in a job object! This can\n+    // happen on the build bots that we've got for Windows, or if just anyone\n+    // else is instrumenting the build. In this case we just bail out\n+    // immediately and assume that they take care of it.\n+    //\n+    // Also note that nested jobs (why this might fail) are supported in recent\n+    // versions of Windows, but the version of Windows that our bots are running\n+    // at least don't support nested job objects.\n     let r = AssignProcessToJobObject(job, GetCurrentProcess());\n-    assert!(r != 0, \"{}\", io::Error::last_os_error());\n+    if r == 0 {\n+        CloseHandle(job);\n+        return\n+    }\n \n     // If we've got a parent process (e.g. the python script that called us)\n     // then move ownership of this job object up to them. That way if the python"}, {"sha": "92043ee3f253df496afc3ae1d248a5e9a3fc50bb", "filename": "src/bootstrap/build/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fmod.rs?ref=bc9192738da6484e4592e5d597a53256be56cdd7", "patch": "@@ -30,6 +30,7 @@ macro_rules! t {\n \n mod cc;\n mod channel;\n+mod clean;\n mod compile;\n mod config;\n mod flags;\n@@ -122,6 +123,10 @@ impl Build {\n         #[cfg(not(windows))] fn setup_job() {}\n         setup_job();\n \n+        if self.flags.clean {\n+            return clean::clean(self);\n+        }\n+\n         cc::find(self);\n         sanity::check(self);\n         channel::collect(self);"}, {"sha": "bd29fd8612d4e5741ff23fe3a9cbc01cc8e5dd8e", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/bc9192738da6484e4592e5d597a53256be56cdd7/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=bc9192738da6484e4592e5d597a53256be56cdd7", "patch": "@@ -21,3 +21,6 @@ BOOTSTRAP := $(CFG_PYTHON) $(CFG_SRC_DIR)src/bootstrap/bootstrap.py $(BOOTSTRAP_\n \n all:\n \t$(Q)$(BOOTSTRAP)\n+\n+clean:\n+\t$(Q)$(BOOTSTRAP) --clean"}]}