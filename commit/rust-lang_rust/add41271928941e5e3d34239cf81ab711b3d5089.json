{"sha": "add41271928941e5e3d34239cf81ab711b3d5089", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZDQxMjcxOTI4OTQxZTVlM2QzNDIzOWNmODFhYjcxMWIzZDUwODk=", "commit": {"author": {"name": "Mahmut Bulut", "email": "mahmutbulut0@gmail.com", "date": "2012-10-31T22:49:37Z"}, "committer": {"name": "Mahmut Bulut", "email": "mahmutbulut0@gmail.com", "date": "2012-10-31T22:49:37Z"}, "message": "change function and place in expr.rs", "tree": {"sha": "90306b62f8c9c836bb6a995f6c2f758d5d3d6cd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90306b62f8c9c836bb6a995f6c2f758d5d3d6cd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/add41271928941e5e3d34239cf81ab711b3d5089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/add41271928941e5e3d34239cf81ab711b3d5089", "html_url": "https://github.com/rust-lang/rust/commit/add41271928941e5e3d34239cf81ab711b3d5089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/add41271928941e5e3d34239cf81ab711b3d5089/comments", "author": {"login": "vertexclique", "id": 578559, "node_id": "MDQ6VXNlcjU3ODU1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/578559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vertexclique", "html_url": "https://github.com/vertexclique", "followers_url": "https://api.github.com/users/vertexclique/followers", "following_url": "https://api.github.com/users/vertexclique/following{/other_user}", "gists_url": "https://api.github.com/users/vertexclique/gists{/gist_id}", "starred_url": "https://api.github.com/users/vertexclique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vertexclique/subscriptions", "organizations_url": "https://api.github.com/users/vertexclique/orgs", "repos_url": "https://api.github.com/users/vertexclique/repos", "events_url": "https://api.github.com/users/vertexclique/events{/privacy}", "received_events_url": "https://api.github.com/users/vertexclique/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vertexclique", "id": 578559, "node_id": "MDQ6VXNlcjU3ODU1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/578559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vertexclique", "html_url": "https://github.com/vertexclique", "followers_url": "https://api.github.com/users/vertexclique/followers", "following_url": "https://api.github.com/users/vertexclique/following{/other_user}", "gists_url": "https://api.github.com/users/vertexclique/gists{/gist_id}", "starred_url": "https://api.github.com/users/vertexclique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vertexclique/subscriptions", "organizations_url": "https://api.github.com/users/vertexclique/orgs", "repos_url": "https://api.github.com/users/vertexclique/repos", "events_url": "https://api.github.com/users/vertexclique/events{/privacy}", "received_events_url": "https://api.github.com/users/vertexclique/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dc4d024a88b6d2a6a31aad8d09d62c4dc883a85", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4d024a88b6d2a6a31aad8d09d62c4dc883a85", "html_url": "https://github.com/rust-lang/rust/commit/1dc4d024a88b6d2a6a31aad8d09d62c4dc883a85"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "5e11cdd479436e6f02ad5f218d482790e45b7e60", "filename": "src/rustc/middle/trans/datum.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/add41271928941e5e3d34239cf81ab711b3d5089/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add41271928941e5e3d34239cf81ab711b3d5089/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=add41271928941e5e3d34239cf81ab711b3d5089", "patch": "@@ -542,25 +542,6 @@ impl Datum {\n         };\n     }\n \n-    fn dropnzero_val(bcx: block) -> block {\n-        if !ty::type_needs_drop(bcx.tcx(), self.ty) {\n-            return bcx;\n-        }\n-\n-        return match self.mode {\n-            ByRef => {\n-                glue::drop_ty(bcx, self.val, self.ty);\n-                zero_mem(bcx, self.val, self.ty);\n-                return bcx;\n-            }\n-            ByValue => {\n-                glue::drop_ty_immediate(bcx, self.val, self.ty);\n-                zero_mem(bcx, self.val, self.ty);\n-                return bcx;\n-            }\n-        };\n-    }\n-\n     fn box_body(bcx: block) -> Datum {\n         /*!\n          *"}, {"sha": "06c2421a452d7720210c139e20af07d4140a6ed2", "filename": "src/rustc/middle/trans/expr.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/add41271928941e5e3d34239cf81ab711b3d5089/src%2Frustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add41271928941e5e3d34239cf81ab711b3d5089/src%2Frustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=add41271928941e5e3d34239cf81ab711b3d5089", "patch": "@@ -159,6 +159,12 @@ impl Dest : cmp::Eq {\n     pure fn ne(other: &Dest) -> bool { !self.eq(other) }\n }\n \n+fn drop_and_cancel_clean(dat: Datum, bcx: block) -> block {\n+    let bcx = dat.drop_val(bcx);\n+    dat.cancel_clean(bcx);\n+    return bcx;\n+}\n+\n fn trans_to_datum(bcx: block, expr: @ast::expr) -> DatumBlock {\n     debug!(\"trans_to_datum(expr=%s)\", bcx.expr_to_str(expr));\n \n@@ -573,7 +579,7 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n             if bcx.expr_is_lval(a) {\n                 let datum = unpack_datum!(bcx, trans_to_datum(bcx, a));\n                 return match dest {\n-                    Ignore => datum.dropnzero_val(bcx),\n+                    Ignore => drop_and_cancel_clean(datum, bcx),\n                     SaveIn(addr) => datum.move_to(bcx, INIT, addr)\n                 };\n             } else {"}]}