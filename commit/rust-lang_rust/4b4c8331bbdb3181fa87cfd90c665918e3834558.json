{"sha": "4b4c8331bbdb3181fa87cfd90c665918e3834558", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNGM4MzMxYmJkYjMxODFmYTg3Y2ZkOTBjNjY1OTE4ZTM4MzQ1NTg=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2012-12-09T07:26:12Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2012-12-09T07:26:12Z"}, "message": "Add deprecated attribute.", "tree": {"sha": "7c529054ebb96ddd7c1963af034a3da35a2ad802", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c529054ebb96ddd7c1963af034a3da35a2ad802"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b4c8331bbdb3181fa87cfd90c665918e3834558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b4c8331bbdb3181fa87cfd90c665918e3834558", "html_url": "https://github.com/rust-lang/rust/commit/4b4c8331bbdb3181fa87cfd90c665918e3834558", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b4c8331bbdb3181fa87cfd90c665918e3834558/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42f8a3366a8e687ac1df804f41cfe1d980ce9987", "url": "https://api.github.com/repos/rust-lang/rust/commits/42f8a3366a8e687ac1df804f41cfe1d980ce9987", "html_url": "https://github.com/rust-lang/rust/commit/42f8a3366a8e687ac1df804f41cfe1d980ce9987"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "7c672016a798d58703a89086790daa1b7d018130", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4b4c8331bbdb3181fa87cfd90c665918e3834558/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b4c8331bbdb3181fa87cfd90c665918e3834558/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=4b4c8331bbdb3181fa87cfd90c665918e3834558", "patch": "@@ -60,6 +60,7 @@ enum lint {\n     unrecognized_lint,\n     non_implicitly_copyable_typarams,\n     vecs_implicitly_copyable,\n+    deprecated_item,\n     deprecated_mode,\n     deprecated_pattern,\n     non_camel_case_types,\n@@ -157,6 +158,11 @@ fn get_lint_dict() -> lint_dict {\n            desc: ~\"implicit copies of non implicitly copyable data\",\n            default: warn}),\n \n+        (~\"deprecated_item\",\n+         @{lint: deprecated_item,\n+           desc: ~\"warn about items marked deprecated\",\n+           default: warn}),\n+\n         (~\"deprecated_mode\",\n          @{lint: deprecated_mode,\n            desc: ~\"warn about deprecated uses of modes\",\n@@ -412,6 +418,7 @@ fn check_item(i: @ast::item, cx: ty::ctxt) {\n     check_item_non_camel_case_types(cx, i);\n     check_item_heap(cx, i);\n     check_item_structural_records(cx, i);\n+    check_item_deprecated(cx, i);\n     check_item_deprecated_modes(cx, i);\n     check_item_type_limits(cx, i);\n }\n@@ -767,6 +774,26 @@ fn check_item_non_camel_case_types(cx: ty::ctxt, it: @ast::item) {\n     }\n }\n \n+fn check_item_deprecated(tcx: ty::ctxt, it: @ast::item) {\n+    let at = attr::find_attrs_by_name(it.attrs, ~\"deprecated\");\n+\n+    if at.is_not_empty() {\n+        for at.each |attr| {\n+            let fmt = match attr.node.value.node {\n+                ast::meta_name_value(_, ref l) =>\n+                    match l.node {\n+                        ast::lit_str(ref reason) =>\n+                            fmt!(\"deprecated: %s\", **reason),\n+                        _ =>  ~\"item is deprecated\" \n+                    },\n+                _ => ~\"item is deprecated\"\n+            };\n+            tcx.sess.span_lint(deprecated_item, it.id, it.id, it.span,\n+                fmt);\n+        }\n+    }\n+}\n+\n fn check_fn(tcx: ty::ctxt, fk: visit::fn_kind, decl: ast::fn_decl,\n             _body: ast::blk, span: span, id: ast::node_id) {\n     debug!(\"lint check_fn fk=%? id=%?\", fk, id);"}, {"sha": "aadea886407cd20d4b42cfc817db2dd3824143f4", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b4c8331bbdb3181fa87cfd90c665918e3834558/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b4c8331bbdb3181fa87cfd90c665918e3834558/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=4b4c8331bbdb3181fa87cfd90c665918e3834558", "patch": "@@ -182,7 +182,7 @@ fn find_attrs_by_name(attrs: ~[ast::attribute], name: ~str) ->\n     return vec::filter_map(attrs, filter);\n }\n \n-/// Searcha list of meta items and return only those with a specific name\n+/// Search a list of meta items and return only those with a specific name\n fn find_meta_items_by_name(metas: ~[@ast::meta_item], name: ~str) ->\n    ~[@ast::meta_item] {\n     let filter = fn@(m: &@ast::meta_item) -> Option<@ast::meta_item> {"}]}