{"sha": "a2624fc90891b8265550229e38bc255e61a9d335", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNjI0ZmM5MDg5MWI4MjY1NTUwMjI5ZTM4YmMyNTVlNjFhOWQzMzU=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-10-30T20:17:06Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-10-30T20:38:20Z"}, "message": "Use the `_` representation for integral variables as well", "tree": {"sha": "0afdc9d250bcd9c4bc1dc70df827e8ca15c24644", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0afdc9d250bcd9c4bc1dc70df827e8ca15c24644"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2624fc90891b8265550229e38bc255e61a9d335", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2624fc90891b8265550229e38bc255e61a9d335", "html_url": "https://github.com/rust-lang/rust/commit/a2624fc90891b8265550229e38bc255e61a9d335", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2624fc90891b8265550229e38bc255e61a9d335/comments", "author": null, "committer": null, "parents": [{"sha": "cac995444b69cb1453bc2be1fd5de27f110c0e01", "url": "https://api.github.com/repos/rust-lang/rust/commits/cac995444b69cb1453bc2be1fd5de27f110c0e01", "html_url": "https://github.com/rust-lang/rust/commit/cac995444b69cb1453bc2be1fd5de27f110c0e01"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "8befba00fd2fefa541d5e4623908c4808290e1dd", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a2624fc90891b8265550229e38bc255e61a9d335/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2624fc90891b8265550229e38bc255e61a9d335/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=a2624fc90891b8265550229e38bc255e61a9d335", "patch": "@@ -376,9 +376,8 @@ pub fn ty_to_string(cx: &ctxt, typ: t) -> String {\n                 format!(\"_#{}i\", vid),\n             ty::FloatVar(ty::FloatVid { index: vid }) if print_var_ids =>\n                 format!(\"_#{}f\", vid),\n-            ty::TyVar(_) => \"_\".to_string(),\n-            ty::IntVar(_) => \"_#i\".to_string(),\n-            ty::FloatVar(_) => \"_#f\".to_string(),\n+            ty::TyVar(_) | ty::IntVar(_) | ty::FloatVar(_) =>\n+                \"_\".to_string(),\n             ty::SkolemizedTy(v) => format!(\"SkolemizedTy({})\", v),\n             ty::SkolemizedIntTy(v) => format!(\"SkolemizedIntTy({})\", v)\n         }"}, {"sha": "18070ed53b04ac8a791d27666bf753465a65d464", "filename": "src/test/compile-fail/issue-13482.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fissue-13482.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fissue-13482.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13482.rs?ref=a2624fc90891b8265550229e38bc255e61a9d335", "patch": "@@ -12,7 +12,7 @@ fn main() {\n   let x = [1,2];\n   let y = match x {\n     [] => None,\n-//~^ ERROR types: expected `[_#i, ..2]`, found `[_, ..0]`\n+//~^ ERROR types: expected `[_, ..2]`, found `[_, ..0]`\n //         (expected array of 2 elements, found array of 0 elements)\n     [a,_] => Some(a)\n   };"}, {"sha": "0391c73d90a6cca8032e62e0584c8a659a21ebe0", "filename": "src/test/compile-fail/issue-4201.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fissue-4201.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fissue-4201.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4201.rs?ref=a2624fc90891b8265550229e38bc255e61a9d335", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     let a = if true {\n         0\n     } else if false {\n-//~^ ERROR if may be missing an else clause: expected `()`, found `_#i`\n+//~^ ERROR if may be missing an else clause: expected `()`, found `_`\n         1\n     };\n }"}, {"sha": "cf1f1f5908954541c4fe5c2b71e673dac1118146", "filename": "src/test/compile-fail/issue-4968.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4968.rs?ref=a2624fc90891b8265550229e38bc255e61a9d335", "patch": "@@ -13,6 +13,6 @@\n const A: (int,int) = (4,2);\n fn main() {\n     match 42 { A => () }\n-    //~^ ERROR mismatched types: expected `_#i`, found `(int, int)`\n+    //~^ ERROR mismatched types: expected `_`, found `(int, int)`\n     //         (expected integral variable, found tuple)\n }"}, {"sha": "be79a7a915b881b346e9091b804d4dc0ac6dcb1e", "filename": "src/test/compile-fail/repeat_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs?ref=a2624fc90891b8265550229e38bc255e61a9d335", "patch": "@@ -18,7 +18,7 @@ fn main() {\n     let c = [0, ..true]; //~ ERROR expected positive integer for repeat count, found boolean\n     //~^ ERROR: expected `uint`, found `bool`\n     let d = [0, ..0.5]; //~ ERROR expected positive integer for repeat count, found float\n-    //~^ ERROR: expected `uint`, found `_#f`\n+    //~^ ERROR: expected `uint`, found `_`\n     let e = [0, ..\"foo\"]; //~ ERROR expected positive integer for repeat count, found string\n     //~^ ERROR: expected `uint`, found `&'static str`\n     let f = [0, ..-4];"}, {"sha": "a655a17c037d249473f7dcbc419957422c5bcd93", "filename": "src/test/compile-fail/slightly-nice-generic-literal-messages.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fslightly-nice-generic-literal-messages.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2624fc90891b8265550229e38bc255e61a9d335/src%2Ftest%2Fcompile-fail%2Fslightly-nice-generic-literal-messages.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslightly-nice-generic-literal-messages.rs?ref=a2624fc90891b8265550229e38bc255e61a9d335", "patch": "@@ -13,7 +13,7 @@ struct Foo<T,U>(T);\n fn main() {\n     match Foo(1.1) {\n         1 => {}\n-    //~^ ERROR expected `Foo<_#f, _>`, found `_#i`\n+    //~^ ERROR expected `Foo<_, _>`, found `_`\n     }\n \n }"}]}