{"sha": "ffaef1b7aeb61984992e231d9af20f39486403ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYWVmMWI3YWViNjE5ODQ5OTJlMjMxZDlhZjIwZjM5NDg2NDAzZWE=", "commit": {"author": {"name": "Craig Disselkoen", "email": "craigdissel@gmail.com", "date": "2020-05-05T18:59:41Z"}, "committer": {"name": "Craig Disselkoen", "email": "craigdissel@gmail.com", "date": "2020-05-05T23:12:56Z"}, "message": "ra_project_model: look for Cargo in more places\n\nSee #3118", "tree": {"sha": "2ed0d69b8b96b0e8e7a474c342eb26de9a2c35e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ed0d69b8b96b0e8e7a474c342eb26de9a2c35e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffaef1b7aeb61984992e231d9af20f39486403ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffaef1b7aeb61984992e231d9af20f39486403ea", "html_url": "https://github.com/rust-lang/rust/commit/ffaef1b7aeb61984992e231d9af20f39486403ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffaef1b7aeb61984992e231d9af20f39486403ea/comments", "author": {"login": "cdisselkoen", "id": 4458638, "node_id": "MDQ6VXNlcjQ0NTg2Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdisselkoen", "html_url": "https://github.com/cdisselkoen", "followers_url": "https://api.github.com/users/cdisselkoen/followers", "following_url": "https://api.github.com/users/cdisselkoen/following{/other_user}", "gists_url": "https://api.github.com/users/cdisselkoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdisselkoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdisselkoen/subscriptions", "organizations_url": "https://api.github.com/users/cdisselkoen/orgs", "repos_url": "https://api.github.com/users/cdisselkoen/repos", "events_url": "https://api.github.com/users/cdisselkoen/events{/privacy}", "received_events_url": "https://api.github.com/users/cdisselkoen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cdisselkoen", "id": 4458638, "node_id": "MDQ6VXNlcjQ0NTg2Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdisselkoen", "html_url": "https://github.com/cdisselkoen", "followers_url": "https://api.github.com/users/cdisselkoen/followers", "following_url": "https://api.github.com/users/cdisselkoen/following{/other_user}", "gists_url": "https://api.github.com/users/cdisselkoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdisselkoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdisselkoen/subscriptions", "organizations_url": "https://api.github.com/users/cdisselkoen/orgs", "repos_url": "https://api.github.com/users/cdisselkoen/repos", "events_url": "https://api.github.com/users/cdisselkoen/events{/privacy}", "received_events_url": "https://api.github.com/users/cdisselkoen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30eb458b4fa8adcecd8cbf731bd1cfa9a7a8b88b", "url": "https://api.github.com/repos/rust-lang/rust/commits/30eb458b4fa8adcecd8cbf731bd1cfa9a7a8b88b", "html_url": "https://github.com/rust-lang/rust/commit/30eb458b4fa8adcecd8cbf731bd1cfa9a7a8b88b"}], "stats": {"total": 138, "additions": 128, "deletions": 10}, "files": [{"sha": "b2d4569b386e183fea911d3cb82b22380ebf6784", "filename": "Cargo.lock", "status": "modified", "additions": 76, "deletions": 1, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/ffaef1b7aeb61984992e231d9af20f39486403ea/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ffaef1b7aeb61984992e231d9af20f39486403ea/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ffaef1b7aeb61984992e231d9af20f39486403ea", "patch": "@@ -21,6 +21,12 @@ version = \"0.12.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"33954243bd79057c2de7338850b85983a44588021f8a5fee574a8888c6de4344\"\n \n+[[package]]\n+name = \"arrayref\"\n+version = \"0.3.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544\"\n+\n [[package]]\n name = \"arrayvec\"\n version = \"0.5.1\"\n@@ -66,6 +72,12 @@ dependencies = [\n  \"libc\",\n ]\n \n+[[package]]\n+name = \"base64\"\n+version = \"0.11.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b41b7ea54a0c9d92199de89e20e58d49f02f8e699814ef3fdf266f6f748d15c7\"\n+\n [[package]]\n name = \"base64\"\n version = \"0.12.0\"\n@@ -78,6 +90,17 @@ version = \"1.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n \n+[[package]]\n+name = \"blake2b_simd\"\n+version = \"0.5.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d8fb2d74254a3a0b5cac33ac9f8ed0e44aa50378d9dbb2e5d83bd21ed1dc2c8a\"\n+dependencies = [\n+ \"arrayref\",\n+ \"arrayvec\",\n+ \"constant_time_eq\",\n+]\n+\n [[package]]\n name = \"bstr\"\n version = \"0.2.12\"\n@@ -212,6 +235,12 @@ dependencies = [\n  \"winapi 0.3.8\",\n ]\n \n+[[package]]\n+name = \"constant_time_eq\"\n+version = \"0.1.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc\"\n+\n [[package]]\n name = \"crossbeam\"\n version = \"0.7.3\"\n@@ -289,6 +318,28 @@ version = \"2.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n \n+[[package]]\n+name = \"dirs\"\n+version = \"2.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"13aea89a5c93364a98e9b37b2fa237effbb694d5cfe01c5b70941f7eb087d5e3\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"dirs-sys\",\n+]\n+\n+[[package]]\n+name = \"dirs-sys\"\n+version = \"0.3.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"afa0b23de8fd801745c471deffa6e12d248f962c9fd4b4c33787b055599bde7b\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"libc\",\n+ \"redox_users\",\n+ \"winapi 0.3.8\",\n+]\n+\n [[package]]\n name = \"drop_bomb\"\n version = \"0.1.4\"\n@@ -659,7 +710,7 @@ version = \"0.74.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"57c0e6a2b8837d27b29deb3f3e6dc1c6d2f57947677f9be1024e482ec5b59525\"\n dependencies = [\n- \"base64\",\n+ \"base64 0.12.0\",\n  \"bitflags\",\n  \"serde\",\n  \"serde_json\",\n@@ -1158,6 +1209,7 @@ version = \"0.1.0\"\n dependencies = [\n  \"anyhow\",\n  \"cargo_metadata\",\n+ \"dirs\",\n  \"log\",\n  \"ra_arena\",\n  \"ra_cfg\",\n@@ -1298,6 +1350,17 @@ version = \"0.1.56\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"2439c63f3f6139d1b57529d16bc3b8bb855230c8efcc5d3a896c8bea7c3b1e84\"\n \n+[[package]]\n+name = \"redox_users\"\n+version = \"0.3.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"09b23093265f8d200fa7b4c2c76297f47e681c655f6f1285a8780d6a022f7431\"\n+dependencies = [\n+ \"getrandom\",\n+ \"redox_syscall\",\n+ \"rust-argon2\",\n+]\n+\n [[package]]\n name = \"regex\"\n version = \"1.3.7\"\n@@ -1382,6 +1445,18 @@ dependencies = [\n  \"winapi 0.3.8\",\n ]\n \n+[[package]]\n+name = \"rust-argon2\"\n+version = \"0.7.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2bc8af4bda8e1ff4932523b94d3dd20ee30a87232323eda55903ffd71d2fb017\"\n+dependencies = [\n+ \"base64 0.11.0\",\n+ \"blake2b_simd\",\n+ \"constant_time_eq\",\n+ \"crossbeam-utils\",\n+]\n+\n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n version = \"656.0.0\""}, {"sha": "91958ed947ce2b79c4ff1cc0f1004dfefad9ff02", "filename": "crates/ra_project_model/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ffaef1b7aeb61984992e231d9af20f39486403ea/crates%2Fra_project_model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ffaef1b7aeb61984992e231d9af20f39486403ea/crates%2Fra_project_model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2FCargo.toml?ref=ffaef1b7aeb61984992e231d9af20f39486403ea", "patch": "@@ -22,3 +22,5 @@ serde = { version = \"1.0.106\", features = [\"derive\"] }\n serde_json = \"1.0.48\"\n \n anyhow = \"1.0.26\"\n+\n+dirs = \"2.0\""}, {"sha": "a15a8c68eda0381aa31aad506916b3df644cf254", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 50, "deletions": 9, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/ffaef1b7aeb61984992e231d9af20f39486403ea/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffaef1b7aeb61984992e231d9af20f39486403ea/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=ffaef1b7aeb61984992e231d9af20f39486403ea", "patch": "@@ -8,7 +8,7 @@ use std::{\n     process::Command,\n };\n \n-use anyhow::{Context, Result};\n+use anyhow::{Context, Error, Result};\n use cargo_metadata::{BuildScript, CargoOpt, Message, MetadataCommand, PackageId};\n use ra_arena::{Arena, Idx};\n use ra_db::Edition;\n@@ -145,12 +145,8 @@ impl CargoWorkspace {\n         cargo_toml: &Path,\n         cargo_features: &CargoConfig,\n     ) -> Result<CargoWorkspace> {\n-        let _ = Command::new(cargo_binary())\n-            .arg(\"--version\")\n-            .output()\n-            .context(\"failed to run `cargo --version`, is `cargo` in PATH?\")?;\n-\n         let mut meta = MetadataCommand::new();\n+        meta.cargo_path(cargo_binary()?);\n         meta.manifest_path(cargo_toml);\n         if cargo_features.all_features {\n             meta.features(CargoOpt::AllFeatures);\n@@ -288,7 +284,7 @@ pub fn load_extern_resources(\n     cargo_toml: &Path,\n     cargo_features: &CargoConfig,\n ) -> Result<ExternResources> {\n-    let mut cmd = Command::new(cargo_binary());\n+    let mut cmd = Command::new(cargo_binary()?);\n     cmd.args(&[\"check\", \"--message-format=json\", \"--manifest-path\"]).arg(cargo_toml);\n     if cargo_features.all_features {\n         cmd.arg(\"--all-features\");\n@@ -337,6 +333,51 @@ fn is_dylib(path: &Path) -> bool {\n     }\n }\n \n-fn cargo_binary() -> String {\n-    env::var(\"CARGO\").unwrap_or_else(|_| \"cargo\".to_string())\n+/// Return a `String` to use for executable `cargo`.\n+///\n+/// E.g., this may just be `cargo` if that gives a valid Cargo executable; or it\n+/// may be a full path to a valid Cargo.\n+fn cargo_binary() -> Result<String> {\n+    // The current implementation checks three places for a `cargo` to use:\n+    // 1) $CARGO environment variable (erroring if this is set but not a usable Cargo)\n+    // 2) `cargo`\n+    // 3) `~/.cargo/bin/cargo`\n+    if let Ok(path) = env::var(\"CARGO\") {\n+        if is_valid_cargo(&path) {\n+            Ok(path)\n+        } else {\n+            Err(Error::msg(\"`CARGO` environment variable points to something that's not a valid Cargo executable\"))\n+        }\n+    } else {\n+        let final_path: Option<String> = if is_valid_cargo(\"cargo\") {\n+            Some(\"cargo\".to_owned())\n+        } else {\n+            if let Some(mut path) = dirs::home_dir() {\n+                path.push(\".cargo\");\n+                path.push(\"bin\");\n+                path.push(\"cargo\");\n+                if is_valid_cargo(&path) {\n+                    Some(path.into_os_string().into_string().expect(\"Invalid Unicode in path\"))\n+                } else {\n+                    None\n+                }\n+            } else {\n+                None\n+            }\n+        };\n+        final_path.ok_or(\n+            // This error message may also be caused by $PATH or $CARGO not being set correctly for VSCode,\n+            // even if they are set correctly in a terminal.\n+            // On macOS in particular, launching VSCode from terminal with `code <dirname>` causes VSCode\n+            // to inherit environment variables including $PATH and $CARGO from that terminal; but\n+            // launching VSCode from Dock does not inherit environment variables from a terminal.\n+            // For more discussion, see #3118.\n+            Error::msg(\"Failed to find `cargo` executable. Make sure `cargo` is in `$PATH`, or set `$CARGO` to point to a valid Cargo executable.\")\n+        )\n+    }\n+}\n+\n+/// Does the given `Path` point to a usable `Cargo`?\n+fn is_valid_cargo(p: impl AsRef<Path>) -> bool {\n+    Command::new(p.as_ref()).arg(\"--version\").output().is_ok()\n }"}]}