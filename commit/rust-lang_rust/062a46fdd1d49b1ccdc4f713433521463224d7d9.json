{"sha": "062a46fdd1d49b1ccdc4f713433521463224d7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MmE0NmZkZDFkNDliMWNjZGM0ZjcxMzQzMzUyMTQ2MzIyNGQ3ZDk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-03-19T21:13:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-03-20T02:59:34Z"}, "message": "Reduce diagnostic verbosity by removing labels", "tree": {"sha": "afc20a219a4a1071ed974fb23f311f5cec933be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afc20a219a4a1071ed974fb23f311f5cec933be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/062a46fdd1d49b1ccdc4f713433521463224d7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/062a46fdd1d49b1ccdc4f713433521463224d7d9", "html_url": "https://github.com/rust-lang/rust/commit/062a46fdd1d49b1ccdc4f713433521463224d7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/062a46fdd1d49b1ccdc4f713433521463224d7d9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f332a9ce5676859f0f07c4d6bf2d2c415be67066", "url": "https://api.github.com/repos/rust-lang/rust/commits/f332a9ce5676859f0f07c4d6bf2d2c415be67066", "html_url": "https://github.com/rust-lang/rust/commit/f332a9ce5676859f0f07c4d6bf2d2c415be67066"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "7965806af5d097c9b4f52b80e09543a6cbe8f811", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -938,14 +938,14 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n         }\n \n         if inexistent_fields.len() > 0 {\n-            let field_names = if inexistent_fields.len() == 1 {\n-                format!(\"a field named `{}`\", inexistent_fields[0].1)\n+            let (field_names, t, plural) = if inexistent_fields.len() == 1 {\n+                (format!(\"a field named `{}`\", inexistent_fields[0].1), \"this\", \"\")\n             } else {\n-                format!(\"fields named {}\",\n-                        inexistent_fields.iter()\n+                (format!(\"fields named {}\",\n+                         inexistent_fields.iter()\n                             .map(|(_, name)| format!(\"`{}`\", name))\n                             .collect::<Vec<String>>()\n-                            .join(\", \"))\n+                            .join(\", \")), \"these\", \"s\")\n             };\n             let spans = inexistent_fields.iter().map(|(span, _)| *span).collect::<Vec<_>>();\n             let mut err = struct_span_err!(tcx.sess,\n@@ -955,12 +955,13 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                                            kind_name,\n                                            tcx.item_path_str(variant.did),\n                                            field_names);\n-            for (span, name) in &inexistent_fields {\n+            if let Some((span, _)) = inexistent_fields.last() {\n                 err.span_label(*span,\n-                               format!(\"{} `{}` does not have field `{}`\",\n+                               format!(\"{} `{}` does not have {} field{}\",\n                                        kind_name,\n                                        tcx.item_path_str(variant.did),\n-                                       name));\n+                                       t,\n+                                       plural));\n             }\n             if tcx.sess.teach(&err.get_code().unwrap()) {\n                 err.note("}, {"sha": "d3130c4e831f65adef8ebaa3a86ba5a1ff281968", "filename": "src/test/compile-fail/struct-pat-derived-error.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fcompile-fail%2Fstruct-pat-derived-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fcompile-fail%2Fstruct-pat-derived-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-pat-derived-error.rs?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -16,10 +16,8 @@ struct a {\n impl a {\n     fn foo(&self) {\n         let a { x, y } = self.d; //~ ERROR no field `d` on type `&a`\n-        //~^ ERROR struct `a` does not have a field named `x`\n-        //~^^ ERROR struct `a` does not have a field named `y`\n-        //~^^^ ERROR pattern does not mention field `b`\n-        //~^^^^ ERROR pattern does not mention field `c`\n+        //~^ ERROR struct `a` does not have fields named `x`, `y`\n+        //~| ERROR pattern does not mention fields `b`, `c`\n     }\n }\n "}, {"sha": "67ea32fba86d6cdefa350b3f51c96c4241c09acc", "filename": "src/test/ui/error-codes/E0026-teach.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0026-teach.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0026-teach.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0026-teach.stderr?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -2,7 +2,7 @@ error[E0026]: struct `Thing` does not have a field named `z`\n   --> $DIR/E0026-teach.rs:21:23\n    |\n LL |         Thing { x, y, z } => {}\n-   |                       ^ struct `Thing` does not have field `z`\n+   |                       ^ struct `Thing` does not have this field\n    |\n    = note: This error indicates that a struct pattern attempted to extract a non-existent field from a struct. Struct fields are identified by the name used before the colon : so struct patterns should resemble the declaration of the struct type being matched.\n            "}, {"sha": "9dabbc8a775fb5560eee226ea93141bba13f917d", "filename": "src/test/ui/error-codes/E0026.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0026.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0026.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0026.stderr?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -2,7 +2,7 @@ error[E0026]: struct `Thing` does not have a field named `z`\n   --> $DIR/E0026.rs:19:23\n    |\n LL |         Thing { x, y, z } => {}\n-   |                       ^ struct `Thing` does not have field `z`\n+   |                       ^ struct `Thing` does not have this field\n \n error: aborting due to previous error\n "}, {"sha": "dfde37994998bdd286282a3592b4004f806827ae", "filename": "src/test/ui/missing-fields-in-struct-pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Fmissing-fields-in-struct-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Fmissing-fields-in-struct-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-fields-in-struct-pattern.rs?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -13,7 +13,7 @@ struct S(usize, usize, usize, usize);\n fn main() {\n     if let S { a, b, c, d } = S(1, 2, 3, 4) {\n     //~^ ERROR struct `S` does not have fields named `a`, `b`, `c`, `d` [E0026]\n-    //~^ ERROR pattern does not mention fields `0`, `1`, `2`, `3` [E0027]\n+    //~| ERROR pattern does not mention fields `0`, `1`, `2`, `3` [E0027]\n         println!(\"hi\");\n     }\n }"}, {"sha": "d1c3260f11e3048916663ddfee5fcca95d0664e9", "filename": "src/test/ui/missing-fields-in-struct-pattern.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Fmissing-fields-in-struct-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Fmissing-fields-in-struct-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-fields-in-struct-pattern.stderr?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -2,11 +2,7 @@ error[E0026]: struct `S` does not have fields named `a`, `b`, `c`, `d`\n   --> $DIR/missing-fields-in-struct-pattern.rs:14:16\n    |\n LL |     if let S { a, b, c, d } = S(1, 2, 3, 4) {\n-   |                ^  ^  ^  ^ struct `S` does not have field `d`\n-   |                |  |  |\n-   |                |  |  struct `S` does not have field `c`\n-   |                |  struct `S` does not have field `b`\n-   |                struct `S` does not have field `a`\n+   |                ^  ^  ^  ^ struct `S` does not have these fields\n \n error[E0027]: pattern does not mention fields `0`, `1`, `2`, `3`\n   --> $DIR/missing-fields-in-struct-pattern.rs:14:12"}, {"sha": "68a87da8ded32a7d866591f77b7887f5ddda46d7", "filename": "src/test/ui/numeric-fields.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Fnumeric-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Fnumeric-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric-fields.stderr?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -10,7 +10,7 @@ error[E0026]: struct `S` does not have a field named `0x1`\n   --> $DIR/numeric-fields.rs:17:17\n    |\n LL |         S{0: a, 0x1: b, ..} => {}\n-   |                 ^^^^^^ struct `S` does not have field `0x1`\n+   |                 ^^^^^^ struct `S` does not have this field\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f7d4bb9a02f45a021822d1fa854ff70502042c43", "filename": "src/test/ui/type-check/issue-41314.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.stderr?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -2,7 +2,7 @@ error[E0026]: variant `X::Y` does not have a field named `number`\n   --> $DIR/issue-41314.rs:17:16\n    |\n LL |         X::Y { number } => {} //~ ERROR does not have a field named `number`\n-   |                ^^^^^^ variant `X::Y` does not have field `number`\n+   |                ^^^^^^ variant `X::Y` does not have this field\n \n error[E0027]: pattern does not mention field `0`\n   --> $DIR/issue-41314.rs:17:9"}, {"sha": "cfb5bc7520b594fa483139062f9227efd5ef2393", "filename": "src/test/ui/union/union-fields-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Funion%2Funion-fields-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/062a46fdd1d49b1ccdc4f713433521463224d7d9/src%2Ftest%2Fui%2Funion%2Funion-fields-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-fields-2.stderr?ref=062a46fdd1d49b1ccdc4f713433521463224d7d9", "patch": "@@ -52,7 +52,7 @@ error[E0026]: union `U` does not have a field named `c`\n   --> $DIR/union-fields-2.rs:28:19\n    |\n LL |     let U { a, b, c } = u; //~ ERROR union patterns should have exactly one field\n-   |                   ^ union `U` does not have field `c`\n+   |                   ^ union `U` does not have this field\n \n error: union patterns should have exactly one field\n   --> $DIR/union-fields-2.rs:28:9"}]}