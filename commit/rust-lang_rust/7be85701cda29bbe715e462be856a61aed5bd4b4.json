{"sha": "7be85701cda29bbe715e462be856a61aed5bd4b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZTg1NzAxY2RhMjliYmU3MTVlNDYyYmU4NTZhNjFhZWQ1YmQ0YjQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-26T16:47:48Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: convert llvm-tools to use Tarball", "tree": {"sha": "d63cd72c7491466e1dbf9003e18cb5753e0360cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63cd72c7491466e1dbf9003e18cb5753e0360cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7be85701cda29bbe715e462be856a61aed5bd4b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjesACgkQPgar6Auq\n8Zz8uxAAk1ww6BTON7mEoBRVHgkK1A8Ee2zJrPXtZoyBxwZTEwD/p9rJiG3SC9gP\nYML9eYfh2Ii5qZ28n0zyX3BOT6g0s2KhQsjuCl8+A+BOO8WIWTi0yGx1u2S2HM2y\narv1pu91JPP8woHo2LGUdv/eKjFYQMeBK9MF81mo8fNywAUgve9whru2L0O6VwMH\nFxdZHnOmBkgk3cHTUlKbigw6s0ivzklVMRTMo47m/T0q7Kr5IytSdItRC3XdA4a9\n+aMhd3W8TxINCKDOYMCZi1l+VBag8o3XIIf91Z5eP/s1NX63zr1LHsukBeOI5DnS\nItuP8KVPov/AC8puGqTrBDJZZ2njBrvHFqwL+0q8KyYNO0Cs2xjvNF6yJPsUawe1\nuVzBOrtNfpL4QN/QKFhlrLmb1ct1rOyXu7Z58hRVb6ADwQPZsGVgeeGca9VHlT4F\nI1g1+KJ8lso6Lpf3jsNuPi4HYZ81ttjfg3NFFc9v3QeVJufq4X4V/RWGzrHEVFmZ\nRc0rWTgL9iGfgE79gldcDundCoYLQTGadHKZ0QZYyoi+ib2uqmxzJeFW0oHktnla\npEJXRtrVicQSTLsPJop4sUGHn5Pj6y6aQqREc1QNhrVj2GgCHRazpLpYYrkilBJO\nikfPdPNG9/d3dD9wYAkGTlUMrriGnEa7EQtHJxIEaMZ5ZQY4v0I=\n=zY6x\n-----END PGP SIGNATURE-----", "payload": "tree d63cd72c7491466e1dbf9003e18cb5753e0360cf\nparent ddf82636c6b2d42a1fe9d25b51ec9b006043f529\nauthor Pietro Albini <pietro@pietroalbini.org> 1606409268 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: convert llvm-tools to use Tarball\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7be85701cda29bbe715e462be856a61aed5bd4b4", "html_url": "https://github.com/rust-lang/rust/commit/7be85701cda29bbe715e462be856a61aed5bd4b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7be85701cda29bbe715e462be856a61aed5bd4b4/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddf82636c6b2d42a1fe9d25b51ec9b006043f529", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf82636c6b2d42a1fe9d25b51ec9b006043f529", "html_url": "https://github.com/rust-lang/rust/commit/ddf82636c6b2d42a1fe9d25b51ec9b006043f529"}], "stats": {"total": 63, "additions": 21, "deletions": 42}, "files": [{"sha": "9b0a6e6e19d7abb55090001cdaba6a54eeb6fcf4", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 37, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7be85701cda29bbe715e462be856a61aed5bd4b4/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7be85701cda29bbe715e462be856a61aed5bd4b4/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=7be85701cda29bbe715e462be856a61aed5bd4b4", "patch": "@@ -2431,56 +2431,26 @@ impl Step for LlvmTools {\n \n         builder.info(&format!(\"Dist LlvmTools ({})\", target));\n         let _time = timeit(builder);\n-        let src = builder.src.join(\"src/llvm-project/llvm\");\n-        let name = pkgname(builder, \"llvm-tools\");\n \n-        let tmp = tmpdir(builder);\n-        let image = tmp.join(\"llvm-tools-image\");\n-        drop(fs::remove_dir_all(&image));\n+        let mut tarball = Tarball::new(builder, \"llvm-tools\", &target.triple);\n+        tarball.set_overlay(OverlayKind::LLVM);\n+        tarball.is_preview(true);\n \n         // Prepare the image directory\n         let src_bindir = builder.llvm_out(target).join(\"bin\");\n-        let dst_bindir = image.join(\"lib/rustlib\").join(&*target.triple).join(\"bin\");\n-        t!(fs::create_dir_all(&dst_bindir));\n+        let dst_bindir = format!(\"lib/rustlib/{}/bin\", target.triple);\n         for tool in LLVM_TOOLS {\n             let exe = src_bindir.join(exe(tool, target));\n-            builder.install(&exe, &dst_bindir, 0o755);\n+            tarball.add_file(&exe, &dst_bindir, 0o755);\n         }\n \n         // Copy libLLVM.so to the target lib dir as well, so the RPATH like\n         // `$ORIGIN/../lib` can find it. It may also be used as a dependency\n         // of `rustc-dev` to support the inherited `-lLLVM` when using the\n         // compiler libraries.\n-        maybe_install_llvm_target(builder, target, &image);\n-\n-        // Prepare the overlay\n-        let overlay = tmp.join(\"llvm-tools-overlay\");\n-        drop(fs::remove_dir_all(&overlay));\n-        builder.create_dir(&overlay);\n-        builder.install(&src.join(\"README.txt\"), &overlay, 0o644);\n-        builder.install(&src.join(\"LICENSE.TXT\"), &overlay, 0o644);\n-        builder.create(&overlay.join(\"version\"), &builder.llvm_tools_vers());\n-\n-        // Generate the installer tarball\n-        let mut cmd = rust_installer(builder);\n-        cmd.arg(\"generate\")\n-            .arg(\"--product-name=Rust\")\n-            .arg(\"--rel-manifest-dir=rustlib\")\n-            .arg(\"--success-message=llvm-tools-installed.\")\n-            .arg(\"--image-dir\")\n-            .arg(&image)\n-            .arg(\"--work-dir\")\n-            .arg(&tmpdir(builder))\n-            .arg(\"--output-dir\")\n-            .arg(&distdir(builder))\n-            .arg(\"--non-installed-overlay\")\n-            .arg(&overlay)\n-            .arg(format!(\"--package-name={}-{}\", name, target.triple))\n-            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-            .arg(\"--component-name=llvm-tools-preview\");\n+        maybe_install_llvm_target(builder, target, tarball.image_dir());\n \n-        builder.run(&mut cmd);\n-        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n+        Some(tarball.generate())\n     }\n }\n "}, {"sha": "a47ddfbcc1f180c13deeb18bef9c449efd1d5dad", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7be85701cda29bbe715e462be856a61aed5bd4b4/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7be85701cda29bbe715e462be856a61aed5bd4b4/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=7be85701cda29bbe715e462be856a61aed5bd4b4", "patch": "@@ -1069,10 +1069,6 @@ impl Build {\n         self.package_vers(&self.version)\n     }\n \n-    fn llvm_tools_vers(&self) -> String {\n-        self.rust_version()\n-    }\n-\n     fn llvm_link_tools_dynamically(&self, target: TargetSelection) -> bool {\n         target.contains(\"linux-gnu\") || target.contains(\"apple-darwin\")\n     }"}, {"sha": "2c110a7fb24b8cceaaeb66506eac243f4ea864e5", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7be85701cda29bbe715e462be856a61aed5bd4b4/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7be85701cda29bbe715e462be856a61aed5bd4b4/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=7be85701cda29bbe715e462be856a61aed5bd4b4", "patch": "@@ -33,6 +33,8 @@ pub(crate) struct Tarball<'a> {\n     image_dir: PathBuf,\n     overlay_dir: PathBuf,\n     work_dir: PathBuf,\n+\n+    is_preview: bool,\n }\n \n impl<'a> Tarball<'a> {\n@@ -58,13 +60,19 @@ impl<'a> Tarball<'a> {\n             image_dir,\n             overlay_dir,\n             work_dir,\n+\n+            is_preview: false,\n         }\n     }\n \n     pub(crate) fn set_overlay(&mut self, overlay: OverlayKind) {\n         self.overlay = overlay;\n     }\n \n+    pub(crate) fn is_preview(&mut self, is: bool) {\n+        self.is_preview = is;\n+    }\n+\n     pub(crate) fn image_dir(&self) -> &Path {\n         t!(std::fs::create_dir_all(&self.image_dir));\n         &self.image_dir\n@@ -98,6 +106,11 @@ impl<'a> Tarball<'a> {\n             self.builder.install(&self.builder.src.join(file), &self.overlay_dir, 0o644);\n         }\n \n+        let mut component_name = self.component.clone();\n+        if self.is_preview {\n+            component_name.push_str(\"-preview\");\n+        }\n+\n         let distdir = crate::dist::distdir(self.builder);\n         let mut cmd = self.builder.tool_cmd(crate::tool::Tool::RustInstaller);\n         cmd.arg(\"generate\")\n@@ -114,7 +127,7 @@ impl<'a> Tarball<'a> {\n             .arg(self.overlay_dir)\n             .arg(format!(\"--package-name={}-{}\", self.pkgname, self.target))\n             .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-            .arg(format!(\"--component-name={}\", self.component));\n+            .arg(format!(\"--component-name={}\", component_name));\n         self.builder.run(&mut cmd);\n \n         t!(std::fs::remove_dir_all(&self.temp_dir));"}]}