{"sha": "81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYTY3MDljZjlmNmU4M2I2ZGQyMzExZjRkY2Q5ZTFlZjFmYmEyODQ=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-12-15T06:28:52Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-12-23T14:35:39Z"}, "message": "Simplify Clone for Box<[T]>\n\nThe bespoke `BoxBuilder` was basically a very simple `Vec`. Instead,\nlet's clone to a real `Vec`, with all of its specialization for the\ntask, then convert back to `Box<[T]>`.", "tree": {"sha": "760e80241f2748090fac95e5dd957252b39d72a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/760e80241f2748090fac95e5dd957252b39d72a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284", "html_url": "https://github.com/rust-lang/rust/commit/81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a916ac22b9f7f1f0f7aba0a41a789b3ecd765018", "url": "https://api.github.com/repos/rust-lang/rust/commits/a916ac22b9f7f1f0f7aba0a41a789b3ecd765018", "html_url": "https://github.com/rust-lang/rust/commit/a916ac22b9f7f1f0f7aba0a41a789b3ecd765018"}], "stats": {"total": 43, "additions": 1, "deletions": 42}, "files": [{"sha": "87a4924f9becc4edb6afb14019668ebc2228a52d", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=81a6709cf9f6e83b6dd2311f4dcd9e1ef1fba284", "patch": "@@ -1046,48 +1046,7 @@ impl<A> FromIterator<A> for Box<[A]> {\n #[stable(feature = \"box_slice_clone\", since = \"1.3.0\")]\n impl<T: Clone> Clone for Box<[T]> {\n     fn clone(&self) -> Self {\n-        let mut new = BoxBuilder { data: RawVec::with_capacity(self.len()), len: 0 };\n-\n-        let mut target = new.data.ptr();\n-\n-        for item in self.iter() {\n-            unsafe {\n-                ptr::write(target, item.clone());\n-                target = target.offset(1);\n-            };\n-\n-            new.len += 1;\n-        }\n-\n-        return unsafe { new.into_box() };\n-\n-        // Helper type for responding to panics correctly.\n-        struct BoxBuilder<T> {\n-            data: RawVec<T>,\n-            len: usize,\n-        }\n-\n-        impl<T> BoxBuilder<T> {\n-            unsafe fn into_box(self) -> Box<[T]> {\n-                let raw = ptr::read(&self.data);\n-                mem::forget(self);\n-                raw.into_box()\n-            }\n-        }\n-\n-        impl<T> Drop for BoxBuilder<T> {\n-            fn drop(&mut self) {\n-                let mut data = self.data.ptr();\n-                let max = unsafe { data.add(self.len) };\n-\n-                while data != max {\n-                    unsafe {\n-                        ptr::read(data);\n-                        data = data.offset(1);\n-                    }\n-                }\n-            }\n-        }\n+        self.to_vec().into_boxed_slice()\n     }\n }\n "}]}