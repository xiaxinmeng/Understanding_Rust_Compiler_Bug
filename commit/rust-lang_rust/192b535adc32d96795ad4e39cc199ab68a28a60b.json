{"sha": "192b535adc32d96795ad4e39cc199ab68a28a60b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MmI1MzVhZGMzMmQ5Njc5NWFkNGUzOWNjMTk5YWI2OGEyOGE2MGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-12T11:57:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:33:47Z"}, "message": "cleaner output for cargo-miri-test harness", "tree": {"sha": "cb4b023f2972aa1ad9fc5d8fd2f42ad0d24b6d63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb4b023f2972aa1ad9fc5d8fd2f42ad0d24b6d63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/192b535adc32d96795ad4e39cc199ab68a28a60b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/192b535adc32d96795ad4e39cc199ab68a28a60b", "html_url": "https://github.com/rust-lang/rust/commit/192b535adc32d96795ad4e39cc199ab68a28a60b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/192b535adc32d96795ad4e39cc199ab68a28a60b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "url": "https://api.github.com/repos/rust-lang/rust/commits/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283", "html_url": "https://github.com/rust-lang/rust/commit/b244a2ddaa5bbc7eb0b50c018e0e578c0b230283"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "bbb8df9059acb7be76134904b63efc1ff670f264", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/192b535adc32d96795ad4e39cc199ab68a28a60b/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/192b535adc32d96795ad4e39cc199ab68a28a60b/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=192b535adc32d96795ad4e39cc199ab68a28a60b", "patch": "@@ -22,7 +22,7 @@ def cargo_miri(cmd):\n     return args\n \n def test(name, cmd, stdout_ref, stderr_ref, stdin=b'', env={}):\n-    print(\"==> Testing {} <==\".format(name))\n+    print(\"Testing {}...\".format(name))\n     ## Call `cargo miri`, capture all output\n     p_env = os.environ.copy()\n     p_env.update(env)\n@@ -36,18 +36,17 @@ def test(name, cmd, stdout_ref, stderr_ref, stdin=b'', env={}):\n     (stdout, stderr) = p.communicate(input=stdin)\n     stdout = stdout.decode(\"UTF-8\")\n     stderr = stderr.decode(\"UTF-8\")\n+    if p.returncode == 0 and stdout == open(stdout_ref).read() and stderr == open(stderr_ref).read():\n+        # All good!\n+        return\n     # Show output\n-    print(\"=> captured stdout <=\")\n+    print(\"--- BEGIN stdout ---\")\n     print(stdout, end=\"\")\n-    print(\"=> captured stderr <=\")\n+    print(\"--- END stdout ---\")\n+    print(\"--- BEGIN stderr ---\")\n     print(stderr, end=\"\")\n-    # Test for failures\n-    if p.returncode != 0:\n-        fail(\"Non-zero exit status\")\n-    if stdout != open(stdout_ref).read():\n-        fail(\"stdout does not match reference\")\n-    if stderr != open(stderr_ref).read():\n-        fail(\"stderr does not match reference\")\n+    print(\"--- END stderr ---\")\n+    fail(\"exit code was {}\".format(p.returncode))\n \n def test_cargo_miri_run():\n     test(\"`cargo miri run` (no isolation)\",\n@@ -96,7 +95,7 @@ def test_cargo_miri_test():\n         cargo_miri(\"test\") + [\"--bin\", \"cargo-miri-test\", \"--\", \"--format=pretty\"],\n         \"test.stdout.ref4\", \"test.stderr.ref2\",\n     )\n-    test(\"`cargo miri test` (subcrate)\",\n+    test(\"`cargo miri test` (subcrate, no isolation)\",\n         cargo_miri(\"test\") + [\"-p\", \"subcrate\"],\n         \"test.stdout.ref5\", \"test.stderr.ref2\",\n         env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},"}]}