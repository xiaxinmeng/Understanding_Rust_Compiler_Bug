{"sha": "8e1f6dce408deb92affe2099324a5cc7740b6567", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMWY2ZGNlNDA4ZGViOTJhZmZlMjA5OTMyNGE1Y2M3NzQwYjY1Njc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-12-02T18:30:00Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-12-02T18:30:00Z"}, "message": "enum detection by style convention", "tree": {"sha": "c7797653154f3981cd761894cda4e1f3d299844e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7797653154f3981cd761894cda4e1f3d299844e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e1f6dce408deb92affe2099324a5cc7740b6567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e1f6dce408deb92affe2099324a5cc7740b6567", "html_url": "https://github.com/rust-lang/rust/commit/8e1f6dce408deb92affe2099324a5cc7740b6567", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e1f6dce408deb92affe2099324a5cc7740b6567/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff2487b30edb17e3f63a603e35c1ee76370ff01f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff2487b30edb17e3f63a603e35c1ee76370ff01f", "html_url": "https://github.com/rust-lang/rust/commit/ff2487b30edb17e3f63a603e35c1ee76370ff01f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a47426b03ef5604dc043756fa77ed238086e31ea", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e1f6dce408deb92affe2099324a5cc7740b6567/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e1f6dce408deb92affe2099324a5cc7740b6567/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=8e1f6dce408deb92affe2099324a5cc7740b6567", "patch": "@@ -1,7 +1,6 @@\n //! lint on `use`ing all variants of an enum\n \n use rustc::hir::*;\n-use rustc::hir::def::Def;\n use rustc::lint::{LateLintPass, LintPass, LateContext, LintArray};\n use syntax::ast::NodeId;\n use syntax::codemap::Span;\n@@ -50,7 +49,8 @@ impl EnumGlobUse {\n         if let ItemUse(ref path, UseKind::Glob) = item.node {\n             // FIXME: ask jseyfried why the qpath.def for `use std::cmp::Ordering::*;`\n             // extracted through `ItemUse(ref qpath, UseKind::Glob)` is a `Mod` and not an `Enum`\n-            if let Def::Enum(_) = path.def {\n+            //if let Def::Enum(_) = path.def {\n+            if path.segments.last().and_then(|seg| seg.name.as_str().chars().next()).map_or(false, char::is_uppercase) {\n                 span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n             }\n         }"}]}