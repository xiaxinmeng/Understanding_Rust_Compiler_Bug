{"sha": "a160258927804710e8732ec1ec655160489f460f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNjAyNTg5Mjc4MDQ3MTBlODczMmVjMWVjNjU1MTYwNDg5ZjQ2MGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-21T20:00:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-21T20:00:47Z"}, "message": "Rollup merge of #65092 - tspiteri:const-is-pow2, r=oli-obk\n\nmake is_power_of_two a const function\n\nThis makes `is_power_of_two` a const function by using `&` instead of short-circuiting `&&`; Rust supports bitwise `&` for `bool` and short-circuiting is not required in the existing expression.\n\nI don't think this needs a const-hack label as I don't find the changed code less readable, if anything I prefer that it is clearer that short circuiting is not used.\n\n@oli-obk", "tree": {"sha": "ee88697ab298a0dce350111134d07bafef9470b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee88697ab298a0dce350111134d07bafef9470b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a160258927804710e8732ec1ec655160489f460f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdrg5vCRBK7hj4Ov3rIwAAdHIIAC+NcWX+a6GNvb1iMye0+ofq\nRAVrGovltMj/bvK4Ae2wyC8YHQSxNzBV4qdw2iB8Vk0ju4Lu5gYCrj2PLuYK/sTv\nUtJ5opiOq85W0skDnQ2q65yq831xWF3f0c1aUNGwzZNYIdfzfkjJU+aRwCHr7fWC\ng1FtKG9xY9Rbattu7jI1sX+LDDypCFOUA53w2pmt4DuunsOmXwwaxnjse1oHk9Dn\nfWHDNvHXH0UN7eYwU/QdbfnavI9v5WNHgUFDk90620XvEbiU9bR13UwokcjivQ5Z\nutKxWF5twrwOMgwkma7GoZ41k4+Svr3jrTR0tTSZLm9wquUDviLOY7upkn6Ehjg=\n=ib3C\n-----END PGP SIGNATURE-----\n", "payload": "tree ee88697ab298a0dce350111134d07bafef9470b5\nparent aba84894d1879a7429d5bc20d0bfdca3471685de\nparent d689c709ea6e942de1687d918eaee541610aa86d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571688047 +0200\ncommitter GitHub <noreply@github.com> 1571688047 +0200\n\nRollup merge of #65092 - tspiteri:const-is-pow2, r=oli-obk\n\nmake is_power_of_two a const function\n\nThis makes `is_power_of_two` a const function by using `&` instead of short-circuiting `&&`; Rust supports bitwise `&` for `bool` and short-circuiting is not required in the existing expression.\n\nI don't think this needs a const-hack label as I don't find the changed code less readable, if anything I prefer that it is clearer that short circuiting is not used.\n\n@oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a160258927804710e8732ec1ec655160489f460f", "html_url": "https://github.com/rust-lang/rust/commit/a160258927804710e8732ec1ec655160489f460f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a160258927804710e8732ec1ec655160489f460f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aba84894d1879a7429d5bc20d0bfdca3471685de", "url": "https://api.github.com/repos/rust-lang/rust/commits/aba84894d1879a7429d5bc20d0bfdca3471685de", "html_url": "https://github.com/rust-lang/rust/commit/aba84894d1879a7429d5bc20d0bfdca3471685de"}, {"sha": "d689c709ea6e942de1687d918eaee541610aa86d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d689c709ea6e942de1687d918eaee541610aa86d", "html_url": "https://github.com/rust-lang/rust/commit/d689c709ea6e942de1687d918eaee541610aa86d"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "b4ade70414462cd45704c47623b16fb9134751b6", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a160258927804710e8732ec1ec655160489f460f/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a160258927804710e8732ec1ec655160489f460f/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=a160258927804710e8732ec1ec655160489f460f", "patch": "@@ -3757,8 +3757,8 @@ assert!(!10\", stringify!($SelfT), \".is_power_of_two());\", $EndFeature, \"\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             #[inline]\n-            pub fn is_power_of_two(self) -> bool {\n-                (self.wrapping_sub(1)) & self == 0 && !(self == 0)\n+            pub const fn is_power_of_two(self) -> bool {\n+                self.count_ones() == 1\n             }\n         }\n "}, {"sha": "8e84a900605f552ccdf65a793af6cf70dcf40224", "filename": "src/test/ui/consts/const-int-pow-rpass.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a160258927804710e8732ec1ec655160489f460f/src%2Ftest%2Fui%2Fconsts%2Fconst-int-pow-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a160258927804710e8732ec1ec655160489f460f/src%2Ftest%2Fui%2Fconsts%2Fconst-int-pow-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-pow-rpass.rs?ref=a160258927804710e8732ec1ec655160489f460f", "patch": "@@ -0,0 +1,11 @@\n+// run-pass\n+\n+const IS_POWER_OF_TWO_A: bool = 0u32.is_power_of_two();\n+const IS_POWER_OF_TWO_B: bool = 32u32.is_power_of_two();\n+const IS_POWER_OF_TWO_C: bool = 33u32.is_power_of_two();\n+\n+fn main() {\n+    assert!(!IS_POWER_OF_TWO_A);\n+    assert!(IS_POWER_OF_TWO_B);\n+    assert!(!IS_POWER_OF_TWO_C);\n+}"}]}