{"sha": "bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZDE4NWM4OTcwZTc5YzJjZGQzYzVjZmFkN2M0YmY1OTE4MzZiMjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-09T18:50:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-09T18:50:37Z"}, "message": "Auto merge of #51956 - GuillaumeGomez:shutdown-doc-lints, r=oli-obk\n\nFix rustdoc run failures by shutting down definitely some lints\n\nFixes #51661.\n\ncc @oli-obk @arielb1 @eddyb", "tree": {"sha": "f4aa9090b717c7dea69f1224b72bb79c5c6e701c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4aa9090b717c7dea69f1224b72bb79c5c6e701c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "html_url": "https://github.com/rust-lang/rust/commit/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6807bb1b282e0c5398aa4e659dbc165b6f3c81b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6807bb1b282e0c5398aa4e659dbc165b6f3c81b", "html_url": "https://github.com/rust-lang/rust/commit/c6807bb1b282e0c5398aa4e659dbc165b6f3c81b"}, {"sha": "66beb4e5b4fe9b8dd5aa29c4bc8c775825a3b5e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/66beb4e5b4fe9b8dd5aa29c4bc8c775825a3b5e4", "html_url": "https://github.com/rust-lang/rust/commit/66beb4e5b4fe9b8dd5aa29c4bc8c775825a3b5e4"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "a1b84a7b716efdf4d4c9ea750bb34da9db858911", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "patch": "@@ -119,6 +119,11 @@ impl LintLevelSets {\n         // Ensure that we never exceed the `--cap-lints` argument.\n         level = cmp::min(level, self.lint_cap);\n \n+        if let Some(driver_level) = sess.driver_lint_caps.get(&LintId::of(lint)) {\n+            // Ensure that we never exceed driver level.\n+            level = cmp::min(*driver_level, level);\n+        }\n+\n         return (level, src)\n     }\n "}, {"sha": "180c5867e93d8bd9c359d6db2ca26f5faed706f5", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "patch": "@@ -22,7 +22,7 @@ use middle::dependency_format;\n use session::search_paths::PathKind;\n use session::config::{OutputType};\n use ty::tls;\n-use util::nodemap::{FxHashSet};\n+use util::nodemap::{FxHashMap, FxHashSet};\n use util::common::{duration_to_secs_str, ErrorReported};\n use util::common::ProfileQueriesMsg;\n \n@@ -160,6 +160,9 @@ pub struct Session {\n \n     /// Metadata about the allocators for the current crate being compiled\n     pub has_global_allocator: Once<bool>,\n+\n+    /// Cap lint level specified by a driver specifically.\n+    pub driver_lint_caps: FxHashMap<lint::LintId, lint::Level>,\n }\n \n pub struct PerfStats {\n@@ -1164,6 +1167,7 @@ pub fn build_session_(\n             (*GLOBAL_JOBSERVER).clone()\n         },\n         has_global_allocator: Once::new(),\n+        driver_lint_caps: FxHashMap(),\n     };\n \n     sess"}, {"sha": "d6e5c70b8f7e1b4320788cf5c83e5bfef44849c7", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "patch": "@@ -280,7 +280,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnsafeCode {\n }\n \n declare_lint! {\n-    MISSING_DOCS,\n+    pub MISSING_DOCS,\n     Allow,\n     \"detects missing documentation for public members\"\n }"}, {"sha": "459f496c9fe05f2308cb56d94ae474b6c628d8db", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "patch": "@@ -56,7 +56,7 @@ use lint::LintId;\n use lint::FutureIncompatibleInfo;\n \n mod bad_style;\n-mod builtin;\n+pub mod builtin;\n mod types;\n mod unused;\n "}, {"sha": "417a78b2a3ae0ed17bf96f632896635d83df5463", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "patch": "@@ -192,6 +192,7 @@ pub fn run_core(search_paths: SearchPaths,\n \n     let intra_link_resolution_failure_name = lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE.name;\n     let warnings_lint_name = lint::builtin::WARNINGS.name;\n+    let missing_docs = rustc_lint::builtin::MISSING_DOCS.name;\n     let lints = lint::builtin::HardwiredLints.get_lints()\n                     .into_iter()\n                     .chain(rustc_lint::SoftLints.get_lints().into_iter())\n@@ -240,6 +241,26 @@ pub fn run_core(search_paths: SearchPaths,\n         let mut sess = session::build_session_(\n             sessopts, cpath, diagnostic_handler, codemap,\n         );\n+\n+        lint::builtin::HardwiredLints.get_lints()\n+                                     .into_iter()\n+                                     .chain(rustc_lint::SoftLints.get_lints().into_iter())\n+                                     .filter_map(|lint| {\n+                                         // We don't want to whitelist *all* lints so let's\n+                                         // ignore those ones.\n+                                         if lint.name == warnings_lint_name ||\n+                                            lint.name == intra_link_resolution_failure_name ||\n+                                            lint.name == missing_docs {\n+                                             None\n+                                         } else {\n+                                             Some(lint)\n+                                         }\n+                                     })\n+                                     .for_each(|l| {\n+                                         sess.driver_lint_caps.insert(lint::LintId::of(l),\n+                                                                      lint::Allow);\n+                                     });\n+\n         let codegen_backend = rustc_driver::get_codegen_backend(&sess);\n         let cstore = Rc::new(CStore::new(codegen_backend.metadata_loader()));\n         rustc_lint::register_builtins(&mut sess.lint_store.borrow_mut(), Some(&sess));\n@@ -304,7 +325,6 @@ pub fn run_core(search_paths: SearchPaths,\n                                                             &sess);\n \n         let resolver = RefCell::new(resolver);\n-\n         abort_on_err(driver::phase_3_run_analysis_passes(&*codegen_backend,\n                                                         control,\n                                                         &sess,"}, {"sha": "8b53098639232032319608695614893b0cb9aaf5", "filename": "src/test/rustdoc-ui/unused.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Ftest%2Frustdoc-ui%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd185c8970e79c2cdd3c5cfad7c4bf591836b23/src%2Ftest%2Frustdoc-ui%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funused.rs?ref=bdd185c8970e79c2cdd3c5cfad7c4bf591836b23", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+\n+// This test purpose is to check that unused_imports lint isn't fired\n+// by rustdoc. Why would it? Because when rustdoc is running, it uses\n+// \"everybody-loops\" which replaces parts of code with \"loop {}\" to get\n+// huge performance improvements.\n+\n+#![deny(unused_imports)]\n+\n+use std::fs::File;\n+\n+pub fn f() {\n+    let _: File;\n+}"}]}