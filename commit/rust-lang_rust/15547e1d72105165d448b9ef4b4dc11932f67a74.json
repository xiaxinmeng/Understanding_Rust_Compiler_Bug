{"sha": "15547e1d72105165d448b9ef4b4dc11932f67a74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NTQ3ZTFkNzIxMDUxNjVkNDQ4YjllZjRiNGRjMTE5MzJmNjdhNzQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-27T16:08:06Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-27T22:12:47Z"}, "message": "rollup merge of #18346 : aochagavia/closure-fields", "tree": {"sha": "5844becf99a85a47b94d900895288d3bc76478c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5844becf99a85a47b94d900895288d3bc76478c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15547e1d72105165d448b9ef4b4dc11932f67a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15547e1d72105165d448b9ef4b4dc11932f67a74", "html_url": "https://github.com/rust-lang/rust/commit/15547e1d72105165d448b9ef4b4dc11932f67a74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15547e1d72105165d448b9ef4b4dc11932f67a74/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfeff3e1c7e52ad2d6f364a53b8066c734dc4d83", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfeff3e1c7e52ad2d6f364a53b8066c734dc4d83", "html_url": "https://github.com/rust-lang/rust/commit/cfeff3e1c7e52ad2d6f364a53b8066c734dc4d83"}, {"sha": "2ce77b33b04c64d57bef696d88605d08dff72775", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce77b33b04c64d57bef696d88605d08dff72775", "html_url": "https://github.com/rust-lang/rust/commit/2ce77b33b04c64d57bef696d88605d08dff72775"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "66693224c87794241cb53d5a6198df18f85ffb93", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/15547e1d72105165d448b9ef4b4dc11932f67a74/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15547e1d72105165d448b9ef4b4dc11932f67a74/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=15547e1d72105165d448b9ef4b4dc11932f67a74", "patch": "@@ -223,17 +223,37 @@ pub fn report_error(fcx: &FnCtxt,\n {\n     match error {\n         NoMatch(static_sources) => {\n+            let cx = fcx.tcx();\n+            let method_ustring = method_name.user_string(cx);\n+\n+            // True if the type is a struct and contains a field with\n+            // the same name as the not-found method\n+            let is_field = match ty::get(rcvr_ty).sty {\n+                ty_struct(did, _) =>\n+                    ty::lookup_struct_fields(cx, did)\n+                        .iter()\n+                        .any(|f| f.name.user_string(cx) == method_ustring),\n+                _ => false\n+            };\n+\n             fcx.type_error_message(\n                 span,\n                 |actual| {\n                     format!(\"type `{}` does not implement any \\\n                              method in scope named `{}`\",\n                             actual,\n-                            method_name.user_string(fcx.tcx()))\n+                            method_ustring)\n                 },\n                 rcvr_ty,\n                 None);\n \n+            // If the method has the name of a field, give a help note\n+            if is_field {\n+                cx.sess.span_note(span,\n+                    format!(\"use `(s.{0})(...)` if you meant to call the \\\n+                            function stored in the `{0}` field\", method_ustring).as_slice());\n+            }\n+\n             if static_sources.len() > 0 {\n                 fcx.tcx().sess.fileline_note(\n                     span,"}, {"sha": "1608d2137fc3216ee92862d8f79619c584b9aa09", "filename": "src/test/compile-fail/issue-18343.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/15547e1d72105165d448b9ef4b4dc11932f67a74/src%2Ftest%2Fcompile-fail%2Fissue-18343.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15547e1d72105165d448b9ef4b4dc11932f67a74/src%2Ftest%2Fcompile-fail%2Fissue-18343.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18343.rs?ref=15547e1d72105165d448b9ef4b4dc11932f67a74", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Obj<'a> {\n+    closure: ||: 'a -> u32\n+}\n+\n+fn main() {\n+    let o = Obj { closure: || 42 };\n+    o.closure(); //~ ERROR type `Obj<'_>` does not implement any method in scope named `closure`\n+    //~^ NOTE use `(s.closure)(...)` if you meant to call the function stored in the `closure` field\n+}"}]}