{"sha": "68bb5414624d80bec29883c324eb239be73e749d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YmI1NDE0NjI0ZDgwYmVjMjk4ODNjMzI0ZWIyMzliZTczZTc0OWQ=", "commit": {"author": {"name": "Rapha\u00ebl Huchet", "email": "rap2hpoutre@users.noreply.github.com", "date": "2017-05-05T10:02:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-05T10:02:02Z"}, "message": "Add an example to std::thread::Result type", "tree": {"sha": "78564cf7f3424a29a3298da19c16444dcee49d32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78564cf7f3424a29a3298da19c16444dcee49d32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68bb5414624d80bec29883c324eb239be73e749d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68bb5414624d80bec29883c324eb239be73e749d", "html_url": "https://github.com/rust-lang/rust/commit/68bb5414624d80bec29883c324eb239be73e749d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68bb5414624d80bec29883c324eb239be73e749d/comments", "author": {"login": "rap2hpoutre", "id": 1575946, "node_id": "MDQ6VXNlcjE1NzU5NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1575946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rap2hpoutre", "html_url": "https://github.com/rap2hpoutre", "followers_url": "https://api.github.com/users/rap2hpoutre/followers", "following_url": "https://api.github.com/users/rap2hpoutre/following{/other_user}", "gists_url": "https://api.github.com/users/rap2hpoutre/gists{/gist_id}", "starred_url": "https://api.github.com/users/rap2hpoutre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rap2hpoutre/subscriptions", "organizations_url": "https://api.github.com/users/rap2hpoutre/orgs", "repos_url": "https://api.github.com/users/rap2hpoutre/repos", "events_url": "https://api.github.com/users/rap2hpoutre/events{/privacy}", "received_events_url": "https://api.github.com/users/rap2hpoutre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6ab049ed1db09f693df7d33046b3980f56751c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ab049ed1db09f693df7d33046b3980f56751c1", "html_url": "https://github.com/rust-lang/rust/commit/a6ab049ed1db09f693df7d33046b3980f56751c1"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "2ce5a7262d971fa7a0636f3e36de9cfcd94a79af", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/68bb5414624d80bec29883c324eb239be73e749d/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68bb5414624d80bec29883c324eb239be73e749d/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=68bb5414624d80bec29883c324eb239be73e749d", "patch": "@@ -863,9 +863,31 @@ impl fmt::Debug for Thread {\n // JoinHandle\n ////////////////////////////////////////////////////////////////////////////////\n \n+/// A specialized [`Result`] type for threads.\n+/// \n /// Indicates the manner in which a thread exited.\n ///\n /// A thread that completes without panicking is considered to exit successfully.\n+///\n+/// # Examples\n+///\n+/// ```no_run\n+/// use std::thread;\n+/// use std::fs;\n+///\n+/// fn copy_in_thread() -> thread::Result<()> {\n+///     thread::spawn(move || { fs::copy(\"foo.txt\", \"bar.txt\").unwrap(); }).join()\n+/// }\n+///\n+/// fn main() {\n+///     match copy_in_thread() {\n+///         Ok(_) => println!(\"this is fine\"),\n+///         Err(_) => println!(\"thread panicked\"),\n+///     }\n+/// }\n+/// ```\n+///\n+/// [`Result`]: ../../std/result/enum.Result.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub type Result<T> = ::result::Result<T, Box<Any + Send + 'static>>;\n "}]}