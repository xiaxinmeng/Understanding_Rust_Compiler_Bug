{"sha": "975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NTQ1NWIzN2RjZGI2YzU5ZTQ3YTI4OWFhMmQ1ZjE5ZDYzYTE4ZjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-20T16:41:18Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-22T23:39:38Z"}, "message": "syntax: extract `removed.rs` feature gates.", "tree": {"sha": "15dbe12334a7fe0fe042641a8490d562953e4000", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15dbe12334a7fe0fe042641a8490d562953e4000"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "html_url": "https://github.com/rust-lang/rust/commit/975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b873743c024d018b00e1e8c863a01d2c48bcdb1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b873743c024d018b00e1e8c863a01d2c48bcdb1b", "html_url": "https://github.com/rust-lang/rust/commit/b873743c024d018b00e1e8c863a01d2c48bcdb1b"}], "stats": {"total": 162, "additions": 85, "deletions": 77}, "files": [{"sha": "e2fa4b27f283393bd63571c77e0506b8e6e25561", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 77, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "patch": "@@ -14,6 +14,8 @@\n \n mod accepted;\n use accepted::ACCEPTED_FEATURES;\n+mod removed;\n+use removed::{REMOVED_FEATURES, STABLE_REMOVED_FEATURES};\n \n use AttributeType::*;\n use AttributeGate::*;\n@@ -83,20 +85,6 @@ macro_rules! declare_features {\n             }\n         }\n     };\n-\n-    ($((removed, $feature: ident, $ver: expr, $issue: expr, None, $reason: expr),)+) => {\n-        /// Represents unstable features which have since been removed (it was once Active)\n-        const REMOVED_FEATURES: &[(Symbol, &str, Option<u32>, Option<&str>)] = &[\n-            $((sym::$feature, $ver, $issue, $reason)),+\n-        ];\n-    };\n-\n-    ($((stable_removed, $feature: ident, $ver: expr, $issue: expr, None),)+) => {\n-        /// Represents stable features which have since been removed (it was once Accepted)\n-        const STABLE_REMOVED_FEATURES: &[(Symbol, &str, Option<u32>, Option<&str>)] = &[\n-            $((sym::$feature, $ver, $issue, None)),+\n-        ];\n-    };\n }\n \n // If you change this, please modify `src/doc/unstable-book` as well.\n@@ -571,69 +559,6 @@ pub const INCOMPLETE_FEATURES: &[Symbol] = &[\n     sym::let_chains,\n ];\n \n-declare_features! (\n-    // -------------------------------------------------------------------------\n-    // feature-group-start: removed features\n-    // -------------------------------------------------------------------------\n-\n-    (removed, import_shadowing, \"1.0.0\", None, None, None),\n-    (removed, managed_boxes, \"1.0.0\", None, None, None),\n-    // Allows use of unary negate on unsigned integers, e.g., -e for e: u8\n-    (removed, negate_unsigned, \"1.0.0\", Some(29645), None, None),\n-    (removed, reflect, \"1.0.0\", Some(27749), None, None),\n-    // A way to temporarily opt out of opt in copy. This will *never* be accepted.\n-    (removed, opt_out_copy, \"1.0.0\", None, None, None),\n-    (removed, quad_precision_float, \"1.0.0\", None, None, None),\n-    (removed, struct_inherit, \"1.0.0\", None, None, None),\n-    (removed, test_removed_feature, \"1.0.0\", None, None, None),\n-    (removed, visible_private_types, \"1.0.0\", None, None, None),\n-    (removed, unsafe_no_drop_flag, \"1.0.0\", None, None, None),\n-    // Allows using items which are missing stability attributes\n-    (removed, unmarked_api, \"1.0.0\", None, None, None),\n-    (removed, allocator, \"1.0.0\", None, None, None),\n-    (removed, simd, \"1.0.0\", Some(27731), None,\n-     Some(\"removed in favor of `#[repr(simd)]`\")),\n-    (removed, advanced_slice_patterns, \"1.0.0\", Some(62254), None,\n-     Some(\"merged into `#![feature(slice_patterns)]`\")),\n-    (removed, macro_reexport, \"1.0.0\", Some(29638), None,\n-     Some(\"subsumed by `pub use`\")),\n-    (removed, pushpop_unsafe, \"1.2.0\", None, None, None),\n-    (removed, needs_allocator, \"1.4.0\", Some(27389), None,\n-     Some(\"subsumed by `#![feature(allocator_internals)]`\")),\n-    (removed, proc_macro_mod, \"1.27.0\", Some(54727), None,\n-     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n-    (removed, proc_macro_expr, \"1.27.0\", Some(54727), None,\n-     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n-    (removed, proc_macro_non_items, \"1.27.0\", Some(54727), None,\n-     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n-    (removed, proc_macro_gen, \"1.27.0\", Some(54727), None,\n-     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n-    (removed, panic_implementation, \"1.28.0\", Some(44489), None,\n-     Some(\"subsumed by `#[panic_handler]`\")),\n-    // Allows the use of `#[derive(Anything)]` as sugar for `#[derive_Anything]`.\n-    (removed, custom_derive, \"1.32.0\", Some(29644), None,\n-     Some(\"subsumed by `#[proc_macro_derive]`\")),\n-    // Paths of the form: `extern::foo::bar`\n-    (removed, extern_in_paths, \"1.33.0\", Some(55600), None,\n-     Some(\"subsumed by `::foo::bar` paths\")),\n-    (removed, quote, \"1.33.0\", Some(29601), None, None),\n-    // Allows using `#[unsafe_destructor_blind_to_params]` (RFC 1238).\n-    (removed, dropck_parametricity, \"1.38.0\", Some(28498), None, None),\n-    (removed, await_macro, \"1.38.0\", Some(50547), None,\n-     Some(\"subsumed by `.await` syntax\")),\n-    // Allows defining `existential type`s.\n-    (removed, existential_type, \"1.38.0\", Some(63063), None,\n-     Some(\"removed in favor of `#![feature(type_alias_impl_trait)]`\")),\n-\n-    // -------------------------------------------------------------------------\n-    // feature-group-end: removed features\n-    // -------------------------------------------------------------------------\n-);\n-\n-declare_features! (\n-    (stable_removed, no_stack_check, \"1.0.0\", None, None),\n-);\n-\n // If you change this, please modify `src/doc/unstable-book` as well. You must\n // move that documentation into the relevant place in the other docs, and\n // remove the chapter on the flag."}, {"sha": "46330df364852963702e6854b44742d2378337b5", "filename": "src/libsyntax/feature_gate/attr.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/src%2Flibsyntax%2Ffeature_gate%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/src%2Flibsyntax%2Ffeature_gate%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fattr.rs?ref=975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "patch": "@@ -0,0 +1 @@\n+//! TODO"}, {"sha": "6ebfeb29f677ba8ceea1819a6371dc2b5f44ad59", "filename": "src/libsyntax/feature_gate/removed.rs", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/src%2Flibsyntax%2Ffeature_gate%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975455b37dcdb6c59e47a289aa2d5f19d63a18f6/src%2Flibsyntax%2Ffeature_gate%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fremoved.rs?ref=975455b37dcdb6c59e47a289aa2d5f19d63a18f6", "patch": "@@ -0,0 +1,82 @@\n+//! List of the removed feature gates.\n+\n+use crate::symbol::{Symbol, sym};\n+\n+macro_rules! declare_features {\n+    ($((removed, $feature: ident, $ver: expr, $issue: expr, None, $reason: expr),)+) => {\n+        /// Represents unstable features which have since been removed (it was once Active)\n+        pub const REMOVED_FEATURES: &[(Symbol, &str, Option<u32>, Option<&str>)] = &[\n+            $((sym::$feature, $ver, $issue, $reason)),+\n+        ];\n+    };\n+\n+    ($((stable_removed, $feature: ident, $ver: expr, $issue: expr, None),)+) => {\n+        /// Represents stable features which have since been removed (it was once Accepted)\n+        pub const STABLE_REMOVED_FEATURES: &[(Symbol, &str, Option<u32>, Option<&str>)] = &[\n+            $((sym::$feature, $ver, $issue, None)),+\n+        ];\n+    };\n+}\n+\n+declare_features! (\n+    // -------------------------------------------------------------------------\n+    // feature-group-start: removed features\n+    // -------------------------------------------------------------------------\n+\n+    (removed, import_shadowing, \"1.0.0\", None, None, None),\n+    (removed, managed_boxes, \"1.0.0\", None, None, None),\n+    // Allows use of unary negate on unsigned integers, e.g., -e for e: u8\n+    (removed, negate_unsigned, \"1.0.0\", Some(29645), None, None),\n+    (removed, reflect, \"1.0.0\", Some(27749), None, None),\n+    // A way to temporarily opt out of opt in copy. This will *never* be accepted.\n+    (removed, opt_out_copy, \"1.0.0\", None, None, None),\n+    (removed, quad_precision_float, \"1.0.0\", None, None, None),\n+    (removed, struct_inherit, \"1.0.0\", None, None, None),\n+    (removed, test_removed_feature, \"1.0.0\", None, None, None),\n+    (removed, visible_private_types, \"1.0.0\", None, None, None),\n+    (removed, unsafe_no_drop_flag, \"1.0.0\", None, None, None),\n+    // Allows using items which are missing stability attributes\n+    (removed, unmarked_api, \"1.0.0\", None, None, None),\n+    (removed, allocator, \"1.0.0\", None, None, None),\n+    (removed, simd, \"1.0.0\", Some(27731), None,\n+     Some(\"removed in favor of `#[repr(simd)]`\")),\n+    (removed, advanced_slice_patterns, \"1.0.0\", Some(62254), None,\n+     Some(\"merged into `#![feature(slice_patterns)]`\")),\n+    (removed, macro_reexport, \"1.0.0\", Some(29638), None,\n+     Some(\"subsumed by `pub use`\")),\n+    (removed, pushpop_unsafe, \"1.2.0\", None, None, None),\n+    (removed, needs_allocator, \"1.4.0\", Some(27389), None,\n+     Some(\"subsumed by `#![feature(allocator_internals)]`\")),\n+    (removed, proc_macro_mod, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, proc_macro_expr, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, proc_macro_non_items, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, proc_macro_gen, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, panic_implementation, \"1.28.0\", Some(44489), None,\n+     Some(\"subsumed by `#[panic_handler]`\")),\n+    // Allows the use of `#[derive(Anything)]` as sugar for `#[derive_Anything]`.\n+    (removed, custom_derive, \"1.32.0\", Some(29644), None,\n+     Some(\"subsumed by `#[proc_macro_derive]`\")),\n+    // Paths of the form: `extern::foo::bar`\n+    (removed, extern_in_paths, \"1.33.0\", Some(55600), None,\n+     Some(\"subsumed by `::foo::bar` paths\")),\n+    (removed, quote, \"1.33.0\", Some(29601), None, None),\n+    // Allows using `#[unsafe_destructor_blind_to_params]` (RFC 1238).\n+    (removed, dropck_parametricity, \"1.38.0\", Some(28498), None, None),\n+    (removed, await_macro, \"1.38.0\", Some(50547), None,\n+     Some(\"subsumed by `.await` syntax\")),\n+    // Allows defining `existential type`s.\n+    (removed, existential_type, \"1.38.0\", Some(63063), None,\n+     Some(\"removed in favor of `#![feature(type_alias_impl_trait)]`\")),\n+\n+    // -------------------------------------------------------------------------\n+    // feature-group-end: removed features\n+    // -------------------------------------------------------------------------\n+);\n+\n+declare_features! (\n+    (stable_removed, no_stack_check, \"1.0.0\", None, None),\n+);"}]}