{"sha": "518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOGE1ZTA4YzAzOGZiNzRiYTBlZmE4YjI5YzdmODBiN2E0MmI5NzA=", "commit": {"author": {"name": "Scott Lawrence", "email": "bytbox@gmail.com", "date": "2014-01-27T04:01:20Z"}, "committer": {"name": "Scott Lawrence", "email": "bytbox@gmail.com", "date": "2014-01-29T14:15:41Z"}, "message": "Removing do keyword from libnative", "tree": {"sha": "b2f524e87559152c535d925e090cf65ac65980e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2f524e87559152c535d925e090cf65ac65980e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "html_url": "https://github.com/rust-lang/rust/commit/518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/518a5e08c038fb74ba0efa8b29c7f80b7a42b970/comments", "author": {"login": "bytbox", "id": 160033, "node_id": "MDQ6VXNlcjE2MDAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/160033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytbox", "html_url": "https://github.com/bytbox", "followers_url": "https://api.github.com/users/bytbox/followers", "following_url": "https://api.github.com/users/bytbox/following{/other_user}", "gists_url": "https://api.github.com/users/bytbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytbox/subscriptions", "organizations_url": "https://api.github.com/users/bytbox/orgs", "repos_url": "https://api.github.com/users/bytbox/repos", "events_url": "https://api.github.com/users/bytbox/events{/privacy}", "received_events_url": "https://api.github.com/users/bytbox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bytbox", "id": 160033, "node_id": "MDQ6VXNlcjE2MDAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/160033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytbox", "html_url": "https://github.com/bytbox", "followers_url": "https://api.github.com/users/bytbox/followers", "following_url": "https://api.github.com/users/bytbox/following{/other_user}", "gists_url": "https://api.github.com/users/bytbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytbox/subscriptions", "organizations_url": "https://api.github.com/users/bytbox/orgs", "repos_url": "https://api.github.com/users/bytbox/repos", "events_url": "https://api.github.com/users/bytbox/events{/privacy}", "received_events_url": "https://api.github.com/users/bytbox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93e99b8be467cae2f4bfa308568c1cd9b0bcba87", "url": "https://api.github.com/repos/rust-lang/rust/commits/93e99b8be467cae2f4bfa308568c1cd9b0bcba87", "html_url": "https://github.com/rust-lang/rust/commit/93e99b8be467cae2f4bfa308568c1cd9b0bcba87"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "9fc182203860b65e7d28d569d810db7b8d6db104", "filename": "src/libnative/io/timer_helper.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/518a5e08c038fb74ba0efa8b29c7f80b7a42b970/src%2Flibnative%2Fio%2Ftimer_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/518a5e08c038fb74ba0efa8b29c7f80b7a42b970/src%2Flibnative%2Fio%2Ftimer_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ftimer_helper.rs?ref=518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "patch": "@@ -46,10 +46,10 @@ pub fn boot(helper: fn(imp::signal, Port<Req>)) {\n             let (receive, send) = imp::new();\n             HELPER_SIGNAL = send;\n \n-            do task::spawn {\n+            task::spawn(proc() {\n                 bookkeeping::decrement();\n                 helper(receive, msgp);\n-            }\n+            });\n \n             rt::at_exit(proc() { shutdown() });\n         })"}, {"sha": "438ac4add39fcedfc84e830ab74d06773b7b6e6f", "filename": "src/libnative/task.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/518a5e08c038fb74ba0efa8b29c7f80b7a42b970/src%2Flibnative%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/518a5e08c038fb74ba0efa8b29c7f80b7a42b970/src%2Flibnative%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Ftask.rs?ref=518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "patch": "@@ -272,19 +272,19 @@ mod tests {\n     #[test]\n     fn smoke() {\n         let (p, c) = Chan::new();\n-        do spawn {\n+        spawn(proc() {\n             c.send(());\n-        }\n+        });\n         p.recv();\n     }\n \n     #[test]\n     fn smoke_fail() {\n         let (p, c) = Chan::<()>::new();\n-        do spawn {\n+        spawn(proc() {\n             let _c = c;\n             fail!()\n-        }\n+        });\n         assert_eq!(p.recv_opt(), None);\n     }\n \n@@ -311,38 +311,38 @@ mod tests {\n     #[test]\n     fn yield_test() {\n         let (p, c) = Chan::new();\n-        do spawn {\n+        spawn(proc() {\n             10.times(task::deschedule);\n             c.send(());\n-        }\n+        });\n         p.recv();\n     }\n \n     #[test]\n     fn spawn_children() {\n         let (p, c) = Chan::new();\n-        do spawn {\n+        spawn(proc() {\n             let (p, c2) = Chan::new();\n-            do spawn {\n+            spawn(proc() {\n                 let (p, c3) = Chan::new();\n-                do spawn {\n+                spawn(proc() {\n                     c3.send(());\n-                }\n+                });\n                 p.recv();\n                 c2.send(());\n-            }\n+            });\n             p.recv();\n             c.send(());\n-        }\n+        });\n         p.recv();\n     }\n \n     #[test]\n     fn spawn_inherits() {\n         let (p, c) = Chan::new();\n-        do spawn {\n+        spawn(proc() {\n             let c = c;\n-            do spawn {\n+            spawn(proc() {\n                 let mut task: ~Task = Local::take();\n                 match task.maybe_take_runtime::<Ops>() {\n                     Some(ops) => {\n@@ -352,8 +352,8 @@ mod tests {\n                 }\n                 Local::put(task);\n                 c.send(());\n-            }\n-        }\n+            });\n+        });\n         p.recv();\n     }\n }"}]}