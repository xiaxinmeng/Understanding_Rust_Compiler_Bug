{"sha": "89766a81ef6270595cb8e51f100ed44be4bb9929", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NzY2YTgxZWY2MjcwNTk1Y2I4ZTUxZjEwMGVkNDRiZTRiYjk5Mjk=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-23T19:59:23Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T16:19:50Z"}, "message": "trans: use Cell instead of RefCell where it suffices.", "tree": {"sha": "13ea43b89f75ac2cae80d9236b9c63964a386e4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13ea43b89f75ac2cae80d9236b9c63964a386e4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89766a81ef6270595cb8e51f100ed44be4bb9929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89766a81ef6270595cb8e51f100ed44be4bb9929", "html_url": "https://github.com/rust-lang/rust/commit/89766a81ef6270595cb8e51f100ed44be4bb9929", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89766a81ef6270595cb8e51f100ed44be4bb9929/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b122d1636ac502dad51c827c16dc95d80d96c838", "url": "https://api.github.com/repos/rust-lang/rust/commits/b122d1636ac502dad51c827c16dc95d80d96c838", "html_url": "https://github.com/rust-lang/rust/commit/b122d1636ac502dad51c827c16dc95d80d96c838"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "1c0919f9000ad65234d6e09f366819f2b8cd1d18", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/89766a81ef6270595cb8e51f100ed44be4bb9929/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89766a81ef6270595cb8e51f100ed44be4bb9929/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=89766a81ef6270595cb8e51f100ed44be4bb9929", "patch": "@@ -152,9 +152,9 @@ pub struct LocalCrateContext<'tcx> {\n \n     dbg_cx: Option<debuginfo::CrateDebugContext<'tcx>>,\n \n-    eh_personality: RefCell<Option<ValueRef>>,\n-    eh_unwind_resume: RefCell<Option<ValueRef>>,\n-    rust_try_fn: RefCell<Option<ValueRef>>,\n+    eh_personality: Cell<Option<ValueRef>>,\n+    eh_unwind_resume: Cell<Option<ValueRef>>,\n+    rust_try_fn: Cell<Option<ValueRef>>,\n \n     intrinsics: RefCell<FnvHashMap<&'static str, ValueRef>>,\n \n@@ -492,9 +492,9 @@ impl<'tcx> LocalCrateContext<'tcx> {\n                 builder: BuilderRef_res(llvm::LLVMCreateBuilderInContext(llcx)),\n                 closure_vals: RefCell::new(FnvHashMap()),\n                 dbg_cx: dbg_cx,\n-                eh_personality: RefCell::new(None),\n-                eh_unwind_resume: RefCell::new(None),\n-                rust_try_fn: RefCell::new(None),\n+                eh_personality: Cell::new(None),\n+                eh_unwind_resume: Cell::new(None),\n+                rust_try_fn: Cell::new(None),\n                 intrinsics: RefCell::new(FnvHashMap()),\n                 n_llvm_insns: Cell::new(0),\n                 type_of_depth: Cell::new(0),\n@@ -754,15 +754,15 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n         &self.local.dbg_cx\n     }\n \n-    pub fn eh_personality<'a>(&'a self) -> &'a RefCell<Option<ValueRef>> {\n+    pub fn eh_personality<'a>(&'a self) -> &'a Cell<Option<ValueRef>> {\n         &self.local.eh_personality\n     }\n \n-    pub fn eh_unwind_resume<'a>(&'a self) -> &'a RefCell<Option<ValueRef>> {\n+    pub fn eh_unwind_resume<'a>(&'a self) -> &'a Cell<Option<ValueRef>> {\n         &self.local.eh_unwind_resume\n     }\n \n-    pub fn rust_try_fn<'a>(&'a self) -> &'a RefCell<Option<ValueRef>> {\n+    pub fn rust_try_fn<'a>(&'a self) -> &'a Cell<Option<ValueRef>> {\n         &self.local.rust_try_fn\n     }\n "}, {"sha": "7494cf2975ad2bb2a97893891b14442b033e81bd", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89766a81ef6270595cb8e51f100ed44be4bb9929/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89766a81ef6270595cb8e51f100ed44be4bb9929/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=89766a81ef6270595cb8e51f100ed44be4bb9929", "patch": "@@ -1295,8 +1295,8 @@ fn get_rust_try_fn<'a, 'tcx>(fcx: &FunctionContext<'a, 'tcx>,\n                              trans: &mut for<'b> FnMut(Block<'b, 'tcx>))\n                              -> ValueRef {\n     let ccx = fcx.ccx;\n-    if let Some(llfn) = *ccx.rust_try_fn().borrow() {\n-        return llfn\n+    if let Some(llfn) = ccx.rust_try_fn().get() {\n+        return llfn;\n     }\n \n     // Define the type up front for the signature of the rust_try function.\n@@ -1323,7 +1323,7 @@ fn get_rust_try_fn<'a, 'tcx>(fcx: &FunctionContext<'a, 'tcx>,\n     };\n     let rust_try = gen_fn(fcx, \"__rust_try\", tcx.mk_fn_ptr(try_fn_ty), output,\n                           trans);\n-    *ccx.rust_try_fn().borrow_mut() = Some(rust_try);\n+    ccx.rust_try_fn().set(Some(rust_try));\n     return rust_try\n }\n "}]}