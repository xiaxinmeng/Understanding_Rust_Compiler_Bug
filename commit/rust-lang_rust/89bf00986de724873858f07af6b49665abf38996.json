{"sha": "89bf00986de724873858f07af6b49665abf38996", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YmYwMDk4NmRlNzI0ODczODU4ZjA3YWY2YjQ5NjY1YWJmMzg5OTY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-15T15:46:54Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-11-30T08:56:29Z"}, "message": "Do not put if on the same line as match arm", "tree": {"sha": "d3058066d48b4d40752b6519d9da3daa9aaf4a9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3058066d48b4d40752b6519d9da3daa9aaf4a9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89bf00986de724873858f07af6b49665abf38996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89bf00986de724873858f07af6b49665abf38996", "html_url": "https://github.com/rust-lang/rust/commit/89bf00986de724873858f07af6b49665abf38996", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89bf00986de724873858f07af6b49665abf38996/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8106eb2aa085e0975cda57f4642aff13fae85d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8106eb2aa085e0975cda57f4642aff13fae85d7", "html_url": "https://github.com/rust-lang/rust/commit/b8106eb2aa085e0975cda57f4642aff13fae85d7"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "46641a10ae688c2c5a5360afccdbe445f5c0372a", "filename": "src/expr.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/89bf00986de724873858f07af6b49665abf38996/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89bf00986de724873858f07af6b49665abf38996/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=89bf00986de724873858f07af6b49665abf38996", "patch": "@@ -1500,7 +1500,8 @@ fn flatten_arm_body<'a>(context: &'a RewriteContext, body: &'a ast::Expr) -> (bo\n         {\n             if let ast::StmtKind::Expr(ref expr) = block.stmts[0].node {\n                 (\n-                    !context.config.force_multiline_blocks() && expr.can_be_overflowed(context, 1),\n+                    !context.config.force_multiline_blocks()\n+                        && (can_extend_match_arm_body(expr), &**expr),\n                     &**expr,\n                 )\n             } else {\n@@ -1723,6 +1724,33 @@ fn rewrite_pat_expr(\n         .map(|expr_rw| format!(\"\\n{}{}\", nested_indent_str, expr_rw))\n }\n \n+fn can_extend_match_arm_body(body: &ast::Expr) -> bool {\n+    match body.node {\n+        // We do not allow `if` to stay on the same line, since we could easily mistake\n+        // `pat => if cond { ... }` and `pat if cond => { ... }`.\n+        ast::ExprKind::If(..) | ast::ExprKind::IfLet(..) => false,\n+        ast::ExprKind::ForLoop(..) |\n+        ast::ExprKind::Loop(..) |\n+        ast::ExprKind::While(..) |\n+        ast::ExprKind::WhileLet(..) |\n+        ast::ExprKind::Match(..) |\n+        ast::ExprKind::Block(..) |\n+        ast::ExprKind::Closure(..) |\n+        ast::ExprKind::Array(..) |\n+        ast::ExprKind::Call(..) |\n+        ast::ExprKind::MethodCall(..) |\n+        ast::ExprKind::Mac(..) |\n+        ast::ExprKind::Struct(..) |\n+        ast::ExprKind::Tup(..) => true,\n+        ast::ExprKind::AddrOf(_, ref expr) |\n+        ast::ExprKind::Box(ref expr) |\n+        ast::ExprKind::Try(ref expr) |\n+        ast::ExprKind::Unary(_, ref expr) |\n+        ast::ExprKind::Cast(ref expr, _) => can_extend_match_arm_body(expr),\n+        _ => false,\n+    }\n+}\n+\n pub fn rewrite_literal(context: &RewriteContext, l: &ast::Lit, shape: Shape) -> Option<String> {\n     match l.node {\n         ast::LitKind::Str(_, ast::StrStyle::Cooked) => rewrite_string_lit(context, l.span, shape),"}]}