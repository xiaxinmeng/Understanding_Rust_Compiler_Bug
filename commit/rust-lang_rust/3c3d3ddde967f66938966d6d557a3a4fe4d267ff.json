{"sha": "3c3d3ddde967f66938966d6d557a3a4fe4d267ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjM2QzZGRkZTk2N2Y2NjkzODk2NmQ2ZDU1N2EzYTRmZTRkMjY3ZmY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-03-11T12:39:37Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-04-04T19:26:00Z"}, "message": "core: rearrange `ptr::swap_nonoverlapping_one`'s cases (no functional changes).", "tree": {"sha": "60cc79cefd29aae5f7c8bb02ad0c97567e49f2c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60cc79cefd29aae5f7c8bb02ad0c97567e49f2c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c3d3ddde967f66938966d6d557a3a4fe4d267ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c3d3ddde967f66938966d6d557a3a4fe4d267ff", "html_url": "https://github.com/rust-lang/rust/commit/3c3d3ddde967f66938966d6d557a3a4fe4d267ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c3d3ddde967f66938966d6d557a3a4fe4d267ff/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3", "html_url": "https://github.com/rust-lang/rust/commit/5b0ab79116ba3231f447bc7a67c16ce93ecca0a3"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "15aa47696976963340417b21913542edfefedd47", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3c3d3ddde967f66938966d6d557a3a4fe4d267ff/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c3d3ddde967f66938966d6d557a3a4fe4d267ff/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=3c3d3ddde967f66938966d6d557a3a4fe4d267ff", "patch": "@@ -473,19 +473,21 @@ pub const unsafe fn swap_nonoverlapping<T>(x: *mut T, y: *mut T, count: usize) {\n #[inline]\n #[rustc_const_unstable(feature = \"const_swap\", issue = \"83163\")]\n pub(crate) const unsafe fn swap_nonoverlapping_one<T>(x: *mut T, y: *mut T) {\n-    // For types smaller than the block optimization below,\n-    // just swap directly to avoid pessimizing codegen.\n-    if mem::size_of::<T>() < 32 {\n-        // SAFETY: the caller must guarantee that `x` and `y` are valid\n-        // for writes, properly aligned, and non-overlapping.\n-        unsafe {\n-            let z = read(x);\n-            copy_nonoverlapping(y, x, 1);\n-            write(y, z);\n-        }\n-    } else {\n+    // Only apply the block optimization in `swap_nonoverlapping_bytes` for types\n+    // at least as large as the block size, to avoid pessimizing codegen.\n+    if mem::size_of::<T>() >= 32 {\n         // SAFETY: the caller must uphold the safety contract for `swap_nonoverlapping`.\n         unsafe { swap_nonoverlapping(x, y, 1) };\n+        return;\n+    }\n+\n+    // Direct swapping, for the cases not going through the block optimization.\n+    // SAFETY: the caller must guarantee that `x` and `y` are valid\n+    // for writes, properly aligned, and non-overlapping.\n+    unsafe {\n+        let z = read(x);\n+        copy_nonoverlapping(y, x, 1);\n+        write(y, z);\n     }\n }\n "}]}