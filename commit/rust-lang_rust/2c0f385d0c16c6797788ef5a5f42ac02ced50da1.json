{"sha": "2c0f385d0c16c6797788ef5a5f42ac02ced50da1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMGYzODVkMGMxNmM2Nzk3Nzg4ZWY1YTVmNDJhYzAyY2VkNTBkYTE=", "commit": {"author": {"name": "Jonathan Behrens", "email": "fintelia@gmail.com", "date": "2018-09-12T18:59:12Z"}, "committer": {"name": "Jonathan Behrens", "email": "fintelia@gmail.com", "date": "2018-09-12T18:59:12Z"}, "message": "Fix formatting", "tree": {"sha": "ba1f66046740efa5d8a3ce9f02c9491ffde740fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba1f66046740efa5d8a3ce9f02c9491ffde740fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c0f385d0c16c6797788ef5a5f42ac02ced50da1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0f385d0c16c6797788ef5a5f42ac02ced50da1", "html_url": "https://github.com/rust-lang/rust/commit/2c0f385d0c16c6797788ef5a5f42ac02ced50da1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c0f385d0c16c6797788ef5a5f42ac02ced50da1/comments", "author": {"login": "fintelia", "id": 4943209, "node_id": "MDQ6VXNlcjQ5NDMyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4943209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fintelia", "html_url": "https://github.com/fintelia", "followers_url": "https://api.github.com/users/fintelia/followers", "following_url": "https://api.github.com/users/fintelia/following{/other_user}", "gists_url": "https://api.github.com/users/fintelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fintelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fintelia/subscriptions", "organizations_url": "https://api.github.com/users/fintelia/orgs", "repos_url": "https://api.github.com/users/fintelia/repos", "events_url": "https://api.github.com/users/fintelia/events{/privacy}", "received_events_url": "https://api.github.com/users/fintelia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fintelia", "id": 4943209, "node_id": "MDQ6VXNlcjQ5NDMyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4943209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fintelia", "html_url": "https://github.com/fintelia", "followers_url": "https://api.github.com/users/fintelia/followers", "following_url": "https://api.github.com/users/fintelia/following{/other_user}", "gists_url": "https://api.github.com/users/fintelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fintelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fintelia/subscriptions", "organizations_url": "https://api.github.com/users/fintelia/orgs", "repos_url": "https://api.github.com/users/fintelia/repos", "events_url": "https://api.github.com/users/fintelia/events{/privacy}", "received_events_url": "https://api.github.com/users/fintelia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6c7a9a3152245021778140fa57f8d1a8ad8fb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6c7a9a3152245021778140fa57f8d1a8ad8fb6", "html_url": "https://github.com/rust-lang/rust/commit/ad6c7a9a3152245021778140fa57f8d1a8ad8fb6"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "bb635a26c31c45648f3c9371779e3869b78c3d8e", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2c0f385d0c16c6797788ef5a5f42ac02ced50da1/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0f385d0c16c6797788ef5a5f42ac02ced50da1/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=2c0f385d0c16c6797788ef5a5f42ac02ced50da1", "patch": "@@ -1954,7 +1954,8 @@ impl<'a, K, V, S> RawEntryBuilderMut<'a, K, V, S>\n         }\n     }\n \n-    /// Create a `RawEntryMut` by examining the elements of a hash bucket until `is_match` returns true for one of them.\n+    /// Create a `RawEntryMut` by examining the elements of a hash bucket until `is_match` returns\n+    /// true for one of them.\n     #[unstable(feature = \"hash_raw_entry\", issue = \"42069\")]\n     pub fn from_bucket<F>(self, hash_bucket: u64, mut is_match: F) -> RawEntryMut<'a, K, V, S>\n         where for<'b> F: FnMut(&'b K) -> bool,"}]}