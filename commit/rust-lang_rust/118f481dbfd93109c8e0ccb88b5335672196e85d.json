{"sha": "118f481dbfd93109c8e0ccb88b5335672196e85d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExOGY0ODFkYmZkOTMxMDljOGUwY2NiODhiNTMzNTY3MjE5NmU4NWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-08-22T22:26:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-08-27T00:54:58Z"}, "message": "glob: Deprecate the library in favor of cargo\n\nThis library has been moved out to a cargo package in rust-lang.", "tree": {"sha": "34acef17cb44e422dfc64d450eb0518db6cf5cfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34acef17cb44e422dfc64d450eb0518db6cf5cfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/118f481dbfd93109c8e0ccb88b5335672196e85d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/118f481dbfd93109c8e0ccb88b5335672196e85d", "html_url": "https://github.com/rust-lang/rust/commit/118f481dbfd93109c8e0ccb88b5335672196e85d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/118f481dbfd93109c8e0ccb88b5335672196e85d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0104d04fdf5126bdc3f76eac93906f25a201ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0104d04fdf5126bdc3f76eac93906f25a201ad3", "html_url": "https://github.com/rust-lang/rust/commit/d0104d04fdf5126bdc3f76eac93906f25a201ad3"}], "stats": {"total": 216, "additions": 4, "deletions": 212}, "files": [{"sha": "c9af44c9479252534b9a2a29e3d4d7686ba00a51", "filename": "src/libglob/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/118f481dbfd93109c8e0ccb88b5335672196e85d/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/118f481dbfd93109c8e0ccb88b5335672196e85d/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=118f481dbfd93109c8e0ccb88b5335672196e85d", "patch": "@@ -24,14 +24,16 @@\n  */\n \n #![crate_name = \"glob\"]\n-#![experimental]\n+#![deprecated = \"This is now a cargo package located at: \\\n+                 https://github.com/rust-lang/glob\"]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![license = \"MIT/ASL2\"]\n #![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n+#![allow(deprecated)]\n \n use std::cell::Cell;\n use std::{cmp, os, path};\n@@ -64,6 +66,7 @@ pub struct Paths {\n /// `puppies.jpg` and `hamsters.gif`:\n ///\n /// ```rust\n+/// # #![allow(deprecated)]\n /// use glob::glob;\n ///\n /// for path in glob(\"/media/pictures/*.jpg\") {"}, {"sha": "2ed6b82cad2326a9e5ba6563b63d9c807e56be29", "filename": "src/test/run-pass/glob-std.rs", "status": "removed", "additions": 0, "deletions": 211, "changes": 211, "blob_url": "https://github.com/rust-lang/rust/blob/d0104d04fdf5126bdc3f76eac93906f25a201ad3/src%2Ftest%2Frun-pass%2Fglob-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0104d04fdf5126bdc3f76eac93906f25a201ad3/src%2Ftest%2Frun-pass%2Fglob-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglob-std.rs?ref=d0104d04fdf5126bdc3f76eac93906f25a201ad3", "patch": "@@ -1,211 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-windows TempDir may cause IoError on windows: #10462\n-\n-#![feature(macro_rules)]\n-\n-extern crate glob;\n-\n-use glob::glob;\n-use std::os;\n-use std::io;\n-use std::io::TempDir;\n-\n-macro_rules! assert_eq ( ($e1:expr, $e2:expr) => (\n-    if $e1 != $e2 {\n-        fail!(\"{} != {}\", stringify!($e1), stringify!($e2))\n-    }\n-) )\n-\n-pub fn main() {\n-    fn mk_file(path: &str, directory: bool) {\n-        if directory {\n-            io::fs::mkdir(&Path::new(path), io::UserRWX).unwrap();\n-        } else {\n-            io::File::create(&Path::new(path)).unwrap();\n-        }\n-    }\n-\n-    fn abs_path(path: &str) -> Path {\n-        os::getcwd().join(&Path::new(path))\n-    }\n-\n-    fn glob_vec(pattern: &str) -> Vec<Path> {\n-        glob(pattern).collect()\n-    }\n-\n-    let root = TempDir::new(\"glob-tests\");\n-    let root = root.expect(\"Should have created a temp directory\");\n-    assert!(os::change_dir(root.path()));\n-\n-    mk_file(\"aaa\", true);\n-    mk_file(\"aaa/apple\", true);\n-    mk_file(\"aaa/orange\", true);\n-    mk_file(\"aaa/tomato\", true);\n-    mk_file(\"aaa/tomato/tomato.txt\", false);\n-    mk_file(\"aaa/tomato/tomoto.txt\", false);\n-    mk_file(\"bbb\", true);\n-    mk_file(\"bbb/specials\", true);\n-    mk_file(\"bbb/specials/!\", false);\n-\n-    // windows does not allow `*` or `?` characters to exist in filenames\n-    if os::consts::FAMILY != \"windows\" {\n-        mk_file(\"bbb/specials/*\", false);\n-        mk_file(\"bbb/specials/?\", false);\n-    }\n-\n-    mk_file(\"bbb/specials/[\", false);\n-    mk_file(\"bbb/specials/]\", false);\n-    mk_file(\"ccc\", true);\n-    mk_file(\"xyz\", true);\n-    mk_file(\"xyz/x\", false);\n-    mk_file(\"xyz/y\", false);\n-    mk_file(\"xyz/z\", false);\n-\n-    assert_eq!(glob_vec(\"\"), Vec::new());\n-    assert_eq!(glob_vec(\".\"), vec!(os::getcwd()));\n-    assert_eq!(glob_vec(\"..\"), vec!(os::getcwd().join(\"..\")));\n-\n-    assert_eq!(glob_vec(\"aaa\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aaa/\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"a\"), Vec::new());\n-    assert_eq!(glob_vec(\"aa\"), Vec::new());\n-    assert_eq!(glob_vec(\"aaaa\"), Vec::new());\n-\n-    assert_eq!(glob_vec(\"aaa/apple\"), vec!(abs_path(\"aaa/apple\")));\n-    assert_eq!(glob_vec(\"aaa/apple/nope\"), Vec::new());\n-\n-    // windows should support both / and \\ as directory separators\n-    if os::consts::FAMILY == \"windows\" {\n-        assert_eq!(glob_vec(\"aaa\\\\apple\"), vec!(abs_path(\"aaa/apple\")));\n-    }\n-\n-    assert_eq!(glob_vec(\"???/\"), vec!(\n-        abs_path(\"aaa\"),\n-        abs_path(\"bbb\"),\n-        abs_path(\"ccc\"),\n-        abs_path(\"xyz\")));\n-\n-    assert_eq!(glob_vec(\"aaa/tomato/tom?to.txt\"), vec!(\n-        abs_path(\"aaa/tomato/tomato.txt\"),\n-        abs_path(\"aaa/tomato/tomoto.txt\")));\n-\n-    assert_eq!(glob_vec(\"xyz/?\"), vec!(\n-        abs_path(\"xyz/x\"),\n-        abs_path(\"xyz/y\"),\n-        abs_path(\"xyz/z\")));\n-\n-    assert_eq!(glob_vec(\"a*\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"*a*\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"a*a\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aaa*\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"*aaa\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"*aaa*\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"*a*a*a*\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aaa*/\"), vec!(abs_path(\"aaa\")));\n-\n-    assert_eq!(glob_vec(\"aaa/*\"), vec!(\n-        abs_path(\"aaa/apple\"),\n-        abs_path(\"aaa/orange\"),\n-        abs_path(\"aaa/tomato\")));\n-\n-    assert_eq!(glob_vec(\"aaa/*a*\"), vec!(\n-        abs_path(\"aaa/apple\"),\n-        abs_path(\"aaa/orange\"),\n-        abs_path(\"aaa/tomato\")));\n-\n-    assert_eq!(glob_vec(\"*/*/*.txt\"), vec!(\n-        abs_path(\"aaa/tomato/tomato.txt\"),\n-        abs_path(\"aaa/tomato/tomoto.txt\")));\n-\n-    assert_eq!(glob_vec(\"*/*/t[aob]m?to[.]t[!y]t\"), vec!(\n-        abs_path(\"aaa/tomato/tomato.txt\"),\n-        abs_path(\"aaa/tomato/tomoto.txt\")));\n-\n-    assert_eq!(glob_vec(\"./aaa\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"./*\"), glob_vec(\"*\"));\n-    assert_eq!(glob_vec(\"*/..\").pop().unwrap(), abs_path(\".\"));\n-    assert_eq!(glob_vec(\"aaa/../bbb\"), vec!(abs_path(\"bbb\")));\n-    assert_eq!(glob_vec(\"nonexistent/../bbb\"), Vec::new());\n-    assert_eq!(glob_vec(\"aaa/tomato/tomato.txt/..\"), Vec::new());\n-\n-    assert_eq!(glob_vec(\"aaa/tomato/tomato.txt/\"), Vec::new());\n-\n-    assert_eq!(glob_vec(\"aa[a]\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aa[abc]\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"a[bca]a\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aa[b]\"), Vec::new());\n-    assert_eq!(glob_vec(\"aa[xyz]\"), Vec::new());\n-    assert_eq!(glob_vec(\"aa[]]\"), Vec::new());\n-\n-    assert_eq!(glob_vec(\"aa[!b]\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aa[!bcd]\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"a[!bcd]a\"), vec!(abs_path(\"aaa\")));\n-    assert_eq!(glob_vec(\"aa[!a]\"), Vec::new());\n-    assert_eq!(glob_vec(\"aa[!abc]\"), Vec::new());\n-\n-    assert_eq!(glob_vec(\"bbb/specials/[[]\"), vec!(abs_path(\"bbb/specials/[\")));\n-    assert_eq!(glob_vec(\"bbb/specials/!\"), vec!(abs_path(\"bbb/specials/!\")));\n-    assert_eq!(glob_vec(\"bbb/specials/[]]\"), vec!(abs_path(\"bbb/specials/]\")));\n-\n-    if os::consts::FAMILY != \"windows\" {\n-        assert_eq!(glob_vec(\"bbb/specials/[*]\"), vec!(abs_path(\"bbb/specials/*\")));\n-        assert_eq!(glob_vec(\"bbb/specials/[?]\"), vec!(abs_path(\"bbb/specials/?\")));\n-    }\n-\n-    if os::consts::FAMILY == \"windows\" {\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[![]\"), vec!(\n-            abs_path(\"bbb/specials/!\"),\n-            abs_path(\"bbb/specials/]\")));\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[!]]\"), vec!(\n-            abs_path(\"bbb/specials/!\"),\n-            abs_path(\"bbb/specials/[\")));\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[!!]\"), vec!(\n-            abs_path(\"bbb/specials/[\"),\n-            abs_path(\"bbb/specials/]\")));\n-\n-    } else {\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[![]\"), vec!(\n-            abs_path(\"bbb/specials/!\"),\n-            abs_path(\"bbb/specials/*\"),\n-            abs_path(\"bbb/specials/?\"),\n-            abs_path(\"bbb/specials/]\")));\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[!]]\"), vec!(\n-            abs_path(\"bbb/specials/!\"),\n-            abs_path(\"bbb/specials/*\"),\n-            abs_path(\"bbb/specials/?\"),\n-            abs_path(\"bbb/specials/[\")));\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[!!]\"), vec!(\n-            abs_path(\"bbb/specials/*\"),\n-            abs_path(\"bbb/specials/?\"),\n-            abs_path(\"bbb/specials/[\"),\n-            abs_path(\"bbb/specials/]\")));\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[!*]\"), vec!(\n-            abs_path(\"bbb/specials/!\"),\n-            abs_path(\"bbb/specials/?\"),\n-            abs_path(\"bbb/specials/[\"),\n-            abs_path(\"bbb/specials/]\")));\n-\n-        assert_eq!(glob_vec(\"bbb/specials/[!?]\"), vec!(\n-            abs_path(\"bbb/specials/!\"),\n-            abs_path(\"bbb/specials/*\"),\n-            abs_path(\"bbb/specials/[\"),\n-            abs_path(\"bbb/specials/]\")));\n-\n-    }\n-}"}]}