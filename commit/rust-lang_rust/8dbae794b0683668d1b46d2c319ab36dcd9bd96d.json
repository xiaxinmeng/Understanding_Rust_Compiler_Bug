{"sha": "8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYmFlNzk0YjA2ODM2NjhkMWI0NmQyYzMxOWFiMzZkY2Q5YmQ5NmQ=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2019-03-28T18:28:39Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2019-03-28T18:28:50Z"}, "message": "Use write_all instead of write in example code", "tree": {"sha": "bafc4378301c884329d7051817bf8e102d37c698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bafc4378301c884329d7051817bf8e102d37c698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "html_url": "https://github.com/rust-lang/rust/commit/8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dbae794b0683668d1b46d2c319ab36dcd9bd96d/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237bf3244fffef501cf37d4bda00e1fce3fcfb46", "url": "https://api.github.com/repos/rust-lang/rust/commits/237bf3244fffef501cf37d4bda00e1fce3fcfb46", "html_url": "https://github.com/rust-lang/rust/commit/237bf3244fffef501cf37d4bda00e1fce3fcfb46"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "14c850b6b054740426ad3fe1dcd233e35ef97470", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dbae794b0683668d1b46d2c319ab36dcd9bd96d/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbae794b0683668d1b46d2c319ab36dcd9bd96d/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "patch": "@@ -1151,7 +1151,7 @@ pub trait Write {\n     /// fn main() -> std::io::Result<()> {\n     ///     let mut buffer = BufWriter::new(File::create(\"foo.txt\")?);\n     ///\n-    ///     buffer.write(b\"some bytes\")?;\n+    ///     buffer.write_all(b\"some bytes\")?;\n     ///     buffer.flush()?;\n     ///     Ok(())\n     /// }"}, {"sha": "7e151041a9ea857853ef444480cbb599b4063d87", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8dbae794b0683668d1b46d2c319ab36dcd9bd96d/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbae794b0683668d1b46d2c319ab36dcd9bd96d/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "patch": "@@ -405,7 +405,7 @@ pub struct StdoutLock<'a> {\n /// use std::io::{self, Write};\n ///\n /// fn main() -> io::Result<()> {\n-///     io::stdout().write(b\"hello world\")?;\n+///     io::stdout().write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -420,7 +420,7 @@ pub struct StdoutLock<'a> {\n ///     let stdout = io::stdout();\n ///     let mut handle = stdout.lock();\n ///\n-///     handle.write(b\"hello world\")?;\n+///     handle.write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -460,7 +460,7 @@ impl Stdout {\n     ///     let stdout = io::stdout();\n     ///     let mut handle = stdout.lock();\n     ///\n-    ///     handle.write(b\"hello world\")?;\n+    ///     handle.write_all(b\"hello world\")?;\n     ///\n     ///     Ok(())\n     /// }\n@@ -558,7 +558,7 @@ pub struct StderrLock<'a> {\n /// use std::io::{self, Write};\n ///\n /// fn main() -> io::Result<()> {\n-///     io::stderr().write(b\"hello world\")?;\n+///     io::stderr().write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -573,7 +573,7 @@ pub struct StderrLock<'a> {\n ///     let stderr = io::stderr();\n ///     let mut handle = stderr.lock();\n ///\n-///     handle.write(b\"hello world\")?;\n+///     handle.write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -613,7 +613,7 @@ impl Stderr {\n     ///     let stderr = io::stderr();\n     ///     let mut handle = stderr.lock();\n     ///\n-    ///     handle.write(b\"hello world\")?;\n+    ///     handle.write_all(b\"hello world\")?;\n     ///\n     ///     Ok(())\n     /// }"}]}