{"sha": "bdef90730ec0187454545679f9d3bd26d8f042fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZWY5MDczMGVjMDE4NzQ1NDU0NTY3OWY5ZDNiZDI2ZDhmMDQyZmE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-16T03:25:00Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-16T03:35:57Z"}, "message": "Clarify a comment\n\n...at least I think this is what was meant.", "tree": {"sha": "32f6e2a60d5cc2a0d078efa23ec02631ba4c2c73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32f6e2a60d5cc2a0d078efa23ec02631ba4c2c73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdef90730ec0187454545679f9d3bd26d8f042fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdef90730ec0187454545679f9d3bd26d8f042fa", "html_url": "https://github.com/rust-lang/rust/commit/bdef90730ec0187454545679f9d3bd26d8f042fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdef90730ec0187454545679f9d3bd26d8f042fa/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2d18c9a8ac87f9a65a731f2316ecdd5c69db910", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d18c9a8ac87f9a65a731f2316ecdd5c69db910", "html_url": "https://github.com/rust-lang/rust/commit/e2d18c9a8ac87f9a65a731f2316ecdd5c69db910"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ca0636ec40ddcbe2f3e5042af2eb6cbb4e794189", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdef90730ec0187454545679f9d3bd26d8f042fa/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdef90730ec0187454545679f9d3bd26d8f042fa/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=bdef90730ec0187454545679f9d3bd26d8f042fa", "patch": "@@ -1411,7 +1411,7 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n     ret result;\n }\n \n-// True if instantiating an instance of `ty` requires an instead of `r_ty`.\n+// True if instantiating an instance of `ty` requires an instance of `r_ty`.\n fn is_instantiable(cx: ctxt, r_ty: t) -> bool {\n \n     fn type_requires(cx: ctxt, seen: @mut [def_id],"}]}