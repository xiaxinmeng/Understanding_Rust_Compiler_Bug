{"sha": "ffabdab8cf1499e1857d9ebcac2c410220137025", "node_id": "C_kwDOAAsO6NoAKGZmYWJkYWI4Y2YxNDk5ZTE4NTdkOWViY2FjMmM0MTAyMjAxMzcwMjU", "commit": {"author": {"name": "Samuel \"Sam\" Tardieu", "email": "sam@rfc1149.net", "date": "2023-03-11T09:20:44Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2023-03-16T20:42:04Z"}, "message": "New lint to detect `&std::path::MAIN_SEPARATOR.to_string()`", "tree": {"sha": "f837fab4e01472690de4bcf16cd3c826e245bb2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f837fab4e01472690de4bcf16cd3c826e245bb2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffabdab8cf1499e1857d9ebcac2c410220137025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffabdab8cf1499e1857d9ebcac2c410220137025", "html_url": "https://github.com/rust-lang/rust/commit/ffabdab8cf1499e1857d9ebcac2c410220137025", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffabdab8cf1499e1857d9ebcac2c410220137025/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5afa93bd8ea57faa67f8ea75103971831066f283", "url": "https://api.github.com/repos/rust-lang/rust/commits/5afa93bd8ea57faa67f8ea75103971831066f283", "html_url": "https://github.com/rust-lang/rust/commit/5afa93bd8ea57faa67f8ea75103971831066f283"}], "stats": {"total": 184, "additions": 184, "deletions": 0}, "files": [{"sha": "47a503510c1078327cf0472e951334ff097420db", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -4662,6 +4662,7 @@ Released 2018-09-13\n [`manual_instant_elapsed`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_instant_elapsed\n [`manual_is_ascii_check`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_ascii_check\n [`manual_let_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n+[`manual_main_separator_str`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_main_separator_str\n [`manual_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\n [`manual_memcpy`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n [`manual_non_exhaustive`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive"}, {"sha": "2331e857b1f798302ef1ef3e0861c9e1f51575f7", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -263,6 +263,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::manual_clamp::MANUAL_CLAMP_INFO,\n     crate::manual_is_ascii_check::MANUAL_IS_ASCII_CHECK_INFO,\n     crate::manual_let_else::MANUAL_LET_ELSE_INFO,\n+    crate::manual_main_separator_str::MANUAL_MAIN_SEPARATOR_STR_INFO,\n     crate::manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE_INFO,\n     crate::manual_rem_euclid::MANUAL_REM_EUCLID_INFO,\n     crate::manual_retain::MANUAL_RETAIN_INFO,"}, {"sha": "100cba4567939d962ad7266d3378f2f070d83d0e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -180,6 +180,7 @@ mod manual_bits;\n mod manual_clamp;\n mod manual_is_ascii_check;\n mod manual_let_else;\n+mod manual_main_separator_str;\n mod manual_non_exhaustive;\n mod manual_rem_euclid;\n mod manual_retain;\n@@ -936,6 +937,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| Box::new(redundant_async_block::RedundantAsyncBlock));\n     store.register_late_pass(|_| Box::new(let_with_type_underscore::UnderscoreTyped));\n     store.register_late_pass(|_| Box::new(allow_attributes::AllowAttribute));\n+    store.register_late_pass(move |_| Box::new(manual_main_separator_str::ManualMainSeparatorStr::new(msrv())));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "a6d318f952c84a585b42c90c99d1a9c86dc98d90", "filename": "clippy_lints/src/manual_main_separator_str.rs", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_lints%2Fsrc%2Fmanual_main_separator_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_lints%2Fsrc%2Fmanual_main_separator_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_main_separator_str.rs?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -0,0 +1,72 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::msrvs::{self, Msrv};\n+use clippy_utils::{is_trait_method, match_def_path, paths, peel_hir_expr_refs};\n+use rustc_errors::Applicability;\n+use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::*;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::sym;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for references on `std::path::MAIN_SEPARATOR.to_string()` used\n+    /// to build a `&str`.\n+    ///\n+    /// ### Why is this bad?\n+    /// There exists a `std::path::MAIN_SEPARATOR_STR` which does not require\n+    /// an extra memory allocation.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// let s: &str = &std::path::MAIN_SEPARATOR.to_string();\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// let s: &str = std::path::MAIN_SEPARATOR_STR;\n+    /// ```\n+    #[clippy::version = \"1.70.0\"]\n+    pub MANUAL_MAIN_SEPARATOR_STR,\n+    complexity,\n+    \"`&std::path::MAIN_SEPARATOR.to_string()` can be replaced by `std::path::MAIN_SEPARATOR_STR`\"\n+}\n+\n+pub struct ManualMainSeparatorStr {\n+    msrv: Msrv,\n+}\n+\n+impl ManualMainSeparatorStr {\n+    #[must_use]\n+    pub fn new(msrv: Msrv) -> Self {\n+        Self { msrv }\n+    }\n+}\n+\n+impl_lint_pass!(ManualMainSeparatorStr => [MANUAL_MAIN_SEPARATOR_STR]);\n+\n+impl LateLintPass<'_> for ManualMainSeparatorStr {\n+    fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n+        if self.msrv.meets(msrvs::PATH_MAIN_SEPARATOR_STR) &&\n+            let (target, _) = peel_hir_expr_refs(expr) &&\n+            is_trait_method(cx, target, sym::ToString) &&\n+            let ExprKind::MethodCall(path, receiver, &[], _) = target.kind &&\n+            path.ident.name == sym::to_string &&\n+            let ExprKind::Path(QPath::Resolved(None, path)) = receiver.kind &&\n+            let Res::Def(DefKind::Const, receiver_def_id) = path.res &&\n+            match_def_path(cx, receiver_def_id, &paths::PATH_MAIN_SEPARATOR) &&\n+            let ty::Ref(_, ty, Mutability::Not) = cx.typeck_results().expr_ty_adjusted(expr).kind() &&\n+            ty.is_str()\n+            {\n+                span_lint_and_sugg(\n+                    cx,\n+                    MANUAL_MAIN_SEPARATOR_STR,\n+                    expr.span,\n+                    \"taking a reference on `std::path::MAIN_SEPARATOR` conversion to `String`\",\n+                    \"replace with\",\n+                    \"std::path::MAIN_SEPARATOR_STR\".to_owned(),\n+                    Applicability::MachineApplicable,\n+                );\n+            }\n+    }\n+}"}, {"sha": "e05de2dc99c05ad808cf2958a374524de2d6462d", "filename": "clippy_utils/src/msrvs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_utils%2Fsrc%2Fmsrvs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_utils%2Fsrc%2Fmsrvs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmsrvs.rs?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -19,6 +19,7 @@ macro_rules! msrv_aliases {\n \n // names may refer to stabilized feature flags or library items\n msrv_aliases! {\n+    1,68,0 { PATH_MAIN_SEPARATOR_STR }\n     1,65,0 { LET_ELSE }\n     1,62,0 { BOOL_THEN_SOME, DEFAULT_ENUM_ATTRIBUTE }\n     1,58,0 { FORMAT_ARGS_CAPTURE, PATTERN_TRAIT_CHAR_ARRAY }"}, {"sha": "c919575bfe906229a5f3754dd1de4fb35718708e", "filename": "clippy_utils/src/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_utils%2Fsrc%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/clippy_utils%2Fsrc%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fpaths.rs?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -67,6 +67,7 @@ pub const PARKING_LOT_MUTEX_GUARD: [&str; 3] = [\"lock_api\", \"mutex\", \"MutexGuard\n pub const PARKING_LOT_RWLOCK_READ_GUARD: [&str; 3] = [\"lock_api\", \"rwlock\", \"RwLockReadGuard\"];\n pub const PARKING_LOT_RWLOCK_WRITE_GUARD: [&str; 3] = [\"lock_api\", \"rwlock\", \"RwLockWriteGuard\"];\n pub const PATH_BUF_AS_PATH: [&str; 4] = [\"std\", \"path\", \"PathBuf\", \"as_path\"];\n+pub const PATH_MAIN_SEPARATOR: [&str; 3] = [\"std\", \"path\", \"MAIN_SEPARATOR\"];\n pub const PATH_TO_PATH_BUF: [&str; 4] = [\"std\", \"path\", \"Path\", \"to_path_buf\"];\n pub const PEEKABLE: [&str; 5] = [\"core\", \"iter\", \"adapters\", \"peekable\", \"Peekable\"];\n pub const PERMISSIONS: [&str; 3] = [\"std\", \"fs\", \"Permissions\"];"}, {"sha": "50f46d6b355009c86df008215f0bda910e315c2c", "filename": "tests/ui/manual_main_separator_str.fixed", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/tests%2Fui%2Fmanual_main_separator_str.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/tests%2Fui%2Fmanual_main_separator_str.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_main_separator_str.fixed?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -0,0 +1,39 @@\n+// run-rustfix\n+\n+#![allow(unused)]\n+#![warn(clippy::manual_main_separator_str)]\n+\n+use std::path::MAIN_SEPARATOR;\n+\n+fn len(s: &str) -> usize {\n+    s.len()\n+}\n+\n+struct U<'a> {\n+    f: &'a str,\n+    g: &'a String,\n+}\n+\n+struct V<T> {\n+    f: T,\n+}\n+\n+fn main() {\n+    // Should lint\n+    let _: &str = std::path::MAIN_SEPARATOR_STR;\n+    let _ = len(std::path::MAIN_SEPARATOR_STR);\n+    let _: Vec<u16> = std::path::MAIN_SEPARATOR_STR.encode_utf16().collect();\n+\n+    // Should lint for field `f` only\n+    let _ = U {\n+        f: std::path::MAIN_SEPARATOR_STR,\n+        g: &MAIN_SEPARATOR.to_string(),\n+    };\n+\n+    // Should not lint\n+    let _: &String = &MAIN_SEPARATOR.to_string();\n+    let _ = &MAIN_SEPARATOR.to_string();\n+    let _ = V {\n+        f: &MAIN_SEPARATOR.to_string(),\n+    };\n+}"}, {"sha": "2dbb9e66151d482b3a80241d52e78b871f45313b", "filename": "tests/ui/manual_main_separator_str.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/tests%2Fui%2Fmanual_main_separator_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/tests%2Fui%2Fmanual_main_separator_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_main_separator_str.rs?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -0,0 +1,39 @@\n+// run-rustfix\n+\n+#![allow(unused)]\n+#![warn(clippy::manual_main_separator_str)]\n+\n+use std::path::MAIN_SEPARATOR;\n+\n+fn len(s: &str) -> usize {\n+    s.len()\n+}\n+\n+struct U<'a> {\n+    f: &'a str,\n+    g: &'a String,\n+}\n+\n+struct V<T> {\n+    f: T,\n+}\n+\n+fn main() {\n+    // Should lint\n+    let _: &str = &MAIN_SEPARATOR.to_string();\n+    let _ = len(&MAIN_SEPARATOR.to_string());\n+    let _: Vec<u16> = MAIN_SEPARATOR.to_string().encode_utf16().collect();\n+\n+    // Should lint for field `f` only\n+    let _ = U {\n+        f: &MAIN_SEPARATOR.to_string(),\n+        g: &MAIN_SEPARATOR.to_string(),\n+    };\n+\n+    // Should not lint\n+    let _: &String = &MAIN_SEPARATOR.to_string();\n+    let _ = &MAIN_SEPARATOR.to_string();\n+    let _ = V {\n+        f: &MAIN_SEPARATOR.to_string(),\n+    };\n+}"}, {"sha": "e6cefde66a7d27b648287ba30210df2b3c5b9a1d", "filename": "tests/ui/manual_main_separator_str.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ffabdab8cf1499e1857d9ebcac2c410220137025/tests%2Fui%2Fmanual_main_separator_str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ffabdab8cf1499e1857d9ebcac2c410220137025/tests%2Fui%2Fmanual_main_separator_str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_main_separator_str.stderr?ref=ffabdab8cf1499e1857d9ebcac2c410220137025", "patch": "@@ -0,0 +1,28 @@\n+error: taking a reference on `std::path::MAIN_SEPARATOR` conversion to `String`\n+  --> $DIR/manual_main_separator_str.rs:23:19\n+   |\n+LL |     let _: &str = &MAIN_SEPARATOR.to_string();\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `std::path::MAIN_SEPARATOR_STR`\n+   |\n+   = note: `-D clippy::manual-main-separator-str` implied by `-D warnings`\n+\n+error: taking a reference on `std::path::MAIN_SEPARATOR` conversion to `String`\n+  --> $DIR/manual_main_separator_str.rs:24:17\n+   |\n+LL |     let _ = len(&MAIN_SEPARATOR.to_string());\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `std::path::MAIN_SEPARATOR_STR`\n+\n+error: taking a reference on `std::path::MAIN_SEPARATOR` conversion to `String`\n+  --> $DIR/manual_main_separator_str.rs:25:23\n+   |\n+LL |     let _: Vec<u16> = MAIN_SEPARATOR.to_string().encode_utf16().collect();\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `std::path::MAIN_SEPARATOR_STR`\n+\n+error: taking a reference on `std::path::MAIN_SEPARATOR` conversion to `String`\n+  --> $DIR/manual_main_separator_str.rs:29:12\n+   |\n+LL |         f: &MAIN_SEPARATOR.to_string(),\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `std::path::MAIN_SEPARATOR_STR`\n+\n+error: aborting due to 4 previous errors\n+"}]}