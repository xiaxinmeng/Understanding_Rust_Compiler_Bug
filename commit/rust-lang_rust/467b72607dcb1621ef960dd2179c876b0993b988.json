{"sha": "467b72607dcb1621ef960dd2179c876b0993b988", "node_id": "C_kwDOAAsO6NoAKDQ2N2I3MjYwN2RjYjE2MjFlZjk2MGRkMjE3OWM4NzZiMDk5M2I5ODg", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-03T20:50:37Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-03T20:52:38Z"}, "message": "Hash `Ident` spans in all HIR structures\n\nThis PR removes all of the `#[stable_hasher(project(name))]`\nattributes used in HIR structs. While these attributes are not known\nto be causing any issues in practice, we need to hash these in\norder for the incremental system to work correctly -\na query could be otherwise be incorrectly marked green\nwhen a change occures in one of the `Span`s that it uses.", "tree": {"sha": "88ee5c48bdb65efad4e338d5391a2e64a1edfb92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ee5c48bdb65efad4e338d5391a2e64a1edfb92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/467b72607dcb1621ef960dd2179c876b0993b988", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmHTYhwACgkQtAh+UQ6Y\nsWRaMxAAhpfiGeW8Zx9MEa2ONOTktdSMf/przW2hFeQGDfYo59KRTla2MKcFL49h\n9P5M4Pt/OtzamPKagpjpX70KsTINijLbnQ/WYgNq4LJ8TfpufteZY2MoEuG8mrd6\nZ7uBBnEA1F7wAnHRDXFAk9GBRDJV/a6xxwkcasWB4cBPv1q5D80T4lJX8V83P50A\nIYIqkS/LYxmeVv8ngILszTJ3U3SCRijt34xv12eZ+MsTke0MUKzoSKcDFD/uXoKS\n+a+VFhJz24P1xuePQ0BgjrXqNxZ0AnO8Tfo4PI4ZZ577dZyhOHLgh7oqKCOLqwf8\nXUriK6qC0KCLFWju6h/2wzS8yvbfzK0K2dKPOLZzGzPOmHxg2JZYgugbGkFxbTYD\nMMatyiRbWJfbCtRjKtRpfIslvbtqhabJIstZ1TX/wxKCdeigDR9GWOkE2/et4HjK\nutQox4mJs3ibPKO+LWDH1v6emUL3yZP5ptaMtumQwLNE/78gx/tITAJtGhfzGUh4\nYk+nCguU/SBYak5jqoI8TEJLbqPpLU23V76a7rnnnD6jd7aHh5NLYfgFZtrH1uiU\n8GFMB0WuSO/Bd9F6E/wqbzDDE8tHtQyeQ3UUXhsN5/2FYsk+ffbRLTZn3JiEYn0s\nMe4yqyHJmG+ahBeQnwDkmo2Jdmbsxi2UlVdBSqc8A+hayFYQ4Co=\n=Ji0+\n-----END PGP SIGNATURE-----", "payload": "tree 88ee5c48bdb65efad4e338d5391a2e64a1edfb92\nparent ddabe0775c5f5b551d5eb54e3c4366fb8bec0c92\nauthor Aaron Hill <aa1ronham@gmail.com> 1641243037 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1641243158 -0500\n\nHash `Ident` spans in all HIR structures\n\nThis PR removes all of the `#[stable_hasher(project(name))]`\nattributes used in HIR structs. While these attributes are not known\nto be causing any issues in practice, we need to hash these in\norder for the incremental system to work correctly -\na query could be otherwise be incorrectly marked green\nwhen a change occures in one of the `Span`s that it uses.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/467b72607dcb1621ef960dd2179c876b0993b988", "html_url": "https://github.com/rust-lang/rust/commit/467b72607dcb1621ef960dd2179c876b0993b988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/467b72607dcb1621ef960dd2179c876b0993b988/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddabe0775c5f5b551d5eb54e3c4366fb8bec0c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddabe0775c5f5b551d5eb54e3c4366fb8bec0c92", "html_url": "https://github.com/rust-lang/rust/commit/ddabe0775c5f5b551d5eb54e3c4366fb8bec0c92"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "d67f03a2258d8edf46ae7ea306525fda6e59f5bd", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/467b72607dcb1621ef960dd2179c876b0993b988/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/467b72607dcb1621ef960dd2179c876b0993b988/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=467b72607dcb1621ef960dd2179c876b0993b988", "patch": "@@ -205,7 +205,6 @@ impl Path<'_> {\n #[derive(Debug, HashStable_Generic)]\n pub struct PathSegment<'hir> {\n     /// The identifier portion of this path segment.\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     // `id` and `res` are optional. We currently only use these in save-analysis,\n     // any path segments without these will not have save-analysis info and\n@@ -850,7 +849,6 @@ pub struct PatField<'hir> {\n     #[stable_hasher(ignore)]\n     pub hir_id: HirId,\n     /// The identifier for the field.\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     /// The pattern the field is destructured to.\n     pub pat: &'hir Pat<'hir>,\n@@ -2113,7 +2111,6 @@ pub const FN_OUTPUT_NAME: Symbol = sym::Output;\n #[derive(Debug, HashStable_Generic)]\n pub struct TypeBinding<'hir> {\n     pub hir_id: HirId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub gen_args: &'hir GenericArgs<'hir>,\n     pub kind: TypeBindingKind<'hir>,\n@@ -2501,7 +2498,6 @@ pub struct EnumDef<'hir> {\n #[derive(Debug, HashStable_Generic)]\n pub struct Variant<'hir> {\n     /// Name of the variant.\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     /// Id of the variant (not the constructor, see `VariantData::ctor_hir_id()`).\n     pub id: HirId,\n@@ -2591,7 +2587,6 @@ impl VisibilityKind<'_> {\n #[derive(Debug, HashStable_Generic)]\n pub struct FieldDef<'hir> {\n     pub span: Span,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub vis: Visibility<'hir>,\n     pub hir_id: HirId,\n@@ -2850,7 +2845,6 @@ impl ItemKind<'_> {\n #[derive(Encodable, Debug, HashStable_Generic)]\n pub struct TraitItemRef {\n     pub id: TraitItemId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub kind: AssocItemKind,\n     pub span: Span,\n@@ -2866,7 +2860,6 @@ pub struct TraitItemRef {\n #[derive(Debug, HashStable_Generic)]\n pub struct ImplItemRef {\n     pub id: ImplItemId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub kind: AssocItemKind,\n     pub span: Span,\n@@ -2905,7 +2898,6 @@ impl ForeignItemId {\n #[derive(Debug, HashStable_Generic)]\n pub struct ForeignItemRef {\n     pub id: ForeignItemId,\n-    #[stable_hasher(project(name))]\n     pub ident: Ident,\n     pub span: Span,\n }"}, {"sha": "14d6fc87198c4e1dc356de6bce87198ec4165960", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/467b72607dcb1621ef960dd2179c876b0993b988/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/467b72607dcb1621ef960dd2179c876b0993b988/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=467b72607dcb1621ef960dd2179c876b0993b988", "patch": "@@ -400,7 +400,7 @@ trait TraitAddUnsafeModifier {\n #[cfg(not(any(cfail1,cfail4)))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddUnsafeModifier {\n     #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n@@ -425,7 +425,7 @@ trait TraitAddExternModifier {\n #[cfg(not(any(cfail1,cfail4)))]\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddExternModifier {\n     #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]"}]}