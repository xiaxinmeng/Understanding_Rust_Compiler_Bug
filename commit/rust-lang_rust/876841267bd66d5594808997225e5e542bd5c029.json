{"sha": "876841267bd66d5594808997225e5e542bd5c029", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3Njg0MTI2N2JkNjZkNTU5NDgwODk5NzIyNWU1ZTU0MmJkNWMwMjk=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-01T10:55:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-01T10:55:22Z"}, "message": "Rollup merge of #55504 - ljedrz:simpler_repeated_elements, r=oli-obk\n\nUse vec![x; n] instead of iter::repeat(x).take(n).collect()\n\nIt's shorter and possibly easier to optimize.", "tree": {"sha": "c8a62a56bc0802ebef32fdc755e4e3d6bfdc5fb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8a62a56bc0802ebef32fdc755e4e3d6bfdc5fb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/876841267bd66d5594808997225e5e542bd5c029", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2tuaCRBK7hj4Ov3rIwAAdHIIAC0Tec7CRdp63cgYFallvdLQ\nnjhN5sekcBbABAFcUgKq28Z0RVTHEBZl59mFo2VG2sBN97WaVG3kBPUs0pjxbofT\nAT31F8dUKXOhoBf88Kq0dwMT/0HUSOCw6fXHTYB7hxvMAFcxjp9t4uQRPmZAP/EG\n/gtiMEkijDzG1O5tLUFyiZ38Ufz2uuNzeC38g9S875/z0QbUB9dzIEuilnnGcDQW\n+81acTJyhB/T6j7dfFDE51hAeRNWQHhvgS1BtIIK7y1zYfPaToULVCp4DWBYImjM\nRMN6IZDw5ZWRpROR/s2H3nQdcAM+q1EG+yYSC6opZoa7/EbZD757d6UYdfHZF6s=\n=flD9\n-----END PGP SIGNATURE-----\n", "payload": "tree c8a62a56bc0802ebef32fdc755e4e3d6bfdc5fb3\nparent 38435b1401f7f1ad010685911962ee56fafc16e8\nparent d1e74a3356b8e311aab171bf316560b2f3d7f5c8\nauthor Pietro Albini <pietro@pietroalbini.org> 1541069722 +0100\ncommitter GitHub <noreply@github.com> 1541069722 +0100\n\nRollup merge of #55504 - ljedrz:simpler_repeated_elements, r=oli-obk\n\nUse vec![x; n] instead of iter::repeat(x).take(n).collect()\n\nIt's shorter and possibly easier to optimize.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/876841267bd66d5594808997225e5e542bd5c029", "html_url": "https://github.com/rust-lang/rust/commit/876841267bd66d5594808997225e5e542bd5c029", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/876841267bd66d5594808997225e5e542bd5c029/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38435b1401f7f1ad010685911962ee56fafc16e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/38435b1401f7f1ad010685911962ee56fafc16e8", "html_url": "https://github.com/rust-lang/rust/commit/38435b1401f7f1ad010685911962ee56fafc16e8"}, {"sha": "d1e74a3356b8e311aab171bf316560b2f3d7f5c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e74a3356b8e311aab171bf316560b2f3d7f5c8", "html_url": "https://github.com/rust-lang/rust/commit/d1e74a3356b8e311aab171bf316560b2f3d7f5c8"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "61b5886e7832d86371236a28449ca2e2222c077a", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/876841267bd66d5594808997225e5e542bd5c029/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876841267bd66d5594808997225e5e542bd5c029/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=876841267bd66d5594808997225e5e542bd5c029", "patch": "@@ -295,12 +295,10 @@ impl AllocDecodingState {\n     }\n \n     pub fn new(data_offsets: Vec<u32>) -> AllocDecodingState {\n-        let decoding_state: Vec<_> = ::std::iter::repeat(Mutex::new(State::Empty))\n-            .take(data_offsets.len())\n-            .collect();\n+        let decoding_state = vec![Mutex::new(State::Empty); data_offsets.len()];\n \n         AllocDecodingState {\n-            decoding_state: decoding_state,\n+            decoding_state,\n             data_offsets,\n         }\n     }"}, {"sha": "b463faef1921ad966b24a97ac3b4e0494074d6c4", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/876841267bd66d5594808997225e5e542bd5c029/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876841267bd66d5594808997225e5e542bd5c029/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=876841267bd66d5594808997225e5e542bd5c029", "patch": "@@ -34,7 +34,6 @@ use hir::def_id::DefId;\n use infer::{self, InferCtxt};\n use infer::type_variable::TypeVariableOrigin;\n use std::fmt;\n-use std::iter;\n use syntax::ast;\n use session::DiagnosticMessageId;\n use ty::{self, AdtKind, ToPredicate, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n@@ -1095,10 +1094,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             // found arguments is empty (assume the user just wants to ignore args in this case).\n             // For example, if `expected_args_length` is 2, suggest `|_, _|`.\n             if found_args.is_empty() && is_closure {\n-                let underscores = iter::repeat(\"_\")\n-                                      .take(expected_args.len())\n-                                      .collect::<Vec<_>>()\n-                                      .join(\", \");\n+                let underscores = vec![\"_\"; expected_args.len()].join(\", \");\n                 err.span_suggestion_with_applicability(\n                     found_span,\n                     &format!("}]}