{"sha": "38612f5ec7a464709f2dabde4edb843695ec84b2", "node_id": "C_kwDOAAsO6NoAKDM4NjEyZjVlYzdhNDY0NzA5ZjJkYWJkZTRlZGI4NDM2OTVlYzg0YjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-26T18:40:10Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-09T17:59:35Z"}, "message": "Explicitly skip arguments.", "tree": {"sha": "1652b8c13e14fd1ab48e2d6ac259675ad6277960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1652b8c13e14fd1ab48e2d6ac259675ad6277960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38612f5ec7a464709f2dabde4edb843695ec84b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38612f5ec7a464709f2dabde4edb843695ec84b2", "html_url": "https://github.com/rust-lang/rust/commit/38612f5ec7a464709f2dabde4edb843695ec84b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38612f5ec7a464709f2dabde4edb843695ec84b2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c43b61b870add2daddbd8e480477e5a8aa409c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c43b61b870add2daddbd8e480477e5a8aa409c2", "html_url": "https://github.com/rust-lang/rust/commit/3c43b61b870add2daddbd8e480477e5a8aa409c2"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "463ce083a64fd643cf2797d44383daeb846caabc", "filename": "compiler/rustc_mir_dataflow/src/impls/storage_liveness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38612f5ec7a464709f2dabde4edb843695ec84b2/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fstorage_liveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38612f5ec7a464709f2dabde4edb843695ec84b2/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fstorage_liveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fstorage_liveness.rs?ref=38612f5ec7a464709f2dabde4edb843695ec84b2", "patch": "@@ -97,6 +97,7 @@ impl<'tcx> crate::AnalysisDomain<'tcx> for MaybeStorageDead {\n \n     fn initialize_start_block(&self, body: &mir::Body<'tcx>, on_entry: &mut Self::Domain) {\n         assert_eq!(body.local_decls.len(), self.always_live_locals.domain_size());\n+        // Do not iterate on return place and args, as they are trivially always live.\n         for local in body.vars_and_temps_iter() {\n             if !self.always_live_locals.contains(local) {\n                 on_entry.insert(local);"}]}