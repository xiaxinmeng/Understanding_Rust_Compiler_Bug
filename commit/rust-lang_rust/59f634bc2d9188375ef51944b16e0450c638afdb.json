{"sha": "59f634bc2d9188375ef51944b16e0450c638afdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZjYzNGJjMmQ5MTg4Mzc1ZWY1MTk0NGIxNmUwNDUwYzYzOGFmZGI=", "commit": {"author": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-07-07T23:08:04Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-07-09T14:00:21Z"}, "message": "Update comments", "tree": {"sha": "4c3d0a8da05f0339a9e86af1e68e8e85a5c68c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c3d0a8da05f0339a9e86af1e68e8e85a5c68c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59f634bc2d9188375ef51944b16e0450c638afdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59f634bc2d9188375ef51944b16e0450c638afdb", "html_url": "https://github.com/rust-lang/rust/commit/59f634bc2d9188375ef51944b16e0450c638afdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59f634bc2d9188375ef51944b16e0450c638afdb/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81b062ae889c6f0b156cb8eac1a0dcb97d1ed4bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/81b062ae889c6f0b156cb8eac1a0dcb97d1ed4bc", "html_url": "https://github.com/rust-lang/rust/commit/81b062ae889c6f0b156cb8eac1a0dcb97d1ed4bc"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "11638720e8d2b60e568a892c38fd9f95a1d769e8", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/59f634bc2d9188375ef51944b16e0450c638afdb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59f634bc2d9188375ef51944b16e0450c638afdb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=59f634bc2d9188375ef51944b16e0450c638afdb", "patch": "@@ -616,7 +616,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         reasons\n     }\n \n-    /// Returns true if migration is needed for trait for the provided var_hir_id\n+    /// Returns a tuple that contains the hir_id pointing to the use that resulted in the\n+    /// corresponding place being captured and a String which contains the captured value's name\n+    /// (i.e: a.b.c) if migration is needed for trait for the provided var_hir_id, otherwise returns None\n     fn need_2229_migrations_for_trait(\n         &self,\n         min_captures: Option<&ty::RootVariableMinCaptureList<'tcx>>,\n@@ -693,12 +695,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// captured by the closure when `capture_disjoint_fields` is enabled and auto-traits\n     /// differ between the root variable and the captured paths.\n     ///\n-    /// The output list would include a root variable if:\n-    /// - It would have been captured into the closure when `capture_disjoint_fields` wasn't\n-    ///   enabled, **and**\n-    /// - It wasn't completely captured by the closure, **and**\n-    /// - One of the paths captured does not implement all the auto-traits its root variable\n-    ///   implements.\n+    /// Returns a tuple containing a HashSet of traits that not implemented by the captured fields\n+    /// of a root variables that has the provided var_hir_id and a HashSet of tuples that contains\n+    /// the hir_id pointing to the use that resulted in the corresponding place being captured and\n+    /// a String which contains the captured value's name (i.e: a.b.c) if migration is needed for\n+    /// trait for the provided var_hir_id, otherwise returns None\n     fn compute_2229_migrations_for_trait(\n         &self,\n         min_captures: Option<&ty::RootVariableMinCaptureList<'tcx>>,\n@@ -788,8 +789,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// - It wasn't completely captured by the closure, **and**\n     /// - One of the paths starting at this root variable, that is not captured needs Drop.\n     ///\n-    /// This function only returns true for significant drops. A type is considerent to have a\n-    /// significant drop if it's Drop implementation is not annotated by `rustc_insignificant_dtor`.\n+    /// This function only returns a HashSet of tuples for significant drops. The returned HashSet\n+    /// of tuples contains  the hir_id pointing to the use that resulted in the corresponding place\n+    /// being captured anda String which contains the captured value's name (i.e: a.b.c)\n     fn compute_2229_migrations_for_drop(\n         &self,\n         closure_def_id: DefId,\n@@ -871,8 +873,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// - One of the paths captured does not implement all the auto-traits its root variable\n     ///   implements.\n     ///\n-    /// Returns a tuple containing a vector of HirIds as well as a String containing the reason\n-    /// why root variables whose HirId is contained in the vector should be fully captured.\n+    /// Returns a tuple containing a vector of tuples of HirIds and a HashSet of tuples that contains\n+    /// the hir_id pointing to the use that resulted in the corresponding place being captured and\n+    /// a String which contains the captured value's name (i.e: a.b.c), as well as a String\n+    /// containing the reason why root variables whose HirId is contained in the vector should\n     fn compute_2229_migrations(\n         &self,\n         closure_def_id: DefId,"}]}