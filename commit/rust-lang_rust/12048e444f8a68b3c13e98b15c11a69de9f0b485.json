{"sha": "12048e444f8a68b3c13e98b15c11a69de9f0b485", "node_id": "C_kwDOAAsO6NoAKDEyMDQ4ZTQ0NGY4YTY4YjNjMTNlOThiMTVjMTFhNjlkZTlmMGI0ODU", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-01-30T18:46:53Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-03-01T05:13:11Z"}, "message": "fallback to dir_path when relative external mod resolution fails\n\nWe only want to fall back if two conditions are met:\n\n1) Initial module resolution is performed relative to some nested\n   directory.\n2) Module resolution fails because of a ModError::FileNotFound error.\n\nWhen these conditions are met we can try to fallback to searching for\nthe module's file relative to the dir_path instead of the nested\nrelative directory.\n\nFixes 5198\n\nAs demonstrated by 5198, it's possible that a directory name conflicts\nwith a rust file name. For example, src/lib/ and src/lib.rs.\n\nIf src/lib.rs references an external module like ``mod foo;``, then\nmodule resolution will try to resolve ``foo`` to src/lib/foo.rs or\nsrc/lib/foo/mod.rs. Module resolution would fail with a file not\nfound error if the ``foo`` module were defined at src/foo.rs.\n\nWhen encountering these kinds of module resolution issues we now fall\nback to the current directory and attempt to resolve the module again.\n\nGiven the current example, this means that if we can't find the module\n``foo`` at src/lib/foo.rs or src/lib/foo/mod.rs, we'll attempt\nto resolve the module to src/foo.rs.", "tree": {"sha": "d348dafe40ed35d3fcd63c9e72f97be5f06b327c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d348dafe40ed35d3fcd63c9e72f97be5f06b327c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12048e444f8a68b3c13e98b15c11a69de9f0b485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12048e444f8a68b3c13e98b15c11a69de9f0b485", "html_url": "https://github.com/rust-lang/rust/commit/12048e444f8a68b3c13e98b15c11a69de9f0b485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12048e444f8a68b3c13e98b15c11a69de9f0b485/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89ca3f3a100456d652b156b1a62b8e244e526c4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89ca3f3a100456d652b156b1a62b8e244e526c4e", "html_url": "https://github.com/rust-lang/rust/commit/89ca3f3a100456d652b156b1a62b8e244e526c4e"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "fb9182152d1da048da76a54809ab7f3553501bbe", "filename": "src/parse/session.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -12,6 +12,7 @@ use rustc_span::{\n \n use crate::config::file_lines::LineRange;\n use crate::ignore_path::IgnorePathSet;\n+use crate::parse::parser::{ModError, ModulePathSuccess};\n use crate::source_map::LineRangeUtils;\n use crate::utils::starts_with_newline;\n use crate::visitor::SnippetProvider;\n@@ -145,13 +146,30 @@ impl ParseSess {\n         })\n     }\n \n+    /// Determine the submodule path for the given module identifier.\n+    ///\n+    /// * `id` - The name of the module\n+    /// * `relative` - If Some(symbol), the symbol name is a directory relative to the dir_path.\n+    ///   If relative is Some, resolve the submodle at {dir_path}/{symbol}/{id}.rs\n+    ///   or {dir_path}/{symbol}/{id}/mod.rs. if None, resolve the module at {dir_path}/{id}.rs.\n+    /// *  `dir_path` - Module resolution will occur relative to this direcotry.\n     pub(crate) fn default_submod_path(\n         &self,\n         id: symbol::Ident,\n         relative: Option<symbol::Ident>,\n         dir_path: &Path,\n-    ) -> Result<rustc_expand::module::ModulePathSuccess, rustc_expand::module::ModError<'_>> {\n-        rustc_expand::module::default_submod_path(&self.parse_sess, id, relative, dir_path)\n+    ) -> Result<ModulePathSuccess, ModError<'_>> {\n+        rustc_expand::module::default_submod_path(&self.parse_sess, id, relative, dir_path).or_else(\n+            |e| {\n+                // If resloving a module relative to {dir_path}/{symbol} fails because a file\n+                // could not be found, then try to resolve the module relative to {dir_path}.\n+                if matches!(e, ModError::FileNotFound(..)) && relative.is_some() {\n+                    rustc_expand::module::default_submod_path(&self.parse_sess, id, None, dir_path)\n+                } else {\n+                    Err(e)\n+                }\n+            },\n+        )\n     }\n \n     pub(crate) fn is_file_parsed(&self, path: &Path) -> bool {"}, {"sha": "aacb2acc684986b3d6b0ceae263a19468a22b99e", "filename": "src/test/mod_resolver.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/src%2Ftest%2Fmod_resolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/src%2Ftest%2Fmod_resolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod_resolver.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -64,3 +64,19 @@ fn fmt_out_of_line_test_modules() {\n         ],\n     )\n }\n+\n+#[test]\n+fn fallback_and_try_to_resolve_external_submod_relative_to_current_dir_path() {\n+    // See also https://github.com/rust-lang/rustfmt/issues/5198\n+    verify_mod_resolution(\n+        \"tests/mod-resolver/issue-5198/lib.rs\",\n+        &[\n+            \"tests/mod-resolver/issue-5198/a.rs\",\n+            \"tests/mod-resolver/issue-5198/lib/b.rs\",\n+            \"tests/mod-resolver/issue-5198/lib/c/mod.rs\",\n+            \"tests/mod-resolver/issue-5198/lib/c/e.rs\",\n+            \"tests/mod-resolver/issue-5198/lib/c/d/f.rs\",\n+            \"tests/mod-resolver/issue-5198/lib/c/d/g/mod.rs\",\n+        ],\n+    )\n+}"}, {"sha": "cd686f5611690cfd925f399d03360647a4325b11", "filename": "tests/mod-resolver/issue-5198/a.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Fa.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1 @@\n+fn main(        ) {   println!(\"Hello World!\")                         }"}, {"sha": "696832913c87931a0548feedac66a7ef85466280", "filename": "tests/mod-resolver/issue-5198/lib.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1,3 @@\n+mod a;\n+mod b;\n+mod c;"}, {"sha": "cd686f5611690cfd925f399d03360647a4325b11", "filename": "tests/mod-resolver/issue-5198/lib/b.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fb.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1 @@\n+fn main(        ) {   println!(\"Hello World!\")                         }"}, {"sha": "d1604aa23a3cbbb4b4593048ca177187d78009fe", "filename": "tests/mod-resolver/issue-5198/lib/c/d.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1,3 @@\n+mod e;\n+mod f;\n+mod g;"}, {"sha": "92c9e3021431f84d78a57e0f2838c145f173a78d", "filename": "tests/mod-resolver/issue-5198/lib/c/d/explanation.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fexplanation.txt", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fexplanation.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fexplanation.txt?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1,16 @@\n+This file is contained in the './lib/c/d/' directory.\n+\n+The directory name './lib/c/d/' conflicts with the './lib/c/d.rs' file name.\n+\n+'./lib/c/d.rs' defines 3 external modules:\n+\n+    * mod e;\n+    * mod f;\n+    * mod g;\n+\n+Module resolution will fail if we look for './lib/c/d/e.rs' or './lib/c/d/e/mod.rs',\n+so we should fall back to looking for './lib/c/e.rs', which correctly finds the modlue, that\n+rustfmt should format.\n+\n+'./lib/c/d/f.rs' and './lib/c/d/g/mod.rs' exist at the default submodule paths so we should be able\n+to resolve these modules with no problems.\n\\ No newline at end of file"}, {"sha": "cd686f5611690cfd925f399d03360647a4325b11", "filename": "tests/mod-resolver/issue-5198/lib/c/d/f.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Ff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Ff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Ff.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1 @@\n+fn main(        ) {   println!(\"Hello World!\")                         }"}, {"sha": "cd686f5611690cfd925f399d03360647a4325b11", "filename": "tests/mod-resolver/issue-5198/lib/c/d/g/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fg%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fg%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fd%2Fg%2Fmod.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1 @@\n+fn main(        ) {   println!(\"Hello World!\")                         }"}, {"sha": "cd686f5611690cfd925f399d03360647a4325b11", "filename": "tests/mod-resolver/issue-5198/lib/c/e.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fe.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1 @@\n+fn main(        ) {   println!(\"Hello World!\")                         }"}, {"sha": "81904619650f9017626f96c488ffaf52f590b248", "filename": "tests/mod-resolver/issue-5198/lib/c/mod.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fc%2Fmod.rs?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1,3 @@\n+mod d;\n+\n+fn main(        ) {   println!(\"Hello World!\")                         }"}, {"sha": "d436a8076cd717accfd288772ca1c2d4e46c41fe", "filename": "tests/mod-resolver/issue-5198/lib/explanation.txt", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fexplanation.txt", "raw_url": "https://github.com/rust-lang/rust/raw/12048e444f8a68b3c13e98b15c11a69de9f0b485/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fexplanation.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmod-resolver%2Fissue-5198%2Flib%2Fexplanation.txt?ref=12048e444f8a68b3c13e98b15c11a69de9f0b485", "patch": "@@ -0,0 +1,16 @@\n+This file is contained in the './lib' directory.\n+\n+The directory name './lib' conflicts with the './lib.rs' file name.\n+\n+'lib.rs' defines 3 external modules:\n+\n+    * mod a;\n+    * mod b;\n+    * mod c;\n+\n+Module resolution will fail if we look for './lib/a.rs' or './lib/a/mod.rs',\n+so we should fall back to looking for './a.rs', which correctly finds the modlue that\n+rustfmt should format.\n+\n+'./lib/b.rs' and './lib/c/mod.rs' exist at the default submodule paths so we should be able\n+to resolve these modules with no problems."}]}