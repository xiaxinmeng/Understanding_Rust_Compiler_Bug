{"sha": "c3eb9907165036cc25094e9107fbe902330d636c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZWI5OTA3MTY1MDM2Y2MyNTA5NGU5MTA3ZmJlOTAyMzMwZDYzNmM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-07T06:51:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-07T06:51:30Z"}, "message": "Rollup merge of #49728 - japaric:no-debug_gdb_scripts, r=alexcrichton\n\nadd emit_debug_gdb_scripts target option and ..\n\nset it to false for no-std targets like ARM Cortex-M and MSP430. For the rationale of this change see the comment in thumb_base.rs\n\nthis is a temporary workaround until #44993 is implemented\n\nr? @alexcrichton or @michaelwoerister", "tree": {"sha": "052da9e1f94c48e7cf8511cf5e39db496f026a0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/052da9e1f94c48e7cf8511cf5e39db496f026a0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3eb9907165036cc25094e9107fbe902330d636c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJayGpyCRBK7hj4Ov3rIwAAdHIIADTsvDBulMWYODBXpSyktAmi\nvjJjEbAi6APo9U70/nkGx7BpL4B04cYZIm27/2zIi5tNGyDQkHcimoOCdyLZpb/b\nkUZ4oHEMyVGp8vCt4csdi9kqy7nKGFCj8wSna00m8x5HbArZJhAZg6RU3zYS4HdF\nB39Bil1Fi2gqp7XLs5Cu7CtNcLPSGc17Rqfiun7CN7EuuTf4M7pjg5eoQY4xMqUE\nVMaEn05LfmQ2KI6KtH037jSTZRY1f2IkfTSOEWKfBVK9OAh34A9vMdOXP9ShmNNe\n58Fq6Yr5Nfr/xdpOQ6SCtatDiARJdXJeg8G87c976geA1ln/gt2uyrwRswEzIko=\n=ghvP\n-----END PGP SIGNATURE-----\n", "payload": "tree 052da9e1f94c48e7cf8511cf5e39db496f026a0b\nparent 496f02677525ce2f779af17057959eadb0b1ac6a\nparent 1eed662fc4f066ac97eb12bb88008c7eae957d6a\nauthor kennytm <kennytm@gmail.com> 1523083890 +0800\ncommitter GitHub <noreply@github.com> 1523083890 +0800\n\nRollup merge of #49728 - japaric:no-debug_gdb_scripts, r=alexcrichton\n\nadd emit_debug_gdb_scripts target option and ..\n\nset it to false for no-std targets like ARM Cortex-M and MSP430. For the rationale of this change see the comment in thumb_base.rs\n\nthis is a temporary workaround until #44993 is implemented\n\nr? @alexcrichton or @michaelwoerister\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3eb9907165036cc25094e9107fbe902330d636c", "html_url": "https://github.com/rust-lang/rust/commit/c3eb9907165036cc25094e9107fbe902330d636c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3eb9907165036cc25094e9107fbe902330d636c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "496f02677525ce2f779af17057959eadb0b1ac6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/496f02677525ce2f779af17057959eadb0b1ac6a", "html_url": "https://github.com/rust-lang/rust/commit/496f02677525ce2f779af17057959eadb0b1ac6a"}, {"sha": "1eed662fc4f066ac97eb12bb88008c7eae957d6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eed662fc4f066ac97eb12bb88008c7eae957d6a", "html_url": "https://github.com/rust-lang/rust/commit/1eed662fc4f066ac97eb12bb88008c7eae957d6a"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "480de9ff486e5d1e1af6864c3f0a2c0f8d0499bd", "filename": "src/librustc_back/target/apple_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -47,6 +47,7 @@ pub fn opts() -> TargetOptions {\n         exe_allocation_crate: super::maybe_jemalloc(),\n         has_elf_tls: version >= (10, 7),\n         abi_return_struct_as_int: true,\n+        emit_debug_gdb_scripts: false,\n         .. Default::default()\n     }\n }"}, {"sha": "592b27ac641b5204d2af6ec4a16cce4d625e938c", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -478,6 +478,9 @@ pub struct TargetOptions {\n \n     /// Whether or not bitcode is embedded in object files\n     pub embed_bitcode: bool,\n+\n+    /// Whether a .debug_gdb_scripts section will be added to the output object file\n+    pub emit_debug_gdb_scripts: bool,\n }\n \n impl Default for TargetOptions {\n@@ -550,6 +553,7 @@ impl Default for TargetOptions {\n             codegen_backend: \"llvm\".to_string(),\n             default_hidden_visibility: false,\n             embed_bitcode: false,\n+            emit_debug_gdb_scripts: true,\n         }\n     }\n }\n@@ -799,6 +803,7 @@ impl Target {\n         key!(codegen_backend);\n         key!(default_hidden_visibility, bool);\n         key!(embed_bitcode, bool);\n+        key!(emit_debug_gdb_scripts, bool);\n \n         if let Some(array) = obj.find(\"abi-blacklist\").and_then(Json::as_array) {\n             for name in array.iter().filter_map(|abi| abi.as_string()) {\n@@ -1002,6 +1007,7 @@ impl ToJson for Target {\n         target_option_val!(codegen_backend);\n         target_option_val!(default_hidden_visibility);\n         target_option_val!(embed_bitcode);\n+        target_option_val!(emit_debug_gdb_scripts);\n \n         if default.abi_blacklist != self.options.abi_blacklist {\n             d.insert(\"abi-blacklist\".to_string(), self.options.abi_blacklist.iter()"}, {"sha": "31df9be0bc3f81e7b92f677a5bffa0e6d53f4538", "filename": "src/librustc_back/target/msp430_none_elf.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -59,6 +59,9 @@ pub fn target() -> TargetResult {\n             // too much overhead for such small target.\n             trap_unreachable: false,\n \n+            // See the thumb_base.rs file for an explanation of this value\n+            emit_debug_gdb_scripts: false,\n+\n             .. Default::default( )\n         }\n     })"}, {"sha": "bb1fbfad2618f17291ce9fe694b86d7faa3b9699", "filename": "src/librustc_back/target/thumb_base.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -53,6 +53,13 @@ pub fn opts() -> TargetOptions {\n         // costs it involves.\n         relocation_model: \"static\".to_string(),\n         abi_blacklist: super::arm_base::abi_blacklist(),\n+        // When this section is added a volatile load to its start address is also generated. This\n+        // volatile load is a footgun as it can end up loading an invalid memory address, depending\n+        // on how the user set up their linker scripts. This section adds pretty printer for stuff\n+        // like std::Vec, which is not that used in no-std context, so it's best to left it out\n+        // until we figure a way to add the pretty printers without requiring a volatile load cf.\n+        // rust-lang/rust#44993.\n+        emit_debug_gdb_scripts: false,\n         .. Default::default()\n     }\n }"}, {"sha": "971b21e062f69415d858743eff0d3187cb86f993", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -102,6 +102,7 @@ pub fn opts() -> TargetOptions {\n         ],\n         custom_unwind_resume: true,\n         abi_return_struct_as_int: true,\n+        emit_debug_gdb_scripts: false,\n \n         .. Default::default()\n     }"}, {"sha": "06e879bec3492310184cce57472dfef0e0b2e535", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -34,6 +34,7 @@ pub fn opts() -> TargetOptions {\n         crt_static_allows_dylibs: true,\n         crt_static_respected: true,\n         abi_return_struct_as_int: true,\n+        emit_debug_gdb_scripts: false,\n \n         .. Default::default()\n     }"}, {"sha": "0b4858c7ab051085350c48fa95fa01d0e05fd5c3", "filename": "src/librustc_trans/debuginfo/gdb.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3eb9907165036cc25094e9107fbe902330d636c/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs?ref=c3eb9907165036cc25094e9107fbe902330d636c", "patch": "@@ -83,7 +83,6 @@ pub fn needs_gdb_debug_scripts_section(cx: &CodegenCx) -> bool {\n                             \"omit_gdb_pretty_printer_section\");\n \n     !omit_gdb_pretty_printer_section &&\n-    !cx.sess().target.target.options.is_like_osx &&\n-    !cx.sess().target.target.options.is_like_windows &&\n-    cx.sess().opts.debuginfo != NoDebugInfo\n+    cx.sess().opts.debuginfo != NoDebugInfo &&\n+    cx.sess().target.target.options.emit_debug_gdb_scripts\n }"}]}