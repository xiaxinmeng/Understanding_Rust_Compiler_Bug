{"sha": "88a0204fcb6608862834f8b2c898168881fd3b9e", "node_id": "C_kwDOAAsO6NoAKDg4YTAyMDRmY2I2NjA4ODYyODM0ZjhiMmM4OTgxNjg4ODFmZDNiOWU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-05-07T05:12:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-07T05:12:16Z"}, "message": "Rollup merge of #111300 - Flying-Toast:while_true_span_condition, r=compiler-errors\n\nEmit while_true lint spanning the entire loop condition\n\nThe lint that suggests `loop {}` instead of `while true {}` has functionality to 'pierce' parenthesis in cases like `while (true) {}`. In these cases, the emitted span only went to the hi of the `true` itself, not spanning the entire loop condition.\n\nBefore:\n```\nwarning: denote infinite loops with `loop { ... }`\n --> /tmp/foobar.rs:2:5\n  |\n2 |     while ((((((true)))))) {}\n  |     ^^^^^^^^^^^^^^^^ help: use `loop`\n  |\n  = note: `#[warn(while_true)]` on by default\n```\n\nAfter:\n```\nwarning: denote infinite loops with `loop { ... }`\n --> /tmp/foobar.rs:2:5\n  |\n2 |     while ((((((true)))))) {}\n  |     ^^^^^^^^^^^^^^^^^^^^^^ help: use `loop`\n  |\n  = note: `#[warn(while_true)]` on by default\n```\n\nThis is especially a problem for rustfix.", "tree": {"sha": "22553152ecb89dd83731eaf620ccaa9b28f965eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22553152ecb89dd83731eaf620ccaa9b28f965eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88a0204fcb6608862834f8b2c898168881fd3b9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkVzMwCRBK7hj4Ov3rIwAA7EIIACiB6YDIX4KWJCR1prB3RYWl\n2NlvJ7I4WjVORBYfRkn2KprK6oXJZoLBjEvRWt6JmSomAjx2DEOdNI9IXyB4hUGx\njXIq1ysD7d/3QcE/qUMNaqLVo6J0W2noy4RTBzkMOP05x3VGFlRnlKJKMCdQCKQI\nosYuCp9t+pNt36UPoc4EGmswXobzAFVm7sBsmfhjBjTEHvGIBbykhDeobq2+CJ/F\nuF55/8ilVc5DkFwKMJReAFrnugNBTbIxD0PT+nIibwUP+UgHNNpm0NcvCpvaRbKP\n5dOGjPpkqnWQJn6hXe+izQegxUUbsbtDJkXdENqjvAq9kTwlhrzOVYln1uJVgrY=\n=Pjie\n-----END PGP SIGNATURE-----\n", "payload": "tree 22553152ecb89dd83731eaf620ccaa9b28f965eb\nparent 4e4e5bf17d6f7ed6876b4172a634d61c86e02e8c\nparent faa797e7e7bd75fd7dfd5a08fe8cf7bf82e02fd8\nauthor Yuki Okushi <jtitor@2k36.org> 1683436336 +0900\ncommitter GitHub <noreply@github.com> 1683436336 +0900\n\nRollup merge of #111300 - Flying-Toast:while_true_span_condition, r=compiler-errors\n\nEmit while_true lint spanning the entire loop condition\n\nThe lint that suggests `loop {}` instead of `while true {}` has functionality to 'pierce' parenthesis in cases like `while (true) {}`. In these cases, the emitted span only went to the hi of the `true` itself, not spanning the entire loop condition.\n\nBefore:\n```\nwarning: denote infinite loops with `loop { ... }`\n --> /tmp/foobar.rs:2:5\n  |\n2 |     while ((((((true)))))) {}\n  |     ^^^^^^^^^^^^^^^^ help: use `loop`\n  |\n  = note: `#[warn(while_true)]` on by default\n```\n\nAfter:\n```\nwarning: denote infinite loops with `loop { ... }`\n --> /tmp/foobar.rs:2:5\n  |\n2 |     while ((((((true)))))) {}\n  |     ^^^^^^^^^^^^^^^^^^^^^^ help: use `loop`\n  |\n  = note: `#[warn(while_true)]` on by default\n```\n\nThis is especially a problem for rustfix.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88a0204fcb6608862834f8b2c898168881fd3b9e", "html_url": "https://github.com/rust-lang/rust/commit/88a0204fcb6608862834f8b2c898168881fd3b9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88a0204fcb6608862834f8b2c898168881fd3b9e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e4e5bf17d6f7ed6876b4172a634d61c86e02e8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4e5bf17d6f7ed6876b4172a634d61c86e02e8c", "html_url": "https://github.com/rust-lang/rust/commit/4e4e5bf17d6f7ed6876b4172a634d61c86e02e8c"}, {"sha": "faa797e7e7bd75fd7dfd5a08fe8cf7bf82e02fd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/faa797e7e7bd75fd7dfd5a08fe8cf7bf82e02fd8", "html_url": "https://github.com/rust-lang/rust/commit/faa797e7e7bd75fd7dfd5a08fe8cf7bf82e02fd8"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "0b7a704eb57dbbbcb56dc3ac074f425c71695b59", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/88a0204fcb6608862834f8b2c898168881fd3b9e/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88a0204fcb6608862834f8b2c898168881fd3b9e/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=88a0204fcb6608862834f8b2c898168881fd3b9e", "patch": "@@ -117,8 +117,7 @@ impl EarlyLintPass for WhileTrue {\n     #[inline]\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &ast::Expr) {\n         if let ast::ExprKind::While(cond, _, label) = &e.kind\n-            && let cond = pierce_parens(cond)\n-            && let ast::ExprKind::Lit(token_lit) = cond.kind\n+            && let ast::ExprKind::Lit(token_lit) = pierce_parens(cond).kind\n             && let token::Lit { kind: token::Bool, symbol: kw::True, .. } = token_lit\n             && !cond.span.from_expansion()\n         {"}]}