{"sha": "77e0235983ba3ad16f99123604dbbd1401ba8d6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZTAyMzU5ODNiYTNhZDE2Zjk5MTIzNjA0ZGJiZDE0MDFiYThkNmM=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-11-04T21:34:07Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-11-05T04:53:11Z"}, "message": "Add tests for variadic foreign functions.", "tree": {"sha": "67830b270489f1d4bfbeb3cf64a429837832a906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67830b270489f1d4bfbeb3cf64a429837832a906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e0235983ba3ad16f99123604dbbd1401ba8d6c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e0235983ba3ad16f99123604dbbd1401ba8d6c", "html_url": "https://github.com/rust-lang/rust/commit/77e0235983ba3ad16f99123604dbbd1401ba8d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e0235983ba3ad16f99123604dbbd1401ba8d6c/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c669ccf3d30da3eb505832d0872bf03607eb98eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c669ccf3d30da3eb505832d0872bf03607eb98eb", "html_url": "https://github.com/rust-lang/rust/commit/c669ccf3d30da3eb505832d0872bf03607eb98eb"}], "stats": {"total": 170, "additions": 170, "deletions": 0}, "files": [{"sha": "93f702d8052de88f263d36419f296201ef7ac0d8", "filename": "src/test/compile-fail/variadic-ffi-1.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-1.rs?ref=77e0235983ba3ad16f99123604dbbd1401ba8d6c", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern {\n+    fn printf(...); //~ ERROR: variadic function must be declared with at least one named argument\n+    fn printf(..., foo: int); //~ ERROR: `...` must be last in argument list for variadic function\n+}\n+\n+fn main() {}"}, {"sha": "9e2b015f33d96e4c91c2dcda4314a0ca9ee139e8", "filename": "src/test/compile-fail/variadic-ffi-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-2.rs?ref=77e0235983ba3ad16f99123604dbbd1401ba8d6c", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn baz(f: extern \"stdcall\" fn(uint, ...)) {\n+    //~^ ERROR: variadic function must have C calling convention\n+    f(22, 44);\n+}\n+\n+fn main() {}"}, {"sha": "f143e715450ff33e152c859830540b0dc3fa3afb", "filename": "src/test/compile-fail/variadic-ffi-3.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs?ref=77e0235983ba3ad16f99123604dbbd1401ba8d6c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo(x: int, ...) {\n+    //~^ ERROR: only foreign functions are allowed to be variadic\n+}\n+\n+fn main() {}"}, {"sha": "d4c54dfffe0a36221544ca38114737f429c7c063", "filename": "src/test/compile-fail/variadic-ffi-4.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-4.rs?ref=77e0235983ba3ad16f99123604dbbd1401ba8d6c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern \"C\" fn foo(x: int, ...) {\n+    //~^ ERROR: only foreign functions are allowed to be variadic\n+}\n+\n+fn main() {}"}, {"sha": "4133f008cbfbab617ee792946bad394686aead10", "filename": "src/test/compile-fail/variadic-ffi.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi.rs?ref=77e0235983ba3ad16f99123604dbbd1401ba8d6c", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern \"stdcall\" {\n+    fn printf(_: *u8, ...); //~ ERROR: variadic function must have C calling convention\n+}\n+\n+extern {\n+    fn foo(f: int, x: u8, ...);\n+}\n+\n+extern \"C\" fn bar(f: int, x: u8) {}\n+\n+#[fixed_stack_segment]\n+fn main() {\n+    unsafe {\n+        foo(); //~ ERROR: this function takes at least 2 parameters but 0 parameters were supplied\n+        foo(1); //~ ERROR: this function takes at least 2 parameters but 1 parameter was supplied\n+\n+        let x: extern \"C\" unsafe fn(f: int, x: u8) = foo;\n+        //~^ ERROR: mismatched types: expected `extern \"C\" unsafe fn(int, u8)` but found `extern \"C\" unsafe fn(int, u8, ...)` (expected non-variadic fn but found variadic function)\n+\n+        let y: extern \"C\" unsafe fn(f: int, x: u8, ...) = bar;\n+        //~^ ERROR: mismatched types: expected `extern \"C\" unsafe fn(int, u8, ...)` but found `extern \"C\" extern fn(int, u8)` (expected variadic fn but found non-variadic function)\n+\n+        foo(1, 2, 3f32); //~ ERROR: can't pass an f32 to variadic function, cast to c_double\n+        foo(1, 2, true); //~ ERROR: can't pass bool to variadic function, cast to c_int\n+        foo(1, 2, 1i8); //~ ERROR: can't pass i8 to variadic function, cast to c_int\n+        foo(1, 2, 1u8); //~ ERROR: can't pass u8 to variadic function, cast to c_uint\n+        foo(1, 2, 1i16); //~ ERROR: can't pass i16 to variadic function, cast to c_int\n+        foo(1, 2, 1u16); //~ ERROR: can't pass u16 to variadic function, cast to c_uint\n+    }\n+}"}, {"sha": "6f8867afef324f079222c568ac3a2a1f1ccd9ca2", "filename": "src/test/run-pass/variadic-ffi.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e0235983ba3ad16f99123604dbbd1401ba8d6c/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs?ref=77e0235983ba3ad16f99123604dbbd1401ba8d6c", "patch": "@@ -0,0 +1,68 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::c_str::CString;\n+use std::libc::{c_char, c_int};\n+\n+extern {\n+    fn sprintf(s: *mut c_char, format: *c_char, ...) -> c_int;\n+}\n+\n+unsafe fn check<T>(expected: &str, f: &fn(*mut c_char) -> T) {\n+    let mut x = [0i8, ..50];\n+    f(&mut x[0] as *mut c_char);\n+    let res = CString::new(&x[0], false);\n+    assert_eq!(expected, res.as_str().unwrap());\n+}\n+\n+#[fixed_stack_segment]\n+pub fn main() {\n+\n+    unsafe {\n+        // Call with just the named parameter\n+        do \"Hello World\\n\".with_c_str |c| {\n+            check(\"Hello World\\n\", |s| sprintf(s, c));\n+        }\n+\n+        // Call with variable number of arguments\n+        do \"%d %f %c %s\\n\".with_c_str |c| {\n+            do check(\"42 42.500000 a %d %f %c %s\\n\\n\") |s| {\n+                sprintf(s, c, 42i, 42.5f64, 'a' as c_int, c);\n+            }\n+        }\n+\n+        // Make a function pointer\n+        let x: extern \"C\" unsafe fn(*mut c_char, *c_char, ...) -> c_int = sprintf;\n+\n+        // A function that takes a function pointer\n+        unsafe fn call(p: extern \"C\" unsafe fn(*mut c_char, *c_char, ...) -> c_int) {\n+            #[fixed_stack_segment];\n+\n+            // Call with just the named parameter via fn pointer\n+            do \"Hello World\\n\".with_c_str |c| {\n+                check(\"Hello World\\n\", |s| p(s, c));\n+            }\n+\n+            // Call with variable number of arguments\n+            do \"%d %f %c %s\\n\".with_c_str |c| {\n+                do check(\"42 42.500000 a %d %f %c %s\\n\\n\") |s| {\n+                    p(s, c, 42i, 42.5f64, 'a' as c_int, c);\n+                }\n+            }\n+        }\n+\n+        // Pass sprintf directly\n+        call(sprintf);\n+\n+        // Pass sprintf indirectly\n+        call(x);\n+    }\n+\n+}"}]}