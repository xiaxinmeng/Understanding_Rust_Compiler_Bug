{"sha": "657499df644c15546c3c9fd0635d4886d47e6cdf", "node_id": "C_kwDOAAsO6NoAKDY1NzQ5OWRmNjQ0YzE1NTQ2YzNjOWZkMDYzNWQ0ODg2ZDQ3ZTZjZGY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-09T01:49:12Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-09T02:02:54Z"}, "message": "Reorder erasing/replacing late bound vars and substs", "tree": {"sha": "5f5410cfe01d5085e4f49af3066a3f5449ba2479", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f5410cfe01d5085e4f49af3066a3f5449ba2479"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/657499df644c15546c3c9fd0635d4886d47e6cdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/657499df644c15546c3c9fd0635d4886d47e6cdf", "html_url": "https://github.com/rust-lang/rust/commit/657499df644c15546c3c9fd0635d4886d47e6cdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/657499df644c15546c3c9fd0635d4886d47e6cdf/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e14eae6226847f2940e8158cb83253ecebbdc61c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e14eae6226847f2940e8158cb83253ecebbdc61c", "html_url": "https://github.com/rust-lang/rust/commit/e14eae6226847f2940e8158cb83253ecebbdc61c"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "1b619776b857c3f4e0208d776d322c0d7d02b8b4", "filename": "compiler/rustc_typeck/src/check/method/confirm.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/657499df644c15546c3c9fd0635d4886d47e6cdf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/657499df644c15546c3c9fd0635d4886d47e6cdf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs?ref=657499df644c15546c3c9fd0635d4886d47e6cdf", "patch": "@@ -462,19 +462,13 @@ impl<'a, 'tcx> ConfirmContext<'a, 'tcx> {\n \n         let sig = self.tcx.fn_sig(def_id);\n \n-        // Instantiate late-bound regions and substitute the trait\n-        // parameters into the method type to get the actual method type.\n-        //\n-        // N.B., instantiate late-bound regions first so that\n-        // `instantiate_type_scheme` can normalize associated types that\n-        // may reference those regions.\n-        let method_sig = self.replace_bound_vars_with_fresh_vars(sig);\n-        debug!(\"late-bound lifetimes from method instantiated, method_sig={:?}\", method_sig);\n+        let sig = sig.subst(self.tcx, all_substs);\n+        debug!(\"type scheme substituted, sig={:?}\", sig);\n \n-        let method_sig = method_sig.subst(self.tcx, all_substs);\n-        debug!(\"type scheme substituted, method_sig={:?}\", method_sig);\n+        let sig = self.replace_bound_vars_with_fresh_vars(sig);\n+        debug!(\"late-bound lifetimes from method instantiated, sig={:?}\", sig);\n \n-        (method_sig, method_predicates)\n+        (sig, method_predicates)\n     }\n \n     fn add_obligations("}, {"sha": "1dd5e45fdc174026066730f9671bb4246dc4f00a", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/657499df644c15546c3c9fd0635d4886d47e6cdf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/657499df644c15546c3c9fd0635d4886d47e6cdf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=657499df644c15546c3c9fd0635d4886d47e6cdf", "patch": "@@ -461,8 +461,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // `instantiate_type_scheme` can normalize associated types that\n         // may reference those regions.\n         let fn_sig = tcx.fn_sig(def_id);\n-        let fn_sig = self.replace_bound_vars_with_fresh_vars(span, infer::FnCall, fn_sig).0;\n         let fn_sig = fn_sig.subst(self.tcx, substs);\n+        let fn_sig = self.replace_bound_vars_with_fresh_vars(span, infer::FnCall, fn_sig).0;\n \n         let InferOk { value, obligations: o } = if is_op {\n             self.normalize_op_associated_types_in_as_infer_ok(span, fn_sig, opt_input_expr)"}, {"sha": "c28ab9fa1ee40cfae6c0292a68fcf5661dd67bd2", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/657499df644c15546c3c9fd0635d4886d47e6cdf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/657499df644c15546c3c9fd0635d4886d47e6cdf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=657499df644c15546c3c9fd0635d4886d47e6cdf", "patch": "@@ -1784,12 +1784,8 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         let generics = self.tcx.generics_of(method);\n         assert_eq!(substs.len(), generics.parent_count as usize);\n \n-        // Erase any late-bound regions from the method and substitute\n-        // in the values from the substitution.\n-        let xform_fn_sig = self.erase_late_bound_regions(fn_sig);\n-\n-        if generics.params.is_empty() {\n-            xform_fn_sig.subst(self.tcx, substs)\n+        let xform_fn_sig = if generics.params.is_empty() {\n+            fn_sig.subst(self.tcx, substs)\n         } else {\n             let substs = InternalSubsts::for_item(self.tcx, method, |param, _| {\n                 let i = param.index as usize;\n@@ -1807,8 +1803,10 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                     }\n                 }\n             });\n-            xform_fn_sig.subst(self.tcx, substs)\n-        }\n+            fn_sig.subst(self.tcx, substs)\n+        };\n+\n+        self.erase_late_bound_regions(xform_fn_sig)\n     }\n \n     /// Gets the type of an impl and generate substitutions with placeholders."}]}