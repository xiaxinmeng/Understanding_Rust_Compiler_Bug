{"sha": "440e637edfc58f50365f658e28c86ae51c1327b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MGU2MzdlZGZjNThmNTAzNjVmNjU4ZTI4Yzg2YWU1MWMxMzI3YjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-09T00:43:59Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-09T00:43:59Z"}, "message": "Fix boxed returns harder. Un-XFAIL output-slot-variants.rs.", "tree": {"sha": "fc1b513723f4fba1b69bd29e95d3a8827f442d89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc1b513723f4fba1b69bd29e95d3a8827f442d89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/440e637edfc58f50365f658e28c86ae51c1327b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/440e637edfc58f50365f658e28c86ae51c1327b2", "html_url": "https://github.com/rust-lang/rust/commit/440e637edfc58f50365f658e28c86ae51c1327b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/440e637edfc58f50365f658e28c86ae51c1327b2/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "652ae9f50e67610b482a2c99360737e1b8e8077b", "url": "https://api.github.com/repos/rust-lang/rust/commits/652ae9f50e67610b482a2c99360737e1b8e8077b", "html_url": "https://github.com/rust-lang/rust/commit/652ae9f50e67610b482a2c99360737e1b8e8077b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "442c23bcecdf92d43612d72fabcfdde0fc8cbf09", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/440e637edfc58f50365f658e28c86ae51c1327b2/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/440e637edfc58f50365f658e28c86ae51c1327b2/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=440e637edfc58f50365f658e28c86ae51c1327b2", "patch": "@@ -542,6 +542,7 @@ TEST_XFAILS_SELF := $(filter-out \\\n                         large-records.rs \\\n                         lazy-init.rs \\\n                         multiline-comment.rs \\\n+                        output-slot-variants.rs \\\n                         readalias.rs \\\n                         rec.rs \\\n                         rec-auto.rs \\"}, {"sha": "08e98abab6307aa62a9d71d390a25c79e0ae17a9", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/440e637edfc58f50365f658e28c86ae51c1327b2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440e637edfc58f50365f658e28c86ae51c1327b2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=440e637edfc58f50365f658e28c86ae51c1327b2", "patch": "@@ -1608,19 +1608,18 @@ impure fn trans_ret(@block_ctxt cx, &option.t[@ast.expr] e) -> result {\n         case (some[@ast.expr](?x)) {\n             auto t = typeck.expr_ty(x);\n             r = trans_expr(cx, x);\n+\n+            // A return is an implicit copy into a newborn anonymous\n+            // 'return value' in the caller frame.\n+            r.bcx = incr_all_refcnts(r.bcx, r.val, t).bcx;\n+\n             if (typeck.type_is_structural(t)) {\n                 // We usually treat structurals by-pointer; in particular,\n                 // trans_expr will have given us a structure pointer. But in\n                 // this case we're about to return. LLVM wants a first-class\n                 // value here (which makes sense; the frame is going away!)\n                 r.val = r.bcx.build.Load(r.val);\n             }\n-            if (typeck.type_is_boxed(t)) {\n-                // A return is an implicit ++ on the refcount on any boxed\n-                // value, as it is being newly referenced as the anonymous\n-                // 'return value' from the function, in the caller frame.\n-                r.bcx = incr_refcnt(r.bcx, r.val).bcx;\n-            }\n         }\n         case (_) { /* fall through */  }\n     }"}]}