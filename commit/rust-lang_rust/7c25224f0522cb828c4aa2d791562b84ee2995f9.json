{"sha": "7c25224f0522cb828c4aa2d791562b84ee2995f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMjUyMjRmMDUyMmNiODI4YzRhYTJkNzkxNTYyYjg0ZWUyOTk1Zjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-18T15:25:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-18T15:45:42Z"}, "message": "Don't bother with focus range for navigation to locals", "tree": {"sha": "562a3d6d1974dd29751b5334512aa498f638c262", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/562a3d6d1974dd29751b5334512aa498f638c262"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c25224f0522cb828c4aa2d791562b84ee2995f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c25224f0522cb828c4aa2d791562b84ee2995f9", "html_url": "https://github.com/rust-lang/rust/commit/7c25224f0522cb828c4aa2d791562b84ee2995f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c25224f0522cb828c4aa2d791562b84ee2995f9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46a299bceece6f8633d7c1518939efbb3a57fae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/46a299bceece6f8633d7c1518939efbb3a57fae3", "html_url": "https://github.com/rust-lang/rust/commit/46a299bceece6f8633d7c1518939efbb3a57fae3"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "b9ae67828481943903eb794fc799f35b830b430d", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c25224f0522cb828c4aa2d791562b84ee2995f9/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c25224f0522cb828c4aa2d791562b84ee2995f9/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=7c25224f0522cb828c4aa2d791562b84ee2995f9", "patch": "@@ -328,22 +328,23 @@ impl ToNav for hir::AssocItem {\n impl ToNav for hir::Local {\n     fn to_nav(&self, db: &RootDatabase) -> NavigationTarget {\n         let src = self.source(db);\n-        let (full_range, focus_range) = match src.value {\n-            Either::Left(it) => {\n-                (it.syntax().text_range(), it.name().map(|it| it.syntax().text_range()))\n+        let node = match &src.value {\n+            Either::Left(bind_pat) => {\n+                bind_pat.name().map_or_else(|| bind_pat.syntax().clone(), |it| it.syntax().clone())\n             }\n-            Either::Right(it) => (it.syntax().text_range(), Some(it.self_kw_token().text_range())),\n+            Either::Right(it) => it.syntax().clone(),\n         };\n+        let full_range = original_range(db, src.with_value(&node));\n         let name = match self.name(db) {\n             Some(it) => it.to_string().into(),\n             None => \"\".into(),\n         };\n         NavigationTarget {\n-            file_id: src.file_id.original_file(db),\n+            file_id: full_range.file_id,\n             name,\n             kind: BIND_PAT,\n-            full_range,\n-            focus_range,\n+            full_range: full_range.range,\n+            focus_range: None,\n             container_name: None,\n             description: None,\n             docs: None,"}, {"sha": "184555792cea7ce49e8f07eabd9e82d35d4f636a", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/7c25224f0522cb828c4aa2d791562b84ee2995f9/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c25224f0522cb828c4aa2d791562b84ee2995f9/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=7c25224f0522cb828c4aa2d791562b84ee2995f9", "patch": "@@ -817,4 +817,45 @@ mod tests {\n             \"T\",\n         );\n     }\n+\n+    #[test]\n+    fn goto_within_macro() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            macro_rules! id {\n+                ($($tt:tt)*) => ($($tt)*)\n+            }\n+\n+            fn foo() {\n+                let x = 1;\n+                id!({\n+                    let y = <|>x;\n+                    let z = y;\n+                });\n+            }\n+            \",\n+            \"x BIND_PAT FileId(1) [69; 70)\",\n+            \"x\",\n+        );\n+\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            macro_rules! id {\n+                ($($tt:tt)*) => ($($tt)*)\n+            }\n+\n+            fn foo() {\n+                let x = 1;\n+                id!({\n+                    let y = x;\n+                    let z = <|>y;\n+                });\n+            }\n+            \",\n+            \"y BIND_PAT FileId(1) [98; 99)\",\n+            \"y\",\n+        );\n+    }\n }"}]}