{"sha": "25ca33d1073cfcd53c12f43df4e3a315411bef9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1Y2EzM2QxMDczY2ZjZDUzYzEyZjQzZGY0ZTNhMzE1NDExYmVmOWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-10T09:47:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-10T09:47:04Z"}, "message": "Fix rustc_tests", "tree": {"sha": "1b6df0a9b0d1ab5f43d9d465247644989855c0ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b6df0a9b0d1ab5f43d9d465247644989855c0ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25ca33d1073cfcd53c12f43df4e3a315411bef9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25ca33d1073cfcd53c12f43df4e3a315411bef9d", "html_url": "https://github.com/rust-lang/rust/commit/25ca33d1073cfcd53c12f43df4e3a315411bef9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25ca33d1073cfcd53c12f43df4e3a315411bef9d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60669cbdfd5d0aa4ed7528e3cddac71047e378ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/60669cbdfd5d0aa4ed7528e3cddac71047e378ac", "html_url": "https://github.com/rust-lang/rust/commit/60669cbdfd5d0aa4ed7528e3cddac71047e378ac"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "3e2cd032a80e8a92ced399efd024f9a8969f2e13", "filename": "rustc_tests/src/main.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/25ca33d1073cfcd53c12f43df4e3a315411bef9d/rustc_tests%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25ca33d1073cfcd53c12f43df4e3a315411bef9d/rustc_tests%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tests%2Fsrc%2Fmain.rs?ref=25ca33d1073cfcd53c12f43df4e3a315411bef9d", "patch": "@@ -24,7 +24,7 @@ use rustc::ty::TyCtxt;\n use syntax::ast;\n \n struct MiriCompilerCalls {\n-    default: RustcDefaultCalls,\n+    default: Box<RustcDefaultCalls>,\n     /// whether we are building for the host\n     host_target: bool,\n }\n@@ -63,11 +63,12 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n     ) -> Compilation {\n         self.default.late_callback(trans, matches, sess, cstore, input, odir, ofile)\n     }\n-    fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> CompileController<'a> {\n-        let mut control = self.default.build_controller(sess, matches);\n+    fn build_controller(self: Box<Self>, sess: &Session, matches: &getopts::Matches) -> CompileController<'a> {\n+        let this = *self;\n+        let mut control = this.default.build_controller(sess, matches);\n         control.after_hir_lowering.callback = Box::new(after_hir_lowering);\n         control.after_analysis.callback = Box::new(after_analysis);\n-        if !self.host_target {\n+        if !this.host_target {\n             // only fully compile targets on the host\n             control.after_analysis.stop = Compilation::Stop;\n         }\n@@ -182,10 +183,10 @@ fn main() {\n         let buf = BufWriter::default();\n         let output = buf.clone();\n         let result = std::panic::catch_unwind(|| {\n-            rustc_driver::run_compiler(&args, &mut MiriCompilerCalls {\n-                default: RustcDefaultCalls,\n+            rustc_driver::run_compiler(&args, Box::new(MiriCompilerCalls {\n+                default: Box::new(RustcDefaultCalls),\n                 host_target,\n-            }, None, Some(Box::new(buf)));\n+            }), None, Some(Box::new(buf)));\n         });\n \n         match result {"}]}