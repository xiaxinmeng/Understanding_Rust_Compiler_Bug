{"sha": "d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZTA0OTAyMzk2ZTJjZGNjYTg4NGM3MTZiMGIyZGI4OWYwYjRiNWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-05T20:57:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-05T20:57:00Z"}, "message": "Auto merge of #4773 - lzutao:rls/print-something, r=Manishearth\n\nbuild: avoid timing out in Travis\n\ncc #4770\nchangelog: none", "tree": {"sha": "3df837df24050c1248aafbccf3f515e42eaa9b51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3df837df24050c1248aafbccf3f515e42eaa9b51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "html_url": "https://github.com/rust-lang/rust/commit/d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "000c3ff278852788bc88ce6a911050d02d39af93", "url": "https://api.github.com/repos/rust-lang/rust/commits/000c3ff278852788bc88ce6a911050d02d39af93", "html_url": "https://github.com/rust-lang/rust/commit/000c3ff278852788bc88ce6a911050d02d39af93"}, {"sha": "b8c2cb17e6136e45d61802dc16e33fb5d2427e24", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8c2cb17e6136e45d61802dc16e33fb5d2427e24", "html_url": "https://github.com/rust-lang/rust/commit/b8c2cb17e6136e45d61802dc16e33fb5d2427e24"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "6ab711b723b0c47eb372bbda69095b654f58e6d7", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "patch": "@@ -90,6 +90,7 @@ matrix:\n   allow_failures:\n     - os: windows\n       env: CARGO_INCREMENTAL=0 OS_WINDOWS=true\n+    - env: INTEGRATION=rust-lang-nursery/stdsimd\n \n before_script:\n   - |"}, {"sha": "f6540769bb0392c6402ef31470839bf201cc50c6", "filename": "ci/integration-tests.sh", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/ci%2Fintegration-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/ci%2Fintegration-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fintegration-tests.sh?ref=d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "patch": "@@ -18,6 +18,8 @@ cd checkout\n \n # run clippy on a project, try to be verbose and trigger as many warnings\n # as possible for greater coverage\n+# NOTE: we use `tee` to print any warnings and errors to stdout\n+#       to avoid build timeout in Travis\n RUST_BACKTRACE=full \\\n cargo clippy \\\n     --all-targets \\\n@@ -26,10 +28,9 @@ cargo clippy \\\n     --cap-lints warn \\\n     -W clippy::pedantic \\\n     -W clippy::nursery \\\n-    > clippy_output 2>&1 || true\n+    2>&1 | tee clippy_output\n \n cargo uninstall clippy\n-cat clippy_output\n \n if grep -q \"internal compiler error\\|query stack during panic\\|E0463\" clippy_output; then\n     exit 1"}, {"sha": "a8c953b880b8ffdda49ae8fdd0e78d312b6871f1", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "patch": "@@ -77,7 +77,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Mutex {\n     }\n }\n \n-fn get_atomic_name(ty: Ty<'_>) -> Option<(&'static str)> {\n+fn get_atomic_name(ty: Ty<'_>) -> Option<&'static str> {\n     match ty.kind {\n         ty::Bool => Some(\"AtomicBool\"),\n         ty::Uint(_) => Some(\"AtomicUsize\"),"}, {"sha": "bf46a9a8b8228cd4c6d4714dad1994613b5cd78d", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e04902396e2cdcca884c716b0b2db89f0b4b5a/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=d1e04902396e2cdcca884c716b0b2db89f0b4b5a", "patch": "@@ -239,7 +239,7 @@ pub fn match_path_ast(path: &ast::Path, segments: &[&str]) -> bool {\n }\n \n /// Gets the definition associated to a path.\n-pub fn path_to_res(cx: &LateContext<'_, '_>, path: &[&str]) -> Option<(def::Res)> {\n+pub fn path_to_res(cx: &LateContext<'_, '_>, path: &[&str]) -> Option<def::Res> {\n     let crates = cx.tcx.crates();\n     let krate = crates\n         .iter()"}]}