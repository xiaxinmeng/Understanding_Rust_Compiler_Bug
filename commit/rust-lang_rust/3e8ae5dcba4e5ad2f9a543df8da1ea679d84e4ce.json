{"sha": "3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOGFlNWRjYmE0ZTVhZDJmOWE1NDNkZjhkYTFlYTY3OWQ4NGU0Y2U=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-31T00:47:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T00:47:34Z"}, "message": "Rollup merge of #81472 - Aaron1011:fix/revert-cursor-clone, r=petrochenkov\n\nClone entire `TokenCursor` when collecting tokens\n\nReverts PR #80830\nFixes taiki-e/pin-project#312\n\nWe can have an arbitrary number of `None`-delimited group frames pushed\non the stack due to proc-macro invocations, which can legally be exited.\nAttempting to account for this would add a lot of complexity for a tiny\nperformance gain, so let's just use the original strategy.", "tree": {"sha": "9c32337ac1b6d8863f07e854099db63db6249336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c32337ac1b6d8863f07e854099db63db6249336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFf4nCRBK7hj4Ov3rIwAAdHIIADs4MOeNg4MbDXHF3S82ZyOn\nr0hj5dgdXu/85tGsul0Z8VcOAvSy/l60n8EsU8FT798YP2Jvx2VzIZ+83f6WGO6i\ni6xbp673MhMz9tpW1jo0SAhFZenota82LDk9IbjT6vWzxbq7jw4uL8fanzwtqv+c\nWoQ1lO/dT2KKPWP1UJmK1+E26bixANOrj9Cy0avNoU6DcDaTjHrFenHbd3KeguoD\nvsjS3sDtpvT7yJmLb82oL78ICjVmTR1UUh7Zrhe/C+rO7btVXetaeb0xLagsVokp\n6VZsOolZT/t0OEcpzeyVU3jEHqJ5fllgqQNC7M43OxFfuUlqmsWn7auxe1jIj5Y=\n=CRG7\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c32337ac1b6d8863f07e854099db63db6249336\nparent 84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26\nparent 5d739180cde7f7350b7a90e8a7542bd9c4cd6783\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612054054 +0100\ncommitter GitHub <noreply@github.com> 1612054054 +0100\n\nRollup merge of #81472 - Aaron1011:fix/revert-cursor-clone, r=petrochenkov\n\nClone entire `TokenCursor` when collecting tokens\n\nReverts PR #80830\nFixes taiki-e/pin-project#312\n\nWe can have an arbitrary number of `None`-delimited group frames pushed\non the stack due to proc-macro invocations, which can legally be exited.\nAttempting to account for this would add a lot of complexity for a tiny\nperformance gain, so let's just use the original strategy.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "html_url": "https://github.com/rust-lang/rust/commit/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "url": "https://api.github.com/repos/rust-lang/rust/commits/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "html_url": "https://github.com/rust-lang/rust/commit/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26"}, {"sha": "5d739180cde7f7350b7a90e8a7542bd9c4cd6783", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d739180cde7f7350b7a90e8a7542bd9c4cd6783", "html_url": "https://github.com/rust-lang/rust/commit/5d739180cde7f7350b7a90e8a7542bd9c4cd6783"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "e2af63d1744ec3b1b1c226fe7c64d060975452e4", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "patch": "@@ -1254,15 +1254,7 @@ impl<'a> Parser<'a> {\n         f: impl FnOnce(&mut Self) -> PResult<'a, (R, TrailingToken)>,\n     ) -> PResult<'a, R> {\n         let start_token = (self.token.clone(), self.token_spacing);\n-        let cursor_snapshot = TokenCursor {\n-            frame: self.token_cursor.frame.clone(),\n-            // We only ever capture tokens within our current frame,\n-            // so we can just use an empty frame stack\n-            stack: vec![],\n-            desugar_doc_comments: self.token_cursor.desugar_doc_comments,\n-            num_next_calls: self.token_cursor.num_next_calls,\n-            append_unglued_token: self.token_cursor.append_unglued_token.clone(),\n-        };\n+        let cursor_snapshot = self.token_cursor.clone();\n \n         let (mut ret, trailing_token) = f(self)?;\n "}, {"sha": "a6903283aa108e7d3512da81ba636d1e16984aad", "filename": "src/test/ui/proc-macro/auxiliary/nonterminal-recollect-attr.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fnonterminal-recollect-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fnonterminal-recollect-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fnonterminal-recollect-attr.rs?ref=3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "patch": "@@ -0,0 +1,23 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+#![feature(proc_macro_quote)]\n+\n+extern crate proc_macro;\n+use proc_macro::{TokenStream, quote};\n+\n+#[proc_macro_attribute]\n+pub fn first_attr(_: TokenStream, input: TokenStream) -> TokenStream {\n+    let recollected: TokenStream = input.into_iter().collect();\n+    quote! {\n+        #[second_attr]\n+        $recollected\n+    }\n+}\n+\n+#[proc_macro_attribute]\n+pub fn second_attr(_: TokenStream, input: TokenStream) -> TokenStream {\n+    let _recollected: TokenStream = input.into_iter().collect();\n+    TokenStream::new()\n+}"}, {"sha": "5d4649b78c270a96c5517cf2d98752c0a1d22000", "filename": "src/test/ui/proc-macro/nonterminal-recollect-attr.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-recollect-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-recollect-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-recollect-attr.rs?ref=3e8ae5dcba4e5ad2f9a543df8da1ea679d84e4ce", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+// aux-build:nonterminal-recollect-attr.rs\n+\n+extern crate nonterminal_recollect_attr;\n+use nonterminal_recollect_attr::*;\n+\n+macro_rules! my_macro {\n+    ($v:ident) => {\n+        #[first_attr]\n+        $v struct Foo {\n+            field: u8\n+        }\n+    }\n+}\n+\n+my_macro!(pub);\n+fn main() {}"}]}