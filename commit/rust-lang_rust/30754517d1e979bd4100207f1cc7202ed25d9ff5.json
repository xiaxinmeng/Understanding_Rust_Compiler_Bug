{"sha": "30754517d1e979bd4100207f1cc7202ed25d9ff5", "node_id": "C_kwDOAAsO6NoAKDMwNzU0NTE3ZDFlOTc5YmQ0MTAwMjA3ZjFjYzcyMDJlZDI1ZDlmZjU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-12T14:39:08Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-12T14:39:08Z"}, "message": "Avoid trying to normalize unnormalizable types", "tree": {"sha": "141ba2aa4db872ad40206b2e137ae5a33556493a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/141ba2aa4db872ad40206b2e137ae5a33556493a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30754517d1e979bd4100207f1cc7202ed25d9ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30754517d1e979bd4100207f1cc7202ed25d9ff5", "html_url": "https://github.com/rust-lang/rust/commit/30754517d1e979bd4100207f1cc7202ed25d9ff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30754517d1e979bd4100207f1cc7202ed25d9ff5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21917b086661ef7b0803280fc0ce753ac130f35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/21917b086661ef7b0803280fc0ce753ac130f35f", "html_url": "https://github.com/rust-lang/rust/commit/21917b086661ef7b0803280fc0ce753ac130f35f"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "38f924eaf4d2a802a0fe7b04e29086648840a535", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/30754517d1e979bd4100207f1cc7202ed25d9ff5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30754517d1e979bd4100207f1cc7202ed25d9ff5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=30754517d1e979bd4100207f1cc7202ed25d9ff5", "patch": "@@ -982,7 +982,10 @@ where\n     /// different binding level.\n     #[track_caller]\n     pub fn dummy(value: T) -> Binder<'tcx, T> {\n-        assert!(!value.has_escaping_bound_vars());\n+        assert!(\n+            !value.has_escaping_bound_vars(),\n+            \"`{value:?}` has escaping bound vars, so it cannot be wrapped in a dummy binder.\"\n+        );\n         Binder(value, ty::List::empty())\n     }\n "}, {"sha": "c6ab8e1a83bef786d0167c204065dccb6275951b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/30754517d1e979bd4100207f1cc7202ed25d9ff5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30754517d1e979bd4100207f1cc7202ed25d9ff5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=30754517d1e979bd4100207f1cc7202ed25d9ff5", "patch": "@@ -22,6 +22,7 @@ use rustc_infer::infer::region_constraints::{Constraint, RegionConstraintData};\n use rustc_middle::middle::resolve_lifetime as rl;\n use rustc_middle::ty::fold::TypeFolder;\n use rustc_middle::ty::InternalSubsts;\n+use rustc_middle::ty::TypeVisitable;\n use rustc_middle::ty::{self, AdtKind, DefIdTree, EarlyBinder, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_span::hygiene::{AstPass, MacroKind};\n@@ -1459,8 +1460,11 @@ fn clean_qpath<'tcx>(hir_ty: &hir::Ty<'tcx>, cx: &mut DocContext<'tcx>) -> Type\n         hir::QPath::Resolved(Some(qself), p) => {\n             // Try to normalize `<X as Y>::T` to a type\n             let ty = hir_ty_to_ty(cx.tcx, hir_ty);\n-            if let Some(normalized_value) = normalize(cx, ty::Binder::dummy(ty)) {\n-                return clean_middle_ty(normalized_value, cx, None);\n+            // `hir_to_ty` can return projection types with escaping vars for GATs, e.g. `<() as Trait>::Gat<'_>`\n+            if !ty.has_escaping_bound_vars() {\n+                if let Some(normalized_value) = normalize(cx, ty::Binder::dummy(ty)) {\n+                    return clean_middle_ty(normalized_value, cx, None);\n+                }\n             }\n \n             let trait_segments = &p.segments[..p.segments.len() - 1];"}]}