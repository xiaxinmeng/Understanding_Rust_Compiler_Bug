{"sha": "1094f97da0bc3ce63130eac88adc997c68ce59cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwOTRmOTdkYTBiYzNjZTYzMTMwZWFjODhhZGM5OTdjNjhjZTU5Y2Q=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2020-11-18T20:39:17Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2020-11-18T20:42:20Z"}, "message": "Test drop order for (destructuring) assignments", "tree": {"sha": "6bd4f57f3815559bc13360cbce0d42b9485266de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd4f57f3815559bc13360cbce0d42b9485266de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1094f97da0bc3ce63130eac88adc997c68ce59cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1094f97da0bc3ce63130eac88adc997c68ce59cd", "html_url": "https://github.com/rust-lang/rust/commit/1094f97da0bc3ce63130eac88adc997c68ce59cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1094f97da0bc3ce63130eac88adc997c68ce59cd/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "603ab5bd6e0ffefafa7411cd8bd23a6ca82bcff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/603ab5bd6e0ffefafa7411cd8bd23a6ca82bcff0", "html_url": "https://github.com/rust-lang/rust/commit/603ab5bd6e0ffefafa7411cd8bd23a6ca82bcff0"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "d06b31c7f270224d66628222b9dd9e3603ca85fe", "filename": "src/test/ui/destructuring-assignment/drop-order.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1094f97da0bc3ce63130eac88adc997c68ce59cd/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1094f97da0bc3ce63130eac88adc997c68ce59cd/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs?ref=1094f97da0bc3ce63130eac88adc997c68ce59cd", "patch": "@@ -0,0 +1,44 @@\n+// run-pass\n+\n+//! Test that let bindings and destructuring assignments have consistent drop orders\n+\n+#![feature(destructuring_assignment)]\n+#![allow(unused_variables, unused_assignments)]\n+\n+use std::cell::RefCell;\n+\n+thread_local! {\n+    static DROP_ORDER: RefCell<Vec<usize>> = RefCell::new(Vec::new());\n+}\n+\n+struct DropRecorder(usize);\n+impl Drop for DropRecorder {\n+    fn drop(&mut self) {\n+        DROP_ORDER.with(|d| d.borrow_mut().push(self.0));\n+    }\n+}\n+\n+fn main() {\n+    let expected_drop_order = vec![1, 4, 5, 3, 2];\n+    // Check the drop order for let bindings:\n+    {\n+        let _ = DropRecorder(1);\n+        let _val = DropRecorder(2);\n+        let (x, _) = (DropRecorder(3), DropRecorder(4));\n+        drop(DropRecorder(5));\n+    }\n+    DROP_ORDER.with(|d| {\n+        assert_eq!(&*d.borrow(), &expected_drop_order);\n+        d.borrow_mut().clear();\n+    });\n+    // Check that the drop order for destructuring assignment is the same:\n+    {\n+        let _val;\n+        let x;\n+        _ = DropRecorder(1);\n+        _val = DropRecorder(2);\n+        (x, _) = (DropRecorder(3), DropRecorder(4));\n+        drop(DropRecorder(5));\n+    }\n+    DROP_ORDER.with(|d| assert_eq!(&*d.borrow(), &expected_drop_order));\n+}"}]}