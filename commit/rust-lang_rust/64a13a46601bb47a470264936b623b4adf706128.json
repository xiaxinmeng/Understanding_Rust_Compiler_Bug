{"sha": "64a13a46601bb47a470264936b623b4adf706128", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YTEzYTQ2NjAxYmI0N2E0NzAyNjQ5MzZiNjIzYjRhZGY3MDYxMjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-25T12:03:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-25T12:03:13Z"}, "message": "Auto merge of #31908 - jseyfried:disallow_shadowed_traits, r=nikomatsakis\n\nDisallow methods from traits that are not in scope\n\nThis PR only allows a trait method to be used if the trait is in scope (fixes #31379).\nThis is a [breaking-change]. For example, the following would break:\n```rust\nmod foo {\n    pub trait T { fn f(&self) {} }\n    impl T for () {}\n}\n\nmod bar { pub use foo::T; }\n\nfn main() {\n    pub use bar::*;\n    struct T; // This shadows the trait `T`,\n    ().f() // making this an error.\n}\n```\nr? @nikomatsakis", "tree": {"sha": "20bdc3ccf93199048f5fb6c05abdfa70786934e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20bdc3ccf93199048f5fb6c05abdfa70786934e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64a13a46601bb47a470264936b623b4adf706128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64a13a46601bb47a470264936b623b4adf706128", "html_url": "https://github.com/rust-lang/rust/commit/64a13a46601bb47a470264936b623b4adf706128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64a13a46601bb47a470264936b623b4adf706128/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1578d37dc844ffeefcabc30960784082c3c54fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1578d37dc844ffeefcabc30960784082c3c54fa", "html_url": "https://github.com/rust-lang/rust/commit/f1578d37dc844ffeefcabc30960784082c3c54fa"}, {"sha": "ed8a2e230d64dff35991475f516821ab3ebe455f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed8a2e230d64dff35991475f516821ab3ebe455f", "html_url": "https://github.com/rust-lang/rust/commit/ed8a2e230d64dff35991475f516821ab3ebe455f"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "61e0add86020e9b4305505cc7f91f81270140a1d", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64a13a46601bb47a470264936b623b4adf706128/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a13a46601bb47a470264936b623b4adf706128/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=64a13a46601bb47a470264936b623b4adf706128", "patch": "@@ -686,9 +686,9 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                 }\n             }\n \n-            // FIXME #31379: We can use methods from imported traits shadowed by non-import items\n-            if !binding.is_import() {\n-                for glob_binding in resolution.duplicate_globs.iter() {\n+            // We can always use methods from the prelude traits\n+            for glob_binding in resolution.duplicate_globs.iter() {\n+                if glob_binding.defined_with(DefModifiers::PRELUDE) {\n                     module.shadowed_traits.borrow_mut().push(glob_binding);\n                 }\n             }"}, {"sha": "3146017a0b4291bdd3cc41787c64f8e7083a9c5b", "filename": "src/test/compile-fail/shadowed-trait-methods.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64a13a46601bb47a470264936b623b4adf706128/src%2Ftest%2Fcompile-fail%2Fshadowed-trait-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a13a46601bb47a470264936b623b4adf706128/src%2Ftest%2Fcompile-fail%2Fshadowed-trait-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshadowed-trait-methods.rs?ref=64a13a46601bb47a470264936b623b4adf706128", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that methods from shadowed traits cannot be used\n+\n+mod foo {\n+    pub trait T { fn f(&self) {} }\n+    impl T for () {}\n+}\n+\n+mod bar { pub use foo::T; }\n+\n+fn main() {\n+    pub use bar::*;\n+    struct T;\n+    ().f() //~ ERROR no method\n+}"}]}