{"sha": "1d72d314480d3437345129ddf8b299c36e048f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNzJkMzE0NDgwZDM0MzczNDUxMjlkZGY4YjI5OWMzNmUwNDhmMTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-18T20:13:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-18T20:13:44Z"}, "message": "Auto merge of #27891 - steveklabnik:rollup, r=steveklabnik\n\n- Successful merges: #27881, #27882, #27883, #27884, #27888\n- Failed merges:", "tree": {"sha": "eb7d5260676adafcd3e0b32be0da49b7e37d9993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb7d5260676adafcd3e0b32be0da49b7e37d9993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d72d314480d3437345129ddf8b299c36e048f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d72d314480d3437345129ddf8b299c36e048f18", "html_url": "https://github.com/rust-lang/rust/commit/1d72d314480d3437345129ddf8b299c36e048f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d72d314480d3437345129ddf8b299c36e048f18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c11e4a48ec3ac385f32da1879384bc6921bdf75", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c11e4a48ec3ac385f32da1879384bc6921bdf75", "html_url": "https://github.com/rust-lang/rust/commit/6c11e4a48ec3ac385f32da1879384bc6921bdf75"}, {"sha": "101ebe0bb05cc93939a3b57cbfd91f2a765dc9c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/101ebe0bb05cc93939a3b57cbfd91f2a765dc9c4", "html_url": "https://github.com/rust-lang/rust/commit/101ebe0bb05cc93939a3b57cbfd91f2a765dc9c4"}], "stats": {"total": 92, "additions": 85, "deletions": 7}, "files": [{"sha": "391ada0efef17270eed5a461cde769b9779c65d9", "filename": "README.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1d72d314480d3437345129ddf8b299c36e048f18/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d72d314480d3437345129ddf8b299c36e048f18/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=1d72d314480d3437345129ddf8b299c36e048f18", "patch": "@@ -82,6 +82,28 @@ Read [\"Installing Rust\"] from [The Book].\n    $ make && make install\n    ```\n \n+## Building Documentation\n+\n+If you\u2019d like to build the documentation, it\u2019s almost the same:\n+\n+```sh\n+./configure\n+$ make docs\n+```\n+\n+Building the documentation requires building the compiler, so the above\n+details will apply. Once you have the compiler built, you can\n+\n+```sh\n+$ make docs NO_REBUILD=1 \n+```\n+\n+To make sure you don\u2019t re-build the compiler because you made a change\n+to some documentation.\n+\n+The generated documentation will appear in a top-level `doc` directory,\n+created by the `make` rule.\n+\n ## Notes\n \n Since the Rust compiler is written in Rust, it must be built by a"}, {"sha": "3ac79ecae64e5b4feaa298c0df7f54ac2cfd9aa6", "filename": "man/rustc.1", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1d72d314480d3437345129ddf8b299c36e048f18/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/1d72d314480d3437345129ddf8b299c36e048f18/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=1d72d314480d3437345129ddf8b299c36e048f18", "patch": "@@ -41,7 +41,7 @@ look for anything here (the default)\n .RE\n .TP\n \\fB\\-l\\fR [\\fIKIND\\fR=]\\fINAME\\fR\n-Link the generated crate(s) to the specified native library \\fINAME\\fR.\n+Link the generated crate(s) to the specified library \\fINAME\\fR.\n The optional \\fIKIND\\fR can be one of \\fIstatic\\fR, \\fIdylib\\fR, or\n \\fIframework\\fR.\n If omitted, \\fIdylib\\fR is assumed.\n@@ -113,7 +113,8 @@ Print version info and exit.\n Use verbose output.\n .TP\n \\fB\\-\\-extern\\fR \\fINAME\\fR=\\fIPATH\\fR\n-Specify where an external rust library is located.\n+Specify where an external rust library is located. These should match\n+\\fIextern\\fR declarations in the crate's source code.\n .TP\n \\fB\\-\\-sysroot\\fR \\fIPATH\\fR\n Override the system root."}, {"sha": "b4dec8f1fef9030c3f9dca30f40eb2b5be889045", "filename": "src/doc/reference.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1d72d314480d3437345129ddf8b299c36e048f18/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d72d314480d3437345129ddf8b299c36e048f18/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=1d72d314480d3437345129ddf8b299c36e048f18", "patch": "@@ -2059,6 +2059,11 @@ The following configurations must be defined by the implementation:\n   `\"mips\"`, `\"powerpc\"`, `\"arm\"`, or `\"aarch64\"`.\n * `target_endian = \"...\"`. Endianness of the target CPU, either `\"little\"` or\n   `\"big\"`.\n+* `target_env = \"..\"` - an option provided by the compiler by default\n+  describing the runtime environment of the target platform. Some examples of\n+  this are `musl` for builds targeting the MUSL libc implementation, `msvc` for\n+  Windows builds targeting MSVC, and `gnu` frequently the rest of the time. This\n+  option may also be blank on some platforms.\n * `target_family = \"...\"`. Operating system family of the target, e. g.\n   `\"unix\"` or `\"windows\"`. The value of this configuration option is defined\n   as a configuration itself, like `unix` or `windows`."}, {"sha": "84cea5dabc3b528edacdcb1be014dbe821e8d235", "filename": "src/doc/trpl/functions.md", "status": "modified", "additions": 54, "deletions": 4, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/1d72d314480d3437345129ddf8b299c36e048f18/src%2Fdoc%2Ftrpl%2Ffunctions.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d72d314480d3437345129ddf8b299c36e048f18/src%2Fdoc%2Ftrpl%2Ffunctions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ffunctions.md?ref=1d72d314480d3437345129ddf8b299c36e048f18", "patch": "@@ -214,11 +214,61 @@ fn diverges() -> ! {\n \n `panic!` is a macro, similar to `println!()` that we\u2019ve already seen. Unlike\n `println!()`, `panic!()` causes the current thread of execution to crash with\n-the given message.\n+the given message. Because this function will cause a crash, it will never\n+return, and so it has the type \u2018`!`\u2019, which is read \u2018diverges\u2019.\n \n-Because this function will cause a crash, it will never return, and so it has\n-the type \u2018`!`\u2019, which is read \u2018diverges\u2019. A diverging function can be used\n-as any type:\n+If you add a main function that calls `diverges()` and run it, you\u2019ll get\n+some output that looks like this:\n+\n+```text\n+thread \u2018<main>\u2019 panicked at \u2018This function never returns!\u2019, hello.rs:2\n+```\n+\n+If you want more information, you can get a backtrace by setting the\n+`RUST_BACKTRACE` environment variable:\n+\n+```text\n+$ RUST_BACKTRACE=1 ./diverges\n+thread '<main>' panicked at 'This function never returns!', hello.rs:2\n+stack backtrace:\n+   1:     0x7f402773a829 - sys::backtrace::write::h0942de78b6c02817K8r\n+   2:     0x7f402773d7fc - panicking::on_panic::h3f23f9d0b5f4c91bu9w\n+   3:     0x7f402773960e - rt::unwind::begin_unwind_inner::h2844b8c5e81e79558Bw\n+   4:     0x7f4027738893 - rt::unwind::begin_unwind::h4375279447423903650\n+   5:     0x7f4027738809 - diverges::h2266b4c4b850236beaa\n+   6:     0x7f40277389e5 - main::h19bb1149c2f00ecfBaa\n+   7:     0x7f402773f514 - rt::unwind::try::try_fn::h13186883479104382231\n+   8:     0x7f402773d1d8 - __rust_try\n+   9:     0x7f402773f201 - rt::lang_start::ha172a3ce74bb453aK5w\n+  10:     0x7f4027738a19 - main\n+  11:     0x7f402694ab44 - __libc_start_main\n+  12:     0x7f40277386c8 - <unknown>\n+  13:                0x0 - <unknown>\n+```\n+\n+`RUST_BACKTRACE` also works with Cargo\u2019s `run` command:\n+\n+```text\n+$ RUST_BACKTRACE=1 cargo run\n+     Running `target/debug/diverges`\n+thread '<main>' panicked at 'This function never returns!', hello.rs:2\n+stack backtrace:\n+   1:     0x7f402773a829 - sys::backtrace::write::h0942de78b6c02817K8r\n+   2:     0x7f402773d7fc - panicking::on_panic::h3f23f9d0b5f4c91bu9w\n+   3:     0x7f402773960e - rt::unwind::begin_unwind_inner::h2844b8c5e81e79558Bw\n+   4:     0x7f4027738893 - rt::unwind::begin_unwind::h4375279447423903650\n+   5:     0x7f4027738809 - diverges::h2266b4c4b850236beaa\n+   6:     0x7f40277389e5 - main::h19bb1149c2f00ecfBaa\n+   7:     0x7f402773f514 - rt::unwind::try::try_fn::h13186883479104382231\n+   8:     0x7f402773d1d8 - __rust_try\n+   9:     0x7f402773f201 - rt::lang_start::ha172a3ce74bb453aK5w\n+  10:     0x7f4027738a19 - main\n+  11:     0x7f402694ab44 - __libc_start_main\n+  12:     0x7f40277386c8 - <unknown>\n+  13:                0x0 - <unknown>\n+```\n+\n+A diverging function can be used as any type:\n \n ```should_panic\n # fn diverges() -> ! {"}, {"sha": "bedeab67420ccd3cdacd53c897848593a5daf59b", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d72d314480d3437345129ddf8b299c36e048f18/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d72d314480d3437345129ddf8b299c36e048f18/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=1d72d314480d3437345129ddf8b299c36e048f18", "patch": "@@ -112,7 +112,7 @@\n //!     //                  7\n //!     //          +-----------------+\n //!     //          |                 |\n-//!     //          v   1        2    |\n+//!     //          v   1        2    |  2\n //!     //          0 -----> 1 -----> 3 ---> 4\n //!     //          |        ^        ^      ^\n //!     //          |        | 1      |      |"}]}