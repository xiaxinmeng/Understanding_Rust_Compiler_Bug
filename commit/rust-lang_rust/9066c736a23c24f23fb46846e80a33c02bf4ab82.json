{"sha": "9066c736a23c24f23fb46846e80a33c02bf4ab82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNjZjNzM2YTIzYzI0ZjIzZmI0Njg0NmU4MGEzM2MwMmJmNGFiODI=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-11-20T20:29:00Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2021-02-06T08:04:50Z"}, "message": "BTreeMap: remove Ord bound where it is absent elsewhere", "tree": {"sha": "f471317a56b8e01b551bd383063b2e5082fa5d3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f471317a56b8e01b551bd383063b2e5082fa5d3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9066c736a23c24f23fb46846e80a33c02bf4ab82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9066c736a23c24f23fb46846e80a33c02bf4ab82", "html_url": "https://github.com/rust-lang/rust/commit/9066c736a23c24f23fb46846e80a33c02bf4ab82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9066c736a23c24f23fb46846e80a33c02bf4ab82/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfba499271ba53190a1d3647ff8f7202ec9ed6f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfba499271ba53190a1d3647ff8f7202ec9ed6f5", "html_url": "https://github.com/rust-lang/rust/commit/cfba499271ba53190a1d3647ff8f7202ec9ed6f5"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "ebdc73f9eab1c3605a0f1f2da96bf2ea44c27d5a", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=9066c736a23c24f23fb46846e80a33c02bf4ab82", "patch": "@@ -501,11 +501,8 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert!(a.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn clear(&mut self)\n-    where\n-        K: Ord,\n-    {\n-        *self = BTreeMap::new();\n+    pub fn clear(&mut self) {\n+        *self = BTreeMap { root: None, length: 0 };\n     }\n \n     /// Returns a reference to the value corresponding to the key.\n@@ -1226,10 +1223,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"map_into_keys_values\", issue = \"75294\")]\n-    pub fn into_keys(self) -> IntoKeys<K, V>\n-    where\n-        K: Ord,\n-    {\n+    pub fn into_keys(self) -> IntoKeys<K, V> {\n         IntoKeys { inner: self.into_iter() }\n     }\n \n@@ -1252,10 +1246,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"map_into_keys_values\", issue = \"75294\")]\n-    pub fn into_values(self) -> IntoValues<K, V>\n-    where\n-        K: Ord,\n-    {\n+    pub fn into_values(self) -> IntoValues<K, V> {\n         IntoValues { inner: self.into_iter() }\n     }\n }"}, {"sha": "1993c6e047d48775ae20811f9b9a10c7fc121ecc", "filename": "library/alloc/src/collections/btree/map/tests.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs?ref=9066c736a23c24f23fb46846e80a33c02bf4ab82", "patch": "@@ -1711,12 +1711,19 @@ fn test_ord_absence() {\n     fn map<K>(mut map: BTreeMap<K, ()>) {\n         map.is_empty();\n         map.len();\n+        map.clear();\n         map.iter();\n         map.iter_mut();\n         map.keys();\n         map.values();\n         map.values_mut();\n-        map.into_iter();\n+        if true {\n+            map.into_values();\n+        } else if true {\n+            map.into_iter();\n+        } else {\n+            map.into_keys();\n+        }\n     }\n \n     fn map_debug<K: Debug>(mut map: BTreeMap<K, ()>) {\n@@ -1726,7 +1733,13 @@ fn test_ord_absence() {\n         format!(\"{:?}\", map.keys());\n         format!(\"{:?}\", map.values());\n         format!(\"{:?}\", map.values_mut());\n-        format!(\"{:?}\", map.into_iter());\n+        if true {\n+            format!(\"{:?}\", map.into_iter());\n+        } else if true {\n+            format!(\"{:?}\", map.into_keys());\n+        } else {\n+            format!(\"{:?}\", map.into_values());\n+        }\n     }\n \n     fn map_clone<K: Clone>(mut map: BTreeMap<K, ()>) {"}, {"sha": "f7d8d14b86f15f050d0e73dba084b335749a43dc", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=9066c736a23c24f23fb46846e80a33c02bf4ab82", "patch": "@@ -457,10 +457,7 @@ impl<T> BTreeSet<T> {\n     /// assert!(v.is_empty());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn clear(&mut self)\n-    where\n-        T: Ord,\n-    {\n+    pub fn clear(&mut self) {\n         self.map.clear()\n     }\n "}, {"sha": "3762af7236af223122019bacb92b980061a82486", "filename": "library/alloc/src/collections/btree/set/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9066c736a23c24f23fb46846e80a33c02bf4ab82/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset%2Ftests.rs?ref=9066c736a23c24f23fb46846e80a33c02bf4ab82", "patch": "@@ -641,9 +641,10 @@ fn test_send() {\n \n #[allow(dead_code)]\n fn test_ord_absence() {\n-    fn set<K>(set: BTreeSet<K>) {\n+    fn set<K>(mut set: BTreeSet<K>) {\n         set.is_empty();\n         set.len();\n+        set.clear();\n         set.iter();\n         set.into_iter();\n     }"}]}