{"sha": "6b5731e7045ce5ea3209f957d5275a765f883f26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNTczMWU3MDQ1Y2U1ZWEzMjA5Zjk1N2Q1Mjc1YTc2NWY4ODNmMjY=", "commit": {"author": {"name": "Grahame Bowland", "email": "grahame@angrygoats.net", "date": "2012-04-14T18:21:57Z"}, "committer": {"name": "Grahame Bowland", "email": "grahame@angrygoats.net", "date": "2012-04-14T18:21:57Z"}, "message": "add inf/-inf/NaN parsing to float::from_str\n\nadd tests for \"inf\"/\"-inf\"/\"NaN\" conversion\nadd tests for \"-0.\" -> -0., \"0.\" -> 0.", "tree": {"sha": "fc56613c8d5affb92b5afb1817e38d227205f81f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc56613c8d5affb92b5afb1817e38d227205f81f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b5731e7045ce5ea3209f957d5275a765f883f26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b5731e7045ce5ea3209f957d5275a765f883f26", "html_url": "https://github.com/rust-lang/rust/commit/6b5731e7045ce5ea3209f957d5275a765f883f26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b5731e7045ce5ea3209f957d5275a765f883f26/comments", "author": null, "committer": null, "parents": [{"sha": "658b6a741b7d2bd01c7e14211b4299f12c0a3ebf", "url": "https://api.github.com/repos/rust-lang/rust/commits/658b6a741b7d2bd01c7e14211b4299f12c0a3ebf", "html_url": "https://github.com/rust-lang/rust/commit/658b6a741b7d2bd01c7e14211b4299f12c0a3ebf"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "7d0143da88802037014caa1def8a88d494dc393c", "filename": "src/libcore/float.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6b5731e7045ce5ea3209f957d5275a765f883f26/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5731e7045ce5ea3209f957d5275a765f883f26/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=6b5731e7045ce5ea3209f957d5275a765f883f26", "patch": "@@ -110,6 +110,7 @@ This function accepts strings such as\n * '', or, equivalently, '.' (understood as 0)\n * '5.'\n * '.5', or, equivalently,  '0.5'\n+* 'inf', '-inf', 'NaN'\n \n Leading and trailing whitespace are ignored.\n \n@@ -123,6 +124,14 @@ Leading and trailing whitespace are ignored.\n where `n` is the floating-point number represented by `[num]`.\n \"]\n fn from_str(num: str) -> option<float> {\n+   if num == \"inf\" {\n+       ret some(infinity);\n+   } else if num == \"-inf\" {\n+       ret some(neg_infinity);\n+   } else if num == \"NaN\" {\n+       ret some(NaN);\n+   }\n+\n    let mut pos = 0u;               //Current byte position in the string.\n                                    //Used to walk the string in O(n).\n    let len = str::len(num);        //Length of the string, in bytes.\n@@ -301,6 +310,15 @@ fn test_from_str() {\n    assert from_str(\"-.5\") == some(-0.5);\n    assert from_str(\"-.5\") == some(-0.5);\n    assert from_str(\"-5\") == some(-5.);\n+   assert from_str(\"-0\") == some(-0.);\n+   assert from_str(\"0\") == some(0.);\n+   assert from_str(\"inf\") == some(infinity);\n+   assert from_str(\"-inf\") == some(neg_infinity);\n+   // note: NaN != NaN, hence this slightly complex test\n+   alt from_str(\"NaN\") {\n+       some(f) { assert is_NaN(f); }\n+       none { fail; }\n+   }\n \n    assert from_str(\"\") == none;\n    assert from_str(\"x\") == none;"}]}