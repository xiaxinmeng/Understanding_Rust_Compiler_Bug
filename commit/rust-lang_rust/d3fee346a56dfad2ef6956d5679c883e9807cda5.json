{"sha": "d3fee346a56dfad2ef6956d5679c883e9807cda5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZmVlMzQ2YTU2ZGZhZDJlZjY5NTZkNTY3OWM4ODNlOTgwN2NkYTU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-28T11:15:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-28T11:15:38Z"}, "message": "Rollup merge of #48497 - scottmcm:more-restricted-termination, r=nikomatsakis\n\nRestrict the Termination impls to simplify stabilization\n\nMake a minimal commitment in preparation for stabilization.  More impls, or broader ones, are likely in future, but are not necessary at this time and are more controversial.\n\ncc https://github.com/rust-lang/rust/issues/48453#issuecomment-368155082\nr? @nikomatsakis", "tree": {"sha": "45f09be834ca8b6ae00299cc6ea8816b6188c6c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45f09be834ca8b6ae00299cc6ea8816b6188c6c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3fee346a56dfad2ef6956d5679c883e9807cda5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJalo9aCRBK7hj4Ov3rIwAAdHIIAAi8ZNkAhqWfDQLZjgW6jjaI\nur2G5nmly2WNOCOmUbQnQtExWrIsz+NsS4d/su2c3ZIaK+S2rOhKrzPwBeqSvSIn\njYCTcLb8IkQBoTWbIYt3zla0Dk8D2juIQCELu4z6C7TRSCQlW/00IpLy+7uKPNmu\nqPwcEk5Yz2LCNmbXNEzISScNn5nuDb8etNAqwX2p2GA3H3Ma2WIJMp+lN6j+pyZe\no8vuivX3UPgnrVD5usz37vefddUqyuVHDy/ytEK2BSMiUSE+GcdIIL9escHTzc+W\n3YxmCA0al8Bgf6PdCaEuLuYRYbwtLsL3OVHGyoQghcIK7ZwXy7qiggKjyxw3NDk=\n=dU6O\n-----END PGP SIGNATURE-----\n", "payload": "tree 45f09be834ca8b6ae00299cc6ea8816b6188c6c2\nparent a3fecfb8e95e6a822c94e55f8729edb040dd1467\nparent e20f7b2ea73fbe0077a565c692a3a6f2e20ff4e3\nauthor kennytm <kennytm@gmail.com> 1519816538 +0800\ncommitter GitHub <noreply@github.com> 1519816538 +0800\n\nRollup merge of #48497 - scottmcm:more-restricted-termination, r=nikomatsakis\n\nRestrict the Termination impls to simplify stabilization\n\nMake a minimal commitment in preparation for stabilization.  More impls, or broader ones, are likely in future, but are not necessary at this time and are more controversial.\n\ncc https://github.com/rust-lang/rust/issues/48453#issuecomment-368155082\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3fee346a56dfad2ef6956d5679c883e9807cda5", "html_url": "https://github.com/rust-lang/rust/commit/d3fee346a56dfad2ef6956d5679c883e9807cda5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3fee346a56dfad2ef6956d5679c883e9807cda5/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3fecfb8e95e6a822c94e55f8729edb040dd1467", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3fecfb8e95e6a822c94e55f8729edb040dd1467", "html_url": "https://github.com/rust-lang/rust/commit/a3fecfb8e95e6a822c94e55f8729edb040dd1467"}, {"sha": "e20f7b2ea73fbe0077a565c692a3a6f2e20ff4e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e20f7b2ea73fbe0077a565c692a3a6f2e20ff4e3", "html_url": "https://github.com/rust-lang/rust/commit/e20f7b2ea73fbe0077a565c692a3a6f2e20ff4e3"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "e5fc33e241c896c653fc919cb7d55fb6d96a82f8", "filename": "src/libstd/process.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d3fee346a56dfad2ef6956d5679c883e9807cda5/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3fee346a56dfad2ef6956d5679c883e9807cda5/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=d3fee346a56dfad2ef6956d5679c883e9807cda5", "patch": "@@ -1080,6 +1080,15 @@ impl fmt::Display for ExitStatus {\n     }\n }\n \n+/// This is ridiculously unstable, as it's a completely-punted-upon part\n+/// of the `?`-in-`main` RFC.  It's here only to allow experimenting with\n+/// returning a code directly from main.  It will definitely change\n+/// drastically before being stabilized, if it doesn't just get deleted.\n+#[doc(hidden)]\n+#[derive(Clone, Copy, Debug)]\n+#[unstable(feature = \"process_exitcode_placeholder\", issue = \"43301\")]\n+pub struct ExitCode(pub i32);\n+\n impl Child {\n     /// Forces the child to exit. This is equivalent to sending a\n     /// SIGKILL on unix platforms.\n@@ -1428,7 +1437,7 @@ impl Termination for () {\n }\n \n #[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n-impl<T: Termination, E: fmt::Debug> Termination for Result<T, E> {\n+impl<E: fmt::Debug> Termination for Result<(), E> {\n     fn report(self) -> i32 {\n         match self {\n             Ok(val) => val.report(),\n@@ -1442,20 +1451,23 @@ impl<T: Termination, E: fmt::Debug> Termination for Result<T, E> {\n \n #[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n impl Termination for ! {\n-    fn report(self) -> i32 { unreachable!(); }\n+    fn report(self) -> i32 { self }\n }\n \n #[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n-impl Termination for bool {\n+impl<E: fmt::Debug> Termination for Result<!, E> {\n     fn report(self) -> i32 {\n-        if self { exit::SUCCESS } else { exit::FAILURE }\n+        let Err(err) = self;\n+        eprintln!(\"Error: {:?}\", err);\n+        exit::FAILURE\n     }\n }\n \n #[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n-impl Termination for i32 {\n+impl Termination for ExitCode {\n     fn report(self) -> i32 {\n-        self\n+        let ExitCode(code) = self;\n+        code\n     }\n }\n "}, {"sha": "30ecc4e89372b461736b14eec3301813092f726a", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-exitcode.rs", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3fee346a56dfad2ef6956d5679c883e9807cda5/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3fee346a56dfad2ef6956d5679c883e9807cda5/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs?ref=d3fee346a56dfad2ef6956d5679c883e9807cda5", "patch": "@@ -9,7 +9,10 @@\n // except according to those terms.\n \n #![feature(termination_trait)]\n+#![feature(process_exitcode_placeholder)]\n \n-fn main() -> i32 {\n-    0\n+use std::process::ExitCode;\n+\n+fn main() -> ExitCode {\n+    ExitCode(0)\n }", "previous_filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-i32.rs"}]}