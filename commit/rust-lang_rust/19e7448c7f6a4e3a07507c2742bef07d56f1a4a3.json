{"sha": "19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZTc0NDhjN2Y2YTRlM2EwNzUwN2MyNzQyYmVmMDdkNTZmMWE0YTM=", "commit": {"author": {"name": "Marcel Hellwig", "email": "github@cookiesoft.de", "date": "2021-05-03T14:21:27Z"}, "committer": {"name": "Marcel Hellwig", "email": "github@cookiesoft.de", "date": "2021-05-03T14:25:05Z"}, "message": "move PATTERN_METHODS table directly into file\n\nalso removed rustfmt::skip", "tree": {"sha": "ed447ac696291399bfd0d01b4d8f985f92ce6216", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed447ac696291399bfd0d01b4d8f985f92ce6216"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "html_url": "https://github.com/rust-lang/rust/commit/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3/comments", "author": {"login": "hellow554", "id": 921462, "node_id": "MDQ6VXNlcjkyMTQ2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/921462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellow554", "html_url": "https://github.com/hellow554", "followers_url": "https://api.github.com/users/hellow554/followers", "following_url": "https://api.github.com/users/hellow554/following{/other_user}", "gists_url": "https://api.github.com/users/hellow554/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellow554/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellow554/subscriptions", "organizations_url": "https://api.github.com/users/hellow554/orgs", "repos_url": "https://api.github.com/users/hellow554/repos", "events_url": "https://api.github.com/users/hellow554/events{/privacy}", "received_events_url": "https://api.github.com/users/hellow554/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hellow554", "id": 921462, "node_id": "MDQ6VXNlcjkyMTQ2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/921462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellow554", "html_url": "https://github.com/hellow554", "followers_url": "https://api.github.com/users/hellow554/followers", "following_url": "https://api.github.com/users/hellow554/following{/other_user}", "gists_url": "https://api.github.com/users/hellow554/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellow554/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellow554/subscriptions", "organizations_url": "https://api.github.com/users/hellow554/orgs", "repos_url": "https://api.github.com/users/hellow554/repos", "events_url": "https://api.github.com/users/hellow554/events{/privacy}", "received_events_url": "https://api.github.com/users/hellow554/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0808998481402cb1cd502ad6aa54e253840efc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0808998481402cb1cd502ad6aa54e253840efc6", "html_url": "https://github.com/rust-lang/rust/commit/c0808998481402cb1cd502ad6aa54e253840efc6"}], "stats": {"total": 47, "additions": 23, "deletions": 24}, "files": [{"sha": "0b1b6304defcb9246352a05df39c46239f23a312", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "patch": "@@ -2189,29 +2189,6 @@ const TRAIT_METHODS: [ShouldImplTraitCase; 30] = [\n     ShouldImplTraitCase::new(\"std::ops::Sub\", \"sub\",  2,  FN_HEADER,  SelfKind::Value,  OutType::Any, true),\n ];\n \n-#[rustfmt::skip]\n-const PATTERN_METHODS: [(&str, usize); 19] = [\n-    (\"contains\", 1),\n-    (\"starts_with\", 1),\n-    (\"ends_with\", 1),\n-    (\"find\", 1),\n-    (\"rfind\", 1),\n-    (\"split\", 1),\n-    (\"rsplit\", 1),\n-    (\"split_terminator\", 1),\n-    (\"rsplit_terminator\", 1),\n-    (\"splitn\", 2),\n-    (\"rsplitn\", 2),\n-    (\"matches\", 1),\n-    (\"rmatches\", 1),\n-    (\"match_indices\", 1),\n-    (\"rmatch_indices\", 1),\n-    (\"strip_prefix\", 1),\n-    (\"strip_suffix\", 1),\n-    (\"trim_start_matches\", 1),\n-    (\"trim_end_matches\", 1),\n-];\n-\n #[derive(Clone, Copy, PartialEq, Debug)]\n enum SelfKind {\n     Value,"}, {"sha": "d313a3db479de6d51c5797985804403272cf32f0", "filename": "clippy_lints/src/methods/single_char_pattern.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs?ref=19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "patch": "@@ -9,9 +9,31 @@ use rustc_span::symbol::Symbol;\n \n use super::SINGLE_CHAR_PATTERN;\n \n+const PATTERN_METHODS: [(&str, usize); 19] = [\n+    (\"contains\", 1),\n+    (\"starts_with\", 1),\n+    (\"ends_with\", 1),\n+    (\"find\", 1),\n+    (\"rfind\", 1),\n+    (\"split\", 1),\n+    (\"rsplit\", 1),\n+    (\"split_terminator\", 1),\n+    (\"rsplit_terminator\", 1),\n+    (\"splitn\", 2),\n+    (\"rsplitn\", 2),\n+    (\"matches\", 1),\n+    (\"rmatches\", 1),\n+    (\"match_indices\", 1),\n+    (\"rmatch_indices\", 1),\n+    (\"strip_prefix\", 1),\n+    (\"strip_suffix\", 1),\n+    (\"trim_start_matches\", 1),\n+    (\"trim_end_matches\", 1),\n+];\n+\n /// lint for length-1 `str`s for methods in `PATTERN_METHODS`\n pub(super) fn check(cx: &LateContext<'_>, _expr: &hir::Expr<'_>, method_name: Symbol, args: &[hir::Expr<'_>]) {\n-    for &(method, pos) in &crate::methods::PATTERN_METHODS {\n+    for &(method, pos) in &PATTERN_METHODS {\n         if_chain! {\n             if let ty::Ref(_, ty, _) = cx.typeck_results().expr_ty_adjusted(&args[0]).kind();\n             if *ty.kind() == ty::Str;"}]}