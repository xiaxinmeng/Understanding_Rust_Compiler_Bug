{"sha": "93b969003d0a9448d4207d9d5df9dde63f9444be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYjk2OTAwM2QwYTk0NDhkNDIwN2Q5ZDVkZjlkZGU2M2Y5NDQ0YmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-18T11:11:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-18T11:11:32Z"}, "message": "Some docs", "tree": {"sha": "14652e5a5e5c81712dd681495801d99e1eef93fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14652e5a5e5c81712dd681495801d99e1eef93fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93b969003d0a9448d4207d9d5df9dde63f9444be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93b969003d0a9448d4207d9d5df9dde63f9444be", "html_url": "https://github.com/rust-lang/rust/commit/93b969003d0a9448d4207d9d5df9dde63f9444be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93b969003d0a9448d4207d9d5df9dde63f9444be/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e1207dac8eb9cc56a72ee685bd4f143683d2bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e1207dac8eb9cc56a72ee685bd4f143683d2bb", "html_url": "https://github.com/rust-lang/rust/commit/59e1207dac8eb9cc56a72ee685bd4f143683d2bb"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "e25d54a0d6e724ebcba400b51cbd9c8acd3bcc07", "filename": "crates/ra_lsp_server/src/bin/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fbin%2Fmain.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,4 +1,6 @@\n-//! `ra_lsp_server` binary\n+//! Driver for rust-analyzer.\n+//!\n+//! Based on cli flags, either spawns an LSP server, or runs a batch analysis\n mod args;\n \n use lsp_server::Connection;"}, {"sha": "c9738d1010b8c7736a75b825b16c0feacd8a9eb9", "filename": "crates/ra_lsp_server/src/cli.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcli.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! Various batch processing tasks, intended primarily for debugging.\n \n mod load_cargo;\n mod analysis_stats;"}, {"sha": "91855e59252f944f99a4620263d39257771129d9", "filename": "crates/ra_lsp_server/src/cli/analysis_bench.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fanalysis_bench.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! Benchmark operations like highlighting or goto definition.\n \n use std::{\n     path::{Path, PathBuf},"}, {"sha": "99ab6e443723e3edc821bf7ff4373d1ef08cb19a", "filename": "crates/ra_lsp_server/src/cli/analysis_stats.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,4 +1,5 @@\n-//! FIXME: write short doc here\n+//! Fully type-check project and print various stats, like the number of type\n+//! errors.\n \n use std::{collections::HashSet, fmt::Write, path::Path, time::Instant};\n "}, {"sha": "8cd08ecb6f446a702bbb1bd318d629fa58bf57aa", "filename": "crates/ra_lsp_server/src/cli/load_cargo.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcli%2Fload_cargo.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,26 +1,28 @@\n-//! FIXME: write short doc here\n+//! Loads a Cargo project into a static instance of analysis, without support\n+//! for incorporating changes.\n \n-use std::{collections::HashSet, path::Path};\n+use std::path::Path;\n \n+use anyhow::Result;\n use crossbeam_channel::{unbounded, Receiver};\n use ra_db::{CrateGraph, FileId, SourceRootId};\n use ra_ide::{AnalysisChange, AnalysisHost, FeatureFlags};\n use ra_project_model::{get_rustc_cfg_options, PackageRoot, ProjectWorkspace};\n use ra_vfs::{RootEntry, Vfs, VfsChange, VfsTask, Watch};\n-use rustc_hash::FxHashMap;\n+use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::vfs_glob::RustPackageFilterBuilder;\n \n-use anyhow::Result;\n-\n fn vfs_file_to_id(f: ra_vfs::VfsFile) -> FileId {\n     FileId(f.0)\n }\n fn vfs_root_to_id(r: ra_vfs::VfsRoot) -> SourceRootId {\n     SourceRootId(r.0)\n }\n \n-pub fn load_cargo(root: &Path) -> Result<(AnalysisHost, FxHashMap<SourceRootId, PackageRoot>)> {\n+pub(crate) fn load_cargo(\n+    root: &Path,\n+) -> Result<(AnalysisHost, FxHashMap<SourceRootId, PackageRoot>)> {\n     let root = std::env::current_dir()?.join(root);\n     let ws = ProjectWorkspace::discover(root.as_ref(), &Default::default())?;\n     let project_roots = ws.to_roots();\n@@ -74,7 +76,7 @@ pub fn load_cargo(root: &Path) -> Result<(AnalysisHost, FxHashMap<SourceRootId,\n     Ok((host, source_roots))\n }\n \n-pub fn load(\n+pub(crate) fn load(\n     source_roots: &FxHashMap<SourceRootId, PackageRoot>,\n     crate_graph: CrateGraph,\n     vfs: &mut Vfs,\n@@ -86,7 +88,7 @@ pub fn load(\n     analysis_change.set_crate_graph(crate_graph);\n \n     // wait until Vfs has loaded all roots\n-    let mut roots_loaded = HashSet::new();\n+    let mut roots_loaded = FxHashSet::default();\n     for task in receiver {\n         vfs.handle_task(task);\n         let mut done = false;"}, {"sha": "0dae30e46ec456367a9d702e9063f1e3e60eaa32", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,10 +1,13 @@\n //! Implementation of the LSP for rust-analyzer.\n //!\n-//! This crate takes Rust-specific analysis results from ra_ide and\n-//! translates into LSP types.\n+//! This crate takes Rust-specific analysis results from ra_ide and translates\n+//! into LSP types.\n //!\n //! It also is the root of all state. `world` module defines the bulk of the\n //! state, and `main_loop` module defines the rules for modifying it.\n+//!\n+//! The `cli` submodule implements some batch-processing analysis, primarily as\n+//! a debugging aid.\n #![recursion_limit = \"512\"]\n \n pub mod cli;"}, {"sha": "91b33f94e8681d3664ffa05621695bf6d8de1625", "filename": "crates/ra_lsp_server/src/vfs_glob.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fvfs_glob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b969003d0a9448d4207d9d5df9dde63f9444be/crates%2Fra_lsp_server%2Fsrc%2Fvfs_glob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fvfs_glob.rs?ref=93b969003d0a9448d4207d9d5df9dde63f9444be", "patch": "@@ -1,4 +1,4 @@\n-//! `ra_vfs_glob` crate implements exclusion rules for vfs.\n+//! Exclusion rules for vfs.\n //!\n //! By default, we include only `.rs` files, and skip some know offenders like\n //! `/target` or `/node_modules` altogether."}]}