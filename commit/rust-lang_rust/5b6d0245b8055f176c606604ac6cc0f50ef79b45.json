{"sha": "5b6d0245b8055f176c606604ac6cc0f50ef79b45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNmQwMjQ1YjgwNTVmMTc2YzYwNjYwNGFjNmNjMGY1MGVmNzliNDU=", "commit": {"author": {"name": "Tristan Storch", "email": "tstorch@math.uni-bielefeld.de", "date": "2015-01-13T16:45:04Z"}, "committer": {"name": "Tristan Storch", "email": "tstorch@math.uni-bielefeld.de", "date": "2015-01-14T15:34:45Z"}, "message": "Small Readability Update", "tree": {"sha": "d66665e777256a6354c40f1d017e9023dfc1f88d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d66665e777256a6354c40f1d017e9023dfc1f88d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6d0245b8055f176c606604ac6cc0f50ef79b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6d0245b8055f176c606604ac6cc0f50ef79b45", "html_url": "https://github.com/rust-lang/rust/commit/5b6d0245b8055f176c606604ac6cc0f50ef79b45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6d0245b8055f176c606604ac6cc0f50ef79b45/comments", "author": {"login": "tstorch", "id": 4622615, "node_id": "MDQ6VXNlcjQ2MjI2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4622615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tstorch", "html_url": "https://github.com/tstorch", "followers_url": "https://api.github.com/users/tstorch/followers", "following_url": "https://api.github.com/users/tstorch/following{/other_user}", "gists_url": "https://api.github.com/users/tstorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tstorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tstorch/subscriptions", "organizations_url": "https://api.github.com/users/tstorch/orgs", "repos_url": "https://api.github.com/users/tstorch/repos", "events_url": "https://api.github.com/users/tstorch/events{/privacy}", "received_events_url": "https://api.github.com/users/tstorch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tstorch", "id": 4622615, "node_id": "MDQ6VXNlcjQ2MjI2MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4622615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tstorch", "html_url": "https://github.com/tstorch", "followers_url": "https://api.github.com/users/tstorch/followers", "following_url": "https://api.github.com/users/tstorch/following{/other_user}", "gists_url": "https://api.github.com/users/tstorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tstorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tstorch/subscriptions", "organizations_url": "https://api.github.com/users/tstorch/orgs", "repos_url": "https://api.github.com/users/tstorch/repos", "events_url": "https://api.github.com/users/tstorch/events{/privacy}", "received_events_url": "https://api.github.com/users/tstorch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e94a9f033eb79b3b4fb037722366644650e8e16c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e94a9f033eb79b3b4fb037722366644650e8e16c", "html_url": "https://github.com/rust-lang/rust/commit/e94a9f033eb79b3b4fb037722366644650e8e16c"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "cf8a96f4396491348720c14824387bc9590efb7e", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5b6d0245b8055f176c606604ac6cc0f50ef79b45/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6d0245b8055f176c606604ac6cc0f50ef79b45/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=5b6d0245b8055f176c606604ac6cc0f50ef79b45", "patch": "@@ -678,18 +678,15 @@ struct TwoWaySearcher {\n */\n impl TwoWaySearcher {\n     fn new(needle: &[u8]) -> TwoWaySearcher {\n-        let (crit_pos1, period1) = TwoWaySearcher::maximal_suffix(needle, false);\n-        let (crit_pos2, period2) = TwoWaySearcher::maximal_suffix(needle, true);\n-\n-        let crit_pos;\n-        let period;\n-        if crit_pos1 > crit_pos2 {\n-            crit_pos = crit_pos1;\n-            period = period1;\n-        } else {\n-            crit_pos = crit_pos2;\n-            period = period2;\n-        }\n+        let (crit_pos_false, period_false) = TwoWaySearcher::maximal_suffix(needle, false);\n+        let (crit_pos_true, period_true) = TwoWaySearcher::maximal_suffix(needle, true);\n+\n+        let (crit_pos, period) =\n+            if crit_pos_false > crit_pos_true {\n+                (crit_pos_false, period_false)\n+            } else {\n+                (crit_pos_true, period_true)\n+            };\n \n         // This isn't in the original algorithm, as far as I'm aware.\n         let byteset = needle.iter()"}]}