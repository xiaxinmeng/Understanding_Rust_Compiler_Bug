{"sha": "365f17483800a9c688bc8606959a9121b8e855a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NWYxNzQ4MzgwMGE5YzY4OGJjODYwNjk1OWE5MTIxYjhlODU1YTY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-03T21:41:53Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-03T22:02:22Z"}, "message": "Attempt to fix os::args errors on various platforms.", "tree": {"sha": "3b509a7f60ea0f28d7b7382ea1847001e0e6a0cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b509a7f60ea0f28d7b7382ea1847001e0e6a0cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/365f17483800a9c688bc8606959a9121b8e855a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/365f17483800a9c688bc8606959a9121b8e855a6", "html_url": "https://github.com/rust-lang/rust/commit/365f17483800a9c688bc8606959a9121b8e855a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/365f17483800a9c688bc8606959a9121b8e855a6/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b7a7707f7baead4e569c9d3ec2fe28b9486ac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b7a7707f7baead4e569c9d3ec2fe28b9486ac9", "html_url": "https://github.com/rust-lang/rust/commit/72b7a7707f7baead4e569c9d3ec2fe28b9486ac9"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "68571da3a1e9dee022e9f835d8c06fa5c763f3ed", "filename": "src/libcore/os.rs", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/365f17483800a9c688bc8606959a9121b8e855a6/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365f17483800a9c688bc8606959a9121b8e855a6/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=365f17483800a9c688bc8606959a9121b8e855a6", "patch": "@@ -32,6 +32,8 @@ use task::TaskBuilder;\n // FIXME: move these to str perhaps? #2620\n \n extern mod rustrt {\n+    fn rust_get_argc() -> c_int;\n+    fn rust_get_argv() -> **c_char;\n     fn rust_getcwd() -> ~str;\n     fn rust_path_is_dir(path: *libc::c_char) -> c_int;\n     fn rust_path_exists(path: *libc::c_char) -> c_int;\n@@ -732,6 +734,14 @@ pub fn set_exit_status(code: int) {\n     rustrt::rust_set_exit_status(code as libc::intptr_t);\n }\n \n+unsafe fn load_argc_and_argv(argc: c_int, argv: **c_char) -> ~[~str] {\n+    let mut args = ~[];\n+    for uint::range(0, argc as uint) |i| {\n+        vec::push(&mut args, str::raw::from_c_str(*argv.offset(i)));\n+    }\n+    return args;\n+}\n+\n /**\n  * Returns the command line arguments\n  *\n@@ -740,23 +750,20 @@ pub fn set_exit_status(code: int) {\n #[cfg(target_os = \"macos\")]\n fn real_args() -> ~[~str] {\n     unsafe {\n-        let (argc, argv) = (*_NSGetArgc() as uint, *_NSGetArgv());\n-        let mut args = ~[];\n-        for uint::range(0, argc) |i| {\n-            vec::push(&mut args, str::raw::from_c_str(*argv.offset(i)));\n-        }\n-        return args;\n+        let (argc, argv) = (*_NSGetArgc() as c_int,\n+                            *_NSGetArgv() as **c_char);\n+        load_argc_and_argv(argc, argv)\n     }\n }\n \n #[cfg(target_os = \"linux\")]\n-fn real_args() -> ~[~str] {\n-    fail    // Needs implementing.\n-}\n-\n #[cfg(target_os = \"freebsd\")]\n fn real_args() -> ~[~str] {\n-    fail    // Needs implementing.\n+    unsafe {\n+        let argc = rustrt::rust_get_argc();\n+        let argv = rustrt::rust_get_argv();\n+        load_argc_and_argv(argc, argv)\n+    }\n }\n \n #[cfg(windows)]\n@@ -775,8 +782,9 @@ fn real_args() -> ~[~str] {\n             while *ptr.offset(len) != 0 { len += 1; }\n \n             // Push it onto the list.\n-            vec::push(&mut args, vec::raw::form_slice(ptr, len,\n-                                                      str::from_utf16));\n+            vec::push(&mut args,\n+                      vec::raw::buf_as_slice(ptr, len,\n+                                             str::from_utf16));\n         }\n     }\n "}, {"sha": "11e65347f11bc618883a2dc9d13fb3ee26953613", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=365f17483800a9c688bc8606959a9121b8e855a6", "patch": "@@ -86,7 +86,7 @@ rust_start(uintptr_t main_fn, int argc, char **argv, void* crate_map) {\n     // Load runtime configuration options from the environment.\n     // FIXME #1497: Should provide a way to get these from the command\n     // line as well.\n-    rust_env *env = load_env();\n+    rust_env *env = load_env(argc, argv);\n \n     global_crate_map = crate_map;\n "}, {"sha": "5baa95c7323f401cc01f2479acec389a0401cfec", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=365f17483800a9c688bc8606959a9121b8e855a6", "patch": "@@ -588,6 +588,18 @@ rust_num_threads() {\n     return task->kernel->env->num_sched_threads;\n }\n \n+extern \"C\" CDECL int\n+rust_get_argc() {\n+    rust_task *task = rust_get_current_task();\n+    return task->kernel->env->argc;\n+}\n+\n+extern \"C\" CDECL char**\n+rust_get_argv() {\n+    rust_task *task = rust_get_current_task();\n+    return task->kernel->env->argv;\n+}\n+\n extern \"C\" CDECL rust_sched_id\n rust_new_sched(uintptr_t threads) {\n     rust_task *task = rust_get_current_task();"}, {"sha": "4e653c8f9e63c6cd4e8f6dd97e7d766efa86fb6d", "filename": "src/rt/rust_env.cpp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust_env.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust_env.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_env.cpp?ref=365f17483800a9c688bc8606959a9121b8e855a6", "patch": "@@ -107,7 +107,7 @@ copyenv(const char* name) {\n }\n \n rust_env*\n-load_env() {\n+load_env(int argc, char **argv) {\n     rust_env *env = (rust_env*)malloc(sizeof(rust_env));\n \n     env->num_sched_threads = (size_t)get_num_threads();\n@@ -118,7 +118,8 @@ load_env() {\n     env->detailed_leaks = getenv(DETAILED_LEAKS) != NULL;\n     env->rust_seed = copyenv(RUST_SEED);\n     env->poison_on_free = getenv(RUST_POISON_ON_FREE) != NULL;\n-\n+    env->argc = argc;\n+    env->argv = argv;\n     return env;\n }\n "}, {"sha": "0e3af9eae60cfaf5c47efb20c41324913479a212", "filename": "src/rt/rust_env.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust_env.h", "raw_url": "https://github.com/rust-lang/rust/raw/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frust_env.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_env.h?ref=365f17483800a9c688bc8606959a9121b8e855a6", "patch": "@@ -13,9 +13,11 @@ struct rust_env {\n     bool detailed_leaks;\n     char* rust_seed;\n     bool poison_on_free;\n+    int argc;\n+    char **argv;\n };\n \n-rust_env* load_env();\n+rust_env* load_env(int argc, char **argv);\n void free_env(rust_env *rust_env);\n \n #endif"}, {"sha": "7412f06d8cd87c913115cb90d65b9203fa73828e", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/365f17483800a9c688bc8606959a9121b8e855a6/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=365f17483800a9c688bc8606959a9121b8e855a6", "patch": "@@ -31,6 +31,8 @@ rand_new_seeded2\n rand_next\n rand_seed\n rust_get_sched_id\n+rust_get_argc\n+rust_get_argv\n rust_new_sched\n rust_new_task_in_sched\n rust_num_threads"}]}