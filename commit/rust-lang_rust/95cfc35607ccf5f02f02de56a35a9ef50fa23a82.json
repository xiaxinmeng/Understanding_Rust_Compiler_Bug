{"sha": "95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1Y2ZjMzU2MDdjY2Y1ZjAyZjAyZGU1NmEzNWE5ZWY1MGZhMjNhODI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-09-26T05:48:16Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-02T00:23:36Z"}, "message": "Put slicing syntax behind a feature gate.\n\n[breaking-change]\n\nIf you are using slicing syntax you will need to add #![feature(slicing_syntax)] to your crate.", "tree": {"sha": "85cb0f79ec42469ac7203cdcc09ffee5247cded7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85cb0f79ec42469ac7203cdcc09ffee5247cded7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "html_url": "https://github.com/rust-lang/rust/commit/95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df2f1fa7680a86ba228f004e7de731e91a1df1fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/df2f1fa7680a86ba228f004e7de731e91a1df1fe", "html_url": "https://github.com/rust-lang/rust/commit/df2f1fa7680a86ba228f004e7de731e91a1df1fe"}], "stats": {"total": 148, "additions": 105, "deletions": 43}, "files": [{"sha": "1e5e3ebdb3410e531a5e3fe951dfe2752c76447c", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![crate_type = \"bin\"]\n-#![feature(phase)]\n+#![feature(phase, slicing_syntax)]\n \n #![deny(warnings)]\n "}, {"sha": "c3b61f6435c493b4f7de4dea15b5f64b8f78d8a0", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -3828,7 +3828,7 @@ type signature of `print`, and the cast expression in `main`.\n Within the body of an item that has type parameter declarations, the names of\n its type parameters are types:\n \n-```\n+```ignore\n fn map<A: Clone, B: Clone>(f: |A| -> B, xs: &[A]) -> Vec<B> {\n     if xs.len() == 0 {\n        return vec![];"}, {"sha": "4d0aaf8390707bfd847ed7d1431da1b6c4be961c", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -19,8 +19,9 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n+#![allow(unknown_features)]\n #![feature(macro_rules, managed_boxes, default_type_params, phase, globs)]\n-#![feature(unsafe_destructor, import_shadowing)]\n+#![feature(unsafe_destructor, import_shadowing, slicing_syntax)]\n #![no_std]\n \n #[phase(plugin, link)] extern crate core;"}, {"sha": "60692ceb401bccccf8b45179bd790ed51c7086ad", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -51,9 +51,12 @@\n //! interval `[a, b)`:\n //!\n //! ```rust\n-//! let numbers = [0i, 1i, 2i];\n-//! let last_numbers = numbers[1..3];\n-//! // last_numbers is now &[1i, 2i]\n+//! #![feature(slicing_syntax)]\n+//! fn main() {\n+//!     let numbers = [0i, 1i, 2i];\n+//!     let last_numbers = numbers[1..3];\n+//!     // last_numbers is now &[1i, 2i]\n+//! }\n //! ```\n //!\n //! ## Implementations of other traits"}, {"sha": "206e392f6644b8af244db3b4adad2d5fe7019f9e", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -160,7 +160,7 @@ impl String {\n \n         if i > 0 {\n             unsafe {\n-                res.as_mut_vec().push_all(v.[..i])\n+                res.as_mut_vec().push_all(v[..i])\n             };\n         }\n \n@@ -177,7 +177,7 @@ impl String {\n             macro_rules! error(() => ({\n                 unsafe {\n                     if subseqidx != i_ {\n-                        res.as_mut_vec().push_all(vv[subseqidx..i_]);\n+                        res.as_mut_vec().push_all(v[subseqidx..i_]);\n                     }\n                     subseqidx = i;\n                     res.as_mut_vec().push_all(REPLACEMENT);"}, {"sha": "4890dc2bb739350585255f97f93568d05dde091c", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -57,8 +57,9 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![no_std]\n+#![allow(unknown_features)]\n #![feature(globs, intrinsics, lang_items, macro_rules, managed_boxes, phase)]\n-#![feature(simd, unsafe_destructor)]\n+#![feature(simd, unsafe_destructor, slicing_syntax)]\n #![deny(missing_doc)]\n \n mod macros;"}, {"sha": "422c496995b5ec243859adb30229411c6adb0ba5", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -684,7 +684,7 @@ pub trait IndexMut<Index, Result> {\n  * A trivial implementation of `Slice`. When `Foo[..Foo]` happens, it ends up\n  * calling `slice_to`, and therefore, `main` prints `Slicing!`.\n  *\n- * ```\n+ * ```ignore\n  * struct Foo;\n  *\n  * impl ::core::ops::Slice<Foo, Foo> for Foo {\n@@ -749,7 +749,7 @@ pub trait Slice<Idx, Sized? Result> for Sized? {\n  * A trivial implementation of `SliceMut`. When `Foo[Foo..]` happens, it ends up\n  * calling `slice_from_mut`, and therefore, `main` prints `Slicing!`.\n  *\n- * ```\n+ * ```ignore\n  * struct Foo;\n  *\n  * impl ::core::ops::SliceMut<Foo, Foo> for Foo {\n@@ -771,7 +771,7 @@ pub trait Slice<Idx, Sized? Result> for Sized? {\n  *     }\n  * }\n  *\n- * fn main() {\n+ * pub fn main() {\n  *     Foo[mut Foo..];\n  * }\n  * ```"}, {"sha": "2ff0fd2ef004e90736f1fc8ba1f11b8cdc979ba1", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -814,13 +814,13 @@ impl<'a,T> MutableSlice<'a, T> for &'a mut [T] {\n     #[inline]\n     fn tail_mut(self) -> &'a mut [T] {\n         let len = self.len();\n-        self.slice_mut(1, len)\n+        self[mut 1..len]\n     }\n \n     #[inline]\n     fn init_mut(self) -> &'a mut [T] {\n         let len = self.len();\n-        self.slice_mut(0, len - 1)\n+        self[mut 0..len - 1]\n     }\n \n     #[inline]"}, {"sha": "5f31ed35f1b60f6d69767027d3174d7ec5466454", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs, unsafe_destructor, macro_rules)]\n+#![feature(globs, unsafe_destructor, macro_rules, slicing_syntax)]\n \n extern crate core;\n extern crate test;"}, {"sha": "5def99d8ef34eafaa14d3e5ef96a15a66acc2bc3", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -57,7 +57,8 @@\n \n #![deny(unused_result, unused_must_use)]\n #![allow(non_camel_case_types, deprecated)]\n-#![feature(default_type_params, lang_items)]\n+#![allow(unknown_features)]\n+#![feature(default_type_params, lang_items, slicing_syntax)]\n \n // NB this crate explicitly does *not* allow glob imports, please seriously\n //    consider whether they're needed before adding that feature here (the"}, {"sha": "fa41cf371129c286b3f7088afaf4357f7efe92e1", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -43,7 +43,8 @@\n //!\n //! [newt]: https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method\n \n-#![feature(macro_rules)]\n+#![allow(unknown_features)]\n+#![feature(macro_rules, slicing_syntax)]\n #![feature(default_type_params)]\n \n #![crate_name = \"num\"]"}, {"sha": "7480cf320cff2cda3978c952a6ed768f0d0bdf35", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -24,7 +24,8 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![feature(macro_rules, phase)]\n+#![allow(unknown_features)]\n+#![feature(macro_rules, phase, slicing_syntax)]\n #![allow(missing_doc)]\n \n extern crate serialize;"}, {"sha": "fdfd8c1eae25c7dc3426b212b6a41252cc344525", "filename": "src/libregex/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibregex%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibregex%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -368,7 +368,8 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![feature(macro_rules, phase)]\n+#![allow(unknown_features)]\n+#![feature(macro_rules, phase, slicing_syntax)]\n #![deny(missing_doc)]\n \n #[cfg(test)]"}, {"sha": "478aa6d9805be44f2825faa9b75ac74b1cd723f1", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -29,8 +29,9 @@ This API is completely unstable and subject to change.\n       html_root_url = \"http://doc.rust-lang.org/master/\")]\n \n #![allow(deprecated)]\n+#![allow(unknown_features)]\n #![feature(macro_rules, globs, struct_variant, quote)]\n-#![feature(default_type_params, phase, unsafe_destructor)]\n+#![feature(default_type_params, phase, unsafe_destructor, slicing_syntax)]\n \n #![feature(rustc_diagnostic_macros)]\n #![feature(import_shadowing)]"}, {"sha": "6486442deb8d8cb7b33760b7e61d5f7db70fe01f", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -31,7 +31,8 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://doc.rust-lang.org/\")]\n \n-#![feature(globs, phase, macro_rules)]\n+#![allow(unknown_features)]\n+#![feature(globs, phase, macro_rules, slicing_syntax)]\n \n #[phase(plugin, link)]\n extern crate log;"}, {"sha": "b46d8727b69d01a5b57c80a0dd2c7c71acbe979e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -15,7 +15,8 @@\n #![crate_type = \"dylib\"]\n #![crate_type = \"rlib\"]\n \n-#![feature(globs, struct_variant, managed_boxes, macro_rules, phase)]\n+#![allow(unknown_features)]\n+#![feature(globs, struct_variant, managed_boxes, macro_rules, phase, slicing_syntax)]\n \n extern crate arena;\n extern crate debug;"}, {"sha": "1183b14fb4e16d16b1699e18fa7311655d47b9b8", "filename": "src/librustrt/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustrt%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibrustrt%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -16,9 +16,10 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\")]\n \n+#![allow(unknown_features)]\n #![feature(macro_rules, phase, globs, thread_local, managed_boxes, asm)]\n #![feature(linkage, lang_items, unsafe_destructor, default_type_params)]\n-#![feature(import_shadowing)]\n+#![feature(import_shadowing, slicing_syntax)]\n #![no_std]\n #![experimental]\n "}, {"sha": "8c2f323532235a224eab136bc1281dadc8ae9025", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -23,7 +23,8 @@ Core encoding and decoding interfaces.\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![feature(macro_rules, managed_boxes, default_type_params, phase)]\n+#![allow(unknown_features)]\n+#![feature(macro_rules, managed_boxes, default_type_params, phase, slicing_syntax)]\n \n // test harness access\n #[cfg(test)]"}, {"sha": "b8fb187548c652ed8830e1acf1964d308b68c22d", "filename": "src/libstd/io/net/udp.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fudp.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -35,26 +35,29 @@ use rt::rtio;\n ///\n /// ```rust,no_run\n /// # #![allow(unused_must_use)]\n+/// #![feature(slicing_syntax)]\n+///\n /// use std::io::net::udp::UdpSocket;\n /// use std::io::net::ip::{Ipv4Addr, SocketAddr};\n+/// fn main() {\n+///     let addr = SocketAddr { ip: Ipv4Addr(127, 0, 0, 1), port: 34254 };\n+///     let mut socket = match UdpSocket::bind(addr) {\n+///         Ok(s) => s,\n+///         Err(e) => fail!(\"couldn't bind socket: {}\", e),\n+///     };\n ///\n-/// let addr = SocketAddr { ip: Ipv4Addr(127, 0, 0, 1), port: 34254 };\n-/// let mut socket = match UdpSocket::bind(addr) {\n-///     Ok(s) => s,\n-///     Err(e) => fail!(\"couldn't bind socket: {}\", e),\n-/// };\n-///\n-/// let mut buf = [0, ..10];\n-/// match socket.recv_from(buf) {\n-///     Ok((amt, src)) => {\n-///         // Send a reply to the socket we received data from\n-///         let buf = buf[mut ..amt];\n-///         buf.reverse();\n-///         socket.send_to(buf, src);\n+///     let mut buf = [0, ..10];\n+///     match socket.recv_from(buf) {\n+///         Ok((amt, src)) => {\n+///             // Send a reply to the socket we received data from\n+///             let buf = buf[mut ..amt];\n+///             buf.reverse();\n+///             socket.send_to(buf, src);\n+///         }\n+///         Err(e) => println!(\"couldn't receive a datagram: {}\", e)\n ///     }\n-///     Err(e) => println!(\"couldn't receive a datagram: {}\", e)\n+///     drop(socket); // close the socket\n /// }\n-/// drop(socket); // close the socket\n /// ```\n pub struct UdpSocket {\n     obj: Box<RtioUdpSocket + Send>,"}, {"sha": "82de55efad603ae53342a5de31bf58634208c6e2", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -105,9 +105,10 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n+#![allow(unknown_features)]\n #![feature(macro_rules, globs, managed_boxes, linkage)]\n #![feature(default_type_params, phase, lang_items, unsafe_destructor)]\n-#![feature(import_shadowing)]\n+#![feature(import_shadowing, slicing_syntax)]\n \n // Don't link to std. We are std.\n #![no_std]"}, {"sha": "38de2a9c284f09fe3a9abfbb7a4b177febb6bb9e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -70,6 +70,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"tuple_indexing\", Active),\n     (\"associated_types\", Active),\n     (\"visible_private_types\", Active),\n+    (\"slicing_syntax\", Active),\n \n     (\"if_let\", Active),\n \n@@ -362,6 +363,11 @@ impl<'a, 'v> Visitor<'v> for Context<'a> {\n                 self.gate_feature(\"if_let\", e.span,\n                                   \"`if let` syntax is experimental\");\n             }\n+            ast::ExprSlice(..) => {\n+                self.gate_feature(\"slicing_syntax\",\n+                                  e.span,\n+                                  \"slicing syntax is experimental\");\n+            }\n             _ => {}\n         }\n         visit::walk_expr(self, e);"}, {"sha": "64dedd4592397f06b755a834f534ea89f1d62604", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -23,7 +23,8 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\")]\n \n-#![feature(macro_rules, globs, default_type_params, phase)]\n+#![allow(unknown_features)]\n+#![feature(macro_rules, globs, default_type_params, phase, slicing_syntax)]\n #![feature(quote, struct_variant, unsafe_destructor, import_shadowing)]\n #![allow(deprecated)]\n "}, {"sha": "b05e0a4bff398595bf045392da5a07775b3c7f0c", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -49,7 +49,8 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![feature(macro_rules, phase)]\n+#![allow(unknown_features)]\n+#![feature(macro_rules, phase, slicing_syntax)]\n \n #![deny(missing_doc)]\n "}, {"sha": "b4292c2b050331ea5eaba7abce3fbc1f7082aa73", "filename": "src/test/bench/shootout-fannkuch-redux.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -38,6 +38,8 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n+#![feature(slicing_syntax)]\n+\n use std::{cmp, iter, mem};\n use std::sync::Future;\n "}, {"sha": "b8af76ce17cecf879ffb01980cbf8873656e76e3", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -38,6 +38,8 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n+#![feature(slicing_syntax)]\n+\n use std::cmp::min;\n use std::io::{stdout, IoResult};\n use std::os;"}, {"sha": "7565525bc8cc00f7c498955d60a12abad58f8171", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -38,6 +38,8 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n+#![feature(slicing_syntax)]\n+\n use std::io;\n use std::io::{BufferedWriter, File};\n use std::cmp::min;"}, {"sha": "86c1bd82e9f9c8fbfdfef7090373f2fae198864b", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -13,6 +13,8 @@\n \n // multi tasking k-nucleotide\n \n+#![feature(slicing_syntax)]\n+\n extern crate collections;\n \n use std::collections::HashMap;"}, {"sha": "8c08fc4caa1d88b24d60622e90bd4711f93aaf1a", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -40,6 +40,8 @@\n \n // ignore-android see #10393 #13206\n \n+#![feature(slicing_syntax)]\n+\n use std::string::String;\n use std::slice;\n use std::sync::{Arc, Future};"}, {"sha": "dccdafe9cf832d07c240661ccc28fdb3db539168", "filename": "src/test/bench/shootout-regex-dna.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -41,7 +41,7 @@\n // ignore-stage1\n // ignore-cross-compile #12102\n \n-#![feature(macro_rules, phase)]\n+#![feature(macro_rules, phase, slicing_syntax)]\n \n extern crate regex;\n #[phase(plugin)]extern crate regex_macros;"}, {"sha": "e3fa6334f77cc55ad075898ffe79f847752617eb", "filename": "src/test/bench/shootout-reverse-complement.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -41,6 +41,8 @@\n // ignore-pretty very bad with line comments\n // ignore-android doesn't terminate?\n \n+#![feature(slicing_syntax)]\n+\n use std::iter::range_step;\n use std::io::{stdin, stdout, File};\n "}, {"sha": "c29e74af03cd2f17bade2f1e5a4aae4070ce1ba2", "filename": "src/test/compile-fail/issue-15730.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(slicing_syntax)]\n+\n fn main() {\n     let mut array = [1, 2, 3];\n //~^ ERROR cannot determine a type for this local variable: cannot determine the type of this integ"}, {"sha": "63f79c808ae22e575e8ea6db54ea7be1343e6852", "filename": "src/test/compile-fail/slice-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-2.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test that slicing syntax gives errors if we have not implemented the trait.\n \n+#![feature(slicing_syntax)]\n+\n struct Foo;\n \n fn main() {"}, {"sha": "00783b71ea11da2c12f7ca2548e7dccfe09b44fe", "filename": "src/test/compile-fail/slice-borrow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test slicing expressions doesn't defeat the borrow checker.\n \n+#![feature(slicing_syntax)]\n+\n fn main() {\n     let y;\n     {"}, {"sha": "09019448a6786e8dd3f68485a287cbfe0047f894", "filename": "src/test/compile-fail/slice-mut-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test mutability and slicing syntax.\n \n+#![feature(slicing_syntax)]\n+\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     // Can't mutably slice an immutable slice"}, {"sha": "cbfa3ed85fd6c8f59b6f0b1134902a3ecc29d096", "filename": "src/test/compile-fail/slice-mut.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test mutability and slicing syntax.\n \n+#![feature(slicing_syntax)]\n+\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     // Immutable slices are not mutable."}, {"sha": "67e621fe556202bd0f588bb417b8480532beba4f", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -80,6 +80,7 @@\n // lldb-check:[...]$5 = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]\n \n #![allow(unused_variable)]\n+#![feature(slicing_syntax)]\n \n struct AStruct {\n     x: i16,"}, {"sha": "10add853ee7f3bc2fcf8513dab64415dd05da36f", "filename": "src/test/run-pass/issue-3888-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(slicing_syntax)]\n+\n fn vec_peek<'r, T>(v: &'r [T]) -> &'r [T] {\n     v[1..5]\n }"}, {"sha": "f2c1a715b514b959ed238dea4c5d4519165a064d", "filename": "src/test/run-pass/issue-4464.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fissue-4464.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fissue-4464.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4464.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(slicing_syntax)]\n+\n fn broken(v: &[u8], i: uint, j: uint) -> &[u8] { v[i..j] }\n \n pub fn main() {}"}, {"sha": "f2dcaa4a31eaa2bdd29be934c815089ec780a394", "filename": "src/test/run-pass/issue-8898.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8898.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(slicing_syntax)]\n \n extern crate debug;\n "}, {"sha": "768c28cb8ded72533b138f460a50f379c1af5866", "filename": "src/test/run-pass/slice-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-2.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test slicing expressions on slices and Vecs.\n \n+#![feature(slicing_syntax)]\n+\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     let cmp: &[int] = &[1, 2, 3, 4, 5];"}, {"sha": "b07cf59596852250647308a68278d173afe3e5f4", "filename": "src/test/run-pass/slice-fail-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-fail-1.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test that is a slicing expr[..] fails, the correct cleanups happen.\n \n+#![feature(slicing_syntax)]\n+\n use std::task;\n \n struct Foo;"}, {"sha": "a2aecc1d5cd56e3b62d415006d7e2634ceedbe18", "filename": "src/test/run-pass/slice-fail-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice-fail-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice-fail-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-fail-2.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test that is a slicing expr[..] fails, the correct cleanups happen.\n \n+#![feature(slicing_syntax)]\n+\n use std::task;\n \n struct Foo;"}, {"sha": "2b4251b40891f7cdc1dadbabd0f2378d7471e510", "filename": "src/test/run-pass/slice.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95cfc35607ccf5f02f02de56a35a9ef50fa23a82/src%2Ftest%2Frun-pass%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice.rs?ref=95cfc35607ccf5f02f02de56a35a9ef50fa23a82", "patch": "@@ -10,6 +10,8 @@\n \n // Test slicing sugar.\n \n+#![feature(slicing_syntax)]\n+\n extern crate core;\n use core::ops::{Slice,SliceMut};\n "}]}