{"sha": "2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZGRlOThiNWMzYjRlOTQyNzZiODNiN2ZlNDY1NGI5Nzg1OTQ1YWQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-11T17:24:27Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-11T17:24:27Z"}, "message": "Move print_memory_usage to cli.rs", "tree": {"sha": "709ffe32fd018b9d2ab080d8155339b9d4603608", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/709ffe32fd018b9d2ab080d8155339b9d4603608"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "html_url": "https://github.com/rust-lang/rust/commit/2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c007ac38307f4915fea367bbcaae137f97a10fbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c007ac38307f4915fea367bbcaae137f97a10fbe", "html_url": "https://github.com/rust-lang/rust/commit/c007ac38307f4915fea367bbcaae137f97a10fbe"}], "stats": {"total": 58, "additions": 26, "deletions": 32}, "files": [{"sha": "6879a462dc6c808fbc3d93cdac23ac9b0ae7f1a3", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "patch": "@@ -10,8 +10,9 @@ mod ssr;\n use std::io::Read;\n \n use anyhow::Result;\n-use ide::Analysis;\n+use ide::{Analysis, AnalysisHost};\n use syntax::{AstNode, SourceFile};\n+use vfs::Vfs;\n \n pub use self::{\n     analysis_bench::{BenchCmd, BenchWhat, Position},\n@@ -82,3 +83,23 @@ fn report_metric(metric: &str, value: u64, unit: &str) {\n     }\n     println!(\"METRIC:{}:{}:{}\", metric, value, unit)\n }\n+\n+fn print_memory_usage(mut host: AnalysisHost, vfs: Vfs) {\n+    let mut mem = host.per_query_memory_usage();\n+\n+    let before = profile::memory_usage();\n+    drop(vfs);\n+    let vfs = before.allocated - profile::memory_usage().allocated;\n+    mem.push((\"VFS\".into(), vfs));\n+\n+    let before = profile::memory_usage();\n+    drop(host);\n+    mem.push((\"Unaccounted\".into(), before.allocated - profile::memory_usage().allocated));\n+\n+    mem.push((\"Remaining\".into(), profile::memory_usage().allocated));\n+\n+    for (name, bytes) in mem {\n+        // NOTE: Not a debug print, so avoid going through the `eprintln` defined above.\n+        eprintln!(\"{:>8} {}\", bytes, name);\n+    }\n+}"}, {"sha": "5a8484c6243ba12dc67d1b63bc72dc6957e12b92", "filename": "crates/rust-analyzer/src/cli/analysis_bench.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs?ref=2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "patch": "@@ -12,10 +12,7 @@ use ide_db::base_db::{\n };\n use vfs::AbsPathBuf;\n \n-use crate::{\n-    cli::{load_cargo::load_cargo, Verbosity},\n-    print_memory_usage,\n-};\n+use crate::cli::{load_cargo::load_cargo, print_memory_usage, Verbosity};\n \n pub struct BenchCmd {\n     pub path: PathBuf,"}, {"sha": "a23fb7a33a4194d1ab1353b8719647dda0f1ac66", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "patch": "@@ -23,11 +23,9 @@ use rustc_hash::FxHashSet;\n use stdx::format_to;\n use syntax::AstNode;\n \n-use crate::{\n-    cli::{\n-        load_cargo::load_cargo, progress_report::ProgressReport, report_metric, Result, Verbosity,\n-    },\n-    print_memory_usage,\n+use crate::cli::{\n+    load_cargo::load_cargo, print_memory_usage, progress_report::ProgressReport, report_metric,\n+    Result, Verbosity,\n };\n use profile::StopWatch;\n "}, {"sha": "79fe30e5301ee4e80991e8546163e25025d95e0c", "filename": "crates/rust-analyzer/src/lib.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fdde98b5c3b4e94276b83b7fe4654b9785945ad/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flib.rs?ref=2fdde98b5c3b4e94276b83b7fe4654b9785945ad", "patch": "@@ -37,10 +37,8 @@ mod document;\n pub mod lsp_ext;\n pub mod config;\n \n-use ide::AnalysisHost;\n use serde::de::DeserializeOwned;\n use std::fmt;\n-use vfs::Vfs;\n \n pub use crate::{caps::server_capabilities, main_loop::main_loop};\n \n@@ -72,23 +70,3 @@ impl fmt::Display for LspError {\n }\n \n impl std::error::Error for LspError {}\n-\n-fn print_memory_usage(mut host: AnalysisHost, vfs: Vfs) {\n-    let mut mem = host.per_query_memory_usage();\n-\n-    let before = profile::memory_usage();\n-    drop(vfs);\n-    let vfs = before.allocated - profile::memory_usage().allocated;\n-    mem.push((\"VFS\".into(), vfs));\n-\n-    let before = profile::memory_usage();\n-    drop(host);\n-    mem.push((\"Unaccounted\".into(), before.allocated - profile::memory_usage().allocated));\n-\n-    mem.push((\"Remaining\".into(), profile::memory_usage().allocated));\n-\n-    for (name, bytes) in mem {\n-        // NOTE: Not a debug print, so avoid going through the `eprintln` defined above.\n-        std::eprintln!(\"{:>8} {}\", bytes, name);\n-    }\n-}"}]}