{"sha": "8b0c31d492e1b9e98c706ed631dffcc2c72913c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMGMzMWQ0OTJlMWI5ZTk4YzcwNmVkNjMxZGZmY2MyYzcyOTEzYzU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-01T22:46:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-01T22:46:09Z"}, "message": "Rollup merge of #79508 - jryans:check-dsymutil-result, r=nagisa\n\nWarn if `dsymutil` returns an error code\n\nThis checks the error code returned by `dsymutil` and warns if it failed. It\nalso provides the stdout and stderr logs from `dsymutil`, similar to the native\nlinker step.\n\nI tried to think of ways to test this change, but so far I haven't found a good way, as you'd likely need to inject some nonsensical args into `dsymutil` to induce failure, which feels too artificial to me. Also, https://github.com/rust-lang/rust/issues/79361 suggests Rust is on the verge of disabling `dsymutil` by default, so perhaps it's okay for this change to be untested. In any case, I'm happy to add a test if someone sees a good approach.\n\nFixes https://github.com/rust-lang/rust/issues/78770", "tree": {"sha": "779ef561fdc882a918c5f4f9a2aec159b589866d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/779ef561fdc882a918c5f4f9a2aec159b589866d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b0c31d492e1b9e98c706ed631dffcc2c72913c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfxseyCRBK7hj4Ov3rIwAAdHIIAIwIoGhFE9N1XP1bKEm51omi\nsOOqvKJR7k1XDbqScUfy1Vp+4LCRlNwcdFx1jhKHIaW4NyNp1GkYBL9xJ9EnLcdp\nOg9rEBCBggUoXuj7vAiqmE3FzUyUJn+eZozM2FGPVe7Y6Lf6hq/NbvZUwaG9JAQG\nWM6C2w2SSvQU8KftMMiuzV5hg0Rl7qj+pBMpYiJ/2S8tAgxbMoT0yzsK21LsWmVu\n9SKGkjtIA0UTBsBoOX2nRPv016WaR+v2hGTfdkhs6/1CSY9KrTSPm9bhDpWmKJV4\nOk/I+WlsfrCdncJPjxD4leCM7aSm6JIfzSwLoPbJmWVn3t+0VTymRM8sEFNz2hM=\n=Cd54\n-----END PGP SIGNATURE-----\n", "payload": "tree 779ef561fdc882a918c5f4f9a2aec159b589866d\nparent 4cbda829c00af2c3ac362c979fa97ea90be0be7d\nparent 4ed90835615f96f1260c633027bd673cd011ab36\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1606862769 +0100\ncommitter GitHub <noreply@github.com> 1606862769 +0100\n\nRollup merge of #79508 - jryans:check-dsymutil-result, r=nagisa\n\nWarn if `dsymutil` returns an error code\n\nThis checks the error code returned by `dsymutil` and warns if it failed. It\nalso provides the stdout and stderr logs from `dsymutil`, similar to the native\nlinker step.\n\nI tried to think of ways to test this change, but so far I haven't found a good way, as you'd likely need to inject some nonsensical args into `dsymutil` to induce failure, which feels too artificial to me. Also, https://github.com/rust-lang/rust/issues/79361 suggests Rust is on the verge of disabling `dsymutil` by default, so perhaps it's okay for this change to be untested. In any case, I'm happy to add a test if someone sees a good approach.\n\nFixes https://github.com/rust-lang/rust/issues/78770\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b0c31d492e1b9e98c706ed631dffcc2c72913c5", "html_url": "https://github.com/rust-lang/rust/commit/8b0c31d492e1b9e98c706ed631dffcc2c72913c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b0c31d492e1b9e98c706ed631dffcc2c72913c5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cbda829c00af2c3ac362c979fa97ea90be0be7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cbda829c00af2c3ac362c979fa97ea90be0be7d", "html_url": "https://github.com/rust-lang/rust/commit/4cbda829c00af2c3ac362c979fa97ea90be0be7d"}, {"sha": "4ed90835615f96f1260c633027bd673cd011ab36", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed90835615f96f1260c633027bd673cd011ab36", "html_url": "https://github.com/rust-lang/rust/commit/4ed90835615f96f1260c633027bd673cd011ab36"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "70cf876a08a510fcc1adadb472e5a0dd356837fc", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8b0c31d492e1b9e98c706ed631dffcc2c72913c5/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0c31d492e1b9e98c706ed631dffcc2c72913c5/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=8b0c31d492e1b9e98c706ed631dffcc2c72913c5", "patch": "@@ -643,15 +643,16 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         }\n     }\n \n+    fn escape_string(s: &[u8]) -> String {\n+        str::from_utf8(s).map(|s| s.to_owned()).unwrap_or_else(|_| {\n+            let mut x = \"Non-UTF-8 output: \".to_string();\n+            x.extend(s.iter().flat_map(|&b| ascii::escape_default(b)).map(char::from));\n+            x\n+        })\n+    }\n+\n     match prog {\n         Ok(prog) => {\n-            fn escape_string(s: &[u8]) -> String {\n-                str::from_utf8(s).map(|s| s.to_owned()).unwrap_or_else(|_| {\n-                    let mut x = \"Non-UTF-8 output: \".to_string();\n-                    x.extend(s.iter().flat_map(|&b| ascii::escape_default(b)).map(char::from));\n-                    x\n-                })\n-            }\n             if !prog.status.success() {\n                 let mut output = prog.stderr.clone();\n                 output.extend_from_slice(&prog.stdout);\n@@ -760,8 +761,21 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         && sess.opts.debuginfo != DebugInfo::None\n         && !preserve_objects_for_their_debuginfo(sess)\n     {\n-        if let Err(e) = Command::new(\"dsymutil\").arg(out_filename).output() {\n-            sess.fatal(&format!(\"failed to run dsymutil: {}\", e))\n+        let prog = Command::new(\"dsymutil\").arg(out_filename).output();\n+        match prog {\n+            Ok(prog) => {\n+                if !prog.status.success() {\n+                    let mut output = prog.stderr.clone();\n+                    output.extend_from_slice(&prog.stdout);\n+                    sess.struct_warn(&format!(\n+                        \"processing debug info with `dsymutil` failed: {}\",\n+                        prog.status\n+                    ))\n+                    .note(&escape_string(&output))\n+                    .emit();\n+                }\n+            }\n+            Err(e) => sess.fatal(&format!(\"unable to run `dsymutil`: {}\", e)),\n         }\n     }\n }"}, {"sha": "b648e14360c0083094d4f17af68653a927979ddd", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b0c31d492e1b9e98c706ed631dffcc2c72913c5/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0c31d492e1b9e98c706ed631dffcc2c72913c5/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=8b0c31d492e1b9e98c706ed631dffcc2c72913c5", "patch": "@@ -214,7 +214,7 @@ pub enum SymbolManglingVersion {\n \n impl_stable_hash_via_hash!(SymbolManglingVersion);\n \n-#[derive(Clone, Copy, PartialEq, Hash)]\n+#[derive(Clone, Copy, Debug, PartialEq, Hash)]\n pub enum DebugInfo {\n     None,\n     Limited,"}]}