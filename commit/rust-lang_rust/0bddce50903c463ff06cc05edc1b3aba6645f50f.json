{"sha": "0bddce50903c463ff06cc05edc1b3aba6645f50f", "node_id": "C_kwDOAAsO6NoAKDBiZGRjZTUwOTAzYzQ2M2ZmMDZjYzA1ZWRjMWIzYWJhNjY0NWY1MGY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-08T03:14:27Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-08T18:50:09Z"}, "message": "Normalize assumed_wf_types after wfchecking is complete, for better spans", "tree": {"sha": "d013b27db95a09b1c5f54644d9f05553bf08689a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d013b27db95a09b1c5f54644d9f05553bf08689a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bddce50903c463ff06cc05edc1b3aba6645f50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bddce50903c463ff06cc05edc1b3aba6645f50f", "html_url": "https://github.com/rust-lang/rust/commit/0bddce50903c463ff06cc05edc1b3aba6645f50f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bddce50903c463ff06cc05edc1b3aba6645f50f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca554efaf78962f9dc9599663b29626269c69c8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca554efaf78962f9dc9599663b29626269c69c8c", "html_url": "https://github.com/rust-lang/rust/commit/ca554efaf78962f9dc9599663b29626269c69c8c"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "969f7de51cebd4326f2c515648f6466f5e8485a8", "filename": "compiler/rustc_hir_analysis/src/check/wfcheck.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -97,21 +97,22 @@ pub(super) fn enter_wf_checking_ctxt<'tcx, F>(\n     let infcx = &tcx.infer_ctxt().build();\n     let ocx = ObligationCtxt::new(infcx);\n \n-    let assumed_wf_types = ocx.assumed_wf_types(param_env, span, body_def_id);\n-\n     let mut wfcx = WfCheckingCtxt { ocx, span, body_id, param_env };\n \n     if !tcx.features().trivial_bounds {\n         wfcx.check_false_global_bounds()\n     }\n     f(&mut wfcx);\n+\n+    let assumed_wf_types = wfcx.ocx.assumed_wf_types(param_env, span, body_def_id);\n+    let implied_bounds = infcx.implied_bounds_tys(param_env, body_id, assumed_wf_types);\n+\n     let errors = wfcx.select_all_or_error();\n     if !errors.is_empty() {\n         infcx.err_ctxt().report_fulfillment_errors(&errors, None);\n         return;\n     }\n \n-    let implied_bounds = infcx.implied_bounds_tys(param_env, body_id, assumed_wf_types);\n     let outlives_environment =\n         OutlivesEnvironment::with_bounds(param_env, Some(infcx), implied_bounds);\n "}, {"sha": "2697d46bdb2f42a510b6d12f7bf9c1a19abec2f0", "filename": "src/test/ui/issues/issue-35570.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fissues%2Fissue-35570.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fissues%2Fissue-35570.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35570.stderr?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `for<'a> (): Trait2<'a>` is not satisfied\n-  --> $DIR/issue-35570.rs:8:16\n+  --> $DIR/issue-35570.rs:8:40\n    |\n LL | fn _ice(param: Box<dyn for <'a> Trait1<<() as Trait2<'a>>::Ty>>) {\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'a> Trait2<'a>` is not implemented for `()`\n+   |                                        ^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'a> Trait2<'a>` is not implemented for `()`\n \n error: aborting due to previous error\n "}, {"sha": "6844e86653299c00810f2b600408e18710338e72", "filename": "src/test/ui/regions/regions-implied-bounds-projection-gap-hr-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fregions%2Fregions-implied-bounds-projection-gap-hr-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fregions%2Fregions-implied-bounds-projection-gap-hr-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-implied-bounds-projection-gap-hr-1.stderr?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `for<'z> T: Trait2<'y, 'z>` is not satisfied\n-  --> $DIR/regions-implied-bounds-projection-gap-hr-1.rs:21:25\n+  --> $DIR/regions-implied-bounds-projection-gap-hr-1.rs:21:49\n    |\n LL | fn callee<'x, 'y, T>(t: &'x dyn for<'z> Trait1< <T as Trait2<'y, 'z>>::Foo >)\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'z> Trait2<'y, 'z>` is not implemented for `T`\n+   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'z> Trait2<'y, 'z>` is not implemented for `T`\n    |\n help: consider restricting type parameter `T`\n    |"}, {"sha": "104bddd076ec18f5da6d703f959d51fbe42a0068", "filename": "src/test/ui/specialization/min_specialization/issue-79224.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fissue-79224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fissue-79224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fissue-79224.rs?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -17,8 +17,8 @@ impl ToString for Cow<'_, str> {\n \n impl<B: ?Sized> Display for Cow<'_, B> {\n     //~^ ERROR: the trait bound `B: Clone` is not satisfied [E0277]\n-    //~| ERROR: the trait bound `B: Clone` is not satisfied [E0277]\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        //~^ ERROR: the trait bound `B: Clone` is not satisfied [E0277]\n         write!(f, \"foo\")\n     }\n }"}, {"sha": "be6f04ae62a0d247ccce29f54176a8b5fdff63a5", "filename": "src/test/ui/specialization/min_specialization/issue-79224.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fissue-79224.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fissue-79224.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fissue-79224.stderr?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `B: Clone` is not satisfied\n-  --> $DIR/issue-79224.rs:18:29\n+  --> $DIR/issue-79224.rs:18:17\n    |\n LL | impl<B: ?Sized> Display for Cow<'_, B> {\n-   |                             ^^^^^^^^^^ the trait `Clone` is not implemented for `B`\n+   |                 ^^^^^^^ the trait `Clone` is not implemented for `B`\n    |\n    = note: required for `B` to implement `ToOwned`\n help: consider further restricting this bound\n@@ -11,10 +11,10 @@ LL | impl<B: ?Sized + std::clone::Clone> Display for Cow<'_, B> {\n    |                +++++++++++++++++++\n \n error[E0277]: the trait bound `B: Clone` is not satisfied\n-  --> $DIR/issue-79224.rs:18:29\n+  --> $DIR/issue-79224.rs:20:12\n    |\n-LL | impl<B: ?Sized> Display for Cow<'_, B> {\n-   |                             ^^^^^^^^^^ the trait `Clone` is not implemented for `B`\n+LL |     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+   |            ^^^^^ the trait `Clone` is not implemented for `B`\n    |\n    = note: required for `B` to implement `ToOwned`\n help: consider further restricting this bound"}, {"sha": "9f9acf851135f4d0a3282cede8249af04ad6f6fa", "filename": "src/test/ui/traits/issue-91594.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.stderr?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `Foo: HasComponent<()>` is not satisfied\n-  --> $DIR/issue-91594.rs:10:1\n+  --> $DIR/issue-91594.rs:10:6\n    |\n LL | impl HasComponent<<Foo as Component<Foo>>::Interface> for Foo {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HasComponent<()>` is not implemented for `Foo`\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HasComponent<()>` is not implemented for `Foo`\n    |\n    = help: the trait `HasComponent<<Foo as Component<Foo>>::Interface>` is implemented for `Foo`\n note: required for `Foo` to implement `Component<Foo>`"}, {"sha": "5227badb77dde78a122aaa4cc59465b3ffceb844", "filename": "src/test/ui/wf/issue-103573.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fwf%2Fissue-103573.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bddce50903c463ff06cc05edc1b3aba6645f50f/src%2Ftest%2Fui%2Fwf%2Fissue-103573.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fissue-103573.stderr?ref=0bddce50903c463ff06cc05edc1b3aba6645f50f", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `<<Self as TraitC<E>>::TypeC<'a> as TraitB>::TypeB: TraitA` is not satisfied\n-  --> $DIR/issue-103573.rs:18:17\n+  --> $DIR/issue-103573.rs:18:18\n    |\n LL |     fn g<'a>(_: &<<Self::TypeC<'a> as TraitB>::TypeB as TraitA>::TypeA);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `TraitA` is not implemented for `<<Self as TraitC<E>>::TypeC<'a> as TraitB>::TypeB`\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `TraitA` is not implemented for `<<Self as TraitC<E>>::TypeC<'a> as TraitB>::TypeB`\n    |\n help: consider further restricting the associated type\n    |"}]}