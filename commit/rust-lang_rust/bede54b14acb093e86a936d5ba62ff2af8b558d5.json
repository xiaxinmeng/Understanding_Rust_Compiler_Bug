{"sha": "bede54b14acb093e86a936d5ba62ff2af8b558d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZGU1NGIxNGFjYjA5M2U4NmE5MzZkNWJhNjJmZjJhZjhiNTU4ZDU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-06-03T03:48:53Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-06-07T01:36:15Z"}, "message": "misc. copies in core/syntax to please borrowck", "tree": {"sha": "1d55f928357e66573d9de0fe6be60174184491b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d55f928357e66573d9de0fe6be60174184491b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bede54b14acb093e86a936d5ba62ff2af8b558d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bede54b14acb093e86a936d5ba62ff2af8b558d5", "html_url": "https://github.com/rust-lang/rust/commit/bede54b14acb093e86a936d5ba62ff2af8b558d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bede54b14acb093e86a936d5ba62ff2af8b558d5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef32ffd0b1602ff87536508a7f75fd9b1510b4e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef32ffd0b1602ff87536508a7f75fd9b1510b4e9", "html_url": "https://github.com/rust-lang/rust/commit/ef32ffd0b1602ff87536508a7f75fd9b1510b4e9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6152b83536a87e73aa89a1c9b99b9be0a66f65d4", "filename": "src/libcore/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibcore%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibcore%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture.rs?ref=bede54b14acb093e86a936d5ba62ff2af8b558d5", "patch": "@@ -108,7 +108,7 @@ fn get<A:copy>(future: future<A>) -> A {\n fn with<A,B>(future: future<A>, blk: fn(A) -> B) -> B {\n     #[doc = \"Work with the value without copying it\"];\n \n-    let v = alt future.v {\n+    let v = alt copy future.v {\n       either::left(v) { v }\n       either::right(f) {\n         let v = @f();"}, {"sha": "b18be417019b61fe1ad6260f913d5cf9a633263c", "filename": "src/libcore/io.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=bede54b14acb093e86a936d5ba62ff2af8b558d5", "patch": "@@ -613,7 +613,7 @@ impl of writer for mem_buffer {\n         // FIXME #2004--use memcpy here?\n         let mut pos = self.pos, vpos = 0u;\n         while vpos < vlen && pos < buf_len {\n-            self.buf.set_elt(pos, v[vpos]);\n+            self.buf.set_elt(pos, copy v[vpos]);\n             pos += 1u;\n             vpos += 1u;\n         }"}, {"sha": "1a7ae69e79df4c314e1b5fa09e9fe11a875a2502", "filename": "src/libsyntax/ext/qquote.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fqquote.rs?ref=bede54b14acb093e86a936d5ba62ff2af8b558d5", "patch": "@@ -212,7 +212,7 @@ fn finish<T: qq_helper>\n             state = skip(str::char_len(repl));\n             str2 += repl;\n         }\n-        alt state {\n+        alt copy state {\n           active {str::push_char(str2, ch);}\n           skip(1u) {state = blank;}\n           skip(sk) {state = skip (sk-1u);}"}, {"sha": "bbbd09632ef86f86e2f379a3316f00edfb4f3008", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bede54b14acb093e86a936d5ba62ff2af8b558d5/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=bede54b14acb093e86a936d5ba62ff2af8b558d5", "patch": "@@ -184,16 +184,16 @@ fn is_lit(t: token::token) -> bool {\n         }\n }\n \n-fn is_ident(t: token::token) -> bool {\n+pure fn is_ident(t: token::token) -> bool {\n     alt t { token::IDENT(_, _) { ret true; } _ { } }\n     ret false;\n }\n \n-fn is_plain_ident(t: token::token) -> bool {\n+pure fn is_plain_ident(t: token::token) -> bool {\n     ret alt t { token::IDENT(_, false) { true } _ { false } };\n }\n \n-fn is_bar(t: token::token) -> bool {\n+pure fn is_bar(t: token::token) -> bool {\n     alt t { token::BINOP(token::OR) | token::OROR { true } _ { false } }\n }\n "}]}