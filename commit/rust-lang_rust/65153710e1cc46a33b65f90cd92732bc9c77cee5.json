{"sha": "65153710e1cc46a33b65f90cd92732bc9c77cee5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MTUzNzEwZTFjYzQ2YTMzYjY1ZjkwY2Q5MjczMmJjOWM3N2NlZTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T08:50:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T08:50:59Z"}, "message": "QPath docs: mention how to resolve them", "tree": {"sha": "d933a03d3a4f4a4aea9101eaeabf8b4618769544", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d933a03d3a4f4a4aea9101eaeabf8b4618769544"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65153710e1cc46a33b65f90cd92732bc9c77cee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65153710e1cc46a33b65f90cd92732bc9c77cee5", "html_url": "https://github.com/rust-lang/rust/commit/65153710e1cc46a33b65f90cd92732bc9c77cee5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65153710e1cc46a33b65f90cd92732bc9c77cee5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f49f38871389041671cc710a044e8360091840a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f49f38871389041671cc710a044e8360091840a3", "html_url": "https://github.com/rust-lang/rust/commit/f49f38871389041671cc710a044e8360091840a3"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d28624907d7172eb046c555884ac13489d83863d", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65153710e1cc46a33b65f90cd92732bc9c77cee5/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65153710e1cc46a33b65f90cd92732bc9c77cee5/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=65153710e1cc46a33b65f90cd92732bc9c77cee5", "patch": "@@ -1698,6 +1698,10 @@ pub enum ExprKind {\n }\n \n /// Represents an optionally `Self`-qualified value/type path or associated extension.\n+///\n+/// To resolve the path to a `DefId`, call [`qpath_res`].\n+///\n+/// [`qpath_res`]: ty/struct.TypeckTables.html#method.qpath_res\n #[derive(RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub enum QPath {\n     /// Path to a definition, optionally \"fully-qualified\" with a `Self`"}]}