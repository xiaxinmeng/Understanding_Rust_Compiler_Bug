{"sha": "8f59eb6da014cb146c1477ab0ddf35729c88e99f", "node_id": "C_kwDOAAsO6NoAKDhmNTllYjZkYTAxNGNiMTQ2YzE0NzdhYjBkZGYzNTcyOWM4OGU5OWY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-10T20:23:58Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-14T20:05:35Z"}, "message": "Estimate path length instead of hardcoding 64 bytes", "tree": {"sha": "11201dae5dcffad81c91aba9d4ae28cdba42bc31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11201dae5dcffad81c91aba9d4ae28cdba42bc31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f59eb6da014cb146c1477ab0ddf35729c88e99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f59eb6da014cb146c1477ab0ddf35729c88e99f", "html_url": "https://github.com/rust-lang/rust/commit/8f59eb6da014cb146c1477ab0ddf35729c88e99f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f59eb6da014cb146c1477ab0ddf35729c88e99f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53f1bed83ab3124ddc26c8e1e28666ae8a0f1842", "url": "https://api.github.com/repos/rust-lang/rust/commits/53f1bed83ab3124ddc26c8e1e28666ae8a0f1842", "html_url": "https://github.com/rust-lang/rust/commit/53f1bed83ab3124ddc26c8e1e28666ae8a0f1842"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "8571a6a137f5101687d769642177c6a60df46c59", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f59eb6da014cb146c1477ab0ddf35729c88e99f/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f59eb6da014cb146c1477ab0ddf35729c88e99f/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=8f59eb6da014cb146c1477ab0ddf35729c88e99f", "patch": "@@ -30,6 +30,7 @@ use crate::formats::item_type::ItemType;\n use crate::html::escape::Escape;\n use crate::html::render::Context;\n \n+use super::url_parts_builder::estimate_item_path_byte_length;\n use super::url_parts_builder::UrlPartsBuilder;\n \n crate trait Print {\n@@ -505,8 +506,7 @@ crate enum HrefError {\n \n // Panics if `syms` is empty.\n crate fn join_with_double_colon(syms: &[Symbol]) -> String {\n-    // 64 bytes covers 99.9%+ of cases.\n-    let mut s = String::with_capacity(64);\n+    let mut s = String::with_capacity(estimate_item_path_byte_length(syms.len()));\n     s.push_str(&syms[0].as_str());\n     for sym in &syms[1..] {\n         s.push_str(\"::\");"}, {"sha": "26cebe8c72beaa78e289b17ffc6e7877ea517b8e", "filename": "src/librustdoc/html/url_parts_builder.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f59eb6da014cb146c1477ab0ddf35729c88e99f/src%2Flibrustdoc%2Fhtml%2Furl_parts_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f59eb6da014cb146c1477ab0ddf35729c88e99f/src%2Flibrustdoc%2Fhtml%2Furl_parts_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Furl_parts_builder.rs?ref=8f59eb6da014cb146c1477ab0ddf35729c88e99f", "patch": "@@ -110,6 +110,14 @@ impl UrlPartsBuilder {\n /// This is intentionally on the lower end to avoid overallocating.\n const AVG_PART_LENGTH: usize = 5;\n \n+/// Estimate the number of bytes in an item's path, based on how many segments it has.\n+///\n+/// **Note:** This is only to be used with, e.g., [`String::with_capacity()`];\n+/// the return value is just a rough estimate.\n+crate const fn estimate_item_path_byte_length(segment_count: usize) -> usize {\n+    AVG_PART_LENGTH * segment_count\n+}\n+\n impl<'a> FromIterator<&'a str> for UrlPartsBuilder {\n     fn from_iter<T: IntoIterator<Item = &'a str>>(iter: T) -> Self {\n         let iter = iter.into_iter();"}]}