{"sha": "6277e3b2d9567a2f829862c713e78e4ac13bb600", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNzdlM2IyZDk1NjdhMmY4Mjk4NjJjNzEzZTc4ZTRhYzEzYmI2MDA=", "commit": {"author": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-11-14T09:21:44Z"}, "committer": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-11-15T17:48:02Z"}, "message": "Update ring_buf.rs from fallout of #18827.", "tree": {"sha": "e5fbfe884449dc03287c011464baeccf7c9e5115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5fbfe884449dc03287c011464baeccf7c9e5115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6277e3b2d9567a2f829862c713e78e4ac13bb600", "comment_count": 17, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6277e3b2d9567a2f829862c713e78e4ac13bb600", "html_url": "https://github.com/rust-lang/rust/commit/6277e3b2d9567a2f829862c713e78e4ac13bb600", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6277e3b2d9567a2f829862c713e78e4ac13bb600/comments", "author": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4019118ec2f5fb1e6749e80b15fc70a9d0accd6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4019118ec2f5fb1e6749e80b15fc70a9d0accd6f", "html_url": "https://github.com/rust-lang/rust/commit/4019118ec2f5fb1e6749e80b15fc70a9d0accd6f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e95660b546ebc5ddc8dcce48190dea06939f87b0", "filename": "src/libcollections/ring_buf.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6277e3b2d9567a2f829862c713e78e4ac13bb600/src%2Flibcollections%2Fring_buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6277e3b2d9567a2f829862c713e78e4ac13bb600/src%2Flibcollections%2Fring_buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fring_buf.rs?ref=6277e3b2d9567a2f829862c713e78e4ac13bb600", "patch": "@@ -22,7 +22,7 @@ use core::raw::Slice as RawSlice;\n use core::ptr;\n use core::kinds::marker;\n use core::mem;\n-use core::num;\n+use core::num::{Int, UnsignedInt};\n \n use std::hash::{Writer, Hash};\n use std::cmp;\n@@ -115,8 +115,8 @@ impl<T> RingBuf<T> {\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn with_capacity(n: uint) -> RingBuf<T> {\n         // +1 since the ringbuffer always leaves one space empty\n-        let cap = num::next_power_of_two(cmp::max(n + 1, MINIMUM_CAPACITY));\n-        let size = cap.checked_mul(&mem::size_of::<T>())\n+        let cap = cmp::max(n + 1, MINIMUM_CAPACITY).next_power_of_two();\n+        let size = cap.checked_mul(mem::size_of::<T>())\n                       .expect(\"capacity overflow\");\n \n         let ptr = if mem::size_of::<T>() != 0 {\n@@ -280,12 +280,12 @@ impl<T> RingBuf<T> {\n         let new_len = self.len() + additional;\n         assert!(new_len + 1 > self.len(), \"capacity overflow\");\n         if new_len > self.capacity() {\n-            let count = num::next_power_of_two(new_len + 1);\n+            let count = (new_len + 1).next_power_of_two();\n             assert!(count >= new_len + 1);\n \n             if mem::size_of::<T>() != 0 {\n                 let old = self.cap * mem::size_of::<T>();\n-                let new = count.checked_mul(&mem::size_of::<T>())\n+                let new = count.checked_mul(mem::size_of::<T>())\n                                .expect(\"capacity overflow\");\n                 unsafe {\n                     self.ptr = heap::reallocate(self.ptr as *mut u8,"}]}