{"sha": "9fe9d94abda8d2698d1dede6961007e0026760ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZTlkOTRhYmRhOGQyNjk4ZDFkZWRlNjk2MTAwN2UwMDI2NzYwZWE=", "commit": {"author": {"name": "Marc Dominik Migge", "email": "marcmigge@gmx.net", "date": "2021-02-24T12:31:04Z"}, "committer": {"name": "Marc Dominik Migge", "email": "marcmigge@gmx.net", "date": "2021-02-24T12:31:04Z"}, "message": "Don't lint unit args if expression kind is path", "tree": {"sha": "e4f89f6d93959cb10eb229f79bdb9a50b75d9f3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4f89f6d93959cb10eb229f79bdb9a50b75d9f3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fe9d94abda8d2698d1dede6961007e0026760ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe9d94abda8d2698d1dede6961007e0026760ea", "html_url": "https://github.com/rust-lang/rust/commit/9fe9d94abda8d2698d1dede6961007e0026760ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fe9d94abda8d2698d1dede6961007e0026760ea/comments", "author": {"login": "mdm", "id": 75325, "node_id": "MDQ6VXNlcjc1MzI1", "avatar_url": "https://avatars.githubusercontent.com/u/75325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdm", "html_url": "https://github.com/mdm", "followers_url": "https://api.github.com/users/mdm/followers", "following_url": "https://api.github.com/users/mdm/following{/other_user}", "gists_url": "https://api.github.com/users/mdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdm/subscriptions", "organizations_url": "https://api.github.com/users/mdm/orgs", "repos_url": "https://api.github.com/users/mdm/repos", "events_url": "https://api.github.com/users/mdm/events{/privacy}", "received_events_url": "https://api.github.com/users/mdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdm", "id": 75325, "node_id": "MDQ6VXNlcjc1MzI1", "avatar_url": "https://avatars.githubusercontent.com/u/75325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdm", "html_url": "https://github.com/mdm", "followers_url": "https://api.github.com/users/mdm/followers", "following_url": "https://api.github.com/users/mdm/following{/other_user}", "gists_url": "https://api.github.com/users/mdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdm/subscriptions", "organizations_url": "https://api.github.com/users/mdm/orgs", "repos_url": "https://api.github.com/users/mdm/repos", "events_url": "https://api.github.com/users/mdm/events{/privacy}", "received_events_url": "https://api.github.com/users/mdm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb476c6c70bccb87378462e4854f8b8fa12c40be", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb476c6c70bccb87378462e4854f8b8fa12c40be", "html_url": "https://github.com/rust-lang/rust/commit/eb476c6c70bccb87378462e4854f8b8fa12c40be"}], "stats": {"total": 115, "additions": 19, "deletions": 96}, "files": [{"sha": "77cde8b60c1618693e0b5a077c16825c72a0181b", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9fe9d94abda8d2698d1dede6961007e0026760ea/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe9d94abda8d2698d1dede6961007e0026760ea/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=9fe9d94abda8d2698d1dede6961007e0026760ea", "patch": "@@ -955,16 +955,10 @@ impl<'tcx> LateLintPass<'tcx> for UnitArg {\n                     .iter()\n                     .filter(|arg| {\n                         if is_unit(cx.typeck_results().expr_ty(arg)) && !is_unit_literal(arg) {\n-                            match &arg.kind {\n-                                ExprKind::Block(..)\n-                                | ExprKind::Call(..)\n-                                | ExprKind::If(..)\n-                                | ExprKind::MethodCall(..) => true,\n-                                ExprKind::Match(..) => {\n-                                    !matches!(&arg.kind, ExprKind::Match(.., MatchSource::TryDesugar))\n-                                },\n-                                _ => false,\n-                            }\n+                            !matches!(\n+                                &arg.kind,\n+                                ExprKind::Match(.., MatchSource::TryDesugar) | ExprKind::Path(..)\n+                            )\n                         } else {\n                             false\n                         }"}, {"sha": "5ea2e5d65c515b8a04eebac26b48749a6c5fc119", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9fe9d94abda8d2698d1dede6961007e0026760ea/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe9d94abda8d2698d1dede6961007e0026760ea/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=9fe9d94abda8d2698d1dede6961007e0026760ea", "patch": "@@ -27,6 +27,10 @@ impl Bar {\n     }\n }\n \n+fn baz<T: Debug>(t: T) {\n+    foo(t);\n+}\n+\n fn bad() {\n     foo({\n         1;\n@@ -73,6 +77,7 @@ fn ok() {\n     question_mark();\n     let named_unit_arg = ();\n     foo(named_unit_arg);\n+    baz(());\n }\n \n fn question_mark() -> Result<(), ()> {"}, {"sha": "b3fe9addb62f658c3572e0b18b45ba0464bc3a21", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9fe9d94abda8d2698d1dede6961007e0026760ea/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9fe9d94abda8d2698d1dede6961007e0026760ea/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=9fe9d94abda8d2698d1dede6961007e0026760ea", "patch": "@@ -1,5 +1,5 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:31:5\n+  --> $DIR/unit_arg.rs:35:5\n    |\n LL | /     foo({\n LL | |         1;\n@@ -20,7 +20,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:34:5\n+  --> $DIR/unit_arg.rs:38:5\n    |\n LL |     foo(foo(1));\n    |     ^^^^^^^^^^^\n@@ -32,7 +32,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:35:5\n+  --> $DIR/unit_arg.rs:39:5\n    |\n LL | /     foo({\n LL | |         foo(1);\n@@ -54,7 +54,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:40:5\n+  --> $DIR/unit_arg.rs:44:5\n    |\n LL | /     b.bar({\n LL | |         1;\n@@ -74,7 +74,7 @@ LL |     b.bar(());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:43:5\n+  --> $DIR/unit_arg.rs:47:5\n    |\n LL |     taking_multiple_units(foo(0), foo(1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -87,7 +87,7 @@ LL |     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:44:5\n+  --> $DIR/unit_arg.rs:48:5\n    |\n LL | /     taking_multiple_units(foo(0), {\n LL | |         foo(1);\n@@ -110,7 +110,7 @@ LL |     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:48:5\n+  --> $DIR/unit_arg.rs:52:5\n    |\n LL | /     taking_multiple_units(\n LL | |         {\n@@ -140,7 +140,7 @@ LL |         foo(2);\n  ...\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:59:13\n+  --> $DIR/unit_arg.rs:63:13\n    |\n LL |     None.or(Some(foo(2)));\n    |             ^^^^^^^^^^^^\n@@ -154,7 +154,7 @@ LL |     });\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:62:5\n+  --> $DIR/unit_arg.rs:66:5\n    |\n LL |     foo(foo(()));\n    |     ^^^^^^^^^^^^\n@@ -166,7 +166,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:97:5\n+  --> $DIR/unit_arg.rs:102:5\n    |\n LL |     Some(foo(1))\n    |     ^^^^^^^^^^^^"}, {"sha": "a6807cb2e973c9a080a9e284e973d55e91da1a86", "filename": "tests/ui/unit_arg_expressions.rs", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_expressions.rs?ref=eb476c6c70bccb87378462e4854f8b8fa12c40be", "patch": "@@ -1,35 +0,0 @@\n-#![warn(clippy::unit_arg)]\n-#![allow(clippy::no_effect)]\n-\n-use std::fmt::Debug;\n-\n-fn foo<T: Debug>(t: T) {\n-    println!(\"{:?}\", t);\n-}\n-\n-fn bad() {\n-    foo(if true {\n-        1;\n-    });\n-    foo(match Some(1) {\n-        Some(_) => {\n-            1;\n-        },\n-        None => {\n-            0;\n-        },\n-    });\n-}\n-\n-fn ok() {\n-    foo(if true { 1 } else { 0 });\n-    foo(match Some(1) {\n-        Some(_) => 1,\n-        None => 0,\n-    });\n-}\n-\n-fn main() {\n-    bad();\n-    ok();\n-}"}, {"sha": "9fb08106b723371b492b0db900987259d7b26078", "filename": "tests/ui/unit_arg_expressions.stderr", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb476c6c70bccb87378462e4854f8b8fa12c40be/tests%2Fui%2Funit_arg_expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_expressions.stderr?ref=eb476c6c70bccb87378462e4854f8b8fa12c40be", "patch": "@@ -1,41 +0,0 @@\n-error: passing a unit value to a function\n-  --> $DIR/unit_arg_expressions.rs:11:5\n-   |\n-LL | /     foo(if true {\n-LL | |         1;\n-LL | |     });\n-   | |______^\n-   |\n-   = note: `-D clippy::unit-arg` implied by `-D warnings`\n-help: move the expression in front of the call and replace it with the unit literal `()`\n-   |\n-LL |     if true {\n-LL |         1;\n-LL |     };\n-LL |     foo(());\n-   |\n-\n-error: passing a unit value to a function\n-  --> $DIR/unit_arg_expressions.rs:14:5\n-   |\n-LL | /     foo(match Some(1) {\n-LL | |         Some(_) => {\n-LL | |             1;\n-LL | |         },\n-...  |\n-LL | |         },\n-LL | |     });\n-   | |______^\n-   |\n-help: move the expression in front of the call and replace it with the unit literal `()`\n-   |\n-LL |     match Some(1) {\n-LL |         Some(_) => {\n-LL |             1;\n-LL |         },\n-LL |         None => {\n-LL |             0;\n- ...\n-\n-error: aborting due to 2 previous errors\n-"}]}