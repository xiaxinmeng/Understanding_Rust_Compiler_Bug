{"sha": "ddc25456c5945457ba86cb60994ce9872bd98edd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYzI1NDU2YzU5NDU0NTdiYTg2Y2I2MDk5NGNlOTg3MmJkOThlZGQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-13T20:29:30Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-13T20:31:25Z"}, "message": "Check types of statics in MIR typeck", "tree": {"sha": "b4373c6e35f8237fb2d1b73dcef86ccc039d92ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4373c6e35f8237fb2d1b73dcef86ccc039d92ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddc25456c5945457ba86cb60994ce9872bd98edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc25456c5945457ba86cb60994ce9872bd98edd", "html_url": "https://github.com/rust-lang/rust/commit/ddc25456c5945457ba86cb60994ce9872bd98edd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddc25456c5945457ba86cb60994ce9872bd98edd/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9f5ff2a1c50a5af94ad1dd1c976f631b9f19a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9f5ff2a1c50a5af94ad1dd1c976f631b9f19a6", "html_url": "https://github.com/rust-lang/rust/commit/cd9f5ff2a1c50a5af94ad1dd1c976f631b9f19a6"}], "stats": {"total": 99, "additions": 97, "deletions": 2}, "files": [{"sha": "78f708b9a741a94f7ed7962f4e242bea2802f99b", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=ddc25456c5945457ba86cb60994ce9872bd98edd", "patch": "@@ -309,6 +309,7 @@ impl<'a, 'b, 'tcx> Visitor<'tcx> for TypeVerifier<'a, 'b, 'tcx> {\n                 );\n             }\n         } else {\n+            let tcx = self.tcx();\n             if let ty::ConstKind::Unevaluated(def_id, substs, promoted) = constant.literal.val {\n                 if let Some(promoted) = promoted {\n                     let check_err = |verifier: &mut TypeVerifier<'a, 'b, 'tcx>,\n@@ -358,10 +359,23 @@ impl<'a, 'b, 'tcx> Visitor<'tcx> for TypeVerifier<'a, 'b, 'tcx> {\n                         );\n                     }\n                 }\n+            } else if let Some(static_def_id) = constant.check_static_ptr(tcx) {\n+                let unnormalized_ty = tcx.type_of(static_def_id);\n+                let locations = location.to_locations();\n+                let normalized_ty = self.cx.normalize(unnormalized_ty, locations);\n+                let literal_ty = constant.literal.ty.builtin_deref(true).unwrap().ty;\n+\n+                if let Err(terr) = self.cx.eq_types(\n+                    normalized_ty,\n+                    literal_ty,\n+                    locations,\n+                    ConstraintCategory::Boring,\n+                ) {\n+                    span_mirbug!(self, constant, \"bad static type {:?} ({:?})\", constant, terr);\n+                }\n             }\n-            if let ty::FnDef(def_id, substs) = constant.literal.ty.kind {\n-                let tcx = self.tcx();\n \n+            if let ty::FnDef(def_id, substs) = constant.literal.ty.kind {\n                 let instantiated_predicates = tcx.predicates_of(def_id).instantiate(tcx, substs);\n                 self.cx.normalize_and_prove_instantiated_predicates(\n                     instantiated_predicates,"}, {"sha": "ce37da053e371b217091f16e6250f9c7cbc20a1a", "filename": "src/test/ui/nll/issue-69114-static-mut-ty.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-mut-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-mut-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-mut-ty.rs?ref=ddc25456c5945457ba86cb60994ce9872bd98edd", "patch": "@@ -0,0 +1,30 @@\n+// Check that borrowck ensures that `static mut` items have the expected type.\n+\n+static FOO: u8 = 42;\n+static mut BAR: &'static u8 = &FOO;\n+static mut BAR_ELIDED: &u8 = &FOO;\n+\n+fn main() {\n+    unsafe {\n+        println!(\"{} {}\", BAR, BAR_ELIDED);\n+        set_bar();\n+        set_bar_elided();\n+        println!(\"{} {}\", BAR, BAR_ELIDED);\n+    }\n+}\n+\n+fn set_bar() {\n+    let n = 42;\n+    unsafe {\n+        BAR = &n;\n+        //~^ ERROR does not live long enough\n+    }\n+}\n+\n+fn set_bar_elided() {\n+    let n = 42;\n+    unsafe {\n+        BAR_ELIDED = &n;\n+        //~^ ERROR does not live long enough\n+    }\n+}"}, {"sha": "5e55cb502caa9c235d696fa1760a7d94223ec94a", "filename": "src/test/ui/nll/issue-69114-static-mut-ty.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-mut-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-mut-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-mut-ty.stderr?ref=ddc25456c5945457ba86cb60994ce9872bd98edd", "patch": "@@ -0,0 +1,27 @@\n+error[E0597]: `n` does not live long enough\n+  --> $DIR/issue-69114-static-mut-ty.rs:19:15\n+   |\n+LL |         BAR = &n;\n+   |         ------^^\n+   |         |     |\n+   |         |     borrowed value does not live long enough\n+   |         assignment requires that `n` is borrowed for `'static`\n+...\n+LL | }\n+   | - `n` dropped here while still borrowed\n+\n+error[E0597]: `n` does not live long enough\n+  --> $DIR/issue-69114-static-mut-ty.rs:27:22\n+   |\n+LL |         BAR_ELIDED = &n;\n+   |         -------------^^\n+   |         |            |\n+   |         |            borrowed value does not live long enough\n+   |         assignment requires that `n` is borrowed for `'static`\n+...\n+LL | }\n+   | - `n` dropped here while still borrowed\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "3318433a1c56f5598db7a991db6551b9d4a4b09a", "filename": "src/test/ui/nll/issue-69114-static-ty.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-ty.rs?ref=ddc25456c5945457ba86cb60994ce9872bd98edd", "patch": "@@ -0,0 +1,9 @@\n+// Check that borrowck ensures that `static` items have the expected type.\n+\n+static FOO: &'static (dyn Fn(&'static u8) + Send + Sync) = &drop;\n+\n+fn main() {\n+    let n = 42;\n+    FOO(&n);\n+    //~^ ERROR does not live long enough\n+}"}, {"sha": "0815e74b5537d9a2bafa634329286a9aa5f7cde0", "filename": "src/test/ui/nll/issue-69114-static-ty.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddc25456c5945457ba86cb60994ce9872bd98edd/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-69114-static-ty.stderr?ref=ddc25456c5945457ba86cb60994ce9872bd98edd", "patch": "@@ -0,0 +1,15 @@\n+error[E0597]: `n` does not live long enough\n+  --> $DIR/issue-69114-static-ty.rs:7:9\n+   |\n+LL |     FOO(&n);\n+   |     ----^^-\n+   |     |   |\n+   |     |   borrowed value does not live long enough\n+   |     argument requires that `n` is borrowed for `'static`\n+LL |\n+LL | }\n+   | - `n` dropped here while still borrowed\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}]}