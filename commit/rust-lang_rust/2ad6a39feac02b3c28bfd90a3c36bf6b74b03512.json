{"sha": "2ad6a39feac02b3c28bfd90a3c36bf6b74b03512", "node_id": "C_kwDOAAsO6NoAKDJhZDZhMzlmZWFjMDJiM2MyOGJmZDkwYTNjMzZiZjZiNzRiMDM1MTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-22T19:05:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-22T19:05:59Z"}, "message": "Rollup merge of #108342 - lcnr:opaque-tys, r=oli-obk\n\napply query response: actually define opaque types\n\nnot sure whether this fixes any code considering that #107891 doesn't break anything, but this is currently wrong as the `eq` there should just always fail right now.\n\nWe can definitely hit this code if we remove the `replace_opaque_types_with_inference_vars` hack. Doing so without this PR causes a few tests to ICE, e.g.\n\nhttps://github.com/rust-lang/rust/blob/bd4a96a12d0bf6dc12edf20a45df3a33052c9d7d/tests/ui/impl-trait/issue-99642.rs#L1-L7\n\nr? `@oli-obk`", "tree": {"sha": "10839aab7eb0ff316cd05232f25d33e0f5c8c294", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10839aab7eb0ff316cd05232f25d33e0f5c8c294"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ad6a39feac02b3c28bfd90a3c36bf6b74b03512", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj9meXCRBK7hj4Ov3rIwAAkw0IAAz1NDNAQMXkxMJXXoGKLD1Q\n4mmorrbap+QGFhmm1PgmH3wAY1ylLxHtHjXgu6kFWouHqWaEwgygm4HEdnh5a6z3\nZLHFsj+L7PYfcGscsHmBO/WHS3MMlxicZH0gOdCiLUY9KJHLGjU063zc48FJvijR\nTxOHIiQfeX03St045iVXq5N8E79dREwahR3PqrhyWhAmF8mL1OK+j50nkOrMJALW\nJhT2ei9uFmo7BbU2sxkoVKLlLcTtQQOywmY73qU1Iw4bb87LQVoCtlroKLTH0axf\nfSjT3o/KLczfESI+XBJa1q5CO+VYIlivD6846lDX6IsbVat4+LmRhQ2oR3gMSUs=\n=pve/\n-----END PGP SIGNATURE-----\n", "payload": "tree 10839aab7eb0ff316cd05232f25d33e0f5c8c294\nparent 783617b5e4f1d03e3049377c0e266a89b98fc627\nparent cff59f80e4ad2325dc3550da762c37721e2bad37\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677092759 +0100\ncommitter GitHub <noreply@github.com> 1677092759 +0100\n\nRollup merge of #108342 - lcnr:opaque-tys, r=oli-obk\n\napply query response: actually define opaque types\n\nnot sure whether this fixes any code considering that #107891 doesn't break anything, but this is currently wrong as the `eq` there should just always fail right now.\n\nWe can definitely hit this code if we remove the `replace_opaque_types_with_inference_vars` hack. Doing so without this PR causes a few tests to ICE, e.g.\n\nhttps://github.com/rust-lang/rust/blob/bd4a96a12d0bf6dc12edf20a45df3a33052c9d7d/tests/ui/impl-trait/issue-99642.rs#L1-L7\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad6a39feac02b3c28bfd90a3c36bf6b74b03512", "html_url": "https://github.com/rust-lang/rust/commit/2ad6a39feac02b3c28bfd90a3c36bf6b74b03512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ad6a39feac02b3c28bfd90a3c36bf6b74b03512/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "783617b5e4f1d03e3049377c0e266a89b98fc627", "url": "https://api.github.com/repos/rust-lang/rust/commits/783617b5e4f1d03e3049377c0e266a89b98fc627", "html_url": "https://github.com/rust-lang/rust/commit/783617b5e4f1d03e3049377c0e266a89b98fc627"}, {"sha": "cff59f80e4ad2325dc3550da762c37721e2bad37", "url": "https://api.github.com/repos/rust-lang/rust/commits/cff59f80e4ad2325dc3550da762c37721e2bad37", "html_url": "https://github.com/rust-lang/rust/commit/cff59f80e4ad2325dc3550da762c37721e2bad37"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "7177e2f10173be9cac47e8dc1f4a4e7720989ecf", "filename": "compiler/rustc_infer/src/infer/canonical/query_response.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2ad6a39feac02b3c28bfd90a3c36bf6b74b03512/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad6a39feac02b3c28bfd90a3c36bf6b74b03512/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fquery_response.rs?ref=2ad6a39feac02b3c28bfd90a3c36bf6b74b03512", "patch": "@@ -393,6 +393,7 @@ impl<'tcx> InferCtxt<'tcx> {\n     /// will instantiate fresh inference variables for each canonical\n     /// variable instead. Therefore, the result of this method must be\n     /// properly unified\n+    #[instrument(level = \"debug\", skip(self, cause, param_env))]\n     fn query_response_substitution_guess<R>(\n         &self,\n         cause: &ObligationCause<'tcx>,\n@@ -403,11 +404,6 @@ impl<'tcx> InferCtxt<'tcx> {\n     where\n         R: Debug + TypeFoldable<'tcx>,\n     {\n-        debug!(\n-            \"query_response_substitution_guess(original_values={:#?}, query_response={:#?})\",\n-            original_values, query_response,\n-        );\n-\n         // For each new universe created in the query result that did\n         // not appear in the original query, create a local\n         // superuniverse.\n@@ -502,7 +498,9 @@ impl<'tcx> InferCtxt<'tcx> {\n         for &(a, b) in &query_response.value.opaque_types {\n             let a = substitute_value(self.tcx, &result_subst, a);\n             let b = substitute_value(self.tcx, &result_subst, b);\n-            obligations.extend(self.at(cause, param_env).eq(a, b)?.obligations);\n+            debug!(?a, ?b, \"constrain opaque type\");\n+            obligations\n+                .extend(self.at(cause, param_env).define_opaque_types(true).eq(a, b)?.obligations);\n         }\n \n         Ok(InferOk { value: result_subst, obligations })"}]}