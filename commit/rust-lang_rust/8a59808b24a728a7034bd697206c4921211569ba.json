{"sha": "8a59808b24a728a7034bd697206c4921211569ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNTk4MDhiMjRhNzI4YTcwMzRiZDY5NzIwNmM0OTIxMjExNTY5YmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-23T14:44:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-23T14:44:02Z"}, "message": "Improve readme", "tree": {"sha": "ba2409e49441dbb99a45e89bb6cc35756e4df183", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba2409e49441dbb99a45e89bb6cc35756e4df183"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a59808b24a728a7034bd697206c4921211569ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a59808b24a728a7034bd697206c4921211569ba", "html_url": "https://github.com/rust-lang/rust/commit/8a59808b24a728a7034bd697206c4921211569ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a59808b24a728a7034bd697206c4921211569ba/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8699076f9d9078f401188e533283dd25de07439", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8699076f9d9078f401188e533283dd25de07439", "html_url": "https://github.com/rust-lang/rust/commit/c8699076f9d9078f401188e533283dd25de07439"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "c4e55975541d384c24b834f4f5cc403bc5b838fa", "filename": "Readme.md", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8a59808b24a728a7034bd697206c4921211569ba/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a59808b24a728a7034bd697206c4921211569ba/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=8a59808b24a728a7034bd697206c4921211569ba", "patch": "@@ -2,7 +2,7 @@\n \n > \u26a0\u26a0\u26a0 Certain kinds of FFI don't work yet. \u26a0\u26a0\u26a0\n \n-The goal of this project is to create an alternative codegen backend for the rust compiler based on [Cranelift](https://github.com/bytecodealliance/wasmtime/blob/master/cranelift). This has the potential to improve compilation times in debug mode. If your project doesn't use any of the things listed under \"Not yet supported\", it should probably work fine. If not please open an issue.\n+The goal of this project is to create an alternative codegen backend for the rust compiler based on [Cranelift](https://github.com/bytecodealliance/wasmtime/blob/master/cranelift). This has the potential to improve compilation times in debug mode. If your project doesn't use any of the things listed under \"Not yet supported\", it should work fine. If not please open an issue.\n \n ## Building\n \n@@ -59,21 +59,7 @@ function jit_calc() {\n \n ## Env vars\n \n-<dl>\n-    <dt>CG_CLIF_JIT</dt>\n-    <dd>Enable JIT mode to immediately run a program instead of writing an executable file.</dd>\n-    <dt>CG_CLIF_JIT_ARGS</dt>\n-    <dd>When JIT mode is enable pass these arguments to the program.</dd>\n-    <dt>CG_CLIF_INCR_CACHE_DISABLED</dt>\n-    <dd>Don't cache object files in the incremental cache. Useful during development of cg_clif\n-    to make it possible to use incremental mode for all analyses performed by rustc without caching\n-    object files when their content should have been changed by a change to cg_clif.</dd>\n-    <dt>CG_CLIF_DISPLAY_CG_TIME</dt>\n-    <dd>If \"1\", display the time it took to perform codegen for a crate</dd>\n-    <dt>CG_CLIF_FUNCTION_SECTIONS</dt>\n-    <dd>Use a single section for each function. This will often reduce the executable size at the\n-        cost of making linking significantly slower.</dd>\n-</dl>\n+[see env_vars.md](docs/env_vars.md)\n \n ## Not yet supported\n "}, {"sha": "3707909a978027b7b6ffad80d5570ebfaa8301ac", "filename": "docs/env_vars.md", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8a59808b24a728a7034bd697206c4921211569ba/docs%2Fenv_vars.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a59808b24a728a7034bd697206c4921211569ba/docs%2Fenv_vars.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fenv_vars.md?ref=8a59808b24a728a7034bd697206c4921211569ba", "patch": "@@ -0,0 +1,17 @@\n+# List of env vars recognized by cg_clif\n+\n+<dl>\n+    <dt>CG_CLIF_JIT</dt>\n+    <dd>Enable JIT mode to immediately run a program instead of writing an executable file.</dd>\n+    <dt>CG_CLIF_JIT_ARGS</dt>\n+    <dd>When JIT mode is enable pass these arguments to the program.</dd>\n+    <dt>CG_CLIF_INCR_CACHE_DISABLED</dt>\n+    <dd>Don't cache object files in the incremental cache. Useful during development of cg_clif\n+    to make it possible to use incremental mode for all analyses performed by rustc without caching\n+    object files when their content should have been changed by a change to cg_clif.</dd>\n+    <dt>CG_CLIF_DISPLAY_CG_TIME</dt>\n+    <dd>If \"1\", display the time it took to perform codegen for a crate</dd>\n+    <dt>CG_CLIF_FUNCTION_SECTIONS</dt>\n+    <dd>Use a single section for each function. This will often reduce the executable size at the\n+        cost of making linking significantly slower.</dd>\n+</dl>"}]}