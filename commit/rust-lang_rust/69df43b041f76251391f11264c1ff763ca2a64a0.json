{"sha": "69df43b041f76251391f11264c1ff763ca2a64a0", "node_id": "C_kwDOAAsO6NoAKDY5ZGY0M2IwNDFmNzYyNTEzOTFmMTEyNjRjMWZmNzYzY2EyYTY0YTA", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-10-20T05:48:53Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-10-30T23:35:26Z"}, "message": "Improve display of enum variants\n\nUse h3 and h4 for the variant name and the \"Fields\" subheading.\nRemove the \"of T\" part of the \"Fields\" subheading.\nRemove border-bottom from \"Fields\" subheading.\nMove docblock below \"Fields\" listing.", "tree": {"sha": "938c2ea639ed394f815c9c6c14093a75ba6a4edb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/938c2ea639ed394f815c9c6c14093a75ba6a4edb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69df43b041f76251391f11264c1ff763ca2a64a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69df43b041f76251391f11264c1ff763ca2a64a0", "html_url": "https://github.com/rust-lang/rust/commit/69df43b041f76251391f11264c1ff763ca2a64a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69df43b041f76251391f11264c1ff763ca2a64a0/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e249ce6b2345587d6e11052779c86adbad626dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/e249ce6b2345587d6e11052779c86adbad626dff", "html_url": "https://github.com/rust-lang/rust/commit/e249ce6b2345587d6e11052779c86adbad626dff"}], "stats": {"total": 137, "additions": 89, "deletions": 48}, "files": [{"sha": "096541423c6c1f3633cfdf2dda9b05a924b22927", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=69df43b041f76251391f11264c1ff763ca2a64a0", "patch": "@@ -1080,7 +1080,7 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n                 cx.derive_id(format!(\"{}.{}\", ItemType::Variant, variant.name.as_ref().unwrap()));\n             write!(\n                 w,\n-                \"<div id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n+                \"<h3 id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n                     <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n                     <code>{name}\",\n                 id = id,\n@@ -1093,9 +1093,7 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n             }\n             w.write_str(\"</code>\");\n             render_stability_since(w, variant, it, cx.tcx());\n-            w.write_str(\"</div>\");\n-            document(w, cx, variant, Some(it), HeadingOffset::H3);\n-            document_non_exhaustive(w, variant);\n+            w.write_str(\"</h3>\");\n \n             use crate::clean::Variant;\n             if let Some((extra, fields)) = match *variant.kind {\n@@ -1109,12 +1107,8 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n                     variant.name.as_ref().unwrap()\n                 ));\n                 write!(w, \"<div class=\\\"sub-variant\\\" id=\\\"{id}\\\">\", id = variant_id);\n-                write!(\n-                    w,\n-                    \"<h3>{extra}Fields of <b>{name}</b></h3><div>\",\n-                    extra = extra,\n-                    name = variant.name.as_ref().unwrap(),\n-                );\n+                write!(w, \"<h4>{extra}Fields</h4>\", extra = extra,);\n+                document_non_exhaustive(w, variant);\n                 for field in fields {\n                     match *field.kind {\n                         clean::StrippedItem(box clean::StructFieldItem(_)) => {}\n@@ -1126,21 +1120,25 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n                             ));\n                             write!(\n                                 w,\n-                                \"<span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n+                                \"<div class=\\\"sub-variant-field\\\">\\\n+                                 <span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n                                     <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n                                     <code>{f}:&nbsp;{t}</code>\\\n                                 </span>\",\n                                 id = id,\n                                 f = field.name.as_ref().unwrap(),\n                                 t = ty.print(cx)\n                             );\n-                            document(w, cx, field, Some(variant), HeadingOffset::H4);\n+                            document(w, cx, field, Some(variant), HeadingOffset::H5);\n+                            write!(w, \"</div>\");\n                         }\n                         _ => unreachable!(),\n                     }\n                 }\n-                w.write_str(\"</div></div>\");\n+                w.write_str(\"</div>\");\n             }\n+\n+            document(w, cx, variant, Some(it), HeadingOffset::H4);\n         }\n     }\n     let def_id = it.def_id.expect_def_id();"}, {"sha": "968e40ec4cb0b12fee7ce4c12a025a9e836adf4f", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=69df43b041f76251391f11264c1ff763ca2a64a0", "patch": "@@ -1101,25 +1101,28 @@ a.test-arrow:hover{\n \tmargin-right: 5px;\n }\n \n-.sub-variant, .sub-variant > h3 {\n-\tmargin-top: 0px !important;\n-\tpadding-top: 1px;\n+h3.variant {\n+\tfont-weight: 600;\n+\tfont-size: 1.1em;\n+\tmargin-bottom: 10px;\n+\tborder-bottom: none;\n }\n \n-#main .sub-variant > h3 {\n-\tfont-size: 15px;\n-\tmargin-left: 25px;\n-\tmargin-bottom: 5px;\n+.sub-variant h4 {\n+\tfont-size: 1em;\n+\tfont-weight: 400;\n+\tborder-bottom: none;\n+\tmargin-top: 0;\n+\tmargin-bottom: 0;\n }\n \n-.sub-variant > div {\n-\tmargin-left: 20px;\n-\tmargin-bottom: 10px;\n+.sub-variant {\n+\tmargin-left: 24px;\n+\tmargin-bottom: 40px;\n }\n \n-.sub-variant > div > span {\n-\tdisplay: block;\n-\tposition: relative;\n+.sub-variant > .sub-variant-field {\n+\tmargin-left: 24px;\n }\n \n .toggle-label {"}, {"sha": "3b5cfeb68af6137f2fa8349f9373e142b91cf896", "filename": "src/test/rustdoc-gui/headings.goml", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheadings.goml?ref=69df43b041f76251391f11264c1ff763ca2a64a0", "patch": "@@ -1,4 +1,4 @@\n-// This test check that headers (a) have the correct heading level, (b) are the right size,\n+// This test checks that headers (a) have the correct heading level, (b) are the right size,\n // and (c) have the correct underlining (or absence of underlining).\n // The sizes may change as design changes, but try to make sure a lower header is never bigger than\n // its parent headers. Also make sure lower headers don't have underlines when their parents lack\n@@ -67,25 +67,25 @@ assert-css: (\"h4#top-doc-prose-sub-sub-heading\", {\"border-bottom-width\": \"1px\"})\n assert-css: (\"h2#variants\", {\"font-size\": \"22.4px\"})\n assert-css: (\"h2#variants\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"h3#none-prose-title\", {\"font-size\": \"20.8px\"})\n-assert-css: (\"h3#none-prose-title\", {\"border-bottom-width\": \"0px\"})\n-assert-css: (\"h4#none-prose-sub-heading\", {\"font-size\": \"16px\"})\n-assert-css: (\"h4#none-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n-\n-assert-css: (\"h3#wrapped-prose-title\", {\"font-size\": \"20.8px\"})\n-assert-css: (\"h3#wrapped-prose-title\", {\"border-bottom-width\": \"0px\"})\n-assert-css: (\"h4#wrapped-prose-sub-heading\", {\"font-size\": \"16px\"})\n-assert-css: (\"h4#wrapped-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n-\n-assert-css: (\"h4#wrapped0-prose-title\", {\"font-size\": \"16px\"})\n-assert-css: (\"h4#wrapped0-prose-title\", {\"border-bottom-width\": \"0px\"})\n-assert-css: (\"h5#wrapped0-prose-sub-heading\", {\"font-size\": \"16px\"})\n-assert-css: (\"h5#wrapped0-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n-\n-assert-css: (\"h4#structy-prose-title\", {\"font-size\": \"16px\"})\n-assert-css: (\"h4#structy-prose-title\", {\"border-bottom-width\": \"0px\"})\n-assert-css: (\"h5#structy-prose-sub-heading\", {\"font-size\": \"16px\"})\n-assert-css: (\"h5#structy-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"h4#none-prose-title\", {\"font-size\": \"16px\"})\n+assert-css: (\"h4#none-prose-title\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"h5#none-prose-sub-heading\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#none-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n+\n+assert-css: (\"h4#wrapped-prose-title\", {\"font-size\": \"16px\"})\n+assert-css: (\"h4#wrapped-prose-title\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"h5#wrapped-prose-sub-heading\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#wrapped-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n+\n+assert-css: (\"h5#wrapped0-prose-title\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#wrapped0-prose-title\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"h6#wrapped0-prose-sub-heading\", {\"font-size\": \"15.2px\"})\n+assert-css: (\"h6#wrapped0-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n+\n+assert-css: (\"h5#structy-prose-title\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#structy-prose-title\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"h6#structy-prose-sub-heading\", {\"font-size\": \"15.2px\"})\n+assert-css: (\"h6#structy-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n \n assert-css: (\"h2#implementations\", {\"font-size\": \"22.4px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})"}, {"sha": "2e5c34391c4af5a0e99b760ce7c4adb420e14839", "filename": "src/test/rustdoc/enum-headings.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Ftest%2Frustdoc%2Fenum-headings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Ftest%2Frustdoc%2Fenum-headings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fenum-headings.rs?ref=69df43b041f76251391f11264c1ff763ca2a64a0", "patch": "@@ -0,0 +1,40 @@\n+#![crate_name = \"foo\"]\n+// @has foo/enum.Token.html\n+/// A token!\n+/// # First\n+/// Some following text...\n+// @has - '//h2[@id=\"first\"]' \"First\"\n+pub enum Token {\n+    /// A declaration!\n+    /// # Variant-First\n+    /// Some following text...\n+    // @has - '//h4[@id=\"variant-first\"]' \"Variant-First\"\n+    Declaration {\n+        /// A version!\n+        /// # Variant-Field-First\n+        /// Some following text...\n+        // @has - '//h5[@id=\"variant-field-first\"]' \"Variant-Field-First\"\n+        version: String,\n+    },\n+    /// A Zoople!\n+    /// # Variant-First\n+    Zoople(\n+        // @has - '//h5[@id=\"variant-tuple-field-first\"]' \"Variant-Tuple-Field-First\"\n+        /// Zoople's first variant!\n+        /// # Variant-Tuple-Field-First\n+        /// Some following text...\n+        usize,\n+    ),\n+    /// Unfinished business!\n+    /// # Non-Exhaustive-First\n+    /// Some following text...\n+    // @has - '//h4[@id=\"non-exhaustive-first\"]' \"Non-Exhaustive-First\"\n+    #[non_exhaustive]\n+    Unfinished {\n+        /// This is x.\n+        /// # X-First\n+        /// Some following text...\n+        // @has - '//h5[@id=\"x-first\"]' \"X-First\"\n+        x: usize,\n+    },\n+}"}, {"sha": "139c5b4391ab7261860d3eb2f6f84ef99fd187af", "filename": "src/test/rustdoc/tuple-struct-fields-doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69df43b041f76251391f11264c1ff763ca2a64a0/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftuple-struct-fields-doc.rs?ref=69df43b041f76251391f11264c1ff763ca2a64a0", "patch": "@@ -20,10 +20,10 @@ pub struct Foo(\n \n // @has foo/enum.Bar.html\n // @has - '//pre[@class=\"rust enum\"]' 'BarVariant(String),'\n-// @matches - '//*[@id=\"variant.BarVariant.fields\"]/h3' '^Tuple Fields of BarVariant$'\n+// @matches - '//*[@id=\"variant.BarVariant.fields\"]/h4' '^Tuple Fields$'\n // @has - '//*[@id=\"variant.BarVariant.field.0\"]' '0: String'\n // @has - '//*[@id=\"variant.BarVariant.fields\"]//*[@class=\"docblock\"]' 'Hello docs'\n-// @matches - '//*[@id=\"variant.FooVariant.fields\"]/h3' '^Fields of FooVariant$'\n+// @matches - '//*[@id=\"variant.FooVariant.fields\"]/h4' '^Fields$'\n pub enum Bar {\n     BarVariant(\n         /// Hello docs"}]}