{"sha": "b029a188205b704fed28d4fbe0037a453ace0ea1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMjlhMTg4MjA1YjcwNGZlZDI4ZDRmYmUwMDM3YTQ1M2FjZTBlYTE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-08T06:59:23Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-09T01:02:03Z"}, "message": "extra::test: add an opaque function to assist with accurate\nbenchmarking.\n\nThis allows a result to be marked as \"used\" by passing it to a function\nLLVM cannot see inside. By making `iter` generic and using this\n`black_box` on the result benchmarks can get this behaviour simply by\nreturning their computation.", "tree": {"sha": "43257bf8f7e43619c3ae28acebb7847e67c9e4fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43257bf8f7e43619c3ae28acebb7847e67c9e4fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b029a188205b704fed28d4fbe0037a453ace0ea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b029a188205b704fed28d4fbe0037a453ace0ea1", "html_url": "https://github.com/rust-lang/rust/commit/b029a188205b704fed28d4fbe0037a453ace0ea1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b029a188205b704fed28d4fbe0037a453ace0ea1/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b60bed97918af43abe0b7d62f21c780d58042755", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60bed97918af43abe0b7d62f21c780d58042755", "html_url": "https://github.com/rust-lang/rust/commit/b60bed97918af43abe0b7d62f21c780d58042755"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "109bf2e489b552223f0c7b26d4fb1a648870664a", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b029a188205b704fed28d4fbe0037a453ace0ea1/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b029a188205b704fed28d4fbe0037a453ace0ea1/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=b029a188205b704fed28d4fbe0037a453ace0ea1", "patch": "@@ -29,7 +29,7 @@ Rust extras are part of the standard Rust distribution.\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n-#[feature(macro_rules, globs, managed_boxes)];\n+#[feature(macro_rules, globs, managed_boxes, asm)];\n \n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];"}, {"sha": "d809d69b58ed57077ce1724490e306f9a91454a7", "filename": "src/libextra/test.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b029a188205b704fed28d4fbe0037a453ace0ea1/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b029a188205b704fed28d4fbe0037a453ace0ea1/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=b029a188205b704fed28d4fbe0037a453ace0ea1", "patch": "@@ -1091,13 +1091,25 @@ impl MetricMap {\n \n // Benchmarking\n \n+/// A function that is opaque to the optimiser, to allow benchmarks to\n+/// pretend to use outputs to assist in avoiding dead-code\n+/// elimination.\n+///\n+/// This function is a no-op, and does not even read from `dummy`.\n+pub fn black_box<T>(dummy: T) {\n+    // we need to \"use\" the argument in some way LLVM can't\n+    // introspect.\n+    unsafe {asm!(\"\" : : \"r\"(&dummy))}\n+}\n+\n+\n impl BenchHarness {\n     /// Callback for benchmark functions to run in their body.\n-    pub fn iter(&mut self, inner: ||) {\n+    pub fn iter<T>(&mut self, inner: || -> T) {\n         self.ns_start = precise_time_ns();\n         let k = self.iterations;\n         for _ in range(0u64, k) {\n-            inner();\n+            black_box(inner());\n         }\n         self.ns_end = precise_time_ns();\n     }"}]}