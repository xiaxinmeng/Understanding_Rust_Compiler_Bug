{"sha": "5e1ca23a65324156ea72cf8bd46ae16672471007", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMWNhMjNhNjUzMjQxNTZlYTcyY2Y4YmQ0NmFlMTY2NzI0NzEwMDc=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T20:00:20Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T20:00:20Z"}, "message": "Merge branch 'vec-exh' of https://github.com/stepancheg/rust into rollup", "tree": {"sha": "0f77e538f6b36e36fa3d5f5a6b89384cb0a2c8e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f77e538f6b36e36fa3d5f5a6b89384cb0a2c8e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e1ca23a65324156ea72cf8bd46ae16672471007", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1ca23a65324156ea72cf8bd46ae16672471007", "html_url": "https://github.com/rust-lang/rust/commit/5e1ca23a65324156ea72cf8bd46ae16672471007", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e1ca23a65324156ea72cf8bd46ae16672471007/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f4c9af13e8dcd9d0bee69db61291f0ad85f266", "url": "https://api.github.com/repos/rust-lang/rust/commits/09f4c9af13e8dcd9d0bee69db61291f0ad85f266", "html_url": "https://github.com/rust-lang/rust/commit/09f4c9af13e8dcd9d0bee69db61291f0ad85f266"}, {"sha": "828bfb2c61aaac93325b00737362769d045b6438", "url": "https://api.github.com/repos/rust-lang/rust/commits/828bfb2c61aaac93325b00737362769d045b6438", "html_url": "https://github.com/rust-lang/rust/commit/828bfb2c61aaac93325b00737362769d045b6438"}], "stats": {"total": 106, "additions": 88, "deletions": 18}, "files": [{"sha": "74d9b0fbfdab6103e90e734fdc7d7539086086ea", "filename": "doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -1305,7 +1305,7 @@ match crayons[0] {\n A vector can be destructured using pattern matching:\n \n ~~~~\n-let numbers: [int, ..3] = [1, 2, 3];\n+let numbers: &[int] = &[1, 2, 3];\n let score = match numbers {\n     [] => 0,\n     [a] => a * 10,"}, {"sha": "37f45142a1107f189c9eb5f897018ab255164ac0", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -255,6 +255,9 @@ pub fn is_useful(cx: &MatchCheckCtxt, m: &matrix, v: &[@pat]) -> useful {\n                 }\n                 not_useful\n               }\n+              ty::ty_evec(_, ty::vstore_fixed(n)) => {\n+                is_useful_specialized(cx, m, v, vec(n), n, left_ty)\n+              }\n               ty::ty_unboxed_vec(*) | ty::ty_evec(*) => {\n                 let max_len = do m.rev_iter().fold(0) |max_len, r| {\n                   match r[0].node {\n@@ -409,6 +412,29 @@ pub fn missing_ctor(cx: &MatchCheckCtxt,\n         else if true_found { Some(val(const_bool(false))) }\n         else { Some(val(const_bool(true))) }\n       }\n+      ty::ty_evec(_, ty::vstore_fixed(n)) => {\n+        let mut missing = true;\n+        let mut wrong = false;\n+        for r in m.iter() {\n+          match r[0].node {\n+            pat_vec(ref before, ref slice, ref after) => {\n+              let count = before.len() + after.len();\n+              if (count < n && slice.is_none()) || count > n {\n+                wrong = true;\n+              }\n+              if count == n || (count < n && slice.is_some()) {\n+                missing = false;\n+              }\n+            }\n+            _ => {}\n+          }\n+        }\n+        match (wrong, missing) {\n+          (true, _) => Some(vec(n)), // should be compile-time error\n+          (_, true) => Some(vec(n)),\n+          _         => None\n+        }\n+      }\n       ty::ty_unboxed_vec(*) | ty::ty_evec(*) => {\n \n         // Find the lengths and slices of all vector patterns."}, {"sha": "0f67d8a6d0c4bbcd8977cbd510db72ce2c4b0b1d", "filename": "src/test/compile-fail/borrowck-move-out-of-vec-tail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-move-out-of-vec-tail.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -6,7 +6,7 @@ struct Foo {\n }\n \n pub fn main() {\n-    let x = [\n+    let x = ~[\n         Foo { string: ~\"foo\" },\n         Foo { string: ~\"bar\" },\n         Foo { string: ~\"baz\" }"}, {"sha": "ca20d68e4cdcbde130e1e448ab4ef9cec03edeab", "filename": "src/test/compile-fail/borrowck-vec-pattern-element-loan.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-element-loan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-element-loan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-element-loan.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -1,5 +1,5 @@\n fn a() -> &[int] {\n-    let vec = [1, 2, 3, 4];\n+    let vec = ~[1, 2, 3, 4];\n     let tail = match vec {\n         [_, ..tail] => tail, //~ ERROR does not live long enough\n         _ => fail!(\"a\")\n@@ -8,7 +8,7 @@ fn a() -> &[int] {\n }\n \n fn b() -> &[int] {\n-    let vec = [1, 2, 3, 4];\n+    let vec = ~[1, 2, 3, 4];\n     let init = match vec {\n         [..init, _] => init, //~ ERROR does not live long enough\n         _ => fail!(\"b\")\n@@ -17,7 +17,7 @@ fn b() -> &[int] {\n }\n \n fn c() -> &[int] {\n-    let vec = [1, 2, 3, 4];\n+    let vec = ~[1, 2, 3, 4];\n     let slice = match vec {\n         [_, ..slice, _] => slice, //~ ERROR does not live long enough\n         _ => fail!(\"c\")"}, {"sha": "02ba1b9d2fffb634f41b8336a5aedfc7bbccfe71", "filename": "src/test/compile-fail/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-nesting.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -1,24 +1,24 @@\n fn a() {\n-    let mut vec = [~1, ~2, ~3];\n+    let mut vec = ~[~1, ~2, ~3];\n     match vec {\n         [~ref _a] => {\n-            vec[0] = ~4; //~ ERROR cannot assign to `vec[]` because it is borrowed\n+            vec[0] = ~4; //~ ERROR cannot assign to `(*vec)[]` because it is borrowed\n         }\n         _ => fail!(\"foo\")\n     }\n }\n \n fn b() {\n-    let mut vec = [~1, ~2, ~3];\n+    let mut vec = ~[~1, ~2, ~3];\n     match vec {\n         [.._b] => {\n-            vec[0] = ~4; //~ ERROR cannot assign to `vec[]` because it is borrowed\n+            vec[0] = ~4; //~ ERROR cannot assign to `(*vec)[]` because it is borrowed\n         }\n     }\n }\n \n fn c() {\n-    let mut vec = [~1, ~2, ~3];\n+    let mut vec = ~[~1, ~2, ~3];\n     match vec {\n         [_a, .._b] => {\n             //~^ ERROR cannot move out\n@@ -35,7 +35,7 @@ fn c() {\n }\n \n fn d() {\n-    let mut vec = [~1, ~2, ~3];\n+    let mut vec = ~[~1, ~2, ~3];\n     match vec {\n         [.._a, _b] => {\n             //~^ ERROR cannot move out\n@@ -46,7 +46,7 @@ fn d() {\n }\n \n fn e() {\n-    let mut vec = [~1, ~2, ~3];\n+    let mut vec = ~[~1, ~2, ~3];\n     match vec {\n         [_a, _b, _c] => {}\n         _ => {}"}, {"sha": "87511c34172cd16f05203bc8e99df819c27844bd", "filename": "src/test/compile-fail/borrowck-vec-pattern-tail-element-loan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-tail-element-loan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-tail-element-loan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-vec-pattern-tail-element-loan.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -1,5 +1,5 @@\n fn a() -> &int {\n-    let vec = [1, 2, 3, 4];\n+    let vec = ~[1, 2, 3, 4];\n     let tail = match vec {\n         [_a, ..tail] => &tail[0], //~ ERROR borrowed value does not live long enough\n         _ => fail!(\"foo\")"}, {"sha": "b3e139805a0d90fc9771d5237a9953a118d5bf26", "filename": "src/test/compile-fail/match-vec-fixed.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fmatch-vec-fixed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fmatch-vec-fixed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-fixed.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -0,0 +1,16 @@\n+fn a() {\n+    let v = [1, 2, 3];\n+    match v {\n+        [_, _, _] => {}\n+        [_, _, _] => {} //~ ERROR unreachable pattern\n+    }\n+    match v {\n+        [_, 1, _] => {}\n+        [_, 1, _] => {} //~ ERROR unreachable pattern\n+        _ => {}\n+    }\n+}\n+\n+fn main() {\n+    a();\n+}"}, {"sha": "b557242af44c12ab592f58c11e3d914e16e81573", "filename": "src/test/compile-fail/match-vec-unreachable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fmatch-vec-unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Fcompile-fail%2Fmatch-vec-unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-unreachable.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -6,13 +6,13 @@ fn main() {\n         _ => ()\n     }\n \n-    match [~\"foo\", ~\"bar\", ~\"baz\"] {\n+    match ~[~\"foo\", ~\"bar\", ~\"baz\"] {\n         [a, _, _, .._] => { println(a); }\n         [~\"foo\", ~\"bar\", ~\"baz\", ~\"foo\", ~\"bar\"] => { } //~ ERROR unreachable pattern\n         _ => { }\n     }\n \n-    match ['a', 'b', 'c'] {\n+    match ~['a', 'b', 'c'] {\n         ['a', 'b', 'c', .._tail] => {}\n         ['a', 'b', 'c'] => {} //~ ERROR unreachable pattern\n         _ => {}"}, {"sha": "234311dec33159cb2cd450a678f23f91fed8705d", "filename": "src/test/run-pass/vec-matching-fixed.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Frun-pass%2Fvec-matching-fixed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Frun-pass%2Fvec-matching-fixed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-matching-fixed.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -0,0 +1,28 @@\n+fn a() {\n+    let x = [1, 2, 3];\n+    match x {\n+        [1, 2, 4] => ::std::util::unreachable(),\n+        [0, 2, 3, .._] => ::std::util::unreachable(),\n+        [0, .._, 3] => ::std::util::unreachable(),\n+        [0, .._] => ::std::util::unreachable(),\n+        [1, 2, 3] => (),\n+        [_, _, _] => ::std::util::unreachable(),\n+    }\n+    match x {\n+        [.._] => (),\n+    }\n+    match x {\n+        [_, _, _, .._] => (),\n+    }\n+    match x {\n+        [a, b, c] => {\n+            assert_eq!(1, a);\n+            assert_eq!(2, b);\n+            assert_eq!(3, c);\n+        }\n+    }\n+}\n+\n+pub fn main() {\n+    a();\n+}"}, {"sha": "fb73c7e097dcf023502c57a29c732196f1bef62a", "filename": "src/test/run-pass/vec-matching.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Frun-pass%2Fvec-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Frun-pass%2Fvec-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-matching.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -1,5 +1,5 @@\n fn a() {\n-    let x = [1];\n+    let x = ~[1];\n     match x {\n         [_, _, _, _, _, .._] => ::std::util::unreachable(),\n         [.._, _, _, _, _] => ::std::util::unreachable(),\n@@ -13,7 +13,7 @@ fn a() {\n }\n \n fn b() {\n-    let x = [1, 2, 3];\n+    let x = ~[1, 2, 3];\n     match x {\n         [a, b, ..c] => {\n             assert_eq!(a, 1);"}, {"sha": "6a60308f2e70f0efec1e088a98cf925ddc411bb9", "filename": "src/test/run-pass/vec-tail-matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Frun-pass%2Fvec-tail-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1ca23a65324156ea72cf8bd46ae16672471007/src%2Ftest%2Frun-pass%2Fvec-tail-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-tail-matching.rs?ref=5e1ca23a65324156ea72cf8bd46ae16672471007", "patch": "@@ -3,7 +3,7 @@ struct Foo {\n }\n \n pub fn main() {\n-    let x = [\n+    let x = ~[\n         Foo { string: ~\"foo\" },\n         Foo { string: ~\"bar\" },\n         Foo { string: ~\"baz\" }"}]}