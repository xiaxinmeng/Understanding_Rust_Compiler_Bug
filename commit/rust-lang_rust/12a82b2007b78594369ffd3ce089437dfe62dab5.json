{"sha": "12a82b2007b78594369ffd3ce089437dfe62dab5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYTgyYjIwMDdiNzg1OTQzNjlmZmQzY2UwODk0MzdkZmU2MmRhYjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-13T08:19:55Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-13T08:19:55Z"}, "message": "also lint private modules for module_inception, as that is the main issue", "tree": {"sha": "a38d0337445813a4114ec393811432ebbf176647", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38d0337445813a4114ec393811432ebbf176647"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12a82b2007b78594369ffd3ce089437dfe62dab5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJX17arAAoJEFbW7qD8Z6xGRFQP+wa6Ghzqlbncq8fZ1eDT9HtP\nORu/AyPu0fTZ8NJ+jWaUegzyj6vg5bKacTdNe08zGwAx9C1sCxkXDQAw+37W3eYQ\niDVTVobuB6BrRH2/IkF8Ki/P1sg5DyBZMnv1l/gn/ttRX9hI1NSECOGq/xMlS+s6\nIgoZUZcCmGYuRNlMGuzwzrlwPz2aG5tygjb+n0G6ZPhXUzjna3xLeVO/uLe3CT2O\n88MwH5DwSADpkXAcqFiXjed8e8qCQAmgZ559vCemIsiB2PACnj8nedg9jLnBj+HG\nAoOW3obIyzT77SvS9fBtJUPWIbbYm63/k8u22/AB4uC/L3lcJp0Cnl/RwjSqrgXe\nm/EYJ2kfmyw6+iQklx9umgmzRUI5EejVulVwflCt+NsYNAYUkyNHVznBgLemVxk2\nvZLkFcJA60gOtMRBAwUt/C5h4ncxzOmBX/QX1BWqD6Yxxm+JLE+8CVdvFA0XjJdu\nO8tCu5PXu1IqK4VBZsyeXujBEEj0qiBSBzAivwquGz/yckRYjFrJJMeVgduWMKxs\ngfIRDumlGSck0t4jMF3hLQC04e4TjWMqvU37o9ONgEQYyh6sA4/5T8MtH+NlaIxh\nIiYRxKDWP7pEgD+FCw8LEHc0z4d6qcdzsyvIAe9SLgLLlQcnPSpLnyw5SuZ69ksQ\n9qvB/dU+TAkvbkF1tSBh\n=EJx3\n-----END PGP SIGNATURE-----", "payload": "tree a38d0337445813a4114ec393811432ebbf176647\nparent 03fa9748553c4939b76082b60438136ba3a0dfba\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1473754795 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1473754795 +0200\n\nalso lint private modules for module_inception, as that is the main issue"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12a82b2007b78594369ffd3ce089437dfe62dab5", "html_url": "https://github.com/rust-lang/rust/commit/12a82b2007b78594369ffd3ce089437dfe62dab5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12a82b2007b78594369ffd3ce089437dfe62dab5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03fa9748553c4939b76082b60438136ba3a0dfba", "url": "https://api.github.com/repos/rust-lang/rust/commits/03fa9748553c4939b76082b60438136ba3a0dfba", "html_url": "https://github.com/rust-lang/rust/commit/03fa9748553c4939b76082b60438136ba3a0dfba"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "69ec9911d99a20fccb5cd899ffaad829c9456ba8", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/12a82b2007b78594369ffd3ce089437dfe62dab5/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12a82b2007b78594369ffd3ce089437dfe62dab5/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=12a82b2007b78594369ffd3ce089437dfe62dab5", "patch": "@@ -194,21 +194,25 @@ impl EarlyLintPass for EnumVariantNames {\n         let item_name = item.ident.name.as_str();\n         let item_name_chars = item_name.chars().count();\n         let item_camel = to_camel_case(&item_name);\n-        if item.vis == Visibility::Public && !in_macro(cx, item.span) {\n+        if !in_macro(cx, item.span) {\n             if let Some(&(ref mod_name, ref mod_camel)) = self.modules.last() {\n                 // constants don't have surrounding modules\n                 if !mod_camel.is_empty() {\n                     if mod_name == &item_name {\n-                        span_lint(cx, MODULE_INCEPTION, item.span, \"item has the same name as its containing module\");\n+                        if let ItemKind::Mod(..) = item.node {\n+                            span_lint(cx, MODULE_INCEPTION, item.span, \"module has the same name as its containing module\");\n+                        }\n                     }\n-                    let matching = partial_match(mod_camel, &item_camel);\n-                    let rmatching = partial_rmatch(mod_camel, &item_camel);\n-                    let nchars = mod_camel.chars().count();\n-                    if matching == nchars {\n-                        span_lint(cx, STUTTER, item.span, &format!(\"Item name ({}) starts with its containing module's name ({})\", item_camel, mod_camel));\n-                    }\n-                    if rmatching == nchars {\n-                        span_lint(cx, STUTTER, item.span, &format!(\"Item name ({}) ends with its containing module's name ({})\", item_camel, mod_camel));\n+                    if item.vis == Visibility::Public {\n+                        let matching = partial_match(mod_camel, &item_camel);\n+                        let rmatching = partial_rmatch(mod_camel, &item_camel);\n+                        let nchars = mod_camel.chars().count();\n+                        if matching == nchars {\n+                            span_lint(cx, STUTTER, item.span, \"item name starts with its containing module's name\");\n+                        }\n+                        if rmatching == nchars {\n+                            span_lint(cx, STUTTER, item.span, \"item name ends with its containing module's name\");\n+                        }\n                     }\n                 }\n             }"}, {"sha": "861ed504c86ead1d1e22ac6dcba43964df7154d0", "filename": "tests/compile-fail/module_inception.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/12a82b2007b78594369ffd3ce089437dfe62dab5/tests%2Fcompile-fail%2Fmodule_inception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12a82b2007b78594369ffd3ce089437dfe62dab5/tests%2Fcompile-fail%2Fmodule_inception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmodule_inception.rs?ref=12a82b2007b78594369ffd3ce089437dfe62dab5", "patch": "@@ -4,26 +4,20 @@\n \n mod foo {\n     mod bar {\n-        pub mod bar { //~ ERROR item has the same name as its containing module\n+        mod bar { //~ ERROR module has the same name as its containing module\n             mod foo {}\n         }\n         mod foo {}\n     }\n-    pub mod foo { //~ ERROR item has the same name as its containing module\n+    mod foo { //~ ERROR module has the same name as its containing module\n         mod bar {}\n     }\n }\n \n-mod cake {\n-    mod cake {\n-        // no error, since module is not public\n-    }\n-}\n-\n // No warning. See <https://github.com/Manishearth/rust-clippy/issues/1220>.\n mod bar {\n     #[allow(module_inception)]\n-    pub mod bar {\n+    mod bar {\n     }\n }\n "}]}