{"sha": "cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMmEyODA4ZDA3OGIwYTdkNDlmN2E4OWZhN2QxNGVhZDFlYmMwZGY=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2019-06-02T00:29:05Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2019-06-09T05:38:18Z"}, "message": "Add some Vec <-> VecDeque documentation\n\nThese are more than just `.into_iter().collect()`, so talk about some of their nuances.", "tree": {"sha": "62bca4ad6ec055a95fe6c63f6a4f40f394b6d45b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62bca4ad6ec055a95fe6c63f6a4f40f394b6d45b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "html_url": "https://github.com/rust-lang/rust/commit/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6312b89fdabce0aedf613391266e08c0deef2324", "url": "https://api.github.com/repos/rust-lang/rust/commits/6312b89fdabce0aedf613391266e08c0deef2324", "html_url": "https://github.com/rust-lang/rust/commit/6312b89fdabce0aedf613391266e08c0deef2324"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "8cda28a5e4023a9f878d0b26648ed65adf7a0b33", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=cc2a2808d078b0a7d49f7a89fa7d14ead1ebc0df", "patch": "@@ -2707,6 +2707,33 @@ impl<T: fmt::Debug> fmt::Debug for VecDeque<T> {\n     }\n }\n \n+/// Turn a `Vec` into a `VecDeque`.\n+///\n+/// This avoids reallocating where possible, but the conditions for that are\n+/// strict, and subject to change, so shouldn't be relied upon unless the\n+/// `Vec` came from `From<VecDeque>` has hasn't been reallocated.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::VecDeque;\n+///\n+/// // Start with a VecDeque\n+/// let deque: VecDeque<_> = (1..5).collect();\n+///\n+/// // Turn it into a Vec (no allocation needed)\n+/// let mut vec = Vec::from(deque);\n+///\n+/// // modify it, being careful to not trigger reallocation\n+/// vec.pop();\n+/// vec.push(100);\n+///\n+/// // Turn it back into a VecDeque (no allocation needed)\n+/// let ptr = vec.as_ptr();\n+/// let deque = VecDeque::from(vec);\n+/// assert_eq!(deque, [1, 2, 3, 100]);\n+/// assert_eq!(deque.as_slices().0.as_ptr(), ptr);\n+/// ```\n #[stable(feature = \"vecdeque_vec_conversions\", since = \"1.10.0\")]\n impl<T> From<Vec<T>> for VecDeque<T> {\n     fn from(mut other: Vec<T>) -> Self {\n@@ -2733,6 +2760,32 @@ impl<T> From<Vec<T>> for VecDeque<T> {\n     }\n }\n \n+/// Turn a `VecDeque` into a `Vec`.\n+///\n+/// This never needs to re-allocate, but does need to do O(n) data movement if\n+/// the circular buffer doesn't happen to be at the beginning of the allocation.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::VecDeque;\n+///\n+/// // This one is O(1)\n+/// let deque: VecDeque<_> = (1..5).collect();\n+/// let ptr = deque.as_slices().0.as_ptr();\n+/// let vec = Vec::from(deque);\n+/// assert_eq!(vec, [1, 2, 3, 4]);\n+/// assert_eq!(vec.as_ptr(), ptr);\n+///\n+/// // This one need data rearranging\n+/// let mut deque: VecDeque<_> = (1..5).collect();\n+/// deque.push_front(9);\n+/// deque.push_front(8);\n+/// let ptr = deque.as_slices().1.as_ptr();\n+/// let vec = Vec::from(deque);\n+/// assert_eq!(vec, [8, 9, 1, 2, 3, 4]);\n+/// assert_eq!(vec.as_ptr(), ptr);\n+/// ```\n #[stable(feature = \"vecdeque_vec_conversions\", since = \"1.10.0\")]\n impl<T> From<VecDeque<T>> for Vec<T> {\n     fn from(other: VecDeque<T>) -> Self {"}]}