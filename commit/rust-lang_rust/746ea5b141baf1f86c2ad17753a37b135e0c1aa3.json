{"sha": "746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NmVhNWIxNDFiYWYxZjg2YzJhZDE3NzUzYTM3YjEzNWUwYzFhYTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-20T13:08:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-20T13:08:30Z"}, "message": "Auto merge of #1632 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nfix statx", "tree": {"sha": "cd4bbae03bcf14a86ffc84503e0140f834f8b939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd4bbae03bcf14a86ffc84503e0140f834f8b939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "html_url": "https://github.com/rust-lang/rust/commit/746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8f51fc5a772a125f3b3ad7fe46609a4638ca509", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f51fc5a772a125f3b3ad7fe46609a4638ca509", "html_url": "https://github.com/rust-lang/rust/commit/c8f51fc5a772a125f3b3ad7fe46609a4638ca509"}, {"sha": "697f6e36bd747fe0a2850324f39dadd1008e4592", "url": "https://api.github.com/repos/rust-lang/rust/commits/697f6e36bd747fe0a2850324f39dadd1008e4592", "html_url": "https://github.com/rust-lang/rust/commit/697f6e36bd747fe0a2850324f39dadd1008e4592"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "0260e9beab1738f07298beb2d1a246150351dedd", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "patch": "@@ -1 +1 @@\n-bf469eb6c20ccea05400a1942c70343f36705e1c\n+172acf8f61018df3719e42e633ffd62ebecaa1e7"}, {"sha": "10f0c910979228857b381fbe111bb8391b7fd046", "filename": "src/shims/posix/fs.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/src%2Fshims%2Fposix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/src%2Fshims%2Fposix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Ffs.rs?ref=746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "patch": "@@ -831,17 +831,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         };\n \n         let path = this.read_path_from_c_str(pathname_scalar)?.into_owned();\n-        // `flags` should be a `c_int` but the `syscall` function provides an `isize`.\n-        let flags: i32 =\n-            this.read_scalar(flags_op)?.to_machine_isize(&*this.tcx)?.try_into().map_err(|e| {\n-                err_unsup_format!(\"failed to convert pointer sized operand to integer: {}\", e)\n-            })?;\n+        // See <https://github.com/rust-lang/rust/pull/79196> for a discussion of argument sizes.\n+        let flags = this.read_scalar(flags_op)?.to_i32()?;\n         let empty_path_flag = flags & this.eval_libc(\"AT_EMPTY_PATH\")?.to_i32()? != 0;\n-        // `dirfd` should be a `c_int` but the `syscall` function provides an `isize`.\n-        let dirfd: i32 =\n-            this.read_scalar(dirfd_op)?.to_machine_isize(&*this.tcx)?.try_into().map_err(|e| {\n-                err_unsup_format!(\"failed to convert pointer sized operand to integer: {}\", e)\n-            })?;\n+        let dirfd = this.read_scalar(dirfd_op)?.to_i32()?;\n         // We only support:\n         // * interpreting `path` as an absolute directory,\n         // * interpreting `path` as a path relative to `dirfd` when the latter is `AT_FDCWD`, or"}, {"sha": "45afbd05efc25862c84dc8de184abc2a74dfe9d3", "filename": "src/shims/posix/linux/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/746ea5b141baf1f86c2ad17753a37b135e0c1aa3/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs?ref=746ea5b141baf1f86c2ad17753a37b135e0c1aa3", "patch": "@@ -208,9 +208,8 @@ fn getrandom<'tcx>(\n \n     // The only supported flags are GRND_RANDOM and GRND_NONBLOCK,\n     // neither of which have any effect on our current PRNG.\n-    let _flags = this.read_scalar(flags)?;\n-    // FIXME: Check that this is an integer type of the right size.\n-    // Currently, some callers pass i32 and some usize, is that even allowed?\n+    // See <https://github.com/rust-lang/rust/pull/79196> for a discussion of argument sizes.\n+    let _flags = this.read_scalar(flags)?.to_i32();\n \n     this.gen_random(ptr, len)?;\n     this.write_scalar(Scalar::from_machine_usize(len, this), dest)?;"}]}