{"sha": "41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYmZlOTRkNDA0YzY5ZjBmMmU3ZWJhZDczODM5NDBjZjBhYzFjYjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T07:14:07Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-16T08:59:53Z"}, "message": "syntax: extract parse_cfg_attr", "tree": {"sha": "927cdd3f8e28abe9ab7abcc374d7bf1f2e4e8aac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/927cdd3f8e28abe9ab7abcc374d7bf1f2e4e8aac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "html_url": "https://github.com/rust-lang/rust/commit/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d7969d065c438399cde2ebdcd411e5225a31b88", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d7969d065c438399cde2ebdcd411e5225a31b88", "html_url": "https://github.com/rust-lang/rust/commit/7d7969d065c438399cde2ebdcd411e5225a31b88"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "9c1e0bcaa4a171b3263462c28736387451dee95e", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "patch": "@@ -302,7 +302,6 @@ impl Attribute {\n         if self.tokens.is_empty() {\n             return Ok(Vec::new());\n         }\n-\n         self.parse(sess, |p| p.parse_derive_paths())\n     }\n "}, {"sha": "ee5a4eeb3a31f63da12f13788320844500dc6217", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "patch": "@@ -10,7 +10,6 @@ use crate::attr;\n use crate::ast;\n use crate::edition::Edition;\n use crate::mut_visit::*;\n-use crate::parse::token;\n use crate::ptr::P;\n use crate::sess::ParseSess;\n use crate::symbol::sym;\n@@ -112,25 +111,7 @@ impl<'a> StripUnconfigured<'a> {\n             return vec![];\n         }\n \n-        let (cfg_predicate, expanded_attrs) = match attr.parse(self.sess, |parser| {\n-            parser.expect(&token::OpenDelim(token::Paren))?;\n-\n-            let cfg_predicate = parser.parse_meta_item()?;\n-            parser.expect(&token::Comma)?;\n-\n-            // Presumably, the majority of the time there will only be one attr.\n-            let mut expanded_attrs = Vec::with_capacity(1);\n-\n-            while !parser.check(&token::CloseDelim(token::Paren)) {\n-                let lo = parser.token.span.lo();\n-                let item = parser.parse_attr_item()?;\n-                expanded_attrs.push((item, parser.prev_span.with_lo(lo)));\n-                parser.expect_one_of(&[token::Comma], &[token::CloseDelim(token::Paren)])?;\n-            }\n-\n-            parser.expect(&token::CloseDelim(token::Paren))?;\n-            Ok((cfg_predicate, expanded_attrs))\n-        }) {\n+        let (cfg_predicate, expanded_attrs) = match attr.parse(self.sess, |p| p.parse_cfg_attr()) {\n             Ok(result) => result,\n             Err(mut e) => {\n                 e.emit();"}, {"sha": "07689df389c22e14b4be7a481214176da8983a29", "filename": "src/libsyntax/parse/parser/attr.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs?ref=41bfe94d404c69f0f2e7ebad7383940cf0ac1cb3", "patch": "@@ -260,6 +260,27 @@ impl<'a> Parser<'a> {\n         Ok(lit)\n     }\n \n+    /// Parses `cfg_attr(pred, attr_item_list)` where `attr_item_list` is comma-delimited.\n+    crate fn parse_cfg_attr(&mut self) -> PResult<'a, (ast::MetaItem, Vec<(ast::AttrItem, Span)>)> {\n+        self.expect(&token::OpenDelim(token::Paren))?;\n+\n+        let cfg_predicate = self.parse_meta_item()?;\n+        self.expect(&token::Comma)?;\n+\n+        // Presumably, the majority of the time there will only be one attr.\n+        let mut expanded_attrs = Vec::with_capacity(1);\n+\n+        while !self.check(&token::CloseDelim(token::Paren)) {\n+            let lo = self.token.span.lo();\n+            let item = self.parse_attr_item()?;\n+            expanded_attrs.push((item, self.prev_span.with_lo(lo)));\n+            self.expect_one_of(&[token::Comma], &[token::CloseDelim(token::Paren)])?;\n+        }\n+\n+        self.expect(&token::CloseDelim(token::Paren))?;\n+        Ok((cfg_predicate, expanded_attrs))\n+    }\n+\n     /// Matches the following grammar (per RFC 1559).\n     ///\n     ///     meta_item : PATH ( '=' UNSUFFIXED_LIT | '(' meta_item_inner? ')' )? ;"}]}