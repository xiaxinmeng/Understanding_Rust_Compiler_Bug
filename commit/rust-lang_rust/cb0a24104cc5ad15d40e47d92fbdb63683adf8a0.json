{"sha": "cb0a24104cc5ad15d40e47d92fbdb63683adf8a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMGEyNDEwNGNjNWFkMTVkNDBlNDdkOTJmYmRiNjM2ODNhZGY4YTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-22T11:55:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-22T11:55:18Z"}, "message": "Merge #4082\n\n4082: Don't panic on `rust-analyzer --help` r=matklad a=eminence\n\nSpecial case handling for `-h` and `--help` if no subcommand is given.\r\n\r\nCloses #4068\n\nCo-authored-by: Andrew Chin <achin@eminence32.net>", "tree": {"sha": "fe8e38d620240606b136c9b70cf76f0deaadbb13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe8e38d620240606b136c9b70cf76f0deaadbb13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb0a24104cc5ad15d40e47d92fbdb63683adf8a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeoDCmCRBK7hj4Ov3rIwAAdHIIAIi3/YScHo84rGE1UgQBl3WF\nmPTtHumi2gHn86AEVdq4pyxvtMQa4/6pORQ17GDjKbxeCf+0k2+DEDNyFLJVGgtU\n5csrUJAlxaTxIOfmEbV7d7156nAzIcO4RRL1jsOYEVw6QYTPKOur16xlJsaSxYql\nXwASm1b7jPn36v8FNd8LY/WAH/TW3U4nSVqXSaTUGimxksTRCQKGoQ2JDhHuswC3\nElnar+Y6IkoRIxMbVm5JXJlLY27ATWjJffrfuUYGKMfduI0EhY9rs1nxqIr/k7Yr\nxha/ErvoGQEB6isPk0DO/m1mN+J5OyIJpvbPbBPwYNpMSWetHlsiZ9MW/RwOH30=\n=S0LC\n-----END PGP SIGNATURE-----\n", "payload": "tree fe8e38d620240606b136c9b70cf76f0deaadbb13\nparent e7bb260fbb988341a2afcd7b2acdeffb301a49c1\nparent 165f5c65772a157d842f766100a0ecc30d8ef351\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587556518 +0000\ncommitter GitHub <noreply@github.com> 1587556518 +0000\n\nMerge #4082\n\n4082: Don't panic on `rust-analyzer --help` r=matklad a=eminence\n\nSpecial case handling for `-h` and `--help` if no subcommand is given.\r\n\r\nCloses #4068\n\nCo-authored-by: Andrew Chin <achin@eminence32.net>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0a24104cc5ad15d40e47d92fbdb63683adf8a0", "html_url": "https://github.com/rust-lang/rust/commit/cb0a24104cc5ad15d40e47d92fbdb63683adf8a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb0a24104cc5ad15d40e47d92fbdb63683adf8a0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7bb260fbb988341a2afcd7b2acdeffb301a49c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7bb260fbb988341a2afcd7b2acdeffb301a49c1", "html_url": "https://github.com/rust-lang/rust/commit/e7bb260fbb988341a2afcd7b2acdeffb301a49c1"}, {"sha": "165f5c65772a157d842f766100a0ecc30d8ef351", "url": "https://api.github.com/repos/rust-lang/rust/commits/165f5c65772a157d842f766100a0ecc30d8ef351", "html_url": "https://github.com/rust-lang/rust/commit/165f5c65772a157d842f766100a0ecc30d8ef351"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "8e3ca9343ebb4b67506f9025673c0667b2002000", "filename": "crates/rust-analyzer/src/bin/args.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cb0a24104cc5ad15d40e47d92fbdb63683adf8a0/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0a24104cc5ad15d40e47d92fbdb63683adf8a0/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs?ref=cb0a24104cc5ad15d40e47d92fbdb63683adf8a0", "patch": "@@ -75,6 +75,10 @@ impl Args {\n         let subcommand = match matches.subcommand()? {\n             Some(it) => it,\n             None => {\n+                if matches.contains([\"-h\", \"--help\"]) {\n+                    print_subcommands();\n+                    return Ok(Err(HelpPrinted));\n+                }\n                 matches.finish().or_else(handle_extra_flags)?;\n                 return Ok(Ok(Args { verbosity, command: Command::RunServer }));\n             }\n@@ -267,8 +271,17 @@ ARGS:\n             }\n             \"proc-macro\" => Command::ProcMacro,\n             _ => {\n-                eprintln!(\n-                    \"\\\n+                print_subcommands();\n+                return Ok(Err(HelpPrinted));\n+            }\n+        };\n+        Ok(Ok(Args { verbosity, command }))\n+    }\n+}\n+\n+fn print_subcommands() {\n+    eprintln!(\n+        \"\\\n rust-analyzer\n \n USAGE:\n@@ -285,12 +298,7 @@ SUBCOMMANDS:\n     proc-macro\n     parse\n     symbols\"\n-                );\n-                return Ok(Err(HelpPrinted));\n-            }\n-        };\n-        Ok(Ok(Args { verbosity, command }))\n-    }\n+    )\n }\n \n pub(crate) struct HelpPrinted;"}]}