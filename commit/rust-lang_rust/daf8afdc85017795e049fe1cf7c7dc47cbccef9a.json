{"sha": "daf8afdc85017795e049fe1cf7c7dc47cbccef9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZjhhZmRjODUwMTc3OTVlMDQ5ZmUxY2Y3YzdkYzQ3Y2JjY2VmOWE=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-05T09:36:44Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-05T10:20:27Z"}, "message": "Remove more std::f32 imports in libstd", "tree": {"sha": "0f14e085ceb4d6455c14cd22c3bc922c6774642a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f14e085ceb4d6455c14cd22c3bc922c6774642a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daf8afdc85017795e049fe1cf7c7dc47cbccef9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daf8afdc85017795e049fe1cf7c7dc47cbccef9a", "html_url": "https://github.com/rust-lang/rust/commit/daf8afdc85017795e049fe1cf7c7dc47cbccef9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daf8afdc85017795e049fe1cf7c7dc47cbccef9a/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d06b26fb6c70e1d019951041f3cc535eae4afc40", "url": "https://api.github.com/repos/rust-lang/rust/commits/d06b26fb6c70e1d019951041f3cc535eae4afc40", "html_url": "https://github.com/rust-lang/rust/commit/d06b26fb6c70e1d019951041f3cc535eae4afc40"}], "stats": {"total": 108, "additions": 30, "deletions": 78}, "files": [{"sha": "65273275a4006be50a291c76c8504d0fcd22540a", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 15, "deletions": 39, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/daf8afdc85017795e049fe1cf7c7dc47cbccef9a/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daf8afdc85017795e049fe1cf7c7dc47cbccef9a/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=daf8afdc85017795e049fe1cf7c7dc47cbccef9a", "patch": "@@ -546,9 +546,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::FRAC_PI_2;\n+    /// let x = std::f32::consts::FRAC_PI_2;\n     ///\n     /// let abs_difference = (x.sin() - 1.0).abs();\n     ///\n@@ -566,9 +564,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = 2.0 * f32::consts::PI;\n+    /// let x = 2.0 * std::f32::consts::PI;\n     ///\n     /// let abs_difference = (x.cos() - 1.0).abs();\n     ///\n@@ -586,9 +582,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::FRAC_PI_4;\n+    /// let x = std::f32::consts::FRAC_PI_4;\n     /// let abs_difference = (x.tan() - 1.0).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n@@ -607,12 +601,10 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let f = f32::consts::FRAC_PI_2;\n+    /// let f = std::f32::consts::FRAC_PI_2;\n     ///\n     /// // asin(sin(pi/2))\n-    /// let abs_difference = (f.sin().asin() - f32::consts::FRAC_PI_2).abs();\n+    /// let abs_difference = (f.sin().asin() - std::f32::consts::FRAC_PI_2).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n@@ -630,12 +622,10 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let f = f32::consts::FRAC_PI_4;\n+    /// let f = std::f32::consts::FRAC_PI_4;\n     ///\n     /// // acos(cos(pi/4))\n-    /// let abs_difference = (f.cos().acos() - f32::consts::FRAC_PI_4).abs();\n+    /// let abs_difference = (f.cos().acos() - std::f32::consts::FRAC_PI_4).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n@@ -676,8 +666,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// // Positive angles measured counter-clockwise\n     /// // from positive x axis\n     /// // -pi/4 radians (45 deg clockwise)\n@@ -688,8 +676,8 @@ impl f32 {\n     /// let x2 = -3.0f32;\n     /// let y2 = 3.0f32;\n     ///\n-    /// let abs_difference_1 = (y1.atan2(x1) - (-f32::consts::FRAC_PI_4)).abs();\n-    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * f32::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_1 = (y1.atan2(x1) - (-std::f32::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * std::f32::consts::FRAC_PI_4)).abs();\n     ///\n     /// assert!(abs_difference_1 <= f32::EPSILON);\n     /// assert!(abs_difference_2 <= f32::EPSILON);\n@@ -707,9 +695,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::FRAC_PI_4;\n+    /// let x = std::f32::consts::FRAC_PI_4;\n     /// let f = x.sin_cos();\n     ///\n     /// let abs_difference_0 = (f.0 - x.sin()).abs();\n@@ -750,9 +736,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::E - 1.0;\n+    /// let x = std::f32::consts::E - 1.0;\n     ///\n     /// // ln(1 + (e - 1)) == ln(e) == 1\n     /// let abs_difference = (x.ln_1p() - 1.0).abs();\n@@ -771,9 +755,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let x = 1.0f32;\n     ///\n     /// let f = x.sinh();\n@@ -795,9 +777,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let x = 1.0f32;\n     /// let f = x.cosh();\n     /// // Solving cosh() at 1 gives this result\n@@ -819,9 +799,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let x = 1.0f32;\n     ///\n     /// let f = x.tanh();\n@@ -885,9 +863,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let f = e.tanh().atanh();\n     ///\n     /// let abs_difference = (f - e).abs();"}, {"sha": "ff222fc8539d0bc27a0cdc06ee205ad3b416e684", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 15, "deletions": 39, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/daf8afdc85017795e049fe1cf7c7dc47cbccef9a/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daf8afdc85017795e049fe1cf7c7dc47cbccef9a/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=daf8afdc85017795e049fe1cf7c7dc47cbccef9a", "patch": "@@ -548,9 +548,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::FRAC_PI_2;\n+    /// let x = std::f64::consts::FRAC_PI_2;\n     ///\n     /// let abs_difference = (x.sin() - 1.0).abs();\n     ///\n@@ -568,9 +566,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = 2.0 * f64::consts::PI;\n+    /// let x = 2.0 * std::f64::consts::PI;\n     ///\n     /// let abs_difference = (x.cos() - 1.0).abs();\n     ///\n@@ -588,9 +584,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::FRAC_PI_4;\n+    /// let x = std::f64::consts::FRAC_PI_4;\n     /// let abs_difference = (x.tan() - 1.0).abs();\n     ///\n     /// assert!(abs_difference < 1e-14);\n@@ -609,12 +603,10 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let f = f64::consts::FRAC_PI_2;\n+    /// let f = std::f64::consts::FRAC_PI_2;\n     ///\n     /// // asin(sin(pi/2))\n-    /// let abs_difference = (f.sin().asin() - f64::consts::FRAC_PI_2).abs();\n+    /// let abs_difference = (f.sin().asin() - std::f64::consts::FRAC_PI_2).abs();\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n@@ -632,12 +624,10 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let f = f64::consts::FRAC_PI_4;\n+    /// let f = std::f64::consts::FRAC_PI_4;\n     ///\n     /// // acos(cos(pi/4))\n-    /// let abs_difference = (f.cos().acos() - f64::consts::FRAC_PI_4).abs();\n+    /// let abs_difference = (f.cos().acos() - std::f64::consts::FRAC_PI_4).abs();\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n@@ -678,8 +668,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// // Positive angles measured counter-clockwise\n     /// // from positive x axis\n     /// // -pi/4 radians (45 deg clockwise)\n@@ -690,8 +678,8 @@ impl f64 {\n     /// let x2 = -3.0_f64;\n     /// let y2 = 3.0_f64;\n     ///\n-    /// let abs_difference_1 = (y1.atan2(x1) - (-f64::consts::FRAC_PI_4)).abs();\n-    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * f64::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_1 = (y1.atan2(x1) - (-std::f64::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * std::f64::consts::FRAC_PI_4)).abs();\n     ///\n     /// assert!(abs_difference_1 < 1e-10);\n     /// assert!(abs_difference_2 < 1e-10);\n@@ -709,9 +697,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::FRAC_PI_4;\n+    /// let x = std::f64::consts::FRAC_PI_4;\n     /// let f = x.sin_cos();\n     ///\n     /// let abs_difference_0 = (f.0 - x.sin()).abs();\n@@ -752,9 +738,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::E - 1.0;\n+    /// let x = std::f64::consts::E - 1.0;\n     ///\n     /// // ln(1 + (e - 1)) == ln(e) == 1\n     /// let abs_difference = (x.ln_1p() - 1.0).abs();\n@@ -773,9 +757,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let x = 1.0_f64;\n     ///\n     /// let f = x.sinh();\n@@ -797,9 +779,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let x = 1.0_f64;\n     /// let f = x.cosh();\n     /// // Solving cosh() at 1 gives this result\n@@ -821,9 +801,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let x = 1.0_f64;\n     ///\n     /// let f = x.tanh();\n@@ -887,9 +865,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let f = e.tanh().atanh();\n     ///\n     /// let abs_difference = (f - e).abs();"}]}