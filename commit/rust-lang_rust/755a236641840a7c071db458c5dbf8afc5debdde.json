{"sha": "755a236641840a7c071db458c5dbf8afc5debdde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NWEyMzY2NDE4NDBhN2MwNzFkYjQ1OGM1ZGJmOGFmYzVkZWJkZGU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-31T12:58:18Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-31T13:00:21Z"}, "message": "Get rid of another handwritten Span construtor in favour of a builtin function", "tree": {"sha": "8fd7bf18ea8c0a1d13c254692e674c9d195b19a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fd7bf18ea8c0a1d13c254692e674c9d195b19a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/755a236641840a7c071db458c5dbf8afc5debdde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmoCGYACgkQpp+NIls6\n19kblhAAp+D+e/+MBBlDZUlfTgJ7gn6tU0eT3cXq4xqWglvsefpQ17NsMJbOiSnv\nqce7FgpGFdoR4LZ/lzzAH0FyoL3lD8mqhA1Oh5pPlKjjVgIsH6+WbUOTub9yIiDV\n90OgBu2xjxvylLFw4vhvtnf63fLiZnAcrnuxTJtpOv8mtEQB9TBL3m69HHuPQXoX\nB9Hs7SoKO7jU+EIMxmjIrQAsTDWAYGE99gspw7sDfrF5F5Z4Y3I8T8GNVVpeWiEW\nb2Xopuc87+abtkFqM8JgU3MKrUaETOm5DmXlvD37kEHhuB2FBgNcI8aJmseArHn0\nLyrhYsCAtk3tBUxKBCjJ5SUuaKhl4yVtlXL4wIOQR3qwx0n0okx1yUQxM0o9YNnV\nP+QdpSkOJ6KzazZVeCmXf8334tPdcEZJQwa/hR6I4UwGlL1f5V2iDWi/bp8p9eMU\ngnzrzYLFu8fvtw3bYFaj9Css4kbgsosEWN5cRo9nSCC8CK/5EaBAZuGyj0TmeFT/\nTRF3oBk5u7DbkadltbWbJ0+DNxmgRN7TQNclilvdadGDeG7mxQhgOuZi2+McxKMX\nfUw0YTn8HTNNzVa0WHwUqMYpPo1DTJT3ejlyKgjqJsCdK3fTV3gnn37GrnrW4U1w\nvVy1+eDbaIehGaC1bCdze4b9LM3fpEyskcE/x0yArkRQn3e7V/E=\n=wmTJ\n-----END PGP SIGNATURE-----", "payload": "tree 8fd7bf18ea8c0a1d13c254692e674c9d195b19a6\nparent a8cf4e8ecb0b676ff6895b8ecd90f53f866cd676\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504184298 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504184421 +0200\n\nGet rid of another handwritten Span construtor in favour of a builtin function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/755a236641840a7c071db458c5dbf8afc5debdde", "html_url": "https://github.com/rust-lang/rust/commit/755a236641840a7c071db458c5dbf8afc5debdde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/755a236641840a7c071db458c5dbf8afc5debdde/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8cf4e8ecb0b676ff6895b8ecd90f53f866cd676", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8cf4e8ecb0b676ff6895b8ecd90f53f866cd676", "html_url": "https://github.com/rust-lang/rust/commit/a8cf4e8ecb0b676ff6895b8ecd90f53f866cd676"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "36411b73a623e0660bb0f6ae8faa60a4899f8554", "filename": "clippy_lints/src/if_let_redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/755a236641840a7c071db458c5dbf8afc5debdde/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/755a236641840a7c071db458c5dbf8afc5debdde/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs?ref=755a236641840a7c071db458c5dbf8afc5debdde", "patch": "@@ -1,6 +1,5 @@\n use rustc::lint::*;\n use rustc::hir::*;\n-use syntax::codemap::Span;\n use utils::{paths, span_lint_and_then, match_qpath, snippet};\n \n /// **What it does:*** Lint for redundant pattern matching over `Result` or\n@@ -74,11 +73,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                                    arms[0].pats[0].span,\n                                    &format!(\"redundant pattern matching, consider using `{}`\", good_method),\n                                    |db| {\n-                    let span = Span::new(\n-                        expr.span.lo(),\n-                        op.span.hi(),\n-                        expr.span.ctxt(),\n-                    );\n+                    let span = expr.span.with_hi(op.span.hi());\n                     db.span_suggestion(span, \"try this\", format!(\"if {}.{}\", snippet(cx, op.span, \"_\"), good_method));\n                 });\n             }"}]}