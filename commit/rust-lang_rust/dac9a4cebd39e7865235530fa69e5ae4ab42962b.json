{"sha": "dac9a4cebd39e7865235530fa69e5ae4ab42962b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYzlhNGNlYmQzOWU3ODY1MjM1NTMwZmE2OWU1YWU0YWI0Mjk2MmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T21:39:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T21:45:07Z"}, "message": "Don't spawn notify unnecessary", "tree": {"sha": "a66dd53b5ac61976eb94c8ed535efd949bbaf998", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a66dd53b5ac61976eb94c8ed535efd949bbaf998"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac9a4cebd39e7865235530fa69e5ae4ab42962b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac9a4cebd39e7865235530fa69e5ae4ab42962b", "html_url": "https://github.com/rust-lang/rust/commit/dac9a4cebd39e7865235530fa69e5ae4ab42962b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac9a4cebd39e7865235530fa69e5ae4ab42962b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65984773d347badfbde4fa013a28b2a0d7e5a0e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/65984773d347badfbde4fa013a28b2a0d7e5a0e3", "html_url": "https://github.com/rust-lang/rust/commit/65984773d347badfbde4fa013a28b2a0d7e5a0e3"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "a81ecdf208141261134ebe3819602dc5225ff2c7", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dac9a4cebd39e7865235530fa69e5ae4ab42962b/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac9a4cebd39e7865235530fa69e5ae4ab42962b/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=dac9a4cebd39e7865235530fa69e5ae4ab42962b", "patch": "@@ -182,6 +182,7 @@ impl GlobalState {\n                 }\n             },\n         };\n+\n         let watch = match self.config.files.watcher {\n             FilesWatcher::Client => vec![],\n             FilesWatcher::Notify => project_folders.watch,"}, {"sha": "59da3d77a10b9779219d576c99fa82eebed9bfec", "filename": "crates/vfs-notify/src/include.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dac9a4cebd39e7865235530fa69e5ae4ab42962b/crates%2Fvfs-notify%2Fsrc%2Finclude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac9a4cebd39e7865235530fa69e5ae4ab42962b/crates%2Fvfs-notify%2Fsrc%2Finclude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2Fsrc%2Finclude.rs?ref=dac9a4cebd39e7865235530fa69e5ae4ab42962b", "patch": "@@ -1,5 +1,4 @@\n //! See `Include`.\n-\n use std::convert::TryFrom;\n \n use globset::{Glob, GlobSet, GlobSetBuilder};"}, {"sha": "6aaa53f6375c2c43bfee405b34618337773d628f", "filename": "crates/vfs-notify/src/lib.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dac9a4cebd39e7865235530fa69e5ae4ab42962b/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac9a4cebd39e7865235530fa69e5ae4ab42962b/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2Fsrc%2Flib.rs?ref=dac9a4cebd39e7865235530fa69e5ae4ab42962b", "patch": "@@ -82,11 +82,13 @@ impl NotifyActor {\n                 Event::Message(msg) => match msg {\n                     Message::Config(config) => {\n                         self.watcher = None;\n-                        let (watcher_sender, watcher_receiver) = unbounded();\n-                        let watcher = log_notify_error(Watcher::new_immediate(move |event| {\n-                            watcher_sender.send(event).unwrap()\n-                        }));\n-                        self.watcher = watcher.map(|it| (it, watcher_receiver));\n+                        if !config.watch.is_empty() {\n+                            let (watcher_sender, watcher_receiver) = unbounded();\n+                            let watcher = log_notify_error(Watcher::new_immediate(move |event| {\n+                                watcher_sender.send(event).unwrap()\n+                            }));\n+                            self.watcher = watcher.map(|it| (it, watcher_receiver));\n+                        }\n \n                         let n_total = config.load.len();\n                         self.send(loader::Message::Progress { n_total, n_done: 0 });"}]}