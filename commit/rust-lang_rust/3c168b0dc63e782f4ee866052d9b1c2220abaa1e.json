{"sha": "3c168b0dc63e782f4ee866052d9b1c2220abaa1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMTY4YjBkYzYzZTc4MmY0ZWU4NjYwNTJkOWIxYzIyMjBhYmFhMWU=", "commit": {"author": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-04-28T08:55:48Z"}, "committer": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-06-09T15:28:34Z"}, "message": "Explicit what `check` means on concerned method.", "tree": {"sha": "1edda5b004be6159e184fb2872bf82ebac0d09bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1edda5b004be6159e184fb2872bf82ebac0d09bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c168b0dc63e782f4ee866052d9b1c2220abaa1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c168b0dc63e782f4ee866052d9b1c2220abaa1e", "html_url": "https://github.com/rust-lang/rust/commit/3c168b0dc63e782f4ee866052d9b1c2220abaa1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c168b0dc63e782f4ee866052d9b1c2220abaa1e/comments", "author": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8056d8e29b1ee82158bfa2a2fc65e09799ba1d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8056d8e29b1ee82158bfa2a2fc65e09799ba1d6", "html_url": "https://github.com/rust-lang/rust/commit/b8056d8e29b1ee82158bfa2a2fc65e09799ba1d6"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "d7e28d2450785617f74e120707738201a015edd4", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3c168b0dc63e782f4ee866052d9b1c2220abaa1e/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c168b0dc63e782f4ee866052d9b1c2220abaa1e/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=3c168b0dc63e782f4ee866052d9b1c2220abaa1e", "patch": "@@ -42,7 +42,8 @@ macro_rules! nonzero_integers {\n             pub struct $Ty($Int);\n \n             impl $Ty {\n-                /// Creates a non-zero without checking the value.\n+                /// Creates a non-zero without checking whether the value is non-zero.\n+                /// This results in undefined behaviour if the value is zero.\n                 ///\n                 /// # Safety\n                 ///\n@@ -291,7 +292,9 @@ macro_rules! nonzero_unsigned_operations {\n         $(\n             impl $Ty {\n                 /// Add an unsigned integer to a non-zero value.\n-                /// Return [`None`] on overflow.\n+                /// Check for overflow and return [`None`] on overflow\n+                /// As a consequence, the result cannot wrap to zero.\n+                ///\n                 ///\n                 /// # Examples\n                 ///\n@@ -354,7 +357,9 @@ macro_rules! nonzero_unsigned_operations {\n \n                 /// Add an unsigned integer to a non-zero value,\n                 /// assuming overflow cannot occur.\n-                /// This results in undefined behaviour when\n+                /// Overflow is unchecked, and it is undefined behaviour to overflow\n+                /// *even if the result would wrap to a non-zero value*.\n+                /// The behaviour is undefined as soon as\n                 #[doc = concat!(\"`self + rhs > \", stringify!($Int), \"::MAX`\")]\n                 #[doc = concat!(\" or `self + rhs < \", stringify!($Int), \"::MIN`.\")]\n                 ///\n@@ -381,8 +386,9 @@ macro_rules! nonzero_unsigned_operations {\n                 }\n \n                 /// Returns the smallest power of two greater than or equal to n.\n-                /// If the next power of two is greater than the type\u2019s maximum value,\n-                /// [`None`] is returned, otherwise the power of two is wrapped in [`Some`].\n+                /// Check for overflow and return [`None`]\n+                /// if the next power of two is greater than the type\u2019s maximum value.\n+                /// As a consequence, the result cannot wrap to zero.\n                 ///\n                 /// # Examples\n                 ///\n@@ -462,8 +468,9 @@ macro_rules! nonzero_signed_operations {\n                 }\n \n                 /// Checked absolute value.\n-                /// Returns [`None`] if\n+                /// Check for overflow and returns [`None`] if\n                 #[doc = concat!(\"`self == \", stringify!($Int), \"::MIN`.\")]\n+                /// The result cannot be zero.\n                 ///\n                 /// # Example\n                 ///\n@@ -647,7 +654,8 @@ macro_rules! nonzero_unsigned_signed_operations {\n         $(\n             impl $Ty {\n                 /// Multiply two non-zero integers together.\n-                /// Return [`None`] on overflow.\n+                /// Check for overflow and return [`None`] on overflow.\n+                /// As a consequence, the result cannot wrap to zero.\n                 ///\n                 /// # Examples\n                 ///\n@@ -712,7 +720,9 @@ macro_rules! nonzero_unsigned_signed_operations {\n \n                 /// Multiply two non-zero integers together,\n                 /// assuming overflow cannot occur.\n-                /// This results in undefined behavior when\n+                /// Overflow is unchecked, and it is undefined behaviour to overflow\n+                /// *even if the result would wrap to a non-zero value*.\n+                /// The behaviour is undefined as soon as\n                 #[doc = concat!(\"`self * rhs > \", stringify!($Int), \"::MAX`, \")]\n                 #[doc = concat!(\"or `self * rhs < \", stringify!($Int), \"::MIN`.\")]\n                 ///\n@@ -739,7 +749,8 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 }\n \n                 /// Raise non-zero value to an integer power.\n-                /// Return [`None`] on overflow.\n+                /// Check for overflow and return [`None`] on overflow.\n+                /// As a consequence, the result cannot wrap to zero.\n                 ///\n                 /// # Examples\n                 ///"}]}