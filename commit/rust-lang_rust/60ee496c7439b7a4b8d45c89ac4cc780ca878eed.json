{"sha": "60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "node_id": "C_kwDOAAsO6NoAKDYwZWU0OTZjNzQzOWI3YTRiOGQ0NWM4OWFjNGNjNzgwY2E4NzhlZWQ", "commit": {"author": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-08-26T08:40:48Z"}, "committer": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-09T13:56:20Z"}, "message": "Port LinkageConstOrMutType error", "tree": {"sha": "c89ddf0808307dd4c6e575494792b480a8b99878", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c89ddf0808307dd4c6e575494792b480a8b99878"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "html_url": "https://github.com/rust-lang/rust/commit/60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/comments", "author": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d79d3c4bb8768b4e8ee2b243a625bbfd740a696", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d79d3c4bb8768b4e8ee2b243a625bbfd740a696", "html_url": "https://github.com/rust-lang/rust/commit/5d79d3c4bb8768b4e8ee2b243a625bbfd740a696"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "07c46e9363214e39a71989f661a4ae1002e14d10", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "patch": "@@ -1,7 +1,7 @@\n use crate::base;\n use crate::common::{self, CodegenCx};\n use crate::debuginfo;\n-use crate::errors::InvalidMinimumAlignment;\n+use crate::errors::{InvalidMinimumAlignment, LinkageConstOrMutType};\n use crate::llvm::{self, True};\n use crate::llvm_util;\n use crate::type_::Type;\n@@ -147,9 +147,7 @@ fn set_global_alignment<'ll>(cx: &CodegenCx<'ll, '_>, gv: &'ll Value, mut align:\n         match Align::from_bits(min) {\n             Ok(min) => align = align.max(min),\n             Err(err) => {\n-                cx.sess().emit_err(InvalidMinimumAlignment {\n-                    err,\n-                });\n+                cx.sess().emit_err(InvalidMinimumAlignment { err });\n             }\n         }\n     }\n@@ -177,10 +175,7 @@ fn check_and_apply_linkage<'ll, 'tcx>(\n         let llty2 = if let ty::RawPtr(ref mt) = ty.kind() {\n             cx.layout_of(mt.ty).llvm_type(cx)\n         } else {\n-            cx.sess().span_fatal(\n-                cx.tcx.def_span(def_id),\n-                \"must have type `*const T` or `*mut T` due to `#[linkage]` attribute\",\n-            )\n+            cx.sess().emit_fatal(LinkageConstOrMutType { span: cx.tcx.def_span(def_id) })\n         };\n         unsafe {\n             // Declare a symbol `foo` with the desired linkage."}, {"sha": "2661bd3cb997994b0f81b23d7fd8d825c42af927", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "patch": "@@ -71,5 +71,12 @@ pub(crate) struct LayoutSizeOverflow {\n #[derive(SessionDiagnostic)]\n #[diag(codegen_llvm::invalid_minimum_alignment)]\n pub(crate) struct InvalidMinimumAlignment {\n-    pub err: String\n+    pub err: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(codegen_llvm::linkage_const_or_mut_type)]\n+pub(crate) struct LinkageConstOrMutType {\n+    #[primary_span]\n+    pub span: Span,\n }"}, {"sha": "3804f0dbbfabc48be99a37336164440bdf624bab", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_llvm.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/60ee496c7439b7a4b8d45c89ac4cc780ca878eed/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_llvm.ftl?ref=60ee496c7439b7a4b8d45c89ac4cc780ca878eed", "patch": "@@ -30,3 +30,6 @@ codegen_llvm_layout_size_overflow =\n \n codegen_llvm_invalid_minimum_alignment =\n     invalid minimum global alignment: {$err}\n+\n+codegen_llvm_linkage_const_or_mut_type =\n+    must have type `*const T` or `*mut T` due to `#[linkage]` attribute"}]}