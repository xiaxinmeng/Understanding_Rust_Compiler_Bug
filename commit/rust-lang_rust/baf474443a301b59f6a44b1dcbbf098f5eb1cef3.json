{"sha": "baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZjQ3NDQ0M2EzMDFiNTlmNmE0NGIxZGNiYmYwOThmNWViMWNlZjM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-24T21:34:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-24T21:36:30Z"}, "message": "rustc: Increment by the unit size in iter_structural_ty when iterating over interior vectors if the unit size is dynamic", "tree": {"sha": "edbc8e53b5649774f04c5ce2306f047376424e47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edbc8e53b5649774f04c5ce2306f047376424e47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "html_url": "https://github.com/rust-lang/rust/commit/baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baf474443a301b59f6a44b1dcbbf098f5eb1cef3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ebd19477be55843147072737142f061b1939ac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ebd19477be55843147072737142f061b1939ac2", "html_url": "https://github.com/rust-lang/rust/commit/2ebd19477be55843147072737142f061b1939ac2"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "59f7dd84073b9d25671839d3fbcd09e0f3188bdc", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/baf474443a301b59f6a44b1dcbbf098f5eb1cef3/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baf474443a301b59f6a44b1dcbbf098f5eb1cef3/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=baf474443a301b59f6a44b1dcbbf098f5eb1cef3", "patch": "@@ -2504,10 +2504,18 @@ fn iter_structural_ty_full(&@block_ctxt cx, ValueRef av, ValueRef bv,\n                load_if_immediate(loop_body_cx, src_elem, unit_ty), unit_ty);\n \n         loop_body_cx = rs.bcx;\n+\n+        auto increment;\n+        if (ty::type_has_dynamic_size(bcx.fcx.lcx.ccx.tcx, unit_ty)) {\n+            increment = unit_sz;\n+        } else {\n+            increment = C_int(1);\n+        }\n+\n         loop_body_cx.build.Store(loop_body_cx.build.InBoundsGEP(dest_elem,\n-            [C_int(1)]), dest_elem_ptr);\n+            [increment]), dest_elem_ptr);\n         loop_body_cx.build.Store(loop_body_cx.build.InBoundsGEP(src_elem,\n-            [C_int(1)]), src_elem_ptr);\n+            [increment]), src_elem_ptr);\n         loop_body_cx.build.Br(loop_header_cx.llbb);\n \n         ret rslt(next_cx, C_nil());"}]}