{"sha": "16ad3f302b7108428272f0453c0b5768d5c6f015", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YWQzZjMwMmI3MTA4NDI4MjcyZjA0NTNjMGI1NzY4ZDVjNmYwMTU=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-06-03T16:21:56Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-06-19T18:05:14Z"}, "message": "Nits and change skip_binder to no_bound_vars for fndef", "tree": {"sha": "380e91ef907aafa41f30291d94947a5ae6cd49dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/380e91ef907aafa41f30291d94947a5ae6cd49dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16ad3f302b7108428272f0453c0b5768d5c6f015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16ad3f302b7108428272f0453c0b5768d5c6f015", "html_url": "https://github.com/rust-lang/rust/commit/16ad3f302b7108428272f0453c0b5768d5c6f015", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16ad3f302b7108428272f0453c0b5768d5c6f015/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5d5994a4afa73182231efd5d45bbe1fdca28c9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d5994a4afa73182231efd5d45bbe1fdca28c9b", "html_url": "https://github.com/rust-lang/rust/commit/b5d5994a4afa73182231efd5d45bbe1fdca28c9b"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "78fb787a319ef4205a472f7a101b95de4e1ce7e5", "filename": "src/librustc_traits/chalk/db.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/16ad3f302b7108428272f0453c0b5768d5c6f015/src%2Flibrustc_traits%2Fchalk%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16ad3f302b7108428272f0453c0b5768d5c6f015/src%2Flibrustc_traits%2Fchalk%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk%2Fdb.rs?ref=16ad3f302b7108428272f0453c0b5768d5c6f015", "patch": "@@ -8,7 +8,7 @@\n \n use rustc_middle::traits::ChalkRustInterner as RustInterner;\n use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use rustc_middle::ty::{self, AssocItemContainer, AssocKind, TyCtxt};\n+use rustc_middle::ty::{self, AssocItemContainer, AssocKind, Binder, TyCtxt};\n \n use rustc_hir::def_id::DefId;\n \n@@ -177,10 +177,12 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n             .filter_map(|wc| LowerInto::<Option<chalk_ir::QuantifiedWhereClause<RustInterner<'tcx>>>>::lower_into(wc, &self.interner)).collect();\n \n         let sig = self.tcx.fn_sig(def_id);\n-        // FIXME(chalk): Why does this have a Binder\n-        let argument_types = sig\n-            .inputs()\n-            .skip_binder()\n+        // FIXME(chalk): collect into an intermediate SmallVec here since\n+        // we need `TypeFoldable` for `no_bound_vars`\n+        let argument_types: Binder<Vec<_>> = sig.map_bound(|i| i.inputs().iter().copied().collect());\n+        let argument_types = argument_types\n+            .no_bound_vars()\n+            .expect(\"FIXME(chalk): late-bound fn parameters not supported in chalk\")\n             .iter()\n             .map(|t| t.subst(self.tcx, &bound_vars).lower_into(&self.interner))\n             .collect();"}, {"sha": "6f657be0908b45848e3d815d25447b66884edbbc", "filename": "src/librustc_traits/chalk/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/16ad3f302b7108428272f0453c0b5768d5c6f015/src%2Flibrustc_traits%2Fchalk%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16ad3f302b7108428272f0453c0b5768d5c6f015/src%2Flibrustc_traits%2Fchalk%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk%2Fmod.rs?ref=16ad3f302b7108428272f0453c0b5768d5c6f015", "patch": "@@ -199,7 +199,6 @@ crate fn evaluate_goal<'tcx>(\n         .map(|s| match s {\n             Solution::Unique(_subst) => {\n                 // FIXME(chalk): handle constraints\n-                // assert!(_subst.value.constraints.is_empty());\n                 make_solution(_subst.value.subst)\n             }\n             Solution::Ambig(_guidance) => {"}, {"sha": "9dd9eb320ddd3b22a292fe4f43ca4953d0a8ed4f", "filename": "src/test/ui/chalkify/inherent_impl.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/16ad3f302b7108428272f0453c0b5768d5c6f015/src%2Ftest%2Fui%2Fchalkify%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16ad3f302b7108428272f0453c0b5768d5c6f015/src%2Ftest%2Fui%2Fchalkify%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Finherent_impl.rs?ref=16ad3f302b7108428272f0453c0b5768d5c6f015", "patch": "@@ -1,5 +1,7 @@\n // run-pass\n // compile-flags: -Z chalk\n+// FIXME(chalk): remove when uncommented\n+#![allow(dead_code, unused_variables)]\n \n trait Foo { }\n \n@@ -9,6 +11,8 @@ struct S<T: Foo> {\n     x: T,\n }\n \n+// FIXME(chalk): need late-bound regions on FnDefs\n+/*\n fn only_foo<T: Foo>(_x: &T) { }\n \n impl<T> S<T> {\n@@ -17,6 +21,7 @@ impl<T> S<T> {\n         only_foo(&self.x)\n     }\n }\n+*/\n \n trait Bar { }\n impl Bar for u32 { }\n@@ -26,17 +31,27 @@ fn only_bar<T: Bar>() { }\n impl<T> S<T> {\n     // Test that the environment of `dummy_bar` adds up with the environment\n     // of the inherent impl.\n+    // FIXME(chalk): need late-bound regions on FnDefs\n+    /*\n     fn dummy_bar<U: Bar>(&self) {\n         only_foo(&self.x);\n         only_bar::<U>();\n     }\n+    */\n+    fn dummy_bar<U: Bar>() {\n+        only_bar::<U>();\n+    }\n }\n \n fn main() {\n     let s = S {\n         x: 5,\n     };\n \n+    // FIXME(chalk): need late-bound regions on FnDefs\n+    /*\n     s.dummy_foo();\n     s.dummy_bar::<u32>();\n+    */\n+    S::<i32>::dummy_bar::<u32>();\n }"}]}