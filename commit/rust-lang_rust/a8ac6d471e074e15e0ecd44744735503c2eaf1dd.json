{"sha": "a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YWM2ZDQ3MWUwNzRlMTVlMGVjZDQ0NzQ0NzM1NTAzYzJlYWYxZGQ=", "commit": {"author": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2021-09-02T10:18:00Z"}, "committer": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2021-09-02T10:18:00Z"}, "message": "I/O safety for WinUWP", "tree": {"sha": "c2abd4257db11813e2720dcfa4f14e85e9388ded", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2abd4257db11813e2720dcfa4f14e85e9388ded"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "html_url": "https://github.com/rust-lang/rust/commit/a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8ac6d471e074e15e0ecd44744735503c2eaf1dd/comments", "author": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7", "html_url": "https://github.com/rust-lang/rust/commit/b27ccbc7e1e6a04d749e244a3c13f72ca38e80e7"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "cc137771bb8d41bf79c4dd6efa7717e330901b1d", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8ac6d471e074e15e0ecd44744735503c2eaf1dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ac6d471e074e15e0ecd44744735503c2eaf1dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "patch": "@@ -357,7 +357,7 @@ impl File {\n             let mut info: c::FILE_BASIC_INFO = mem::zeroed();\n             let size = mem::size_of_val(&info);\n             cvt(c::GetFileInformationByHandleEx(\n-                self.handle.raw(),\n+                self.handle.as_raw_handle(),\n                 c::FileBasicInfo,\n                 &mut info as *mut _ as *mut libc::c_void,\n                 size as c::DWORD,\n@@ -385,7 +385,7 @@ impl File {\n             let mut info: c::FILE_STANDARD_INFO = mem::zeroed();\n             let size = mem::size_of_val(&info);\n             cvt(c::GetFileInformationByHandleEx(\n-                self.handle.raw(),\n+                self.handle.as_raw_handle(),\n                 c::FileStandardInfo,\n                 &mut info as *mut _ as *mut libc::c_void,\n                 size as c::DWORD,"}, {"sha": "31ffa8c95718d2c97dbcfca0d664f175004bf657", "filename": "library/std/src/sys/windows/stdio_uwp.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a8ac6d471e074e15e0ecd44744735503c2eaf1dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ac6d471e074e15e0ecd44744735503c2eaf1dd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs?ref=a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "patch": "@@ -2,6 +2,7 @@\n \n use crate::io;\n use crate::mem::ManuallyDrop;\n+use crate::os::windows::io::FromRawHandle;\n use crate::sys::c;\n use crate::sys::handle::Handle;\n \n@@ -25,7 +26,7 @@ pub fn get_handle(handle_id: c::DWORD) -> io::Result<c::HANDLE> {\n \n fn write(handle_id: c::DWORD, data: &[u8]) -> io::Result<usize> {\n     let handle = get_handle(handle_id)?;\n-    let handle = Handle::new(handle);\n+    let handle = unsafe { Handle::from_raw_handle(handle) };\n     ManuallyDrop::new(handle).write(data)\n }\n \n@@ -38,7 +39,7 @@ impl Stdin {\n impl io::Read for Stdin {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n         let handle = get_handle(c::STD_INPUT_HANDLE)?;\n-        let handle = Handle::new(handle);\n+        let handle = unsafe { Handle::from_raw_handle(handle) };\n         ManuallyDrop::new(handle).read(buf)\n     }\n }"}]}