{"sha": "204ba3224ef06f99622fd733cdc14afbc5d83c7e", "node_id": "C_kwDOAAsO6NoAKDIwNGJhMzIyNGVmMDZmOTk2MjJmZDczM2NkYzE0YWZiYzVkODNjN2U", "commit": {"author": {"name": "yifei", "email": "lyfmagic99@gmail.com", "date": "2023-03-08T12:12:46Z"}, "committer": {"name": "yifei", "email": "lyfmagic99@gmail.com", "date": "2023-03-08T12:12:46Z"}, "message": "fix: evaluate with wrong obligation stack", "tree": {"sha": "9b0201348b9226c5c962bbd536e08b376850caf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b0201348b9226c5c962bbd536e08b376850caf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/204ba3224ef06f99622fd733cdc14afbc5d83c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/204ba3224ef06f99622fd733cdc14afbc5d83c7e", "html_url": "https://github.com/rust-lang/rust/commit/204ba3224ef06f99622fd733cdc14afbc5d83c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/204ba3224ef06f99622fd733cdc14afbc5d83c7e/comments", "author": {"login": "LYF1999", "id": 17444266, "node_id": "MDQ6VXNlcjE3NDQ0MjY2", "avatar_url": "https://avatars.githubusercontent.com/u/17444266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LYF1999", "html_url": "https://github.com/LYF1999", "followers_url": "https://api.github.com/users/LYF1999/followers", "following_url": "https://api.github.com/users/LYF1999/following{/other_user}", "gists_url": "https://api.github.com/users/LYF1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/LYF1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LYF1999/subscriptions", "organizations_url": "https://api.github.com/users/LYF1999/orgs", "repos_url": "https://api.github.com/users/LYF1999/repos", "events_url": "https://api.github.com/users/LYF1999/events{/privacy}", "received_events_url": "https://api.github.com/users/LYF1999/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LYF1999", "id": 17444266, "node_id": "MDQ6VXNlcjE3NDQ0MjY2", "avatar_url": "https://avatars.githubusercontent.com/u/17444266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LYF1999", "html_url": "https://github.com/LYF1999", "followers_url": "https://api.github.com/users/LYF1999/followers", "following_url": "https://api.github.com/users/LYF1999/following{/other_user}", "gists_url": "https://api.github.com/users/LYF1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/LYF1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LYF1999/subscriptions", "organizations_url": "https://api.github.com/users/LYF1999/orgs", "repos_url": "https://api.github.com/users/LYF1999/repos", "events_url": "https://api.github.com/users/LYF1999/events{/privacy}", "received_events_url": "https://api.github.com/users/LYF1999/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38b96553112dce3de630890701f17d86e265f6ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/38b96553112dce3de630890701f17d86e265f6ba", "html_url": "https://github.com/rust-lang/rust/commit/38b96553112dce3de630890701f17d86e265f6ba"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "48c3b3601b4d3ce5e0a05cedfe11dc5ab1af2333", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/204ba3224ef06f99622fd733cdc14afbc5d83c7e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204ba3224ef06f99622fd733cdc14afbc5d83c7e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=204ba3224ef06f99622fd733cdc14afbc5d83c7e", "patch": "@@ -1083,7 +1083,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     let mut nested_result = EvaluationResult::EvaluatedToOk;\n                     for obligation in nested_obligations {\n                         nested_result = cmp::max(\n-                            this.evaluate_predicate_recursively(stack.list(), obligation)?,\n+                            this.evaluate_predicate_recursively(previous_stack, obligation)?,\n                             nested_result,\n                         );\n                     }\n@@ -1092,7 +1092,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                         let obligation = obligation.with(this.tcx(), predicate);\n                         result = cmp::max(\n                             nested_result,\n-                            this.evaluate_trait_predicate_recursively(stack.list(), obligation)?,\n+                            this.evaluate_trait_predicate_recursively(previous_stack, obligation)?,\n                         );\n                     }\n                 }"}, {"sha": "fbbc07b11e74378b35f31b9193238e6f7264f973", "filename": "tests/ui/traits/unsend-future.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/204ba3224ef06f99622fd733cdc14afbc5d83c7e/tests%2Fui%2Ftraits%2Funsend-future.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204ba3224ef06f99622fd733cdc14afbc5d83c7e/tests%2Fui%2Ftraits%2Funsend-future.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Funsend-future.rs?ref=204ba3224ef06f99622fd733cdc14afbc5d83c7e", "patch": "@@ -0,0 +1,21 @@\n+// edition:2021\n+\n+// issue 108897\n+trait Handler {}\n+impl<F, Fut> Handler for F\n+where\n+    Fut: Send,\n+    F: FnOnce() -> Fut,\n+{}\n+\n+fn require_handler<H: Handler>(h: H) {}\n+\n+async fn handler() {\n+    let a = &1 as *const i32;\n+    async {}.await;\n+}\n+\n+fn main() {\n+    require_handler(handler)\n+     //~^ ERROR future cannot be sent between threads safely\n+}"}, {"sha": "4aaa7c4a92426f37d28cc4fa455b466f29498f05", "filename": "tests/ui/traits/unsend-future.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/204ba3224ef06f99622fd733cdc14afbc5d83c7e/tests%2Fui%2Ftraits%2Funsend-future.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/204ba3224ef06f99622fd733cdc14afbc5d83c7e/tests%2Fui%2Ftraits%2Funsend-future.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Funsend-future.stderr?ref=204ba3224ef06f99622fd733cdc14afbc5d83c7e", "patch": "@@ -0,0 +1,24 @@\n+error: future cannot be sent between threads safely\n+  --> $DIR/unsend-future.rs:19:21\n+   |\n+LL |     require_handler(handler)\n+   |                     ^^^^^^^ future returned by `handler` is not `Send`\n+   |\n+   = help: within `impl Future<Output = ()>`, the trait `Send` is not implemented for `*const i32`\n+note: future is not `Send` as this value is used across an await\n+  --> $DIR/unsend-future.rs:15:13\n+   |\n+LL |     let a = &1 as *const i32;\n+   |         - has type `*const i32` which is not `Send`\n+LL |     async {}.await;\n+   |             ^^^^^^ await occurs here, with `a` maybe used later\n+LL | }\n+   | - `a` is later dropped here\n+note: required by a bound in `require_handler`\n+  --> $DIR/unsend-future.rs:11:23\n+   |\n+LL | fn require_handler<H: Handler>(h: H) {}\n+   |                       ^^^^^^^ required by this bound in `require_handler`\n+\n+error: aborting due to previous error\n+"}]}