{"sha": "ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "node_id": "C_kwDOAAsO6NoAKGFiOGFlZjQwYjFlM2E3MTUxZGFlYmU3YWNlYTJjOGIwMTE3YThjOWY", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-09-23T20:36:49Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-09-23T22:01:32Z"}, "message": "Drop fully captured upvars in the same order as the regular drop code\n\nCurrently, with the new 2021 edition, if a closure captures all of the\nfields of an upvar, we'll drop those fields in the order they are used\nwithin the closure instead of the normal drop order (the definition\norder of the fields in the type).\n\nThis changes that so we sort the captured fields by the definition order\nwhich causes them to drop in that same order as well.\n\nFixes https://github.com/rust-lang/project-rfc-2229/issues/42", "tree": {"sha": "7a2c02d128e11f1fc9f236919221edfb005329a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a2c02d128e11f1fc9f236919221edfb005329a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "html_url": "https://github.com/rust-lang/rust/commit/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a3e450df45d2e40cff0ab6a4928084d6f61e993", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a3e450df45d2e40cff0ab6a4928084d6f61e993", "html_url": "https://github.com/rust-lang/rust/commit/7a3e450df45d2e40cff0ab6a4928084d6f61e993"}], "stats": {"total": 76, "additions": 58, "deletions": 18}, "files": [{"sha": "036e103738364a315cdbbd08635a70be1a496e76", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "patch": "@@ -602,7 +602,47 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         }\n \n-        debug!(\"For closure={:?}, min_captures={:#?}\", closure_def_id, root_var_min_capture_list);\n+        debug!(\n+            \"For closure={:?}, min_captures before sorting={:?}\",\n+            closure_def_id, root_var_min_capture_list\n+        );\n+\n+        // Now that we have the minimized list of captures, sort the captures by field id.\n+        // This causes the closure to capture the upvars in the same order as the fields are\n+        // declared which is also the drop order. Thus, in situations where we capture all the\n+        // fields of some type, the obserable drop order will remain the same as it previously\n+        // was even though we're dropping each capture individually.\n+        // See https://github.com/rust-lang/project-rfc-2229/issues/42 and\n+        // `src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.rs`.\n+        for (_, captures) in &mut root_var_min_capture_list {\n+            captures.sort_by(|capture1, capture2| {\n+                for (p1, p2) in capture1.place.projections.iter().zip(&capture2.place.projections) {\n+                    match (p1.kind, p2.kind) {\n+                        // Paths are the same, continue to next loop.\n+                        (ProjectionKind::Deref, ProjectionKind::Deref) => {}\n+                        (ProjectionKind::Field(i1, _), ProjectionKind::Field(i2, _))\n+                            if i1 == i2 => {}\n+\n+                        // Fields are different, compare them.\n+                        (ProjectionKind::Field(i1, _), ProjectionKind::Field(i2, _)) => {\n+                            return i1.cmp(&i2);\n+                        }\n+\n+                        (l, r) => bug!(\"ProjectionKinds were different: ({:?}, {:?})\", l, r),\n+                    }\n+                }\n+\n+                unreachable!(\n+                    \"we captured two identical projections: capture1 = {:?}, capture2 = {:?}\",\n+                    capture1, capture2\n+                );\n+            });\n+        }\n+\n+        debug!(\n+            \"For closure={:?}, min_captures after sorting={:#?}\",\n+            closure_def_id, root_var_min_capture_list\n+        );\n         typeck_results.closure_min_captures.insert(closure_def_id, root_var_min_capture_list);\n     }\n "}, {"sha": "559580ec059956cd453cc2749299577e7110edc4", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr?ref=ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "patch": "@@ -136,26 +136,26 @@ LL | |\n LL | |     };\n    | |_____^\n    |\n-note: Min Capture a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:52:26\n-   |\n-LL |         println!(\"{:?}\", a.1);\n-   |                          ^^^\n note: Min Capture a[(0, 0)] -> ImmBorrow\n   --> $DIR/preserve_field_drop_order.rs:55:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n-note: Min Capture b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:59:26\n+note: Min Capture a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:52:26\n    |\n-LL |         println!(\"{:?}\", b.1);\n+LL |         println!(\"{:?}\", a.1);\n    |                          ^^^\n note: Min Capture b[(0, 0)] -> ImmBorrow\n   --> $DIR/preserve_field_drop_order.rs:62:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n+note: Min Capture b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:59:26\n+   |\n+LL |         println!(\"{:?}\", b.1);\n+   |                          ^^^\n \n error: First Pass analysis includes:\n   --> $DIR/preserve_field_drop_order.rs:75:5\n@@ -202,26 +202,26 @@ LL | |\n LL | |     };\n    | |_____^\n    |\n-note: Min Capture b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:78:26\n-   |\n-LL |         println!(\"{:?}\", b.1);\n-   |                          ^^^\n note: Min Capture b[(0, 0)] -> ImmBorrow\n   --> $DIR/preserve_field_drop_order.rs:88:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n-note: Min Capture a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:81:26\n+note: Min Capture b[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:78:26\n    |\n-LL |         println!(\"{:?}\", a.1);\n+LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n note: Min Capture a[(0, 0)] -> ImmBorrow\n   --> $DIR/preserve_field_drop_order.rs:84:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n+note: Min Capture a[(1, 0)] -> ImmBorrow\n+  --> $DIR/preserve_field_drop_order.rs:81:26\n+   |\n+LL |         println!(\"{:?}\", a.1);\n+   |                          ^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "e393169651817c65446230819daf3bcbb2d6206e", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.twenty_twentyone.run.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout?ref=ab8aef40b1e3a7151daebe7acea2c8b0117a8c9f", "patch": "@@ -1,3 +1,3 @@\n Dropable(\"y\") Dropable(\"x\")\n-Dropping y\n Dropping x\n+Dropping y"}]}