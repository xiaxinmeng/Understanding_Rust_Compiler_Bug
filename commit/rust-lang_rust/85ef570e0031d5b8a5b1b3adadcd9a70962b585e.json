{"sha": "85ef570e0031d5b8a5b1b3adadcd9a70962b585e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZWY1NzBlMDAzMWQ1YjhhNWIxYjNhZGFkY2Q5YTcwOTYyYjU4NWU=", "commit": {"author": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2017-07-24T21:44:16Z"}, "committer": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2017-07-24T21:46:42Z"}, "message": "Implement AsRawFd for Stdin, Stdout, and Stderr", "tree": {"sha": "1ec58fff77d03ec2a7da1b102a7d8be576946c70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ec58fff77d03ec2a7da1b102a7d8be576946c70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85ef570e0031d5b8a5b1b3adadcd9a70962b585e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEECYv1aaNg4jTOK4YaSSThDhmbWVkFAll2asQACgkQSSThDhmb\nWVmg8Af/a6M+4wIs60BvBe/1h1LXfSI9hRgrawBHuTo5S1EQNyI+Mww73m793V+o\n/pAVP2ZEH+flnmfbST7USRbfvN+4F/NVKMA3NsOogIZ2wnjGI7BM2PVLiqCD5KWY\nXawISnt9O3RO8SrwIwUQI8WB1Eb+sxk8b6xkxD1cKYvrWsO05zXdp7bpFQ7LgDQD\nEIt8fMgDxfRx3LqRnyNjPdzk++MceNa/nfCDKtEzcYKeZWOVyadhJAJvAQNslfkL\ngC4HRqTafW2lNfYG9OONO/4ef7TtlfdM8wGEtZi39M7PA5s28Jk7ReLcU+ed6alZ\nWlYNtL/lzivw8tLX4xC+kRX8Q9k6vw==\n=Z6ON\n-----END PGP SIGNATURE-----", "payload": "tree 1ec58fff77d03ec2a7da1b102a7d8be576946c70\nparent b80e946101dd49dd1864b6229f9430c55036c7ce\nauthor Ian Douglas Scott <ian@iandouglasscott.com> 1500932656 -0700\ncommitter Ian Douglas Scott <ian@iandouglasscott.com> 1500932802 -0700\n\nImplement AsRawFd for Stdin, Stdout, and Stderr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85ef570e0031d5b8a5b1b3adadcd9a70962b585e", "html_url": "https://github.com/rust-lang/rust/commit/85ef570e0031d5b8a5b1b3adadcd9a70962b585e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85ef570e0031d5b8a5b1b3adadcd9a70962b585e/comments", "author": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b80e946101dd49dd1864b6229f9430c55036c7ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/b80e946101dd49dd1864b6229f9430c55036c7ce", "html_url": "https://github.com/rust-lang/rust/commit/b80e946101dd49dd1864b6229f9430c55036c7ce"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "9723b42354edc90f62e43021e2f969bcf2bc15c5", "filename": "src/libstd/sys/redox/ext/io.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/85ef570e0031d5b8a5b1b3adadcd9a70962b585e/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85ef570e0031d5b8a5b1b3adadcd9a70962b585e/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fio.rs?ref=85ef570e0031d5b8a5b1b3adadcd9a70962b585e", "patch": "@@ -15,6 +15,7 @@\n use fs;\n use net;\n use sys;\n+use io;\n use sys_common::{self, AsInner, FromInner, IntoInner};\n \n /// Raw file descriptors.\n@@ -109,6 +110,21 @@ impl AsRawFd for net::UdpSocket {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for io::Stdin {\n+    fn as_raw_fd(&self) -> RawFd { 0 }\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for io::Stdout {\n+    fn as_raw_fd(&self) -> RawFd { 1 }\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for io::Stderr {\n+    fn as_raw_fd(&self) -> RawFd { 2 }\n+}\n+\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawFd for net::TcpStream {\n     unsafe fn from_raw_fd(fd: RawFd) -> net::TcpStream {"}, {"sha": "6fb0ef9c4fbe4ffc9f6b9b43f16bc131ce5ffcd5", "filename": "src/libstd/sys/unix/ext/io.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/85ef570e0031d5b8a5b1b3adadcd9a70962b585e/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85ef570e0031d5b8a5b1b3adadcd9a70962b585e/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs?ref=85ef570e0031d5b8a5b1b3adadcd9a70962b585e", "patch": "@@ -16,7 +16,9 @@ use fs;\n use net;\n use os::raw;\n use sys;\n+use io;\n use sys_common::{self, AsInner, FromInner, IntoInner};\n+use libc;\n \n /// Raw file descriptors.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -104,6 +106,21 @@ impl AsRawFd for net::UdpSocket {\n     fn as_raw_fd(&self) -> RawFd { *self.as_inner().socket().as_inner() }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for io::Stdin {\n+    fn as_raw_fd(&self) -> RawFd { libc::STDIN_FILENO }\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for io::Stdout {\n+    fn as_raw_fd(&self) -> RawFd { libc::STDOUT_FILENO }\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for io::Stderr {\n+    fn as_raw_fd(&self) -> RawFd { libc::STDERR_FILENO }\n+}\n+\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawFd for net::TcpStream {\n     unsafe fn from_raw_fd(fd: RawFd) -> net::TcpStream {"}]}