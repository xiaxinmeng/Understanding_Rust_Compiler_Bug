{"sha": "01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd", "node_id": "C_kwDOAAsO6NoAKDAxZGZmZTA1NzUxYTllOGQ2YTNiNmNjNGMyZWFlZDJmNjNjM2U1YmQ", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-08-24T23:08:04Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-08-27T14:24:25Z"}, "message": "Remove useless store buffer search logging", "tree": {"sha": "e803dc9cbcfbab0d645fd72320897fc884fef3ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e803dc9cbcfbab0d645fd72320897fc884fef3ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmMKKRkACgkQGBtJ+fOP\nM3RxDgv6A4gSBoWciNhbZyLP2BxA8LeG6qvKC3DHiIJy+Fwzxu9ep3dn2Aw+AXEk\n/WqkJ4EuiU4gi+XpU7fn5qZ4kWvxDrsleYSaBhfPtEhCfPsqOU5wF0nxsEL+/8ns\n0MHC5V5K4vIzVrq07iBncR6N83vucLGjB1/5vi0U6U7mM4ABf0BE1bVQ3ruxQx/1\nFbXosac/CoZTv4gFG7JDrMUN3IFp52tA9QHbrbYbRjP69dsSjWR0oY6zTPh1bxGe\n5hzVdRtbpQ53b49zfniIT2ozYMTjMMNKs0pXTAnI8WvvNxBIKIzVxqMBglqovlcR\nsde74S+lYiuft4LtOGNh4lFl4dCLG0kuQ9ja8e+AaCRzCWktFZqiMGnyoBPRQjfg\nBPrL6f8gT//64Tw35UrvvGm17iFqu3wuK6Jb/oUtMjWrTMEl8HGAPZRU2mXHzRi4\ng6n+wA1y767r5ySoyZcmli0wXOsH/DlAmkf7mus9DE2YmhxjKHkH7uItF7o4pEy7\nP/Hgcu8E\n=uMmN\n-----END PGP SIGNATURE-----", "payload": "tree e803dc9cbcfbab0d645fd72320897fc884fef3ca\nparent f4ba8b1160477a99806d99cf461acf54bee70e92\nauthor Andy Wang <cbeuw.andy@gmail.com> 1661382484 +0100\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1661610265 +0100\n\nRemove useless store buffer search logging\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd", "html_url": "https://github.com/rust-lang/rust/commit/01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4ba8b1160477a99806d99cf461acf54bee70e92", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ba8b1160477a99806d99cf461acf54bee70e92", "html_url": "https://github.com/rust-lang/rust/commit/f4ba8b1160477a99806d99cf461acf54bee70e92"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "a9760a7cc35a9284e94badd64213b9e0dd62bb14", "filename": "src/concurrency/weak_memory.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd/src%2Fconcurrency%2Fweak_memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd/src%2Fconcurrency%2Fweak_memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconcurrency%2Fweak_memory.rs?ref=01dffe05751a9e8d6a3b6cc4c2eaed2f63c3e5bd", "patch": "@@ -320,35 +320,30 @@ impl<'mir, 'tcx: 'mir> StoreBuffer {\n                     // CoWR: if a store happens-before the current load,\n                     // then we can't read-from anything earlier in modification order.\n                     // C++20 \u00a76.9.2.2 [intro.races] paragraph 18\n-                    log::info!(\"Stopping due to coherent write-read\");\n                     false\n                 } else if store_elem.loads.borrow().iter().any(|(&load_index, &load_timestamp)| {\n                     load_timestamp <= clocks.clock[load_index]\n                 }) {\n                     // CoRR: if there was a load from this store which happened-before the current load,\n                     // then we cannot read-from anything earlier in modification order.\n                     // C++20 \u00a76.9.2.2 [intro.races] paragraph 16\n-                    log::info!(\"Stopping due to coherent read-read\");\n                     false\n                 } else if store_elem.timestamp <= clocks.fence_seqcst[store_elem.store_index] {\n                     // The current load, which may be sequenced-after an SC fence, cannot read-before\n                     // the last store sequenced-before an SC fence in another thread.\n                     // C++17 \u00a732.4 [atomics.order] paragraph 6\n-                    log::info!(\"Stopping due to coherent load sequenced after sc fence\");\n                     false\n                 } else if store_elem.timestamp <= clocks.write_seqcst[store_elem.store_index]\n                     && store_elem.is_seqcst\n                 {\n                     // The current non-SC load, which may be sequenced-after an SC fence,\n                     // cannot read-before the last SC store executed before the fence.\n                     // C++17 \u00a732.4 [atomics.order] paragraph 4\n-                    log::info!(\"Stopping due to needing to load from the last SC store\");\n                     false\n                 } else if is_seqcst && store_elem.timestamp <= clocks.read_seqcst[store_elem.store_index] {\n                     // The current SC load cannot read-before the last store sequenced-before\n                     // the last SC fence.\n                     // C++17 \u00a732.4 [atomics.order] paragraph 5\n-                    log::info!(\"Stopping due to sc load needing to load from the last SC store before an SC fence\");\n                     false\n                 } else {true};\n "}]}