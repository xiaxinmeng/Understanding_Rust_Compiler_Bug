{"sha": "7ff39ea448c60e5ab993bb4a32649e60de13184d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZjM5ZWE0NDhjNjBlNWFiOTkzYmI0YTMyNjQ5ZTYwZGUxMzE4NGQ=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-18T06:21:29Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-08-18T06:49:57Z"}, "message": "Fixed deadlock by removing channel flushing.", "tree": {"sha": "8ef06fded3f193456304245b4339b888897a73db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ef06fded3f193456304245b4339b888897a73db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ff39ea448c60e5ab993bb4a32649e60de13184d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff39ea448c60e5ab993bb4a32649e60de13184d", "html_url": "https://github.com/rust-lang/rust/commit/7ff39ea448c60e5ab993bb4a32649e60de13184d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ff39ea448c60e5ab993bb4a32649e60de13184d/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e9f0f952d758bae2b530c2c9b780f2addf10207", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e9f0f952d758bae2b530c2c9b780f2addf10207", "html_url": "https://github.com/rust-lang/rust/commit/6e9f0f952d758bae2b530c2c9b780f2addf10207"}], "stats": {"total": 52, "additions": 20, "deletions": 32}, "files": [{"sha": "458283fb3940e79693b5a33b1fc98a9de409d93f", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7ff39ea448c60e5ab993bb4a32649e60de13184d/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ff39ea448c60e5ab993bb4a32649e60de13184d/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=7ff39ea448c60e5ab993bb4a32649e60de13184d", "patch": "@@ -23,6 +23,12 @@ rust_port::~rust_port() {\n     while (chans.is_empty() == false) {\n         rust_chan *chan = chans.peek();\n         chan->disassociate();\n+\n+        if (chan->ref_count == 0) {\n+            task->log(rust_log::COMM,\n+                \"chan: 0x%\" PRIxPTR \" is dormant, freeing\", chan);\n+            delete chan;\n+        }\n     }\n \n     delete remote_channel;\n@@ -33,13 +39,6 @@ bool rust_port::receive(void *dptr) {\n         rust_chan *chan = chans[i];\n         if (chan->buffer.is_empty() == false) {\n             chan->buffer.dequeue(dptr);\n-            if (chan->buffer.is_empty() && chan->task->blocked()) {\n-                task->log(rust_log::COMM,\n-                          \"chan: 0x%\" PRIxPTR\n-                          \" is flushing, wakeup task: 0x%\" PRIxPTR,\n-                          chan, chan->task);\n-                chan->task->wakeup(this);\n-            }\n             task->log(rust_log::COMM, \"<=== read data ===\");\n             return true;\n         }"}, {"sha": "fb85233c570bce2f69d599040685975e1b984b1b", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 14, "deletions": 25, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7ff39ea448c60e5ab993bb4a32649e60de13184d/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ff39ea448c60e5ab993bb4a32649e60de13184d/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=7ff39ea448c60e5ab993bb4a32649e60de13184d", "patch": "@@ -108,29 +108,7 @@ upcall_new_chan(rust_task *task, rust_port *port) {\n extern \"C\" CDECL void\n upcall_flush_chan(rust_task *task, rust_chan *chan) {\n     LOG_UPCALL_ENTRY(task);\n-    rust_dom *dom = task->dom;\n-    task->log(rust_log::UPCALL | rust_log::COMM,\n-              \"flush chan: 0x%\" PRIxPTR, chan);\n-\n-    if (chan->buffer.is_empty()) {\n-        return;\n-    }\n-\n-    // We cannot flush if the target port was dropped.\n-    if (chan->is_associated() == false) {\n-        return;\n-    }\n-\n-    A(dom, chan->is_associated(),\n-      \"Channel should be associated to a port.\");\n-\n-    A(dom, chan->port->is_proxy() == false,\n-      \"Channels to remote ports should be flushed automatically.\");\n-\n-    // Block on the port until this channel has been completely drained\n-    // by the port.\n-    task->block(chan->port);\n-    task->yield(2);\n+    // Nop.\n }\n \n /**\n@@ -149,8 +127,19 @@ extern \"C\" CDECL void upcall_del_chan(rust_task *task, rust_chan *chan) {\n       \"Channel's ref count should be zero.\");\n \n     if (chan->is_associated()) {\n-        A(task->dom, chan->buffer.is_empty(),\n-          \"Channel's buffer should be empty.\");\n+        // We're trying to delete a channel that another task may be reading\n+        // from. We have two options:\n+        //\n+        // 1. We can flush the channel by blocking in upcall_flush_chan()\n+        //    and resuming only when the channel is flushed. The problem\n+        //    here is that we can get ourselves in a deadlock if the parent\n+        //    task tries to join us.\n+        //\n+        // 2. We can leave the channel in a \"dormnat\" state by not freeing\n+        //    it and letting the receiver task delete it for us instead.\n+        if (chan->buffer.is_empty() == false) {\n+            return;\n+        }\n         chan->disassociate();\n     }\n     delete chan;"}]}