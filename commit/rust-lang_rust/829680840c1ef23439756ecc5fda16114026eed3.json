{"sha": "829680840c1ef23439756ecc5fda16114026eed3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOTY4MDg0MGMxZWYyMzQzOTc1NmVjYzVmZGExNjExNDAyNmVlZDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-22T06:31:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-22T06:31:43Z"}, "message": "auto merge of #17513 : dradtke/rust/master, r=kballard\n\nLooks like I made my previous PR a little too hastily. =)\r\n\r\nThis PR fixes a couple issues that I discovered with my previous revision:\r\n\r\n1. Updated the errorformat to ignore \"pointer lines\" so that they don't show up in the output (with quickfix jumping, they're redundant and unnecessary).\r\n2. Renamed a couple variables to be more in line with Cargo's terminology (`g:cargo_toml_name` should now be `g:cargo_manifest_name`).\r\n3. Added support for errors reported with absolute paths (looks to be the case when compiling an executable instead of a library).\r\n4. Most importantly, added support for errors reported while compiling a dependency. When building a Cargo package with local dependencies, if one of those dependencies failed to compile, the quickfix would be completely broken as it assumed that all errors were relative to the local manifest, or the closest Cargo.toml. With this update, it now pays attention to lines that end with `(file://<path>)`, and from then on adjusts all errors to be relative to `<path>`.\r\n\r\nAs a side note, that `<path>` output is somewhat broken on Windows. While `file:///home/damien/...` on *Nix is a valid URI, `file:///C:/Users/damien/...` on Windows is not, because `C:/` (or whatever the drive is) should take the place of the third slash which is *Nix's root, not be appended to it. I added a workaround for this in my script, but I figured I'd mention it to see if this is a bug in how Rust formats paths.", "tree": {"sha": "41c87f583fceb9b885bd9d92658e68ad156fec29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41c87f583fceb9b885bd9d92658e68ad156fec29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/829680840c1ef23439756ecc5fda16114026eed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/829680840c1ef23439756ecc5fda16114026eed3", "html_url": "https://github.com/rust-lang/rust/commit/829680840c1ef23439756ecc5fda16114026eed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/829680840c1ef23439756ecc5fda16114026eed3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a4c0100fe5eead03b8b566748c1909a7b9b903b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a4c0100fe5eead03b8b566748c1909a7b9b903b", "html_url": "https://github.com/rust-lang/rust/commit/2a4c0100fe5eead03b8b566748c1909a7b9b903b"}, {"sha": "75e4d9583832c158a9c0927cdb087e4555434993", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e4d9583832c158a9c0927cdb087e4555434993", "html_url": "https://github.com/rust-lang/rust/commit/75e4d9583832c158a9c0927cdb087e4555434993"}], "stats": {"total": 53, "additions": 38, "deletions": 15}, "files": [{"sha": "ed487a308e199d6a3d19fdfe8f16b0c1d3ebe6cf", "filename": "src/etc/vim/compiler/cargo.vim", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/829680840c1ef23439756ecc5fda16114026eed3/src%2Fetc%2Fvim%2Fcompiler%2Fcargo.vim", "raw_url": "https://github.com/rust-lang/rust/raw/829680840c1ef23439756ecc5fda16114026eed3/src%2Fetc%2Fvim%2Fcompiler%2Fcargo.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fcompiler%2Fcargo.vim?ref=829680840c1ef23439756ecc5fda16114026eed3", "patch": "@@ -1,29 +1,35 @@\n \" Vim compiler file\n \" Compiler:         Cargo Compiler\n \" Maintainer:       Damien Radtke <damienradtke@gmail.com>\n-\" Latest Revision:  2014 Sep 18\n+\" Latest Revision:  2014 Sep 24\n \n-if exists(\"current_compiler\")\n+if exists('current_compiler')\n   finish\n endif\n+runtime compiler/rustc.vim\n let current_compiler = \"cargo\"\n \n-if exists(\":CompilerSet\") != 2\n+if exists(':CompilerSet') != 2\n     command -nargs=* CompilerSet setlocal <args>\n endif\n \n-CompilerSet errorformat&\n-CompilerSet makeprg=cargo\\ $*\n+if exists('g:cargo_makeprg_params')\n+    execute 'CompilerSet makeprg=cargo\\ '.escape(g:cargo_makeprg_params, ' \\|\"').'\\ $*'\n+else\n+    CompilerSet makeprg=cargo\\ $*\n+endif\n \n \" Allow a configurable global Cargo.toml name. This makes it easy to\n \" support variations like 'cargo.toml'.\n-if !exists('g:cargo_toml_name')\n-    let g:cargo_toml_name = 'Cargo.toml'\n-endif\n+let s:cargo_manifest_name = get(g:, 'cargo_manifest_name', 'Cargo.toml')\n \n-let s:toml_dir = fnamemodify(findfile(g:cargo_toml_name, '.;'), ':p:h').'/'\n+function! s:is_absolute(path)\n+    return a:path[0] == '/' || a:path =~ '[A-Z]\\+:'\n+endfunction\n \n-if s:toml_dir != ''\n+let s:local_manifest = findfile(s:cargo_manifest_name, '.;')\n+if s:local_manifest != ''\n+    let s:local_manifest = fnamemodify(s:local_manifest, ':p:h').'/'\n     augroup cargo\n         au!\n         au QuickfixCmdPost make call s:FixPaths()\n@@ -33,15 +39,25 @@ if s:toml_dir != ''\n     \" to be relative to the current directory instead of Cargo.toml.\n     function! s:FixPaths()\n         let qflist = getqflist()\n+        let manifest = s:local_manifest\n         for qf in qflist\n-            if !qf['valid']\n+            if !qf.valid\n+                let m = matchlist(qf.text, '(file://\\(.*\\))$')\n+                if !empty(m)\n+                    let manifest = m[1].'/'\n+                    \" Manually strip another slash if needed; usually just an\n+                    \" issue on Windows.\n+                    if manifest =~ '^/[A-Z]\\+:/'\n+                        let manifest = manifest[1:]\n+                    endif\n+                endif\n                 continue\n             endif\n-            let filename = bufname(qf['bufnr'])\n-            if stridx(filename, s:toml_dir) == -1\n-                let filename = s:toml_dir.filename\n+            let filename = bufname(qf.bufnr)\n+            if s:is_absolute(filename)\n+                continue\n             endif\n-            let qf['filename'] = simplify(s:toml_dir.bufname(qf['bufnr']))\n+            let qf.filename = simplify(manifest.filename)\n             call remove(qf, 'bufnr')\n         endfor\n         call setqflist(qflist, 'r')"}, {"sha": "e117b0c155b762d979ae96324ee1991b338737ef", "filename": "src/etc/vim/doc/rust.txt", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/829680840c1ef23439756ecc5fda16114026eed3/src%2Fetc%2Fvim%2Fdoc%2Frust.txt", "raw_url": "https://github.com/rust-lang/rust/raw/829680840c1ef23439756ecc5fda16114026eed3/src%2Fetc%2Fvim%2Fdoc%2Frust.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fdoc%2Frust.txt?ref=829680840c1ef23439756ecc5fda16114026eed3", "patch": "@@ -88,6 +88,13 @@ g:ftplugin_rust_source_path~\n \t    let g:ftplugin_rust_source_path = $HOME.'/dev/rust'\n <\n \n+                                                       *g:cargo_manifest_name*\n+g:cargo_manifest_name~\n+\tSet this option to the name of the manifest file for your projects. If\n+\tnot specified it defaults to 'Cargo.toml' : >\n+\t    let g:cargo_manifest_name = 'Cargo.toml'\n+<\n+\n ==============================================================================\n COMMANDS                                                       *rust-commands*\n "}]}