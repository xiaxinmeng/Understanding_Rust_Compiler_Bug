{"sha": "6de13c3ffc969ceac87f2a8466c5cd850288721c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZTEzYzNmZmM5NjljZWFjODdmMmE4NDY2YzVjZDg1MDI4ODcyMWM=", "commit": {"author": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-05-18T16:17:36Z"}, "committer": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-05-18T16:18:28Z"}, "message": "change based on review", "tree": {"sha": "d235f1dded3907fddfb911cbcfb63660a2cc124b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d235f1dded3907fddfb911cbcfb63660a2cc124b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6de13c3ffc969ceac87f2a8466c5cd850288721c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6de13c3ffc969ceac87f2a8466c5cd850288721c", "html_url": "https://github.com/rust-lang/rust/commit/6de13c3ffc969ceac87f2a8466c5cd850288721c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6de13c3ffc969ceac87f2a8466c5cd850288721c/comments", "author": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d8180635289437ac96b20ec94419394194f7c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8180635289437ac96b20ec94419394194f7c83", "html_url": "https://github.com/rust-lang/rust/commit/3d8180635289437ac96b20ec94419394194f7c83"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "e17fc08a9ae993b0a65eb150bf6d43308d145500", "filename": "library/test/src/formatters/pretty.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6de13c3ffc969ceac87f2a8466c5cd850288721c/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de13c3ffc969ceac87f2a8466c5cd850288721c/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs?ref=6de13c3ffc969ceac87f2a8466c5cd850288721c", "patch": "@@ -169,11 +169,10 @@ impl<T: Write> PrettyFormatter<T> {\n \n     fn write_test_name(&mut self, desc: &TestDesc) -> io::Result<()> {\n         let name = desc.padded_name(self.max_name_len, desc.name.padding());\n-        let test_mode = desc.test_mode();\n-        if test_mode == \"\" {\n-            self.write_plain(&format!(\"test {} ... \", name))?;\n-        } else {\n+        if let Some(test_mode) = desc.test_mode() {\n             self.write_plain(&format!(\"test {} - {} ... \", name, test_mode))?;\n+        } else {\n+            self.write_plain(&format!(\"test {} ... \", name))?;\n         }\n \n         Ok(())"}, {"sha": "a2c223c494c293dca5c9ef13bb82269a47d1dded", "filename": "library/test/src/formatters/terse.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6de13c3ffc969ceac87f2a8466c5cd850288721c/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de13c3ffc969ceac87f2a8466c5cd850288721c/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs?ref=6de13c3ffc969ceac87f2a8466c5cd850288721c", "patch": "@@ -158,11 +158,10 @@ impl<T: Write> TerseFormatter<T> {\n \n     fn write_test_name(&mut self, desc: &TestDesc) -> io::Result<()> {\n         let name = desc.padded_name(self.max_name_len, desc.name.padding());\n-        let test_mode = desc.test_mode();\n-        if test_mode == \"\" {\n-            self.write_plain(&format!(\"test {} ... \", name))?;\n-        } else {\n+        if let Some(test_mode) = desc.test_mode() {\n             self.write_plain(&format!(\"test {} - {} ... \", name, test_mode))?;\n+        } else {\n+            self.write_plain(&format!(\"test {} ... \", name))?;\n         }\n \n         Ok(())"}, {"sha": "63907c71ea7cc618b9d08602d4a51c41f32d6b66", "filename": "library/test/src/types.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6de13c3ffc969ceac87f2a8466c5cd850288721c/library%2Ftest%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de13c3ffc969ceac87f2a8466c5cd850288721c/library%2Ftest%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftypes.rs?ref=6de13c3ffc969ceac87f2a8466c5cd850288721c", "patch": "@@ -145,32 +145,34 @@ impl TestDesc {\n         }\n     }\n \n+    /// Returns None for ignored test or that that are just run, otherwise give a description of the type of test.\n+    /// Descriptions include \"should panic\", \"compile fail\" and \"compile\".\n     #[cfg(not(bootstrap))]\n-    pub fn test_mode(&self) -> &'static str {\n+    pub fn test_mode(&self) -> Option<&'static str> {\n         if self.ignore {\n-            return &\"\";\n+            return None;\n         }\n         match self.should_panic {\n             options::ShouldPanic::Yes | options::ShouldPanic::YesWithMessage(_) => {\n-                return &\"should panic\";\n+                return Some(\"should panic\");\n             }\n             options::ShouldPanic::No => {}\n         }\n         if self.allow_fail {\n-            return &\"allow fail\";\n+            return Some(\"allow fail\");\n         }\n         if self.compile_fail {\n-            return &\"compile fail\";\n+            return Some(\"compile fail\");\n         }\n         if self.no_run {\n-            return &\"compile\";\n+            return Some(\"compile\");\n         }\n-        &\"\"\n+        None\n     }\n \n     #[cfg(bootstrap)]\n-    pub fn test_mode(&self) -> &'static str {\n-        &\"\"\n+    pub fn test_mode(&self) -> Option<&'static str> {\n+        None\n     }\n }\n "}]}