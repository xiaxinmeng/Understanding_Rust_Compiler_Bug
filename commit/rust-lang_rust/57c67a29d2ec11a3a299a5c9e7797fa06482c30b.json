{"sha": "57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YzY3YTI5ZDJlYzExYTNhMjk5YTVjOWU3Nzk3ZmEwNjQ4MmMzMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-21T08:15:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-21T08:15:36Z"}, "message": "Auto merge of #4352 - phansch:fix_redundant_pattern_matching, r=flip1995\n\nFix some suggestions for redundant_pattern_matching\n\n.. and change the Applicability to `MaybeIncorrect`.\n\nFixes the problem displayed in https://github.com/rust-lang/rust-clippy/issues/4344#issuecomment-519206388.\n\nWe now append `{}` to the suggestion so that the conditional has the\ncorrect syntax again.\n\n(If we were to _remove_ the `if` instead, it would trigger the\n`unused_must_use` warning for `#[must_use]` types.)\n\nchangelog: Fix some suggestions for `redundant_pattern_matching`", "tree": {"sha": "285ecee51e90a14b988bb5527270bf0f5282c5ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/285ecee51e90a14b988bb5527270bf0f5282c5ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "html_url": "https://github.com/rust-lang/rust/commit/57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45d24fd6bf45a50c1833a3ebc535c611fa0f785b", "url": "https://api.github.com/repos/rust-lang/rust/commits/45d24fd6bf45a50c1833a3ebc535c611fa0f785b", "html_url": "https://github.com/rust-lang/rust/commit/45d24fd6bf45a50c1833a3ebc535c611fa0f785b"}, {"sha": "436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c", "html_url": "https://github.com/rust-lang/rust/commit/436d429d27ba3ce1a9a5ca3ae4074ac75ab11c2c"}], "stats": {"total": 122, "additions": 104, "deletions": 18}, "files": [{"sha": "68862f838cb051e2d2315d0701a031d3bf66696a", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "patch": "@@ -90,8 +90,8 @@ fn find_sugg_for_if_let<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr,\n                 db.span_suggestion(\n                     span,\n                     \"try this\",\n-                    format!(\"if {}.{}\", snippet(cx, op.span, \"_\"), good_method),\n-                    Applicability::MachineApplicable, // snippet\n+                    format!(\"{}.{}\", snippet(cx, op.span, \"_\"), good_method),\n+                    Applicability::MaybeIncorrect, // snippet\n                 );\n             },\n         );\n@@ -154,7 +154,7 @@ fn find_sugg_for_match<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, o\n                         span,\n                         \"try this\",\n                         format!(\"{}.{}\", snippet(cx, op.span, \"_\"), good_method),\n-                        Applicability::MachineApplicable, // snippet\n+                        Applicability::MaybeIncorrect, // snippet\n                     );\n                 },\n             );"}, {"sha": "2bea7d8d96185ed556dd1406d8f7fc5b12f5962d", "filename": "tests/ui/redundant_pattern_matching.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/tests%2Fui%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/tests%2Fui%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.rs?ref=57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n+#![allow(clippy::unit_arg, clippy::let_unit_value)]\n \n fn main() {\n     if let Ok(_) = Ok::<i32, i32>(42) {}\n@@ -51,4 +52,39 @@ fn main() {\n         Some(_) => false,\n         None => true,\n     };\n+\n+    let _ = match None::<()> {\n+        Some(_) => false,\n+        None => true,\n+    };\n+\n+    let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n+\n+    let _ = does_something();\n+    let _ = returns_unit();\n+\n+    let opt = Some(false);\n+    let x = if let Some(_) = opt { true } else { false };\n+    takes_bool(x);\n+    let y = if let Some(_) = opt {};\n+    takes_unit(y);\n+}\n+\n+fn takes_bool(x: bool) {}\n+fn takes_unit(x: ()) {}\n+\n+fn does_something() -> bool {\n+    if let Ok(_) = Ok::<i32, i32>(4) {\n+        true\n+    } else {\n+        false\n+    }\n+}\n+\n+fn returns_unit() {\n+    if let Ok(_) = Ok::<i32, i32>(4) {\n+        true\n+    } else {\n+        false\n+    };\n }"}, {"sha": "df12b7e169a1d95f6df9c0521798737a2a73b4cf", "filename": "tests/ui/redundant_pattern_matching.stderr", "status": "modified", "additions": 65, "deletions": 15, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/tests%2Fui%2Fredundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57c67a29d2ec11a3a299a5c9e7797fa06482c30b/tests%2Fui%2Fredundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.stderr?ref=57c67a29d2ec11a3a299a5c9e7797fa06482c30b", "patch": "@@ -1,31 +1,31 @@\n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:5:12\n+  --> $DIR/redundant_pattern_matching.rs:6:12\n    |\n LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n-   |     -------^^^^^------------------------ help: try this: `if Ok::<i32, i32>(42).is_ok()`\n+   |     -------^^^^^------------------------ help: try this: `Ok::<i32, i32>(42).is_ok()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:7:12\n+  --> $DIR/redundant_pattern_matching.rs:8:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n-   |     -------^^^^^^------------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n+   |     -------^^^^^^------------------------- help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:9:12\n+  --> $DIR/redundant_pattern_matching.rs:10:12\n    |\n LL |     if let None = None::<()> {}\n-   |     -------^^^^---------------- help: try this: `if None::<()>.is_none()`\n+   |     -------^^^^---------------- help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:11:12\n+  --> $DIR/redundant_pattern_matching.rs:12:12\n    |\n LL |     if let Some(_) = Some(42) {}\n-   |     -------^^^^^^^-------------- help: try this: `if Some(42).is_some()`\n+   |     -------^^^^^^^-------------- help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:25:5\n+  --> $DIR/redundant_pattern_matching.rs:26:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -34,7 +34,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:30:5\n+  --> $DIR/redundant_pattern_matching.rs:31:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -43,7 +43,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:35:5\n+  --> $DIR/redundant_pattern_matching.rs:36:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -52,7 +52,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:40:5\n+  --> $DIR/redundant_pattern_matching.rs:41:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -61,7 +61,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:45:5\n+  --> $DIR/redundant_pattern_matching.rs:46:5\n    |\n LL | /     match Some(42) {\n LL | |         Some(_) => true,\n@@ -70,13 +70,63 @@ LL | |     };\n    | |_____^ help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:50:5\n+  --> $DIR/redundant_pattern_matching.rs:51:5\n    |\n LL | /     match None::<()> {\n LL | |         Some(_) => false,\n LL | |         None => true,\n LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n-error: aborting due to 10 previous errors\n+error: redundant pattern matching, consider using `is_none()`\n+  --> $DIR/redundant_pattern_matching.rs:56:13\n+   |\n+LL |       let _ = match None::<()> {\n+   |  _____________^\n+LL | |         Some(_) => false,\n+LL | |         None => true,\n+LL | |     };\n+   | |_____^ help: try this: `None::<()>.is_none()`\n+\n+error: redundant pattern matching, consider using `is_ok()`\n+  --> $DIR/redundant_pattern_matching.rs:61:20\n+   |\n+LL |     let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n+   |             -------^^^^^--------------------------------------------- help: try this: `Ok::<usize, ()>(4).is_ok()`\n+\n+error: redundant pattern matching, consider using `is_some()`\n+  --> $DIR/redundant_pattern_matching.rs:67:20\n+   |\n+LL |     let x = if let Some(_) = opt { true } else { false };\n+   |             -------^^^^^^^------------------------------ help: try this: `opt.is_some()`\n+\n+error: redundant pattern matching, consider using `is_some()`\n+  --> $DIR/redundant_pattern_matching.rs:69:20\n+   |\n+LL |     let y = if let Some(_) = opt {};\n+   |             -------^^^^^^^--------- help: try this: `opt.is_some()`\n+\n+error: redundant pattern matching, consider using `is_ok()`\n+  --> $DIR/redundant_pattern_matching.rs:77:12\n+   |\n+LL |       if let Ok(_) = Ok::<i32, i32>(4) {\n+   |  _____-      ^^^^^\n+LL | |         true\n+LL | |     } else {\n+LL | |         false\n+LL | |     }\n+   | |_____- help: try this: `Ok::<i32, i32>(4).is_ok()`\n+\n+error: redundant pattern matching, consider using `is_ok()`\n+  --> $DIR/redundant_pattern_matching.rs:85:12\n+   |\n+LL |       if let Ok(_) = Ok::<i32, i32>(4) {\n+   |  _____-      ^^^^^\n+LL | |         true\n+LL | |     } else {\n+LL | |         false\n+LL | |     };\n+   | |_____- help: try this: `Ok::<i32, i32>(4).is_ok()`\n+\n+error: aborting due to 16 previous errors\n "}]}