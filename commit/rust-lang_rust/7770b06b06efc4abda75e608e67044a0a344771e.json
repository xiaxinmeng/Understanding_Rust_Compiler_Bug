{"sha": "7770b06b06efc4abda75e608e67044a0a344771e", "node_id": "C_kwDOAAsO6NoAKDc3NzBiMDZiMDZlZmM0YWJkYTc1ZTYwOGU2NzA0NGEwYTM0NDc3MWU", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-09-13T09:17:13Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-01-02T23:30:07Z"}, "message": "only specify --target by default for -Zgcc-ld=lld on wasm\n\nOn macOS, it's not yet clear which cases of clang/OS/target/SDK version impact\nhow to find ld/lld/rust-lld. The --target is not needed on our current targets with\na vanilla config, but may be in some cases. Specifying it all the time breaks the 10.7+\ntargets on x64 macOS.\n\nWe try to only specify it on macOS if the linker flavors are different,\nfor possible cases of cross-compilation with `-Zgcc-ld=lld` but the\nexpectation is that it should be passed manually when needed in these\nsituations.", "tree": {"sha": "e27f0a59d6da393f625e75dd3094b396f5937a22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e27f0a59d6da393f625e75dd3094b396f5937a22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7770b06b06efc4abda75e608e67044a0a344771e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7770b06b06efc4abda75e608e67044a0a344771e", "html_url": "https://github.com/rust-lang/rust/commit/7770b06b06efc4abda75e608e67044a0a344771e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7770b06b06efc4abda75e608e67044a0a344771e/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6f99e535a301a421dfee52a7c25bb4bdf420344", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f99e535a301a421dfee52a7c25bb4bdf420344", "html_url": "https://github.com/rust-lang/rust/commit/d6f99e535a301a421dfee52a7c25bb4bdf420344"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "36f7e5954bf2ae30543932d264c1667c8fa65602", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7770b06b06efc4abda75e608e67044a0a344771e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7770b06b06efc4abda75e608e67044a0a344771e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=7770b06b06efc4abda75e608e67044a0a344771e", "patch": "@@ -2822,11 +2822,30 @@ fn add_gcc_ld_path(cmd: &mut dyn Linker, sess: &Session, flavor: LinkerFlavor) {\n                     // Implement the \"linker flavor\" part of -Zgcc-ld\n                     // by asking cc to use some kind of lld.\n                     cmd.arg(\"-fuse-ld=lld\");\n+\n                     if !flavor.is_gnu() {\n                         // Tell clang to use a non-default LLD flavor.\n                         // Gcc doesn't understand the target option, but we currently assume\n                         // that gcc is not used for Apple and Wasm targets (#97402).\n-                        cmd.arg(format!(\"--target={}\", sess.target.llvm_target));\n+                        //\n+                        // Note that we don't want to do that by default on macOS: e.g. passing a\n+                        // 10.7 target to LLVM works, but not to recent versions of clang/macOS, as\n+                        // shown in issue #101653 and the discussion in PR #101792.\n+                        //\n+                        // It could be required in some cases of cross-compiling with\n+                        // `-Zgcc-ld=lld`, but this is generally unspecified, and we don't know\n+                        // which specific versions of clang, macOS SDK, host and target OS\n+                        // combinations impact us here.\n+                        //\n+                        // So we do a simple first-approximation until we know more of what the\n+                        // Apple targets require (and which would be handled prior to hitting this\n+                        // `-Zgcc-ld=lld` codepath anyway), but the expectation is that until then\n+                        // this should be manually passed if needed. We specify the target when\n+                        // targeting a different linker flavor on macOS, and that's also always\n+                        // the case when targeting WASM.\n+                        if sess.target.linker_flavor != sess.host.linker_flavor {\n+                            cmd.arg(format!(\"--target={}\", sess.target.llvm_target));\n+                        }\n                     }\n                 }\n             }"}]}