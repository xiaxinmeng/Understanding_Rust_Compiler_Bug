{"sha": "c7d1c9b66fdd1cbec64a7dc263557eee895b70ef", "node_id": "C_kwDOAAsO6NoAKGM3ZDFjOWI2NmZkZDFjYmVjNjRhN2RjMjYzNTU3ZWVlODk1YjcwZWY", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-09-13T13:01:48Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-09-15T02:08:13Z"}, "message": "add explanatory note", "tree": {"sha": "d2d816e3ab1a646c5b885050d8369c5e54e3bdf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2d816e3ab1a646c5b885050d8369c5e54e3bdf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7d1c9b66fdd1cbec64a7dc263557eee895b70ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAmMiiQ0ACgkQPNdIZH7v\nY1l64g//ZwritBnEeQqBu1I+etyd15nVxMGi114QvtuLiF1w3umBx5NGIjNwxLd1\nfCrv6uL1WBCuxvDdy66PxDPY5RW0H+ZUlfo1+mDWvZ7ezVx9Yn8oh/6p1Jeq7OY0\ny+hYlr6eAUrK02qW9oTt4nVg9JwyJ3QcrmHxa3VdW6j1Swg6xdK4DrcZQU5f5yx7\nsYMdSkOAJygPDuxvBYyGCoBvSzzKZpVuWicOMvcsOf+32NaztEsLVzw3xkVOHDEt\nJFLqyk+jWZCWgqerPFYWS3LFxW9vfR4l0I6GdF9u3Y4iUqqmw9kZtIKeWbJbZ3v0\nk5USBJDNYgrw0/2HyJ8c/d8RICUXRbJxQiaApKRMJdpDbmolXIJB7qJKerOfd1cU\nLMu0DCO81q+me0+34bGnAUSaByuZUUDxzc4ukYr9thnu3nZk+geADgsFUEfbiP50\nZB+IjggQ7VVMfkQ9kKd4Q4z4dvlekK6lA2Qy4kvLxDovel5lrX8Ndoa81Fk8suP/\njvDRcnM0B61yZinFhLt73mW2diFXAEEDFtkSMYh0aeiEHramVPI/5b2ZzlxOY9NA\nGVAjiI5tjSM5eNkH3D7/nD0uiCn1Rtioa9RzMEqzNXp56+OaXgfK1QZADZ/fp9h+\nV6fTGV2TOH5poRGvwzbrfFEbXTnH8CVJ/9Eec7wP/WbKW4xZYvk=\n=rHZp\n-----END PGP SIGNATURE-----", "payload": "tree d2d816e3ab1a646c5b885050d8369c5e54e3bdf6\nparent 635b57c2ede8eb311b418104f027ad4fae1ee548\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1663074108 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1663207693 +0800\n\nadd explanatory note\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7d1c9b66fdd1cbec64a7dc263557eee895b70ef", "html_url": "https://github.com/rust-lang/rust/commit/c7d1c9b66fdd1cbec64a7dc263557eee895b70ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7d1c9b66fdd1cbec64a7dc263557eee895b70ef/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "635b57c2ede8eb311b418104f027ad4fae1ee548", "url": "https://api.github.com/repos/rust-lang/rust/commits/635b57c2ede8eb311b418104f027ad4fae1ee548", "html_url": "https://github.com/rust-lang/rust/commit/635b57c2ede8eb311b418104f027ad4fae1ee548"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "8eabd925e45308934614bfa61ea91cd4b2e2c10b", "filename": "compiler/rustc_mir_build/src/build/block.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c7d1c9b66fdd1cbec64a7dc263557eee895b70ef/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7d1c9b66fdd1cbec64a7dc263557eee895b70ef/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fblock.rs?ref=c7d1c9b66fdd1cbec64a7dc263557eee895b70ef", "patch": "@@ -117,6 +117,21 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     lint_level,\n                     else_block: Some(else_block),\n                 } => {\n+                    // When lowering the statement `let <pat> = <expr> else { <else> };`,\n+                    // the `<else>` block is nested in the parent scope enclosing this statment.\n+                    // That scope is usually either the enclosing block scope,\n+                    // or the remainder scope of the last statement.\n+                    // This is to make sure that temporaries instantiated in `<expr>` are dropped\n+                    // as well.\n+                    // In addition, even though bindings in `<pat>` only come into scope if\n+                    // the pattern matching passes, in the MIR building the storages for them\n+                    // are declared as live any way.\n+                    // This is similar to `let x;` statements without an initializer expression,\n+                    // where the value of `x` in this example may or may be assigned,\n+                    // because the storage for their values may not be live after all due to\n+                    // failure in pattern matching.\n+                    // For this reason, we declare those storages as live but we do not schedule\n+                    // any drop yet- they are scheduled later after the pattern matching.\n                     let ignores_expr_result = matches!(pattern.kind, PatKind::Wild);\n                     this.block_context.push(BlockFrame::Statement { ignores_expr_result });\n "}]}