{"sha": "9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMDE0NjhiYzdhM2U3MzExZmY2ZWQ0ZTY0Mzk1ODE4ZGM2NGZlZTE=", "commit": {"author": {"name": "Alexandru Ene", "email": "alex.ene0x11@gmail.com", "date": "2017-11-03T01:01:41Z"}, "committer": {"name": "Alexandru Ene", "email": "alex.ene0x11@gmail.com", "date": "2017-11-03T01:01:41Z"}, "message": "Warns if variable name is composed only of underscores and digits.", "tree": {"sha": "1287e7f90352cbadcb6b796090be6ae9fa313963", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1287e7f90352cbadcb6b796090be6ae9fa313963"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "html_url": "https://github.com/rust-lang/rust/commit/9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/comments", "author": {"login": "AlexEne", "id": 5849037, "node_id": "MDQ6VXNlcjU4NDkwMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5849037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexEne", "html_url": "https://github.com/AlexEne", "followers_url": "https://api.github.com/users/AlexEne/followers", "following_url": "https://api.github.com/users/AlexEne/following{/other_user}", "gists_url": "https://api.github.com/users/AlexEne/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexEne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexEne/subscriptions", "organizations_url": "https://api.github.com/users/AlexEne/orgs", "repos_url": "https://api.github.com/users/AlexEne/repos", "events_url": "https://api.github.com/users/AlexEne/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexEne/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlexEne", "id": 5849037, "node_id": "MDQ6VXNlcjU4NDkwMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5849037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexEne", "html_url": "https://github.com/AlexEne", "followers_url": "https://api.github.com/users/AlexEne/followers", "following_url": "https://api.github.com/users/AlexEne/following{/other_user}", "gists_url": "https://api.github.com/users/AlexEne/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexEne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexEne/subscriptions", "organizations_url": "https://api.github.com/users/AlexEne/orgs", "repos_url": "https://api.github.com/users/AlexEne/repos", "events_url": "https://api.github.com/users/AlexEne/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexEne/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47be6927239cc8dabeb59764581fc4ac73327f22", "url": "https://api.github.com/repos/rust-lang/rust/commits/47be6927239cc8dabeb59764581fc4ac73327f22", "html_url": "https://github.com/rust-lang/rust/commit/47be6927239cc8dabeb59764581fc4ac73327f22"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "e4d7049bf0132d0b0b751bf29dcd3b090838ee87", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "patch": "@@ -42,13 +42,33 @@ declare_lint! {\n     \"too many single character bindings\"\n }\n \n+/// **What it does:** Checks if you have variables whose name consists of just\n+/// underscores and digits.\n+///\n+/// **Why is this bad?** It's hard to memorize what a variable means without a\n+/// descriptive name.\n+///\n+/// **Known problems:** None?\n+///\n+/// **Example:**\n+/// ```rust\n+/// let _1 = 1;\n+/// let ___1 = 1;\n+/// let __1___2 = 11;\n+/// ```\n+declare_lint! {\n+    pub JUST_UNDERSCORES_AND_DIGITS,\n+    Warn,\n+    \"unclear name\"\n+}\n+\n pub struct NonExpressiveNames {\n     pub single_char_binding_names_threshold: u64,\n }\n \n impl LintPass for NonExpressiveNames {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(SIMILAR_NAMES, MANY_SINGLE_CHAR_NAMES)\n+        lint_array!(SIMILAR_NAMES, MANY_SINGLE_CHAR_NAMES, JUST_UNDERSCORES_AND_DIGITS)\n     }\n }\n \n@@ -133,6 +153,15 @@ impl<'a, 'tcx, 'b> SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n         if interned_name.chars().any(char::is_uppercase) {\n             return;\n         }\n+        if interned_name.chars().all(|c| c.is_digit(10) || c == '_') {\n+            span_lint(\n+                self.0.cx,\n+                JUST_UNDERSCORES_AND_NUMBERS,\n+                span,\n+                \"binding whose name is just underscores and digits\",\n+            );\n+            return;\n+        }\n         let count = interned_name.chars().count();\n         if count < 3 {\n             if count == 1 {"}, {"sha": "16a035ca0240ac1fe32698a2d9b6b0f9af0e9578", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "patch": "@@ -134,3 +134,10 @@ fn bla() {\n         }\n     }\n }\n+\n+fn underscores_and_numbers() {\n+    let _1 = 1; //~ERROR Consider a more descriptive name\n+    let ____1 = 1; //~ERROR Consider a more descriptive name\n+    let __1___2 = 12; //~ERROR Consider a more descriptive name\n+    let _1_ok= 1;\n+}\n\\ No newline at end of file"}, {"sha": "7141c97dd1abb46f6058ceda87a1ae0e2b6bd5db", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9d01468bc7a3e7311ff6ed4e64395818dc64fee1/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=9d01468bc7a3e7311ff6ed4e64395818dc64fee1", "patch": "@@ -129,3 +129,23 @@ error: 5th binding whose name is just one char\n 129 |             e => panic!(),\n     |             ^\n \n+error: binding whose name is just underscores and digits\n+   --> $DIR/non_expressive_names.rs:139:9\n+    |\n+139 |     let _1 = 1; //~ERROR Consider a more descriptive name\n+    |         ^^\n+    |\n+    = note: `-D just-underscores-and-numbers` implied by `-D warnings`\n+\n+error: binding whose name is just underscores and digits\n+   --> $DIR/non_expressive_names.rs:140:9\n+    |\n+140 |     let ____1 = 1; //~ERROR Consider a more descriptive name\n+    |         ^^^^^\n+\n+error: binding whose name is just underscores and digits\n+   --> $DIR/non_expressive_names.rs:141:9\n+    |\n+141 |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n+    |         ^^^^^^^\n+"}]}