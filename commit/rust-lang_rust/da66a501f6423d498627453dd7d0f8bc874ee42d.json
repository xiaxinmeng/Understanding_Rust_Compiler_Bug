{"sha": "da66a501f6423d498627453dd7d0f8bc874ee42d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNjZhNTAxZjY0MjNkNDk4NjI3NDUzZGQ3ZDBmOGJjODc0ZWU0MmQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T20:26:36Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T20:26:36Z"}, "message": "Specialize panic_fmt lint for the {core,std}::panic!() macros.\n\nIt now only reacts to expansion of those macros, and suggests\ninserting `\"{}\", ` in the right place.", "tree": {"sha": "b63cfe8b4498fdac6c9e197baee1a4ca4d40ad19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b63cfe8b4498fdac6c9e197baee1a4ca4d40ad19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da66a501f6423d498627453dd7d0f8bc874ee42d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da66a501f6423d498627453dd7d0f8bc874ee42d", "html_url": "https://github.com/rust-lang/rust/commit/da66a501f6423d498627453dd7d0f8bc874ee42d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da66a501f6423d498627453dd7d0f8bc874ee42d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "462ee9c1b5eb0ae759e2fcc6f35dc5db4fc04367", "url": "https://api.github.com/repos/rust-lang/rust/commits/462ee9c1b5eb0ae759e2fcc6f35dc5db4fc04367", "html_url": "https://github.com/rust-lang/rust/commit/462ee9c1b5eb0ae759e2fcc6f35dc5db4fc04367"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "e0752515377fec97200d814bac12a08ba1da01a8", "filename": "compiler/rustc_lint/src/panic_fmt.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/da66a501f6423d498627453dd7d0f8bc874ee42d/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66a501f6423d498627453dd7d0f8bc874ee42d/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs?ref=da66a501f6423d498627453dd7d0f8bc874ee42d", "patch": "@@ -1,7 +1,9 @@\n use crate::{LateContext, LateLintPass, LintContext};\n use rustc_ast as ast;\n+use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_middle::ty;\n+use rustc_span::sym;\n \n declare_lint! {\n     /// The `panic_fmt` lint detects `panic!(\"..\")` with `{` or `}` in the string literal.\n@@ -46,11 +48,26 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n     if let hir::ExprKind::Lit(lit) = &arg.kind {\n         if let ast::LitKind::Str(sym, _) = lit.node {\n             if sym.as_str().contains(&['{', '}'][..]) {\n-                cx.struct_span_lint(PANIC_FMT, f.span, |lint| {\n-                    lint.build(\"Panic message contains a brace\")\n-                    .note(\"This message is not used as a format string, but will be in a future Rust version\")\n-                    .emit();\n-                });\n+                let expn = f.span.ctxt().outer_expn_data();\n+                if let Some(id) = expn.macro_def_id {\n+                    if cx.tcx.is_diagnostic_item(sym::std_panic_macro, id)\n+                        || cx.tcx.is_diagnostic_item(sym::core_panic_macro, id)\n+                    {\n+                        cx.struct_span_lint(PANIC_FMT, expn.call_site, |lint| {\n+                            let mut l = lint.build(\"Panic message contains a brace\");\n+                            l.note(\"This message is not used as a format string, but will be in a future Rust version\");\n+                            if expn.call_site.contains(arg.span) {\n+                                l.span_suggestion(\n+                                    arg.span.shrink_to_lo(),\n+                                    \"add a \\\"{}\\\" format string to use the message literally\",\n+                                    \"\\\"{}\\\", \".into(),\n+                                    Applicability::MachineApplicable,\n+                                );\n+                            }\n+                            l.emit();\n+                        });\n+                    }\n+                }\n             }\n         }\n     }"}, {"sha": "c36d6380771987cbb6840289ff642210dd13fc3d", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66a501f6423d498627453dd7d0f8bc874ee42d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66a501f6423d498627453dd7d0f8bc874ee42d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=da66a501f6423d498627453dd7d0f8bc874ee42d", "patch": "@@ -393,6 +393,7 @@ symbols! {\n         copysignf64,\n         core,\n         core_intrinsics,\n+        core_panic_macro,\n         cosf32,\n         cosf64,\n         crate_id,\n@@ -1064,6 +1065,7 @@ symbols! {\n         staticlib,\n         std,\n         std_inject,\n+        std_panic_macro,\n         stmt,\n         stmt_expr_attributes,\n         stop_after_dataflow,"}]}