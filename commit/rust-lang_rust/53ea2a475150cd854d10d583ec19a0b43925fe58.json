{"sha": "53ea2a475150cd854d10d583ec19a0b43925fe58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZWEyYTQ3NTE1MGNkODU0ZDEwZDU4M2VjMTlhMGI0MzkyNWZlNTg=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T22:23:06Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T23:48:19Z"}, "message": "stdlib: Use spans for #fmt errors originating in std\n\nIssue #444", "tree": {"sha": "43c0a797da03e1d3795acd1afa37af80dfefd938", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43c0a797da03e1d3795acd1afa37af80dfefd938"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53ea2a475150cd854d10d583ec19a0b43925fe58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53ea2a475150cd854d10d583ec19a0b43925fe58", "html_url": "https://github.com/rust-lang/rust/commit/53ea2a475150cd854d10d583ec19a0b43925fe58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53ea2a475150cd854d10d583ec19a0b43925fe58/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a177dc485b57f3bbe003899b6da0aa84e4ce1afb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a177dc485b57f3bbe003899b6da0aa84e4ce1afb", "html_url": "https://github.com/rust-lang/rust/commit/a177dc485b57f3bbe003899b6da0aa84e4ce1afb"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "c3d4fffcbab861ac1cd9629dfa5acb37a485b06a", "filename": "src/comp/front/extfmt.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Fcomp%2Ffront%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Fcomp%2Ffront%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fextfmt.rs?ref=53ea2a475150cd854d10d583ec19a0b43925fe58", "patch": "@@ -28,11 +28,17 @@ fn expand_syntax_ext(&ext_ctxt cx,\n     }\n \n     auto fmt = expr_to_str(cx, args.(0));\n+    auto fmtspan = args.(0).span;\n \n     log \"Format string:\";\n     log fmt;\n \n-    auto pieces = parse_fmt_string(fmt);\n+    fn parse_fmt_err_(&ext_ctxt cx, common::span sp, str msg) -> ! {\n+        cx.span_err(sp, msg);\n+    }\n+\n+    auto parse_fmt_err = bind parse_fmt_err_(cx, fmtspan, _);\n+    auto pieces = parse_fmt_string(fmt, parse_fmt_err);\n     auto args_len = vec::len[@ast::expr](args);\n     auto fmt_args = vec::slice[@ast::expr](args, 1u, args_len - 1u);\n     ret pieces_to_expr(cx, sp, pieces, args);"}, {"sha": "43ff490757b3db2bd8d2314304cc387c5d54b7ac", "filename": "src/lib/extfmt.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Flib%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Flib%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fextfmt.rs?ref=53ea2a475150cd854d10d583ec19a0b43925fe58", "patch": "@@ -78,7 +78,9 @@ mod ct {\n         piece_conv(conv);\n     }\n \n-    fn parse_fmt_string(str s) -> vec[piece] {\n+    type error_fn = fn (str) -> !;\n+\n+    fn parse_fmt_string(str s, error_fn error) -> vec[piece] {\n         let vec[piece] pieces = [];\n         auto lim = str::byte_len(s);\n         auto buf = \"\";\n@@ -97,15 +99,14 @@ mod ct {\n             if (str::eq(curr, \"%\")) {\n                 i += 1u;\n                 if (i >= lim) {\n-                    log_err \"unterminated conversion at end of string\";\n-                    fail;\n+                    error(\"unterminated conversion at end of string\");\n                 }\n                 auto curr2 = str::substr(s, i, 1u);\n                 if (str::eq(curr2, \"%\")) {\n                     i += 1u;\n                 } else {\n                     buf = flush_buf(buf, pieces);\n-                    auto res = parse_conversion(s, i, lim);\n+                    auto res = parse_conversion(s, i, lim, error);\n                     pieces += [res._0];\n                     i = res._1;\n                 }\n@@ -141,12 +142,13 @@ mod ct {\n         };\n     }\n \n-    fn parse_conversion(str s, uint i, uint lim) -> tup(piece, uint) {\n+    fn parse_conversion(str s, uint i, uint lim,\n+                        error_fn error) -> tup(piece, uint) {\n         auto parm = parse_parameter(s, i, lim);\n         auto flags = parse_flags(s, parm._1, lim);\n         auto width = parse_count(s, flags._1, lim);\n         auto prec = parse_precision(s, width._1, lim);\n-        auto ty = parse_type(s, prec._1, lim);\n+        auto ty = parse_type(s, prec._1, lim, error);\n         ret tup(piece_conv(rec(param = parm._0,\n                                flags = flags._0,\n                                width = width._0,\n@@ -258,10 +260,9 @@ mod ct {\n         };\n     }\n \n-    fn parse_type(str s, uint i, uint lim) -> tup(ty, uint) {\n+    fn parse_type(str s, uint i, uint lim, error_fn error) -> tup(ty, uint) {\n         if (i >= lim) {\n-            log_err \"missing type in conversion\";\n-            fail;\n+            error(\"missing type in conversion\");\n         }\n \n         auto tstr = str::substr(s, i, 1u);\n@@ -287,7 +288,8 @@ mod ct {\n         } else if (str::eq(tstr, \"o\")) {\n             ty_octal\n         } else {\n-            log_err \"unknown type in conversion\";\n+            // FIXME: Shouldn't need explicit fail here. Issue #542\n+            error(\"unknown type in conversion: \" + tstr);\n             fail\n         };\n "}, {"sha": "8f82e3317e19e7b67987789fd56f0a734269e705", "filename": "src/test/compile-fail/extfmt-missing-type.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Ftest%2Fcompile-fail%2Fextfmt-missing-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Ftest%2Fcompile-fail%2Fextfmt-missing-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-missing-type.rs?ref=53ea2a475150cd854d10d583ec19a0b43925fe58", "patch": "@@ -0,0 +1,5 @@\n+// error-pattern:missing type\n+\n+fn main() {\n+  #fmt(\"%+\");\n+}"}, {"sha": "08d5da0a496a615e5c2649a23b7a629882df8dfd", "filename": "src/test/compile-fail/extfmt-unknown-type.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Ftest%2Fcompile-fail%2Fextfmt-unknown-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Ftest%2Fcompile-fail%2Fextfmt-unknown-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-unknown-type.rs?ref=53ea2a475150cd854d10d583ec19a0b43925fe58", "patch": "@@ -0,0 +1,5 @@\n+// error-pattern:unknown type\n+\n+fn main() {\n+  #fmt(\"%w\");\n+}"}, {"sha": "8c75c75f9fda4271ffbdcf3f93a0ed740ae8f251", "filename": "src/test/compile-fail/extfmt-unterminated-conv.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Ftest%2Fcompile-fail%2Fextfmt-unterminated-conv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ea2a475150cd854d10d583ec19a0b43925fe58/src%2Ftest%2Fcompile-fail%2Fextfmt-unterminated-conv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fextfmt-unterminated-conv.rs?ref=53ea2a475150cd854d10d583ec19a0b43925fe58", "patch": "@@ -0,0 +1,5 @@\n+// error-pattern:unterminated conversion\n+\n+fn main() {\n+  #fmt(\"%\");\n+}"}]}