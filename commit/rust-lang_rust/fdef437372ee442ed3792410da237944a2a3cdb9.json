{"sha": "fdef437372ee442ed3792410da237944a2a3cdb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZWY0MzczNzJlZTQ0MmVkMzc5MjQxMGRhMjM3OTQ0YTJhM2NkYjk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-18T20:48:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-18T20:48:13Z"}, "message": "Rollup merge of #65201 - tmiasko:no-bindings, r=rkruppe\n\nDisable Go and OCaml bindings when building LLVM\n\nInstead of instaling OCaml bindings in a location where installation\nwill not fail, don't build them in the first place.", "tree": {"sha": "5354453270e98564c97375abf0320fd65261bb8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5354453270e98564c97375abf0320fd65261bb8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdef437372ee442ed3792410da237944a2a3cdb9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdqiUNCRBK7hj4Ov3rIwAAdHIIADKRXqcXGybLzvqIpkLnnpKb\naf5erdp9M77BOzzEb2sZvd1NQbW1ZIEdfAvq1wLT/LnBXDa+GnDHN3mmgmWQ8pMl\nkRa4di6V1QfzSnlU1HsUsrdZlq1UewhM6r9fVWZljmf/d5hli3TKb0M/Y0M13dxi\nfGRa+ILPXS9/4Lz6ezHDBqlDefN2jDp8eiBaNYL8pJPMKMoF80rzorAMdehUwMIb\nrduWeuaReew+QBRSChJThpsartqCg69jKSh4DInbO7lhyG5HIEXibd2job2dPygM\nfWJ5euzUjy0tYYV0Ynpwu0ix/tkB/Qe6OqPbgAIo7cAMH0iXZjOf3ImQFtZ59fA=\n=KRqx\n-----END PGP SIGNATURE-----\n", "payload": "tree 5354453270e98564c97375abf0320fd65261bb8c\nparent d2bea3c95dc15d7ffb6c0ad650097ae5498b7c14\nparent 3b0fd82bfad814ff777e7aa236b74804e4c469c0\nauthor Tyler Mandry <tmandry@gmail.com> 1571431693 -0700\ncommitter GitHub <noreply@github.com> 1571431693 -0700\n\nRollup merge of #65201 - tmiasko:no-bindings, r=rkruppe\n\nDisable Go and OCaml bindings when building LLVM\n\nInstead of instaling OCaml bindings in a location where installation\nwill not fail, don't build them in the first place.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdef437372ee442ed3792410da237944a2a3cdb9", "html_url": "https://github.com/rust-lang/rust/commit/fdef437372ee442ed3792410da237944a2a3cdb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdef437372ee442ed3792410da237944a2a3cdb9/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2bea3c95dc15d7ffb6c0ad650097ae5498b7c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2bea3c95dc15d7ffb6c0ad650097ae5498b7c14", "html_url": "https://github.com/rust-lang/rust/commit/d2bea3c95dc15d7ffb6c0ad650097ae5498b7c14"}, {"sha": "3b0fd82bfad814ff777e7aa236b74804e4c469c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0fd82bfad814ff777e7aa236b74804e4c469c0", "html_url": "https://github.com/rust-lang/rust/commit/3b0fd82bfad814ff777e7aa236b74804e4c469c0"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "fb308bc35ebc5e8519bb1a2b487b213f071f03e0", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fdef437372ee442ed3792410da237944a2a3cdb9/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdef437372ee442ed3792410da237944a2a3cdb9/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=fdef437372ee442ed3792410da237944a2a3cdb9", "patch": "@@ -157,6 +157,7 @@ impl Step for Llvm {\n            .define(\"WITH_POLLY\", \"OFF\")\n            .define(\"LLVM_ENABLE_TERMINFO\", \"OFF\")\n            .define(\"LLVM_ENABLE_LIBEDIT\", \"OFF\")\n+           .define(\"LLVM_ENABLE_BINDINGS\", \"OFF\")\n            .define(\"LLVM_ENABLE_Z3_SOLVER\", \"OFF\")\n            .define(\"LLVM_PARALLEL_COMPILE_JOBS\", builder.jobs().to_string())\n            .define(\"LLVM_TARGET_ARCH\", target.split('-').next().unwrap())\n@@ -169,15 +170,6 @@ impl Step for Llvm {\n             }\n         }\n \n-        // By default, LLVM will automatically find OCaml and, if it finds it,\n-        // install the LLVM bindings in LLVM_OCAML_INSTALL_PATH, which defaults\n-        // to /usr/bin/ocaml.\n-        // This causes problem for non-root builds of Rust. Side-step the issue\n-        // by setting LLVM_OCAML_INSTALL_PATH to a relative path, so it installs\n-        // in the prefix.\n-        cfg.define(\"LLVM_OCAML_INSTALL_PATH\",\n-            env::var_os(\"LLVM_OCAML_INSTALL_PATH\").unwrap_or_else(|| \"usr/lib/ocaml\".into()));\n-\n         let want_lldb = builder.config.lldb_enabled && !self.emscripten;\n \n         // This setting makes the LLVM tools link to the dynamic LLVM library,"}]}