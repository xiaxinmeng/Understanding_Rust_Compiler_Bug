{"sha": "ff0683d66690cef6348226bf1e84c693ad6f6006", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMDY4M2Q2NjY5MGNlZjYzNDgyMjZiZjFlODRjNjkzYWQ2ZjYwMDY=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-03-29T08:54:29Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-03-29T10:06:32Z"}, "message": "Simplify iterators", "tree": {"sha": "3970888d5f89b87051e9d3f04554f800b26e5195", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3970888d5f89b87051e9d3f04554f800b26e5195"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff0683d66690cef6348226bf1e84c693ad6f6006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0683d66690cef6348226bf1e84c693ad6f6006", "html_url": "https://github.com/rust-lang/rust/commit/ff0683d66690cef6348226bf1e84c693ad6f6006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff0683d66690cef6348226bf1e84c693ad6f6006/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e4c20da80eb31b57abcb695d76cc8720c95e395", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4c20da80eb31b57abcb695d76cc8720c95e395", "html_url": "https://github.com/rust-lang/rust/commit/8e4c20da80eb31b57abcb695d76cc8720c95e395"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "832cae898efdb479be5b4ccfba5b12d07ee417fe", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=ff0683d66690cef6348226bf1e84c693ad6f6006", "patch": "@@ -550,7 +550,7 @@ impl<'a> ChainFormatterShared<'a> {\n         let almost_total = if extendable {\n             prev_last_line_width\n         } else {\n-            self.rewrites.iter().fold(0, |a, b| a + b.len())\n+            self.rewrites.iter().map(|a| a.len()).sum()\n         } + last.tries;\n         let one_line_budget = if self.child_count == 1 {\n             shape.width"}, {"sha": "11a7767d37cdc4922bf4d6be4c5461e01f8e1331", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ff0683d66690cef6348226bf1e84c693ad6f6006", "patch": "@@ -1,6 +1,7 @@\n use std::borrow::Cow;\n use std::cmp::min;\n \n+use itertools::Itertools;\n use syntax::parse::token::DelimToken;\n use syntax::source_map::{BytePos, SourceMap, Span};\n use syntax::{ast, ptr};\n@@ -1246,8 +1247,7 @@ fn rewrite_string_lit(context: &RewriteContext<'_>, span: Span, shape: Shape) ->\n     if !context.config.format_strings() {\n         if string_lit\n             .lines()\n-            .rev()\n-            .skip(1)\n+            .dropping_back(1)\n             .all(|line| line.ends_with('\\\\'))\n         {\n             let new_indent = shape.visual_indent(1).indent;"}, {"sha": "63cabc3c3546cdc18678252847da41d476128484", "filename": "src/lists.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=ff0683d66690cef6348226bf1e84c693ad6f6006", "patch": "@@ -577,13 +577,8 @@ pub fn extract_pre_comment(pre_snippet: &str) -> (Option<String>, ListItemCommen\n     let has_block_comment = trimmed_pre_snippet.ends_with(\"*/\");\n     let has_single_line_comment = trimmed_pre_snippet.starts_with(\"//\");\n     if has_block_comment {\n-        let comment_end = pre_snippet.chars().rev().position(|c| c == '/').unwrap();\n-        if pre_snippet\n-            .chars()\n-            .rev()\n-            .take(comment_end + 1)\n-            .any(|c| c == '\\n')\n-        {\n+        let comment_end = pre_snippet.rfind(|c| c == '/').unwrap();\n+        if pre_snippet[comment_end..].contains('\\n') {\n             (\n                 Some(trimmed_pre_snippet.to_owned()),\n                 ListItemCommentStyle::DifferentLine,"}, {"sha": "17e04b2e7a41ea37dd66afe830aceb5aabd19d2f", "filename": "src/overflow.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=ff0683d66690cef6348226bf1e84c693ad6f6006", "patch": "@@ -2,6 +2,7 @@\n \n use std::cmp::min;\n \n+use itertools::Itertools;\n use syntax::parse::token::DelimToken;\n use syntax::source_map::Span;\n use syntax::{ast, ptr};\n@@ -711,10 +712,14 @@ fn last_item_shape(\n     if items.len() == 1 && !lists.get(0)?.is_nested_call() {\n         return Some(shape);\n     }\n-    let offset = items.iter().rev().skip(1).fold(0, |acc, i| {\n-        // 2 = \", \"\n-        acc + 2 + i.inner_as_ref().len()\n-    });\n+    let offset = items\n+        .iter()\n+        .dropping_back(1)\n+        .map(|i| {\n+            // 2 = \", \"\n+            2 + i.inner_as_ref().len()\n+        })\n+        .sum();\n     Shape {\n         width: min(args_max_width, shape.width),\n         ..shape"}, {"sha": "a7977a64e6ce3009268a649e907678e18c363f5b", "filename": "src/vertical.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0683d66690cef6348226bf1e84c693ad6f6006/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=ff0683d66690cef6348226bf1e84c693ad6f6006", "patch": "@@ -2,6 +2,7 @@\n \n use std::cmp;\n \n+use itertools::Itertools;\n use syntax::ast;\n use syntax::source_map::{BytePos, Span};\n \n@@ -190,11 +191,8 @@ fn struct_field_prefix_max_min_width<T: AlignedItem>(\n                 }\n             })\n         })\n-        .fold(Some((0, ::std::usize::MAX)), |acc, len| match (acc, len) {\n-            (Some((max_len, min_len)), Some(len)) => {\n-                Some((cmp::max(max_len, len), cmp::min(min_len, len)))\n-            }\n-            _ => None,\n+        .fold_options((0, ::std::usize::MAX), |(max_len, min_len), len| {\n+            (cmp::max(max_len, len), cmp::min(min_len, len))\n         })\n         .unwrap_or((0, 0))\n }\n@@ -274,7 +272,11 @@ fn group_aligned_items<T: AlignedItem>(\n             .skip(1)\n             .collect::<Vec<_>>()\n             .join(\"\\n\");\n-        let spacings = if snippet.lines().rev().skip(1).any(|l| l.trim().is_empty()) {\n+        let spacings = if snippet\n+            .lines()\n+            .dropping_back(1)\n+            .any(|l| l.trim().is_empty())\n+        {\n             \"\\n\"\n         } else {\n             \"\""}]}