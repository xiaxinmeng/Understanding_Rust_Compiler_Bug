{"sha": "081e222d99be8a5dd795244abafd64cc05e3d00e", "node_id": "C_kwDOAAsO6NoAKDA4MWUyMjJkOTliZThhNWRkNzk1MjQ0YWJhZmQ2NGNjMDVlM2QwMGU", "commit": {"author": {"name": "Sergei Belokon", "email": "srj.belokon@gmail.com", "date": "2023-04-07T22:19:47Z"}, "committer": {"name": "Sergei Belokon", "email": "srj.belokon@gmail.com", "date": "2023-04-07T22:20:05Z"}, "message": "fix(tcp): remove redundant `format!` macro call", "tree": {"sha": "e486fa4296c1cd07bb59d7a209b5fc855ee2f19d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e486fa4296c1cd07bb59d7a209b5fc855ee2f19d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/081e222d99be8a5dd795244abafd64cc05e3d00e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/081e222d99be8a5dd795244abafd64cc05e3d00e", "html_url": "https://github.com/rust-lang/rust/commit/081e222d99be8a5dd795244abafd64cc05e3d00e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/081e222d99be8a5dd795244abafd64cc05e3d00e/comments", "author": {"login": "enkron", "id": 34620256, "node_id": "MDQ6VXNlcjM0NjIwMjU2", "avatar_url": "https://avatars.githubusercontent.com/u/34620256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enkron", "html_url": "https://github.com/enkron", "followers_url": "https://api.github.com/users/enkron/followers", "following_url": "https://api.github.com/users/enkron/following{/other_user}", "gists_url": "https://api.github.com/users/enkron/gists{/gist_id}", "starred_url": "https://api.github.com/users/enkron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enkron/subscriptions", "organizations_url": "https://api.github.com/users/enkron/orgs", "repos_url": "https://api.github.com/users/enkron/repos", "events_url": "https://api.github.com/users/enkron/events{/privacy}", "received_events_url": "https://api.github.com/users/enkron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "enkron", "id": 34620256, "node_id": "MDQ6VXNlcjM0NjIwMjU2", "avatar_url": "https://avatars.githubusercontent.com/u/34620256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enkron", "html_url": "https://github.com/enkron", "followers_url": "https://api.github.com/users/enkron/followers", "following_url": "https://api.github.com/users/enkron/following{/other_user}", "gists_url": "https://api.github.com/users/enkron/gists{/gist_id}", "starred_url": "https://api.github.com/users/enkron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enkron/subscriptions", "organizations_url": "https://api.github.com/users/enkron/orgs", "repos_url": "https://api.github.com/users/enkron/repos", "events_url": "https://api.github.com/users/enkron/events{/privacy}", "received_events_url": "https://api.github.com/users/enkron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "502cb6f4b9ccb4ead43b76949252bf087b6d2c05", "url": "https://api.github.com/repos/rust-lang/rust/commits/502cb6f4b9ccb4ead43b76949252bf087b6d2c05", "html_url": "https://github.com/rust-lang/rust/commit/502cb6f4b9ccb4ead43b76949252bf087b6d2c05"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4b42ad65ee6bf1b7f74637440f03723e6af1e741", "filename": "library/std/src/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/081e222d99be8a5dd795244abafd64cc05e3d00e/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/081e222d99be8a5dd795244abafd64cc05e3d00e/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs?ref=081e222d99be8a5dd795244abafd64cc05e3d00e", "patch": "@@ -869,7 +869,7 @@ impl TcpListener {\n     /// use std::net::{TcpListener, TcpStream};\n     ///\n     /// fn listen_on(port: u16) -> impl Iterator<Item = TcpStream> {\n-    ///     let listener = TcpListener::bind(format!(\"127.0.0.1:{port}\")).unwrap();\n+    ///     let listener = TcpListener::bind((\"127.0.0.1\", port)).unwrap();\n     ///     listener.into_incoming()\n     ///         .filter_map(Result::ok) /* Ignore failed connections */\n     /// }"}]}