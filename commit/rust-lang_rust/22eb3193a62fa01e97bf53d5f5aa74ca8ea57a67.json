{"sha": "22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZWIzMTkzYTYyZmEwMWU5N2JmNTNkNWY1YWE3NGNhOGVhNTdhNjc=", "commit": {"author": {"name": "Christopher Chambers", "email": "chris.chambers@peanutcode.com", "date": "2015-04-11T04:06:34Z"}, "committer": {"name": "Christopher Chambers", "email": "chris.chambers@peanutcode.com", "date": "2015-04-11T04:42:40Z"}, "message": "Simplifications to statement macro handling.\n\nSmallVector::pop no longer worries about converting a Many repr downward\nto One or Zero.\n\nexpand_stmt makes use of `if let` for style purposes.", "tree": {"sha": "04d19566becd5f46a167f8117ad881bbc5d58748", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04d19566becd5f46a167f8117ad881bbc5d58748"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67", "html_url": "https://github.com/rust-lang/rust/commit/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67/comments", "author": {"login": "chris-chambers", "id": 6810256, "node_id": "MDQ6VXNlcjY4MTAyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6810256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-chambers", "html_url": "https://github.com/chris-chambers", "followers_url": "https://api.github.com/users/chris-chambers/followers", "following_url": "https://api.github.com/users/chris-chambers/following{/other_user}", "gists_url": "https://api.github.com/users/chris-chambers/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-chambers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-chambers/subscriptions", "organizations_url": "https://api.github.com/users/chris-chambers/orgs", "repos_url": "https://api.github.com/users/chris-chambers/repos", "events_url": "https://api.github.com/users/chris-chambers/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-chambers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-chambers", "id": 6810256, "node_id": "MDQ6VXNlcjY4MTAyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6810256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-chambers", "html_url": "https://github.com/chris-chambers", "followers_url": "https://api.github.com/users/chris-chambers/followers", "following_url": "https://api.github.com/users/chris-chambers/following{/other_user}", "gists_url": "https://api.github.com/users/chris-chambers/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-chambers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-chambers/subscriptions", "organizations_url": "https://api.github.com/users/chris-chambers/orgs", "repos_url": "https://api.github.com/users/chris-chambers/repos", "events_url": "https://api.github.com/users/chris-chambers/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-chambers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fae29e497c08fcdde8a429a7e2b656e7a8b6cc17", "url": "https://api.github.com/repos/rust-lang/rust/commits/fae29e497c08fcdde8a429a7e2b656e7a8b6cc17", "html_url": "https://github.com/rust-lang/rust/commit/fae29e497c08fcdde8a429a7e2b656e7a8b6cc17"}], "stats": {"total": 49, "additions": 12, "deletions": 37}, "files": [{"sha": "8e6b5f85440b9c18683add52820385514e975d2c", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67", "patch": "@@ -772,20 +772,17 @@ fn expand_stmt(stmt: P<Stmt>, fld: &mut MacroExpander) -> SmallVector<P<Stmt>> {\n     // If this is a macro invocation with a semicolon, then apply that\n     // semicolon to the final statement produced by expansion.\n     if style == MacStmtWithSemicolon {\n-        match fully_expanded.pop() {\n-            Some(stmt) => {\n-                let new_stmt = stmt.map(|Spanned {node, span}| {\n-                    Spanned {\n-                        node: match node {\n-                            StmtExpr(e, stmt_id) => StmtSemi(e, stmt_id),\n-                            _ => node /* might already have a semi */\n-                        },\n-                        span: span\n-                    }\n-                });\n-                fully_expanded.push(new_stmt);\n-            }\n-            None => (),\n+        if let Some(stmt) = fully_expanded.pop() {\n+            let new_stmt = stmt.map(|Spanned {node, span}| {\n+                Spanned {\n+                    node: match node {\n+                        StmtExpr(e, stmt_id) => StmtSemi(e, stmt_id),\n+                        _ => node /* might already have a semi */\n+                    },\n+                    span: span\n+                }\n+            });\n+            fully_expanded.push(new_stmt);\n         }\n     }\n "}, {"sha": "6b864d5294766fabffa4448c4440f997c32d6d22", "filename": "src/libsyntax/util/small_vector.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fsmall_vector.rs?ref=22eb3193a62fa01e97bf53d5f5aa74ca8ea57a67", "patch": "@@ -79,29 +79,7 @@ impl<T> SmallVector<T> {\n                     _ => unreachable!()\n                 }\n             }\n-            Many(..) => {\n-                let mut many = mem::replace(&mut self.repr, Zero);\n-                let item =\n-                    match many {\n-                        Many(ref mut vs) if vs.len() == 1 => {\n-                            // self.repr is already Zero\n-                            vs.pop()\n-                        },\n-                        Many(ref mut vs) if vs.len() == 2 => {\n-                            let item = vs.pop();\n-                            mem::replace(&mut self.repr, One(vs.pop().unwrap()));\n-                            item\n-                        },\n-                        Many(ref mut vs) if vs.len() > 2 => {\n-                            let item = vs.pop();\n-                            let rest = mem::replace(vs, vec!());\n-                            mem::replace(&mut self.repr, Many(rest));\n-                            item\n-                        },\n-                        _ => unreachable!()\n-                    };\n-                item\n-            }\n+            Many(ref mut vs) => vs.pop(),\n         }\n     }\n "}]}