{"sha": "36d09e3906d8c487149bbc9b101bb85322eba525", "node_id": "C_kwDOAAsO6NoAKDM2ZDA5ZTM5MDZkOGM0ODcxNDliYmM5YjEwMWJiODUzMjJlYmE1MjU", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-10T19:39:24Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-13T10:24:47Z"}, "message": "Split TypeVisitableExt from TypeVisitable", "tree": {"sha": "7bad38e3fa04e94269af32110a514e0f6481ead2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bad38e3fa04e94269af32110a514e0f6481ead2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36d09e3906d8c487149bbc9b101bb85322eba525", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJFBAABCAAvFiEEvrRBFuOXsbT1OVTHfUwvbCISJTIFAmPqD+8RHGVnZ3lhbEBn\nbWFpbC5jb20ACgkQfUwvbCISJTID2hAA1V43lM66m8XWBiWGV1yI+CkGhESfeOvI\n+i7pLeRaFHuLST3NaOz9aNrOcd66OU76pl8Cuh34Af/RlvRxK+pen8mJ14+lmcza\nyLWBabcVL5sV9sfBwtb3H4cPl6t0HnuA/GjRUxcgJQCA5XMWKZyBDFhA725EMegD\n9CvrkuPh15QeW61ZATjqX1LGXmGn77r0Kq24AMomYp3gZOV2N88Szk7SVG5Fjple\nOx9JUBPLdfdSkMb1xO5kq78nuUHLZuX352SmoJpY0CS06vkvQZELiKQAVbeUn+FU\ntxOX46jGTqvovkEcgjr3ZiXTsnYGcinBpyGaWWkc5NJ9cnvZLlBRIK7SGln18NRk\nAncfPlRkj8bqTcNBbG+EswI4PC8LLgmc5yu5fRVaso8KP8vMbP+dxbr10gGEu96t\n1k/ZiFfTyaWRpNFs9sMwNqzsJrB9cj0GaGv8YPp465Q5ZcB1OoTyXJe1wsCmTzQU\nWcETsWYvT0PCvjF35lmpumfDDfROK7l5VYR0JWgNiZ/Rc8WACw1Kv46ogWjqwibh\nAXJNClyAmhKAt036EA2UCngyoIDVh4MUFDJnNqFCif31LTu2AsZjTcw4MnlTSSlI\nKiY8ruq0k+ilhL5hpNnSBqScvT7/2S08eBk8/hwWMRMzrgMOnc6THgPWKt4Jjeg1\nJ1CGId17J5E=\n=vWdZ\n-----END PGP SIGNATURE-----", "payload": "tree 7bad38e3fa04e94269af32110a514e0f6481ead2\nparent ba55a453eba195fa3fae02b636abcf2bf9f59b95\nauthor Alan Egerton <eggyal@gmail.com> 1676057964 +0000\ncommitter Alan Egerton <eggyal@gmail.com> 1676283887 +0000\n\nSplit TypeVisitableExt from TypeVisitable\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36d09e3906d8c487149bbc9b101bb85322eba525", "html_url": "https://github.com/rust-lang/rust/commit/36d09e3906d8c487149bbc9b101bb85322eba525", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36d09e3906d8c487149bbc9b101bb85322eba525/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba55a453eba195fa3fae02b636abcf2bf9f59b95", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba55a453eba195fa3fae02b636abcf2bf9f59b95", "html_url": "https://github.com/rust-lang/rust/commit/ba55a453eba195fa3fae02b636abcf2bf9f59b95"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "e440a8a3912270d067624ca976965081890dd1b3", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/36d09e3906d8c487149bbc9b101bb85322eba525/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36d09e3906d8c487149bbc9b101bb85322eba525/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=36d09e3906d8c487149bbc9b101bb85322eba525", "patch": "@@ -764,16 +764,6 @@ impl<'tcx> ir::TypeVisitable<'tcx> for ty::Predicate<'tcx> {\n     fn visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> ControlFlow<V::BreakTy> {\n         visitor.visit_predicate(*self)\n     }\n-\n-    #[inline]\n-    fn has_vars_bound_at_or_above(&self, binder: ty::DebruijnIndex) -> bool {\n-        self.outer_exclusive_binder() > binder\n-    }\n-\n-    #[inline]\n-    fn has_type_flags(&self, flags: ty::TypeFlags) -> bool {\n-        self.flags().intersects(flags)\n-    }\n }\n \n impl<'tcx> TypeSuperFoldable<'tcx> for ty::Predicate<'tcx> {"}, {"sha": "793b84d4d9a051ae7c7a8208c26322fc9613ae2c", "filename": "compiler/rustc_middle/src/ty/visit.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/36d09e3906d8c487149bbc9b101bb85322eba525/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36d09e3906d8c487149bbc9b101bb85322eba525/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs?ref=36d09e3906d8c487149bbc9b101bb85322eba525", "patch": "@@ -44,7 +44,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sso::SsoHashSet;\n use std::ops::ControlFlow;\n \n-pub trait TypeVisitable<'tcx> = ir::TypeVisitable<'tcx>;\n+pub trait TypeVisitable<'tcx> = ir::TypeVisitable<'tcx> + ir::TypeVisitableExt<'tcx>;\n pub trait TypeSuperVisitable<'tcx> = ir::TypeSuperVisitable<'tcx>;\n pub trait TypeVisitor<'tcx> = ir::TypeVisitor<'tcx>;\n \n@@ -74,7 +74,9 @@ pub mod ir {\n         /// `V::visit_ty`). This is where control transfers from `TypeFoldable` to\n         /// `TypeVisitor`.\n         fn visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> ControlFlow<V::BreakTy>;\n+    }\n \n+    pub trait TypeVisitableExt<'tcx>: TypeVisitable<'tcx> {\n         /// Returns `true` if `self` has any late-bound regions that are either\n         /// bound by `binder` or bound by some binder outside of `binder`.\n         /// If `binder` is `ty::INNERMOST`, this indicates whether\n@@ -197,6 +199,8 @@ pub mod ir {\n         }\n     }\n \n+    impl<'tcx, T: TypeVisitable<'tcx>> TypeVisitableExt<'tcx> for T {}\n+\n     pub trait TypeSuperVisitable<'tcx>: TypeVisitable<'tcx> {\n         /// Provides a default visit for a type of interest. This should only be\n         /// called within `TypeVisitor` methods, when a non-custom traversal is"}]}