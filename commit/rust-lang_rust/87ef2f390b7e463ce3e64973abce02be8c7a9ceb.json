{"sha": "87ef2f390b7e463ce3e64973abce02be8c7a9ceb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZWYyZjM5MGI3ZTQ2M2NlM2U2NDk3M2FiY2UwMmJlOGM3YTljZWI=", "commit": {"author": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-07-21T09:35:49Z"}, "committer": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-07-24T09:40:22Z"}, "message": "Move contructors to the top of PriorityQueue.", "tree": {"sha": "d81f7a7c04ad9a87abf0274d3f46fdea067bae15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d81f7a7c04ad9a87abf0274d3f46fdea067bae15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87ef2f390b7e463ce3e64973abce02be8c7a9ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87ef2f390b7e463ce3e64973abce02be8c7a9ceb", "html_url": "https://github.com/rust-lang/rust/commit/87ef2f390b7e463ce3e64973abce02be8c7a9ceb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87ef2f390b7e463ce3e64973abce02be8c7a9ceb/comments", "author": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e2bb9d67bb47b9a3a6c7389efa45cefc33206a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2bb9d67bb47b9a3a6c7389efa45cefc33206a6", "html_url": "https://github.com/rust-lang/rust/commit/9e2bb9d67bb47b9a3a6c7389efa45cefc33206a6"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "6732f37f8b5086d4c65fca2ff1c7b5a47b08afd1", "filename": "src/libcollections/priority_queue.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/87ef2f390b7e463ce3e64973abce02be8c7a9ceb/src%2Flibcollections%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ef2f390b7e463ce3e64973abce02be8c7a9ceb/src%2Flibcollections%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fpriority_queue.rs?ref=87ef2f390b7e463ce3e64973abce02be8c7a9ceb", "patch": "@@ -180,6 +180,25 @@ impl<T: Ord> Default for PriorityQueue<T> {\n }\n \n impl<T: Ord> PriorityQueue<T> {\n+    /// Create an empty PriorityQueue\n+    pub fn new() -> PriorityQueue<T> { PriorityQueue{data: vec!(),} }\n+\n+    /// Create an empty PriorityQueue with capacity `capacity`\n+    pub fn with_capacity(capacity: uint) -> PriorityQueue<T> {\n+        PriorityQueue { data: Vec::with_capacity(capacity) }\n+    }\n+\n+    /// Create a PriorityQueue from a vector (heapify)\n+    pub fn from_vec(xs: Vec<T>) -> PriorityQueue<T> {\n+        let mut q = PriorityQueue{data: xs,};\n+        let mut n = q.len() / 2;\n+        while n > 0 {\n+            n -= 1;\n+            q.siftdown(n)\n+        }\n+        q\n+    }\n+\n     /// An iterator visiting all values in underlying vector, in\n     /// arbitrary order.\n     pub fn iter<'a>(&'a self) -> Items<'a, T> {\n@@ -278,25 +297,6 @@ impl<T: Ord> PriorityQueue<T> {\n         q.into_vec()\n     }\n \n-    /// Create an empty PriorityQueue\n-    pub fn new() -> PriorityQueue<T> { PriorityQueue{data: vec!(),} }\n-\n-    /// Create an empty PriorityQueue with capacity `capacity`\n-    pub fn with_capacity(capacity: uint) -> PriorityQueue<T> {\n-        PriorityQueue { data: Vec::with_capacity(capacity) }\n-    }\n-\n-    /// Create a PriorityQueue from a vector (heapify)\n-    pub fn from_vec(xs: Vec<T>) -> PriorityQueue<T> {\n-        let mut q = PriorityQueue{data: xs,};\n-        let mut n = q.len() / 2;\n-        while n > 0 {\n-            n -= 1;\n-            q.siftdown(n)\n-        }\n-        q\n-    }\n-\n     // The implementations of siftup and siftdown use unsafe blocks in\n     // order to move an element out of the vector (leaving behind a\n     // zeroed element), shift along the others and move it back into the"}]}