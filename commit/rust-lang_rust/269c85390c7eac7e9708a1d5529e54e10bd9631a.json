{"sha": "269c85390c7eac7e9708a1d5529e54e10bd9631a", "node_id": "C_kwDOAAsO6NoAKDI2OWM4NTM5MGM3ZWFjN2U5NzA4YTFkNTUyOWU1NGUxMGJkOTYzMWE", "commit": {"author": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-18T08:38:11Z"}, "committer": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-21T15:57:21Z"}, "message": "Migrate forbidden_lifetime_bound, forbidden_non_lifetime_param, too_many_params, c_var_args_without_named_arg, c_var_args_not_last", "tree": {"sha": "1923581e93b16397ebded7ce8c4b932901578683", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1923581e93b16397ebded7ce8c4b932901578683"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/269c85390c7eac7e9708a1d5529e54e10bd9631a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/269c85390c7eac7e9708a1d5529e54e10bd9631a", "html_url": "https://github.com/rust-lang/rust/commit/269c85390c7eac7e9708a1d5529e54e10bd9631a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/269c85390c7eac7e9708a1d5529e54e10bd9631a/comments", "author": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "committer": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d042f4483b60ceaa98a6bb2a778fa5ac4226bbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d042f4483b60ceaa98a6bb2a778fa5ac4226bbe", "html_url": "https://github.com/rust-lang/rust/commit/8d042f4483b60ceaa98a6bb2a778fa5ac4226bbe"}], "stats": {"total": 83, "additions": 57, "deletions": 26}, "files": [{"sha": "7735d95f71ee9934bc6789c92252836cc5599f64", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/269c85390c7eac7e9708a1d5529e54e10bd9631a/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269c85390c7eac7e9708a1d5529e54e10bd9631a/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=269c85390c7eac7e9708a1d5529e54e10bd9631a", "patch": "@@ -293,14 +293,7 @@ impl<'a> AstValidator<'a> {\n \n     fn check_trait_fn_not_const(&self, constness: Const) {\n         if let Const::Yes(span) = constness {\n-            struct_span_err!(\n-                self.session,\n-                span,\n-                E0379,\n-                \"functions in traits cannot be declared const\"\n-            )\n-            .span_label(span, \"functions in traits cannot be const\")\n-            .emit();\n+            self.session.emit_err(TraitFnConst { span });\n         }\n     }\n \n@@ -313,19 +306,15 @@ impl<'a> AstValidator<'a> {\n                 GenericParamKind::Lifetime { .. } => {\n                     if !param.bounds.is_empty() {\n                         let spans: Vec<_> = param.bounds.iter().map(|b| b.span()).collect();\n-                        self.err_handler()\n-                            .span_err(spans, \"lifetime bounds cannot be used in this context\");\n+                        self.session.emit_err(ForbiddenLifetimeBound { spans });\n                     }\n                     None\n                 }\n                 _ => Some(param.ident.span),\n             })\n             .collect();\n         if !non_lt_param_spans.is_empty() {\n-            self.err_handler().span_err(\n-                non_lt_param_spans,\n-                \"only lifetime parameters can be used in this context\",\n-            );\n+            self.session.emit_err(ForbiddenNonLifetimeParam { spans: non_lt_param_spans });\n         }\n     }\n \n@@ -342,30 +331,21 @@ impl<'a> AstValidator<'a> {\n         let max_num_args: usize = u16::MAX.into();\n         if fn_decl.inputs.len() > max_num_args {\n             let Param { span, .. } = fn_decl.inputs[0];\n-            self.err_handler().span_fatal(\n-                span,\n-                &format!(\"function can not have more than {} arguments\", max_num_args),\n-            );\n+            self.session.emit_err(TooManyParams { span, max_num_args });\n         }\n     }\n \n     fn check_decl_cvaradic_pos(&self, fn_decl: &FnDecl) {\n         match &*fn_decl.inputs {\n             [Param { ty, span, .. }] => {\n                 if let TyKind::CVarArgs = ty.kind {\n-                    self.err_handler().span_err(\n-                        *span,\n-                        \"C-variadic function must be declared with at least one named argument\",\n-                    );\n+                    self.session.emit_err(CVarArgsWithoutNamedArg { span: *span });\n                 }\n             }\n             [ps @ .., _] => {\n                 for Param { ty, span, .. } in ps {\n                     if let TyKind::CVarArgs = ty.kind {\n-                        self.err_handler().span_err(\n-                            *span,\n-                            \"`...` must be the last argument of a C-variadic function\",\n-                        );\n+                        self.session.emit_err(CVarArgsNotLast { span: *span });\n                     }\n                 }\n             }"}, {"sha": "cc92f00714de04f04df5d8ed74cce42e9c2be96a", "filename": "compiler/rustc_ast_passes/src/errors.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/269c85390c7eac7e9708a1d5529e54e10bd9631a/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269c85390c7eac7e9708a1d5529e54e10bd9631a/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs?ref=269c85390c7eac7e9708a1d5529e54e10bd9631a", "patch": "@@ -90,3 +90,39 @@ pub struct TraitFnConst {\n     #[label]\n     pub span: Span,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(ast_passes::forbidden_lifetime_bound)]\n+pub struct ForbiddenLifetimeBound {\n+    #[primary_span]\n+    pub spans: Vec<Span>,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(ast_passes::forbidden_non_lifetime_param)]\n+pub struct ForbiddenNonLifetimeParam {\n+    #[primary_span]\n+    pub spans: Vec<Span>,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(ast_passes::too_many_params)]\n+pub struct TooManyParams {\n+    #[primary_span]\n+    pub span: Span,\n+    pub max_num_args: usize,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(ast_passes::c_var_args_without_named_arg)]\n+pub struct CVarArgsWithoutNamedArg {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(ast_passes::c_var_args_not_last)]\n+pub struct CVarArgsNotLast {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "c0994063fc3436cf7e05276c23a8c36d113cd7be", "filename": "compiler/rustc_error_messages/locales/en-US/ast_passes.ftl", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/269c85390c7eac7e9708a1d5529e54e10bd9631a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/269c85390c7eac7e9708a1d5529e54e10bd9631a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl?ref=269c85390c7eac7e9708a1d5529e54e10bd9631a", "patch": "@@ -31,3 +31,18 @@ ast_passes_trait_fn_async =\n ast_passes_trait_fn_const =\n     functions in traits cannot be declared const\n     .label = functions in traits cannot be const\n+\n+ast_passes_forbidden_lifetime_bound =\n+    lifetime bounds cannot be used in this context\n+\n+ast_passes_forbidden_non_lifetime_param =\n+    only lifetime parameters can be used in this context\n+\n+ast_passes_too_many_params =\n+    function can not have more than {$max_num_args} arguments\n+\n+ast_passes_c_var_args_without_named_arg =\n+    C-variadic function must be declared with at least one named argument\n+\n+ast_passes_c_var_args_not_last =\n+    `...` must be the last argument of a C-variadic function"}]}