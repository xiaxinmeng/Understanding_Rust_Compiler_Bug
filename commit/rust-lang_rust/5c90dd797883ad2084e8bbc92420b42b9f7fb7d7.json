{"sha": "5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOTBkZDc5Nzg4M2FkMjA4NGU4YmJjOTI0MjBiNDJiOWY3ZmI3ZDc=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-21T07:15:23Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-03T10:48:15Z"}, "message": "Use a proper future-compatibility lint", "tree": {"sha": "d0f23fb4931013b1ce1093b5ec21a70e57d250bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0f23fb4931013b1ce1093b5ec21a70e57d250bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "html_url": "https://github.com/rust-lang/rust/commit/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "085f046c280639ce2f545108740d02c8a470cdd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/085f046c280639ce2f545108740d02c8a470cdd6", "html_url": "https://github.com/rust-lang/rust/commit/085f046c280639ce2f545108740d02c8a470cdd6"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "70f03e02f46d9b9c6a8dd7c22c7afaa2cd4f31ae", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "patch": "@@ -192,6 +192,13 @@ declare_lint! {\n     \"lifetimes or labels named `'_` were erroneously allowed\"\n }\n \n+declare_lint! {\n+    pub RESOLVE_TRAIT_ON_DEFAULTED_UNIT,\n+    Warn,\n+    \"attempt to resolve a trait on an expression whose type cannot be inferred but which \\\n+     currently defaults to ()\"\n+}\n+\n declare_lint! {\n     pub SAFE_EXTERN_STATICS,\n     Warn,\n@@ -272,6 +279,7 @@ impl LintPass for HardwiredLints {\n             SUPER_OR_SELF_IN_GLOBAL_PATH,\n             HR_LIFETIME_IN_ASSOC_TYPE,\n             LIFETIME_UNDERSCORE,\n+            RESOLVE_TRAIT_ON_DEFAULTED_UNIT,\n             SAFE_EXTERN_STATICS,\n             PATTERNS_IN_FNS_WITHOUT_BODY,\n             EXTRA_REQUIREMENT_IN_IMPL,"}, {"sha": "41f3f825c3d191e16770527fd80819af4ef77719", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "patch": "@@ -52,6 +52,7 @@ use std::mem;\n use std::rc::Rc;\n use syntax::abi::Abi;\n use hir;\n+use lint;\n use util::nodemap::FxHashMap;\n \n struct InferredObligationsSnapshotVecDelegate<'tcx> {\n@@ -455,13 +456,11 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n             }\n \n             if raise_warning {\n-                let sess = tcx.sess;\n-                let span = obligation.cause.span;\n-                let mut warn = sess.struct_span_warn(span, \"code relies on type inference rules \\\n-                                                            which are likely to change\");\n-                warn.span_label(span, &\"the type of this expression may change from () \\\n-                                        to ! in a future version of Rust\");\n-                warn.emit();\n+                tcx.sess.add_lint(lint::builtin::RESOLVE_TRAIT_ON_DEFAULTED_UNIT,\n+                                  obligation.cause.body_id,\n+                                  obligation.cause.span,\n+                                  format!(\"code relies on type inference rules which are likely \\\n+                                           to change\"));\n             }\n         }\n         Ok(ret)"}, {"sha": "81ba49f56f0504b222a6d36e5f09a1e9b1f9c569", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "patch": "@@ -220,6 +220,10 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             id: LintId::of(LIFETIME_UNDERSCORE),\n             reference: \"issue #36892 <https://github.com/rust-lang/rust/issues/36892>\",\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(RESOLVE_TRAIT_ON_DEFAULTED_UNIT),\n+            reference: \"issue #39216 <https://github.com/rust-lang/rust/issues/39216>\",\n+        },\n         FutureIncompatibleInfo {\n             id: LintId::of(SAFE_EXTERN_STATICS),\n             reference: \"issue #36247 <https://github.com/rust-lang/rust/issues/35112>\","}, {"sha": "7a15ac025ef852953050aeea8ace78005cc3c7c0", "filename": "src/test/compile-fail/defaulted-unit-warning.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c90dd797883ad2084e8bbc92420b42b9f7fb7d7/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs?ref=5c90dd797883ad2084e8bbc92420b42b9f7fb7d7", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(resolve_trait_on_defaulted_unit)]\n+\n+trait Deserialize {\n+    fn deserialize() -> Result<Self, String>\n+}\n+\n+fn doit() -> Result<(), String> {\n+    let _ = Deserialize::deserialize()?;\n+    //~^ ERROR attempt to resolve a trait\n+    Ok(())\n+}\n+\n+fn main() {\n+    doit();\n+}\n+"}]}