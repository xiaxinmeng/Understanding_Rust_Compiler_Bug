{"sha": "f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4Yjc3NGZiZjFmNTdlNTIwYjU4YWUzODI4ZTRiM2ExZGRmMWQ5N2M=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-05-07T16:27:50Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-05-07T17:26:28Z"}, "message": "Add explanation for #[must_use] on mutex guards", "tree": {"sha": "6ff66cfcfe7d724a5f2fd7248e4e818123a19f9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ff66cfcfe7d724a5f2fd7248e4e818123a19f9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "html_url": "https://github.com/rust-lang/rust/commit/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e49c837f614a8670a5773428b4934eb280bca61", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e49c837f614a8670a5773428b4934eb280bca61", "html_url": "https://github.com/rust-lang/rust/commit/6e49c837f614a8670a5773428b4934eb280bca61"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f3503b0b3a6a768b4cb10a568e2da6d936ee162a", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "patch": "@@ -150,7 +150,7 @@ unsafe impl<T: ?Sized + Send> Sync for Mutex<T> { }\n /// [`lock`]: struct.Mutex.html#method.lock\n /// [`try_lock`]: struct.Mutex.html#method.try_lock\n /// [`Mutex`]: struct.Mutex.html\n-#[must_use]\n+#[must_use = \"if unused the Mutex will immediately unlock\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct MutexGuard<'a, T: ?Sized + 'a> {\n     // funny underscores due to how Deref/DerefMut currently work (they"}, {"sha": "e3db60cff8474767167eb02e5e6bb56c20f73ae2", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "patch": "@@ -94,7 +94,7 @@ unsafe impl<T: ?Sized + Send + Sync> Sync for RwLock<T> {}\n /// [`read`]: struct.RwLock.html#method.read\n /// [`try_read`]: struct.RwLock.html#method.try_read\n /// [`RwLock`]: struct.RwLock.html\n-#[must_use]\n+#[must_use = \"if unused the RwLock will immediately unlock\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RwLockReadGuard<'a, T: ?Sized + 'a> {\n     __lock: &'a RwLock<T>,\n@@ -115,7 +115,7 @@ unsafe impl<'a, T: ?Sized + Sync> Sync for RwLockReadGuard<'a, T> {}\n /// [`write`]: struct.RwLock.html#method.write\n /// [`try_write`]: struct.RwLock.html#method.try_write\n /// [`RwLock`]: struct.RwLock.html\n-#[must_use]\n+#[must_use = \"if unused the RwLock will immediately unlock\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RwLockWriteGuard<'a, T: ?Sized + 'a> {\n     __lock: &'a RwLock<T>,"}, {"sha": "022056f8a8a700fd9c41c45006f4472ef4c0252e", "filename": "src/libstd/sys_common/remutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/src%2Flibstd%2Fsys_common%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c/src%2Flibstd%2Fsys_common%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fremutex.rs?ref=f8b774fbf1f57e520b58ae3828e4b3a1ddf1d97c", "patch": "@@ -41,7 +41,7 @@ unsafe impl<T: Send> Sync for ReentrantMutex<T> {}\n /// because implementation of the trait would violate Rust\u2019s reference aliasing\n /// rules. Use interior mutability (usually `RefCell`) in order to mutate the\n /// guarded data.\n-#[must_use]\n+#[must_use = \"if unused the ReentrantMutex will immediately unlock\"]\n pub struct ReentrantMutexGuard<'a, T: 'a> {\n     // funny underscores due to how Deref currently works (it disregards field\n     // privacy)."}]}