{"sha": "0b9ad6e6fd017837647eed8e5ae824d1f6e278b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiOWFkNmU2ZmQwMTc4Mzc2NDdlZWQ4ZTVhZTgyNGQxZjZlMjc4YjI=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-02-04T22:47:28Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2019-02-17T23:13:31Z"}, "message": "Explain a panic in test case net::tcp::tests::double_bind", "tree": {"sha": "c35974c7fe0f039f44411e78706c6b2af4f6ebfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35974c7fe0f039f44411e78706c6b2af4f6ebfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b9ad6e6fd017837647eed8e5ae824d1f6e278b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b9ad6e6fd017837647eed8e5ae824d1f6e278b2", "html_url": "https://github.com/rust-lang/rust/commit/0b9ad6e6fd017837647eed8e5ae824d1f6e278b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b9ad6e6fd017837647eed8e5ae824d1f6e278b2/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57c4c2863d4e1a18d668fdd79cab210105deb13c", "url": "https://api.github.com/repos/rust-lang/rust/commits/57c4c2863d4e1a18d668fdd79cab210105deb13c", "html_url": "https://github.com/rust-lang/rust/commit/57c4c2863d4e1a18d668fdd79cab210105deb13c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "c2bc85ae57617b6b57f68a889610afad4f5cf0e6", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0b9ad6e6fd017837647eed8e5ae824d1f6e278b2/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b9ad6e6fd017837647eed8e5ae824d1f6e278b2/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=0b9ad6e6fd017837647eed8e5ae824d1f6e278b2", "patch": "@@ -1187,9 +1187,13 @@ mod tests {\n     #[test]\n     fn double_bind() {\n         each_ip(&mut |addr| {\n-            let _listener = t!(TcpListener::bind(&addr));\n+            let listener1 = t!(TcpListener::bind(&addr));\n             match TcpListener::bind(&addr) {\n-                Ok(..) => panic!(),\n+                Ok(listener2) => panic!(\n+                    \"This system (perhaps due to options set by TcpListener::bind) \\\n+                     permits double binding: {:?} and {:?}\",\n+                    listener1, listener2\n+                ),\n                 Err(e) => {\n                     assert!(e.kind() == ErrorKind::ConnectionRefused ||\n                             e.kind() == ErrorKind::Other ||"}]}