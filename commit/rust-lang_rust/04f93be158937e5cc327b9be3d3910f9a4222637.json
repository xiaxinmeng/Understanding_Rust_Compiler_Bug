{"sha": "04f93be158937e5cc327b9be3d3910f9a4222637", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZjkzYmUxNTg5MzdlNWNjMzI3YjliZTNkMzkxMGY5YTQyMjI2Mzc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-01T23:24:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-01T23:24:16Z"}, "message": "Fix breakage", "tree": {"sha": "90d51d11106bd553f1cebe60041ac1d0083bdae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90d51d11106bd553f1cebe60041ac1d0083bdae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04f93be158937e5cc327b9be3d3910f9a4222637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04f93be158937e5cc327b9be3d3910f9a4222637", "html_url": "https://github.com/rust-lang/rust/commit/04f93be158937e5cc327b9be3d3910f9a4222637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04f93be158937e5cc327b9be3d3910f9a4222637/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dc69382922227964ab3f38a5343ba39dfcbc0c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc69382922227964ab3f38a5343ba39dfcbc0c0", "html_url": "https://github.com/rust-lang/rust/commit/9dc69382922227964ab3f38a5343ba39dfcbc0c0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "39d3b003e66450b6ef16d0918a28e20bc3fce339", "filename": "src/libsyntax/util/testing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04f93be158937e5cc327b9be3d3910f9a4222637/src%2Flibsyntax%2Futil%2Ftesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f93be158937e5cc327b9be3d3910f9a4222637/src%2Flibsyntax%2Futil%2Ftesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Ftesting.rs?ref=04f93be158937e5cc327b9be3d3910f9a4222637", "patch": "@@ -13,12 +13,12 @@ use core::cmp;\n \n pub pure fn check_equal_ptr<T : cmp::Eq> (given : &T, expected: &T) {\n     if !((given == expected) && (expected == given )) {\n-        fail (fmt!(\"given %?, expected %?\",given,expected));\n+        die!(fmt!(\"given %?, expected %?\",given,expected));\n     }\n }\n \n pub pure fn check_equal<T : cmp::Eq> (given : T, expected: T) {\n     if !((given == expected) && (expected == given )) {\n-        fail (fmt!(\"given %?, expected %?\",given,expected));\n+        die!(fmt!(\"given %?, expected %?\",given,expected));\n     }\n }"}]}