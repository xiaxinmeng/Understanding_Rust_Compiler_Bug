{"sha": "d3c747c752ba6255848f29826bd8d46d4a075f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzc0N2M3NTJiYTYyNTU4NDhmMjk4MjZiZDhkNDZkNGEwNzVmMTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-22T09:18:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-22T09:18:39Z"}, "message": "Auto merge of #3569 - phansch:update_contributing, r=flip1995\n\nChange contrib.md hierarchy, link to it from readme\n\n'How Clippy works' and 'How to fix nightly failures' are not exactly part\nof 'Writing code'.", "tree": {"sha": "b17ca9e4fcf51d4d1ece3b4d05a4217d49fa0ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b17ca9e4fcf51d4d1ece3b4d05a4217d49fa0ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c747c752ba6255848f29826bd8d46d4a075f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c747c752ba6255848f29826bd8d46d4a075f18", "html_url": "https://github.com/rust-lang/rust/commit/d3c747c752ba6255848f29826bd8d46d4a075f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c747c752ba6255848f29826bd8d46d4a075f18/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80c07d4c28c16f87fc7bf5a972e90d2037a9a691", "url": "https://api.github.com/repos/rust-lang/rust/commits/80c07d4c28c16f87fc7bf5a972e90d2037a9a691", "html_url": "https://github.com/rust-lang/rust/commit/80c07d4c28c16f87fc7bf5a972e90d2037a9a691"}, {"sha": "cef8f57082a30bf3ead0f81ae81bd3a0b5969fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef8f57082a30bf3ead0f81ae81bd3a0b5969fab", "html_url": "https://github.com/rust-lang/rust/commit/cef8f57082a30bf3ead0f81ae81bd3a0b5969fab"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "3d489b2e39a5e3334fe461135d4a45ffc6663ed9", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3c747c752ba6255848f29826bd8d46d4a075f18/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/d3c747c752ba6255848f29826bd8d46d4a075f18/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=d3c747c752ba6255848f29826bd8d46d4a075f18", "patch": "@@ -19,8 +19,8 @@ All contributors are expected to follow the [Rust Code of Conduct](http://www.ru\n   * [Running test suite](#running-test-suite)\n   * [Running rustfmt](#running-rustfmt)\n   * [Testing manually](#testing-manually)\n-  * [How Clippy works](#how-clippy-works)\n-  * [Fixing nightly build failures](#fixing-build-failures-caused-by-rust)\n+* [How Clippy works](#how-clippy-works)\n+* [Fixing nightly build failures](#fixing-build-failures-caused-by-rust)\n * [Issue and PR Triage](#issue-and-pr-triage)\n * [Bors and Homu](#bors-and-homu)\n * [Contributions](#contributions)\n@@ -168,7 +168,7 @@ Manually testing against an example file is useful if you have added some\n local modifications, run `env CLIPPY_TESTS=true cargo run --bin clippy-driver -- -L ./target/debug input.rs`\n from the working copy root.\n \n-### How Clippy works\n+## How Clippy works\n \n Clippy is a [rustc compiler plugin][compiler_plugin]. The main entry point is at [`src/lib.rs`][main_entry]. In there, the lint registration is delegated to the [`clippy_lints`][lint_crate] crate.\n \n@@ -218,7 +218,7 @@ The difference between `EarlyLintPass` and `LateLintPass` is that the methods of\n \n That's why the `else_if_without_else` example uses the `register_early_lint_pass` function. Because the [actual lint logic][else_if_without_else] does not depend on any type information.\n \n-### Fixing build failures caused by Rust\n+## Fixing build failures caused by Rust\n \n Clippy will sometimes fail to build from source because building it depends on unstable internal Rust features. Most of the times we have to adapt to the changes and only very rarely there's an actual bug in Rust. Fixing build failures caused by Rust updates, can be a good way to learn about Rust internals.\n "}, {"sha": "be24f1be8272ff29543a6cb1ec632e38c8662f3a", "filename": "README.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3c747c752ba6255848f29826bd8d46d4a075f18/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/d3c747c752ba6255848f29826bd8d46d4a075f18/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=d3c747c752ba6255848f29826bd8d46d4a075f18", "patch": "@@ -151,6 +151,10 @@ Note: `deny` produces errors instead of warnings.\n \n If you do not want to include your lint levels in your code, you can globally enable/disable lints by passing extra flags to Clippy during the run: `cargo clippy -- -A clippy::lint_name` will run Clippy with `lint_name` disabled and `cargo clippy -- -W clippy::lint_name` will run it with that enabled. This also works with lint groups. For example you can run Clippy with warnings for all lints enabled: `cargo clippy -- -W clippy::pedantic`\n \n+## Contributing\n+\n+If you want to contribute to Clippy, you can find more information in [CONTRIBUTING.md](https://github.com/rust-lang/rust-clippy/blob/master/CONTRIBUTING.md).\n+\n ## License\n \n Copyright 2014-2018 The Rust Project Developers"}]}