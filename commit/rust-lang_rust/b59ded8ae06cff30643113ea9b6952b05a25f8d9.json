{"sha": "b59ded8ae06cff30643113ea9b6952b05a25f8d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OWRlZDhhZTA2Y2ZmMzA2NDMxMTNlYTliNjk1MmIwNWEyNWY4ZDk=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-19T20:49:58Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-20T03:08:39Z"}, "message": "Avoid cloning Place in visit_rvalue", "tree": {"sha": "f5b91b3e6e932fc05a92ec311b93731d2efbe50d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5b91b3e6e932fc05a92ec311b93731d2efbe50d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59ded8ae06cff30643113ea9b6952b05a25f8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59ded8ae06cff30643113ea9b6952b05a25f8d9", "html_url": "https://github.com/rust-lang/rust/commit/b59ded8ae06cff30643113ea9b6952b05a25f8d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59ded8ae06cff30643113ea9b6952b05a25f8d9/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7789cbf700f5633b895ced21f7ffd2f33661542e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7789cbf700f5633b895ced21f7ffd2f33661542e", "html_url": "https://github.com/rust-lang/rust/commit/7789cbf700f5633b895ced21f7ffd2f33661542e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "739e2172b03bc6f6892fc06f5724495d815aa0b3", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b59ded8ae06cff30643113ea9b6952b05a25f8d9/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59ded8ae06cff30643113ea9b6952b05a25f8d9/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=b59ded8ae06cff30643113ea9b6952b05a25f8d9", "patch": "@@ -1199,10 +1199,10 @@ impl<'a, 'tcx> Visitor<'tcx> for Checker<'a, 'tcx> {\n                         MutatingUseContext::Borrow,\n                     ),\n                 };\n-                self.visit_place(&Place {\n-                    base: place.base.clone(),\n-                    projection: proj.clone(),\n-                }, ctx, location);\n+                self.visit_place_base(&place.base, ctx, location);\n+                if let Some(proj) = proj {\n+                    self.visit_projection(&place.base, proj, ctx, location);\n+                }\n             } else {\n                 self.super_rvalue(rvalue, location);\n             }"}]}