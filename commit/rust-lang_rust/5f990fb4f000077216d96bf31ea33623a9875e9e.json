{"sha": "5f990fb4f000077216d96bf31ea33623a9875e9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmOTkwZmI0ZjAwMDA3NzIxNmQ5NmJmMzFlYTMzNjIzYTk4NzVlOWU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-10T04:35:41Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T20:48:07Z"}, "message": "mir: Don't forget to drop arguments.", "tree": {"sha": "cba3fcf508a455ee09a6f1275f509fce039c195e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cba3fcf508a455ee09a6f1275f509fce039c195e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f990fb4f000077216d96bf31ea33623a9875e9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f990fb4f000077216d96bf31ea33623a9875e9e", "html_url": "https://github.com/rust-lang/rust/commit/5f990fb4f000077216d96bf31ea33623a9875e9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f990fb4f000077216d96bf31ea33623a9875e9e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfd768e2e69a3ca8f28d7bc49f2ae3ca744841c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd768e2e69a3ca8f28d7bc49f2ae3ca744841c8", "html_url": "https://github.com/rust-lang/rust/commit/cfd768e2e69a3ca8f28d7bc49f2ae3ca744841c8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "b40775f939f75a3abb3be55db739b4e1619ab7c4", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f990fb4f000077216d96bf31ea33623a9875e9e/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f990fb4f000077216d96bf31ea33623a9875e9e/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=5f990fb4f000077216d96bf31ea33623a9875e9e", "patch": "@@ -141,14 +141,17 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n                 .chain(explicits)\n                 .enumerate()\n                 .map(|(index, (ty, pattern))| {\n+                    let lvalue = Lvalue::Arg(index as u32);\n                     if let Some(pattern) = pattern {\n-                        let lvalue = Lvalue::Arg(index as u32);\n                         let pattern = this.hir.irrefutable_pat(pattern);\n                         unpack!(block = this.lvalue_into_pattern(block,\n                                                                  argument_extent,\n                                                                  pattern,\n                                                                  &lvalue));\n                     }\n+                    // Make sure we drop (parts of) the argument even when not matched on.\n+                    this.schedule_drop(pattern.as_ref().map_or(ast_block.span, |pat| pat.span),\n+                                       argument_extent, &lvalue, ty);\n                     ArgDecl { ty: ty, spread: false }\n                 })\n                 .collect();"}]}