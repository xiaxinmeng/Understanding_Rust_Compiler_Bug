{"sha": "dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZTBkNzFiMThlZDc4ZjU1OTg5ZDJhNzQ2MmFlMWQ4ZGYxMGUxNGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-29T01:09:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-29T01:09:37Z"}, "message": "Merge #8685\n\n8685: feat: parse const param defaults r=jonas-schievink a=jonas-schievink\n\nThese will probably be stabilized in a few releases, let's make sure we can at least parse them\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "b8da652e4137c7a519e885a684b81f983f5ba9a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8da652e4137c7a519e885a684b81f983f5ba9a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgigdRCRBK7hj4Ov3rIwAAcJcIACiU6p80AZ69b5O5yNmzsKOm\n//yQheJl4cT2m+B2U9awA8bwBkFoawbhB4ns9Uzr9LSt5jrb0J3/Wk4HppnIlYOm\n21AmsIHGNPKLPOyDrUEZRH2PNobZoiuCWkIk1nHqnLdDAYH2ob0ivp91iu02oKkG\nC5DwcWPStjnpEgrWGEivT+zbBOhKR3cQfPufeMUzYNe1zv9w0h5nYdBkXNA2Pu0o\n1gTWYRa6lzncxijlkrGpdYvqFEM8FuD2poGvVMzTlnny3/nPyMkkzZto/qJkEfBq\nKJkCmhDvHmxFvpDyMFdiAPQjoBwAxSv5FgNJcfCfMfSKwcp+8SA4IbNoRBu53Mk=\n=PBuS\n-----END PGP SIGNATURE-----\n", "payload": "tree b8da652e4137c7a519e885a684b81f983f5ba9a9\nparent 9d199486dacb982535ed77a2e8aef830ac44a5b5\nparent cb8632d87ca0ad4e686452b72c0c0c01cd7a869b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1619658577 +0000\ncommitter GitHub <noreply@github.com> 1619658577 +0000\n\nMerge #8685\n\n8685: feat: parse const param defaults r=jonas-schievink a=jonas-schievink\n\nThese will probably be stabilized in a few releases, let's make sure we can at least parse them\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "html_url": "https://github.com/rust-lang/rust/commit/dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d199486dacb982535ed77a2e8aef830ac44a5b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d199486dacb982535ed77a2e8aef830ac44a5b5", "html_url": "https://github.com/rust-lang/rust/commit/9d199486dacb982535ed77a2e8aef830ac44a5b5"}, {"sha": "cb8632d87ca0ad4e686452b72c0c0c01cd7a869b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8632d87ca0ad4e686452b72c0c0c01cd7a869b", "html_url": "https://github.com/rust-lang/rust/commit/cb8632d87ca0ad4e686452b72c0c0c01cd7a869b"}], "stats": {"total": 141, "additions": 141, "deletions": 0}, "files": [{"sha": "be36cad172df9085c02b8ac8c982e808fb671c61", "filename": "crates/parser/src/grammar/type_args.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_args.rs?ref=dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "patch": "@@ -25,6 +25,38 @@ pub(super) fn opt_generic_arg_list(p: &mut Parser, colon_colon_required: bool) {\n     m.complete(p, GENERIC_ARG_LIST);\n }\n \n+pub(super) fn const_arg(p: &mut Parser) {\n+    let m = p.start();\n+    // FIXME: duplicates the code below\n+    match p.current() {\n+        T!['{'] => {\n+            expressions::block_expr(p);\n+            m.complete(p, CONST_ARG);\n+        }\n+        k if k.is_literal() => {\n+            expressions::literal(p);\n+            m.complete(p, CONST_ARG);\n+        }\n+        T![true] | T![false] => {\n+            expressions::literal(p);\n+            m.complete(p, CONST_ARG);\n+        }\n+        T![-] => {\n+            let lm = p.start();\n+            p.bump(T![-]);\n+            expressions::literal(p);\n+            lm.complete(p, PREFIX_EXPR);\n+            m.complete(p, CONST_ARG);\n+        }\n+        _ => {\n+            let lm = p.start();\n+            paths::use_path(p);\n+            lm.complete(p, PATH_EXPR);\n+            m.complete(p, CONST_ARG);\n+        }\n+    }\n+}\n+\n // test type_arg\n // type A = B<'static, i32, 1, { 2 }, Item=u64, true, false>;\n fn generic_arg(p: &mut Parser) {"}, {"sha": "b1f979281433148a85177f2af3b485a4edac99e7", "filename": "crates/parser/src/grammar/type_params.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "patch": "@@ -70,6 +70,16 @@ fn const_param(p: &mut Parser, m: Marker) {\n     p.bump(T![const]);\n     name(p);\n     types::ascription(p);\n+\n+    // test const_param_defaults\n+    // struct A<const N: i32 = -1>;\n+    // struct B<const N: i32 = {}>;\n+    // struct C<const N: i32 = some::CONST>;\n+    if p.at(T![=]) {\n+        p.bump(T![=]);\n+        type_args::const_arg(p);\n+    }\n+\n     m.complete(p, CONST_PARAM);\n }\n "}, {"sha": "e8f40a4cd7063beb68d5cd7f9434d3974ab4edf9", "filename": "crates/syntax/test_data/parser/inline/ok/0165_const_param_defaults.rast", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rast", "raw_url": "https://github.com/rust-lang/rust/raw/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rast?ref=dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "patch": "@@ -0,0 +1,96 @@\n+SOURCE_FILE@0..96\n+  STRUCT@0..28\n+    STRUCT_KW@0..6 \"struct\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..8\n+      IDENT@7..8 \"A\"\n+    GENERIC_PARAM_LIST@8..27\n+      L_ANGLE@8..9 \"<\"\n+      CONST_PARAM@9..26\n+        CONST_KW@9..14 \"const\"\n+        WHITESPACE@14..15 \" \"\n+        NAME@15..16\n+          IDENT@15..16 \"N\"\n+        COLON@16..17 \":\"\n+        WHITESPACE@17..18 \" \"\n+        PATH_TYPE@18..21\n+          PATH@18..21\n+            PATH_SEGMENT@18..21\n+              NAME_REF@18..21\n+                IDENT@18..21 \"i32\"\n+        WHITESPACE@21..22 \" \"\n+        EQ@22..23 \"=\"\n+        WHITESPACE@23..24 \" \"\n+        CONST_ARG@24..26\n+          PREFIX_EXPR@24..26\n+            MINUS@24..25 \"-\"\n+            LITERAL@25..26\n+              INT_NUMBER@25..26 \"1\"\n+      R_ANGLE@26..27 \">\"\n+    SEMICOLON@27..28 \";\"\n+  WHITESPACE@28..29 \"\\n\"\n+  STRUCT@29..57\n+    STRUCT_KW@29..35 \"struct\"\n+    WHITESPACE@35..36 \" \"\n+    NAME@36..37\n+      IDENT@36..37 \"B\"\n+    GENERIC_PARAM_LIST@37..56\n+      L_ANGLE@37..38 \"<\"\n+      CONST_PARAM@38..55\n+        CONST_KW@38..43 \"const\"\n+        WHITESPACE@43..44 \" \"\n+        NAME@44..45\n+          IDENT@44..45 \"N\"\n+        COLON@45..46 \":\"\n+        WHITESPACE@46..47 \" \"\n+        PATH_TYPE@47..50\n+          PATH@47..50\n+            PATH_SEGMENT@47..50\n+              NAME_REF@47..50\n+                IDENT@47..50 \"i32\"\n+        WHITESPACE@50..51 \" \"\n+        EQ@51..52 \"=\"\n+        WHITESPACE@52..53 \" \"\n+        CONST_ARG@53..55\n+          BLOCK_EXPR@53..55\n+            L_CURLY@53..54 \"{\"\n+            R_CURLY@54..55 \"}\"\n+      R_ANGLE@55..56 \">\"\n+    SEMICOLON@56..57 \";\"\n+  WHITESPACE@57..58 \"\\n\"\n+  STRUCT@58..95\n+    STRUCT_KW@58..64 \"struct\"\n+    WHITESPACE@64..65 \" \"\n+    NAME@65..66\n+      IDENT@65..66 \"C\"\n+    GENERIC_PARAM_LIST@66..94\n+      L_ANGLE@66..67 \"<\"\n+      CONST_PARAM@67..93\n+        CONST_KW@67..72 \"const\"\n+        WHITESPACE@72..73 \" \"\n+        NAME@73..74\n+          IDENT@73..74 \"N\"\n+        COLON@74..75 \":\"\n+        WHITESPACE@75..76 \" \"\n+        PATH_TYPE@76..79\n+          PATH@76..79\n+            PATH_SEGMENT@76..79\n+              NAME_REF@76..79\n+                IDENT@76..79 \"i32\"\n+        WHITESPACE@79..80 \" \"\n+        EQ@80..81 \"=\"\n+        WHITESPACE@81..82 \" \"\n+        CONST_ARG@82..93\n+          PATH_EXPR@82..93\n+            PATH@82..93\n+              PATH@82..86\n+                PATH_SEGMENT@82..86\n+                  NAME_REF@82..86\n+                    IDENT@82..86 \"some\"\n+              COLON2@86..88 \"::\"\n+              PATH_SEGMENT@88..93\n+                NAME_REF@88..93\n+                  IDENT@88..93 \"CONST\"\n+      R_ANGLE@93..94 \">\"\n+    SEMICOLON@94..95 \";\"\n+  WHITESPACE@95..96 \"\\n\""}, {"sha": "68388c8fbdf385b2f75f79131a44e0037cd04161", "filename": "crates/syntax/test_data/parser/inline/ok/0165_const_param_defaults.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dce0d71b18ed78f55989d2a7462ae1d8df10e14f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rs?ref=dce0d71b18ed78f55989d2a7462ae1d8df10e14f", "patch": "@@ -0,0 +1,3 @@\n+struct A<const N: i32 = -1>;\n+struct B<const N: i32 = {}>;\n+struct C<const N: i32 = some::CONST>;"}]}