{"sha": "c7b7d7e6664ab677c392155b9a6aec37409f4bb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3YjdkN2U2NjY0YWI2NzdjMzkyMTU1YjlhNmFlYzM3NDA5ZjRiYjk=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2019-11-02T22:19:08Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2019-11-02T22:19:08Z"}, "message": "Silence some warnings", "tree": {"sha": "bbd4ee52b766bcbbcdd13c9d6aea6407902e072f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbd4ee52b766bcbbcdd13c9d6aea6407902e072f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7b7d7e6664ab677c392155b9a6aec37409f4bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b7d7e6664ab677c392155b9a6aec37409f4bb9", "html_url": "https://github.com/rust-lang/rust/commit/c7b7d7e6664ab677c392155b9a6aec37409f4bb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7b7d7e6664ab677c392155b9a6aec37409f4bb9/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "151efb2198e74c994fec255b8f78c62900989544", "url": "https://api.github.com/repos/rust-lang/rust/commits/151efb2198e74c994fec255b8f78c62900989544", "html_url": "https://github.com/rust-lang/rust/commit/151efb2198e74c994fec255b8f78c62900989544"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "14b3f707df3b612df2539558f823c329beedddf7", "filename": "crates/ra_tt/src/buffer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7b7d7e6664ab677c392155b9a6aec37409f4bb9/crates%2Fra_tt%2Fsrc%2Fbuffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b7d7e6664ab677c392155b9a6aec37409f4bb9/crates%2Fra_tt%2Fsrc%2Fbuffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Fbuffer.rs?ref=c7b7d7e6664ab677c392155b9a6aec37409f4bb9", "patch": "@@ -111,7 +111,7 @@ impl<'a> Cursor<'a> {\n \n     /// If the cursor is pointing at the end of a subtree, returns\n     /// the parent subtree\n-    pub fn end(self) -> Option<(&'a Subtree)> {\n+    pub fn end(self) -> Option<&'a Subtree> {\n         match self.entry() {\n             Some(Entry::End(Some(ptr))) => {\n                 let idx = ptr.1;\n@@ -127,7 +127,7 @@ impl<'a> Cursor<'a> {\n         }\n     }\n \n-    fn entry(self) -> Option<(&'a Entry<'a>)> {\n+    fn entry(self) -> Option<&'a Entry<'a>> {\n         self.buffer.entry(&self.ptr)\n     }\n "}]}