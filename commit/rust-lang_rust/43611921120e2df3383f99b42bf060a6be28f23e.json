{"sha": "43611921120e2df3383f99b42bf060a6be28f23e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNjExOTIxMTIwZTJkZjMzODNmOTliNDJiZjA2MGE2YmUyOGYyM2U=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2019-12-29T22:23:40Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-11T10:18:44Z"}, "message": "Add a test to check that swallowed Rust panics are dropped properly.", "tree": {"sha": "9a5cce7bcec94f42d50123c6927002e940895ac6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a5cce7bcec94f42d50123c6927002e940895ac6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43611921120e2df3383f99b42bf060a6be28f23e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43611921120e2df3383f99b42bf060a6be28f23e", "html_url": "https://github.com/rust-lang/rust/commit/43611921120e2df3383f99b42bf060a6be28f23e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43611921120e2df3383f99b42bf060a6be28f23e/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c15ad84519193c3b7fd5c364cd46598303df92e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c15ad84519193c3b7fd5c364cd46598303df92e5", "html_url": "https://github.com/rust-lang/rust/commit/c15ad84519193c3b7fd5c364cd46598303df92e5"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "ef5cd74c6528315237d062ea23d99a95441bfd31", "filename": "src/test/run-make-fulldeps/foreign-exceptions/foo.cpp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/43611921120e2df3383f99b42bf060a6be28f23e/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/43611921120e2df3383f99b42bf060a6be28f23e/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.cpp?ref=43611921120e2df3383f99b42bf060a6be28f23e", "patch": "@@ -57,4 +57,21 @@ extern \"C\" {\n             throw;\n         }\n     }\n+\n+    void swallow_exception(void (*cb)()) {\n+        try {\n+            // Do a rethrow to ensure that the exception is only dropped once.\n+            // This is necessary since we don't support copying exceptions.\n+            try {\n+                cb();\n+            } catch (...) {\n+                println(\"rethrowing Rust panic\");\n+                throw;\n+            };\n+        } catch (rust_panic e) {\n+            assert(false && \"shouldn't be able to catch a rust panic\");\n+        } catch (...) {\n+            println(\"swallowing foreign exception in catch (...)\");\n+        }\n+    }\n }"}, {"sha": "d9818dffc502bb10e0befeed2810061412c07182", "filename": "src/test/run-make-fulldeps/foreign-exceptions/foo.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/43611921120e2df3383f99b42bf060a6be28f23e/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43611921120e2df3383f99b42bf060a6be28f23e/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fforeign-exceptions%2Ffoo.rs?ref=43611921120e2df3383f99b42bf060a6be28f23e", "patch": "@@ -4,7 +4,6 @@\n \n // For linking libstdc++ on MinGW\n #![cfg_attr(all(windows, target_env = \"gnu\"), feature(static_nobundle))]\n-\n #![feature(unwind_attributes)]\n \n use std::panic::{catch_unwind, AssertUnwindSafe};\n@@ -20,6 +19,8 @@ impl<'a> Drop for DropCheck<'a> {\n extern \"C\" {\n     fn throw_cxx_exception();\n \n+    fn swallow_exception(cb: extern \"C\" fn());\n+\n     #[unwind(allowed)]\n     fn cxx_catch_callback(cb: extern \"C\" fn(), ok: *mut bool);\n }\n@@ -60,7 +61,34 @@ fn throw_rust_panic() {\n     assert!(cxx_ok);\n }\n \n+fn check_exception_drop() {\n+    static mut DROP_COUNT: usize = 0;\n+\n+    struct CountDrop;\n+    impl Drop for CountDrop {\n+        fn drop(&mut self) {\n+            println!(\"CountDrop::drop\");\n+            unsafe {\n+                DROP_COUNT += 1;\n+            }\n+        }\n+    }\n+\n+\n+    #[unwind(allowed)]\n+    extern \"C\" fn callback() {\n+        println!(\"throwing rust panic #2\");\n+        panic!(CountDrop);\n+    }\n+\n+    unsafe {\n+        swallow_exception(callback);\n+        assert_eq!(DROP_COUNT, 1);\n+    }\n+}\n+\n fn main() {\n     unsafe { throw_cxx_exception() };\n     throw_rust_panic();\n+    check_exception_drop();\n }"}]}