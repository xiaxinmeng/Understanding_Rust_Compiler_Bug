{"sha": "a6c8464ddeb46951ecff0624f65cd4fe848d2302", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2Yzg0NjRkZGViNDY5NTFlY2ZmMDYyNGY2NWNkNGZlODQ4ZDIzMDI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-03T10:51:47Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-03T10:51:47Z"}, "message": "Update to `rustc 1.19.0-nightly (6a5fc9eec 2017-05-02)`", "tree": {"sha": "4fb36e8715d674d235dca3c97d08d4ae1960e8f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fb36e8715d674d235dca3c97d08d4ae1960e8f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6c8464ddeb46951ecff0624f65cd4fe848d2302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c8464ddeb46951ecff0624f65cd4fe848d2302", "html_url": "https://github.com/rust-lang/rust/commit/a6c8464ddeb46951ecff0624f65cd4fe848d2302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6c8464ddeb46951ecff0624f65cd4fe848d2302/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b84e71c2b17fc087681e996e0576a6d3e0610fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b84e71c2b17fc087681e996e0576a6d3e0610fdb", "html_url": "https://github.com/rust-lang/rust/commit/b84e71c2b17fc087681e996e0576a6d3e0610fdb"}], "stats": {"total": 1286, "additions": 299, "deletions": 987}, "files": [{"sha": "7727074f7b39bd320d5263d89c2d45815ea3eac3", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -386,6 +386,7 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n                                    \"this boolean expression can be simplified\",\n                                    |db| for suggestion in &improvements {\n                                        db.span_suggestion(e.span, \"try\", suggest(self.cx, suggestion, &h2q.terminals));\n+                                       break; // FIXME: multiple suggestions in rustc are broken\n                                    });\n             }\n         }"}, {"sha": "57fdd3e86cfbafb89af72da6469c073e2005c5fa", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -140,7 +140,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EqOp {\n                         if (requires_ref || rcpy) && implements_trait(cx, cx.tables.expr_ty(left), trait_id, &[rty], None) {\n                             span_lint_and_then(cx, OP_REF, e.span, \"taken reference of right operand\", |db| {\n                                 let rsnip = snippet(cx, r.span, \"...\").to_string();\n-                                db.span_suggestion(left.span, \"use the right value directly\", rsnip);\n+                                db.span_suggestion(right.span, \"use the right value directly\", rsnip);\n                             })\n                         }\n                     },"}, {"sha": "a36951b5f365f687d0693b2d7d200f7deec0b5c5", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -65,7 +65,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         _: &'tcx FnDecl,\n         body: &'tcx Body,\n         _: Span,\n-        _id: NodeId\n+        node_id: NodeId\n     ) {\n         // we store the infcx because it is expensive to recreate\n         // the context each time.\n@@ -78,8 +78,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         };\n \n         let infcx = cx.tcx.borrowck_fake_infer_ctxt(body.id());\n+        let fn_def_id = cx.tcx.hir.local_def_id(node_id);\n+        let region_maps = &cx.tcx.region_maps(fn_def_id);\n         {\n-            let mut vis = ExprUseVisitor::new(&mut v, &infcx);\n+            let mut vis = ExprUseVisitor::new(&mut v, region_maps, &infcx);\n             vis.consume_body(body);\n         }\n \n@@ -150,7 +152,7 @@ impl<'a, 'tcx: 'a> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         borrow_id: NodeId,\n         _: Span,\n         cmt: cmt<'tcx>,\n-        _: &ty::Region,\n+        _: ty::Region,\n         _: ty::BorrowKind,\n         loan_cause: LoanCause\n     ) {"}, {"sha": "222b912eb737782c4ab74db4bf7fec18d73b083a", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -173,7 +173,7 @@ fn check_len_zero(cx: &LateContext, span: Span, name: Name, args: &[Expr], lit:\n         if name == \"len\" && args.len() == 1 && has_is_empty(cx, &args[0]) {\n             span_lint_and_then(cx, LEN_ZERO, span, \"length comparison to zero\", |db| {\n                 db.span_suggestion(span,\n-                                   \"consider using `is_empty`\",\n+                                   \"using `is_empty` is more concise:\",\n                                    format!(\"{}{}.is_empty()\", op, snippet(cx, args[0].span, \"_\")));\n             });\n         }"}, {"sha": "8c2712104bd09cea6af9a80c603df072213ccd68", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -509,8 +509,11 @@ fn check_for_loop_range<'a, 'tcx>(\n \n                 // ensure that the indexed variable was declared before the loop, see #601\n                 if let Some(indexed_extent) = indexed_extent {\n-                    let pat_extent = cx.tcx.region_maps.var_scope(pat.id);\n-                    if cx.tcx.region_maps.is_subscope_of(indexed_extent, pat_extent) {\n+                    let parent_id = cx.tcx.hir.get_parent(expr.id);\n+                    let parent_def_id = cx.tcx.hir.local_def_id(parent_id);\n+                    let region_maps = cx.tcx.region_maps(parent_def_id);\n+                    let pat_extent = region_maps.var_scope(pat.id);\n+                    if region_maps.is_subscope_of(indexed_extent, pat_extent) {\n                         return;\n                     }\n                 }\n@@ -872,7 +875,7 @@ impl<'a, 'tcx: 'a> Visitor<'tcx> for UsedVisitor<'a, 'tcx> {\n struct VarVisitor<'a, 'tcx: 'a> {\n     cx: &'a LateContext<'a, 'tcx>, // context reference\n     var: DefId, // var name to look for as index\n-    indexed: HashMap<Name, Option<CodeExtent>>, // indexed variables, the extent is None for global\n+    indexed: HashMap<Name, Option<CodeExtent<'tcx>>>, // indexed variables, the extent is None for global\n     nonindex: bool, // has the var been used otherwise?\n }\n \n@@ -895,7 +898,9 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n                                 let def_id = def.def_id();\n                                 let node_id = self.cx.tcx.hir.as_local_node_id(def_id).expect(\"local/upvar are local nodes\");\n \n-                                let extent = self.cx.tcx.region_maps.var_scope(node_id);\n+                                let parent_id = self.cx.tcx.hir.get_parent(expr.id);\n+                                let parent_def_id = self.cx.tcx.hir.local_def_id(parent_id);\n+                                let extent = self.cx.tcx.region_maps(parent_def_id).var_scope(node_id);\n                                 self.indexed.insert(seqvar.segments[0].name, Some(extent));\n                                 return;  // no need to walk further\n                             }"}, {"sha": "03de9cabd2cd75b79f9eb898b6dfa2f0cb5d78e1", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -335,11 +335,11 @@ impl EarlyLintPass for MiscEarly {\n                                 \"if you mean to use a decimal constant, remove the `0` to remove confusion:\",\n                                 src[1..].to_string(),\n                             );\n-                            db.span_suggestion(\n+                            /*db.span_suggestion(\n                                 lit.span,\n                                 \"if you mean to use an octal constant, use `0o`:\",\n                                 format!(\"0o{}\", &src[1..]),\n-                            );\n+                            ); FIXME: rustc doesn't support multiple suggestions anymore */\n                         });\n                     }\n                 }}"}, {"sha": "8d8dd18eb3ef1000655d8e99595eaa0dbeb58c89", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -86,18 +86,20 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                 .collect()\n         };\n \n+        let fn_def_id = cx.tcx.hir.local_def_id(node_id);\n+\n         // Collect moved variables and spans which will need dereferencings from the function body.\n         let MovedVariablesCtxt { moved_vars, spans_need_deref, .. } = {\n             let mut ctx = MovedVariablesCtxt::new(cx);\n             let infcx = cx.tcx.borrowck_fake_infer_ctxt(body.id());\n+            let region_maps = &cx.tcx.region_maps(fn_def_id);\n             {\n-                let mut v = euv::ExprUseVisitor::new(&mut ctx, &infcx);\n+                let mut v = euv::ExprUseVisitor::new(&mut ctx, region_maps, &infcx);\n                 v.consume_body(body);\n             }\n             ctx\n         };\n \n-        let fn_def_id = cx.tcx.hir.local_def_id(node_id);\n         let param_env = ty::ParameterEnvironment::for_item(cx.tcx, node_id);\n         let fn_sig = cx.tcx.type_of(fn_def_id).fn_sig();\n         let fn_sig = cx.tcx.liberate_late_bound_regions(param_env.free_id_outlive, &fn_sig);\n@@ -146,15 +148,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                     ], {\n                         let slice_ty = format!(\"&[{}]\", snippet(cx, elem_ty.span, \"_\"));\n                         db.span_suggestion(input.span,\n-                                        &format!(\"consider changing the type to `{}`\", slice_ty),\n+                                        \"consider changing the type to\",\n                                         slice_ty);\n                         assert!(deref_span.is_none());\n                         return; // `Vec` and `String` cannot be destructured - no need for `*` suggestion\n                     }}\n \n                     if match_type(cx, ty, &paths::STRING) {\n                         db.span_suggestion(input.span,\n-                                           \"consider changing the type to `&str`\",\n+                                           \"consider changing the type to\",\n                                            \"&str\".to_string());\n                         assert!(deref_span.is_none());\n                         return;\n@@ -287,7 +289,7 @@ impl<'a, 'tcx: 'a> euv::Delegate<'tcx> for MovedVariablesCtxt<'a, 'tcx> {\n         _: NodeId,\n         _: Span,\n         _: mc::cmt<'tcx>,\n-        _: &'tcx ty::Region,\n+        _: ty::Region,\n         _: ty::BorrowKind,\n         _: euv::LoanCause\n     ) {"}, {"sha": "77e251db8a62894bae7a153dba8880d61846a8d8", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 21, "deletions": 82, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,200 +2,139 @@ error: assign operation detected\n  --> $DIR/assign_ops.rs:8:5\n   |\n 8 |     i += 2;\n-  |     ^^^^^^\n+  |     ^^^^^^ help: replace it with `i = i + 2`\n   |\n note: lint level defined here\n  --> $DIR/assign_ops.rs:4:8\n   |\n 4 | #[deny(assign_ops)]\n   |        ^^^^^^^^^^\n-help: replace it with\n-  |     i = i + 2;\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:11:5\n    |\n 11 |     i += 2 + 17;\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i + 2 + 17;\n+   |     ^^^^^^^^^^^ help: replace it with `i = i + 2 + 17`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:14:5\n    |\n 14 |     i -= 6;\n-   |     ^^^^^^\n-   |\n-help: replace it with\n-   |     i = i - 6;\n+   |     ^^^^^^ help: replace it with `i = i - 6`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:17:5\n    |\n 17 |     i -= 2 - 1;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i - (2 - 1);\n+   |     ^^^^^^^^^^ help: replace it with `i = i - (2 - 1)`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:21:5\n    |\n 21 |     i *= 5;\n-   |     ^^^^^^\n-   |\n-help: replace it with\n-   |     i = i * 5;\n+   |     ^^^^^^ help: replace it with `i = i * 5`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:24:5\n    |\n 24 |     i *= 1+5;\n-   |     ^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i * (1+5);\n+   |     ^^^^^^^^ help: replace it with `i = i * (1+5)`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:27:5\n    |\n 27 |     i /= 32;\n-   |     ^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i / 32;\n+   |     ^^^^^^^ help: replace it with `i = i / 32`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:30:5\n    |\n 30 |     i /= 32 | 5;\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i / (32 | 5);\n+   |     ^^^^^^^^^^^ help: replace it with `i = i / (32 | 5)`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:33:5\n    |\n 33 |     i /= 32 / 5;\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i / (32 / 5);\n+   |     ^^^^^^^^^^^ help: replace it with `i = i / (32 / 5)`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:36:5\n    |\n 36 |     i %= 42;\n-   |     ^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i % 42;\n+   |     ^^^^^^^ help: replace it with `i = i % 42`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:39:5\n    |\n 39 |     i >>= i;\n-   |     ^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i >> i;\n+   |     ^^^^^^^ help: replace it with `i = i >> i`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:42:5\n    |\n 42 |     i <<= 9 + 6 - 7;\n-   |     ^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i << (9 + 6 - 7);\n+   |     ^^^^^^^^^^^^^^^ help: replace it with `i = i << (9 + 6 - 7)`\n \n error: assign operation detected\n   --> $DIR/assign_ops.rs:45:5\n    |\n 45 |     i += 1 << 5;\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     i = i + (1 << 5);\n+   |     ^^^^^^^^^^^ help: replace it with `i = i + (1 << 5)`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:55:5\n    |\n 55 |     a = a + 1;\n-   |     ^^^^^^^^^\n+   |     ^^^^^^^^^ help: replace it with `a += 1`\n    |\n note: lint level defined here\n   --> $DIR/assign_ops.rs:52:8\n    |\n 52 | #[deny(assign_op_pattern)]\n    |        ^^^^^^^^^^^^^^^^^\n-help: replace it with\n-   |     a += 1;\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:58:5\n    |\n 58 |     a = 1 + a;\n-   |     ^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a += 1;\n+   |     ^^^^^^^^^ help: replace it with `a += 1`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:61:5\n    |\n 61 |     a = a - 1;\n-   |     ^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a -= 1;\n+   |     ^^^^^^^^^ help: replace it with `a -= 1`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:64:5\n    |\n 64 |     a = a * 99;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a *= 99;\n+   |     ^^^^^^^^^^ help: replace it with `a *= 99`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:67:5\n    |\n 67 |     a = 42 * a;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a *= 42;\n+   |     ^^^^^^^^^^ help: replace it with `a *= 42`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:70:5\n    |\n 70 |     a = a / 2;\n-   |     ^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a /= 2;\n+   |     ^^^^^^^^^ help: replace it with `a /= 2`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:73:5\n    |\n 73 |     a = a % 5;\n-   |     ^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a %= 5;\n+   |     ^^^^^^^^^ help: replace it with `a %= 5`\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops.rs:76:5\n    |\n 76 |     a = a & 1;\n-   |     ^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a &= 1;\n+   |     ^^^^^^^^^ help: replace it with `a &= 1`\n \n error: aborting due to 21 previous errors\n "}, {"sha": "adab959f6eef7d2598501cefb78dd09400c10485", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 8, "deletions": 31, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,78 +2,55 @@ error: variable appears on both sides of an assignment operation\n  --> $DIR/assign_ops2.rs:8:5\n   |\n 8 |     a += a + 1;\n-  |     ^^^^^^^^^^\n+  |     ^^^^^^^^^^ help: replace it with `a += 1`\n   |\n note: lint level defined here\n  --> $DIR/assign_ops2.rs:5:8\n   |\n 5 | #[deny(misrefactored_assign_op)]\n   |        ^^^^^^^^^^^^^^^^^^^^^^^\n-help: replace it with\n-  |     a += 1;\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:11:5\n    |\n 11 |     a += 1 + a;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a += 1;\n+   |     ^^^^^^^^^^ help: replace it with `a += 1`\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:14:5\n    |\n 14 |     a -= a - 1;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a -= 1;\n+   |     ^^^^^^^^^^ help: replace it with `a -= 1`\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:17:5\n    |\n 17 |     a *= a * 99;\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a *= 99;\n+   |     ^^^^^^^^^^^ help: replace it with `a *= 99`\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:20:5\n    |\n 20 |     a *= 42 * a;\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a *= 42;\n+   |     ^^^^^^^^^^^ help: replace it with `a *= 42`\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:23:5\n    |\n 23 |     a /= a / 2;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a /= 2;\n+   |     ^^^^^^^^^^ help: replace it with `a /= 2`\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:26:5\n    |\n 26 |     a %= a % 5;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a %= 5;\n+   |     ^^^^^^^^^^ help: replace it with `a %= 5`\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:29:5\n    |\n 29 |     a &= a & 1;\n-   |     ^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     a &= 1;\n+   |     ^^^^^^^^^^ help: replace it with `a &= 1`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "403ad7efe8df37217ee56efe01e25b1f09b70381", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -54,15 +54,13 @@ warning: this boolean expression can be simplified\n   --> $DIR/block_in_if_condition.rs:70:8\n    |\n 70 |     if true && x == 3 {\n-   |        ^^^^^^^^^^^^^^\n+   |        ^^^^^^^^^^^^^^ help: try `x == 3`\n    |\n note: lint level defined here\n   --> $DIR/block_in_if_condition.rs:7:9\n    |\n 7  | #![warn(nonminimal_bool)]\n    |         ^^^^^^^^^^^^^^^\n-help: try\n-   |     if x == 3 {\n \n error: aborting due to 4 previous errors\n "}, {"sha": "341f073443096a916ae191050cbbb5e8b53fc74b", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,42 +2,31 @@ error: equality checks against true are unnecessary\n  --> $DIR/bool_comparison.rs:7:8\n   |\n 7 |     if x == true { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^\n+  |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n   |\n note: lint level defined here\n  --> $DIR/bool_comparison.rs:4:8\n   |\n 4 | #[deny(bool_comparison)]\n   |        ^^^^^^^^^^^^^^^\n-help: try simplifying it as shown:\n-  |     if x { \"yes\" } else { \"no\" };\n \n error: equality checks against false can be replaced by a negation\n   --> $DIR/bool_comparison.rs:11:8\n    |\n 11 |     if x == false { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^^\n-   |\n-help: try simplifying it as shown:\n-   |     if !x { \"yes\" } else { \"no\" };\n+   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n   --> $DIR/bool_comparison.rs:15:8\n    |\n 15 |     if true == x { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^\n-   |\n-help: try simplifying it as shown:\n-   |     if x { \"yes\" } else { \"no\" };\n+   |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n   --> $DIR/bool_comparison.rs:19:8\n    |\n 19 |     if false == x { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^^\n-   |\n-help: try simplifying it as shown:\n-   |     if !x { \"yes\" } else { \"no\" };\n+   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "dd8190d1011dbeae2b1c375053af2fcbe378cbb8", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 13, "deletions": 52, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,7 +2,7 @@ error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:12:13\n    |\n 12 |     let _ = a && b || a;\n-   |             ^^^^^^^^^^^\n+   |             ^^^^^^^^^^^ help: it would look like the following `a`\n    |\n note: lint level defined here\n   --> $DIR/booleans.rs:3:26\n@@ -14,147 +14,108 @@ help: this expression can be optimized out by applying boolean operations to the\n    |\n 12 |     let _ = a && b || a;\n    |                  ^\n-help: it would look like the following\n-   |     let _ = a;\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:17:13\n    |\n 17 |     let _ = !true;\n-   |             ^^^^^\n+   |             ^^^^^ help: try `false`\n    |\n note: lint level defined here\n   --> $DIR/booleans.rs:3:9\n    |\n 3  | #![deny(nonminimal_bool, logic_bug)]\n    |         ^^^^^^^^^^^^^^^\n-help: try\n-   |     let _ = false;\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:20:13\n    |\n 20 |     let _ = !false;\n-   |             ^^^^^^\n-   |\n-help: try\n-   |     let _ = true;\n+   |             ^^^^^^ help: try `true`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:23:13\n    |\n 23 |     let _ = !!a;\n-   |             ^^^\n-   |\n-help: try\n-   |     let _ = a;\n+   |             ^^^ help: try `a`\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:27:13\n    |\n 27 |     let _ = false && a;\n-   |             ^^^^^^^^^^\n+   |             ^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:27:22\n    |\n 27 |     let _ = false && a;\n    |                      ^\n-help: it would look like the following\n-   |     let _ = false;\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:32:13\n    |\n 32 |     let _ = false || a;\n-   |             ^^^^^^^^^^\n-   |\n-help: try\n-   |     let _ = a;\n+   |             ^^^^^^^^^^ help: try `a`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:43:13\n    |\n 43 |     let _ = !(!a && b);\n-   |             ^^^^^^^^^^\n-   |\n-help: try\n-   |     let _ = !b || a;\n+   |             ^^^^^^^^^^ help: try `!b || a`\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:55:13\n    |\n 55 |     let _ = a == b && a != b;\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:55:13\n    |\n 55 |     let _ = a == b && a != b;\n    |             ^^^^^^\n-help: it would look like the following\n-   |     let _ = false;\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:60:13\n    |\n 60 |     let _ = a == b && c == 5 && a == b;\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _ = a == b && c == 5;\n-help: try\n-   |     let _ = !(c != 5 || a != b);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `a == b && c == 5`\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:66:13\n    |\n 66 |     let _ = a == b && c == 5 && b == a;\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _ = a == b && c == 5;\n-help: try\n-   |     let _ = !(c != 5 || a != b);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `a == b && c == 5`\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:72:13\n    |\n 72 |     let _ = a < b && a >= b;\n-   |             ^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:72:13\n    |\n 72 |     let _ = a < b && a >= b;\n    |             ^^^^^\n-help: it would look like the following\n-   |     let _ = false;\n \n error: this boolean expression contains a logic bug\n   --> $DIR/booleans.rs:77:13\n    |\n 77 |     let _ = a > b && a <= b;\n-   |             ^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n   --> $DIR/booleans.rs:77:13\n    |\n 77 |     let _ = a > b && a <= b;\n    |             ^^^^^\n-help: it would look like the following\n-   |     let _ = false;\n \n error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:84:13\n    |\n 84 |     let _ = a != b || !(a != b || c == d);\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _ = c != d || a != b;\n-help: try\n-   |     let _ = !(a == b && c == d);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `c != d || a != b`\n \n error: aborting due to 13 previous errors\n "}, {"sha": "84edc47a714e7f9cd7ad7cbd55131eeb832b29ff", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 7, "deletions": 27, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,69 +2,49 @@ error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:13:5\n    |\n 13 |     if !m.contains_key(&k) { m.insert(k, v); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k).or_insert(v)`\n    |\n note: lint level defined here\n   --> $DIR/entry.rs:5:9\n    |\n 5  | #![deny(map_entry)]\n    |         ^^^^^^^^^\n-help: consider using\n-   |     m.entry(k).or_insert(v)\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:20:5\n    |\n 20 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider using\n-   |     m.entry(k)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:27:5\n    |\n 27 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider using\n-   |     m.entry(k);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:34:5\n    |\n 34 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider using\n-   |     m.entry(k);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:41:5\n    |\n 41 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider using\n-   |     m.entry(k);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:48:5\n    |\n 48 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider using\n-   |     m.entry(k);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> $DIR/entry.rs:55:5\n    |\n 55 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider using\n-   |     m.entry(k);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: aborting due to 7 previous errors\n "}, {"sha": "ab51797fe82cf14bb11df049d8766268c5ad8f0e", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,60 +2,43 @@ error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:41:5\n    |\n 41 |     true && true;\n-   |     ^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^ help: try `true`\n    |\n note: lint level defined here\n   --> $DIR/eq_op.rs:7:8\n    |\n 7  | #[deny(nonminimal_bool)]\n    |        ^^^^^^^^^^^^^^^\n-help: try\n-   |     true;\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:43:5\n    |\n 43 |     true || true;\n-   |     ^^^^^^^^^^^^\n-   |\n-help: try\n-   |     true;\n+   |     ^^^^^^^^^^^^ help: try `true`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:49:5\n    |\n 49 |     a == b && b == a;\n-   |     ^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     a == b;\n+   |     ^^^^^^^^^^^^^^^^ help: try `a == b`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:51:5\n    |\n 51 |     a != b && b != a;\n-   |     ^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     a != b;\n+   |     ^^^^^^^^^^^^^^^^ help: try `a != b`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:53:5\n    |\n 53 |     a < b && b > a;\n-   |     ^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     a < b;\n+   |     ^^^^^^^^^^^^^^ help: try `a < b`\n \n error: this boolean expression can be simplified\n   --> $DIR/eq_op.rs:55:5\n    |\n 55 |     a <= b && b >= a;\n-   |     ^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     a <= b;\n+   |     ^^^^^^^^^^^^^^^^ help: try `a <= b`\n \n error: equal expressions as operands to `==`\n   --> $DIR/eq_op.rs:10:5\n@@ -223,11 +206,11 @@ warning: taken reference of right operand\n   --> $DIR/eq_op.rs:97:13\n    |\n 97 |     let z = x & &y;\n-   |             ^^^^^^\n+   |             ^^^^--\n+   |                 |\n+   |                 help: use the right value directly `y`\n    |\n    = note: #[warn(op_ref)] on by default\n-help: use the right value directly\n-   |     let z = y & &y;\n \n error: aborting due to 32 previous errors\n "}, {"sha": "355db4deae45b4f249bf9fc8e0989350ca472358", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,33 +2,25 @@ error: redundant closure found\n  --> $DIR/eta.rs:7:27\n   |\n 7 |     let a = Some(1u8).map(|a| foo(a));\n-  |                           ^^^^^^^^^^\n+  |                           ^^^^^^^^^^ help: remove closure as shown: `foo`\n   |\n note: lint level defined here\n  --> $DIR/eta.rs:4:9\n   |\n 4 | #![deny(redundant_closure)]\n   |         ^^^^^^^^^^^^^^^^^\n-help: remove closure as shown:\n-  |     let a = Some(1u8).map(foo);\n \n error: redundant closure found\n   --> $DIR/eta.rs:11:10\n    |\n 11 |     meta(|a| foo(a));\n-   |          ^^^^^^^^^^\n-   |\n-help: remove closure as shown:\n-   |     meta(foo);\n+   |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n \n error: redundant closure found\n   --> $DIR/eta.rs:15:27\n    |\n 15 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n-   |                           ^^^^^^^^^^^^^^^^^\n-   |\n-help: remove closure as shown:\n-   |     let c = Some(1u8).map({1+2; foo});\n+   |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n \n warning: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> $DIR/eta.rs:20:21\n@@ -42,10 +34,7 @@ error: redundant closure found\n   --> $DIR/eta.rs:28:27\n    |\n 28 |     let e = Some(1u8).map(|a| generic(a));\n-   |                           ^^^^^^^^^^^^^^\n-   |\n-help: remove closure as shown:\n-   |     let e = Some(1u8).map(generic);\n+   |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "1eff9cdecc47d2889f0fb470e2c8fac153c5e5e3", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,15 +2,13 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:43:5\n    |\n 43 |     ONE == 1f32;\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ help: consider comparing them within some error `(ONE - 1f32).abs() < error`\n    |\n note: lint level defined here\n   --> $DIR/float_cmp.rs:4:9\n    |\n 4  | #![deny(float_cmp)]\n    |         ^^^^^^^^^\n-help: consider comparing them within some error\n-   |     (ONE - 1f32).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:43:5\n    |\n@@ -21,10 +19,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:47:5\n    |\n 47 |     ONE == 1.0 + 0.0;\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE - (1.0 + 0.0)).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (ONE - (1.0 + 0.0)).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:47:5\n    |\n@@ -35,10 +31,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:52:5\n    |\n 52 |     ONE + ONE == ZERO + ONE + ONE;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE + ONE - (ZERO + ONE + ONE)).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (ONE + ONE - (ZERO + ONE + ONE)).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:52:5\n    |\n@@ -49,10 +43,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:57:5\n    |\n 57 |     ONE != 2.0;\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ help: consider comparing them within some error `(ONE - 2.0).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (ONE - 2.0).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:57:5\n    |\n@@ -63,10 +55,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:62:5\n    |\n 62 |     twice(ONE) != ONE;\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(ONE) - ONE).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (twice(ONE) - ONE).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:62:5\n    |\n@@ -77,10 +67,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:66:5\n    |\n 66 |     ONE as f64 != 2.0;\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE as f64 - 2.0).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (ONE as f64 - 2.0).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:66:5\n    |\n@@ -91,10 +79,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:74:5\n    |\n 74 |     x == 1.0;\n-   |     ^^^^^^^^\n+   |     ^^^^^^^^ help: consider comparing them within some error `(x - 1.0).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (x - 1.0).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:74:5\n    |\n@@ -105,10 +91,8 @@ error: strict comparison of f32 or f64\n   --> $DIR/float_cmp.rs:80:5\n    |\n 80 |     twice(x) != twice(ONE as f64);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(x) - twice(ONE as f64)).abs() < error`\n    |\n-help: consider comparing them within some error\n-   |     (twice(x) - twice(ONE as f64)).abs() < error;\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n   --> $DIR/float_cmp.rs:80:5\n    |"}, {"sha": "ca93e4a38c6ad8bbc3233516bf6718c7b51e5ff5", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 13, "deletions": 50, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -365,128 +365,91 @@ error: it is more idiomatic to loop over references to containers instead of usi\n    --> $DIR/for_loop.rs:289:15\n     |\n 289 |     for _v in vec.iter() { }\n-    |               ^^^^^^^^^^\n+    |               ^^^^^^^^^^ help: to write this more concisely, try `&vec`\n     |\n note: lint level defined here\n    --> $DIR/for_loop.rs:90:29\n     |\n 90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                             ^^^^^^^^^^^^^^^^^^\n-help: to write this more concisely, try\n-    |     for _v in &vec { }\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:294:15\n     |\n 294 |     for _v in vec.iter_mut() { }\n-    |               ^^^^^^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &mut vec { }\n+    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&mut vec`\n \n error: it is more idiomatic to loop over containers instead of using explicit iteration methods`\n    --> $DIR/for_loop.rs:300:15\n     |\n 300 |     for _v in out_vec.into_iter() { }\n-    |               ^^^^^^^^^^^^^^^^^^^\n+    |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `out_vec`\n     |\n note: lint level defined here\n    --> $DIR/for_loop.rs:90:49\n     |\n 90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n-help: to write this more concisely, try\n-    |     for _v in out_vec { }\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:306:15\n     |\n 306 |     for _v in array.into_iter() {}\n-    |               ^^^^^^^^^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &array {}\n+    |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&array`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:311:15\n     |\n 311 |     for _v in [1, 2, 3].iter() { }\n-    |               ^^^^^^^^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &[1, 2, 3] { }\n+    |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&[1, 2, 3]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:318:15\n     |\n 318 |     for _v in [0; 32].iter() {}\n-    |               ^^^^^^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &[0; 32] {}\n+    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&[0; 32]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:326:15\n     |\n 326 |     for _v in ll.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &ll { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&ll`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:332:15\n     |\n 332 |     for _v in vd.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &vd { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&vd`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:338:15\n     |\n 338 |     for _v in bh.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &bh { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&bh`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:344:15\n     |\n 344 |     for _v in hm.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &hm { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&hm`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:350:15\n     |\n 350 |     for _v in bt.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &bt { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&bt`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:356:15\n     |\n 356 |     for _v in hs.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &hs { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&hs`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:362:15\n     |\n 362 |     for _v in bs.iter() { }\n-    |               ^^^^^^^^^\n-    |\n-help: to write this more concisely, try\n-    |     for _v in &bs { }\n+    |               ^^^^^^^^^ help: to write this more concisely, try `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n    --> $DIR/for_loop.rs:368:5"}, {"sha": "198a19740652e4a3d02714612125791fa400a5a4", "filename": "tests/ui/if_let_redundant_pattern_matching.stderr", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,46 +2,38 @@ error: redundant pattern matching, consider using `is_ok()`\n  --> $DIR/if_let_redundant_pattern_matching.rs:9:12\n   |\n 9 |     if let Ok(_) = Ok::<i32, i32>(42) {}\n-  |            ^^^^^\n+  |     -------^^^^^--------------------- help: try this `if Ok::<i32, i32>(42).is_ok()`\n   |\n   = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]\n note: lint level defined here\n  --> $DIR/if_let_redundant_pattern_matching.rs:4:9\n   |\n 4 | #![deny(clippy)]\n   |         ^^^^^^\n-help: try this\n-  |     if Ok::<i32, i32>(42).is_ok() {}\n \n error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:14:12\n    |\n 14 |     if let Err(_) = Err::<i32, i32>(42) {\n-   |            ^^^^^^\n+   |     -------^^^^^^---------------------- help: try this `if Err::<i32, i32>(42).is_err()`\n    |\n    = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]\n-help: try this\n-   |     if Err::<i32, i32>(42).is_err() {\n \n error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:20:12\n    |\n 20 |     if let None = None::<()> {\n-   |            ^^^^\n+   |     -------^^^^------------- help: try this `if None::<()>.is_none()`\n    |\n    = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]\n-help: try this\n-   |     if None::<()>.is_none() {\n \n error: redundant pattern matching, consider using `is_some()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:26:12\n    |\n 26 |     if let Some(_) = Some(42) {\n-   |            ^^^^^^^\n+   |     -------^^^^^^^----------- help: try this `if Some(42).is_some()`\n    |\n    = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]\n-help: try this\n-   |     if Some(42).is_some() {\n \n error: aborting due to 4 previous errors\n "}, {"sha": "27fa35e6c036bf7cf98e739346b655d394eba8d0", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 7, "deletions": 27, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -50,69 +50,49 @@ error: length comparison to zero\n    --> $DIR/len_zero.rs:130:8\n     |\n 130 |     if x.len() == 0 {\n-    |        ^^^^^^^^^^^^\n+    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `x.is_empty()`\n     |\n note: lint level defined here\n    --> $DIR/len_zero.rs:4:31\n     |\n 4   | #![deny(len_without_is_empty, len_zero)]\n     |                               ^^^^^^^^\n-help: consider using `is_empty`\n-    |     if x.is_empty() {\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:137:8\n     |\n 137 |     if \"\".len() == 0 {\n-    |        ^^^^^^^^^^^^^\n-    |\n-help: consider using `is_empty`\n-    |     if \"\".is_empty() {\n+    |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise: `\"\".is_empty()`\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:154:8\n     |\n 154 |     if has_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: consider using `is_empty`\n-    |     if has_is_empty.is_empty() {\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:160:8\n     |\n 160 |     if has_is_empty.len() != 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: consider using `is_empty`\n-    |     if !has_is_empty.is_empty() {\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:166:8\n     |\n 166 |     if has_is_empty.len() > 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: consider using `is_empty`\n-    |     if !has_is_empty.is_empty() {\n+    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:175:8\n     |\n 175 |     if with_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: consider using `is_empty`\n-    |     if with_is_empty.is_empty() {\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:190:8\n     |\n 190 |     if b.len() != 0 {\n-    |        ^^^^^^^^^^^^\n-    |\n-help: consider using `is_empty`\n-    |     if !b.is_empty() {\n+    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `!b.is_empty()`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "c080c54d05719f9c6dced7bbb15b3088bf1d264b", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -8,15 +8,13 @@ error: `if _ { .. } else { .. }` is an expression\n 61 | |     if f() {\n 62 | |         foo = 42;\n 63 | |     }\n-   | |_____^\n+   | |_____^ help: it is more idiomatic to write `let <mut> foo = if f() { 42 } else { 0 };`\n    |\n note: lint level defined here\n   --> $DIR/let_if_seq.rs:5:9\n    |\n 5  | #![deny(useless_let_if_seq)]\n    |         ^^^^^^^^^^^^^^^^^^\n-help: it is more idiomatic to write\n-   |     let <mut> foo = if f() { 42 } else { 0 };\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n@@ -29,10 +27,8 @@ error: `if _ { .. } else { .. }` is an expression\n ...  |\n 74 | |         f();\n 75 | |     }\n-   | |_____^\n+   | |_____^ help: it is more idiomatic to write `let <mut> bar = if f() { ..; 42 } else { ..; 0 };`\n    |\n-help: it is more idiomatic to write\n-   |     let <mut> bar = if f() { ..; 42 } else { ..; 0 };\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n@@ -45,10 +41,7 @@ error: `if _ { .. } else { .. }` is an expression\n ...  |\n 85 | |         quz = 0;\n 86 | |     }\n-   | |_____^\n-   |\n-help: it is more idiomatic to write\n-   |     let quz = if f() { 42 } else { 0 };\n+   | |_____^ help: it is more idiomatic to write `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n    --> $DIR/let_if_seq.rs:111:5\n@@ -60,10 +53,8 @@ error: `if _ { .. } else { .. }` is an expression\n 115 | |     if f() {\n 116 | |         baz = 42;\n 117 | |     }\n-    | |_____^\n+    | |_____^ help: it is more idiomatic to write `let <mut> baz = if f() { 42 } else { 0 };`\n     |\n-help: it is more idiomatic to write\n-    |     let <mut> baz = if f() { 42 } else { 0 };\n     = note: you might not need `mut` at all\n \n error: aborting due to 4 previous errors"}, {"sha": "e87fe887bf4d4151639f5aca2cbe801ee292be09", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -71,8 +71,6 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^^^^^^\n help: if you mean to use a decimal constant, remove the `0` to remove confusion:\n    |     let fail8 = 123;\n-help: if you mean to use an octal constant, use `0o`:\n-   |     let fail8 = 0o123;\n \n error: aborting due to 9 previous errors\n "}, {"sha": "47c323cbfeb1ca4e55ccfb306fcbecbd41a8d85d", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 14, "deletions": 42, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -8,15 +8,13 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 30 | |         ExprNode::ExprAddrOf => Some(&NODE),\n 31 | |         _ => { let x = 5; None },\n 32 | |     }\n-   | |_____^\n+   | |_____^ help: try this `if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }`\n    |\n note: lint level defined here\n   --> $DIR/matches.rs:7:9\n    |\n 7  | #![deny(single_match_else)]\n    |         ^^^^^^^^^^^^^^^^^\n-help: try this\n-   |     if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:38:5\n@@ -28,16 +26,14 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 42 | |         Some(y) => { println!(\"{:?}\", y); }\n 43 | |         _ => ()\n 44 | |     };\n-   | |_____^\n+   | |_____^ help: try this `if let Some(y) = x { println!(\"{:?}\", y); }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n note: lint level defined here\n   --> $DIR/matches.rs:5:9\n    |\n 5  | #![deny(clippy)]\n    |         ^^^^^^\n-help: try this\n-   |     if let Some(y) = x { println!(\"{:?}\", y); };\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:47:5\n@@ -49,11 +45,9 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 51 | |         (2...3, 7...9) => dummy(),\n 52 | |         _ => {}\n 53 | |     };\n-   | |_____^\n+   | |_____^ help: try this `if let (2...3, 7...9) = z { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n-help: try this\n-   |     if let (2...3, 7...9) = z { dummy() };\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:72:5\n@@ -65,11 +59,9 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 76 | |         Some(y) => dummy(),\n 77 | |         None => ()\n 78 | |     };\n-   | |_____^\n+   | |_____^ help: try this `if let Some(y) = x { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n-help: try this\n-   |     if let Some(y) = x { dummy() };\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:80:5\n@@ -81,11 +73,9 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 84 | |         Ok(y) => dummy(),\n 85 | |         Err(..) => ()\n 86 | |     };\n-   | |_____^\n+   | |_____^ help: try this `if let Ok(y) = y { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n-help: try this\n-   |     if let Ok(y) = y { dummy() };\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:90:5\n@@ -97,11 +87,9 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n 94 | |         Cow::Borrowed(..) => dummy(),\n 95 | |         Cow::Owned(..) => (),\n 96 | |     };\n-   | |_____^\n+   | |_____^ help: try this `if let Cow::Borrowed(..) = c { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n-help: try this\n-   |     if let Cow::Borrowed(..) = c { dummy() };\n \n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:114:5\n@@ -113,16 +101,14 @@ error: you seem to be trying to match on a boolean expression\n 118 | |         true => 0,\n 119 | |         false => 42,\n 120 | |     };\n-    | |_____^\n+    | |_____^ help: consider using an if/else expression `if test { 0 } else { 42 }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/matches.rs:5:9\n     |\n 5   | #![deny(clippy)]\n     |         ^^^^^^\n-help: consider using an if/else expression\n-    |     if test { 0 } else { 42 };\n \n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:123:5\n@@ -134,11 +120,9 @@ error: you seem to be trying to match on a boolean expression\n 127 | |         true => 1,\n 128 | |         false => 0,\n 129 | |     };\n-    | |_____^\n+    | |_____^ help: consider using an if/else expression `if option == 1 { 1 } else { 0 }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n-help: consider using an if/else expression\n-    |     if option == 1 { 1 } else { 0 };\n \n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:131:5\n@@ -150,11 +134,9 @@ error: you seem to be trying to match on a boolean expression\n 135 | |         true => (),\n 136 | |         false => { println!(\"Noooo!\"); }\n 137 | |     };\n-    | |_____^\n+    | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n-help: consider using an if/else expression\n-    |     if !test { println!(\"Noooo!\"); };\n \n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:139:5\n@@ -166,11 +148,9 @@ error: you seem to be trying to match on a boolean expression\n 143 | |         false => { println!(\"Noooo!\"); }\n 144 | |         _ => (),\n 145 | |     };\n-    | |_____^\n+    | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n-help: consider using an if/else expression\n-    |     if !test { println!(\"Noooo!\"); };\n \n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:147:5\n@@ -182,11 +162,9 @@ error: you seem to be trying to match on a boolean expression\n ...   |\n 153 | |         _ => (),\n 154 | |     };\n-    | |_____^\n+    | |_____^ help: consider using an if/else expression `if !(test && test) { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n-help: consider using an if/else expression\n-    |     if !(test && test) { println!(\"Noooo!\"); };\n \n error: equal expressions as operands to `&&`\n    --> $DIR/matches.rs:147:11\n@@ -211,11 +189,9 @@ error: you seem to be trying to match on a boolean expression\n 160 | |         false => { println!(\"Noooo!\"); }\n 161 | |         true => { println!(\"Yes!\"); }\n 162 | |     };\n-    | |_____^\n+    | |_____^ help: consider using an if/else expression `if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n-help: consider using an if/else expression\n-    |     if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); };\n \n error: you don't need to add `&` to all patterns\n    --> $DIR/matches.rs:175:9\n@@ -264,11 +240,9 @@ error: you don't need to add `&` to both the expression and the patterns\n 201 | |         &Some(v) => println!(\"{:?}\", v),\n 202 | |         &None => println!(\"none\"),\n 203 | |     }\n-    | |_____^\n+    | |_____^ help: try `match w { .. }`\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n-help: try\n-    |     match w { .. }\n \n error: you don't need to add `&` to all patterns\n    --> $DIR/matches.rs:211:5\n@@ -294,11 +268,9 @@ error: you don't need to add `&` to both the expression and the patterns\n 222 | |\n 223 | |         println!(\"none\");\n 224 | |     }\n-    | |_____^\n+    | |_____^ help: try `if let .. = b { .. }`\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n-help: try\n-    |     if let .. = b { .. }\n \n error: some ranges overlap\n    --> $DIR/matches.rs:231:9"}, {"sha": "da8d300c0588522272444791817b4d92dc6ad083", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 49, "deletions": 147, "changes": 196, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -241,126 +241,102 @@ error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:278:5\n     |\n 278 |     with_constructor.unwrap_or(make());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_constructor.unwrap_or_else(make)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: try this\n-    |     with_constructor.unwrap_or_else(make);\n \n error: use of `unwrap_or` followed by a call to `new`\n    --> $DIR/methods.rs:284:5\n     |\n 284 |     with_new.unwrap_or(Vec::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_new.unwrap_or_default()`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_new.unwrap_or_default();\n \n error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:290:5\n     |\n 290 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_const_args.unwrap_or_else(|| Vec::with_capacity(12))`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_const_args.unwrap_or_else(|| Vec::with_capacity(12));\n \n error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:296:5\n     |\n 296 |     with_err.unwrap_or(make());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_err.unwrap_or_else(|_| make())`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_err.unwrap_or_else(|_| make());\n \n error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:302:5\n     |\n 302 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_err_args.unwrap_or_else(|_| Vec::with_capacity(12))`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_err_args.unwrap_or_else(|_| Vec::with_capacity(12));\n \n error: use of `unwrap_or` followed by a call to `default`\n    --> $DIR/methods.rs:308:5\n     |\n 308 |     with_default_trait.unwrap_or(Default::default());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_default_trait.unwrap_or_default()`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_default_trait.unwrap_or_default();\n \n error: use of `unwrap_or` followed by a call to `default`\n    --> $DIR/methods.rs:314:5\n     |\n 314 |     with_default_type.unwrap_or(u64::default());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_default_type.unwrap_or_default()`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_default_type.unwrap_or_default();\n \n error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:320:5\n     |\n 320 |     with_vec.unwrap_or(vec![]);\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ))`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ));\n \n error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:326:5\n     |\n 326 |     without_default.unwrap_or(Foo::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `without_default.unwrap_or_else(Foo::new)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     without_default.unwrap_or_else(Foo::new);\n \n error: use of `or_insert` followed by a function call\n    --> $DIR/methods.rs:332:5\n     |\n 332 |     map.entry(42).or_insert(String::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `map.entry(42).or_insert_with(String::new)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     map.entry(42).or_insert_with(String::new);\n \n error: use of `or_insert` followed by a function call\n    --> $DIR/methods.rs:338:5\n     |\n 338 |     btree.entry(42).or_insert(String::new());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `btree.entry(42).or_insert_with(String::new)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     btree.entry(42).or_insert_with(String::new);\n \n error: use of `unwrap_or` followed by a function call\n    --> $DIR/methods.rs:344:13\n     |\n 344 |     let _ = stringy.unwrap_or(\"\".to_owned());\n-    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `stringy.unwrap_or_else(|| \"\".to_owned())`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n-help: try this\n-    |     let _ = stringy.unwrap_or_else(|| \"\".to_owned());\n \n error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n    --> $DIR/methods.rs:358:23\n@@ -464,106 +440,86 @@ error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more co\n    --> $DIR/methods.rs:429:17\n     |\n 429 |         let _ = boxed_slice.get(1).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&boxed_slice[1]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: try this\n-    |         let _ = &boxed_slice[1];\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:433:17\n     |\n 433 |         let _ = some_slice.get(0).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_slice[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         let _ = &some_slice[0];\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:437:17\n     |\n 437 |         let _ = some_vec.get(0).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_vec[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         let _ = &some_vec[0];\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:441:17\n     |\n 441 |         let _ = some_vecdeque.get(0).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_vecdeque[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         let _ = &some_vecdeque[0];\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:445:17\n     |\n 445 |         let _ = some_hashmap.get(&1).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_hashmap[&1]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         let _ = &some_hashmap[&1];\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:449:17\n     |\n 449 |         let _ = some_btreemap.get(&1).unwrap();\n-    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_btreemap[&1]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         let _ = &some_btreemap[&1];\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:458:10\n     |\n 458 |         *boxed_slice.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut boxed_slice[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         *&mut boxed_slice[0] = 1;\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:462:10\n     |\n 462 |         *some_slice.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_slice[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         *&mut some_slice[0] = 1;\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:466:10\n     |\n 466 |         *some_vec.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_vec[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         *&mut some_vec[0] = 1;\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n    --> $DIR/methods.rs:470:10\n     |\n 470 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n-    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_vecdeque[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n-help: try this\n-    |         *&mut some_vecdeque[0] = 1;\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n    --> $DIR/methods.rs:488:13\n@@ -640,296 +596,242 @@ error: you should use the `starts_with` method\n    --> $DIR/methods.rs:517:5\n     |\n 517 |     \"\".chars().next() == Some(' ');\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this `\"\".starts_with(' ')`\n     |\n     = note: #[deny(chars_next_cmp)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: like this\n-    |     \"\".starts_with(' ');\n \n error: you should use the `starts_with` method\n    --> $DIR/methods.rs:522:5\n     |\n 522 |     Some(' ') != \"\".chars().next();\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this `!\"\".starts_with(' ')`\n     |\n     = note: #[deny(chars_next_cmp)] implied by #[deny(clippy)]\n-help: like this\n-    |     !\"\".starts_with(' ');\n \n error: calling `.extend(_.chars())`\n    --> $DIR/methods.rs:534:5\n     |\n 534 |     s.extend(abc.chars());\n-    |     ^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(abc)`\n     |\n     = note: #[deny(string_extend_chars)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: try this\n-    |     s.push_str(abc);\n \n error: calling `.extend(_.chars())`\n    --> $DIR/methods.rs:540:5\n     |\n 540 |     s.extend(\"abc\".chars());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(\"abc\")`\n     |\n     = note: #[deny(string_extend_chars)] implied by #[deny(clippy)]\n-help: try this\n-    |     s.push_str(\"abc\");\n \n error: calling `.extend(_.chars())`\n    --> $DIR/methods.rs:546:5\n     |\n 546 |     s.extend(def.chars());\n-    |     ^^^^^^^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(&def)`\n     |\n     = note: #[deny(string_extend_chars)] implied by #[deny(clippy)]\n-help: try this\n-    |     s.push_str(&def);\n \n error: using `clone` on a `Copy` type\n    --> $DIR/methods.rs:560:5\n     |\n 560 |     42.clone();\n-    |     ^^^^^^^^^^\n+    |     ^^^^^^^^^^ help: try removing the `clone` call `42`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: try removing the `clone` call\n-    |     42;\n \n error: using `clone` on a `Copy` type\n    --> $DIR/methods.rs:565:5\n     |\n 565 |     (&42).clone();\n-    |     ^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^ help: try dereferencing it `*(&42)`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n-help: try dereferencing it\n-    |     *(&42);\n \n error: using `clone` on a `Copy` type\n    --> $DIR/methods.rs:571:5\n     |\n 571 |     t.clone();\n-    |     ^^^^^^^^^\n+    |     ^^^^^^^^^ help: try removing the `clone` call `t`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n-help: try removing the `clone` call\n-    |     t;\n \n error: using `clone` on a `Copy` type\n    --> $DIR/methods.rs:574:5\n     |\n 574 |     Some(t).clone();\n-    |     ^^^^^^^^^^^^^^^\n+    |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call `Some(t)`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n-help: try removing the `clone` call\n-    |     Some(t);\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n    --> $DIR/methods.rs:582:22\n     |\n 582 |     let z: &Vec<_> = y.clone();\n-    |                      ^^^^^^^^^\n+    |                      ^^^^^^^^^ help: try dereferencing it `(*y).clone()`\n     |\n     = note: #[deny(clone_double_ref)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: try dereferencing it\n-    |     let z: &Vec<_> = (*y).clone();\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:590:13\n     |\n 590 |     x.split(\"x\");\n-    |             ^^^\n+    |     --------^^^- help: try using a char instead: `x.split('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n note: lint level defined here\n    --> $DIR/methods.rs:5:9\n     |\n 5   | #![deny(clippy, clippy_pedantic)]\n     |         ^^^^^^\n-help: try using a char instead:\n-    |     x.split('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:614:16\n     |\n 614 |     x.contains(\"x\");\n-    |                ^^^\n+    |     -----------^^^- help: try using a char instead: `x.contains('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.contains('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:618:19\n     |\n 618 |     x.starts_with(\"x\");\n-    |                   ^^^\n+    |     --------------^^^- help: try using a char instead: `x.starts_with('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.starts_with('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:622:17\n     |\n 622 |     x.ends_with(\"x\");\n-    |                 ^^^\n+    |     ------------^^^- help: try using a char instead: `x.ends_with('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.ends_with('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:626:12\n     |\n 626 |     x.find(\"x\");\n-    |            ^^^\n+    |     -------^^^- help: try using a char instead: `x.find('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.find('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:630:13\n     |\n 630 |     x.rfind(\"x\");\n-    |             ^^^\n+    |     --------^^^- help: try using a char instead: `x.rfind('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.rfind('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:634:14\n     |\n 634 |     x.rsplit(\"x\");\n-    |              ^^^\n+    |     ---------^^^- help: try using a char instead: `x.rsplit('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.rsplit('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:638:24\n     |\n 638 |     x.split_terminator(\"x\");\n-    |                        ^^^\n+    |     -------------------^^^- help: try using a char instead: `x.split_terminator('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.split_terminator('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:642:25\n     |\n 642 |     x.rsplit_terminator(\"x\");\n-    |                         ^^^\n+    |     --------------------^^^- help: try using a char instead: `x.rsplit_terminator('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.rsplit_terminator('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:646:17\n     |\n 646 |     x.splitn(0, \"x\");\n-    |                 ^^^\n+    |     ------------^^^- help: try using a char instead: `x.splitn(0, 'x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.splitn(0, 'x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:650:18\n     |\n 650 |     x.rsplitn(0, \"x\");\n-    |                  ^^^\n+    |     -------------^^^- help: try using a char instead: `x.rsplitn(0, 'x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.rsplitn(0, 'x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:654:15\n     |\n 654 |     x.matches(\"x\");\n-    |               ^^^\n+    |     ----------^^^- help: try using a char instead: `x.matches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.matches('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:658:16\n     |\n 658 |     x.rmatches(\"x\");\n-    |                ^^^\n+    |     -----------^^^- help: try using a char instead: `x.rmatches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.rmatches('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:662:21\n     |\n 662 |     x.match_indices(\"x\");\n-    |                     ^^^\n+    |     ----------------^^^- help: try using a char instead: `x.match_indices('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.match_indices('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:666:22\n     |\n 666 |     x.rmatch_indices(\"x\");\n-    |                      ^^^\n+    |     -----------------^^^- help: try using a char instead: `x.rmatch_indices('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.rmatch_indices('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:670:25\n     |\n 670 |     x.trim_left_matches(\"x\");\n-    |                         ^^^\n+    |     --------------------^^^- help: try using a char instead: `x.trim_left_matches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.trim_left_matches('x');\n \n error: single-character string constant used as pattern\n    --> $DIR/methods.rs:674:26\n     |\n 674 |     x.trim_right_matches(\"x\");\n-    |                          ^^^\n+    |     ---------------------^^^- help: try using a char instead: `x.trim_right_matches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n-help: try using a char instead:\n-    |     x.trim_right_matches('x');\n \n error: you are getting the inner pointer of a temporary `CString`\n    --> $DIR/methods.rs:687:5"}, {"sha": "b978085b6a98bad60d9af39f56f95aeda4b11f09", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 7, "deletions": 28, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -20,28 +20,19 @@ error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:11:5\n    |\n 11 |     if x { true } else { false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     x;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `x`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:15:5\n    |\n 15 |     if x { false } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     !x;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `!x`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:19:5\n    |\n 19 |     if x && y { false } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     !(x && y);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `!(x && y)`\n \n error: this if-then-else expression will always return true\n   --> $DIR/needless_bool.rs:34:5\n@@ -59,37 +50,25 @@ error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:46:5\n    |\n 46 |     if x { return true } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     return x;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return x`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:54:5\n    |\n 54 |     if x && y { return true } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     return x && y;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return x && y`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:62:5\n    |\n 62 |     if x { return false } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     return !x;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return !x`\n \n error: this if-then-else expression returns a bool literal\n   --> $DIR/needless_bool.rs:70:5\n    |\n 70 |     if x && y { return false } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: you can reduce it to\n-   |     return !(x && y);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return !(x && y)`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "6cc5149d18343e629c0f2397b688e226de11877b", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,42 +2,31 @@ error: this argument is passed by value, but not consumed in the function body\n  --> $DIR/needless_pass_by_value.rs:9:23\n   |\n 9 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n-  |                       ^^^^^^\n+  |                       ^^^^^^ help: consider changing the type to `&[T]`\n   |\n note: lint level defined here\n  --> $DIR/needless_pass_by_value.rs:4:9\n   |\n 4 | #![deny(needless_pass_by_value)]\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n-help: consider changing the type to `&[T]`\n-  | fn foo<T: Default>(v: &[T], w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:23:11\n    |\n 23 | fn bar(x: String, y: Wrapper) {\n-   |           ^^^^^^\n-   |\n-help: consider changing the type to `&str`\n-   | fn bar(x: &str, y: Wrapper) {\n+   |           ^^^^^^ help: consider changing the type to `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:23:22\n    |\n 23 | fn bar(x: String, y: Wrapper) {\n-   |                      ^^^^^^^\n-   |\n-help: consider taking a reference instead\n-   | fn bar(x: String, y: &Wrapper) {\n+   |                      ^^^^^^^ help: consider taking a reference instead `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:29:63\n    |\n 29 | fn test_borrow_trait<T: std::borrow::Borrow<str>, U>(t: T, u: U) {\n-   |                                                               ^\n-   |\n-help: consider taking a reference instead\n-   | fn test_borrow_trait<T: std::borrow::Borrow<str>, U>(t: T, u: &U) {\n+   |                                                               ^ help: consider taking a reference instead `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:40:18\n@@ -53,10 +42,7 @@ error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:53:24\n    |\n 53 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n-   |                        ^^^^^^^\n-   |\n-help: consider taking a reference instead\n-   | fn test_destructure(x: &Wrapper, y: Wrapper, z: Wrapper) {\n+   |                        ^^^^^^^ help: consider taking a reference instead `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:53:36"}, {"sha": "300713202c70686223af9e85402765ecb4868167", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 8, "deletions": 31, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,78 +2,55 @@ error: unneeded return statement\n   --> $DIR/needless_return.rs:11:5\n    |\n 11 |     return true;\n-   |     ^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n    |\n note: lint level defined here\n   --> $DIR/needless_return.rs:4:9\n    |\n 4  | #![deny(needless_return)]\n    |         ^^^^^^^^^^^^^^^\n-help: remove `return` as shown:\n-   |     true\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:18:5\n    |\n 18 |     return true\n-   |     ^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |     true\n+   |     ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:26:9\n    |\n 26 |         return true;\n-   |         ^^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |         true\n+   |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:31:9\n    |\n 31 |         return false;\n-   |         ^^^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |         false\n+   |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:40:17\n    |\n 40 |         true => return false,\n-   |                 ^^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |         true => false,\n+   |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:46:13\n    |\n 46 |             return true;\n-   |             ^^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |             true\n+   |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:56:9\n    |\n 56 |         return true;\n-   |         ^^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |         true\n+   |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> $DIR/needless_return.rs:61:16\n    |\n 61 |     let _ = || return true;\n-   |                ^^^^^^^^^^^\n-   |\n-help: remove `return` as shown:\n-   |     let _ = || true;\n+   |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "7a74473dd3bb57bb7b3ae390af110b65fb6f5f1c", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 19, "deletions": 75, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -158,177 +158,121 @@ error: statement can be reduced\n   --> $DIR/no_effect.rs:65:5\n    |\n 65 |     Tuple(get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n    |\n note: lint level defined here\n   --> $DIR/no_effect.rs:4:20\n    |\n 4  | #![deny(no_effect, unnecessary_operation)]\n    |                    ^^^^^^^^^^^^^^^^^^^^^\n-help: replace it with\n-   |     get_number();\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:68:5\n    |\n 68 |     Struct { field: get_number() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:71:5\n    |\n 71 |     Struct { ..get_struct() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_struct();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_struct();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:74:5\n    |\n 74 |     Enum::Tuple(get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:77:5\n    |\n 77 |     Enum::Struct { field: get_number() };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:80:5\n    |\n 80 |     5 + get_number();\n-   |     ^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     5;get_number();\n+   |     ^^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:83:5\n    |\n 83 |     *&get_number();\n-   |     ^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:86:5\n    |\n 86 |     &get_number();\n-   |     ^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:89:5\n    |\n 89 |     (5, 6, get_number());\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     5;6;get_number();\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `5;6;get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:92:5\n    |\n 92 |     box get_number();\n-   |     ^^^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:95:5\n    |\n 95 |     get_number()..;\n-   |     ^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n   --> $DIR/no_effect.rs:98:5\n    |\n 98 |     ..get_number();\n-   |     ^^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     get_number();\n+   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:101:5\n     |\n 101 |     5..get_number();\n-    |     ^^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     5;get_number();\n+    |     ^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:104:5\n     |\n 104 |     [42, get_number()];\n-    |     ^^^^^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     42;get_number();\n+    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:107:5\n     |\n 107 |     [42, 55][get_number() as usize];\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     [42, 55];get_number() as usize;\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:110:5\n     |\n 110 |     (42, get_number()).1;\n-    |     ^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     42;get_number();\n+    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:113:5\n     |\n 113 |     [get_number(); 55];\n-    |     ^^^^^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     get_number();\n+    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:116:5\n     |\n 116 |     [42; 55][get_number() as usize];\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     [42; 55];get_number() as usize;\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n    --> $DIR/no_effect.rs:119:5\n     |\n 119 |     {get_number()};\n-    |     ^^^^^^^^^^^^^^^\n-    |\n-help: replace it with\n-    |     get_number();\n+    |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: aborting due to 44 previous errors\n "}, {"sha": "9dd86d191814fc0d464b77f6f1fece23b8bd9b8e", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 9, "deletions": 35, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,87 +2,61 @@ error: operator precedence can trip the unwary\n  --> $DIR/precedence.rs:8:5\n   |\n 8 |     1 << 2 + 3;\n-  |     ^^^^^^^^^^\n+  |     ^^^^^^^^^^ help: consider parenthesizing your expression `1 << (2 + 3)`\n   |\n note: lint level defined here\n  --> $DIR/precedence.rs:4:8\n   |\n 4 | #[deny(precedence)]\n   |        ^^^^^^^^^^\n-help: consider parenthesizing your expression\n-  |     1 << (2 + 3);\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:11:5\n    |\n 11 |     1 + 2 << 3;\n-   |     ^^^^^^^^^^\n-   |\n-help: consider parenthesizing your expression\n-   |     (1 + 2) << 3;\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 2) << 3`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:14:5\n    |\n 14 |     4 >> 1 + 1;\n-   |     ^^^^^^^^^^\n-   |\n-help: consider parenthesizing your expression\n-   |     4 >> (1 + 1);\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression `4 >> (1 + 1)`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:17:5\n    |\n 17 |     1 + 3 >> 2;\n-   |     ^^^^^^^^^^\n-   |\n-help: consider parenthesizing your expression\n-   |     (1 + 3) >> 2;\n+   |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 3) >> 2`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:20:5\n    |\n 20 |     1 ^ 1 - 1;\n-   |     ^^^^^^^^^\n-   |\n-help: consider parenthesizing your expression\n-   |     1 ^ (1 - 1);\n+   |     ^^^^^^^^^ help: consider parenthesizing your expression `1 ^ (1 - 1)`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:23:5\n    |\n 23 |     3 | 2 - 1;\n-   |     ^^^^^^^^^\n-   |\n-help: consider parenthesizing your expression\n-   |     3 | (2 - 1);\n+   |     ^^^^^^^^^ help: consider parenthesizing your expression `3 | (2 - 1)`\n \n error: operator precedence can trip the unwary\n   --> $DIR/precedence.rs:26:5\n    |\n 26 |     3 & 5 - 2;\n-   |     ^^^^^^^^^\n-   |\n-help: consider parenthesizing your expression\n-   |     3 & (5 - 2);\n+   |     ^^^^^^^^^ help: consider parenthesizing your expression `3 & (5 - 2)`\n \n error: unary minus has lower precedence than method call\n   --> $DIR/precedence.rs:30:5\n    |\n 30 |     -1i32.abs();\n-   |     ^^^^^^^^^^^\n-   |\n-help: consider adding parentheses to clarify your intent\n-   |     -(1i32.abs());\n+   |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1i32.abs())`\n \n error: unary minus has lower precedence than method call\n   --> $DIR/precedence.rs:33:5\n    |\n 33 |     -1f32.abs();\n-   |     ^^^^^^^^^^^\n-   |\n-help: consider adding parentheses to clarify your intent\n-   |     -(1f32.abs());\n+   |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1f32.abs())`\n \n error: aborting due to 9 previous errors\n "}, {"sha": "bc3ceef0f70d5a8634a2de2d45c5705ffe53098e", "filename": "tests/ui/redundant_closure_call.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -20,10 +20,7 @@ error: Try not to call a closure in the expression where it is declared.\n  --> $DIR/redundant_closure_call.rs:7:10\n   |\n 7 | \\tlet a = (|| 42)();\n-  | \\t        ^^^^^^^^^\n-  |\n-help: Try doing something like: \n-  | \\tlet a = 42;\n+  | \\t        ^^^^^^^^^ help: Try doing something like:  `42`\n \n error: Try not to call a closure in the expression where it is declared.\n   --> $DIR/redundant_closure_call.rs:13:10"}, {"sha": "5d41c1809b45a0da6f76d498cbfe7bd47ff86cab", "filename": "tests/ui/reference.stderr", "status": "modified", "additions": 11, "deletions": 43, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,105 +2,73 @@ error: immediately dereferencing a reference\n   --> $DIR/reference.rs:19:13\n    |\n 19 |     let b = *&a;\n-   |             ^^^\n+   |             ^^^ help: try this `a`\n    |\n note: lint level defined here\n   --> $DIR/reference.rs:14:8\n    |\n 14 | #[deny(deref_addrof)]\n    |        ^^^^^^^^^^^^\n-help: try this\n-   |     let b = a;\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:24:13\n    |\n 24 |     let b = *&get_number();\n-   |             ^^^^^^^^^^^^^^\n-   |\n-help: try this\n-   |     let b = get_number();\n+   |             ^^^^^^^^^^^^^^ help: try this `get_number()`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:32:13\n    |\n 32 |     let b = *&bytes[1..2][0];\n-   |             ^^^^^^^^^^^^^^^^\n-   |\n-help: try this\n-   |     let b = bytes[1..2][0];\n+   |             ^^^^^^^^^^^^^^^^ help: try this `bytes[1..2][0]`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:39:13\n    |\n 39 |     let b = *&(a);\n-   |             ^^^^^\n-   |\n-help: try this\n-   |     let b = (a);\n+   |             ^^^^^ help: try this `(a)`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:44:13\n    |\n 44 |     let b = *(&a);\n-   |             ^^^^^\n-   |\n-help: try this\n-   |     let b = a;\n+   |             ^^^^^ help: try this `a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:49:13\n    |\n 49 |     let b = *((&a));\n-   |             ^^^^^^^\n-   |\n-help: try this\n-   |     let b = a;\n+   |             ^^^^^^^ help: try this `a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:54:13\n    |\n 54 |     let b = *&&a;\n-   |             ^^^^\n-   |\n-help: try this\n-   |     let b = &a;\n+   |             ^^^^ help: try this `&a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:59:14\n    |\n 59 |     let b = **&aref;\n-   |              ^^^^^^\n-   |\n-help: try this\n-   |     let b = *aref;\n+   |              ^^^^^^ help: try this `aref`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:66:14\n    |\n 66 |     let b = **&&a;\n-   |              ^^^^\n-   |\n-help: try this\n-   |     let b = *&a;\n+   |              ^^^^ help: try this `&a`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:73:17\n    |\n 73 |         let y = *&mut x;\n-   |                 ^^^^^^^\n-   |\n-help: try this\n-   |         let y = x;\n+   |                 ^^^^^^^ help: try this `x`\n \n error: immediately dereferencing a reference\n   --> $DIR/reference.rs:83:18\n    |\n 83 |         let y = **&mut &mut x;\n-   |                  ^^^^^^^^^^^^\n-   |\n-help: try this\n-   |         let y = *&mut x;\n+   |                  ^^^^^^^^^^^^ help: try this `&mut x`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "09e24fa7de6b5756fb61c60bfeffcc84a4560e05", "filename": "tests/ui/short_circuit_statement.stderr", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fshort_circuit_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fshort_circuit_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,33 +2,25 @@ error: boolean short circuit operator in statement may be clearer using an expli\n  --> $DIR/short_circuit_statement.rs:7:5\n   |\n 7 |     f() && g();\n-  |     ^^^^^^^^^^^\n+  |     ^^^^^^^^^^^ help: replace it with `if f() { g(); }`\n   |\n note: lint level defined here\n  --> $DIR/short_circuit_statement.rs:4:9\n   |\n 4 | #![deny(short_circuit_statement)]\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-help: replace it with\n-  |     if f() { g(); }\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n   --> $DIR/short_circuit_statement.rs:11:5\n    |\n 11 |     f() || g();\n-   |     ^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     if !f() { g(); }\n+   |     ^^^^^^^^^^^ help: replace it with `if !f() { g(); }`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n   --> $DIR/short_circuit_statement.rs:15:5\n    |\n 15 |     1 == 2 || g();\n-   |     ^^^^^^^^^^^^^^\n-   |\n-help: replace it with\n-   |     if !(1 == 2) { g(); }\n+   |     ^^^^^^^^^^^^^^ help: replace it with `if !(1 == 2) { g(); }`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "575028887445cc6766de362eaeda96fbf6ae5014", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -56,25 +56,21 @@ error: calling `as_bytes()` on a string literal\n   --> $DIR/strings.rs:50:14\n    |\n 50 |     let bs = \"hello there\".as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead `b\"hello there\"`\n    |\n note: lint level defined here\n   --> $DIR/strings.rs:48:8\n    |\n 48 | #[deny(string_lit_as_bytes)]\n    |        ^^^^^^^^^^^^^^^^^^^\n-help: consider using a byte string literal instead\n-   |     let bs = b\"hello there\";\n \n warning: manual implementation of an assign operation\n   --> $DIR/strings.rs:68:7\n    |\n 68 |     ; x = x + 1;\n-   |       ^^^^^^^^^\n+   |       ^^^^^^^^^ help: replace it with `x += 1`\n    |\n    = note: #[warn(assign_op_pattern)] on by default\n-help: replace it with\n-   |     ; x += 1;\n \n error: aborting due to 6 previous errors\n "}, {"sha": "0bd8721b4ff51568a4184ced73dd48ca3160d4a6", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -4,40 +4,34 @@ error: this looks like you are swapping elements of `foo` manually\n 11 | /     let temp = foo[0];\n 12 | |     foo[0] = foo[1];\n 13 | |     foo[1] = temp;\n-   | |_________________^\n+   | |_________________^ help: try `foo.swap(0, 1)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n note: lint level defined here\n   --> $DIR/swap.rs:4:9\n    |\n 4  | #![deny(clippy)]\n    |         ^^^^^^\n-help: try\n-   |     foo.swap(0, 1);\n \n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:23:5\n    |\n 23 | /     let temp = foo[0];\n 24 | |     foo[0] = foo[1];\n 25 | |     foo[1] = temp;\n-   | |_________________^\n+   | |_________________^ help: try `foo.swap(0, 1)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n-help: try\n-   |     foo.swap(0, 1);\n \n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:35:5\n    |\n 35 | /     let temp = foo[0];\n 36 | |     foo[0] = foo[1];\n 37 | |     foo[1] = temp;\n-   | |_________________^\n+   | |_________________^ help: try `foo.swap(0, 1)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n-help: try\n-   |     foo.swap(0, 1);\n \n error: this looks like you are swapping `a` and `b` manually\n   --> $DIR/swap.rs:60:7\n@@ -46,11 +40,9 @@ error: this looks like you are swapping `a` and `b` manually\n    |  _______^\n 61 | |     a = b;\n 62 | |     b = t;\n-   | |_________^\n+   | |_________^ help: try `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n-help: try\n-   |     ; std::mem::swap(&mut a, &mut b);\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `c.0` and `a` manually\n@@ -60,40 +52,34 @@ error: this looks like you are swapping `c.0` and `a` manually\n    |  _______^\n 78 | |     c.0 = a;\n 79 | |     a = t;\n-   | |_________^\n+   | |_________^ help: try `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n-help: try\n-   |     ; std::mem::swap(&mut c.0, &mut a);\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n   --> $DIR/swap.rs:53:5\n    |\n 53 | /     a = b;\n 54 | |     b = a;\n-   | |_________^\n+   | |_________^ help: try `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: #[deny(almost_swapped)] implied by #[deny(clippy)]\n note: lint level defined here\n   --> $DIR/swap.rs:4:9\n    |\n 4  | #![deny(clippy)]\n    |         ^^^^^^\n-help: try\n-   |     std::mem::swap(&mut a, &mut b);\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `c.0` and `a`\n   --> $DIR/swap.rs:70:5\n    |\n 70 | /     c.0 = a;\n 71 | |     a = c.0;\n-   | |___________^\n+   | |___________^ help: try `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: #[deny(almost_swapped)] implied by #[deny(clippy)]\n-help: try\n-   |     std::mem::swap(&mut c.0, &mut a);\n    = note: or maybe you should use `std::mem::replace`?\n \n error: aborting due to 7 previous errors"}, {"sha": "85faa0d15ab85c2ab34542deb81f252638f866c1", "filename": "tests/ui/toplevel_ref_arg.stderr", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ftoplevel_ref_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ftoplevel_ref_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -15,41 +15,33 @@ error: `ref` on an entire `let` pattern is discouraged, take a reference with `&\n   --> $DIR/toplevel_ref_arg.rs:18:7\n    |\n 18 |   let ref x = 1;\n-   |       ^^^^^\n+   |   ----^^^^^----- help: try `let x = &1;`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n-help: try\n-   |   let x = &1;\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:23:7\n    |\n 23 |   let ref y: (&_, u8) = (&1, 2);\n-   |       ^^^^^\n+   |   ----^^^^^--------------------- help: try `let y: &(&_, u8) = &(&1, 2);`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n-help: try\n-   |   let y: &(&_, u8) = &(&1, 2);\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:28:7\n    |\n 28 |   let ref z = 1 + 2;\n-   |       ^^^^^\n+   |   ----^^^^^--------- help: try `let z = &(1 + 2);`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n-help: try\n-   |   let z = &(1 + 2);\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n   --> $DIR/toplevel_ref_arg.rs:33:7\n    |\n 33 |   let ref mut z = 1 + 2;\n-   |       ^^^^^^^^^\n+   |   ----^^^^^^^^^--------- help: try `let z = &mut (1 + 2);`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n-help: try\n-   |   let z = &mut (1 + 2);\n \n error: aborting due to 5 previous errors\n "}, {"sha": "49a35e48bf6a4802e88f62fc686bec99ff572717", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 15, "deletions": 58, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -14,128 +14,91 @@ error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:27:23\n    |\n 27 |     let _: *const T = core::intrinsics::transmute(t);\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: *const T = t as *const T;\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T`\n \n error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:32:21\n    |\n 32 |     let _: *mut T = core::intrinsics::transmute(t);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: *mut T = t as *const T as *mut T;\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T as *mut T`\n \n error: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:37:23\n    |\n 37 |     let _: *const U = core::intrinsics::transmute(t);\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: *const U = t as *const T as *const U;\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T as *const U`\n \n error: transmute from a pointer type (`*const T`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:45:17\n    |\n 45 |     let _: &T = std::mem::transmute(p);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*p`\n    |\n note: lint level defined here\n   --> $DIR/transmute.rs:43:8\n    |\n 43 | #[deny(transmute_ptr_to_ref)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n-help: try\n-   |     let _: &T = &*p;\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:51:21\n    |\n 51 |     let _: &mut T = std::mem::transmute(m);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: &mut T = &mut *m;\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:57:17\n    |\n 57 |     let _: &T = std::mem::transmute(m);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: &T = &*m;\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:63:21\n    |\n 63 |     let _: &mut T = std::mem::transmute(p as *mut T);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: &mut T = &mut *(p as *mut T);\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *(p as *mut T)`\n \n error: transmute from a pointer type (`*const U`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:69:17\n    |\n 69 |     let _: &T = std::mem::transmute(o);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: &T = &*(o as *const T);\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(o as *const T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:75:21\n    |\n 75 |     let _: &mut T = std::mem::transmute(om);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: &mut T = &mut *(om as *mut T);\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *(om as *mut T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:81:17\n    |\n 81 |     let _: &T = std::mem::transmute(om);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     let _: &T = &*(om as *const T);\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(om as *const T)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, u8>`)\n   --> $DIR/transmute.rs:95:32\n    |\n 95 |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n-   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<_>)`\n    |\n note: lint level defined here\n   --> $DIR/transmute.rs:88:8\n    |\n 88 | #[deny(transmute_ptr_to_ref)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n-help: try\n-   |     let _: &Foo<u8> = unsafe { &*(raw as *const Foo<_>) };\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, &u8>`)\n    --> $DIR/transmute.rs:100:33\n     |\n 100 |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n-    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: try\n-    |     let _: &Foo<&u8> = unsafe { &*(raw as *const Foo<&_>) };\n+    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<&_>)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&u8`)\n    --> $DIR/transmute.rs:107:14\n     |\n 107 |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n-    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: try\n-    |     unsafe { &*(raw as *const u8) };\n+    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const u8)`\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n    --> $DIR/transmute.rs:116:27\n@@ -177,19 +140,13 @@ error: transmute from an integer to a pointer\n    --> $DIR/transmute.rs:137:31\n     |\n 137 |         let _: *const usize = std::mem::transmute(5_isize);\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: try\n-    |         let _: *const usize = 5_isize as *const usize;\n+    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `5_isize as *const usize`\n \n error: transmute from an integer to a pointer\n    --> $DIR/transmute.rs:143:31\n     |\n 143 |         let _: *const usize = std::mem::transmute(1+1usize);\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n-help: try\n-    |         let _: *const usize = (1+1usize) as *const usize;\n+    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `(1+1usize) as *const usize`\n \n error: transmute from a type (`*const Usize`) to the type that it points to (`Usize`)\n    --> $DIR/transmute.rs:160:24"}, {"sha": "911321e5f74d40c81f7c7cd680c83c14098663bb", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,15 +2,13 @@ error: useless lint attribute\n  --> $DIR/useless_attribute.rs:5:1\n   |\n 5 | #[allow(dead_code)]\n-  | ^^^^^^^^^^^^^^^^^^^\n+  | ^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use `#![allow(dead_code)]`\n   |\n note: lint level defined here\n  --> $DIR/useless_attribute.rs:3:9\n   |\n 3 | #![deny(useless_attribute)]\n   |         ^^^^^^^^^^^^^^^^^\n-help: if you just forgot a `!`, use\n-  | #![allow(dead_code)]\n \n error: aborting due to previous error\n "}, {"sha": "bffd30297d970408e4cd8c69c865871e166fc3f1", "filename": "tests/ui/vec.stderr", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fvec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fvec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -2,60 +2,43 @@ error: useless use of `vec!`\n   --> $DIR/vec.rs:24:14\n    |\n 24 |     on_slice(&vec![]);\n-   |              ^^^^^^^\n+   |              ^^^^^^^ help: you can use a slice directly `&[]`\n    |\n note: lint level defined here\n   --> $DIR/vec.rs:4:9\n    |\n 4  | #![deny(useless_vec)]\n    |         ^^^^^^^^^^^\n-help: you can use a slice directly\n-   |     on_slice(&[]);\n \n error: useless use of `vec!`\n   --> $DIR/vec.rs:30:14\n    |\n 30 |     on_slice(&vec![1, 2]);\n-   |              ^^^^^^^^^^^\n-   |\n-help: you can use a slice directly\n-   |     on_slice(&[1, 2]);\n+   |              ^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n \n error: useless use of `vec!`\n   --> $DIR/vec.rs:36:14\n    |\n 36 |     on_slice(&vec ![1, 2]);\n-   |              ^^^^^^^^^^^^\n-   |\n-help: you can use a slice directly\n-   |     on_slice(&[1, 2]);\n+   |              ^^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n \n error: useless use of `vec!`\n   --> $DIR/vec.rs:42:14\n    |\n 42 |     on_slice(&vec!(1, 2));\n-   |              ^^^^^^^^^^^\n-   |\n-help: you can use a slice directly\n-   |     on_slice(&[1, 2]);\n+   |              ^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n \n error: useless use of `vec!`\n   --> $DIR/vec.rs:48:14\n    |\n 48 |     on_slice(&vec![1; 2]);\n-   |              ^^^^^^^^^^^\n-   |\n-help: you can use a slice directly\n-   |     on_slice(&[1; 2]);\n+   |              ^^^^^^^^^^^ help: you can use a slice directly `&[1; 2]`\n \n error: useless use of `vec!`\n   --> $DIR/vec.rs:64:14\n    |\n 64 |     for a in vec![1, 2, 3] {\n-   |              ^^^^^^^^^^^^^\n-   |\n-help: you can use a slice directly\n-   |     for a in &[1, 2, 3] {\n+   |              ^^^^^^^^^^^^^ help: you can use a slice directly `&[1, 2, 3]`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "319d099c41ec6a6c638d4465ae334283158a153a", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 9, "deletions": 34, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c8464ddeb46951ecff0624f65cd4fe848d2302/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=a6c8464ddeb46951ecff0624f65cd4fe848d2302", "patch": "@@ -8,15 +8,13 @@ error: this loop could be written as a `while let` loop\n ...  |\n 17 | |         }\n 18 | |     }\n-   | |_____^\n+   | |_____^ help: try `while let Some(_x) = y { .. }`\n    |\n note: lint level defined here\n   --> $DIR/while_loop.rs:4:9\n    |\n 4  | #![deny(while_let_loop, empty_loop, while_let_on_iterator)]\n    |         ^^^^^^^^^^^^^^\n-help: try\n-   |     while let Some(_x) = y { .. }\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:25:5\n@@ -28,10 +26,7 @@ error: this loop could be written as a `while let` loop\n ...  |\n 32 | |         };\n 33 | |     }\n-   | |_____^\n-   |\n-help: try\n-   |     while let Some(_x) = y { .. }\n+   | |_____^ help: try `while let Some(_x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:34:5\n@@ -43,10 +38,7 @@ error: this loop could be written as a `while let` loop\n ...  |\n 43 | |         let _str = \"foo\";\n 44 | |     }\n-   | |_____^\n-   |\n-help: try\n-   |     while let Some(x) = y { .. }\n+   | |_____^ help: try `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:45:5\n@@ -58,10 +50,7 @@ error: this loop could be written as a `while let` loop\n ...  |\n 54 | |         { let _b = \"foobar\"; }\n 55 | |     }\n-   | |_____^\n-   |\n-help: try\n-   |     while let Some(x) = y { .. }\n+   | |_____^ help: try `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:70:5\n@@ -73,10 +62,7 @@ error: this loop could be written as a `while let` loop\n ...  |\n 79 | |         let _ = (e, l);\n 80 | |     }\n-   | |_____^\n-   |\n-help: try\n-   |     while let Some(word) = \"\".split_whitespace().next() { .. }\n+   | |_____^ help: try `while let Some(word) = \"\".split_whitespace().next() { .. }`\n \n error: this loop could be written as a `for` loop\n   --> $DIR/while_loop.rs:83:5\n@@ -87,15 +73,13 @@ error: this loop could be written as a `for` loop\n 86 | |\n 87 | |         println!(\"{}\", x);\n 88 | |     }\n-   | |_____^\n+   | |_____^ help: try `for x in iter { .. }`\n    |\n note: lint level defined here\n   --> $DIR/while_loop.rs:4:37\n    |\n 4  | #![deny(while_let_loop, empty_loop, while_let_on_iterator)]\n    |                                     ^^^^^^^^^^^^^^^^^^^^^\n-help: try\n-   |     for x in iter { .. }\n \n error: this loop could be written as a `for` loop\n   --> $DIR/while_loop.rs:91:5\n@@ -106,19 +90,13 @@ error: this loop could be written as a `for` loop\n 94 | |\n 95 | |         println!(\"{}\", x);\n 96 | |     }\n-   | |_____^\n-   |\n-help: try\n-   |     for x in iter { .. }\n+   | |_____^ help: try `for x in iter { .. }`\n \n error: this loop could be written as a `for` loop\n   --> $DIR/while_loop.rs:99:5\n    |\n 99 |     while let Some(_) = iter.next() {}\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try\n-   |     for _ in iter { .. }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `for _ in iter { .. }`\n \n error: this loop could be written as a `while let` loop\n    --> $DIR/while_loop.rs:142:5\n@@ -130,10 +108,7 @@ error: this loop could be written as a `while let` loop\n ...   |\n 150 | |         loop {}\n 151 | |     }\n-    | |_____^\n-    |\n-help: try\n-    |     while let Some(ele) = iter.next() { .. }\n+    | |_____^ help: try `while let Some(ele) = iter.next() { .. }`\n \n error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n    --> $DIR/while_loop.rs:150:9"}]}