{"sha": "b99b14311c57f6e5f1d50d1868513c4459e33328", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OWIxNDMxMWM1N2Y2ZTVmMWQ1MGQxODY4NTEzYzQ0NTllMzMzMjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-04T21:07:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-04T21:07:50Z"}, "message": "Merge #7160\n\n7160: Get `hir::Function` return type r=flodiebold a=arnaudgolfouse\n\nHello !\r\n\r\nAs said in #7158, I noticed that `hir::Function` has no direct way of getting the return type, so this PR adds this functionality.\n\nCo-authored-by: Arnaud <arnaud.golfouse@free.fr>", "tree": {"sha": "70379a97f2d5812fb8f8015bffcfa7cdd451e050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70379a97f2d5812fb8f8015bffcfa7cdd451e050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b99b14311c57f6e5f1d50d1868513c4459e33328", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf84OmCRBK7hj4Ov3rIwAAdHIIAKx7tOIMCIbyiNz5Eir+jacO\nrmyKd/Er2Xa7dSOZ9r1Usv3IrV+FNbqaJo+EYrR8x0kFzdCHo+YOZxaqi7yeDo8w\nK88Y+dh1wpzYi5hYjOFrrtiSszMhfwaQs+Xojgb9gdqv5XR74dkTK3PkGCAY2Au0\nMBou7JDvuuAAuG5Ohj1Zrmy0SknD/DHALk88wftIAzZiEcM46cUzcj4GvEgP1Jc0\n9PgvokL2bMVFBCQLURIzBhJBhoMPD+fZ7+TRFAjwFxY7r7SbLVSGq2CmHYkbowWV\nbtHVqKpsGa8W18rFxqdiNOD/O4fnqPuluDS5w6+j59BtH731NSmossabnwgtzUI=\n=oIza\n-----END PGP SIGNATURE-----\n", "payload": "tree 70379a97f2d5812fb8f8015bffcfa7cdd451e050\nparent 550c49657eabbe7583819c7e19c94eaa7d2c589e\nparent 052404565ea495b32956373e18d807a8cde68ceb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609794470 +0000\ncommitter GitHub <noreply@github.com> 1609794470 +0000\n\nMerge #7160\n\n7160: Get `hir::Function` return type r=flodiebold a=arnaudgolfouse\n\nHello !\r\n\r\nAs said in #7158, I noticed that `hir::Function` has no direct way of getting the return type, so this PR adds this functionality.\n\nCo-authored-by: Arnaud <arnaud.golfouse@free.fr>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b99b14311c57f6e5f1d50d1868513c4459e33328", "html_url": "https://github.com/rust-lang/rust/commit/b99b14311c57f6e5f1d50d1868513c4459e33328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b99b14311c57f6e5f1d50d1868513c4459e33328/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "550c49657eabbe7583819c7e19c94eaa7d2c589e", "url": "https://api.github.com/repos/rust-lang/rust/commits/550c49657eabbe7583819c7e19c94eaa7d2c589e", "html_url": "https://github.com/rust-lang/rust/commit/550c49657eabbe7583819c7e19c94eaa7d2c589e"}, {"sha": "052404565ea495b32956373e18d807a8cde68ceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/052404565ea495b32956373e18d807a8cde68ceb", "html_url": "https://github.com/rust-lang/rust/commit/052404565ea495b32956373e18d807a8cde68ceb"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "1a4aa78fb066a51000c569d542e9389198964ca6", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b99b14311c57f6e5f1d50d1868513c4459e33328/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b99b14311c57f6e5f1d50d1868513c4459e33328/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=b99b14311c57f6e5f1d50d1868513c4459e33328", "patch": "@@ -743,6 +743,18 @@ impl Function {\n         db.function_data(self.id).name.clone()\n     }\n \n+    /// Get this function's return type\n+    pub fn ret_type(self, db: &dyn HirDatabase) -> Type {\n+        let resolver = self.id.resolver(db.upcast());\n+        let ret_type = &db.function_data(self.id).ret_type;\n+        let ctx = hir_ty::TyLoweringContext::new(db, &resolver);\n+        let environment = TraitEnvironment::lower(db, &resolver);\n+        Type {\n+            krate: self.id.lookup(db.upcast()).container.module(db.upcast()).krate,\n+            ty: InEnvironment { value: Ty::from_hir_ext(&ctx, ret_type).0, environment },\n+        }\n+    }\n+\n     pub fn self_param(self, db: &dyn HirDatabase) -> Option<SelfParam> {\n         if !db.function_data(self.id).has_self_param {\n             return None;"}]}