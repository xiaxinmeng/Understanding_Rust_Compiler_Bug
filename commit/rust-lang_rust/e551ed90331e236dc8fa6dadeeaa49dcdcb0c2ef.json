{"sha": "e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NTFlZDkwMzMxZTIzNmRjOGZhNmRhZGVlYWE0OWRjZGNiMGMyZWY=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-17T11:31:06Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T17:10:42Z"}, "message": "rustc_codegen_llvm: use safe references for ArchiveIterator.", "tree": {"sha": "5d67b50a15373f64caee833077fc3f0e445de9ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d67b50a15373f64caee833077fc3f0e445de9ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef", "html_url": "https://github.com/rust-lang/rust/commit/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "894467e5b4fd7c355f24c680a612ba810d1b4e8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/894467e5b4fd7c355f24c680a612ba810d1b4e8d", "html_url": "https://github.com/rust-lang/rust/commit/894467e5b4fd7c355f24c680a612ba810d1b4e8d"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "1d215910d95550bbb3596771bd5c318992752e38", "filename": "src/librustc_codegen_llvm/llvm/archive_ro.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs?ref=e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef", "patch": "@@ -23,8 +23,7 @@ pub struct ArchiveRO {\n unsafe impl Send for ArchiveRO {}\n \n pub struct Iter<'a> {\n-    ptr: super::ArchiveIteratorRef,\n-    _data: marker::PhantomData<&'a ArchiveRO>,\n+    ptr: &'a mut super::ArchiveIterator<'a>,\n }\n \n pub struct Child<'a> {\n@@ -68,7 +67,6 @@ impl ArchiveRO {\n         unsafe {\n             Iter {\n                 ptr: super::LLVMRustArchiveIteratorNew(self.raw),\n-                _data: marker::PhantomData,\n             }\n         }\n     }\n@@ -101,7 +99,7 @@ impl<'a> Iterator for Iter<'a> {\n impl<'a> Drop for Iter<'a> {\n     fn drop(&mut self) {\n         unsafe {\n-            super::LLVMRustArchiveIteratorFree(self.ptr);\n+            super::LLVMRustArchiveIteratorFree(&mut *(self.ptr as *mut _));\n         }\n     }\n }"}, {"sha": "2dda2dd00d2f9709918f682625d228d50981abda", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=e551ed90331e236dc8fa6dadeeaa49dcdcb0c2ef", "patch": "@@ -404,8 +404,7 @@ pub struct SectionIterator<'a>(InvariantOpaque<'a>);\n extern { pub type Pass; }\n extern { pub type TargetMachine; }\n extern { pub type Archive; }\n-extern { pub type ArchiveIterator; }\n-pub type ArchiveIteratorRef = *mut ArchiveIterator;\n+pub struct ArchiveIterator<'a>(InvariantOpaque<'a>);\n extern { pub type ArchiveChild; }\n pub type ArchiveChildRef = *mut ArchiveChild;\n extern { pub type Twine; }\n@@ -1471,12 +1470,12 @@ extern \"C\" {\n     pub fn LLVMRustMarkAllFunctionsNounwind(M: &Module);\n \n     pub fn LLVMRustOpenArchive(path: *const c_char) -> Option<&'static mut Archive>;\n-    pub fn LLVMRustArchiveIteratorNew(AR: &Archive) -> ArchiveIteratorRef;\n-    pub fn LLVMRustArchiveIteratorNext(AIR: ArchiveIteratorRef) -> ArchiveChildRef;\n+    pub fn LLVMRustArchiveIteratorNew(AR: &'a Archive) -> &'a mut ArchiveIterator<'a>;\n+    pub fn LLVMRustArchiveIteratorNext(AIR: &ArchiveIterator) -> ArchiveChildRef;\n     pub fn LLVMRustArchiveChildName(ACR: ArchiveChildRef, size: &mut size_t) -> *const c_char;\n     pub fn LLVMRustArchiveChildData(ACR: ArchiveChildRef, size: &mut size_t) -> *const c_char;\n     pub fn LLVMRustArchiveChildFree(ACR: ArchiveChildRef);\n-    pub fn LLVMRustArchiveIteratorFree(AIR: ArchiveIteratorRef);\n+    pub fn LLVMRustArchiveIteratorFree(AIR: &'a mut ArchiveIterator<'a>);\n     pub fn LLVMRustDestroyArchive(AR: &'static mut Archive);\n \n     pub fn LLVMRustGetSectionName(SI: &SectionIterator, data: &mut *const c_char) -> size_t;"}]}