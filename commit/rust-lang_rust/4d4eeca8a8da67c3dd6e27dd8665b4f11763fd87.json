{"sha": "4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "node_id": "C_kwDOAAsO6NoAKDRkNGVlY2E4YThkYTY3YzNkZDZlMjdkZDg2NjViNGYxMTc2M2ZkODc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-21T00:37:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-21T00:38:08Z"}, "message": "fix miri script", "tree": {"sha": "074a8eec5aa30e4c472b9af2d7edc6490e08ce4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/074a8eec5aa30e4c472b9af2d7edc6490e08ce4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "html_url": "https://github.com/rust-lang/rust/commit/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "517e1d78b8a2daf7285ddf24f8642a922df02f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/517e1d78b8a2daf7285ddf24f8642a922df02f89", "html_url": "https://github.com/rust-lang/rust/commit/517e1d78b8a2daf7285ddf24f8642a922df02f89"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "2a9be1de3629c8929c075be6e2f5761273a88ee1", "filename": "miri", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87/miri", "raw_url": "https://github.com/rust-lang/rust/raw/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "patch": "@@ -48,33 +48,34 @@ Pass extra flags to all cargo invocations.\n EOF\n )\n \n-## Run the subcommands that the user requested to always run first\n+## We need to know where we are.\n+# macOS does not have a useful readlink/realpath so we have to use Python instead...\n+MIRIDIR=$(python3 -c 'import os, sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' \"$0\")\n+\n+## Run the auto-things.\n if [ -z \"$AUTO_OPS\" ]; then\n     export AUTO_OPS=42\n \n     # Run this first, so that the toolchain doesn't change after\n     # other code has run.\n-    if [ -f \".auto-everything\" ] || [ -f \".auto-toolchain\" ] ; then\n+    if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-toolchain\" ] ; then\n         \"$MIRIDIR\"/rustup-toolchain\n     fi\n \n-    if [ -f \".auto-everything\" ] || [ -f \".auto-fmt\" ] ; then\n+    if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-fmt\" ] ; then\n         $0 fmt\n     fi\n \n-    if [ -f \".auto-everything\" ] || [ -f \".auto-clippy\" ] ; then\n+    if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-clippy\" ] ; then\n         $0 clippy -- -D warnings\n     fi\n fi\n \n-## Preparation\n-# macOS does not have a useful readlink/realpath so we have to use Python instead...\n-MIRIDIR=$(python3 -c 'import os, sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' \"$0\")\n-TOOLCHAIN=$(cd \"$MIRIDIR\"; rustup show active-toolchain | head -n 1 | cut -d ' ' -f 1)\n-\n-# Determine command.\n+## Determine command and toolchain.\n COMMAND=\"$1\"\n [ $# -gt 0 ] && shift\n+# Doing this *after* auto-toolchain logic above, since that might change the toolchain.\n+TOOLCHAIN=$(cd \"$MIRIDIR\"; rustup show active-toolchain | head -n 1 | cut -d ' ' -f 1)\n \n ## Handle some commands early, since they should *not* alter the environment.\n case \"$COMMAND\" in"}]}