{"sha": "cf1ffb0355e608453acc9803d6f317c16011d517", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMWZmYjAzNTVlNjA4NDUzYWNjOTgwM2Q2ZjMxN2MxNjAxMWQ1MTc=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-30T11:08:39Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-01T17:53:25Z"}, "message": "rustc_lint: Remove lint `plugin_as_library`", "tree": {"sha": "5d4994f5d946494d091832b9f0dc0b67dda4f8ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d4994f5d946494d091832b9f0dc0b67dda4f8ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf1ffb0355e608453acc9803d6f317c16011d517", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1ffb0355e608453acc9803d6f317c16011d517", "html_url": "https://github.com/rust-lang/rust/commit/cf1ffb0355e608453acc9803d6f317c16011d517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf1ffb0355e608453acc9803d6f317c16011d517/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db357a6e3be7b741a710a926d3ddeed79fc40482", "url": "https://api.github.com/repos/rust-lang/rust/commits/db357a6e3be7b741a710a926d3ddeed79fc40482", "html_url": "https://github.com/rust-lang/rust/commit/db357a6e3be7b741a710a926d3ddeed79fc40482"}], "stats": {"total": 88, "additions": 7, "deletions": 81}, "files": [{"sha": "386f6008d06aad0b1b15741662ec43fad2529cf4", "filename": "src/doc/rustc/src/lints/listing/warn-by-default.md", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "raw_url": "https://github.com/rust-lang/rust/raw/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flints%2Flisting%2Fwarn-by-default.md?ref=cf1ffb0355e608453acc9803d6f317c16011d517", "patch": "@@ -307,18 +307,6 @@ warning: path statement with no effect\n   |\n ```\n \n-## plugin-as-library\n-\n-This lint detects when compiler plugins are used as ordinary library in\n-non-plugin crate. Some example code that triggers this lint:\n-\n-```rust,ignore\n-#![feature(plugin)]\n-#![plugin(macro_crate_test)]\n-\n-extern crate macro_crate_test;\n-```\n-\n ## private-in-public\n \n This lint detects private items in public interfaces not caught by the old implementation. Some"}, {"sha": "495cdee62c87dc798f6049ba5a21278d79409012", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=cf1ffb0355e608453acc9803d6f317c16011d517", "patch": "@@ -24,8 +24,7 @@ mechanics of defining and loading a plugin.\n In the vast majority of cases, a plugin should *only* be used through\n `#![plugin]` and not through an `extern crate` item.  Linking a plugin would\n pull in all of libsyntax and librustc as dependencies of your crate.  This is\n-generally unwanted unless you are building another plugin.  The\n-`plugin_as_library` lint checks these guidelines.\n+generally unwanted unless you are building another plugin.\n \n The usual practice is to put compiler plugins in their own crate, separate from\n any `macro_rules!` macros or ordinary Rust code meant to be used by consumers"}, {"sha": "b08a095beac4ecbf06216087f7361fa00e8ef82d", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 41, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=cf1ffb0355e608453acc9803d6f317c16011d517", "patch": "@@ -24,7 +24,7 @@\n use std::fmt::Write;\n \n use rustc::hir::def::{Res, DefKind};\n-use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc::hir::def_id::DefId;\n use rustc::ty::{self, Ty, TyCtxt, layout::VariantIdx};\n use rustc::{lint, util};\n use rustc::lint::FutureIncompatibleInfo;\n@@ -800,45 +800,6 @@ impl EarlyLintPass for UnusedDocComment {\n     }\n }\n \n-declare_lint! {\n-    PLUGIN_AS_LIBRARY,\n-    Warn,\n-    \"compiler plugin used as ordinary library in non-plugin crate\"\n-}\n-\n-declare_lint_pass!(PluginAsLibrary => [PLUGIN_AS_LIBRARY]);\n-\n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for PluginAsLibrary {\n-    fn check_item(&mut self, cx: &LateContext<'_, '_>, it: &hir::Item) {\n-        if cx.tcx.plugin_registrar_fn(LOCAL_CRATE).is_some() {\n-            // We're compiling a plugin; it's fine to link other plugins.\n-            return;\n-        }\n-\n-        match it.kind {\n-            hir::ItemKind::ExternCrate(..) => (),\n-            _ => return,\n-        };\n-\n-        let def_id = cx.tcx.hir().local_def_id(it.hir_id);\n-        let prfn = match cx.tcx.extern_mod_stmt_cnum(def_id) {\n-            Some(cnum) => cx.tcx.plugin_registrar_fn(cnum),\n-            None => {\n-                // Probably means we aren't linking the crate for some reason.\n-                //\n-                // Not sure if / when this could happen.\n-                return;\n-            }\n-        };\n-\n-        if prfn.is_some() {\n-            cx.span_lint(PLUGIN_AS_LIBRARY,\n-                         it.span,\n-                         \"compiler plugin used as an ordinary library\");\n-        }\n-    }\n-}\n-\n declare_lint! {\n     NO_MANGLE_CONST_ITEMS,\n     Deny,\n@@ -1268,7 +1229,6 @@ declare_lint_pass!(\n         MISSING_DEBUG_IMPLEMENTATIONS,\n         ANONYMOUS_PARAMETERS,\n         UNUSED_DOC_COMMENTS,\n-        PLUGIN_AS_LIBRARY,\n         NO_MANGLE_CONST_ITEMS,\n         NO_MANGLE_GENERIC_ITEMS,\n         MUTABLE_TRANSMUTES,"}, {"sha": "ab4063c421cd24f6933c16aeb98a7121c5452e81", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=cf1ffb0355e608453acc9803d6f317c16011d517", "patch": "@@ -157,8 +157,6 @@ macro_rules! late_lint_mod_passes {\n             // Depends on types used in type definitions\n             MissingCopyImplementations: MissingCopyImplementations,\n \n-            PluginAsLibrary: PluginAsLibrary,\n-\n             // Depends on referenced function signatures in expressions\n             MutableTransmutes: MutableTransmutes,\n \n@@ -350,6 +348,7 @@ fn register_builtins(store: &mut lint::LintStore, no_interleave_lints: bool) {\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/35896\");\n     store.register_removed(\"nested_impl_trait\",\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/59014\");\n+    store.register_removed(\"plugin_as_library\", \"plugins have been deprecated and retired\");\n }\n \n fn register_internals(store: &mut lint::LintStore) {"}, {"sha": "f21617be5d26f81a11834b78f7071cb533a93fc4", "filename": "src/test/ui-fulldeps/macro-crate-multi-decorator.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Ftest%2Fui-fulldeps%2Fmacro-crate-multi-decorator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Ftest%2Fui-fulldeps%2Fmacro-crate-multi-decorator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmacro-crate-multi-decorator.rs?ref=cf1ffb0355e608453acc9803d6f317c16011d517", "patch": "@@ -1,9 +1,4 @@\n-// run-pass\n-\n-#![allow(plugin_as_library)]\n-#![allow(dead_code)]\n-#![allow(unused_variables)]\n-#![allow(unused_imports)]\n+// check-pass\n // aux-build:macro-crate-test.rs\n // ignore-stage1\n "}, {"sha": "f231efc0a9a16f19a7afb9362524ce968369461a", "filename": "src/test/ui-fulldeps/plugin-as-extern-crate.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf1ffb0355e608453acc9803d6f317c16011d517/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs?ref=cf1ffb0355e608453acc9803d6f317c16011d517", "patch": "@@ -1,11 +1,10 @@\n+// check-pass\n // aux-build:empty-plugin.rs\n // ignore-cross-compile\n //\n // empty_plugin will not compile on a cross-compiled target because\n // libsyntax is not compiled for it.\n \n-#![deny(plugin_as_library)]\n+extern crate empty_plugin; // OK, plugin crates are still crates\n \n-extern crate empty_plugin; //~ ERROR compiler plugin used as an ordinary library\n-\n-fn main() { }\n+fn main() {}"}, {"sha": "d2fbb5d35172c5dfaa8f7f04c9ef319161be242e", "filename": "src/test/ui-fulldeps/plugin-as-extern-crate.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db357a6e3be7b741a710a926d3ddeed79fc40482/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.stderr?ref=db357a6e3be7b741a710a926d3ddeed79fc40482", "patch": "@@ -1,14 +0,0 @@\n-error: compiler plugin used as an ordinary library\n-  --> $DIR/plugin-as-extern-crate.rs:9:1\n-   |\n-LL | extern crate empty_plugin;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: lint level defined here\n-  --> $DIR/plugin-as-extern-crate.rs:7:9\n-   |\n-LL | #![deny(plugin_as_library)]\n-   |         ^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}]}