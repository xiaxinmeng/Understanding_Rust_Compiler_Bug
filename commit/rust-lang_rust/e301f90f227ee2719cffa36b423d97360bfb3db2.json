{"sha": "e301f90f227ee2719cffa36b423d97360bfb3db2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMDFmOTBmMjI3ZWUyNzE5Y2ZmYTM2YjQyM2Q5NzM2MGJmYjNkYjI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-01-14T23:54:56Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-01-14T23:55:22Z"}, "message": "Address comments", "tree": {"sha": "da5511adffbddc8de6dfad3e90f8d87127b4b74c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da5511adffbddc8de6dfad3e90f8d87127b4b74c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e301f90f227ee2719cffa36b423d97360bfb3db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e301f90f227ee2719cffa36b423d97360bfb3db2", "html_url": "https://github.com/rust-lang/rust/commit/e301f90f227ee2719cffa36b423d97360bfb3db2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e301f90f227ee2719cffa36b423d97360bfb3db2/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e459000bc1509805e18a74c402fd78e2881d0248", "url": "https://api.github.com/repos/rust-lang/rust/commits/e459000bc1509805e18a74c402fd78e2881d0248", "html_url": "https://github.com/rust-lang/rust/commit/e459000bc1509805e18a74c402fd78e2881d0248"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "698037e237101e8c50ced784cbd808873cdcfb06", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e301f90f227ee2719cffa36b423d97360bfb3db2/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e301f90f227ee2719cffa36b423d97360bfb3db2/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=e301f90f227ee2719cffa36b423d97360bfb3db2", "patch": "@@ -783,7 +783,8 @@ impl<'a, 'tcx> Visitor<'tcx> for NamePrivacyVisitor<'a, 'tcx> {\n     }\n \n     fn visit_mod(&mut self, _m: &'tcx hir::Mod, _s: Span, _n: ast::NodeId) {\n-        // Don't visit modules inside\n+        // Don't visit nested modules, since we run a separate visitor walk\n+        // for each module in `privacy_access_levels`\n     }\n \n     fn visit_nested_body(&mut self, body: hir::BodyId) {\n@@ -922,7 +923,8 @@ impl<'a, 'tcx> Visitor<'tcx> for TypePrivacyVisitor<'a, 'tcx> {\n     }\n \n     fn visit_mod(&mut self, _m: &'tcx hir::Mod, _s: Span, _n: ast::NodeId) {\n-        // Don't visit modules inside\n+        // Don't visit nested modules, since we run a separate visitor walk\n+        // for each module in `privacy_access_levels`\n     }\n \n     fn visit_nested_body(&mut self, body: hir::BodyId) {\n@@ -1710,7 +1712,7 @@ fn privacy_access_levels<'tcx>(\n \n     let krate = tcx.hir().krate();\n \n-    for &module in tcx.hir().krate().modules.keys() {\n+    for &module in krate.modules.keys() {\n         queries::check_mod_privacy::ensure(tcx, tcx.hir().local_def_id(module));\n     }\n "}]}