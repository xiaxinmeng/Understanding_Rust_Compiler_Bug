{"sha": "e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzY2NhYzhlZDNiNDQ3ZmZlY2ZiYmE3NDAyNzYwYzA4M2I5ZTUxZTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-03T10:44:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:55Z"}, "message": "rt: Renome rust_task::lock to port_lock", "tree": {"sha": "dc6043d94fc12f8443ba7aa75d3945f083863a91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc6043d94fc12f8443ba7aa75d3945f083863a91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "html_url": "https://github.com/rust-lang/rust/commit/e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa566ad2fdf4b2bb63af87b2aa6fda3d5d48ce6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa566ad2fdf4b2bb63af87b2aa6fda3d5d48ce6d", "html_url": "https://github.com/rust-lang/rust/commit/fa566ad2fdf4b2bb63af87b2aa6fda3d5d48ce6d"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "dcf01e4420e54422ec6c8521d1da21609dae7204", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "patch": "@@ -489,7 +489,7 @@ rust_port_detach(rust_port *port) {\n     // FIXME: Busy waiting until we're the only ref\n     bool done = false;\n     while (!done) {\n-        scoped_lock with(task->lock);\n+        scoped_lock with(task->port_lock);\n         done = port->ref_count == 1;\n     }\n }\n@@ -528,7 +528,7 @@ chan_id_send(type_desc *t, rust_task_id target_task_id,\n         rust_port *port = target_task->get_port_by_id(target_port_id);\n         if(port) {\n             port->send(sptr);\n-            scoped_lock with(target_task->lock);\n+            scoped_lock with(target_task->port_lock);\n             port->deref();\n             sent = true;\n         } else {"}, {"sha": "97fe6a892c8c02d24194fbaed9710b7decf3374b", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "patch": "@@ -21,8 +21,8 @@ rust_port::~rust_port() {\n }\n \n void rust_port::detach() {\n-    I(task->thread, !task->lock.lock_held_by_current_thread());\n-    scoped_lock with(task->lock);\n+    I(task->thread, !task->port_lock.lock_held_by_current_thread());\n+    scoped_lock with(task->port_lock);\n     {\n         task->release_port(id);\n     }"}, {"sha": "1e1b09a59c58e8eae5839a9ac19a9656293e6ce1", "filename": "src/rt/rust_port_selector.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_port_selector.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_port_selector.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port_selector.cpp?ref=e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "patch": "@@ -63,7 +63,7 @@ void\n rust_port_selector::msg_sent_on(rust_port *port) {\n     rust_task *task = port->task;\n \n-    I(task->thread, !task->lock.lock_held_by_current_thread());\n+    I(task->thread, !task->port_lock.lock_held_by_current_thread());\n     I(task->thread, !port->lock.lock_held_by_current_thread());\n     I(task->thread, !rendezvous_lock.lock_held_by_current_thread());\n "}, {"sha": "f2f3fa21c3e8e6321a9a8e8639dc564306a88386", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "patch": "@@ -108,7 +108,7 @@ void\n rust_task::delete_this()\n {\n     {\n-        scoped_lock with (lock);\n+        scoped_lock with (port_lock);\n         I(thread, port_table.is_empty());\n     }\n \n@@ -471,8 +471,8 @@ rust_task::calloc(size_t size, const char *tag) {\n }\n \n rust_port_id rust_task::register_port(rust_port *port) {\n-    I(thread, !lock.lock_held_by_current_thread());\n-    scoped_lock with(lock);\n+    I(thread, !port_lock.lock_held_by_current_thread());\n+    scoped_lock with(port_lock);\n \n     rust_port_id id = next_port_id++;\n     A(thread, id != INTPTR_MAX, \"Hit the maximum port id\");\n@@ -481,13 +481,13 @@ rust_port_id rust_task::register_port(rust_port *port) {\n }\n \n void rust_task::release_port(rust_port_id id) {\n-    I(thread, lock.lock_held_by_current_thread());\n+    I(thread, port_lock.lock_held_by_current_thread());\n     port_table.remove(id);\n }\n \n rust_port *rust_task::get_port_by_id(rust_port_id id) {\n-    I(thread, !lock.lock_held_by_current_thread());\n-    scoped_lock with(lock);\n+    I(thread, !port_lock.lock_held_by_current_thread());\n+    scoped_lock with(port_lock);\n     rust_port *port = NULL;\n     port_table.get(id, &port);\n     if (port) {\n@@ -510,7 +510,7 @@ rust_task::notify(bool success) {\n                 msg.result = !success ? tr_failure : tr_success;\n \n                 target_port->send(&msg);\n-                scoped_lock with(target_task->lock);\n+                scoped_lock with(target_task->port_lock);\n                 target_port->deref();\n             }\n             target_task->deref();"}, {"sha": "328b5c5ca9edfe2037f4916c2064fe581ef4d368", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/e3ccac8ed3b447ffecfbba7402760c083b9e51e2/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=e3ccac8ed3b447ffecfbba7402760c083b9e51e2", "patch": "@@ -89,8 +89,8 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     bool propagate_failure;\n \n-    lock_and_signal lock;\n-\n+    // Protects port_table\n+    lock_and_signal port_lock;\n     hash_map<rust_port_id, rust_port *> port_table;\n \n     rust_obstack dynastack;"}]}