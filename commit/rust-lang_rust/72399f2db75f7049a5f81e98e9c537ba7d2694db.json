{"sha": "72399f2db75f7049a5f81e98e9c537ba7d2694db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMzk5ZjJkYjc1ZjcwNDlhNWY4MWU5OGU5YzUzN2JhN2QyNjk0ZGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-10-14T12:07:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-10-14T14:21:11Z"}, "message": "Rename static mut to upper case", "tree": {"sha": "50b84840c5b364184734d83d15395eb9d17fee43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50b84840c5b364184734d83d15395eb9d17fee43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72399f2db75f7049a5f81e98e9c537ba7d2694db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72399f2db75f7049a5f81e98e9c537ba7d2694db", "html_url": "https://github.com/rust-lang/rust/commit/72399f2db75f7049a5f81e98e9c537ba7d2694db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72399f2db75f7049a5f81e98e9c537ba7d2694db/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "350b0d89467d53a6febd9439beeed03d4a2e8c04", "url": "https://api.github.com/repos/rust-lang/rust/commits/350b0d89467d53a6febd9439beeed03d4a2e8c04", "html_url": "https://github.com/rust-lang/rust/commit/350b0d89467d53a6febd9439beeed03d4a2e8c04"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "ec3215681f91e5f440bf8d10eadda1c309c817aa", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=72399f2db75f7049a5f81e98e9c537ba7d2694db", "patch": "@@ -271,22 +271,22 @@ fn test_zip_unzip() {\n \n #[test]\n fn test_vec_truncate_drop() {\n-    static mut drops: u32 = 0;\n+    static mut DROPS: u32 = 0;\n     struct Elem(i32);\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n \n     let mut v = vec![Elem(1), Elem(2), Elem(3), Elem(4), Elem(5)];\n-    assert_eq!(unsafe { drops }, 0);\n+    assert_eq!(unsafe { DROPS }, 0);\n     v.truncate(3);\n-    assert_eq!(unsafe { drops }, 2);\n+    assert_eq!(unsafe { DROPS }, 2);\n     v.truncate(0);\n-    assert_eq!(unsafe { drops }, 5);\n+    assert_eq!(unsafe { DROPS }, 5);\n }\n \n #[test]"}, {"sha": "9dfd34302686bfa098fc41a4db3f6a047b579af9", "filename": "src/libcollectionstest/vec_deque.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Flibcollectionstest%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Flibcollectionstest%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec_deque.rs?ref=72399f2db75f7049a5f81e98e9c537ba7d2694db", "patch": "@@ -695,12 +695,12 @@ fn test_show() {\n \n #[test]\n fn test_drop() {\n-    static mut drops: i32 = 0;\n+    static mut DROPS: i32 = 0;\n     struct Elem;\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n@@ -712,17 +712,17 @@ fn test_drop() {\n     ring.push_front(Elem);\n     drop(ring);\n \n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n }\n \n #[test]\n fn test_drop_with_pop() {\n-    static mut drops: i32 = 0;\n+    static mut DROPS: i32 = 0;\n     struct Elem;\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n@@ -735,20 +735,20 @@ fn test_drop_with_pop() {\n \n     drop(ring.pop_back());\n     drop(ring.pop_front());\n-    assert_eq!(unsafe { drops }, 2);\n+    assert_eq!(unsafe { DROPS }, 2);\n \n     drop(ring);\n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n }\n \n #[test]\n fn test_drop_clear() {\n-    static mut drops: i32 = 0;\n+    static mut DROPS: i32 = 0;\n     struct Elem;\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n@@ -759,10 +759,10 @@ fn test_drop_clear() {\n     ring.push_back(Elem);\n     ring.push_front(Elem);\n     ring.clear();\n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n \n     drop(ring);\n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n }\n \n #[test]"}, {"sha": "71e163321aea23a71b0e83e437ed187fcd4ee59b", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=72399f2db75f7049a5f81e98e9c537ba7d2694db", "patch": "@@ -387,7 +387,7 @@ mod tests {\n     #[test]\n     fn stampede_once() {\n         static O: Once = Once::new();\n-        static mut run: bool = false;\n+        static mut RUN: bool = false;\n \n         let (tx, rx) = channel();\n         for _ in 0..10 {\n@@ -396,21 +396,21 @@ mod tests {\n                 for _ in 0..4 { thread::yield_now() }\n                 unsafe {\n                     O.call_once(|| {\n-                        assert!(!run);\n-                        run = true;\n+                        assert!(!RUN);\n+                        RUN = true;\n                     });\n-                    assert!(run);\n+                    assert!(RUN);\n                 }\n                 tx.send(()).unwrap();\n             });\n         }\n \n         unsafe {\n             O.call_once(|| {\n-                assert!(!run);\n-                run = true;\n+                assert!(!RUN);\n+                RUN = true;\n             });\n-            assert!(run);\n+            assert!(RUN);\n         }\n \n         for _ in 0..10 {"}, {"sha": "65c85697ce720f6842a2fd52d6bb70626ac98d71", "filename": "src/rtstartup/rsbegin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Frtstartup%2Frsbegin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72399f2db75f7049a5f81e98e9c537ba7d2694db/src%2Frtstartup%2Frsbegin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frtstartup%2Frsbegin.rs?ref=72399f2db75f7049a5f81e98e9c537ba7d2694db", "patch": "@@ -44,7 +44,7 @@ pub mod eh_frames {\n \n     // Scratch space for unwinder's internal book-keeping.\n     // This is defined as `struct object` in $GCC/libgcc/unwind-dw2-fde.h.\n-    static mut obj: [isize; 6] = [0; 6];\n+    static mut OBJ: [isize; 6] = [0; 6];\n \n     // Unwind info registration/deregistration routines.\n     // See the docs of `unwind` module in libstd.\n@@ -56,13 +56,13 @@ pub mod eh_frames {\n     unsafe fn init() {\n         // register unwind info on module startup\n         rust_eh_register_frames(&__EH_FRAME_BEGIN__ as *const u8,\n-                                &mut obj as *mut _ as *mut u8);\n+                                &mut OBJ as *mut _ as *mut u8);\n     }\n \n     unsafe fn uninit() {\n         // unregister on shutdown\n         rust_eh_unregister_frames(&__EH_FRAME_BEGIN__ as *const u8,\n-                                  &mut obj as *mut _ as *mut u8);\n+                                  &mut OBJ as *mut _ as *mut u8);\n     }\n \n     // MSVC-specific init/uninit routine registration"}]}