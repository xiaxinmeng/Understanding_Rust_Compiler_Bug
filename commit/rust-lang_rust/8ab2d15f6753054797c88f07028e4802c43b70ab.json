{"sha": "8ab2d15f6753054797c88f07028e4802c43b70ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYjJkMTVmNjc1MzA1NDc5N2M4OGYwNzAyOGU0ODAyYzQzYjcwYWI=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2018-05-09T01:30:38Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2018-05-15T16:49:31Z"}, "message": "Add Option::xor method", "tree": {"sha": "d4f96192fc0a39b412dc4da697e615c7d65b7479", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4f96192fc0a39b412dc4da697e615c7d65b7479"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ab2d15f6753054797c88f07028e4802c43b70ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ab2d15f6753054797c88f07028e4802c43b70ab", "html_url": "https://github.com/rust-lang/rust/commit/8ab2d15f6753054797c88f07028e4802c43b70ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ab2d15f6753054797c88f07028e4802c43b70ab/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b183bd0ad40b0188fc242bfb9f68a0cf1704dbd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b183bd0ad40b0188fc242bfb9f68a0cf1704dbd9", "html_url": "https://github.com/rust-lang/rust/commit/b183bd0ad40b0188fc242bfb9f68a0cf1704dbd9"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "28f37f72d6f9df33172b5eced84265de40414126", "filename": "src/libcore/option.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8ab2d15f6753054797c88f07028e4802c43b70ab/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ab2d15f6753054797c88f07028e4802c43b70ab/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=8ab2d15f6753054797c88f07028e4802c43b70ab", "patch": "@@ -705,6 +705,42 @@ impl<T> Option<T> {\n         }\n     }\n \n+    /// Returns [`Some`] if exactly one of `self`, `optb` is [`Some`], otherwise returns `None`.\n+    ///\n+    /// [`Some`]: #variant.Some\n+    /// [`None`]: #variant.None\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(option_xor)]\n+    ///\n+    /// let x = Some(2);\n+    /// let y: Option<u32> = None;\n+    /// assert_eq!(x.xor(y), Some(2));\n+    ///\n+    /// let x: Option<u32> = None;\n+    /// let y = Some(2);\n+    /// assert_eq!(x.xor(y), Some(2));\n+    ///\n+    /// let x = Some(2);\n+    /// let y = Some(2);\n+    /// assert_eq!(x.xor(y), None);\n+    ///\n+    /// let x: Option<u32> = None;\n+    /// let y: Option<u32> = None;\n+    /// assert_eq!(x.xor(y), None);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"option_xor\", issue = \"50512\")]\n+    pub fn xor(self, optb: Option<T>) -> Option<T> {\n+        match (self, optb) {\n+            (Some(a), None) => Some(a),\n+            (None, Some(b)) => Some(b),\n+            _ => None,\n+        }\n+    }\n+\n     /////////////////////////////////////////////////////////////////////////\n     // Entry-like operations to insert if None and return a reference\n     /////////////////////////////////////////////////////////////////////////"}]}