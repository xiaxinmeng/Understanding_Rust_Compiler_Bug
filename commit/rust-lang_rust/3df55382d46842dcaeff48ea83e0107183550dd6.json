{"sha": "3df55382d46842dcaeff48ea83e0107183550dd6", "node_id": "C_kwDOAAsO6NoAKDNkZjU1MzgyZDQ2ODQyZGNhZWZmNDhlYTgzZTAxMDcxODM1NTBkZDY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-17T13:41:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-17T13:41:55Z"}, "message": "Rollup merge of #111625 - Zoxc:rustc_middle-query-move, r=cjgillot\n\nMove rustc_middle/src/ty/query.rs to rustc_middle/src/query/plumbing.rs\n\nThis just keeps the query modules together.\n\nr? `@cjgillot`", "tree": {"sha": "dc86a8e2d4f2451d1b40371eda56eb4908a75fe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc86a8e2d4f2451d1b40371eda56eb4908a75fe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df55382d46842dcaeff48ea83e0107183550dd6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkZNmjCRBK7hj4Ov3rIwAA5HAIABekXQPZ0md+B24mvU0J5t+j\nxyQleugJRAFe1asZmiZE4lp1bcq7scMyTP4VtJtCtQ7EKyqvYY107GGYOAr5EFnn\nzKkVNqSKTMO+Ur8tRAAlfBo+9fi7IAe0VrWZ/gN+4y253rfatO3Y3UOUTBPLrD+0\nRZ94E1yOjZ5xedU5dT58IB+ytyTQQqppjIl5bAtnrK396SBuZk88oHIoUFdj+/IE\nGnGNabuPGw8IVKTW5/d3OuaAay+j6UPfJJ6dyqT7v5+s8s31cvVgkfkrwPo/Edtn\ncJduVkSbo5YGqHRtwUefAKTI3BVsBfCHfz3KJKrYcet+bIQmMAxdZ0Syvkz9Uis=\n=AYTQ\n-----END PGP SIGNATURE-----\n", "payload": "tree dc86a8e2d4f2451d1b40371eda56eb4908a75fe7\nparent 291ced5e9a9cfb423793cf065f873d2171c19c6a\nparent 54b582a0e8093844bfd42a5f5761212730e7ce05\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684330915 +0530\ncommitter GitHub <noreply@github.com> 1684330915 +0530\n\nRollup merge of #111625 - Zoxc:rustc_middle-query-move, r=cjgillot\n\nMove rustc_middle/src/ty/query.rs to rustc_middle/src/query/plumbing.rs\n\nThis just keeps the query modules together.\n\nr? `@cjgillot`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df55382d46842dcaeff48ea83e0107183550dd6", "html_url": "https://github.com/rust-lang/rust/commit/3df55382d46842dcaeff48ea83e0107183550dd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df55382d46842dcaeff48ea83e0107183550dd6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "291ced5e9a9cfb423793cf065f873d2171c19c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/291ced5e9a9cfb423793cf065f873d2171c19c6a", "html_url": "https://github.com/rust-lang/rust/commit/291ced5e9a9cfb423793cf065f873d2171c19c6a"}, {"sha": "54b582a0e8093844bfd42a5f5761212730e7ce05", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b582a0e8093844bfd42a5f5761212730e7ce05", "html_url": "https://github.com/rust-lang/rust/commit/54b582a0e8093844bfd42a5f5761212730e7ce05"}], "stats": {"total": 62, "additions": 29, "deletions": 33}, "files": [{"sha": "c591ff75ab878db7fdd9d7a81177d65ead33f2c6", "filename": "compiler/rustc_const_eval/src/const_eval/error.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -3,7 +3,8 @@ use std::fmt;\n \n use rustc_errors::Diagnostic;\n use rustc_middle::mir::AssertKind;\n-use rustc_middle::ty::{layout::LayoutError, query::TyCtxtAt, ConstInt};\n+use rustc_middle::query::TyCtxtAt;\n+use rustc_middle::ty::{layout::LayoutError, ConstInt};\n use rustc_span::{Span, Symbol};\n \n use super::InterpCx;"}, {"sha": "040eba10eb4f708e543a4845960e7e8e5f387897", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -8,13 +8,12 @@ use rustc_hir::{self as hir, def_id::DefId, definitions::DefPathData};\n use rustc_index::IndexVec;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::{ErrorHandled, InterpError, ReportedErrorInfo};\n+use rustc_middle::query::TyCtxtAt;\n use rustc_middle::ty::layout::{\n     self, FnAbiError, FnAbiOfHelpers, FnAbiRequest, LayoutError, LayoutOf, LayoutOfHelpers,\n     TyAndLayout,\n };\n-use rustc_middle::ty::{\n-    self, query::TyCtxtAt, subst::SubstsRef, ParamEnv, Ty, TyCtxt, TypeFoldable,\n-};\n+use rustc_middle::ty::{self, subst::SubstsRef, ParamEnv, Ty, TyCtxt, TypeFoldable};\n use rustc_mir_dataflow::storage::always_storage_live_locals;\n use rustc_session::Limit;\n use rustc_span::Span;"}, {"sha": "22ee2a8c5e55e6af6eaa2d814aa9f927e2d92801", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -95,7 +95,6 @@ pub mod middle;\n pub mod mir;\n pub mod thir;\n pub mod traits;\n-#[macro_use]\n pub mod ty;\n pub mod util;\n mod values;"}, {"sha": "055d8e9a352bc6fe0f0dc1b9354a134cac12e41d", "filename": "compiler/rustc_middle/src/mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -1,7 +1,8 @@\n use super::{AllocId, AllocRange, ConstAlloc, Pointer, Scalar};\n \n use crate::mir::interpret::ConstValue;\n-use crate::ty::{layout, query::TyCtxtAt, tls, Ty, ValTree};\n+use crate::query::TyCtxtAt;\n+use crate::ty::{layout, tls, Ty, ValTree};\n \n use rustc_data_structures::sync::Lock;\n use rustc_errors::{pluralize, struct_span_err, DiagnosticBuilder, ErrorGuaranteed};"}, {"sha": "f53dc8cb0ec134ff7a3b6b026068ef8f0177f713", "filename": "compiler/rustc_middle/src/mir/interpret/queries.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -1,9 +1,10 @@\n use super::{ErrorHandled, EvalToConstValueResult, EvalToValTreeResult, GlobalId};\n \n use crate::mir;\n+use crate::query::{TyCtxtAt, TyCtxtEnsure};\n use crate::ty::subst::InternalSubsts;\n use crate::ty::visit::TypeVisitableExt;\n-use crate::ty::{self, query::TyCtxtAt, query::TyCtxtEnsure, TyCtxt};\n+use crate::ty::{self, TyCtxt};\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_session::lint;"}, {"sha": "21c69662b9eaddf67587549ae6eeb395829fc9f5", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -25,6 +25,7 @@ use crate::mir::interpret::{\n use crate::mir::interpret::{LitToConstError, LitToConstInput};\n use crate::mir::mono::CodegenUnit;\n use crate::query::erase::{erase, restore, Erase};\n+use crate::query::plumbing::{query_ensure, query_get_at, DynamicQuery};\n use crate::thir;\n use crate::traits::query::{\n     CanonicalPredicateGoal, CanonicalProjectionGoal, CanonicalTyGoal,\n@@ -39,10 +40,6 @@ use crate::traits::specialization_graph;\n use crate::traits::{self, ImplSource};\n use crate::ty::fast_reject::SimplifiedType;\n use crate::ty::layout::ValidityRequirement;\n-use crate::ty::query::{\n-    query_ensure, query_get_at, DynamicQuery, IntoQueryParam, TyCtxtAt, TyCtxtEnsure,\n-    TyCtxtEnsureWithValue,\n-};\n use crate::ty::subst::{GenericArg, SubstsRef};\n use crate::ty::util::AlwaysRequiresDrop;\n use crate::ty::GeneratorDiagnosticData;\n@@ -90,8 +87,11 @@ use std::sync::Arc;\n \n pub mod erase;\n mod keys;\n-pub mod on_disk_cache;\n pub use keys::{AsLocalKey, Key, LocalCrate};\n+pub mod on_disk_cache;\n+#[macro_use]\n+pub mod plumbing;\n+pub use plumbing::{IntoQueryParam, TyCtxtAt, TyCtxtEnsure, TyCtxtEnsureWithValue};\n \n // Each of these queries corresponds to a function pointer field in the\n // `Providers` struct for requesting a value of that type, and a method"}, {"sha": "647f4826876daa700074f11a2860149e824ffc1c", "filename": "compiler/rustc_middle/src/query/plumbing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "previous_filename": "compiler/rustc_middle/src/ty/query.rs"}, {"sha": "e84d0100a5cba573c8f2edc887598855bc12aa3a", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -14,14 +14,14 @@ use crate::middle::resolve_bound_vars;\n use crate::middle::stability;\n use crate::mir::interpret::{self, Allocation, ConstAllocation};\n use crate::mir::{Body, Local, Place, PlaceElem, ProjectionKind, Promoted};\n+use crate::query::plumbing::QuerySystem;\n use crate::query::LocalCrate;\n use crate::query::Providers;\n+use crate::query::{IntoQueryParam, TyCtxtAt};\n use crate::thir::Thir;\n use crate::traits;\n use crate::traits::solve;\n use crate::traits::solve::{ExternalConstraints, ExternalConstraintsData};\n-use crate::ty::query::QuerySystem;\n-use crate::ty::query::{self, TyCtxtAt};\n use crate::ty::{\n     self, AdtDef, AdtDefData, AdtKind, Binder, Const, ConstData, FloatTy, FloatVar, FloatVid,\n     GenericParamDefKind, ImplPolarity, InferTy, IntTy, IntVar, IntVid, List, ParamConst, ParamTy,\n@@ -80,8 +80,6 @@ use std::iter;\n use std::mem;\n use std::ops::{Bound, Deref};\n \n-use super::query::IntoQueryParam;\n-\n const TINY_CONST_EVAL_LIMIT: Limit = Limit(20);\n \n #[allow(rustc::usage_of_ty_tykind)]\n@@ -512,7 +510,7 @@ pub struct GlobalCtxt<'tcx> {\n \n     untracked: Untracked,\n \n-    pub query_system: query::QuerySystem<'tcx>,\n+    pub query_system: QuerySystem<'tcx>,\n     pub(crate) query_kinds: &'tcx [DepKindStruct<'tcx>],\n \n     // Internal caches for metadata decoding. No need to track deps on this."}, {"sha": "5c1c419811e3881d7bb0d4926791a27032125ebe", "filename": "compiler/rustc_middle/src/ty/context/tls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext%2Ftls.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -1,7 +1,7 @@\n use super::{GlobalCtxt, TyCtxt};\n \n use crate::dep_graph::TaskDepsRef;\n-use crate::ty::query;\n+use crate::query::plumbing::QueryJobId;\n use rustc_data_structures::sync::{self, Lock};\n use rustc_errors::Diagnostic;\n #[cfg(not(parallel_compiler))]\n@@ -22,7 +22,7 @@ pub struct ImplicitCtxt<'a, 'tcx> {\n \n     /// The current query job, if any. This is updated by `JobOwner::start` in\n     /// `ty::query::plumbing` when executing a query.\n-    pub query: Option<query::QueryJobId>,\n+    pub query: Option<QueryJobId>,\n \n     /// Where to store diagnostics for the current query job, if any.\n     /// This is updated by `JobOwner::start` in `ty::query::plumbing` when executing a query."}, {"sha": "ba91e5aea5a5cf17f1812b0750949dfa9ca7f05b", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -1,5 +1,6 @@\n use crate::fluent_generated as fluent;\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use crate::query::TyCtxtAt;\n use crate::ty::normalize_erasing_regions::NormalizationError;\n use crate::ty::{self, ReprOptions, Ty, TyCtxt, TypeVisitableExt};\n use rustc_errors::{DiagnosticBuilder, Handler, IntoDiagnostic};\n@@ -543,20 +544,20 @@ impl<'tcx> HasTyCtxt<'tcx> for TyCtxt<'tcx> {\n     }\n }\n \n-impl<'tcx> HasDataLayout for ty::query::TyCtxtAt<'tcx> {\n+impl<'tcx> HasDataLayout for TyCtxtAt<'tcx> {\n     #[inline]\n     fn data_layout(&self) -> &TargetDataLayout {\n         &self.data_layout\n     }\n }\n \n-impl<'tcx> HasTargetSpec for ty::query::TyCtxtAt<'tcx> {\n+impl<'tcx> HasTargetSpec for TyCtxtAt<'tcx> {\n     fn target_spec(&self) -> &Target {\n         &self.sess.target\n     }\n }\n \n-impl<'tcx> HasTyCtxt<'tcx> for ty::query::TyCtxtAt<'tcx> {\n+impl<'tcx> HasTyCtxt<'tcx> for TyCtxtAt<'tcx> {\n     #[inline]\n     fn tcx(&self) -> TyCtxt<'tcx> {\n         **self\n@@ -683,7 +684,7 @@ impl<'tcx> LayoutOfHelpers<'tcx> for LayoutCx<'tcx, TyCtxt<'tcx>> {\n     }\n }\n \n-impl<'tcx> LayoutOfHelpers<'tcx> for LayoutCx<'tcx, ty::query::TyCtxtAt<'tcx>> {\n+impl<'tcx> LayoutOfHelpers<'tcx> for LayoutCx<'tcx, TyCtxtAt<'tcx>> {\n     type LayoutOfResult = Result<TyAndLayout<'tcx>, LayoutError<'tcx>>;\n \n     #[inline]"}, {"sha": "be0d1e61a46b011fe7f3386a3cc4fc21d0c7f8cc", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -122,8 +122,6 @@ pub mod inhabitedness;\n pub mod layout;\n pub mod normalize_erasing_regions;\n pub mod print;\n-#[macro_use]\n-pub mod query;\n pub mod relate;\n pub mod subst;\n pub mod trait_def;"}, {"sha": "4491d78648f7a1b061812df24d13f9e99fe264d3", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -1,6 +1,6 @@\n use crate::mir::interpret::{AllocRange, GlobalAlloc, Pointer, Provenance, Scalar};\n+use crate::query::IntoQueryParam;\n use crate::query::Providers;\n-use crate::ty::query::IntoQueryParam;\n use crate::ty::{\n     self, ConstInt, ParamConst, ScalarInt, Term, TermKind, Ty, TyCtxt, TypeFoldable,\n     TypeSuperFoldable, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,"}, {"sha": "35b154b7b34d1c52db2aac6c2fff5283ed1d14cd", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -185,9 +185,9 @@ use rustc_middle::mir::interpret::{ErrorHandled, GlobalAlloc, Scalar};\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n use rustc_middle::mir::visit::Visitor as MirVisitor;\n use rustc_middle::mir::{self, Local, Location};\n+use rustc_middle::query::TyCtxtAt;\n use rustc_middle::ty::adjustment::{CustomCoerceUnsized, PointerCast};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n-use rustc_middle::ty::query::TyCtxtAt;\n use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts};\n use rustc_middle::ty::{\n     self, GenericParamDefKind, Instance, InstanceDef, Ty, TyCtxt, TypeFoldable, TypeVisitableExt,"}, {"sha": "ecc50c3f664fd9f04dd35eaa735ac6d92e3cd3d4", "filename": "compiler/rustc_monomorphize/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -12,10 +12,9 @@ extern crate rustc_middle;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n use rustc_fluent_macro::fluent_messages;\n use rustc_hir::lang_items::LangItem;\n-use rustc_middle::query::Providers;\n+use rustc_middle::query::{Providers, TyCtxtAt};\n use rustc_middle::traits;\n use rustc_middle::ty::adjustment::CustomCoerceUnsized;\n-use rustc_middle::ty::query::TyCtxtAt;\n use rustc_middle::ty::{self, Ty};\n \n mod collector;"}, {"sha": "b76734dd072948b6bc99a1ff38007ec28abda06b", "filename": "compiler/rustc_query_impl/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -24,12 +24,12 @@ use rustc_middle::dep_graph::DepNodeIndex;\n use rustc_middle::dep_graph::{self, DepKind, DepKindStruct};\n use rustc_middle::query::erase::{erase, restore, Erase};\n use rustc_middle::query::on_disk_cache::OnDiskCache;\n+use rustc_middle::query::plumbing::{DynamicQuery, QuerySystem, QuerySystemFns};\n use rustc_middle::query::AsLocalKey;\n use rustc_middle::query::{\n     query_keys, query_provided, query_provided_to_value, query_storage, query_values,\n     DynamicQueries, ExternProviders, Providers, QueryCaches, QueryEngine, QueryStates,\n };\n-use rustc_middle::ty::query::{DynamicQuery, QuerySystem, QuerySystemFns};\n use rustc_middle::ty::TyCtxt;\n use rustc_query_system::dep_graph::SerializedDepNodeIndex;\n use rustc_query_system::ich::StableHashingContext;"}, {"sha": "79d8abc4b694ca809a0ca634e065e8ce38818505", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -716,8 +716,7 @@ macro_rules! define_queries {\n \n         mod query_structs {\n             use super::*;\n-            use rustc_middle::ty::query::QueryStruct;\n-            use rustc_middle::ty::query::QueryKeyStringCache;\n+            use rustc_middle::query::plumbing::{QueryKeyStringCache, QueryStruct};\n             use rustc_middle::dep_graph::DepKind;\n             use crate::QueryConfigRestored;\n "}, {"sha": "e042ee62dfe52c2e4a1d1d7fd8f1e80173b4aecf", "filename": "compiler/rustc_query_impl/src/profiling_support.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_query_impl%2Fsrc%2Fprofiling_support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df55382d46842dcaeff48ea83e0107183550dd6/compiler%2Frustc_query_impl%2Fsrc%2Fprofiling_support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fprofiling_support.rs?ref=3df55382d46842dcaeff48ea83e0107183550dd6", "patch": "@@ -2,7 +2,7 @@ use measureme::{StringComponent, StringId};\n use rustc_data_structures::profiling::SelfProfiler;\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, LOCAL_CRATE};\n use rustc_hir::definitions::DefPathData;\n-use rustc_middle::ty::query::QueryKeyStringCache;\n+use rustc_middle::query::plumbing::QueryKeyStringCache;\n use rustc_middle::ty::TyCtxt;\n use rustc_query_system::query::QueryCache;\n use std::fmt::Debug;"}]}