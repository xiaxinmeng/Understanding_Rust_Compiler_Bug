{"sha": "4525eb112b0d154204268b8c5a88263700191d02", "node_id": "C_kwDOAAsO6NoAKDQ1MjVlYjExMmIwZDE1NDIwNDI2OGI4YzVhODgyNjM3MDAxOTFkMDI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-11-17T22:24:39Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-11-17T22:37:34Z"}, "message": "rustdoc: use `code-header` class to format enum variants\n\nThe font size and weights should be exactly the same after this commit,\nbut the spacing is changed to be exactly the same as methods.", "tree": {"sha": "9f71dd4411225cacf3a6c8ba2f50117cbbb39ec7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f71dd4411225cacf3a6c8ba2f50117cbbb39ec7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4525eb112b0d154204268b8c5a88263700191d02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4525eb112b0d154204268b8c5a88263700191d02", "html_url": "https://github.com/rust-lang/rust/commit/4525eb112b0d154204268b8c5a88263700191d02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4525eb112b0d154204268b8c5a88263700191d02/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83356b78c4ff3e7d84e977aa6143793545967301", "url": "https://api.github.com/repos/rust-lang/rust/commits/83356b78c4ff3e7d84e977aa6143793545967301", "html_url": "https://github.com/rust-lang/rust/commit/83356b78c4ff3e7d84e977aa6143793545967301"}], "stats": {"total": 43, "additions": 19, "deletions": 24}, "files": [{"sha": "c95f117a205886dc06c5c32937884b07d3fd9d2a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4525eb112b0d154204268b8c5a88263700191d02/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4525eb112b0d154204268b8c5a88263700191d02/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=4525eb112b0d154204268b8c5a88263700191d02", "patch": "@@ -19,8 +19,8 @@ use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, get_filtered_impls_for_reference,\n     item_ty_to_section, notable_traits_button, notable_traits_json, render_all_impls,\n     render_assoc_item, render_assoc_items, render_attributes_in_code, render_attributes_in_pre,\n-    render_impl, render_rightside, render_stability_since_raw, AssocItemLink, Context,\n-    ImplRenderingParameters,\n+    render_impl, render_rightside, render_stability_since_raw,\n+    render_stability_since_raw_with_extra, AssocItemLink, Context, ImplRenderingParameters,\n };\n use crate::clean;\n use crate::config::ModuleSorting;\n@@ -1267,30 +1267,30 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n             document_non_exhaustive_header(it)\n         );\n         document_non_exhaustive(w, it);\n+        write!(w, \"<div class=\\\"variants\\\">\");\n         for variant in e.variants() {\n             let id = cx.derive_id(format!(\"{}.{}\", ItemType::Variant, variant.name.unwrap()));\n             write!(\n                 w,\n-                \"<h3 id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n-                    <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n-                    <code>{name}\",\n+                \"<section id=\\\"{id}\\\" class=\\\"variant\\\">\\\n+                    <a href=\\\"#{id}\\\" class=\\\"anchor\\\"></a>\",\n                 id = id,\n-                name = variant.name.unwrap()\n             );\n-            if let clean::VariantItem(clean::Variant::Tuple(ref s)) = *variant.kind {\n-                w.write_str(\"(\");\n-                print_tuple_struct_fields(w, cx, s);\n-                w.write_str(\")\");\n-            }\n-            w.write_str(\"</code>\");\n-            render_stability_since_raw(\n+            render_stability_since_raw_with_extra(\n                 w,\n                 variant.stable_since(tcx),\n                 variant.const_stability(tcx),\n                 it.stable_since(tcx),\n                 it.const_stable_since(tcx),\n+                \" rightside\",\n             );\n-            w.write_str(\"</h3>\");\n+            write!(w, \"<h3 class=\\\"code-header\\\">{name}\", name = variant.name.unwrap());\n+            if let clean::VariantItem(clean::Variant::Tuple(ref s)) = *variant.kind {\n+                w.write_str(\"(\");\n+                print_tuple_struct_fields(w, cx, s);\n+                w.write_str(\")\");\n+            }\n+            w.write_str(\"</h3></section>\");\n \n             use crate::clean::Variant;\n \n@@ -1324,7 +1324,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n                             write!(\n                                 w,\n                                 \"<div class=\\\"sub-variant-field\\\">\\\n-                                 <span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n+                                 <span id=\\\"{id}\\\" class=\\\"small-section-header\\\">\\\n                                      <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n                                      <code>{f}:&nbsp;{t}</code>\\\n                                  </span>\",\n@@ -1343,6 +1343,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n \n             document(w, cx, variant, Some(it), HeadingOffset::H4);\n         }\n+        write!(w, \"</div>\");\n     }\n     let def_id = it.item_id.expect_def_id();\n     render_assoc_items(w, cx, it, def_id, AssocItemRender::All);"}, {"sha": "27ffd7682e9d88d848a5e9347824090124a8abdf", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4525eb112b0d154204268b8c5a88263700191d02/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/4525eb112b0d154204268b8c5a88263700191d02/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=4525eb112b0d154204268b8c5a88263700191d02", "patch": "@@ -709,16 +709,14 @@ a {\n }\n \n .small-section-header {\n-\tdisplay: flex;\n-\tjustify-content: space-between;\n \tposition: relative;\n }\n \n .small-section-header:hover > .anchor {\n \tdisplay: initial;\n }\n \n-.impl:hover > .anchor, .trait-impl:hover > .anchor {\n+.impl:hover > .anchor, .trait-impl:hover > .anchor, .variant:hover > .anchor {\n \tdisplay: inline-block;\n \tposition: absolute;\n }\n@@ -1235,12 +1233,6 @@ a.test-arrow:hover {\n \tfont-size: 1.25rem;\n }\n \n-h3.variant {\n-\tfont-weight: 600;\n-\tfont-size: 1.125rem;\n-\tmargin-bottom: 10px;\n-}\n-\n .sub-variant h4 {\n \tfont-size: 1rem;\n \tfont-weight: 400;\n@@ -1909,6 +1901,7 @@ in storage.js\n \t}\n }\n \n+.variant,\n .implementors-toggle > summary,\n .impl,\n #implementors-list > .docblock,\n@@ -1920,6 +1913,7 @@ in storage.js\n \tmargin-bottom: 0.75em;\n }\n \n+.variants > .docblock,\n .impl-items > .rustdoc-toggle[open]:not(:last-child),\n .methods > .rustdoc-toggle[open]:not(:last-child),\n .implementors-toggle[open]:not(:last-child) {"}]}