{"sha": "737e7a7b751f300de3a55a79ce530ea6e15fb64d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczN2U3YTdiNzUxZjMwMGRlM2E1NWE3OWNlNTMwZWE2ZTE1ZmI2NGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-05T16:04:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-05T16:04:50Z"}, "message": "Merge #7574\n\n7574: Remove various redundant clones r=kjeremy a=yoshuawuyts\n\nI noticed when running clippy through RA that there are a few instances where `clone` is called where it's not actually needed. I figured a small patch to remove these might be welcome here.\r\n\r\nThanks!\n\nCo-authored-by: Yoshua Wuyts <yoshuawuyts@gmail.com>", "tree": {"sha": "acd545965ff29bd45c44c338b13e36da58714714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acd545965ff29bd45c44c338b13e36da58714714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/737e7a7b751f300de3a55a79ce530ea6e15fb64d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHWyiCRBK7hj4Ov3rIwAAdHIIADNe/QqRQryI1wmAYwS/ckKw\nJnO0X8MI9RRYWCH25RN7J7x6tJqA0tBHJQl1oZ9iZnOeYCifWWQ4TrPhmO+fJlJx\nWhjJ0AjhNwK1mu6KQCEoCtFnmj72PyI/r+ZWpm4bf3z/0BtWXLmVd2NsEVpxIsXE\nnXnd76gtCUkjhxKdau9QgSKhdRiJP+HKphpfUCBJhvlRYeuI9TFem9MX8i7X3O/z\nfjbEAqY4drXx+1YE3aRByJRw0AIH9kgtk45wgdjx+cks2p0qYXX4kKym6yrT3Ps8\naqP1pKycpKAXIyYkee5JWDU84eW1mrcCq0wDaDhOYV1FZq2POeScVSN44Uj33rA=\n=3eT9\n-----END PGP SIGNATURE-----\n", "payload": "tree acd545965ff29bd45c44c338b13e36da58714714\nparent 2a75594ee894baad5339ff9708ca70f6f69e0a36\nparent 79d103d5b42c5b207c28b6eb8a6ab42f0c685ec5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1612541090 +0000\ncommitter GitHub <noreply@github.com> 1612541090 +0000\n\nMerge #7574\n\n7574: Remove various redundant clones r=kjeremy a=yoshuawuyts\n\nI noticed when running clippy through RA that there are a few instances where `clone` is called where it's not actually needed. I figured a small patch to remove these might be welcome here.\r\n\r\nThanks!\n\nCo-authored-by: Yoshua Wuyts <yoshuawuyts@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/737e7a7b751f300de3a55a79ce530ea6e15fb64d", "html_url": "https://github.com/rust-lang/rust/commit/737e7a7b751f300de3a55a79ce530ea6e15fb64d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/737e7a7b751f300de3a55a79ce530ea6e15fb64d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a75594ee894baad5339ff9708ca70f6f69e0a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a75594ee894baad5339ff9708ca70f6f69e0a36", "html_url": "https://github.com/rust-lang/rust/commit/2a75594ee894baad5339ff9708ca70f6f69e0a36"}, {"sha": "79d103d5b42c5b207c28b6eb8a6ab42f0c685ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d103d5b42c5b207c28b6eb8a6ab42f0c685ec5", "html_url": "https://github.com/rust-lang/rust/commit/79d103d5b42c5b207c28b6eb8a6ab42f0c685ec5"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "bba6c08e02d705fb18991809930514de78815daf", "filename": "crates/assists/src/assist_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fassists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fassists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fassist_context.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -162,7 +162,7 @@ impl Assists {\n         } else {\n             None\n         };\n-        assist.source_change = source_change.clone();\n+        assist.source_change = source_change;\n \n         self.buf.push(assist);\n         Some(())\n@@ -242,7 +242,7 @@ impl AssistBuilder {\n     }\n     pub(crate) fn create_file(&mut self, dst: AnchoredPathBuf, content: impl Into<String>) {\n         let file_system_edit =\n-            FileSystemEdit::CreateFile { dst: dst.clone(), initial_contents: content.into() };\n+            FileSystemEdit::CreateFile { dst: dst, initial_contents: content.into() };\n         self.source_change.push_file_system_edit(file_system_edit);\n     }\n "}, {"sha": "c18001e15dca74c5c1b624b276ecc707dbc14dc4", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -712,7 +712,7 @@ impl ExprCollector<'_> {\n         let statements =\n             block.statements().filter_map(|s| self.collect_stmt(s)).flatten().collect();\n         let tail = block.tail_expr().map(|e| self.collect_expr(e));\n-        let syntax_node_ptr = AstPtr::new(&block.clone().into());\n+        let syntax_node_ptr = AstPtr::new(&block.into());\n         let expr_id = self.alloc_expr(\n             Expr::Block { id: block_id, statements, tail, label: None },\n             syntax_node_ptr,"}, {"sha": "d3380e0f44d82ff6b814dd61078c8bf4d829b7c4", "filename": "crates/hir_def/src/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdata.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -43,7 +43,7 @@ impl FunctionData {\n             name: func.name.clone(),\n             params: func.params.iter().map(|id| item_tree[*id].clone()).collect(),\n             ret_type: item_tree[func.ret_type].clone(),\n-            attrs: item_tree.attrs(db, krate, ModItem::from(loc.id.value).into()).clone(),\n+            attrs: item_tree.attrs(db, krate, ModItem::from(loc.id.value).into()),\n             has_self_param: func.has_self_param,\n             has_body: func.has_body,\n             is_unsafe: func.is_unsafe,"}, {"sha": "6665d902d62c788fe5d2f506aa62756d2b35dd84", "filename": "crates/hir_def/src/test_db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftest_db.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -161,7 +161,7 @@ impl TestDB {\n             let node = src.map(|ptr| ptr.to_node(&root));\n             let frange = node.as_ref().original_file_range(db);\n \n-            let message = d.message().to_owned();\n+            let message = d.message();\n             actual.entry(frange.file_id).or_default().push((frange.range, message));\n         });\n "}, {"sha": "19da51acd5fcdaabe841bb79164fc934779b46f6", "filename": "crates/hir_ty/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -511,7 +511,7 @@ mod tests {\n             // FIXME: macros...\n             let file_id = src.file_id.original_file(&db);\n             let range = src.value.to_node(&root).text_range();\n-            let message = d.message().to_owned();\n+            let message = d.message();\n             actual.entry(file_id).or_default().push((range, message));\n         });\n "}, {"sha": "64cfdafc5140aa305eb0531fe4e0c99a2a39631b", "filename": "crates/proc_macro_api/src/rpc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -262,7 +262,7 @@ mod tests {\n \n         assert_eq!(task.macro_body, back.macro_body);\n \n-        let result = ExpansionResult { expansion: tt.clone() };\n+        let result = ExpansionResult { expansion: tt };\n         let json = serde_json::to_string(&result).unwrap();\n         let back: ExpansionResult = serde_json::from_str(&json).unwrap();\n "}, {"sha": "e3f57f3b2ac68d7c1e0c26794ce773588319fd56", "filename": "crates/test_utils/src/fixture.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737e7a7b751f300de3a55a79ce530ea6e15fb64d/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Ffixture.rs?ref=737e7a7b751f300de3a55a79ce530ea6e15fb64d", "patch": "@@ -95,16 +95,7 @@ impl Fixture {\n             }\n         }\n \n-        Fixture {\n-            path,\n-            text: String::new(),\n-            krate: krate,\n-            deps,\n-            cfg_atoms,\n-            cfg_key_values,\n-            edition,\n-            env,\n-        }\n+        Fixture { path, text: String::new(), krate, deps, cfg_atoms, cfg_key_values, edition, env }\n     }\n }\n "}]}