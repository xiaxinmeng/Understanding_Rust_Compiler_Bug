{"sha": "19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZTBiN2RhMWMwY2NhYmY5M2JjZGM5NGM3OGM0OWI5MzU5NDg0YzM=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-06-02T01:00:34Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-06-03T17:29:44Z"}, "message": "Remove is_import field", "tree": {"sha": "2e0cb1382cef41cb9b9cecb9fb839421b327ceac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e0cb1382cef41cb9b9cecb9fb839421b327ceac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "html_url": "https://github.com/rust-lang/rust/commit/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3575be60eab140e69e5a75fe5c3b4119c2a17179", "url": "https://api.github.com/repos/rust-lang/rust/commits/3575be60eab140e69e5a75fe5c3b4119c2a17179", "html_url": "https://github.com/rust-lang/rust/commit/3575be60eab140e69e5a75fe5c3b4119c2a17179"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "0adbdbe99333f1c2dd4e7f109f865f37fecc4c60", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "patch": "@@ -134,9 +134,6 @@ pub struct Export {\n     /// The visibility of the export.\n     /// We include non-`pub` exports for hygienic macros that get used from extern crates.\n     pub vis: ty::Visibility,\n-    /// True if from a `use` or and `extern crate`.\n-    /// Used in rustdoc.\n-    pub is_import: bool,\n }\n \n impl CtorKind {"}, {"sha": "a781fc7240ab3882394c651dcadbda484e0d94c7", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "patch": "@@ -1115,8 +1115,7 @@ impl_stable_hash_for!(struct hir::def::Export {\n     ident,\n     def,\n     vis,\n-    span,\n-    is_import\n+    span\n });\n \n impl<'a> HashStable<StableHashingContext<'a>>"}, {"sha": "fd00cde375b90054fcef50854f0509f1102ba581", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "patch": "@@ -665,7 +665,6 @@ impl<'a, 'tcx> CrateMetadata {\n                         def: def,\n                         vis: ty::Visibility::Public,\n                         span: DUMMY_SP,\n-                        is_import: false,\n                     });\n                 }\n             }\n@@ -705,7 +704,6 @@ impl<'a, 'tcx> CrateMetadata {\n                                     ident: Ident::from_interned_str(self.item_name(child_index)),\n                                     vis: self.get_visibility(child_index),\n                                     span: self.entry(child_index).span.decode((self, sess)),\n-                                    is_import: false,\n                                 });\n                             }\n                         }\n@@ -722,8 +720,7 @@ impl<'a, 'tcx> CrateMetadata {\n                     (self.get_def(child_index), def_key.disambiguated_data.data.get_opt_name()) {\n                     let ident = Ident::from_interned_str(name);\n                     let vis = self.get_visibility(child_index);\n-                    let is_import = false;\n-                    callback(def::Export { def, ident, vis, span, is_import });\n+                    callback(def::Export { def, ident, vis, span });\n                     // For non-re-export structs and variants add their constructors to children.\n                     // Re-export lists automatically contain constructors when necessary.\n                     match def {\n@@ -734,7 +731,7 @@ impl<'a, 'tcx> CrateMetadata {\n                                 callback(def::Export {\n                                     def: ctor_def,\n                                     vis: self.get_visibility(ctor_def_id.index),\n-                                    ident, span, is_import,\n+                                    ident, span,\n                                 });\n                             }\n                         }\n@@ -744,7 +741,7 @@ impl<'a, 'tcx> CrateMetadata {\n                             let ctor_kind = self.get_ctor_kind(child_index);\n                             let ctor_def = Def::VariantCtor(def_id, ctor_kind);\n                             let vis = self.get_visibility(child_index);\n-                            callback(def::Export { def: ctor_def, ident, vis, span, is_import });\n+                            callback(def::Export { def: ctor_def, ident, vis, span });\n                         }\n                         _ => {}\n                     }"}, {"sha": "fe6909f7591592b676614abeb523c94dd04cf70e", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "patch": "@@ -803,7 +803,6 @@ impl<'a> Resolver<'a> {\n                     def: def,\n                     vis: ty::Visibility::Public,\n                     span: item.span,\n-                    is_import: false,\n                 });\n             } else {\n                 self.unused_macros.insert(def_id);"}, {"sha": "c44f330128a2323cf28b69c5be869ccef4746b49", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "patch": "@@ -1008,7 +1008,6 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n                         def: def,\n                         span: binding.span,\n                         vis: binding.vis,\n-                        is_import: true,\n                     });\n                 }\n             }"}, {"sha": "4c773fc1dd78b7e1b7ae29b0fc8c489a836cd918", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e0b7da1c0ccabf93bcdc94c78c49b9359484c3/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=19e0b7da1c0ccabf93bcdc94c78c49b9359484c3", "patch": "@@ -68,7 +68,8 @@ impl<'a, 'tcx, 'rcx> LibEmbargoVisitor<'a, 'tcx, 'rcx> {\n         }\n \n         for item in self.cx.tcx.item_children(def_id).iter() {\n-            if !item.is_import || item.vis == Visibility::Public {\n+            if self.cx.tcx.def_key(item.def.def_id()).parent.map_or(false, |d| d == def_id.index) ||\n+                item.vis == Visibility::Public {\n                 self.visit_item(item.def);\n             }\n         }"}]}