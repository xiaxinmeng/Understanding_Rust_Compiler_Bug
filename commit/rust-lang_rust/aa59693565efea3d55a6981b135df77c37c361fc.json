{"sha": "aa59693565efea3d55a6981b135df77c37c361fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNTk2OTM1NjVlZmVhM2Q1NWE2OTgxYjEzNWRmNzdjMzdjMzYxZmM=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-10-01T21:29:16Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-10-02T14:02:04Z"}, "message": "syntax: remove ObsoleteManaged{Type,Expr}.", "tree": {"sha": "710186cd9e2806b03e7eb72c15ee2ea3d8e6e8ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/710186cd9e2806b03e7eb72c15ee2ea3d8e6e8ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa59693565efea3d55a6981b135df77c37c361fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa59693565efea3d55a6981b135df77c37c361fc", "html_url": "https://github.com/rust-lang/rust/commit/aa59693565efea3d55a6981b135df77c37c361fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa59693565efea3d55a6981b135df77c37c361fc/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db55e70c977f9e2a70e62ea819755ef02009db8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/db55e70c977f9e2a70e62ea819755ef02009db8e", "html_url": "https://github.com/rust-lang/rust/commit/db55e70c977f9e2a70e62ea819755ef02009db8e"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "1a6fb9b85dd255f7fcba5bd1e728d24f33f8933f", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aa59693565efea3d55a6981b135df77c37c361fc/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa59693565efea3d55a6981b135df77c37c361fc/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=aa59693565efea3d55a6981b135df77c37c361fc", "patch": "@@ -31,8 +31,6 @@ pub enum ObsoleteSyntax {\n     ObsoleteOwnedPattern,\n     ObsoleteOwnedVector,\n     ObsoleteOwnedSelf,\n-    ObsoleteManagedType,\n-    ObsoleteManagedExpr,\n     ObsoleteImportRenaming,\n     ObsoleteSubsliceMatch,\n     ObsoleteExternCrateRenaming,\n@@ -77,14 +75,6 @@ impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n                 \"`~self` is no longer supported\",\n                 \"write `self: Box<Self>` instead\"\n             ),\n-            ObsoleteManagedType => (\n-                \"`@` notation for managed pointers\",\n-                \"use `Gc<T>` in `std::gc` instead\"\n-            ),\n-            ObsoleteManagedExpr => (\n-                \"`@` notation for a managed pointer allocation\",\n-                \"use the `box(GC)` operator instead of `@`\"\n-            ),\n             ObsoleteImportRenaming => (\n                 \"`use foo = bar` syntax\",\n                 \"write `use bar as foo` instead\""}, {"sha": "7cce9c2dc3a800d57b15f02b03d09e8d6239630a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aa59693565efea3d55a6981b135df77c37c361fc/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa59693565efea3d55a6981b135df77c37c361fc/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=aa59693565efea3d55a6981b135df77c37c361fc", "patch": "@@ -1449,12 +1449,6 @@ impl<'a> Parser<'a> {\n                     t\n                 }\n             }\n-        } else if self.token == token::AT {\n-            // MANAGED POINTER\n-            self.bump();\n-            let span = self.last_span;\n-            self.obsolete(span, ObsoleteManagedType);\n-            TyUniq(self.parse_ty(plus_allowed))\n         } else if self.token == token::TILDE {\n             // OWNED POINTER\n             self.bump();\n@@ -2722,14 +2716,6 @@ impl<'a> Parser<'a> {\n             hi = e.span.hi;\n             ex = ExprAddrOf(m, e);\n           }\n-          token::AT => {\n-            self.bump();\n-            let span = self.last_span;\n-            self.obsolete(span, ObsoleteManagedExpr);\n-            let e = self.parse_prefix_expr();\n-            hi = e.span.hi;\n-            ex = self.mk_unary(UnUniq, e);\n-          }\n           token::TILDE => {\n             self.bump();\n             let last_span = self.last_span;"}]}