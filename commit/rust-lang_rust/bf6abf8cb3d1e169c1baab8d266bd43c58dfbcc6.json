{"sha": "bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmNmFiZjhjYjNkMWUxNjljMWJhYWI4ZDI2NmJkNDNjNThkZmJjYzY=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-02-14T14:20:43Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-02-16T08:12:28Z"}, "message": "Implement Show for 1-12 element tuples", "tree": {"sha": "ce3359bf21b757297412d6deacc6ed4e81cb4aec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce3359bf21b757297412d6deacc6ed4e81cb4aec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "html_url": "https://github.com/rust-lang/rust/commit/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d4fd50af3c16ffe43c8035b929374e13bb76793", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4fd50af3c16ffe43c8035b929374e13bb76793", "html_url": "https://github.com/rust-lang/rust/commit/5d4fd50af3c16ffe43c8035b929374e13bb76793"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "9a1fda07ecd5e2f1626c835ade3f9fb74f9d3037", "filename": "src/libstd/tuple.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6/src%2Flibstd%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6/src%2Flibstd%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftuple.rs?ref=bf6abf8cb3d1e169c1baab8d266bd43c58dfbcc6", "patch": "@@ -15,6 +15,8 @@\n use clone::Clone;\n #[cfg(not(test))] use cmp::*;\n #[cfg(not(test))] use default::Default;\n+use fmt;\n+use result::{Ok, Err};\n \n /// Method extensions to pairs where both types satisfy the `Clone` bound\n pub trait CloneableTuple<T, U> {\n@@ -176,6 +178,12 @@ macro_rules! tuple_impls {\n                     ($({ let x: $T = Default::default(); x},)+)\n                 }\n             }\n+\n+            impl<$($T: fmt::Show),+> fmt::Show for ($($T,)+) {\n+                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+                    write_tuple!(f.buf, $(self.$get_ref_fn()),+)\n+                }\n+            }\n         )+\n     }\n }\n@@ -202,6 +210,17 @@ macro_rules! lexical_cmp {\n     ($a:expr, $b:expr) => { ($a).cmp($b) };\n }\n \n+macro_rules! write_tuple {\n+    ($buf:expr, $x:expr) => (\n+        write!($buf, \"({},)\", *$x)\n+    );\n+    ($buf:expr, $hd:expr, $($tl:expr),+) => ({\n+        if_ok!(write!($buf, \"(\"));\n+        if_ok!(write!($buf, \"{}\", *$hd));\n+        $(if_ok!(write!($buf, \", {}\", *$tl));)+\n+        write!($buf, \")\")\n+    });\n+}\n \n tuple_impls! {\n     (Tuple1, ImmutableTuple1) {\n@@ -422,4 +441,11 @@ mod tests {\n         assert_eq!(small.cmp(&big), Less);\n         assert_eq!(big.cmp(&small), Greater);\n     }\n+\n+    #[test]\n+    fn test_show() {\n+        assert_eq!(format!(\"{}\", (1,)), ~\"(1,)\");\n+        assert_eq!(format!(\"{}\", (1, true)), ~\"(1, true)\");\n+        assert_eq!(format!(\"{}\", (1, ~\"hi\", true)), ~\"(1, hi, true)\");\n+    }\n }"}]}