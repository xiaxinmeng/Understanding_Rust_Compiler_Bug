{"sha": "fc81adb3c221c4d5687685742f6235c37128e8e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjODFhZGIzYzIyMWM0ZDU2ODc2ODU3NDJmNjIzNWMzNzEyOGU4ZTA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-07-31T20:40:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-04T09:02:00Z"}, "message": "Improve functions naming", "tree": {"sha": "0fb8ad9e862f60ab80dfea5e5362a5eac4ab76ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fb8ad9e862f60ab80dfea5e5362a5eac4ab76ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc81adb3c221c4d5687685742f6235c37128e8e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc81adb3c221c4d5687685742f6235c37128e8e0", "html_url": "https://github.com/rust-lang/rust/commit/fc81adb3c221c4d5687685742f6235c37128e8e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc81adb3c221c4d5687685742f6235c37128e8e0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2758de4b957fdd5f810db63b9128eaa9629770fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2758de4b957fdd5f810db63b9128eaa9629770fa", "html_url": "https://github.com/rust-lang/rust/commit/2758de4b957fdd5f810db63b9128eaa9629770fa"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "289b174b6f44fca1212922e9630c1522a3ef0a63", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc81adb3c221c4d5687685742f6235c37128e8e0/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc81adb3c221c4d5687685742f6235c37128e8e0/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=fc81adb3c221c4d5687685742f6235c37128e8e0", "patch": "@@ -16,7 +16,7 @@ use rustc::infer::InferOk;\n use rustc::middle::cstore::CrateStore;\n use std::fmt::Debug;\n \n-use self::def_ctor::{get_def_ctor_from_def_id, get_def_ctor_from_node_id};\n+use self::def_ctor::{get_def_from_def_id, get_def_from_node_id};\n use self::finder_trait::Finder;\n \n use super::*;\n@@ -34,13 +34,13 @@ impl<'a, 'tcx, 'rcx, 'cstore> AutoTraitFinder<'a, 'tcx, 'rcx, 'cstore> {\n     }\n \n     pub fn get_with_def_id(&self, def_id: DefId) -> Vec<Item> {\n-        get_def_ctor_from_def_id(&self.cx, def_id, &|def_ctor| {\n+        get_def_from_def_id(&self.cx, def_id, &|def_ctor| {\n             self.get_auto_trait_impls(def_id, &def_ctor, None)\n         })\n     }\n \n     pub fn get_with_node_id(&self, id: ast::NodeId, name: String) -> Vec<Item> {\n-        get_def_ctor_from_node_id(&self.cx, id, name, &|def_ctor, name| {\n+        get_def_from_node_id(&self.cx, id, name, &|def_ctor, name| {\n             let did = self.cx.tcx.hir.local_def_id(id);\n             self.get_auto_trait_impls(did, &def_ctor, Some(name))\n         })"}, {"sha": "05e57337c70e33166a8309425c4896f61e0a798b", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc81adb3c221c4d5687685742f6235c37128e8e0/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc81adb3c221c4d5687685742f6235c37128e8e0/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=fc81adb3c221c4d5687685742f6235c37128e8e0", "patch": "@@ -19,7 +19,7 @@ use core::DocAccessLevels;\n \n use super::*;\n \n-use self::def_ctor::{get_def_ctor_from_def_id, get_def_ctor_from_node_id};\n+use self::def_ctor::{get_def_from_def_id, get_def_from_node_id};\n use self::finder_trait::Finder;\n \n pub struct BlanketImplFinder<'a, 'tcx: 'a, 'rcx: 'a> {\n@@ -32,13 +32,13 @@ impl<'a, 'tcx, 'rcx> BlanketImplFinder <'a, 'tcx, 'rcx> {\n     }\n \n     pub fn get_with_def_id(&self, def_id: DefId) -> Vec<Item> {\n-        get_def_ctor_from_def_id(&self.cx, def_id, &|def_ctor| {\n+        get_def_from_def_id(&self.cx, def_id, &|def_ctor| {\n             self.get_blanket_impls(def_id, &def_ctor, None)\n         })\n     }\n \n     pub fn get_with_node_id(&self, id: ast::NodeId, name: String) -> Vec<Item> {\n-        get_def_ctor_from_node_id(&self.cx, id, name, &|def_ctor, name| {\n+        get_def_from_node_id(&self.cx, id, name, &|def_ctor, name| {\n             let did = self.cx.tcx.hir.local_def_id(id);\n             self.get_blanket_impls(did, &def_ctor, Some(name))\n         })"}, {"sha": "4db211b7f1e70f6bba0aa6299c8fa76ea7a372d5", "filename": "src/librustdoc/clean/def_ctor.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fc81adb3c221c4d5687685742f6235c37128e8e0/src%2Flibrustdoc%2Fclean%2Fdef_ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc81adb3c221c4d5687685742f6235c37128e8e0/src%2Flibrustdoc%2Fclean%2Fdef_ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fdef_ctor.rs?ref=fc81adb3c221c4d5687685742f6235c37128e8e0", "patch": "@@ -12,9 +12,9 @@ use core::DocContext;\n \n use super::*;\n \n-pub fn get_def_ctor_from_def_id<F>(cx: &DocContext,\n-                                   def_id: DefId,\n-                                   callback: &F,\n+pub fn get_def_from_def_id<F>(cx: &DocContext,\n+                              def_id: DefId,\n+                              callback: &F,\n ) -> Vec<Item>\n where F: Fn(& dyn Fn(DefId) -> Def) -> Vec<Item> {\n     let ty = cx.tcx.type_of(def_id);\n@@ -48,10 +48,10 @@ where F: Fn(& dyn Fn(DefId) -> Def) -> Vec<Item> {\n     }\n }\n \n-pub fn get_def_ctor_from_node_id<F>(cx: &DocContext,\n-                                    id: ast::NodeId,\n-                                    name: String,\n-                                    callback: &F,\n+pub fn get_def_from_node_id<F>(cx: &DocContext,\n+                               id: ast::NodeId,\n+                               name: String,\n+                               callback: &F,\n ) -> Vec<Item>\n where F: Fn(& dyn Fn(DefId) -> Def, String) -> Vec<Item> {\n     let item = &cx.tcx.hir.expect_item(id).node;"}]}