{"sha": "984d20aad8445ecbdc05d1dc3ea2de104c685af0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NGQyMGFhZDg0NDVlY2JkYzA1ZDFkYzNlYTJkZTEwNGM2ODVhZjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-09T14:59:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-09T15:01:54Z"}, "message": "cleanups", "tree": {"sha": "6de21908b9bb59d7d171fe76bb289a42de294257", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6de21908b9bb59d7d171fe76bb289a42de294257"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/984d20aad8445ecbdc05d1dc3ea2de104c685af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/984d20aad8445ecbdc05d1dc3ea2de104c685af0", "html_url": "https://github.com/rust-lang/rust/commit/984d20aad8445ecbdc05d1dc3ea2de104c685af0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/984d20aad8445ecbdc05d1dc3ea2de104c685af0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c9f6dc2cd3080009c4ce2c3f0f340949f4f53c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c9f6dc2cd3080009c4ce2c3f0f340949f4f53c", "html_url": "https://github.com/rust-lang/rust/commit/d9c9f6dc2cd3080009c4ce2c3f0f340949f4f53c"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "ae084c86c2f57c624a1f65b99db6862aed3ae5fa", "filename": "crates/ide_assists/src/handlers/extract_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/984d20aad8445ecbdc05d1dc3ea2de104c685af0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/984d20aad8445ecbdc05d1dc3ea2de104c685af0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_variable.rs?ref=984d20aad8445ecbdc05d1dc3ea2de104c685af0", "patch": "@@ -54,7 +54,7 @@ pub(crate) fn extract_variable(acc: &mut Assists, ctx: &AssistContext) -> Option\n \n             let var_name = match &field_shorthand {\n                 Some(it) => it.to_string(),\n-                None => suggest_name::variable(&to_extract, &ctx.sema),\n+                None => suggest_name::for_variable(&to_extract, &ctx.sema),\n             };\n             let expr_range = match &field_shorthand {\n                 Some(it) => it.syntax().text_range().cover(to_extract.syntax().text_range()),"}, {"sha": "899c773df5a4234780ed878ce6e1f9f49e3f1368", "filename": "crates/ide_assists/src/handlers/replace_impl_trait_with_generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/984d20aad8445ecbdc05d1dc3ea2de104c685af0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_impl_trait_with_generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/984d20aad8445ecbdc05d1dc3ea2de104c685af0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_impl_trait_with_generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_impl_trait_with_generic.rs?ref=984d20aad8445ecbdc05d1dc3ea2de104c685af0", "patch": "@@ -29,7 +29,7 @@ pub(crate) fn replace_impl_trait_with_generic(\n         \"Replace impl trait with generic\",\n         target,\n         |edit| {\n-            let type_param_name = suggest_name::generic_parameter(&impl_trait_type);\n+            let type_param_name = suggest_name::for_generic_parameter(&impl_trait_type);\n \n             let generic_param_list = fn_\n                 .generic_param_list()"}, {"sha": "b3aabeab37adc77cd146275250ae3c0dbbacf229", "filename": "crates/ide_assists/src/utils/suggest_name.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/984d20aad8445ecbdc05d1dc3ea2de104c685af0/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/984d20aad8445ecbdc05d1dc3ea2de104c685af0/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs?ref=984d20aad8445ecbdc05d1dc3ea2de104c685af0", "patch": "@@ -57,7 +57,7 @@ const USELESS_METHODS: &[&str] = &[\n     \"iter_mut\",\n ];\n \n-pub(crate) fn generic_parameter(ty: &ast::ImplTraitType) -> SmolStr {\n+pub(crate) fn for_generic_parameter(ty: &ast::ImplTraitType) -> SmolStr {\n     let c = ty\n         .type_bound_list()\n         .and_then(|bounds| bounds.syntax().text().char_at(0.into()))\n@@ -83,7 +83,8 @@ pub(crate) fn generic_parameter(ty: &ast::ImplTraitType) -> SmolStr {\n /// It also applies heuristics to filter out less informative names\n ///\n /// Currently it sticks to the first name found.\n-pub(crate) fn variable(expr: &ast::Expr, sema: &Semantics<'_, RootDatabase>) -> String {\n+// FIXME: Microoptimize and return a `SmolStr` here.\n+pub(crate) fn for_variable(expr: &ast::Expr, sema: &Semantics<'_, RootDatabase>) -> String {\n     // `from_param` does not benifit from stripping\n     // it need the largest context possible\n     // so we check firstmost\n@@ -284,7 +285,7 @@ mod tests {\n             frange.range,\n             \"selection is not an expression(yet contained in one)\"\n         );\n-        let name = variable(&expr, &sema);\n+        let name = for_variable(&expr, &sema);\n         assert_eq!(&name, expected);\n     }\n "}]}