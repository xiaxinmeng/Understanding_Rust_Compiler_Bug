{"sha": "43b457c5d61971ed4787b8557462281fce9f4341", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYjQ1N2M1ZDYxOTcxZWQ0Nzg3Yjg1NTc0NjIyODFmY2U5ZjQzNDE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-03-16T01:45:22Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-03-16T01:46:17Z"}, "message": "Comments only: associate FIXMEs in float libs with issue numbers", "tree": {"sha": "0d5a70291f30446e7b5df481c49319292bbcc6ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d5a70291f30446e7b5df481c49319292bbcc6ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43b457c5d61971ed4787b8557462281fce9f4341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43b457c5d61971ed4787b8557462281fce9f4341", "html_url": "https://github.com/rust-lang/rust/commit/43b457c5d61971ed4787b8557462281fce9f4341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43b457c5d61971ed4787b8557462281fce9f4341/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0972571cddcbbaa5fbf9e17dcc2732e820e5cb46", "url": "https://api.github.com/repos/rust-lang/rust/commits/0972571cddcbbaa5fbf9e17dcc2732e820e5cb46", "html_url": "https://github.com/rust-lang/rust/commit/0972571cddcbbaa5fbf9e17dcc2732e820e5cb46"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "6a053efb3db0bc72d3d950798f99bca63b79b422", "filename": "src/libcore/f32.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43b457c5d61971ed4787b8557462281fce9f4341/src%2Flibcore%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b457c5d61971ed4787b8557462281fce9f4341/src%2Flibcore%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff32.rs?ref=43b457c5d61971ed4787b8557462281fce9f4341", "patch": "@@ -55,6 +55,7 @@ pure fn gt(x: f32, y: f32) -> bool { ret x > y; }\n \n // FIXME replace the predicates below with llvm intrinsics or calls\n // to the libmath macros in the rust runtime for performance\n+// See Issue #1999\n \n #[doc = \"\n Returns true if `x` is a positive number, including +0.0f320 and +Infinity\n@@ -104,11 +105,13 @@ pure fn is_finite(x: f32) -> bool {\n }\n \n // FIXME add is_normal, is_subnormal, and fpclassify\n+// also see Issue #1999\n \n /* Module: consts */\n mod consts {\n \n     // FIXME replace with mathematical constants from cmath\n+    // (requires Issue #1433 to fix)\n     #[doc = \"Archimedes' constant\"]\n     const pi: f32 = 3.14159265358979323846264338327950288_f32;\n \n@@ -157,13 +160,14 @@ pure fn signbit(x: f32) -> int {\n #[cfg(target_os=\"macos\")]\n #[cfg(target_os=\"win32\")]\n pure fn logarithm(n: f32, b: f32) -> f32 {\n-    // FIXME check if it is good to use log2 instead of ln here;\n-    // in theory should be faster since the radix is 2\n     ret log2(n) / log2(b);\n }\n \n #[cfg(target_os=\"freebsd\")]\n pure fn logarithm(n: f32, b: f32) -> f32 {\n+    // FIXME check if it is good to use log2 instead of ln here;\n+    // in theory should be faster since the radix is 2\n+    // See Issue #2000\n     ret ln(n) / ln(b);\n }\n "}, {"sha": "047e6b8963bb5c0914bfd17e9edc746e1b9a5af0", "filename": "src/libcore/f64.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/43b457c5d61971ed4787b8557462281fce9f4341/src%2Flibcore%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b457c5d61971ed4787b8557462281fce9f4341/src%2Flibcore%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff64.rs?ref=43b457c5d61971ed4787b8557462281fce9f4341", "patch": "@@ -5,8 +5,9 @@\n import cmath::c_double::*;\n import cmath::c_double_targ_consts::*;\n \n-// FIXME find out why these have to be exported explicitly\n-\n+// Even though this module exports everything defined in it,\n+// because it contains re-exports, we also have to explicitly\n+// export locally defined things. That's a bit annoying.\n export add, sub, mul, div, rem, lt, le, gt, eq, eq, ne;\n export is_positive, is_negative, is_nonpositive, is_nonnegative;\n export is_zero, is_infinite, is_finite;\n@@ -27,6 +28,7 @@ export epsilon;\n // PORT check per architecture\n \n // FIXME obtain these in a different way\n+// (perhaps related to Issue #1433)\n \n const radix: uint = 2u;\n \n@@ -120,12 +122,13 @@ pure fn is_finite(x: f64) -> bool {\n }\n \n // FIXME add is_normal, is_subnormal, and fpclassify\n+// also see Issue #1999\n \n /* Module: consts */\n mod consts {\n \n     // FIXME replace with mathematical constants from cmath\n-\n+    // (requires Issue #1433 to fix)\n     #[doc = \"Archimedes' constant\"]\n     const pi: f64 = 3.14159265358979323846264338327950288_f64;\n \n@@ -174,13 +177,14 @@ pure fn signbit(x: f64) -> int {\n #[cfg(target_os=\"macos\")]\n #[cfg(target_os=\"win32\")]\n pure fn logarithm(n: f64, b: f64) -> f64 {\n-    // FIXME check if it is good to use log2 instead of ln here;\n-    // in theory should be faster since the radix is 2\n     ret log2(n) / log2(b);\n }\n \n #[cfg(target_os=\"freebsd\")]\n pure fn logarithm(n: f64, b: f64) -> f64 {\n+    // FIXME check if it is good to use log2 instead of ln here;\n+    // in theory should be faster since the radix is 2\n+    // See Issue #2000\n     ret ln(n) / ln(b);\n }\n "}, {"sha": "9699032dd77083b3ad589eaafa4fdb7617410228", "filename": "src/libcore/float.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43b457c5d61971ed4787b8557462281fce9f4341/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b457c5d61971ed4787b8557462281fce9f4341/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=43b457c5d61971ed4787b8557462281fce9f4341", "patch": "@@ -1,7 +1,8 @@\n #[doc = \"Operations and constants for `float`\"];\n \n-// FIXME find out why these have to be exported explicitly\n-\n+// Even though this module exports everything defined in it,\n+// because it contains re-exports, we also have to explicitly\n+// export locally defined things. That's a bit annoying.\n export to_str_common, to_str_exact, to_str, from_str;\n export add, sub, mul, div, rem, lt, le, gt, eq, eq, ne;\n export is_positive, is_negative, is_nonpositive, is_nonnegative;"}]}