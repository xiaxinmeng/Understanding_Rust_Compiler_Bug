{"sha": "e3396901c407da7caba2d28743259d62fac189a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMzk2OTAxYzQwN2RhN2NhYmEyZDI4NzQzMjU5ZDYyZmFjMTg5YTg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-04-01T12:12:46Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-04-01T12:19:25Z"}, "message": "Update Cranelift", "tree": {"sha": "06f8a9a980a2e283a59b1ae932d2bffafd743930", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f8a9a980a2e283a59b1ae932d2bffafd743930"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3396901c407da7caba2d28743259d62fac189a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3396901c407da7caba2d28743259d62fac189a8", "html_url": "https://github.com/rust-lang/rust/commit/e3396901c407da7caba2d28743259d62fac189a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3396901c407da7caba2d28743259d62fac189a8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0eab7d91330de1d18caecdde558369c77f642f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0eab7d91330de1d18caecdde558369c77f642f7", "html_url": "https://github.com/rust-lang/rust/commit/a0eab7d91330de1d18caecdde558369c77f642f7"}], "stats": {"total": 86, "additions": 13, "deletions": 73}, "files": [{"sha": "8c68bdcd282ad54dc3f6531b79b7a8913ee2865f", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e3396901c407da7caba2d28743259d62fac189a8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e3396901c407da7caba2d28743259d62fac189a8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e3396901c407da7caba2d28743259d62fac189a8", "patch": "@@ -45,15 +45,15 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n [[package]]\n name = \"cranelift-bforest\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"cranelift-entity\",\n ]\n \n [[package]]\n name = \"cranelift-codegen\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"byteorder\",\n  \"cranelift-bforest\",\n@@ -70,7 +70,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-codegen-meta\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"cranelift-codegen-shared\",\n  \"cranelift-entity\",\n@@ -79,17 +79,17 @@ dependencies = [\n [[package]]\n name = \"cranelift-codegen-shared\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n \n [[package]]\n name = \"cranelift-entity\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n \n [[package]]\n name = \"cranelift-frontend\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"log\",\n@@ -100,7 +100,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-module\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -112,7 +112,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-native\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"raw-cpuid\",\n@@ -122,7 +122,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-object\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"cranelift-module\",\n@@ -133,7 +133,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-simplejit\"\n version = \"0.61.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime/#ac7cd4c46abdc9d4f3ef3230386afd52177e5f7c\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime/#20e71858a1e5a71a4dbdc563c41e3367f06a04f6\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"cranelift-module\","}, {"sha": "6509e8ef5a1bcbcb00b9acd99ad3bdd33f46e26b", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 3, "deletions": 63, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/e3396901c407da7caba2d28743259d62fac189a8/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3396901c407da7caba2d28743259d62fac189a8/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=e3396901c407da7caba2d28743259d62fac189a8", "patch": "@@ -4,14 +4,14 @@ mod line_info;\n use crate::prelude::*;\n \n use cranelift_codegen::ir::{StackSlots, ValueLabel, ValueLoc};\n-use cranelift_codegen::isa::{RegUnit, TargetIsa};\n+use cranelift_codegen::isa::TargetIsa;\n use cranelift_codegen::ValueLocRange;\n \n use gimli::write::{\n     self, Address, AttributeValue, DwarfUnit, Expression, LineProgram, LineString, Location,\n     LocationList, Range, RangeList, UnitEntryId, Writer,\n };\n-use gimli::{Encoding, Format, LineEncoding, Register, RunTimeEndian, X86_64};\n+use gimli::{Encoding, Format, LineEncoding, RunTimeEndian, X86_64};\n \n pub(crate) use emit::{DebugReloc, DebugRelocName};\n \n@@ -351,71 +351,11 @@ fn place_location<'a, 'tcx>(\n     }\n }\n \n-\n-\n-\n-\n-// Adapted from https://github.com/bytecodealliance/wasmtime/blob/50496efb6bac32aaf469c6d9186b322de83549bf/crates/debug/src/transform/map_reg.rs\n-pub(crate) fn map_reg(isa: &dyn TargetIsa, reg: RegUnit) -> Register {\n-    // TODO avoid duplication with fde.rs\n-    assert!(isa.name() == \"x86\" && isa.pointer_bits() == 64);\n-    // Mapping from https://github.com/bytecodealliance/cranelift/pull/902 by @iximeow\n-    const X86_GP_REG_MAP: [Register; 16] = [\n-        X86_64::RAX,\n-        X86_64::RCX,\n-        X86_64::RDX,\n-        X86_64::RBX,\n-        X86_64::RSP,\n-        X86_64::RBP,\n-        X86_64::RSI,\n-        X86_64::RDI,\n-        X86_64::R8,\n-        X86_64::R9,\n-        X86_64::R10,\n-        X86_64::R11,\n-        X86_64::R12,\n-        X86_64::R13,\n-        X86_64::R14,\n-        X86_64::R15,\n-    ];\n-    const X86_XMM_REG_MAP: [Register; 16] = [\n-        X86_64::XMM0,\n-        X86_64::XMM1,\n-        X86_64::XMM2,\n-        X86_64::XMM3,\n-        X86_64::XMM4,\n-        X86_64::XMM5,\n-        X86_64::XMM6,\n-        X86_64::XMM7,\n-        X86_64::XMM8,\n-        X86_64::XMM9,\n-        X86_64::XMM10,\n-        X86_64::XMM11,\n-        X86_64::XMM12,\n-        X86_64::XMM13,\n-        X86_64::XMM14,\n-        X86_64::XMM15,\n-    ];\n-    let reg_info = isa.register_info();\n-    let bank = reg_info.bank_containing_regunit(reg).unwrap();\n-    match bank.name {\n-        \"IntRegs\" => {\n-            // x86 GP registers have a weird mapping to DWARF registers, so we use a\n-            // lookup table.\n-            X86_GP_REG_MAP[(reg - bank.first_unit) as usize]\n-        }\n-        \"FloatRegs\" => X86_XMM_REG_MAP[(reg - bank.first_unit) as usize],\n-        bank_name => {\n-            panic!(\"unsupported register bank: {}\", bank_name);\n-        }\n-    }\n-}\n-\n // Adapted from https://github.com/CraneStation/wasmtime/blob/5a1845b4caf7a5dba8eda1fef05213a532ed4259/crates/debug/src/transform/expression.rs#L59-L137\n fn translate_loc(isa: &dyn TargetIsa, loc: ValueLoc, stack_slots: &StackSlots) -> Option<Vec<u8>> {\n     match loc {\n         ValueLoc::Reg(reg) => {\n-            let machine_reg = map_reg(isa, reg).0 as u8;\n+            let machine_reg = cranelift_codegen::isa::fde::map_reg(isa, reg).unwrap().0 as u8;\n             assert!(machine_reg <= 32); // FIXME\n             Some(vec![gimli::constants::DW_OP_reg0.0 + machine_reg])\n         }"}]}