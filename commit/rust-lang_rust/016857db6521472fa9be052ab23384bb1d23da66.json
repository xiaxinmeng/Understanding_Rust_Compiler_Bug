{"sha": "016857db6521472fa9be052ab23384bb1d23da66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNjg1N2RiNjUyMTQ3MmZhOWJlMDUyYWIyMzM4NGJiMWQyM2RhNjY=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-11-23T17:15:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-23T17:15:58Z"}, "message": "Rollup merge of #4730 - yerke:fix-check_infinite_loop, r=flip1995\n\nFix check_infinite_loop (while_immutable_condition) by checking for break or return inside loop body\n\nchangelog: Fix check_infinite_loop (while_immutable_condition) by checking for break or return inside loop body\nfixes #4648", "tree": {"sha": "402b0f98e588b3a6610c302c9c1a3af5be25b9bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/402b0f98e588b3a6610c302c9c1a3af5be25b9bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/016857db6521472fa9be052ab23384bb1d23da66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2WlOCRBK7hj4Ov3rIwAAdHIIAAeBdOL4BDTbJJXizvOe9u48\njv25cHj6kn2NJDxz/FLWzISdXmFBdoJsDCj0Orlm8rIyGki8OZc3QfZ0Kh6Hh2aY\nBZbbhHtPOwyHy9iFN+R42dREkN7TMh3DWz01VymDshmOtZws2j5gcoO35o1AfovJ\n3oarKaP5IrTXTsuFC3Pn9M5HnCG+3hJRsDLyaWIPWFNZjq+ghVEppOAXebtOlik8\nObEcpyx9gWVYZgw4ZtIooCGgP7ER693fseG3637LLG4UekTTFLXFMB454V8DuE9Y\nfrsTHVxBnIsE7RKhtQJiFRmc9x07NWqPqwlpndz0dyt28rEx0rrGWgCu7iMq7Zw=\n=5d6P\n-----END PGP SIGNATURE-----\n", "payload": "tree 402b0f98e588b3a6610c302c9c1a3af5be25b9bc\nparent 60e8413a4e5b7c67001176783893b12411ce355e\nparent 1cba0c9f7dab7ebd238ab4fa247644136ac1d729\nauthor Philipp Krones <hello@philkrones.com> 1574529358 +0100\ncommitter GitHub <noreply@github.com> 1574529358 +0100\n\nRollup merge of #4730 - yerke:fix-check_infinite_loop, r=flip1995\n\nFix check_infinite_loop (while_immutable_condition) by checking for break or return inside loop body\n\nchangelog: Fix check_infinite_loop (while_immutable_condition) by checking for break or return inside loop body\nfixes #4648\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/016857db6521472fa9be052ab23384bb1d23da66", "html_url": "https://github.com/rust-lang/rust/commit/016857db6521472fa9be052ab23384bb1d23da66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/016857db6521472fa9be052ab23384bb1d23da66/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60e8413a4e5b7c67001176783893b12411ce355e", "url": "https://api.github.com/repos/rust-lang/rust/commits/60e8413a4e5b7c67001176783893b12411ce355e", "html_url": "https://github.com/rust-lang/rust/commit/60e8413a4e5b7c67001176783893b12411ce355e"}, {"sha": "1cba0c9f7dab7ebd238ab4fa247644136ac1d729", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cba0c9f7dab7ebd238ab4fa247644136ac1d729", "html_url": "https://github.com/rust-lang/rust/commit/1cba0c9f7dab7ebd238ab4fa247644136ac1d729"}], "stats": {"total": 122, "additions": 109, "deletions": 13}, "files": [{"sha": "2a53c23964991774d965203f2bf29040b173a9a1", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/016857db6521472fa9be052ab23384bb1d23da66/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016857db6521472fa9be052ab23384bb1d23da66/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=016857db6521472fa9be052ab23384bb1d23da66", "patch": "@@ -2367,17 +2367,57 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, e\n         return;\n     };\n     let mutable_static_in_cond = var_visitor.def_ids.iter().any(|(_, v)| *v);\n+\n+    let mut has_break_or_return_visitor = HasBreakOrReturnVisitor {\n+        has_break_or_return: false,\n+    };\n+    has_break_or_return_visitor.visit_expr(expr);\n+    let has_break_or_return = has_break_or_return_visitor.has_break_or_return;\n+\n     if no_cond_variable_mutated && !mutable_static_in_cond {\n-        span_lint(\n+        span_lint_and_then(\n             cx,\n             WHILE_IMMUTABLE_CONDITION,\n             cond.span,\n-            \"Variable in the condition are not mutated in the loop body. \\\n-             This either leads to an infinite or to a never running loop.\",\n+            \"variables in the condition are not mutated in the loop body\",\n+            |db| {\n+                db.note(\"this may lead to an infinite or to a never running loop\");\n+\n+                if has_break_or_return {\n+                    db.note(\"this loop contains `return`s or `break`s\");\n+                    db.help(\"rewrite it as `if cond { loop { } }`\");\n+                }\n+            },\n         );\n     }\n }\n \n+struct HasBreakOrReturnVisitor {\n+    has_break_or_return: bool,\n+}\n+\n+impl<'a, 'tcx> Visitor<'tcx> for HasBreakOrReturnVisitor {\n+    fn visit_expr(&mut self, expr: &'tcx Expr) {\n+        if self.has_break_or_return {\n+            return;\n+        }\n+\n+        match expr.kind {\n+            ExprKind::Ret(_) | ExprKind::Break(_, _) => {\n+                self.has_break_or_return = true;\n+                return;\n+            },\n+            _ => {},\n+        }\n+\n+        walk_expr(self, expr);\n+    }\n+\n+    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n+        NestedVisitorMap::None\n+    }\n+}\n+\n /// Collects the set of variables in an expression\n /// Stops analysis if a function call is found\n /// Note: In some cases such as `self`, there are no mutable annotation,"}, {"sha": "09f47adc46e6e34c37613d6374dcc23a04613391", "filename": "tests/ui/infinite_loop.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/016857db6521472fa9be052ab23384bb1d23da66/tests%2Fui%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/016857db6521472fa9be052ab23384bb1d23da66/tests%2Fui%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.rs?ref=016857db6521472fa9be052ab23384bb1d23da66", "patch": "@@ -177,6 +177,23 @@ impl Counter {\n     }\n }\n \n+fn while_loop_with_break_and_return() {\n+    let y = 0;\n+    while y < 10 {\n+        if y == 0 {\n+            break;\n+        }\n+        println!(\"KO - loop contains break\");\n+    }\n+\n+    while y < 10 {\n+        if y == 0 {\n+            return;\n+        }\n+        println!(\"KO - loop contains return\");\n+    }\n+}\n+\n fn main() {\n     immutable_condition();\n     unused_var();\n@@ -186,4 +203,6 @@ fn main() {\n     let mut c = Counter { count: 0 };\n     c.inc_n(5);\n     c.print_n(2);\n+\n+    while_loop_with_break_and_return();\n }"}, {"sha": "2736753c14b6eccfc33acd4575f63efca21f89e5", "filename": "tests/ui/infinite_loop.stderr", "status": "modified", "additions": 47, "deletions": 10, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/016857db6521472fa9be052ab23384bb1d23da66/tests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/016857db6521472fa9be052ab23384bb1d23da66/tests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.stderr?ref=016857db6521472fa9be052ab23384bb1d23da66", "patch": "@@ -1,58 +1,95 @@\n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:23:11\n    |\n LL |     while y < 10 {\n    |           ^^^^^^\n    |\n    = note: `#[deny(clippy::while_immutable_condition)]` on by default\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:28:11\n    |\n LL |     while y < 10 && x < 3 {\n    |           ^^^^^^^^^^^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:35:11\n    |\n LL |     while !cond {\n    |           ^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:79:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:84:11\n    |\n LL |     while i < 3 && j > 0 {\n    |           ^^^^^^^^^^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:88:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:103:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:108:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n \n-error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n+error: variables in the condition are not mutated in the loop body\n   --> $DIR/infinite_loop.rs:174:15\n    |\n LL |         while self.count < n {\n    |               ^^^^^^^^^^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n+\n+error: variables in the condition are not mutated in the loop body\n+  --> $DIR/infinite_loop.rs:182:11\n+   |\n+LL |     while y < 10 {\n+   |           ^^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n+   = note: this loop contains `return`s or `break`s\n+   = help: rewrite it as `if cond { loop { } }`\n+\n+error: variables in the condition are not mutated in the loop body\n+  --> $DIR/infinite_loop.rs:189:11\n+   |\n+LL |     while y < 10 {\n+   |           ^^^^^^\n+   |\n+   = note: this may lead to an infinite or to a never running loop\n+   = note: this loop contains `return`s or `break`s\n+   = help: rewrite it as `if cond { loop { } }`\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 11 previous errors\n "}]}