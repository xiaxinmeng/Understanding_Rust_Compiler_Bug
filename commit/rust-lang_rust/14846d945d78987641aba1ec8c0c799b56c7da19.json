{"sha": "14846d945d78987641aba1ec8c0c799b56c7da19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ODQ2ZDk0NWQ3ODk4NzY0MWFiYTFlYzhjMGM3OTliNTZjN2RhMTk=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-11T23:55:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-11T23:55:22Z"}, "message": "Rollup merge of #83018 - oli-obk:float_check, r=davidtwco\n\nReintroduce accidentally deleted assertions.\n\nThese were removed in https://github.com/rust-lang/rust/pull/50198", "tree": {"sha": "96755a5871af868afa1cbd69845f809756d2c269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96755a5871af868afa1cbd69845f809756d2c269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14846d945d78987641aba1ec8c0c799b56c7da19", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgSq3qCRBK7hj4Ov3rIwAAdHIIACogMV2Y9LF1K5r0PNUpUvE5\nnBXlgrgQdLCzAzz9nD1hzodbCZWdWOJjrU8ZxNopkU+vaFuOgkObKArEQEtnZpKB\nTP+RJrWBEFgJadWrT9EdknWqJgKnqIKosthcCxu4HLBH93RI4BGQao69NuqKXM71\nlerrk4sIE6cwBd+jhRXUsSKqM+OMNNoTidNzszaeuwrgqa8/q+NKdoLZTpDsDD6i\nJV6xQH+Lw8aj8BJhhdasKggwYdRbLXEV1uJJ/iEQCwQ4USHa7zFozVDOpfz1RRTB\ncZEAL2mEom0IZW6kqADp2dPIKODBL8O06cELRtygdvWjHv3ElcgiuWBbjQAVJnQ=\n=9wBV\n-----END PGP SIGNATURE-----\n", "payload": "tree 96755a5871af868afa1cbd69845f809756d2c269\nparent 5ab8f53a719269a6d53aa57fac869ed07c2c6859\nparent c69b108d2ab3c2b99b784590be34efcf89ec789a\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615506922 +0900\ncommitter GitHub <noreply@github.com> 1615506922 +0900\n\nRollup merge of #83018 - oli-obk:float_check, r=davidtwco\n\nReintroduce accidentally deleted assertions.\n\nThese were removed in https://github.com/rust-lang/rust/pull/50198\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14846d945d78987641aba1ec8c0c799b56c7da19", "html_url": "https://github.com/rust-lang/rust/commit/14846d945d78987641aba1ec8c0c799b56c7da19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14846d945d78987641aba1ec8c0c799b56c7da19/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ab8f53a719269a6d53aa57fac869ed07c2c6859", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ab8f53a719269a6d53aa57fac869ed07c2c6859", "html_url": "https://github.com/rust-lang/rust/commit/5ab8f53a719269a6d53aa57fac869ed07c2c6859"}, {"sha": "c69b108d2ab3c2b99b784590be34efcf89ec789a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c69b108d2ab3c2b99b784590be34efcf89ec789a", "html_url": "https://github.com/rust-lang/rust/commit/c69b108d2ab3c2b99b784590be34efcf89ec789a"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "ac93d042970f2c472262d96eb0b0b29a5dd45d82", "filename": "compiler/rustc_mir_build/src/thir/constant.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/14846d945d78987641aba1ec8c0c799b56c7da19/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14846d945d78987641aba1ec8c0c799b56c7da19/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fconstant.rs?ref=14846d945d78987641aba1ec8c0c799b56c7da19", "patch": "@@ -1,3 +1,4 @@\n+use rustc_apfloat::Float;\n use rustc_ast as ast;\n use rustc_middle::mir::interpret::{\n     Allocation, ConstValue, LitToConstError, LitToConstInput, Scalar,\n@@ -61,20 +62,40 @@ fn parse_float<'tcx>(num: Symbol, fty: ty::FloatTy, neg: bool) -> Result<ConstVa\n     use rustc_apfloat::ieee::{Double, Single};\n     let scalar = match fty {\n         ty::FloatTy::F32 => {\n-            num.parse::<f32>().map_err(|_| ())?;\n+            let rust_f = num.parse::<f32>().map_err(|_| ())?;\n             let mut f = num.parse::<Single>().unwrap_or_else(|e| {\n                 panic!(\"apfloat::ieee::Single failed to parse `{}`: {:?}\", num, e)\n             });\n+            assert!(\n+                u128::from(rust_f.to_bits()) == f.to_bits(),\n+                \"apfloat::ieee::Single gave different result for `{}`: \\\n+                 {}({:#x}) vs Rust's {}({:#x})\",\n+                rust_f,\n+                f,\n+                f.to_bits(),\n+                Single::from_bits(rust_f.to_bits().into()),\n+                rust_f.to_bits()\n+            );\n             if neg {\n                 f = -f;\n             }\n             Scalar::from_f32(f)\n         }\n         ty::FloatTy::F64 => {\n-            num.parse::<f64>().map_err(|_| ())?;\n+            let rust_f = num.parse::<f64>().map_err(|_| ())?;\n             let mut f = num.parse::<Double>().unwrap_or_else(|e| {\n                 panic!(\"apfloat::ieee::Double failed to parse `{}`: {:?}\", num, e)\n             });\n+            assert!(\n+                u128::from(rust_f.to_bits()) == f.to_bits(),\n+                \"apfloat::ieee::Double gave different result for `{}`: \\\n+                 {}({:#x}) vs Rust's {}({:#x})\",\n+                rust_f,\n+                f,\n+                f.to_bits(),\n+                Double::from_bits(rust_f.to_bits().into()),\n+                rust_f.to_bits()\n+            );\n             if neg {\n                 f = -f;\n             }"}]}