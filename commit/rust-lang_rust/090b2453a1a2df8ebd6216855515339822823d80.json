{"sha": "090b2453a1a2df8ebd6216855515339822823d80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MGIyNDUzYTFhMmRmOGViZDYyMTY4NTU1MTUzMzk4MjI4MjNkODA=", "commit": {"author": {"name": "Jack Moffitt", "email": "jack@metajack.im", "date": "2013-10-18T05:32:46Z"}, "committer": {"name": "Jack Moffitt", "email": "jack@metajack.im", "date": "2013-10-18T05:36:43Z"}, "message": "Fix starts_with() and ends_with().\n\nd4a32386f3b6 broke these since slice_to() and slice_from() must get character\nboundaries, and arbitrary needle lengths don't necessarily map to character\nboundaries of the haystack.\n\nThis also adds new tests that would have caught this bug.", "tree": {"sha": "fd2841aec79c43a18706c0c9a588462fbbe441f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd2841aec79c43a18706c0c9a588462fbbe441f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/090b2453a1a2df8ebd6216855515339822823d80", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/090b2453a1a2df8ebd6216855515339822823d80", "html_url": "https://github.com/rust-lang/rust/commit/090b2453a1a2df8ebd6216855515339822823d80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/090b2453a1a2df8ebd6216855515339822823d80/comments", "author": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "committer": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd0e3a77be624f41647bb930843de27bc1cc985", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd0e3a77be624f41647bb930843de27bc1cc985", "html_url": "https://github.com/rust-lang/rust/commit/3fd0e3a77be624f41647bb930843de27bc1cc985"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "9d2f60fc27cbf42bb3ccc0547d36f28ad7498ca8", "filename": "src/libstd/str.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/090b2453a1a2df8ebd6216855515339822823d80/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090b2453a1a2df8ebd6216855515339822823d80/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=090b2453a1a2df8ebd6216855515339822823d80", "patch": "@@ -2010,13 +2010,13 @@ impl<'self> StrSlice<'self> for &'self str {\n     #[inline]\n     fn starts_with<'a>(&self, needle: &'a str) -> bool {\n         let n = needle.len();\n-        self.len() >= n && needle == self.slice_to(n)\n+        self.len() >= n && needle.as_bytes() == self.as_bytes().slice_to(n)\n     }\n \n     #[inline]\n     fn ends_with(&self, needle: &str) -> bool {\n         let (m, n) = (self.len(), needle.len());\n-        m >= n && needle == self.slice_from(m - n)\n+        m >= n && needle.as_bytes() == self.as_bytes().slice_from(m - n)\n     }\n \n     fn escape_default(&self) -> ~str {\n@@ -2886,6 +2886,8 @@ mod tests {\n         assert!((\"abc\".starts_with(\"a\")));\n         assert!((!\"a\".starts_with(\"abc\")));\n         assert!((!\"\".starts_with(\"abc\")));\n+        assert!((!\"\u00f6dd\".starts_with(\"-\")));\n+        assert!((\"\u00f6dd\".starts_with(\"\u00f6d\")));\n     }\n \n     #[test]\n@@ -2895,6 +2897,8 @@ mod tests {\n         assert!((\"abc\".ends_with(\"c\")));\n         assert!((!\"a\".ends_with(\"abc\")));\n         assert!((!\"\".ends_with(\"abc\")));\n+        assert!((!\"dd\u00f6\".ends_with(\"-\")));\n+        assert!((\"dd\u00f6\".ends_with(\"d\u00f6\")));\n     }\n \n     #[test]"}]}