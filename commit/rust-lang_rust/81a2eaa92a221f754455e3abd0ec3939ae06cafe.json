{"sha": "81a2eaa92a221f754455e3abd0ec3939ae06cafe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYTJlYWE5MmEyMjFmNzU0NDU1ZTNhYmQwZWMzOTM5YWUwNmNhZmU=", "commit": {"author": {"name": "Douglas Weber", "email": "douglas.web@web.de", "date": "2021-03-15T21:21:02Z"}, "committer": {"name": "Douglas Weber", "email": "douglas.web@web.de", "date": "2021-03-15T21:21:02Z"}, "message": "Add perf_revision to benchmark results", "tree": {"sha": "1e6a9e3ae15b175bf75ddb573bbce83100bb6824", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e6a9e3ae15b175bf75ddb573bbce83100bb6824"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a2eaa92a221f754455e3abd0ec3939ae06cafe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a2eaa92a221f754455e3abd0ec3939ae06cafe", "html_url": "https://github.com/rust-lang/rust/commit/81a2eaa92a221f754455e3abd0ec3939ae06cafe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a2eaa92a221f754455e3abd0ec3939ae06cafe/comments", "author": {"login": "d2weber", "id": 29163905, "node_id": "MDQ6VXNlcjI5MTYzOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/29163905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d2weber", "html_url": "https://github.com/d2weber", "followers_url": "https://api.github.com/users/d2weber/followers", "following_url": "https://api.github.com/users/d2weber/following{/other_user}", "gists_url": "https://api.github.com/users/d2weber/gists{/gist_id}", "starred_url": "https://api.github.com/users/d2weber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d2weber/subscriptions", "organizations_url": "https://api.github.com/users/d2weber/orgs", "repos_url": "https://api.github.com/users/d2weber/repos", "events_url": "https://api.github.com/users/d2weber/events{/privacy}", "received_events_url": "https://api.github.com/users/d2weber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "d2weber", "id": 29163905, "node_id": "MDQ6VXNlcjI5MTYzOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/29163905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d2weber", "html_url": "https://github.com/d2weber", "followers_url": "https://api.github.com/users/d2weber/followers", "following_url": "https://api.github.com/users/d2weber/following{/other_user}", "gists_url": "https://api.github.com/users/d2weber/gists{/gist_id}", "starred_url": "https://api.github.com/users/d2weber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d2weber/subscriptions", "organizations_url": "https://api.github.com/users/d2weber/orgs", "repos_url": "https://api.github.com/users/d2weber/repos", "events_url": "https://api.github.com/users/d2weber/events{/privacy}", "received_events_url": "https://api.github.com/users/d2weber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a2b4e826e1da20d3cfa8c279fcdffa24f32a7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a2b4e826e1da20d3cfa8c279fcdffa24f32a7d", "html_url": "https://github.com/rust-lang/rust/commit/c0a2b4e826e1da20d3cfa8c279fcdffa24f32a7d"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "97395738b0dff5707e8a9d30d5321d0acaf65b96", "filename": "xtask/src/metrics.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81a2eaa92a221f754455e3abd0ec3939ae06cafe/xtask%2Fsrc%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a2eaa92a221f754455e3abd0ec3939ae06cafe/xtask%2Fsrc%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmetrics.rs?ref=81a2eaa92a221f754455e3abd0ec3939ae06cafe", "patch": "@@ -26,7 +26,8 @@ impl flags::Metrics {\n         }\n         {\n             let _d = pushd(\"./target/rustc-perf\")?;\n-            cmd!(\"git reset --hard c52ee623e231e7690a93be88d943016968c1036b\").run()?;\n+            let revision = &metrics.perf_revision;\n+            cmd!(\"git reset --hard {revision}\").run()?;\n         }\n \n         let _env = pushenv(\"RA_METRICS\", \"1\");\n@@ -108,6 +109,7 @@ struct Metrics {\n     host: Host,\n     timestamp: SystemTime,\n     revision: String,\n+    perf_revision: String,\n     metrics: BTreeMap<String, (u64, Unit)>,\n }\n \n@@ -123,7 +125,8 @@ impl Metrics {\n         let host = Host::new()?;\n         let timestamp = SystemTime::now();\n         let revision = cmd!(\"git rev-parse HEAD\").read()?;\n-        Ok(Metrics { host, timestamp, revision, metrics: BTreeMap::new() })\n+        let perf_revision = \"c52ee623e231e7690a93be88d943016968c1036b\".into();\n+        Ok(Metrics { host, timestamp, revision, perf_revision, metrics: BTreeMap::new() })\n     }\n \n     fn report(&mut self, name: &str, value: u64, unit: Unit) {\n@@ -141,6 +144,7 @@ impl Metrics {\n         let timestamp = self.timestamp.duration_since(UNIX_EPOCH).unwrap();\n         obj.number(\"timestamp\", timestamp.as_secs() as f64);\n         obj.string(\"revision\", &self.revision);\n+        obj.string(\"perf_revision\", &self.perf_revision);\n         let mut metrics = obj.object(\"metrics\");\n         for (k, (value, unit)) in &self.metrics {\n             metrics.array(k).number(*value as f64).string(unit);"}]}