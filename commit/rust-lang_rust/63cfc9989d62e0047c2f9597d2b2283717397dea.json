{"sha": "63cfc9989d62e0047c2f9597d2b2283717397dea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzY2ZjOTk4OWQ2MmUwMDQ3YzJmOTU5N2QyYjIyODM3MTczOTdkZWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-11T00:01:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-11T00:01:12Z"}, "message": "auto merge of #10406 : alexcrichton/rust/issue-10405, r=huonw\n\nThe logging macros all use libuv-based I/O, and there was one stray debug\r\nstatement in task::spawn which was executing before the I/O context was ready.\r\nRemove it and add a test to make sure that we can continue to debug this sort of\r\ncode.\r\n\r\nCloses #10405", "tree": {"sha": "b2d871f930cd3a78283a80157dcb2856b4d09383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2d871f930cd3a78283a80157dcb2856b4d09383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63cfc9989d62e0047c2f9597d2b2283717397dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63cfc9989d62e0047c2f9597d2b2283717397dea", "html_url": "https://github.com/rust-lang/rust/commit/63cfc9989d62e0047c2f9597d2b2283717397dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63cfc9989d62e0047c2f9597d2b2283717397dea/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95b46a1763810fc0baf0f1db520b647bf3dc14d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/95b46a1763810fc0baf0f1db520b647bf3dc14d3", "html_url": "https://github.com/rust-lang/rust/commit/95b46a1763810fc0baf0f1db520b647bf3dc14d3"}, {"sha": "b71d629744167aea070298f9039de1b181f8f39e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b71d629744167aea070298f9039de1b181f8f39e", "html_url": "https://github.com/rust-lang/rust/commit/b71d629744167aea070298f9039de1b181f8f39e"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "b1d72c063ac8e1aa24e507b7e5dd22df8eba7a35", "filename": "src/libstd/task/spawn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/63cfc9989d62e0047c2f9597d2b2283717397dea/src%2Flibstd%2Ftask%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63cfc9989d62e0047c2f9597d2b2283717397dea/src%2Flibstd%2Ftask%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fspawn.rs?ref=63cfc9989d62e0047c2f9597d2b2283717397dea", "patch": "@@ -661,7 +661,6 @@ pub fn spawn_raw(mut opts: TaskOpts, f: ~fn()) {\n                 };\n                 new_sched.bootstrap(bootstrap_task);\n \n-                debug!(\"enqueing join_task\");\n                 // Now tell the original scheduler to join with this thread\n                 // by scheduling a thread-joining task on the original scheduler\n                 orig_sched_handle.send(TaskFromFriend(join_task));"}, {"sha": "f35c5ef022e414314317070c0c55211ce95b6253", "filename": "src/test/run-pass/spawning-with-debug.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/63cfc9989d62e0047c2f9597d2b2283717397dea/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63cfc9989d62e0047c2f9597d2b2283717397dea/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawning-with-debug.rs?ref=63cfc9989d62e0047c2f9597d2b2283717397dea", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exec-env:RUST_LOG=debug\n+// xfail-fast\n+\n+// regression test for issue #10405, make sure we don't call debug! too soon.\n+\n+use std::task;\n+\n+fn main() {\n+    let mut t = task::task();\n+    t.sched_mode(task::SingleThreaded);\n+    t.spawn(|| ());\n+}"}]}