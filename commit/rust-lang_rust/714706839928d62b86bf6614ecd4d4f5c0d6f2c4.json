{"sha": "714706839928d62b86bf6614ecd4d4f5c0d6f2c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNDcwNjgzOTkyOGQ2MmI4NmJmNjYxNGVjZDRkNGY1YzBkNmYyYzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-14T05:34:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-14T05:34:54Z"}, "message": "Auto merge of #5590 - ebroto:issue_5579, r=phansch\n\nFix ICE caused in unwrap module\n\nchangelog: Fix ICE in unwrap module with unexpected number of parameters for method of Option/Result\n\nFixes #5579", "tree": {"sha": "bf86314c59f0e81862ff41751a856bc5af0f009a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf86314c59f0e81862ff41751a856bc5af0f009a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/714706839928d62b86bf6614ecd4d4f5c0d6f2c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/714706839928d62b86bf6614ecd4d4f5c0d6f2c4", "html_url": "https://github.com/rust-lang/rust/commit/714706839928d62b86bf6614ecd4d4f5c0d6f2c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/714706839928d62b86bf6614ecd4d4f5c0d6f2c4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b20a9cd474776277a7ad7435fa0ff7b36f829ddf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b20a9cd474776277a7ad7435fa0ff7b36f829ddf", "html_url": "https://github.com/rust-lang/rust/commit/b20a9cd474776277a7ad7435fa0ff7b36f829ddf"}, {"sha": "8d1029d3ca013687422b58d0e99084a4e3421089", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d1029d3ca013687422b58d0e99084a4e3421089", "html_url": "https://github.com/rust-lang/rust/commit/8d1029d3ca013687422b58d0e99084a4e3421089"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "8b971e7064b52d9137298169e778a57b23ea7f7e", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/714706839928d62b86bf6614ecd4d4f5c0d6f2c4/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714706839928d62b86bf6614ecd4d4f5c0d6f2c4/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=714706839928d62b86bf6614ecd4d4f5c0d6f2c4", "patch": "@@ -8,6 +8,7 @@ use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, Path, QPath, UnO\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::map::Map;\n use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::Ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n@@ -90,6 +91,14 @@ fn collect_unwrap_info<'a, 'tcx>(\n     branch: &'tcx Expr<'_>,\n     invert: bool,\n ) -> Vec<UnwrapInfo<'tcx>> {\n+    fn is_relevant_option_call(cx: &LateContext<'_, '_>, ty: Ty<'_>, method_name: &str) -> bool {\n+        is_type_diagnostic_item(cx, ty, sym!(option_type)) && [\"is_some\", \"is_none\"].contains(&method_name)\n+    }\n+\n+    fn is_relevant_result_call(cx: &LateContext<'_, '_>, ty: Ty<'_>, method_name: &str) -> bool {\n+        is_type_diagnostic_item(cx, ty, sym!(result_type)) && [\"is_ok\", \"is_err\"].contains(&method_name)\n+    }\n+\n     if let ExprKind::Binary(op, left, right) = &expr.kind {\n         match (invert, op.node) {\n             (false, BinOpKind::And) | (false, BinOpKind::BitAnd) | (true, BinOpKind::Or) | (true, BinOpKind::BitOr) => {\n@@ -106,9 +115,8 @@ fn collect_unwrap_info<'a, 'tcx>(\n             if let ExprKind::MethodCall(method_name, _, args) = &expr.kind;\n             if let ExprKind::Path(QPath::Resolved(None, path)) = &args[0].kind;\n             let ty = cx.tables.expr_ty(&args[0]);\n-            if is_type_diagnostic_item(cx, ty, sym!(option_type)) || is_type_diagnostic_item(cx, ty, sym!(result_type));\n             let name = method_name.ident.as_str();\n-            if [\"is_some\", \"is_none\", \"is_ok\", \"is_err\"].contains(&&*name);\n+            if is_relevant_option_call(cx, ty, &name) || is_relevant_result_call(cx, ty, &name);\n             then {\n                 assert!(args.len() == 1);\n                 let unwrappable = match name.as_ref() {"}, {"sha": "e1842c73f0e316807f80249bb5869bff51422bf9", "filename": "tests/ui/crashes/ice-5579.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/714706839928d62b86bf6614ecd4d4f5c0d6f2c4/tests%2Fui%2Fcrashes%2Fice-5579.rs", "raw_url": "https://github.com/rust-lang/rust/raw/714706839928d62b86bf6614ecd4d4f5c0d6f2c4/tests%2Fui%2Fcrashes%2Fice-5579.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-5579.rs?ref=714706839928d62b86bf6614ecd4d4f5c0d6f2c4", "patch": "@@ -0,0 +1,17 @@\n+trait IsErr {\n+    fn is_err(&self, err: &str) -> bool;\n+}\n+\n+impl<T> IsErr for Option<T> {\n+    fn is_err(&self, _err: &str) -> bool {\n+        true\n+    }\n+}\n+\n+fn main() {\n+    let t = Some(1);\n+\n+    if t.is_err(\"\") {\n+        t.unwrap();\n+    }\n+}"}]}