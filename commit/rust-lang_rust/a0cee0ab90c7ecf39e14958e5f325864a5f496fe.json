{"sha": "a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "node_id": "C_kwDOAAsO6NoAKGEwY2VlMGFiOTBjN2VjZjM5ZTE0OTU4ZTVmMzI1ODY0YTVmNDk2ZmU", "commit": {"author": {"name": "AndyJado", "email": "101876416+AndyJado@users.noreply.github.com", "date": "2022-11-04T09:09:14Z"}, "committer": {"name": "AndyJado", "email": "101876416+AndyJado@users.noreply.github.com", "date": "2022-11-09T12:51:43Z"}, "message": "remove old var_span_path_only\n\ndoc comment", "tree": {"sha": "c8e83c8b30c031621626ec1308e328c1f4967913", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e83c8b30c031621626ec1308e328c1f4967913"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "html_url": "https://github.com/rust-lang/rust/commit/a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/comments", "author": {"login": "AndyJado", "id": 101876416, "node_id": "U_kgDOBhKCwA", "avatar_url": "https://avatars.githubusercontent.com/u/101876416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyJado", "html_url": "https://github.com/AndyJado", "followers_url": "https://api.github.com/users/AndyJado/followers", "following_url": "https://api.github.com/users/AndyJado/following{/other_user}", "gists_url": "https://api.github.com/users/AndyJado/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyJado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyJado/subscriptions", "organizations_url": "https://api.github.com/users/AndyJado/orgs", "repos_url": "https://api.github.com/users/AndyJado/repos", "events_url": "https://api.github.com/users/AndyJado/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyJado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndyJado", "id": 101876416, "node_id": "U_kgDOBhKCwA", "avatar_url": "https://avatars.githubusercontent.com/u/101876416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyJado", "html_url": "https://github.com/AndyJado", "followers_url": "https://api.github.com/users/AndyJado/followers", "following_url": "https://api.github.com/users/AndyJado/following{/other_user}", "gists_url": "https://api.github.com/users/AndyJado/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyJado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyJado/subscriptions", "organizations_url": "https://api.github.com/users/AndyJado/orgs", "repos_url": "https://api.github.com/users/AndyJado/repos", "events_url": "https://api.github.com/users/AndyJado/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyJado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e636af7dfdcb7d3412dde22c4c9fd71a0d9a9eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e636af7dfdcb7d3412dde22c4c9fd71a0d9a9eed", "html_url": "https://github.com/rust-lang/rust/commit/e636af7dfdcb7d3412dde22c4c9fd71a0d9a9eed"}], "stats": {"total": 116, "additions": 99, "deletions": 17}, "files": [{"sha": "46c0bbac2f1563a9c4ec428dc9328be8adee3bd7", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "patch": "@@ -224,10 +224,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 }\n             }\n \n-            use_spans.var_span_label_path_only(\n-                &mut err,\n-                format!(\"{} occurs due to use{}\", desired_action.as_noun(), use_spans.describe()),\n-            );\n+            use_spans.var_path_only_subdiag(&mut err, desired_action);\n \n             if !is_loop_move {\n                 err.span_label(\n@@ -404,10 +401,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let used = desired_action.as_general_verb_in_past_tense();\n         let mut err =\n             struct_span_err!(self, span, E0381, \"{used} binding {desc}{isnt_initialized}\");\n-        use_spans.var_span_label_path_only(\n-            &mut err,\n-            format!(\"{} occurs due to use{}\", desired_action.as_noun(), use_spans.describe()),\n-        );\n+        use_spans.var_path_only_subdiag(&mut err, desired_action);\n \n         if let InitializationRequiringAction::PartialAssignment\n         | InitializationRequiringAction::Assignment = desired_action\n@@ -678,10 +672,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         err.span_label(borrow_span, format!(\"borrow of {} occurs here\", borrow_msg));\n         err.span_label(span, format!(\"move out of {} occurs here\", value_msg));\n \n-        borrow_spans.var_span_label_path_only(\n-            &mut err,\n-            format!(\"borrow occurs due to use{}\", borrow_spans.describe()),\n-        );\n+        borrow_spans.var_path_only_subdiag(&mut err, crate::InitializationRequiringAction::Borrow);\n \n         move_spans.var_span_label(\n             &mut err,"}, {"sha": "c7b9f617d5a52d2003cadc9656e47da78b5ba6b9", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "patch": "@@ -595,11 +595,34 @@ impl UseSpans<'_> {\n         }\n     }\n \n-    // Add a span label to the use of the captured variable, if it exists.\n-    // only adds label to the `path_span`\n-    pub(super) fn var_span_label_path_only(self, err: &mut Diagnostic, message: impl Into<String>) {\n-        if let UseSpans::ClosureUse { path_span, .. } = self {\n-            err.span_label(path_span, message);\n+    /// Add a span label to the use of the captured variable, if it exists.\n+    /// only adds label to the `path_span`\n+    pub(super) fn var_path_only_subdiag(\n+        self,\n+        err: &mut Diagnostic,\n+        action: crate::InitializationRequiringAction,\n+    ) {\n+        use crate::session_diagnostics::CaptureVarPathUseCause::*;\n+        use crate::InitializationRequiringAction::*;\n+        if let UseSpans::ClosureUse { generator_kind, path_span, .. } = self {\n+            match generator_kind {\n+                Some(_) => {\n+                    err.subdiagnostic(match action {\n+                        Borrow => BorrowInGenerator { path_span },\n+                        MatchOn | Use => UseInGenerator { path_span },\n+                        Assignment => AssignInGenerator { path_span },\n+                        PartialAssignment => AssignPartInGenerator { path_span },\n+                    });\n+                }\n+                None => {\n+                    err.subdiagnostic(match action {\n+                        Borrow => BorrowInClosure { path_span },\n+                        MatchOn | Use => UseInClosure { path_span },\n+                        Assignment => AssignInClosure { path_span },\n+                        PartialAssignment => AssignPartInClosure { path_span },\n+                    });\n+                }\n+            }\n         }\n     }\n "}, {"sha": "62c11e303b800966861d675b27dcf70d7eb3164d", "filename": "compiler/rustc_borrowck/src/session_diagnostics.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs?ref=a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "patch": "@@ -178,3 +178,47 @@ pub(crate) enum CaptureVarCause {\n         var_span: Span,\n     },\n }\n+\n+#[derive(Subdiagnostic)]\n+pub(crate) enum CaptureVarPathUseCause {\n+    #[label(borrowck_borrow_due_to_use_generator)]\n+    BorrowInGenerator {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_use_due_to_use_generator)]\n+    UseInGenerator {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_assign_due_to_use_generator)]\n+    AssignInGenerator {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_assign_part_due_to_use_generator)]\n+    AssignPartInGenerator {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_borrow_due_to_use_closure)]\n+    BorrowInClosure {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_use_due_to_use_closure)]\n+    UseInClosure {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_assign_due_to_use_closure)]\n+    AssignInClosure {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+    #[label(borrowck_assign_part_due_to_use_closure)]\n+    AssignPartInClosure {\n+        #[primary_span]\n+        path_span: Span,\n+    },\n+}"}, {"sha": "5d6617d5bcc722bbb8646bf8fcd852046394dc20", "filename": "compiler/rustc_error_messages/locales/en-US/borrowck.ftl", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/a0cee0ab90c7ecf39e14958e5f325864a5f496fe/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl?ref=a0cee0ab90c7ecf39e14958e5f325864a5f496fe", "patch": "@@ -70,3 +70,27 @@ borrowck_var_borrow_by_use_place_in_closure =\n \n borrowck_var_borrow_by_use_place =\n     borrow occurs due to use of {$place}\n+\n+borrowck_borrow_due_to_use_generator =\n+    borrow occurs due to use in generator\n+\n+borrowck_use_due_to_use_generator =\n+    use occurs due to use in generator\n+\n+borrowck_assign_due_to_use_generator =\n+    assign occurs due to use in generator\n+\n+borrowck_assign_part_due_to_use_generator =\n+    assign to part occurs due to use in generator\n+\n+borrowck_borrow_due_to_use_closure =\n+    borrow occurs due to use in closure\n+\n+borrowck_use_due_to_use_closure =\n+    use occurs due to use in closure\n+\n+borrowck_assign_due_to_use_closure =\n+    assign occurs due to use in closure\n+\n+borrowck_assign_part_due_to_use_closure =\n+    assign to part occurs due to use in closure"}]}