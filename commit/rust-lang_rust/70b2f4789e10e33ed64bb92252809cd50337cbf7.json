{"sha": "70b2f4789e10e33ed64bb92252809cd50337cbf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYjJmNDc4OWUxMGUzM2VkNjRiYjkyMjUyODA5Y2Q1MDMzN2NiZjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-25T17:21:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-25T17:21:44Z"}, "message": "Auto merge of #26542 - GuillaumeGomez:patch-2, r=Manishearth", "tree": {"sha": "6fdfb49af5253ac8ab580b3c37ba758138f19508", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fdfb49af5253ac8ab580b3c37ba758138f19508"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70b2f4789e10e33ed64bb92252809cd50337cbf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70b2f4789e10e33ed64bb92252809cd50337cbf7", "html_url": "https://github.com/rust-lang/rust/commit/70b2f4789e10e33ed64bb92252809cd50337cbf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70b2f4789e10e33ed64bb92252809cd50337cbf7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb77788ce2a38b90162113611262dc0ed0af1b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb77788ce2a38b90162113611262dc0ed0af1b9", "html_url": "https://github.com/rust-lang/rust/commit/cfb77788ce2a38b90162113611262dc0ed0af1b9"}, {"sha": "7b4eb1aa90e49f6d068052b6e2baa5f59336ee13", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b4eb1aa90e49f6d068052b6e2baa5f59336ee13", "html_url": "https://github.com/rust-lang/rust/commit/7b4eb1aa90e49f6d068052b6e2baa5f59336ee13"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "034d3ee1604a041f954f75edadb798a9cd2d38f7", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/70b2f4789e10e33ed64bb92252809cd50337cbf7/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b2f4789e10e33ed64bb92252809cd50337cbf7/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=70b2f4789e10e33ed64bb92252809cd50337cbf7", "patch": "@@ -984,6 +984,57 @@ From [RFC 246]:\n [RFC 246]: https://github.com/rust-lang/rfcs/pull/246\n \"##,\n \n+E0395: r##\"\n+The value assigned to a constant expression must be known at compile time,\n+which is not the case when comparing raw pointers. Erroneous code example:\n+\n+```\n+static foo: i32 = 42;\n+static bar: i32 = 43;\n+\n+static baz: bool = { (&foo as *const i32) == (&bar as *const i32) };\n+// error: raw pointers cannot be compared in statics!\n+```\n+\n+Please check that the result of the comparison can be determined at compile time\n+or isn't assigned to a constant expression. Example:\n+\n+```\n+static foo: i32 = 42;\n+static bar: i32 = 43;\n+\n+let baz: bool = { (&foo as *const i32) == (&bar as *const i32) };\n+// baz isn't a constant expression so it's ok\n+```\n+\"##,\n+\n+E0396: r##\"\n+The value assigned to a constant expression must be known at compile time,\n+which is not the case when dereferencing raw pointers. Erroneous code\n+example:\n+\n+```\n+const foo: i32 = 42;\n+const baz: *const i32 = (&foo as *const i32);\n+\n+const deref: i32 = *baz;\n+// error: raw pointers cannot be dereferenced in constants\n+```\n+\n+To fix this error, please do not assign this value to a constant expression.\n+Example:\n+\n+```\n+const foo: i32 = 42;\n+const baz: *const i32 = (&foo as *const i32);\n+\n+unsafe { let deref: i32 = *baz; }\n+// baz isn't a constant expression so it's ok\n+```\n+\n+You'll also note that this assignment must be done in an unsafe block!\n+\"##,\n+\n E0397: r##\"\n It is not allowed for a mutable static to allocate or have destructors. For\n example:\n@@ -1039,7 +1090,5 @@ register_diagnostics! {\n     E0314, // closure outlives stack frame\n     E0315, // cannot invoke closure outside of its lifetime\n     E0316, // nested quantification of lifetimes\n-    E0370, // discriminant overflow\n-    E0395, // pointer comparison in const-expr\n-    E0396  // pointer dereference in const-expr\n+    E0370  // discriminant overflow\n }"}, {"sha": "5a7f3026ee0dc174d682abe72c78d78ad7be65e8", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/70b2f4789e10e33ed64bb92252809cd50337cbf7/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b2f4789e10e33ed64bb92252809cd50337cbf7/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=70b2f4789e10e33ed64bb92252809cd50337cbf7", "patch": "@@ -1458,6 +1458,42 @@ impl Foo for Bar {\n ```\n \"##,\n \n+E0327: r##\"\n+You cannot use associated items other than constant items as patterns. This\n+includes method items. Example of erroneous code:\n+\n+```\n+enum B {}\n+\n+impl B {\n+    fn bb() -> i32 { 0 }\n+}\n+\n+fn main() {\n+    match 0 {\n+        B::bb => {} // error: associated items in match patterns must\n+                    // be constants\n+    }\n+}\n+```\n+\n+Please check that you're not using a method as a pattern. Example:\n+\n+```\n+enum B {\n+    ba,\n+    bb\n+}\n+\n+fn main() {\n+    match B::ba {\n+        B::bb => {} // ok!\n+        _ => {}\n+    }\n+}\n+```\n+\"##,\n+\n E0368: r##\"\n This error indicates that a binary assignment operator like `+=` or `^=` was\n applied to the wrong types. For example:\n@@ -1640,7 +1676,6 @@ register_diagnostics! {\n     E0323, // implemented an associated const when another trait item expected\n     E0324, // implemented a method when another trait item expected\n     E0325, // implemented an associated type when another trait item expected\n-    E0327, // referred to method instead of constant in match pattern\n     E0328, // cannot implement Unsize explicitly\n     E0329, // associated const depends on type parameter or Self.\n     E0366, // dropck forbid specialization to concrete type or region"}]}