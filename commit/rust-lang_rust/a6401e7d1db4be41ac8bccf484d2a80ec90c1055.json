{"sha": "a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NDAxZTdkMWRiNGJlNDFhYzhiY2NmNDg0ZDJhODBlYzkwYzEwNTU=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-21T10:15:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-21T10:15:00Z"}, "message": "Merge pull request #537 from solson/rustup\n\nbump Rust", "tree": {"sha": "3f0797f9ebeca2977a06af3a1a1f713b65518b27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f0797f9ebeca2977a06af3a1a1f713b65518b27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb9TAkCRBK7hj4Ov3rIwAAdHIIAEiWAdT05Q3jmogIHkETyuBC\nodH9QNBDa1KzurK0LedBE0tqJ+7+wG8F3MzQcmmaI5CNtygvzKpfrK4pm9G2MuK7\n82lq2kSrsqBcgVjzT5G4wVaoPqCAUg0e3YWgqs28Ox05Eldod7zK2flPuibHT8jj\n52kRcVYM32Btln8IwEm3+Wj3NWcBSaUaRGrTp4DlxmJGc/hCogBrOsvdvtO3uWZ8\n/sb5I4ACl1JbI6os3VK6EV8Q1iZ11b1yVmeGZQXBDSxkiieYkqKJ0OHfqHl227i/\nOJS0slggkHRNXZSVexpo01Zy7HSpCPfawll9F3BW+us8udBVeYFMmOucWK4Dc8o=\n=iiyE\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f0797f9ebeca2977a06af3a1a1f713b65518b27\nparent 669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8\nparent 0b7625a0794b9997cdd60dcc5957d8991212b86b\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1542795300 +0100\ncommitter GitHub <noreply@github.com> 1542795300 +0100\n\nMerge pull request #537 from solson/rustup\n\nbump Rust"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "html_url": "https://github.com/rust-lang/rust/commit/a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8", "html_url": "https://github.com/rust-lang/rust/commit/669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8"}, {"sha": "0b7625a0794b9997cdd60dcc5957d8991212b86b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7625a0794b9997cdd60dcc5957d8991212b86b", "html_url": "https://github.com/rust-lang/rust/commit/0b7625a0794b9997cdd60dcc5957d8991212b86b"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "a3718d44da91df08b09360a5460b982a1abbf58b", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "patch": "@@ -1 +1 @@\n-nightly-2018-11-20\n+nightly-2018-11-21"}, {"sha": "5fc706c04d80502e6b09658d699d76cf5b00c1f2", "filename": "src/fn_call.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "patch": "@@ -469,10 +469,9 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for super::MiriEvalCo\n                             instance,\n                             promoted: None,\n                         };\n-                        let const_val = self.const_eval(cid)?;\n-                        let value = const_val.unwrap_bits(\n-                            self.tcx.tcx,\n-                            ty::ParamEnv::empty().and(self.tcx.types.i32)) as i32;\n+                        let const_val = self.const_eval_raw(cid)?;\n+                        let const_val = self.read_scalar(const_val.into())?;\n+                        let value = const_val.to_i32()?;\n                         if value == name {\n                             result = Some(path_value);\n                             break;"}, {"sha": "bd0fec859d8f7c424a677f8f1120fd635b8a97bf", "filename": "tests/compile-fail-fullmir/stacked_borrows/box_exclusive_violation1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Fbox_exclusive_violation1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Fbox_exclusive_violation1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Fbox_exclusive_violation1.rs?ref=a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "patch": "@@ -25,5 +25,5 @@ fn unknown_code_2() { unsafe {\n } }\n \n fn main() {\n-    assert_eq!(demo_mut_advanced_unique(Box::new(0)), 5);\n+    demo_mut_advanced_unique(Box::new(0));\n }"}, {"sha": "fec699e35bcfbab58772d077404d697c0f1ce5a2", "filename": "tests/compile-fail-fullmir/stacked_borrows/mut_exclusive_violation1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Fmut_exclusive_violation1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6401e7d1db4be41ac8bccf484d2a80ec90c1055/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Fmut_exclusive_violation1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail-fullmir%2Fstacked_borrows%2Fmut_exclusive_violation1.rs?ref=a6401e7d1db4be41ac8bccf484d2a80ec90c1055", "patch": "@@ -25,5 +25,5 @@ fn unknown_code_2() { unsafe {\n } }\n \n fn main() {\n-    assert_eq!(demo_mut_advanced_unique(&mut 0), 5);\n+    demo_mut_advanced_unique(&mut 0);\n }"}]}