{"sha": "b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMGQ4OTY5ZTg2ZmEyYzlkZDNiOGUyZTI4ZGRkYTIyMDIzMzFmMGY=", "commit": {"author": {"name": "Amit Aryeh Levy", "email": "amit@amitlevy.com", "date": "2015-09-23T15:38:01Z"}, "committer": {"name": "Amit Aryeh Levy", "email": "amit@amitlevy.com", "date": "2015-09-23T15:38:01Z"}, "message": "Explain in comment why FixedSizeArray is unsafe", "tree": {"sha": "4e96af004db4ef6f2e6979deec7cee1ffe288a0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e96af004db4ef6f2e6979deec7cee1ffe288a0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f", "html_url": "https://github.com/rust-lang/rust/commit/b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f/comments", "author": {"login": "alevy", "id": 4689, "node_id": "MDQ6VXNlcjQ2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevy", "html_url": "https://github.com/alevy", "followers_url": "https://api.github.com/users/alevy/followers", "following_url": "https://api.github.com/users/alevy/following{/other_user}", "gists_url": "https://api.github.com/users/alevy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevy/subscriptions", "organizations_url": "https://api.github.com/users/alevy/orgs", "repos_url": "https://api.github.com/users/alevy/repos", "events_url": "https://api.github.com/users/alevy/events{/privacy}", "received_events_url": "https://api.github.com/users/alevy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alevy", "id": 4689, "node_id": "MDQ6VXNlcjQ2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevy", "html_url": "https://github.com/alevy", "followers_url": "https://api.github.com/users/alevy/followers", "following_url": "https://api.github.com/users/alevy/following{/other_user}", "gists_url": "https://api.github.com/users/alevy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevy/subscriptions", "organizations_url": "https://api.github.com/users/alevy/orgs", "repos_url": "https://api.github.com/users/alevy/repos", "events_url": "https://api.github.com/users/alevy/events{/privacy}", "received_events_url": "https://api.github.com/users/alevy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85f48d300a1161338e14b9579007b003c48dc4ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/85f48d300a1161338e14b9579007b003c48dc4ba", "html_url": "https://github.com/rust-lang/rust/commit/85f48d300a1161338e14b9579007b003c48dc4ba"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "c986914440de0ae7576d91b92c878c9d038269f3", "filename": "src/libcore/array.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=b30d8969e86fa2c9dd3b8e2e28ddda2202331f0f", "patch": "@@ -35,6 +35,15 @@ use slice::{Iter, IterMut, SliceExt};\n ///\n /// This trait can be used to implement other traits on fixed-size arrays\n /// without causing much metadata bloat.\n+///\n+/// The trait is marked unsafe in order to restrict implementors to fixed-size\n+/// arrays. User of this trait can assume that implementors have the exact\n+/// layout in memory of a fixed size array (for example, for unsafe\n+/// initialization).\n+///\n+/// Note that the traits AsRef and AsMut provide similar methods for types that\n+/// may not be fixed-size arrays. Implementors should prefer those traits\n+/// instead.\n pub unsafe trait FixedSizeArray<T> {\n     /// Converts the array to immutable slice\n     fn as_slice(&self) -> &[T];"}]}