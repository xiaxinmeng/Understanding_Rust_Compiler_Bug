{"sha": "770f0e95a189e84491845ab1378eb3bc3c896f62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MGYwZTk1YTE4OWU4NDQ5MTg0NWFiMTM3OGViM2JjM2M4OTZmNjI=", "commit": {"author": {"name": "Johann Hofmann", "email": "git@johann-hofmann.com", "date": "2015-05-11T00:03:37Z"}, "committer": {"name": "Johann Hofmann", "email": "git@johann-hofmann.com", "date": "2015-05-11T00:03:37Z"}, "message": "Add if let expressions example", "tree": {"sha": "da4a6173f340e379c4996e1ac8088b39fec00277", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da4a6173f340e379c4996e1ac8088b39fec00277"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/770f0e95a189e84491845ab1378eb3bc3c896f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/770f0e95a189e84491845ab1378eb3bc3c896f62", "html_url": "https://github.com/rust-lang/rust/commit/770f0e95a189e84491845ab1378eb3bc3c896f62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/770f0e95a189e84491845ab1378eb3bc3c896f62/comments", "author": null, "committer": null, "parents": [{"sha": "750f2c63f2737305d33288303cdecb7a470a7922", "url": "https://api.github.com/repos/rust-lang/rust/commits/750f2c63f2737305d33288303cdecb7a470a7922", "html_url": "https://github.com/rust-lang/rust/commit/750f2c63f2737305d33288303cdecb7a470a7922"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "89f74d8d87afac52f93e2988e5de1a31110bcacd", "filename": "src/doc/reference.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/770f0e95a189e84491845ab1378eb3bc3c896f62/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/770f0e95a189e84491845ab1378eb3bc3c896f62/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=770f0e95a189e84491845ab1378eb3bc3c896f62", "patch": "@@ -3064,6 +3064,17 @@ of a condition expression it expects a refutable let statement. If the value of\n expression on the right hand side of the let statement matches the pattern, the corresponding\n block will execute, otherwise flow proceeds to the first `else` block that follows.\n \n+```\n+let dish = (\"Ham\", \"Eggs\");\n+if let (\"Bacon\", b) = dish { // will not execute because let is refuted\n+  println!(\"Bacon is served with {}\", b);\n+}\n+\n+if let (\"Ham\", b) = dish { // will execute\n+  println!(\"Ham is served with {}\", b);\n+}\n+```\n+\n ### While let loops\n \n A `while let` loop is semantically identical to a `while` loop but in place of a"}]}