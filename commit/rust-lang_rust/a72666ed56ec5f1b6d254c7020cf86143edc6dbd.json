{"sha": "a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "node_id": "C_kwDOAAsO6NoAKGE3MjY2NmVkNTZlYzVmMWI2ZDI1NGM3MDIwY2Y4NjE0M2VkYzZkYmQ", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-20T20:03:43Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-20T20:03:43Z"}, "message": "rustc_transmute: fix big-endian discriminants", "tree": {"sha": "929e514d3a6856f6b70ef56333d12767ddf77433", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/929e514d3a6856f6b70ef56333d12767ddf77433"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "html_url": "https://github.com/rust-lang/rust/commit/a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a72666ed56ec5f1b6d254c7020cf86143edc6dbd/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd8cc91045281f7f1924ecc101f2c6002f6a1eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8cc91045281f7f1924ecc101f2c6002f6a1eee", "html_url": "https://github.com/rust-lang/rust/commit/cd8cc91045281f7f1924ecc101f2c6002f6a1eee"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "acd4fa63d7823ac83c1ca4749525b578f90abe6d", "filename": "compiler/rustc_transmute/src/layout/tree.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a72666ed56ec5f1b6d254c7020cf86143edc6dbd/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a72666ed56ec5f1b6d254c7020cf86143edc6dbd/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Ftree.rs?ref=a72666ed56ec5f1b6d254c7020cf86143edc6dbd", "patch": "@@ -404,7 +404,7 @@ pub(crate) mod rustc {\n                 .unwrap();\n                 trace!(?discr_layout, \"computed discriminant layout\");\n                 variant_layout = variant_layout.extend(discr_layout).unwrap().0;\n-                tree = tree.then(Self::from_disr(discr, tcx, layout_summary.discriminant_size));\n+                tree = tree.then(Self::from_discr(discr, tcx, layout_summary.discriminant_size));\n             }\n \n             // Next come fields.\n@@ -444,11 +444,21 @@ pub(crate) mod rustc {\n             Ok(tree)\n         }\n \n-        pub fn from_disr(discr: Discr<'tcx>, tcx: TyCtxt<'tcx>, size: usize) -> Self {\n-            // FIXME(@jswrenn): I'm certain this is missing needed endian nuance.\n-            let bytes = discr.val.to_ne_bytes();\n-            let bytes = &bytes[..size];\n-            Self::Seq(bytes.into_iter().copied().map(|b| Self::from_bits(b)).collect())\n+        pub fn from_discr(discr: Discr<'tcx>, tcx: TyCtxt<'tcx>, size: usize) -> Self {\n+            use rustc_target::abi::Endian;\n+\n+            let bytes: [u8; 16];\n+            let bytes = match tcx.data_layout.endian {\n+                Endian::Little => {\n+                    bytes = discr.val.to_le_bytes();\n+                    &bytes[..size]\n+                }\n+                Endian::Big => {\n+                    bytes = discr.val.to_be_bytes();\n+                    &bytes[bytes.len() - size..]\n+                }\n+            };\n+            Self::Seq(bytes.iter().map(|&b| Self::from_bits(b)).collect())\n         }\n     }\n "}]}