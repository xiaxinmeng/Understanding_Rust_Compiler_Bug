{"sha": "cda811173e5862ecf75a19df5e8c69fd5d8a4ead", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYTgxMTE3M2U1ODYyZWNmNzVhMTlkZjVlOGM2OWZkNWQ4YTRlYWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-29T18:37:06Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-02T10:39:48Z"}, "message": "Fix compilation for AArch64", "tree": {"sha": "0ef7dda9bdce647b73892921b92fe9d3fe426105", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ef7dda9bdce647b73892921b92fe9d3fe426105"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cda811173e5862ecf75a19df5e8c69fd5d8a4ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cda811173e5862ecf75a19df5e8c69fd5d8a4ead", "html_url": "https://github.com/rust-lang/rust/commit/cda811173e5862ecf75a19df5e8c69fd5d8a4ead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cda811173e5862ecf75a19df5e8c69fd5d8a4ead/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bd9a132f6111b77348b8014b849b056a4f6759a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd9a132f6111b77348b8014b849b056a4f6759a", "html_url": "https://github.com/rust-lang/rust/commit/1bd9a132f6111b77348b8014b849b056a4f6759a"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "72d6a0265efbb8a1dbe02beb2de236e4ef312434", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cda811173e5862ecf75a19df5e8c69fd5d8a4ead/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cda811173e5862ecf75a19df5e8c69fd5d8a4ead/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=cda811173e5862ecf75a19df5e8c69fd5d8a4ead", "patch": "@@ -115,10 +115,16 @@ pub(crate) fn build_sysroot(\n             }\n         }\n         SysrootKind::Clif => {\n-            build_clif_sysroot_for_triple(channel, target_dir, target_triple);\n+            build_clif_sysroot_for_triple(channel, target_dir, host_triple, None);\n \n             if host_triple != target_triple {\n-                build_clif_sysroot_for_triple(channel, target_dir, host_triple);\n+                // When cross-compiling it is often necessary to manually pick the right linker\n+                let linker = if target_triple == \"aarch64-unknown-linux-gnu\" {\n+                    Some(\"aarch64-linux-gnu-gcc\")\n+                } else {\n+                    None\n+                };\n+                build_clif_sysroot_for_triple(channel, target_dir, target_triple, linker);\n             }\n \n             // Copy std for the host to the lib dir. This is necessary for the jit mode to find\n@@ -133,7 +139,12 @@ pub(crate) fn build_sysroot(\n     }\n }\n \n-fn build_clif_sysroot_for_triple(channel: &str, target_dir: &Path, triple: &str) {\n+fn build_clif_sysroot_for_triple(\n+    channel: &str,\n+    target_dir: &Path,\n+    triple: &str,\n+    linker: Option<&str>,\n+) {\n     let build_dir = Path::new(\"build_sysroot\").join(\"target\").join(triple).join(channel);\n \n     let keep_sysroot =\n@@ -155,6 +166,10 @@ fn build_clif_sysroot_for_triple(channel: &str, target_dir: &Path, triple: &str)\n         build_cmd.arg(\"--release\");\n         rustflags.push_str(\" -Zmir-opt-level=3\");\n     }\n+    if let Some(linker) = linker {\n+        use std::fmt::Write;\n+        write!(rustflags, \" -Clinker={}\", linker).unwrap();\n+    }\n     build_cmd.env(\"RUSTFLAGS\", rustflags);\n     build_cmd.env(\n         \"RUSTC\","}, {"sha": "50317b192edf7f70ca727e2223e5862e1247d662", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cda811173e5862ecf75a19df5e8c69fd5d8a4ead/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cda811173e5862ecf75a19df5e8c69fd5d8a4ead/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=cda811173e5862ecf75a19df5e8c69fd5d8a4ead", "patch": "@@ -287,10 +287,12 @@ fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::Tar\n         }\n         None => {\n             let mut builder =\n-                cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n-            // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n-            // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n-            builder.enable(\"nehalem\").unwrap();\n+                cranelift_codegen::isa::lookup_variant(target_triple.clone(), variant).unwrap();\n+            if target_triple.architecture == target_lexicon::Architecture::X86_64 {\n+                // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n+                // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n+                builder.enable(\"nehalem\").unwrap();\n+            }\n             builder\n         }\n     };"}]}