{"sha": "0494cffd3ca975aaeb58230cf7904ece05836133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OTRjZmZkM2NhOTc1YWFlYjU4MjMwY2Y3OTA0ZWNlMDU4MzYxMzM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-29T01:40:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-29T01:40:57Z"}, "message": "Rollup merge of #59498 - mbrubeck:write_all, r=Centril\n\nUse 'write_all' instead of 'write' in example code\n\nUsing `write` without looping and checking the result can cause silent data loss.  Example code should use `write_all` so that people don't copy this pattern.  (Of course this does not include example code for docs that are specifically about the `write` method.)", "tree": {"sha": "9c5d04734e9346a741533cc3a89fe7be91d28943", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c5d04734e9346a741533cc3a89fe7be91d28943"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0494cffd3ca975aaeb58230cf7904ece05836133", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnXepCRBK7hj4Ov3rIwAAdHIIAI3pi1470KbtL0j06WmOZhyZ\nAQqlO8SgJ7QUjiE/olghZxIVWuMUXOvvP/hIqNK/gdvYLOjZis2oa8RxDeAIRwyM\nioiUTSP2W1PXSC9zhmHMV6y5cWbAiTilmbO56kpEcBmCEdBvE8btBLupLC0I3oF5\niqCzguXamTNu2YWMTshSrKw1+q6KKNCTy/uYE0bd0WooDQeqFqHvmh3o8LJflsdl\npji0S4ZF6HDCtOY4B7wW4VwqTcpTKwX5yh1V3y8UWC6KUVuiYx8AFeBOI32KeQCO\nIEu/YzImL1ebjGt4PRFJ0DSiFLkbVztOlh/sNqFyRXD4tlBaqOiT5qR2WXbfrUs=\n=KFh+\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c5d04734e9346a741533cc3a89fe7be91d28943\nparent bf3e6c63d6b1a6efec0a65e22fbe9b9013d2705e\nparent 8dbae794b0683668d1b46d2c319ab36dcd9bd96d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553823657 +0100\ncommitter GitHub <noreply@github.com> 1553823657 +0100\n\nRollup merge of #59498 - mbrubeck:write_all, r=Centril\n\nUse 'write_all' instead of 'write' in example code\n\nUsing `write` without looping and checking the result can cause silent data loss.  Example code should use `write_all` so that people don't copy this pattern.  (Of course this does not include example code for docs that are specifically about the `write` method.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0494cffd3ca975aaeb58230cf7904ece05836133", "html_url": "https://github.com/rust-lang/rust/commit/0494cffd3ca975aaeb58230cf7904ece05836133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0494cffd3ca975aaeb58230cf7904ece05836133/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf3e6c63d6b1a6efec0a65e22fbe9b9013d2705e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3e6c63d6b1a6efec0a65e22fbe9b9013d2705e", "html_url": "https://github.com/rust-lang/rust/commit/bf3e6c63d6b1a6efec0a65e22fbe9b9013d2705e"}, {"sha": "8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dbae794b0683668d1b46d2c319ab36dcd9bd96d", "html_url": "https://github.com/rust-lang/rust/commit/8dbae794b0683668d1b46d2c319ab36dcd9bd96d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "14c850b6b054740426ad3fe1dcd233e35ef97470", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0494cffd3ca975aaeb58230cf7904ece05836133/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0494cffd3ca975aaeb58230cf7904ece05836133/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=0494cffd3ca975aaeb58230cf7904ece05836133", "patch": "@@ -1151,7 +1151,7 @@ pub trait Write {\n     /// fn main() -> std::io::Result<()> {\n     ///     let mut buffer = BufWriter::new(File::create(\"foo.txt\")?);\n     ///\n-    ///     buffer.write(b\"some bytes\")?;\n+    ///     buffer.write_all(b\"some bytes\")?;\n     ///     buffer.flush()?;\n     ///     Ok(())\n     /// }"}, {"sha": "7e151041a9ea857853ef444480cbb599b4063d87", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0494cffd3ca975aaeb58230cf7904ece05836133/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0494cffd3ca975aaeb58230cf7904ece05836133/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=0494cffd3ca975aaeb58230cf7904ece05836133", "patch": "@@ -405,7 +405,7 @@ pub struct StdoutLock<'a> {\n /// use std::io::{self, Write};\n ///\n /// fn main() -> io::Result<()> {\n-///     io::stdout().write(b\"hello world\")?;\n+///     io::stdout().write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -420,7 +420,7 @@ pub struct StdoutLock<'a> {\n ///     let stdout = io::stdout();\n ///     let mut handle = stdout.lock();\n ///\n-///     handle.write(b\"hello world\")?;\n+///     handle.write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -460,7 +460,7 @@ impl Stdout {\n     ///     let stdout = io::stdout();\n     ///     let mut handle = stdout.lock();\n     ///\n-    ///     handle.write(b\"hello world\")?;\n+    ///     handle.write_all(b\"hello world\")?;\n     ///\n     ///     Ok(())\n     /// }\n@@ -558,7 +558,7 @@ pub struct StderrLock<'a> {\n /// use std::io::{self, Write};\n ///\n /// fn main() -> io::Result<()> {\n-///     io::stderr().write(b\"hello world\")?;\n+///     io::stderr().write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -573,7 +573,7 @@ pub struct StderrLock<'a> {\n ///     let stderr = io::stderr();\n ///     let mut handle = stderr.lock();\n ///\n-///     handle.write(b\"hello world\")?;\n+///     handle.write_all(b\"hello world\")?;\n ///\n ///     Ok(())\n /// }\n@@ -613,7 +613,7 @@ impl Stderr {\n     ///     let stderr = io::stderr();\n     ///     let mut handle = stderr.lock();\n     ///\n-    ///     handle.write(b\"hello world\")?;\n+    ///     handle.write_all(b\"hello world\")?;\n     ///\n     ///     Ok(())\n     /// }"}]}