{"sha": "8334dd445fb10089a68808e7895f0c00d6fd0b3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMzRkZDQ0NWZiMTAwODlhNjg4MDhlNzg5NWYwYzAwZDZmZDBiM2U=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-05T01:27:43Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-05T17:11:10Z"}, "message": "native: Stop using readdir()\n\nThis function is not threadsafe, and is deprecated in favor of the threadsafe\nreaddir_r variant.\n\nCloses #12692", "tree": {"sha": "e6886b691e2cd20d65211444b5993e55076fff2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6886b691e2cd20d65211444b5993e55076fff2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8334dd445fb10089a68808e7895f0c00d6fd0b3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8334dd445fb10089a68808e7895f0c00d6fd0b3e", "html_url": "https://github.com/rust-lang/rust/commit/8334dd445fb10089a68808e7895f0c00d6fd0b3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8334dd445fb10089a68808e7895f0c00d6fd0b3e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe50c75d02c9b41bcda28596077b1122a89bee5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe50c75d02c9b41bcda28596077b1122a89bee5d", "html_url": "https://github.com/rust-lang/rust/commit/fe50c75d02c9b41bcda28596077b1122a89bee5d"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "cf9ada97a3254a28ae0d7658ad6c1938f7c462c5", "filename": "src/libnative/io/file_unix.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8334dd445fb10089a68808e7895f0c00d6fd0b3e/src%2Flibnative%2Fio%2Ffile_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8334dd445fb10089a68808e7895f0c00d6fd0b3e/src%2Flibnative%2Fio%2Ffile_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_unix.rs?ref=8334dd445fb10089a68808e7895f0c00d6fd0b3e", "patch": "@@ -19,6 +19,7 @@ use std::libc;\n use std::mem;\n use std::rt::rtio;\n use std::vec;\n+use std::vec_ng::Vec;\n \n use io::{IoResult, retry, keep_going};\n \n@@ -341,7 +342,7 @@ pub fn mkdir(p: &CString, mode: io::FilePermission) -> IoResult<()> {\n \n pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n     use std::libc::{dirent_t};\n-    use std::libc::{opendir, readdir, closedir};\n+    use std::libc::{opendir, readdir_r, closedir};\n \n     fn prune(root: &CString, dirs: ~[Path]) -> ~[Path] {\n         let root = unsafe { CString::new(root.with_ref(|p| p), false) };\n@@ -353,23 +354,28 @@ pub fn readdir(p: &CString) -> IoResult<~[Path]> {\n     }\n \n     extern {\n-        fn rust_list_dir_val(ptr: *dirent_t) -> *libc::c_char;\n+        fn rust_dirent_t_size() -> libc::c_int;\n+        fn rust_list_dir_val(ptr: *mut dirent_t) -> *libc::c_char;\n     }\n \n+    let size = unsafe { rust_dirent_t_size() };\n+    let mut buf = Vec::<u8>::with_capacity(size as uint);\n+    let ptr = buf.as_mut_slice().as_mut_ptr() as *mut dirent_t;\n+\n     debug!(\"os::list_dir -- BEFORE OPENDIR\");\n \n     let dir_ptr = p.with_ref(|buf| unsafe { opendir(buf) });\n \n     if dir_ptr as uint != 0 {\n         let mut paths = ~[];\n         debug!(\"os::list_dir -- opendir() SUCCESS\");\n-        let mut entry_ptr = unsafe { readdir(dir_ptr) };\n-        while entry_ptr as uint != 0 {\n+        let mut entry_ptr = 0 as *mut dirent_t;\n+        while unsafe { readdir_r(dir_ptr, ptr, &mut entry_ptr) == 0 } {\n+            if entry_ptr.is_null() { break }\n             let cstr = unsafe {\n                 CString::new(rust_list_dir_val(entry_ptr), false)\n             };\n             paths.push(Path::new(cstr));\n-            entry_ptr = unsafe { readdir(dir_ptr) };\n         }\n         assert_eq!(unsafe { closedir(dir_ptr) }, 0);\n         Ok(prune(p, paths))"}, {"sha": "7096765d9fc3be1a9dd9615882ddef93852f75ce", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8334dd445fb10089a68808e7895f0c00d6fd0b3e/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8334dd445fb10089a68808e7895f0c00d6fd0b3e/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=8334dd445fb10089a68808e7895f0c00d6fd0b3e", "patch": "@@ -3657,13 +3657,16 @@ pub mod funcs {\n             pub unsafe fn opendir(dirname: *c_char) -> *DIR {\n                 rust_opendir(dirname)\n             }\n-            pub unsafe fn readdir(dirp: *DIR) -> *dirent_t {\n-                rust_readdir(dirp)\n+            pub unsafe fn readdir_r(dirp: *DIR,\n+                                    entry: *mut dirent_t,\n+                                    result: *mut *mut dirent_t) -> c_int {\n+                rust_readdir_r(dirp, entry, result)\n             }\n \n             extern {\n                 fn rust_opendir(dirname: *c_char) -> *DIR;\n-                fn rust_readdir(dirp: *DIR) -> *dirent_t;\n+                fn rust_readdir_r(dirp: *DIR, entry: *mut dirent_t,\n+                                  result: *mut *mut dirent_t) -> c_int;\n             }\n \n             extern {"}, {"sha": "6ba121c5d2d04be07e1f83e5320c1ff7b8c80128", "filename": "src/rt/rust_builtin.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8334dd445fb10089a68808e7895f0c00d6fd0b3e/src%2Frt%2Frust_builtin.c", "raw_url": "https://github.com/rust-lang/rust/raw/8334dd445fb10089a68808e7895f0c00d6fd0b3e/src%2Frt%2Frust_builtin.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.c?ref=8334dd445fb10089a68808e7895f0c00d6fd0b3e", "patch": "@@ -279,9 +279,14 @@ rust_opendir(char *dirname) {\n     return opendir(dirname);\n }\n \n-struct dirent*\n-rust_readdir(DIR *dirp) {\n-    return readdir(dirp);\n+int\n+rust_readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result) {\n+    return readdir_r(dirp, entry, result);\n+}\n+\n+int\n+rust_dirent_t_size() {\n+    return sizeof(struct dirent);\n }\n \n #else\n@@ -294,6 +299,10 @@ void\n rust_readdir() {\n }\n \n+void\n+rust_dirent_t_size() {\n+}\n+\n #endif\n \n uintptr_t"}]}