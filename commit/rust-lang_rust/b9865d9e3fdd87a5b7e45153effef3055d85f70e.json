{"sha": "b9865d9e3fdd87a5b7e45153effef3055d85f70e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ODY1ZDllM2ZkZDg3YTViN2U0NTE1M2VmZmVmMzA1NWQ4NWY3MGU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-09T19:52:02Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-09T19:52:02Z"}, "message": "Mention that tuple structs are private if their fields are", "tree": {"sha": "18a42d038bab2ba3bede92f6882ff136c162a1bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18a42d038bab2ba3bede92f6882ff136c162a1bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9865d9e3fdd87a5b7e45153effef3055d85f70e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9865d9e3fdd87a5b7e45153effef3055d85f70e", "html_url": "https://github.com/rust-lang/rust/commit/b9865d9e3fdd87a5b7e45153effef3055d85f70e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9865d9e3fdd87a5b7e45153effef3055d85f70e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813a3a5d4b2be4e2101faa73a067da02a704a598", "url": "https://api.github.com/repos/rust-lang/rust/commits/813a3a5d4b2be4e2101faa73a067da02a704a598", "html_url": "https://github.com/rust-lang/rust/commit/813a3a5d4b2be4e2101faa73a067da02a704a598"}], "stats": {"total": 147, "additions": 144, "deletions": 3}, "files": [{"sha": "ce2bc79ff603439ea5dcad8349e2fa1d7bd68bc3", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=b9865d9e3fdd87a5b7e45153effef3055d85f70e", "patch": "@@ -50,7 +50,7 @@ use syntax::ast::{Item, ItemKind, ImplItem, ImplItemKind};\n use syntax::ast::{Label, Local, Mutability, Pat, PatKind, Path};\n use syntax::ast::{QSelf, TraitItem, TraitItemKind, TraitRef, Ty, TyKind};\n use syntax::ptr::P;\n-use syntax::{span_err, struct_span_err, unwrap_or, walk_list};\n+use syntax::{struct_span_err, unwrap_or, walk_list};\n \n use syntax_pos::{Span, DUMMY_SP, MultiSpan};\n use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n@@ -4789,8 +4789,33 @@ impl<'a> Resolver<'a> {\n         let mut reported_spans = FxHashSet::default();\n         for &PrivacyError(dedup_span, ident, binding) in &self.privacy_errors {\n             if reported_spans.insert(dedup_span) {\n-                span_err!(self.session, ident.span, E0603, \"{} `{}` is private\",\n-                          binding.descr(), ident.name);\n+                let mut err = struct_span_err!(\n+                    self.session,\n+                    ident.span,\n+                    E0603,\n+                    \"{} `{}` is private\",\n+                    binding.descr(),\n+                    ident.name,\n+                );\n+                // FIXME: use the ctor's `def_id` to check wether any of the fields is not visible\n+                match binding.kind {\n+                    NameBindingKind::Res(Res::Def(DefKind::Ctor(\n+                        CtorOf::Struct,\n+                        CtorKind::Fn,\n+                    ), _def_id), _) => {\n+                        err.note(\"a tuple struct constructor is private if any of its fields \\\n+                                  is private\");\n+                    }\n+                    NameBindingKind::Res(Res::Def(DefKind::Ctor(\n+                        CtorOf::Variant,\n+                        CtorKind::Fn,\n+                    ), _def_id), _) => {\n+                        err.note(\"a tuple variant constructor is private if any of its fields \\\n+                                  is private\");\n+                    }\n+                    _ => {}\n+                }\n+                err.emit();\n             }\n         }\n     }"}, {"sha": "532d1ac1e2fb8552c9a0ad1bc00eb625549af4e5", "filename": "src/test/ui/privacy/privacy5.stderr", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=b9865d9e3fdd87a5b7e45153effef3055d85f70e", "patch": "@@ -3,288 +3,384 @@ error[E0603]: tuple struct `A` is private\n    |\n LL |     let a = a::A(());\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:52:16\n    |\n LL |     let b = a::B(2);\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:53:16\n    |\n LL |     let c = a::C(2, 3);\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:56:12\n    |\n LL |     let a::A(()) = a;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:57:12\n    |\n LL |     let a::A(_) = a;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:58:18\n    |\n LL |     match a { a::A(()) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:59:18\n    |\n LL |     match a { a::A(_) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:61:12\n    |\n LL |     let a::B(_) = b;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:62:12\n    |\n LL |     let a::B(_b) = b;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:63:18\n    |\n LL |     match b { a::B(_) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:64:18\n    |\n LL |     match b { a::B(_b) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:65:18\n    |\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:65:32\n    |\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n    |                                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:68:12\n    |\n LL |     let a::C(_, _) = c;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:69:12\n    |\n LL |     let a::C(_a, _) = c;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:70:12\n    |\n LL |     let a::C(_, _b) = c;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:71:12\n    |\n LL |     let a::C(_a, _b) = c;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:72:18\n    |\n LL |     match c { a::C(_, _) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:73:18\n    |\n LL |     match c { a::C(_a, _) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:74:18\n    |\n LL |     match c { a::C(_, _b) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:75:18\n    |\n LL |     match c { a::C(_a, _b) => {} }\n    |                  ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:83:17\n    |\n LL |     let a2 = a::A;\n    |                 ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:84:17\n    |\n LL |     let b2 = a::B;\n    |                 ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:85:17\n    |\n LL |     let c2 = a::C;\n    |                 ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:90:20\n    |\n LL |     let a = other::A(());\n    |                    ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:91:20\n    |\n LL |     let b = other::B(2);\n    |                    ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:92:20\n    |\n LL |     let c = other::C(2, 3);\n    |                    ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:95:16\n    |\n LL |     let other::A(()) = a;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:96:16\n    |\n LL |     let other::A(_) = a;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:97:22\n    |\n LL |     match a { other::A(()) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:98:22\n    |\n LL |     match a { other::A(_) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:100:16\n    |\n LL |     let other::B(_) = b;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:101:16\n    |\n LL |     let other::B(_b) = b;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:102:22\n    |\n LL |     match b { other::B(_) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:103:22\n    |\n LL |     match b { other::B(_b) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:104:22\n    |\n LL |     match b { other::B(1) => {} other::B(_) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:104:40\n    |\n LL |     match b { other::B(1) => {} other::B(_) => {} }\n    |                                        ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:107:16\n    |\n LL |     let other::C(_, _) = c;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:108:16\n    |\n LL |     let other::C(_a, _) = c;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:109:16\n    |\n LL |     let other::C(_, _b) = c;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:110:16\n    |\n LL |     let other::C(_a, _b) = c;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:111:22\n    |\n LL |     match c { other::C(_, _) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:112:22\n    |\n LL |     match c { other::C(_a, _) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:113:22\n    |\n LL |     match c { other::C(_, _b) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:114:22\n    |\n LL |     match c { other::C(_a, _b) => {} }\n    |                      ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `A` is private\n   --> $DIR/privacy5.rs:122:21\n    |\n LL |     let a2 = other::A;\n    |                     ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `B` is private\n   --> $DIR/privacy5.rs:123:21\n    |\n LL |     let b2 = other::B;\n    |                     ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `C` is private\n   --> $DIR/privacy5.rs:124:21\n    |\n LL |     let c2 = other::C;\n    |                     ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error: aborting due to 48 previous errors\n "}, {"sha": "72d62fe45ce745a5340bc29f7e1d7d67b807b102", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=b9865d9e3fdd87a5b7e45153effef3055d85f70e", "patch": "@@ -34,36 +34,48 @@ error[E0603]: tuple struct `Z` is private\n    |\n LL |         n::Z;\n    |            ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `S` is private\n   --> $DIR/privacy-struct-ctor.rs:29:8\n    |\n LL |     m::S;\n    |        ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `S` is private\n   --> $DIR/privacy-struct-ctor.rs:31:19\n    |\n LL |     let _: S = m::S(2);\n    |                   ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:35:11\n    |\n LL |     m::n::Z;\n    |           ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `S` is private\n   --> $DIR/privacy-struct-ctor.rs:41:16\n    |\n LL |     xcrate::m::S;\n    |                ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:45:19\n    |\n LL |     xcrate::m::n::Z;\n    |                   ^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error: aborting due to 10 previous errors\n "}, {"sha": "d75a376286fcc946f1ff9f39273ac3ca33f8c128", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=b9865d9e3fdd87a5b7e45153effef3055d85f70e", "patch": "@@ -15,6 +15,8 @@ error[E0603]: tuple struct `TupleStruct` is private\n    |\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n    |                                ^^^^^^^^^^^\n+   |\n+   = note: a tuple struct constructor is private if any of its fields is private\n \n error[E0603]: unit struct `UnitStruct` is private\n   --> $DIR/struct.rs:32:32"}, {"sha": "ac0025ec758072fa3ddee48e88085c9b9055a067", "filename": "src/test/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9865d9e3fdd87a5b7e45153effef3055d85f70e/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=b9865d9e3fdd87a5b7e45153effef3055d85f70e", "patch": "@@ -3,6 +3,8 @@ error[E0603]: tuple variant `Tuple` is private\n    |\n LL |     let variant_tuple = NonExhaustiveVariants::Tuple(640);\n    |                                                ^^^^^\n+   |\n+   = note: a tuple variant constructor is private if any of its fields is private\n \n error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:14:47\n@@ -21,12 +23,16 @@ error[E0603]: tuple variant `Tuple` is private\n    |\n LL |         NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n    |                                ^^^^^\n+   |\n+   = note: a tuple variant constructor is private if any of its fields is private\n \n error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:26:35\n    |\n LL |     if let NonExhaustiveVariants::Tuple(fe_tpl) = variant_struct {\n    |                                   ^^^^^\n+   |\n+   = note: a tuple variant constructor is private if any of its fields is private\n \n error[E0639]: cannot create non-exhaustive variant using struct expression\n   --> $DIR/variant.rs:8:26"}]}