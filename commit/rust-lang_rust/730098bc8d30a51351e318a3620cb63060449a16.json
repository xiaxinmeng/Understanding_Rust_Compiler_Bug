{"sha": "730098bc8d30a51351e318a3620cb63060449a16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMDA5OGJjOGQzMGE1MTM1MWUzMThhMzYyMGNiNjMwNjA0NDlhMTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-16T07:36:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-22T07:06:28Z"}, "message": "avoid allocating for ZST", "tree": {"sha": "d6f3f1cbad93a987ae3b9728ba9fce259b4c6d5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6f3f1cbad93a987ae3b9728ba9fce259b4c6d5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/730098bc8d30a51351e318a3620cb63060449a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/730098bc8d30a51351e318a3620cb63060449a16", "html_url": "https://github.com/rust-lang/rust/commit/730098bc8d30a51351e318a3620cb63060449a16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/730098bc8d30a51351e318a3620cb63060449a16/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad009ae73bc81e077100f7408592e92a19a55af8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad009ae73bc81e077100f7408592e92a19a55af8", "html_url": "https://github.com/rust-lang/rust/commit/ad009ae73bc81e077100f7408592e92a19a55af8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "217d2e11d29ed0283332b753a5841833e2ee6454", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/730098bc8d30a51351e318a3620cb63060449a16/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/730098bc8d30a51351e318a3620cb63060449a16/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=730098bc8d30a51351e318a3620cb63060449a16", "patch": "@@ -261,9 +261,12 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n     }\n \n     pub fn uninit_operand(&mut self, layout: TyLayout<'tcx>) -> EvalResult<'tcx, Operand> {\n-        // FIXME: Aren't we supposed to also be immediate for a ZST?\n         // This decides which types we will use the Immediate optimization for, and hence should\n         // match what `try_read_value` and `eval_place_to_op` support.\n+        if layout.is_zst() {\n+            return Ok(Operand::Immediate(Value::Scalar(ScalarMaybeUndef::Undef)));\n+        }\n+\n         Ok(match layout.abi {\n             layout::Abi::Scalar(..) =>\n                 Operand::Immediate(Value::Scalar(ScalarMaybeUndef::Undef)),"}]}