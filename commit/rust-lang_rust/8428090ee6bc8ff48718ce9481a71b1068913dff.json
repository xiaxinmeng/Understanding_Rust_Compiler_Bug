{"sha": "8428090ee6bc8ff48718ce9481a71b1068913dff", "node_id": "C_kwDOAAsO6NoAKDg0MjgwOTBlZTZiYzhmZjQ4NzE4Y2U5NDgxYTcxYjEwNjg5MTNkZmY", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2023-02-22T12:29:12Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2023-03-10T16:54:57Z"}, "message": "Fix run-make LVI tests", "tree": {"sha": "2f1eab78a8df2a804c44b57189c449a9a118f6ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f1eab78a8df2a804c44b57189c449a9a118f6ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8428090ee6bc8ff48718ce9481a71b1068913dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8428090ee6bc8ff48718ce9481a71b1068913dff", "html_url": "https://github.com/rust-lang/rust/commit/8428090ee6bc8ff48718ce9481a71b1068913dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8428090ee6bc8ff48718ce9481a71b1068913dff/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2743dc695fc894b22b8cadc664c93b8370612e8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2743dc695fc894b22b8cadc664c93b8370612e8b", "html_url": "https://github.com/rust-lang/rust/commit/2743dc695fc894b22b8cadc664c93b8370612e8b"}], "stats": {"total": 63, "additions": 38, "deletions": 25}, "files": [{"sha": "af9bc8c1d62eeab231297d6e222b87c3ce9b9dfc", "filename": "tests/run-make/x86_64-fortanix-unknown-sgx-lvi/cc_plus_one_asm.checks", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_asm.checks?ref=8428090ee6bc8ff48718ce9481a71b1068913dff", "patch": "@@ -1,8 +1,7 @@\n CHECK: cc_plus_one_asm\n CHECK-NEXT: movl\n CHECK-NEXT: lfence\n-CHECK-NEXT: inc\n-CHECK-NEXT: notq (%rsp)\n-CHECK-NEXT: notq (%rsp)\n+CHECK-NEXT: incl\n+CHECK-NEXT: shlq $0, (%rsp)\n CHECK-NEXT: lfence\n CHECK-NEXT: retq"}, {"sha": "885bf461bf3d540ba25ab9f65ef8a0ecf81c39cf", "filename": "tests/run-make/x86_64-fortanix-unknown-sgx-lvi/jumpto.checks", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fjumpto.checks", "raw_url": "https://github.com/rust-lang/rust/raw/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fjumpto.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fjumpto.checks?ref=8428090ee6bc8ff48718ce9481a71b1068913dff", "patch": "@@ -1,8 +1,24 @@\n-CHECK: libunwind::Registers_x86_64::jumpto\n+CHECK: __libunwind_Registers_x86_64_jumpto\n CHECK:      lfence\n CHECK:      lfence\n CHECK:      lfence\n CHECK:      lfence\n-CHECK:      shlq    $0, (%rsp)\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK-NEXT: popq [[REGISTER:%[a-z]+]]\n+CHECK-NEXT: lfence\n+CHECK-NEXT: popq [[REGISTER:%[a-z]+]]\n CHECK-NEXT: lfence\n-CHECK-NEXT: retq\n+CHECK-NEXT: jmpq *[[REGISTER]]"}, {"sha": "8a5493650a72097abfdcc9337c5f70eb6fcf3a27", "filename": "tests/run-make/x86_64-fortanix-unknown-sgx-lvi/print.checks", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fprint.checks", "raw_url": "https://github.com/rust-lang/rust/raw/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fprint.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fprint.checks?ref=8428090ee6bc8ff48718ce9481a71b1068913dff", "patch": "@@ -2,6 +2,5 @@ CHECK: print\n CHECK:      lfence\n CHECK:      lfence\n CHECK:      lfence\n-CHECK:      popq\n CHECK:      callq 0x{{[[:xdigit:]]*}} <_Unwind_Resume>\n CHECK-NEXT: ud2"}, {"sha": "235bb603b842bd91b50b86d7fbaebe2f62c17959", "filename": "tests/run-make/x86_64-fortanix-unknown-sgx-lvi/script.sh", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8428090ee6bc8ff48718ce9481a71b1068913dff/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh?ref=8428090ee6bc8ff48718ce9481a71b1068913dff", "patch": "@@ -20,39 +20,38 @@ function build {\n }\n \n function check {\n-    local func=$1\n+    local func_re=\"$1\"\n     local checks=\"${TEST_DIR}/$2\"\n     local asm=$(mktemp)\n-    local objdump=\"${BUILD_DIR}/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-objdump\"\n-    local filecheck=\"${BUILD_DIR}/x86_64-unknown-linux-gnu/llvm/build/bin/FileCheck\"\n-\n-    ${objdump} --disassemble-symbols=${func} --demangle \\\n-      ${WORK_DIR}/enclave/target/x86_64-fortanix-unknown-sgx/debug/enclave > ${asm}\n+    local objdump=\"${LLVM_BIN_DIR}/llvm-objdump\"\n+    local filecheck=\"${LLVM_BIN_DIR}/FileCheck\"\n+    local enclave=${WORK_DIR}/enclave/target/x86_64-fortanix-unknown-sgx/debug/enclave\n+\n+    func=\"$(${objdump} --syms --demangle ${enclave} | \\\n+            grep --only-matching -E \"[[:blank:]]+${func_re}\\$\" | \\\n+            sed -e 's/^[[:space:]]*//' )\"\n+    ${objdump} --disassemble-symbols=\"${func}\" --demangle \\\n+      ${enclave} > ${asm}\n     ${filecheck} --input-file ${asm} ${checks}\n }\n \n build\n \n-check unw_getcontext unw_getcontext.checks\n-check \"libunwind::Registers_x86_64::jumpto()\" jumpto.checks\n-check \"std::io::stdio::_print::h87f0c238421c45bc\" print.checks\n-check rust_plus_one_global_asm rust_plus_one_global_asm.checks \\\n-  || echo \"warning: module level assembly currently not hardened\"\n+check \"unw_getcontext\" unw_getcontext.checks\n+check \"__libunwind_Registers_x86_64_jumpto\" jumpto.checks\n+check 'std::io::stdio::_print::[[:alnum:]]+' print.checks\n+check rust_plus_one_global_asm rust_plus_one_global_asm.checks\n \n check cc_plus_one_c cc_plus_one_c.checks\n check cc_plus_one_c_asm cc_plus_one_c_asm.checks\n check cc_plus_one_cxx cc_plus_one_cxx.checks\n check cc_plus_one_cxx_asm cc_plus_one_cxx_asm.checks\n-check cc_plus_one_asm cc_plus_one_asm.checks \\\n-  || echo \"warning: the cc crate forwards assembly files to the CC compiler.\" \\\n-           \"Clang uses its own integrated assembler, which does not include the LVI passes.\"\n+check cc_plus_one_asm cc_plus_one_asm.checks\n \n check cmake_plus_one_c cmake_plus_one_c.checks\n check cmake_plus_one_c_asm cmake_plus_one_c_asm.checks\n-check cmake_plus_one_c_global_asm cmake_plus_one_c_global_asm.checks \\\n-  || echo \"warning: module level assembly currently not hardened\"\n+check cmake_plus_one_c_global_asm cmake_plus_one_c_global_asm.checks\n check cmake_plus_one_cxx cmake_plus_one_cxx.checks\n check cmake_plus_one_cxx_asm cmake_plus_one_cxx_asm.checks\n-check cmake_plus_one_cxx_global_asm cmake_plus_one_cxx_global_asm.checks \\\n-  || echo \"warning: module level assembly currently not hardened\"\n+check cmake_plus_one_cxx_global_asm cmake_plus_one_cxx_global_asm.checks\n check cmake_plus_one_asm cmake_plus_one_asm.checks"}]}