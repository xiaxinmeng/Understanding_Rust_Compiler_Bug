{"sha": "686a6a26fd2263e4bb958fbcf94b04244ed73e08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NmE2YTI2ZmQyMjYzZTRiYjk1OGZiY2Y5NGIwNDI0NGVkNzNlMDg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-19T15:57:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-19T15:57:21Z"}, "message": "Merge #5819\n\n5819: Apply couple of rule of thumbs to simplify highlighting code\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "100c26d33895d03ecf2ea03659657d4904e8f130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/100c26d33895d03ecf2ea03659657d4904e8f130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/686a6a26fd2263e4bb958fbcf94b04244ed73e08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPUvhCRBK7hj4Ov3rIwAAdHIIAHPlJsF8FG9fVx2PWYfFGcdO\nEoCh67gaxgq5YmrSZIvvaWm3N8PpHOQvRH8+0JMDSAesg00NoHPByMyF1jGeWrgE\n1DDwuZVEK/i+pGLxl8eEc2C7GvN7kPD6KyUw4rTrtbDQIHnri0fV1uhw5cmimXQf\nAr2pE79VV7okF5JEzfWGaxpseWy5HZcDLCWW19ZDMZC7TdLDOW+QoeLZtu1urPD4\nto6ZUfwIOWD3vAe9hq3tLHOSbeW/wv+8VWLl1Hio6jnNvbTj4BQXBq4LmBvQH8nJ\nnW4yq5VzgW7fRL7YyJP7IMFnzXD9280NeWvhAHX4i4YndUuAyNWlBChNhaXnx3A=\n=dJ/C\n-----END PGP SIGNATURE-----\n", "payload": "tree 100c26d33895d03ecf2ea03659657d4904e8f130\nparent 45c24ae0a5f9fedac996bdc26244cb1161810722\nparent b56e02007798db24600ccae51c0e892919635cad\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597852641 +0000\ncommitter GitHub <noreply@github.com> 1597852641 +0000\n\nMerge #5819\n\n5819: Apply couple of rule of thumbs to simplify highlighting code\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/686a6a26fd2263e4bb958fbcf94b04244ed73e08", "html_url": "https://github.com/rust-lang/rust/commit/686a6a26fd2263e4bb958fbcf94b04244ed73e08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/686a6a26fd2263e4bb958fbcf94b04244ed73e08/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45c24ae0a5f9fedac996bdc26244cb1161810722", "url": "https://api.github.com/repos/rust-lang/rust/commits/45c24ae0a5f9fedac996bdc26244cb1161810722", "html_url": "https://github.com/rust-lang/rust/commit/45c24ae0a5f9fedac996bdc26244cb1161810722"}, {"sha": "b56e02007798db24600ccae51c0e892919635cad", "url": "https://api.github.com/repos/rust-lang/rust/commits/b56e02007798db24600ccae51c0e892919635cad", "html_url": "https://github.com/rust-lang/rust/commit/b56e02007798db24600ccae51c0e892919635cad"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "db8aaed48c9c68a607339fb340febc7d37b990bb", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/686a6a26fd2263e4bb958fbcf94b04244ed73e08/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686a6a26fd2263e4bb958fbcf94b04244ed73e08/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=686a6a26fd2263e4bb958fbcf94b04244ed73e08", "patch": "@@ -484,9 +484,9 @@ fn highlight_element(\n             match name_kind {\n                 Some(NameClass::ExternCrate(_)) => HighlightTag::Module.into(),\n                 Some(NameClass::Definition(def)) => {\n-                    highlight_def(sema, db, def, None, false) | HighlightModifier::Definition\n+                    highlight_def(sema, db, def, None) | HighlightModifier::Definition\n                 }\n-                Some(NameClass::ConstReference(def)) => highlight_def(sema, db, def, None, false),\n+                Some(NameClass::ConstReference(def)) => highlight_def(sema, db, def, None),\n                 Some(NameClass::FieldShorthand { field, .. }) => {\n                     let mut h = HighlightTag::Field.into();\n                     if let Definition::Field(field) = field {\n@@ -519,13 +519,20 @@ fn highlight_element(\n                                     binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n                                 }\n                             };\n-                            let possibly_unsafe = match name_ref.syntax().parent() {\n-                                Some(parent) => {\n-                                    matches!(parent.kind(), FIELD_EXPR | RECORD_PAT_FIELD)\n+\n+                            let mut h = highlight_def(sema, db, def, Some(name_ref.clone()));\n+\n+                            if let Some(parent) = name_ref.syntax().parent() {\n+                                if matches!(parent.kind(), FIELD_EXPR | RECORD_PAT_FIELD) {\n+                                    if let Definition::Field(field) = def {\n+                                        if let VariantDef::Union(_) = field.parent_def(db) {\n+                                            h |= HighlightModifier::Unsafe;\n+                                        }\n+                                    }\n                                 }\n-                                None => false,\n-                            };\n-                            highlight_def(sema, db, def, Some(name_ref), possibly_unsafe)\n+                            }\n+\n+                            h\n                         }\n                         NameRefClass::FieldShorthand { .. } => HighlightTag::Field.into(),\n                     },\n@@ -734,20 +741,10 @@ fn highlight_def(\n     db: &RootDatabase,\n     def: Definition,\n     name_ref: Option<ast::NameRef>,\n-    possibly_unsafe: bool,\n ) -> Highlight {\n     match def {\n         Definition::Macro(_) => HighlightTag::Macro,\n-        Definition::Field(field) => {\n-            let mut h = HighlightTag::Field.into();\n-            if possibly_unsafe {\n-                if let VariantDef::Union(_) = field.parent_def(db) {\n-                    h |= HighlightModifier::Unsafe;\n-                }\n-            }\n-\n-            return h;\n-        }\n+        Definition::Field(_) => HighlightTag::Field,\n         Definition::ModuleDef(def) => match def {\n             hir::ModuleDef::Module(_) => HighlightTag::Module,\n             hir::ModuleDef::Function(func) => {"}]}