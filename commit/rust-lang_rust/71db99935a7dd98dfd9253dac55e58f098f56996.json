{"sha": "71db99935a7dd98dfd9253dac55e58f098f56996", "node_id": "C_kwDOAAsO6NoAKDcxZGI5OTkzNWE3ZGQ5OGRmZDkyNTNkYWM1NWU1OGYwOThmNTY5OTY", "commit": {"author": {"name": "David Koloski", "email": "dkoloski@google.com", "date": "2023-06-15T16:17:40Z"}, "committer": {"name": "David Koloski", "email": "dkoloski@google.com", "date": "2023-06-15T16:17:40Z"}, "message": "Add support for test tmpdir to fuchsia test runner\n\nAlso format the script to keep the code nice.", "tree": {"sha": "39effe0fa7567b72c638fc221f8dfa5bde2256b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39effe0fa7567b72c638fc221f8dfa5bde2256b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71db99935a7dd98dfd9253dac55e58f098f56996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71db99935a7dd98dfd9253dac55e58f098f56996", "html_url": "https://github.com/rust-lang/rust/commit/71db99935a7dd98dfd9253dac55e58f098f56996", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71db99935a7dd98dfd9253dac55e58f098f56996/comments", "author": null, "committer": null, "parents": [{"sha": "4bd4e2ea824f4f458cae8917047ebb6b88853fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd4e2ea824f4f458cae8917047ebb6b88853fe6", "html_url": "https://github.com/rust-lang/rust/commit/4bd4e2ea824f4f458cae8917047ebb6b88853fe6"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "78a8a6662ea64dcb5fd5154c131f76da7280c35c", "filename": "src/ci/docker/scripts/fuchsia-test-runner.py", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/71db99935a7dd98dfd9253dac55e58f098f56996/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "raw_url": "https://github.com/rust-lang/rust/raw/71db99935a7dd98dfd9253dac55e58f098f56996/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py?ref=71db99935a7dd98dfd9253dac55e58f098f56996", "patch": "@@ -171,7 +171,6 @@ def ffx_isolate_dir(self):\n     def home_dir(self):\n         return os.path.join(self.tmp_dir(), \"user-home\")\n \n-\n     def start_ffx_isolation(self):\n         # Most of this is translated directly from ffx's isolate library\n         os.mkdir(self.ffx_isolate_dir())\n@@ -424,7 +423,7 @@ def start(self):\n         )\n \n         # Create lockfiles\n-        open(self.pm_lockfile_path(), 'a').close()\n+        open(self.pm_lockfile_path(), \"a\").close()\n \n         # Write to file\n         self.write_to_file()\n@@ -458,6 +457,7 @@ def start(self):\n         ],\n         use: [\n             {{ storage: \"data\", path: \"/data\" }},\n+            {{ storage: \"tmp\", path: \"/tmp\" }},\n             {{ protocol: [ \"fuchsia.process.Launcher\" ] }},\n             {{ protocol: [ \"fuchsia.posix.socket.Provider\" ] }}\n         ],\n@@ -571,6 +571,9 @@ def log(msg):\n                 if os.getenv(\"RUST_BACKTRACE\") == None:\n                     env_vars += f'\\n            \"RUST_BACKTRACE=0\",'\n \n+                # Use /tmp as the test temporary directory\n+                env_vars += f'\\n            \"RUST_TEST_TMPDIR=/tmp\",'\n+\n                 cml.write(\n                     self.CML_TEMPLATE.format(env_vars=env_vars, exe_name=exe_name)\n                 )\n@@ -642,7 +645,7 @@ def log(msg):\n             log(\"Publishing package to repo...\")\n \n             # Publish package to repo\n-            with open(self.pm_lockfile_path(), 'w') as pm_lockfile:\n+            with open(self.pm_lockfile_path(), \"w\") as pm_lockfile:\n                 fcntl.lockf(pm_lockfile.fileno(), fcntl.LOCK_EX)\n                 subprocess.check_call(\n                     [\n@@ -1045,9 +1048,7 @@ def print_help(args):\n     )\n     debug_parser.set_defaults(func=debug)\n \n-    syslog_parser = subparsers.add_parser(\n-        \"syslog\", help=\"prints the device syslog\"\n-    )\n+    syslog_parser = subparsers.add_parser(\"syslog\", help=\"prints the device syslog\")\n     syslog_parser.set_defaults(func=syslog)\n \n     args = parser.parse_args()"}]}