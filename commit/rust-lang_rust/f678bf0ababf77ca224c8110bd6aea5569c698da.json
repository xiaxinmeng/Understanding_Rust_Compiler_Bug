{"sha": "f678bf0ababf77ca224c8110bd6aea5569c698da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NzhiZjBhYmFiZjc3Y2EyMjRjODExMGJkNmFlYTU1NjljNjk4ZGE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-27T10:08:54Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-27T10:09:59Z"}, "message": "Address comments", "tree": {"sha": "4af9e4538058abf888bb0701fd1b711601571a43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4af9e4538058abf888bb0701fd1b711601571a43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f678bf0ababf77ca224c8110bd6aea5569c698da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f678bf0ababf77ca224c8110bd6aea5569c698da", "html_url": "https://github.com/rust-lang/rust/commit/f678bf0ababf77ca224c8110bd6aea5569c698da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f678bf0ababf77ca224c8110bd6aea5569c698da/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a5978966305fdb921982db365bf77ac22d090cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a5978966305fdb921982db365bf77ac22d090cf", "html_url": "https://github.com/rust-lang/rust/commit/9a5978966305fdb921982db365bf77ac22d090cf"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "57c8c4f34e70e66c72ad4a8724972d8a989d6f74", "filename": "src/librustc/ty/maps/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f678bf0ababf77ca224c8110bd6aea5569c698da/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f678bf0ababf77ca224c8110bd6aea5569c698da/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs?ref=f678bf0ababf77ca224c8110bd6aea5569c698da", "patch": "@@ -35,10 +35,13 @@ pub trait QueryConfig<'tcx> {\n     type Value: Clone + for<'a> HashStable<StableHashingContext<'a>>;\n \n     fn query(key: Self::Key) -> Query<'tcx>;\n+\n+    // Don't use this method to access query results, instead use the methods on TyCtxt\n     fn query_map<'a>(tcx: TyCtxt<'a, 'tcx, '_>) -> &'a Lock<QueryMap<'tcx, Self>>;\n \n     fn to_dep_node(tcx: TyCtxt<'_, 'tcx, '_>, key: &Self::Key) -> DepNode;\n \n+    // Don't use this method to compute query results, instead use the methods on TyCtxt\n     fn compute(tcx: TyCtxt<'_, 'tcx, '_>, key: Self::Key) -> Self::Value;\n \n     fn handle_cycle_error(tcx: TyCtxt<'_, 'tcx, '_>) -> Self::Value;"}, {"sha": "37950463f74446d1f9b486224e416832a04e8f9b", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f678bf0ababf77ca224c8110bd6aea5569c698da/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f678bf0ababf77ca224c8110bd6aea5569c698da/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=f678bf0ababf77ca224c8110bd6aea5569c698da", "patch": "@@ -186,18 +186,18 @@ impl<'a, 'tcx, Q: QueryDescription<'tcx>> JobOwner<'a, 'tcx, Q> {\n         // The TyCtxt stored in TLS has the same global interner lifetime\n         // as `tcx`, so we use `with_related_context` to relate the 'gcx lifetimes\n         // when accessing the ImplicitCtxt\n-        let r = tls::with_related_context(tcx, move |icx| {\n+        let r = tls::with_related_context(tcx, move |current_icx| {\n             // Update the ImplicitCtxt to point to our new query job\n-            let icx = tls::ImplicitCtxt {\n+            let new_icx = tls::ImplicitCtxt {\n                 tcx,\n                 query: Some(self.job.clone()),\n-                layout_depth: icx.layout_depth,\n-                task: icx.task,\n+                layout_depth: current_icx.layout_depth,\n+                task: current_icx.task,\n             };\n \n             // Use the ImplicitCtxt while we execute the query\n-            tls::enter_context(&icx, |icx| {\n-                compute(icx.tcx)\n+            tls::enter_context(&new_icx, |_| {\n+                compute(tcx)\n             })\n         });\n "}]}