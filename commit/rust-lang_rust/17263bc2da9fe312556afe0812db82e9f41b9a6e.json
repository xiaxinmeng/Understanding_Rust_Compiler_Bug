{"sha": "17263bc2da9fe312556afe0812db82e9f41b9a6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MjYzYmMyZGE5ZmUzMTI1NTZhZmUwODEyZGI4MmU5ZjQxYjlhNmU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-06T22:57:56Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-06T22:57:56Z"}, "message": "Remove dead code", "tree": {"sha": "488d3f5ea261b0dd32001f94d6e30abc166e5071", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/488d3f5ea261b0dd32001f94d6e30abc166e5071"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17263bc2da9fe312556afe0812db82e9f41b9a6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17263bc2da9fe312556afe0812db82e9f41b9a6e", "html_url": "https://github.com/rust-lang/rust/commit/17263bc2da9fe312556afe0812db82e9f41b9a6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17263bc2da9fe312556afe0812db82e9f41b9a6e/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d240490229b31e1ebd6871a08ee2cefeb580ba78", "url": "https://api.github.com/repos/rust-lang/rust/commits/d240490229b31e1ebd6871a08ee2cefeb580ba78", "html_url": "https://github.com/rust-lang/rust/commit/d240490229b31e1ebd6871a08ee2cefeb580ba78"}], "stats": {"total": 18, "additions": 1, "deletions": 17}, "files": [{"sha": "343a067508a9710b5c656b812fb0ff7bb29608c1", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/17263bc2da9fe312556afe0812db82e9f41b9a6e/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17263bc2da9fe312556afe0812db82e9f41b9a6e/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=17263bc2da9fe312556afe0812db82e9f41b9a6e", "patch": "@@ -779,7 +779,7 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                         // All of these are valid, so do nothing\n                         => {}\n                         (actual, Some(Disambiguator::Kind(expected))) if actual == expected => {}\n-                        (_, Some(expected)) => {\n+                        (_, Some(Disambiguator::Kind(expected))) => {\n                             // The resolved item did not match the disambiguator; give a better error than 'not found'\n                             let msg = format!(\"incompatible link kind for `{}`\", path_str);\n                             report_diagnostic(cx, &msg, &item, &dox, link_range, |diag, sp| {\n@@ -934,22 +934,6 @@ impl Disambiguator {\n             }\n         }\n     }\n-\n-    fn article(&self) -> &'static str {\n-        match self {\n-            Self::Namespace(_) => \"a\",\n-            Self::Kind(kind) => kind.article(),\n-        }\n-    }\n-\n-    fn descr(&self, def_id: DefId) -> &'static str {\n-        match self {\n-            Self::Namespace(Namespace::TypeNS) => \"type\",\n-            Self::Namespace(Namespace::ValueNS) => \"value\",\n-            Self::Namespace(Namespace::MacroNS) => \"macro\",\n-            Self::Kind(kind) => kind.descr(def_id),\n-        }\n-    }\n }\n \n /// Reports a diagnostic for an intra-doc link."}]}