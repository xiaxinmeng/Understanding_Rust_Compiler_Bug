{"sha": "8f17f3d594f599b5f1a9c9960d363513368e0958", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMTdmM2Q1OTRmNTk5YjVmMWE5Yzk5NjBkMzYzNTEzMzY4ZTA5NTg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-03-08T09:48:51Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-03-08T09:48:51Z"}, "message": "Deduplicate search_dependencies results", "tree": {"sha": "a09722d58c983f0efccb51d1d159b9ac939a2426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a09722d58c983f0efccb51d1d159b9ac939a2426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f17f3d594f599b5f1a9c9960d363513368e0958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f17f3d594f599b5f1a9c9960d363513368e0958", "html_url": "https://github.com/rust-lang/rust/commit/8f17f3d594f599b5f1a9c9960d363513368e0958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f17f3d594f599b5f1a9c9960d363513368e0958/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d54e1157b66017e4aae38328cd213286e39ca130", "url": "https://api.github.com/repos/rust-lang/rust/commits/d54e1157b66017e4aae38328cd213286e39ca130", "html_url": "https://github.com/rust-lang/rust/commit/d54e1157b66017e4aae38328cd213286e39ca130"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "4206191162be896e1faff119d719ecb204ad0fba", "filename": "crates/hir_def/src/import_map.rs", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/8f17f3d594f599b5f1a9c9960d363513368e0958/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f17f3d594f599b5f1a9c9960d363513368e0958/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fimport_map.rs?ref=8f17f3d594f599b5f1a9c9960d363513368e0958", "patch": "@@ -388,7 +388,7 @@ pub fn search_dependencies<'a>(\n     db: &'a dyn DefDatabase,\n     krate: CrateId,\n     query: Query,\n-) -> Vec<ItemInNs> {\n+) -> FxHashSet<ItemInNs> {\n     let _p = profile::span(\"search_dependencies\").detail(|| format!(\"{:?}\", query));\n \n     let graph = db.crate_graph();\n@@ -403,7 +403,7 @@ pub fn search_dependencies<'a>(\n     }\n \n     let mut stream = op.union();\n-    let mut res = Vec::new();\n+    let mut res = FxHashSet::default();\n     while let Some((_, indexed_values)) = stream.next() {\n         for indexed_value in indexed_values {\n             let import_map = &import_maps[indexed_value.index];\n@@ -435,7 +435,6 @@ pub fn search_dependencies<'a>(\n             res.extend(iter);\n \n             if res.len() >= query.limit {\n-                res.truncate(query.limit);\n                 return res;\n             }\n         }\n@@ -821,10 +820,10 @@ mod tests {\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Fuzzy),\n             expect![[r#\"\n                 dep::fmt (t)\n+                dep::fmt::Display::format_method (a)\n                 dep::fmt::Display (t)\n                 dep::fmt::Display::FMT_CONST (a)\n                 dep::fmt::Display::format_function (a)\n-                dep::fmt::Display::format_method (a)\n             \"#]],\n         );\n     }\n@@ -850,9 +849,9 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Fuzzy).assoc_items_only(),\n             expect![[r#\"\n+            dep::fmt::Display::format_method (a)\n             dep::fmt::Display::FMT_CONST (a)\n             dep::fmt::Display::format_function (a)\n-            dep::fmt::Display::format_method (a)\n         \"#]],\n         );\n \n@@ -911,12 +910,12 @@ mod tests {\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Fuzzy),\n             expect![[r#\"\n                 dep::fmt (t)\n-                dep::Fmt (t)\n+                dep::format (f)\n                 dep::Fmt (v)\n-                dep::Fmt (m)\n                 dep::fmt::Display (t)\n+                dep::Fmt (t)\n                 dep::fmt::Display::fmt (a)\n-                dep::format (f)\n+                dep::Fmt (m)\n             \"#]],\n         );\n \n@@ -926,10 +925,10 @@ mod tests {\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Equals),\n             expect![[r#\"\n                 dep::fmt (t)\n-                dep::Fmt (t)\n                 dep::Fmt (v)\n-                dep::Fmt (m)\n+                dep::Fmt (t)\n                 dep::fmt::Display::fmt (a)\n+                dep::Fmt (m)\n             \"#]],\n         );\n \n@@ -939,11 +938,11 @@ mod tests {\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Contains),\n             expect![[r#\"\n                 dep::fmt (t)\n-                dep::Fmt (t)\n                 dep::Fmt (v)\n-                dep::Fmt (m)\n                 dep::fmt::Display (t)\n+                dep::Fmt (t)\n                 dep::fmt::Display::fmt (a)\n+                dep::Fmt (m)\n             \"#]],\n         );\n     }\n@@ -980,11 +979,11 @@ mod tests {\n             Query::new(\"fmt\".to_string()),\n             expect![[r#\"\n                 dep::fmt (t)\n-                dep::Fmt (t)\n                 dep::Fmt (v)\n-                dep::Fmt (m)\n                 dep::fmt::Display (t)\n+                dep::Fmt (t)\n                 dep::fmt::Display::fmt (a)\n+                dep::Fmt (m)\n             \"#]],\n         );\n \n@@ -994,10 +993,10 @@ mod tests {\n             Query::new(\"fmt\".to_string()).name_only(),\n             expect![[r#\"\n                 dep::fmt (t)\n-                dep::Fmt (t)\n                 dep::Fmt (v)\n-                dep::Fmt (m)\n+                dep::Fmt (t)\n                 dep::fmt::Display::fmt (a)\n+                dep::Fmt (m)\n             \"#]],\n         );\n     }\n@@ -1018,9 +1017,9 @@ mod tests {\n             Query::new(\"FMT\".to_string()),\n             expect![[r#\"\n                 dep::fmt (t)\n+                dep::FMT (v)\n                 dep::fmt (v)\n                 dep::FMT (t)\n-                dep::FMT (v)\n             \"#]],\n         );\n \n@@ -1060,6 +1059,8 @@ mod tests {\n             expect![[r#\"\n                 dep::fmt (t)\n                 dep::Fmt (t)\n+                dep::Fmt (m)\n+                dep::Fmt (v)\n             \"#]],\n         );\n     }\n@@ -1080,9 +1081,9 @@ mod tests {\n             Query::new(\"FMT\".to_string()),\n             expect![[r#\"\n                 dep::fmt (t)\n+                dep::FMT (v)\n                 dep::fmt (v)\n                 dep::FMT (t)\n-                dep::FMT (v)\n             \"#]],\n         );\n "}]}