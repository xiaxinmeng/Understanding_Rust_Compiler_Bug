{"sha": "1ac17fcddb80187a76a461982e2028a5df48de3d", "node_id": "C_kwDOAAsO6NoAKDFhYzE3ZmNkZGI4MDE4N2E3NmE0NjE5ODJlMjAyOGE1ZGY0OGRlM2Q", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-10T22:16:01Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-11T20:58:57Z"}, "message": "Remove box syntax from Box<dyn Iterator> construction\n\nThe iterators created should be pretty light weight.", "tree": {"sha": "9d232eec6c92d543bfee7c2072231192177a5a46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d232eec6c92d543bfee7c2072231192177a5a46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac17fcddb80187a76a461982e2028a5df48de3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac17fcddb80187a76a461982e2028a5df48de3d", "html_url": "https://github.com/rust-lang/rust/commit/1ac17fcddb80187a76a461982e2028a5df48de3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac17fcddb80187a76a461982e2028a5df48de3d/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb5e94bb62308735612c9102e8ca6ee38678db12", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5e94bb62308735612c9102e8ca6ee38678db12", "html_url": "https://github.com/rust-lang/rust/commit/cb5e94bb62308735612c9102e8ca6ee38678db12"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "1c22fb3601135c40dde919f64bff8a5e8c73d0d2", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ac17fcddb80187a76a461982e2028a5df48de3d/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac17fcddb80187a76a461982e2028a5df48de3d/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=1ac17fcddb80187a76a461982e2028a5df48de3d", "patch": "@@ -737,21 +737,23 @@ pub(crate) fn href_relative_parts<'fqp>(\n         if f != r {\n             let dissimilar_part_count = relative_to_fqp.len() - i;\n             let fqp_module = &fqp[i..fqp.len()];\n-            return box iter::repeat(sym::dotdot)\n-                .take(dissimilar_part_count)\n-                .chain(fqp_module.iter().copied());\n+            return Box::new(\n+                iter::repeat(sym::dotdot)\n+                    .take(dissimilar_part_count)\n+                    .chain(fqp_module.iter().copied()),\n+            );\n         }\n     }\n     // e.g. linking to std::sync::atomic from std::sync\n     if relative_to_fqp.len() < fqp.len() {\n-        box fqp[relative_to_fqp.len()..fqp.len()].iter().copied()\n+        Box::new(fqp[relative_to_fqp.len()..fqp.len()].iter().copied())\n     // e.g. linking to std::sync from std::sync::atomic\n     } else if fqp.len() < relative_to_fqp.len() {\n         let dissimilar_part_count = relative_to_fqp.len() - fqp.len();\n-        box iter::repeat(sym::dotdot).take(dissimilar_part_count)\n+        Box::new(iter::repeat(sym::dotdot).take(dissimilar_part_count))\n     // linking to the same module\n     } else {\n-        box iter::empty()\n+        Box::new(iter::empty())\n     }\n }\n "}]}