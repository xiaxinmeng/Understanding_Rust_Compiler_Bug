{"sha": "3254bee55e38c756818bca6a8d65ff8fad641e9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNTRiZWU1NWUzOGM3NTY4MThiY2E2YThkNjVmZjhmYWQ2NDFlOWE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-27T21:48:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-27T21:48:40Z"}, "message": "More fixing for windows build.", "tree": {"sha": "f9bfd5df9364e27e0a302f870bea169d67d1aee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9bfd5df9364e27e0a302f870bea169d67d1aee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3254bee55e38c756818bca6a8d65ff8fad641e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3254bee55e38c756818bca6a8d65ff8fad641e9a", "html_url": "https://github.com/rust-lang/rust/commit/3254bee55e38c756818bca6a8d65ff8fad641e9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3254bee55e38c756818bca6a8d65ff8fad641e9a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51152ccf9dd5830c323ec4e9047c277d1b9292d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/51152ccf9dd5830c323ec4e9047c277d1b9292d1", "html_url": "https://github.com/rust-lang/rust/commit/51152ccf9dd5830c323ec4e9047c277d1b9292d1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0b67b136c7fcc489fcc082227072c485e207131b", "filename": "src/libcore/os.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3254bee55e38c756818bca6a8d65ff8fad641e9a/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3254bee55e38c756818bca6a8d65ff8fad641e9a/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=3254bee55e38c756818bca6a8d65ff8fad641e9a", "patch": "@@ -68,7 +68,7 @@ pub fn fill_charp_buf(f: fn(*mut c_char, size_t) -> bool)\n mod win32 {\n     use libc::DWORD;\n \n-    fn fill_utf16_buf_and_decode(f: fn(*mut u16, DWORD) -> DWORD)\n+    pub fn fill_utf16_buf_and_decode(f: fn(*mut u16, DWORD) -> DWORD)\n         -> Option<~str> {\n         let mut n = tmpbuf_sz as DWORD;\n         let mut res = None;\n@@ -93,7 +93,7 @@ mod win32 {\n         return res;\n     }\n \n-    fn as_utf16_p<T>(s: &str, f: fn(*u16) -> T) -> T {\n+    pub fn as_utf16_p<T>(s: &str, f: fn(*u16) -> T) -> T {\n         let mut t = str::to_utf16(s);\n         // Null terminate before passing on.\n         t += ~[0u16];\n@@ -557,7 +557,7 @@ pub fn make_dir(p: &Path, mode: c_int) -> bool {\n         // FIXME: turn mode into something useful? #2623\n         do as_utf16_p(p.to_str()) |buf| {\n             libc::CreateDirectoryW(buf, unsafe {\n-                unsafe::reinterpret_cast(&0)\n+                cast::reinterpret_cast(&0)\n             })\n                 != (0 as BOOL)\n         }"}]}