{"sha": "e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "node_id": "C_kwDOAAsO6NoAKGU2ZTkzZTAyMWU3YmU2YzlhZTQwMDE0NWEyYWEyMzVmMTZmOWViNDU", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-01-24T11:41:18Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-01-24T11:41:18Z"}, "message": "add test where we ignore hr implied bounds", "tree": {"sha": "703ae4a9d0dd93ec24cec118938a17ec54a3d064", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/703ae4a9d0dd93ec24cec118938a17ec54a3d064"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "html_url": "https://github.com/rust-lang/rust/commit/e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e93e021e7be6c9ae400145a2aa235f16f9eb45/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e6a9e8b6251bbc8276cb78cabe1998deecbed7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e6a9e8b6251bbc8276cb78cabe1998deecbed7", "html_url": "https://github.com/rust-lang/rust/commit/c8e6a9e8b6251bbc8276cb78cabe1998deecbed7"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "103884c50313f35feccd2ec480bb5845ce531e5b", "filename": "tests/ui/regions/higher-ranked-implied.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e6e93e021e7be6c9ae400145a2aa235f16f9eb45/tests%2Fui%2Fregions%2Fhigher-ranked-implied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e93e021e7be6c9ae400145a2aa235f16f9eb45/tests%2Fui%2Fregions%2Fhigher-ranked-implied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fhigher-ranked-implied.rs?ref=e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "patch": "@@ -0,0 +1,14 @@\n+// FIXME: This test should pass as the first two fields add implied bounds that\n+// `'a` is equal to `'b` while the last one should simply use that fact. With\n+// the current implementation this errors. We have to be careful as implied bounds\n+// are only sound if they're also correctly checked.\n+\n+struct Inv<T>(*mut T); // `T` is invariant.\n+type A = for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'a ()>);\n+type B = for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'b ()>);\n+\n+fn main() {\n+    let x: A = |_, _, _| ();\n+    let y: B = x; //~ ERROR mismatched types\n+    let _: A = y; //~ ERROR mismatched types\n+}"}, {"sha": "9d80eacd7c32047f3e85f7c21c40b9bae0e48396", "filename": "tests/ui/regions/higher-ranked-implied.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e6e93e021e7be6c9ae400145a2aa235f16f9eb45/tests%2Fui%2Fregions%2Fhigher-ranked-implied.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e93e021e7be6c9ae400145a2aa235f16f9eb45/tests%2Fui%2Fregions%2Fhigher-ranked-implied.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fhigher-ranked-implied.stderr?ref=e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/higher-ranked-implied.rs:12:16\n+   |\n+LL |     let y: B = x;\n+   |                ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'b ()>)`\n+              found fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'a ()>)`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/higher-ranked-implied.rs:13:16\n+   |\n+LL |     let _: A = y;\n+   |                ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'a ()>)`\n+              found fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'b ()>)`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}