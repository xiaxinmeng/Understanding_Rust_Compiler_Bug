{"sha": "148bdf85f24099498918087d89103cbd808ea89d", "node_id": "C_kwDOAAsO6NoAKDE0OGJkZjg1ZjI0MDk5NDk4OTE4MDg3ZDg5MTAzY2JkODA4ZWE4OWQ", "commit": {"author": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2022-08-23T04:55:05Z"}, "committer": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2022-08-23T05:52:47Z"}, "message": "Do not substitute `Self` when in same impl block", "tree": {"sha": "39a818a0ac3d601cb27711c1ebcfff8c92163014", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a818a0ac3d601cb27711c1ebcfff8c92163014"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/148bdf85f24099498918087d89103cbd808ea89d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/148bdf85f24099498918087d89103cbd808ea89d", "html_url": "https://github.com/rust-lang/rust/commit/148bdf85f24099498918087d89103cbd808ea89d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/148bdf85f24099498918087d89103cbd808ea89d/comments", "author": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6711ded5cdbb6045e8d1e62ba71c98c4fc857601", "url": "https://api.github.com/repos/rust-lang/rust/commits/6711ded5cdbb6045e8d1e62ba71c98c4fc857601", "html_url": "https://github.com/rust-lang/rust/commit/6711ded5cdbb6045e8d1e62ba71c98c4fc857601"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "96890ad51a6f941e3399fea772058ab19d653af9", "filename": "crates/ide-assists/src/handlers/inline_call.rs", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/148bdf85f24099498918087d89103cbd808ea89d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/148bdf85f24099498918087d89103cbd808ea89d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=148bdf85f24099498918087d89103cbd808ea89d", "patch": "@@ -311,12 +311,16 @@ fn inline(\n     } else {\n         fn_body.clone_for_update()\n     };\n-    if let Some(t) = body.syntax().ancestors().find_map(ast::Impl::cast).and_then(|i| i.self_ty()) {\n-        body.syntax()\n-            .descendants_with_tokens()\n-            .filter_map(NodeOrToken::into_token)\n-            .filter(|tok| tok.kind() == SyntaxKind::SELF_TYPE_KW)\n-            .for_each(|tok| ted::replace(tok, t.syntax()));\n+    if let Some(imp) = body.syntax().ancestors().find_map(ast::Impl::cast) {\n+        if !node.syntax().ancestors().any(|anc| &anc == imp.syntax()) {\n+            if let Some(t) = imp.self_ty() {\n+                body.syntax()\n+                    .descendants_with_tokens()\n+                    .filter_map(NodeOrToken::into_token)\n+                    .filter(|tok| tok.kind() == SyntaxKind::SELF_TYPE_KW)\n+                    .for_each(|tok| ted::replace(tok, t.syntax()));\n+            }\n+        }\n     }\n     let usages_for_locals = |local| {\n         Definition::Local(local)\n@@ -1221,6 +1225,31 @@ impl A {\n fn main() {\n     A(114514);\n }\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn inline_call_with_self_type_but_within_same_impl() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+struct A(u32);\n+impl A {\n+    fn f() -> Self { Self(1919810) }\n+    fn main() {\n+        Self::f$0();\n+    }\n+}\n+\"#,\n+            r#\"\n+struct A(u32);\n+impl A {\n+    fn f() -> Self { Self(1919810) }\n+    fn main() {\n+        Self(1919810);\n+    }\n+}\n \"#,\n         )\n     }"}]}