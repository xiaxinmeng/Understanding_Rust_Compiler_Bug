{"sha": "5dafa6a46466ab26b7cd7c38f965d37af045af5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYWZhNmE0NjQ2NmFiMjZiN2NkN2MzOGY5NjVkMzdhZjA0NWFmNWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T08:23:44Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T08:26:55Z"}, "message": "add CStore::item_generics_num_lifetimes", "tree": {"sha": "e336711931d2f3856751cf733d6a4e63f3e8bad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e336711931d2f3856751cf733d6a4e63f3e8bad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dafa6a46466ab26b7cd7c38f965d37af045af5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dafa6a46466ab26b7cd7c38f965d37af045af5d", "html_url": "https://github.com/rust-lang/rust/commit/5dafa6a46466ab26b7cd7c38f965d37af045af5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dafa6a46466ab26b7cd7c38f965d37af045af5d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b743af6a241edbe8700ce084000f4d3cf7c1182e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b743af6a241edbe8700ce084000f4d3cf7c1182e", "html_url": "https://github.com/rust-lang/rust/commit/b743af6a241edbe8700ce084000f4d3cf7c1182e"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "5b1e7673629b192fefb1c6cf5a01b331f253474b", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=5dafa6a46466ab26b7cd7c38f965d37af045af5d", "patch": "@@ -5,8 +5,8 @@\n use crate::hir::map as hir_map;\n use crate::hir::map::definitions::{DefKey, DefPathTable};\n use crate::session::search_paths::PathKind;\n-use crate::session::{CrateDisambiguator, Session};\n-use crate::ty::{self, TyCtxt};\n+use crate::session::CrateDisambiguator;\n+use crate::ty::TyCtxt;\n \n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{self, MetadataRef};\n@@ -208,7 +208,6 @@ pub trait CrateStore {\n     fn crate_is_private_dep_untracked(&self, cnum: CrateNum) -> bool;\n     fn crate_disambiguator_untracked(&self, cnum: CrateNum) -> CrateDisambiguator;\n     fn crate_hash_untracked(&self, cnum: CrateNum) -> Svh;\n-    fn item_generics_cloned_untracked(&self, def: DefId, sess: &Session) -> ty::Generics;\n \n     // This is basically a 1-based range of ints, which is a little\n     // silly - I may fix that."}, {"sha": "0edc51f1aa4ec77b602e4b8ceba4c4b89835442c", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=5dafa6a46466ab26b7cd7c38f965d37af045af5d", "patch": "@@ -173,7 +173,7 @@ struct LoweringContext<'a, 'hir: 'a> {\n pub trait Resolver {\n     fn def_key(&mut self, id: DefId) -> DefKey;\n \n-    fn item_generics_num_liftimes(&self, def: DefId, sess: &Session) -> usize;\n+    fn item_generics_num_lifetimes(&self, def: DefId, sess: &Session) -> usize;\n \n     /// Obtains resolution for a `NodeId` with a single resolution.\n     fn get_partial_res(&mut self, id: NodeId) -> Option<PartialRes>;"}, {"sha": "9b504704ae06ca6103d7535b63d39400fc8fdebd", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=5dafa6a46466ab26b7cd7c38f965d37af045af5d", "patch": "@@ -93,7 +93,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             return n;\n                         }\n                         assert!(!def_id.is_local());\n-                        let n = self.resolver.item_generics_num_liftimes(def_id, self.sess);\n+                        let n = self.resolver.item_generics_num_lifetimes(def_id, self.sess);\n                         self.type_def_lifetime_params.insert(def_id, n);\n                         n\n                     });"}, {"sha": "30d049d143eabc576d5ea4af9f3399bd36019565", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=5dafa6a46466ab26b7cd7c38f965d37af045af5d", "patch": "@@ -12,8 +12,7 @@ use rustc::session::{CrateDisambiguator, Session};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n-use rustc_hir::def_id::CrateNum;\n-use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_index::vec::IndexVec;\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n "}, {"sha": "eb5754bf99bfbcec0f808bb05be51f5694b6119c", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=5dafa6a46466ab26b7cd7c38f965d37af045af5d", "patch": "@@ -478,17 +478,17 @@ impl CStore {\n     pub fn crate_source_untracked(&self, cnum: CrateNum) -> CrateSource {\n         self.get_crate_data(cnum).source.clone()\n     }\n+\n+    pub fn item_generics_num_lifetimes(&self, def_id: DefId, sess: &Session) -> usize {\n+        self.get_crate_data(def_id.krate).get_generics(def_id.index, sess).own_counts().lifetimes\n+    }\n }\n \n impl CrateStore for CStore {\n     fn as_any(&self) -> &dyn Any {\n         self\n     }\n \n-    fn item_generics_cloned_untracked(&self, def: DefId, sess: &Session) -> ty::Generics {\n-        self.get_crate_data(def.krate).get_generics(def.index, sess)\n-    }\n-\n     fn crate_name_untracked(&self, cnum: CrateNum) -> Symbol {\n         self.get_crate_data(cnum).root.name\n     }"}, {"sha": "9e4486e16f2ccb0a716ce8c7570f7b6c54e220da", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dafa6a46466ab26b7cd7c38f965d37af045af5d/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5dafa6a46466ab26b7cd7c38f965d37af045af5d", "patch": "@@ -1031,8 +1031,8 @@ impl rustc_ast_lowering::Resolver for Resolver<'_> {\n         if id.is_local() { self.definitions().def_key(id.index) } else { self.cstore().def_key(id) }\n     }\n \n-    fn item_generics_num_liftimes(&self, def_id: DefId, sess: &Session) -> usize {\n-        self.cstore().item_generics_cloned_untracked(def_id, sess).own_counts().lifetimes\n+    fn item_generics_num_lifetimes(&self, def_id: DefId, sess: &Session) -> usize {\n+        self.cstore().item_generics_num_lifetimes(def_id, sess)\n     }\n \n     fn resolve_str_path("}]}