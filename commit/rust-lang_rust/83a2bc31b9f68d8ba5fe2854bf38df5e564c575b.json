{"sha": "83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYTJiYzMxYjlmNjhkOGJhNWZlMjg1NGJmMzhkZjVlNTY0YzU3NWI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-04-23T14:43:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-28T16:05:15Z"}, "message": "Add new tool to check HTML:\n * Make html-checker run by default on rust compiler docs as well\n * Ensure html-checker is run on CI\n * Lazify tidy binary presence check", "tree": {"sha": "6c0a994f3275f773f35c442d10a3aee1f3607136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c0a994f3275f773f35c442d10a3aee1f3607136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "html_url": "https://github.com/rust-lang/rust/commit/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451e98e7b02c8bf5e3bd5c9e780d51f7986a4408", "url": "https://api.github.com/repos/rust-lang/rust/commits/451e98e7b02c8bf5e3bd5c9e780d51f7986a4408", "html_url": "https://github.com/rust-lang/rust/commit/451e98e7b02c8bf5e3bd5c9e780d51f7986a4408"}], "stats": {"total": 170, "additions": 166, "deletions": 4}, "files": [{"sha": "d57d17a3581fdc25a4f6d9f471b3affde5961cca", "filename": "Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -1578,6 +1578,13 @@ dependencies = [\n  \"winapi 0.3.9\",\n ]\n \n+[[package]]\n+name = \"html-checker\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"walkdir\",\n+]\n+\n [[package]]\n name = \"html5ever\"\n version = \"0.25.1\""}, {"sha": "4c00a7dc99ea9ddecee65ef54d11e621f01b1900", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -34,6 +34,7 @@ members = [\n   \"src/tools/unicode-table-generator\",\n   \"src/tools/expand-yaml-anchors\",\n   \"src/tools/jsondocck\",\n+  \"src/tools/html-checker\",\n ]\n \n exclude = ["}, {"sha": "b4c5a2abc9c905497a45228030f00a26becbe5d7", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -450,6 +450,7 @@ impl<'a> Builder<'a> {\n                 test::RustdocTheme,\n                 test::RustdocUi,\n                 test::RustdocJson,\n+                test::HtmlCheck,\n                 // Run bootstrap close to the end as it's unlikely to fail\n                 test::Bootstrap,\n                 // Run run-make last, since these won't pass without make on Windows"}, {"sha": "634332df863528f16131bf6474cfd02c482320ed", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -501,8 +501,8 @@ impl Step for Std {\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Rustc {\n-    stage: u32,\n-    target: TargetSelection,\n+    pub stage: u32,\n+    pub target: TargetSelection,\n }\n \n impl Step for Rustc {"}, {"sha": "64b3ee7c359e7144905ec7aed25ee59de2536049", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -9,7 +9,7 @@ use std::fmt;\n use std::fs;\n use std::iter;\n use std::path::{Path, PathBuf};\n-use std::process::Command;\n+use std::process::{Command, Stdio};\n \n use build_helper::{self, output, t};\n \n@@ -161,6 +161,49 @@ You can skip linkcheck with --exclude src/tools/linkchecker\"\n     }\n }\n \n+fn check_if_tidy_is_installed() -> bool {\n+    Command::new(\"tidy\")\n+        .arg(\"--version\")\n+        .stdout(Stdio::null())\n+        .status()\n+        .map_or(false, |status| status.success())\n+}\n+\n+#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+pub struct HtmlCheck {\n+    target: TargetSelection,\n+}\n+\n+impl Step for HtmlCheck {\n+    type Output = ();\n+    const DEFAULT: bool = true;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        let run = run.path(\"src/tools/html-checker\");\n+        run.lazy_default_condition(Box::new(check_if_tidy_is_installed))\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(HtmlCheck { target: run.target });\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) {\n+        if !check_if_tidy_is_installed() {\n+            eprintln!(\"not running HTML-check tool because `tidy` is missing\");\n+            eprintln!(\n+                \"Note that `tidy` is not the in-tree `src/tools/tidy` but needs to be installed\"\n+            );\n+            panic!(\"Cannot run html-check tests\");\n+        }\n+        // Ensure that a few different kinds of documentation are available.\n+        builder.default_doc(&[]);\n+        builder.ensure(crate::doc::Rustc { target: self.target, stage: builder.top_stage });\n+\n+        try_run(builder, builder.tool_cmd(Tool::HtmlChecker).arg(builder.doc_out(self.target)));\n+    }\n+}\n+\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Cargotest {\n     stage: u32,"}, {"sha": "aa7fe658df3209cdeb3b7050d1dc0e1d29aff4f3", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -376,6 +376,7 @@ bootstrap_tool!(\n     ExpandYamlAnchors, \"src/tools/expand-yaml-anchors\", \"expand-yaml-anchors\";\n     LintDocs, \"src/tools/lint-docs\", \"lint-docs\";\n     JsonDocCk, \"src/tools/jsondocck\", \"jsondocck\";\n+    HtmlChecker, \"src/tools/html-checker\", \"html-checker\";\n );\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq, Ord, PartialOrd)]"}, {"sha": "faed1761fa45c0fac3751b4fb8ab6ca145871801", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -12,7 +12,8 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   cmake \\\n   libssl-dev \\\n   sudo \\\n-  xz-utils\n+  xz-utils \\\n+  tidy\n \n # Install dependencies for chromium browser\n RUN apt-get install -y \\"}, {"sha": "fe35df823b656bee6da9261d9a1a890660159fdf", "filename": "src/tools/html-checker/Cargo.toml", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Ftools%2Fhtml-checker%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Ftools%2Fhtml-checker%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fhtml-checker%2FCargo.toml?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -0,0 +1,12 @@\n+[package]\n+name = \"html-checker\"\n+version = \"0.1.0\"\n+authors = [\"Guillaume Gomez <guillaume1.gomez@gmail.com>\"]\n+edition = \"2018\"\n+\n+[[bin]]\n+name = \"html-checker\"\n+path = \"main.rs\"\n+\n+[dependencies]\n+walkdir = \"2\""}, {"sha": "a93191191cc09fb019bb49089dd1938c772cc9bd", "filename": "src/tools/html-checker/main.rs", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Ftools%2Fhtml-checker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a2bc31b9f68d8ba5fe2854bf38df5e564c575b/src%2Ftools%2Fhtml-checker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fhtml-checker%2Fmain.rs?ref=83a2bc31b9f68d8ba5fe2854bf38df5e564c575b", "patch": "@@ -0,0 +1,96 @@\n+use std::env;\n+use std::path::Path;\n+use std::process::{Command, Output};\n+\n+fn check_html_file(file: &Path) -> usize {\n+    let to_mute = &[\n+        // \"disabled\" on <link> or \"autocomplete\" on <select> emit this warning\n+        \"PROPRIETARY_ATTRIBUTE\",\n+        // It complains when multiple in the same page link to the same anchor for some reason...\n+        \"ANCHOR_NOT_UNIQUE\",\n+        // If a <span> contains only HTML elements and no text, it complains about it.\n+        \"TRIM_EMPTY_ELEMENT\",\n+        // FIXME: the three next warnings are about <pre> elements which are not supposed to\n+        //        contain HTML. The solution here would be to replace them with a <div> with\n+        //        \"\"\n+        \"MISSING_ENDTAG_BEFORE\",\n+        \"INSERTING_TAG\",\n+        \"DISCARDING_UNEXPECTED\",\n+        // FIXME: mdbook repeats the name attribute on <input>. When the fix is merged upstream,\n+        //        this warning can be used again.\n+        \"REPEATED_ATTRIBUTE\",\n+        // FIXME: mdbook uses \"align\" attribute on <td>, which is not allowed.\n+        \"MISMATCHED_ATTRIBUTE_WARN\",\n+        // FIXME: mdbook doesn't add \"alt\" attribute on images.\n+        \"MISSING_ATTRIBUTE\",\n+        // FIXME: mdbook doesn't escape `&` (in \"&String\" for example).\n+        \"UNKNOWN_ENTITY\",\n+        // Compiler docs have some inlined <style> in the markdown.\n+        \"MOVED_STYLE_TO_HEAD\",\n+    ];\n+    let to_mute_s = to_mute.join(\",\");\n+    let mut command = Command::new(\"tidy\");\n+    command\n+        .arg(\"-errors\")\n+        .arg(\"-quiet\")\n+        .arg(\"--mute-id\") // this option is useful in case we want to mute more warnings\n+        .arg(\"yes\")\n+        .arg(\"--mute\")\n+        .arg(&to_mute_s)\n+        .arg(file);\n+\n+    let Output { status, stderr, .. } = command.output().expect(\"failed to run tidy command\");\n+    if status.success() {\n+        0\n+    } else {\n+        let stderr = String::from_utf8(stderr).expect(\"String::from_utf8 failed...\");\n+        if stderr.is_empty() && status.code() != Some(2) {\n+            0\n+        } else {\n+            eprintln!(\n+                \"=> Errors for `{}` (error code: {}) <=\",\n+                file.display(),\n+                status.code().unwrap_or(-1)\n+            );\n+            eprintln!(\"{}\", stderr);\n+            stderr.lines().count()\n+        }\n+    }\n+}\n+\n+// Returns the number of files read and the number of errors.\n+fn find_all_html_files(dir: &Path) -> (usize, usize) {\n+    let mut files_read = 0;\n+    let mut errors = 0;\n+\n+    for entry in walkdir::WalkDir::new(dir) {\n+        let entry = entry.expect(\"failed to read file\");\n+        if !entry.file_type().is_file() {\n+            continue;\n+        }\n+        let entry = entry.path();\n+        if entry.extension().and_then(|s| s.to_str()) == Some(\"html\") {\n+            errors += check_html_file(&entry);\n+            files_read += 1;\n+        }\n+    }\n+    (files_read, errors)\n+}\n+\n+fn main() -> Result<(), String> {\n+    let args = env::args().collect::<Vec<_>>();\n+    if args.len() != 2 {\n+        return Err(format!(\"Usage: {} <doc folder>\", args[0]));\n+    }\n+\n+    println!(\"Running HTML checker...\");\n+\n+    let (files_read, errors) = find_all_html_files(&Path::new(&args[1]));\n+    println!(\"Done! Read {} files...\", files_read);\n+    if errors > 0 {\n+        Err(format!(\"HTML check failed: {} errors\", errors))\n+    } else {\n+        println!(\"No error found!\");\n+        Ok(())\n+    }\n+}"}]}