{"sha": "bdf24732897e17120753244f76dceba04a027e7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZjI0NzMyODk3ZTE3MTIwNzUzMjQ0Zjc2ZGNlYmEwNGEwMjdlN2Q=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-16T03:14:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-16T03:14:21Z"}, "message": "Rollup merge of #59903 - estebank:after-main, r=oli-obk\n\nContinue evaluating after missing main", "tree": {"sha": "74167c203cd2dd7c490a565e117eeb630508b10c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74167c203cd2dd7c490a565e117eeb630508b10c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdf24732897e17120753244f76dceba04a027e7d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJctUiNCRBK7hj4Ov3rIwAAdHIIAF5/aFFz4cdB+Q9so4EsAUO8\nGJZlUMpBxN8D0y10N0Uvimn9E2w67BqQ06oZ5hNgPdYLIdzNC4FdlrdhVCKDrelh\nJS7Uc7YIEpsujJsHZ31EqQxh7ISenWrVFqEzsDplIiu0mtWPjYLTmXB4xYUozoNG\nPyXMEiH2DZx/nzkS5K1xGXYRzgzUOkoXakBaDi9YhasPCC9SEyMOlqmOE+gz75xP\noJGA1cvVmWGSotfLD91QmKJmsAyqMn0uAe85bf1dBCQ1zKDGqMYcuKzlnw8IwAyr\nkvpRrU8orlk3fZ4+VCkRFodC+yfgmhHZiSVLsnO0THOVt0MoRX3ppU8mYvtTejU=\n=+rmb\n-----END PGP SIGNATURE-----\n", "payload": "tree 74167c203cd2dd7c490a565e117eeb630508b10c\nparent d9422f00a0f84c62b9232b485ef98585b0f5bc86\nparent 13a05a27e9a5747cad090b1670c0a6b0baa624b9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555384461 +0200\ncommitter GitHub <noreply@github.com> 1555384461 +0200\n\nRollup merge of #59903 - estebank:after-main, r=oli-obk\n\nContinue evaluating after missing main\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf24732897e17120753244f76dceba04a027e7d", "html_url": "https://github.com/rust-lang/rust/commit/bdf24732897e17120753244f76dceba04a027e7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdf24732897e17120753244f76dceba04a027e7d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9422f00a0f84c62b9232b485ef98585b0f5bc86", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9422f00a0f84c62b9232b485ef98585b0f5bc86", "html_url": "https://github.com/rust-lang/rust/commit/d9422f00a0f84c62b9232b485ef98585b0f5bc86"}, {"sha": "13a05a27e9a5747cad090b1670c0a6b0baa624b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/13a05a27e9a5747cad090b1670c0a6b0baa624b9", "html_url": "https://github.com/rust-lang/rust/commit/13a05a27e9a5747cad090b1670c0a6b0baa624b9"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "df77033ebef3b5999d489a8dcc3ee6368a95364a", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdf24732897e17120753244f76dceba04a027e7d/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdf24732897e17120753244f76dceba04a027e7d/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=bdf24732897e17120753244f76dceba04a027e7d", "patch": "@@ -163,7 +163,6 @@ fn configure_main(\n                 err.span_note(span, \"here is a function named 'main'\");\n             }\n             err.emit();\n-            tcx.sess.abort_if_errors();\n         } else {\n             if let Some(ref filename) = tcx.sess.local_crate_source_file {\n                 err.note(&format!(\"consider adding a `main` function to `{}`\", filename.display()));"}, {"sha": "2f01254ed5f9b675004bdff9ec0cd9c2c37a5639", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bdf24732897e17120753244f76dceba04a027e7d/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdf24732897e17120753244f76dceba04a027e7d/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=bdf24732897e17120753244f76dceba04a027e7d", "patch": "@@ -886,10 +886,11 @@ fn analysis<'tcx>(\n     assert_eq!(cnum, LOCAL_CRATE);\n \n     let sess = tcx.sess;\n+    let mut entry_point = None;\n \n     time(sess, \"misc checking 1\", || {\n         parallel!({\n-            time(sess, \"looking for entry point\", || {\n+            entry_point = time(sess, \"looking for entry point\", || {\n                 middle::entry::find_entry_point(tcx)\n             });\n \n@@ -937,7 +938,10 @@ fn analysis<'tcx>(\n \n     // Abort so we don't try to construct MIR with liveness errors.\n     // We also won't want to continue with errors from rvalue promotion\n-    tcx.sess.abort_if_errors();\n+    // We only do so if the only error found so far *isn't* a missing `fn main()`\n+    if !(entry_point.is_none() && sess.err_count() == 1) {\n+        tcx.sess.abort_if_errors();\n+    }\n \n     time(sess, \"borrow checking\", || {\n         if tcx.use_ast_borrowck() {"}, {"sha": "7455c2a431d6289fdb7c9bb8f2255d183afe8843", "filename": "src/test/ui/continue-after-missing-main.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/bdf24732897e17120753244f76dceba04a027e7d/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdf24732897e17120753244f76dceba04a027e7d/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs?ref=bdf24732897e17120753244f76dceba04a027e7d", "patch": "@@ -0,0 +1,32 @@\n+#![allow(dead_code)]\n+\n+// error-pattern:`main` function not found in crate\n+\n+struct Tableau<'a, MP> {\n+    provider: &'a MP,\n+}\n+\n+impl<'adapted_matrix_provider, 'original_data, MP>\n+    Tableau<'adapted_matrix_provider, AdaptedMatrixProvider<'original_data, MP>>\n+{\n+    fn provider(&self) -> &'adapted_matrix_provider AdaptedMatrixProvider</*'original_data,*/ MP> {\n+        self.provider\n+    }\n+}\n+\n+struct AdaptedMatrixProvider<'a, T> {\n+    original_problem: &'a T,\n+}\n+\n+impl<'a, T> AdaptedMatrixProvider<'a, T> {\n+    fn clone_with_extra_bound(&self) -> Self {\n+        AdaptedMatrixProvider { original_problem: self.original_problem }\n+    }\n+}\n+\n+fn create_and_solve_subproblems<'data_provider, 'original_data, MP>(\n+    tableau: Tableau<'data_provider, AdaptedMatrixProvider<'original_data, MP>>,\n+) {\n+    let _: AdaptedMatrixProvider<'original_data, MP> = tableau.provider().clone_with_extra_bound();\n+    //~^ ERROR lifetime mismatch\n+}"}, {"sha": "8d64fee8bdaee81c49167aac1601115379b7b9bc", "filename": "src/test/ui/continue-after-missing-main.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bdf24732897e17120753244f76dceba04a027e7d/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdf24732897e17120753244f76dceba04a027e7d/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr?ref=bdf24732897e17120753244f76dceba04a027e7d", "patch": "@@ -0,0 +1,17 @@\n+error[E0601]: `main` function not found in crate `continue_after_missing_main`\n+   |\n+   = note: consider adding a `main` function to `$DIR/continue-after-missing-main.rs`\n+\n+error[E0623]: lifetime mismatch\n+  --> $DIR/continue-after-missing-main.rs:30:56\n+   |\n+LL |     tableau: Tableau<'data_provider, AdaptedMatrixProvider<'original_data, MP>>,\n+   |              ------------------------------------------------------------------ these two types are declared with different lifetimes...\n+LL | ) {\n+LL |     let _: AdaptedMatrixProvider<'original_data, MP> = tableau.provider().clone_with_extra_bound();\n+   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ...but data from `tableau` flows into `tableau` here\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0601, E0623.\n+For more information about an error, try `rustc --explain E0601`."}]}