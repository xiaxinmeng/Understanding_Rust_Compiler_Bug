{"sha": "505167d7c58f68170118f96436c85e0587e6d3f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNTE2N2Q3YzU4ZjY4MTcwMTE4Zjk2NDM2Yzg1ZTA1ODdlNmQzZjU=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2018-12-25T07:40:16Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2018-12-25T07:40:16Z"}, "message": "Fix build on latest git master", "tree": {"sha": "2964733bc5da797479182f720ee8c516f11738d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2964733bc5da797479182f720ee8c516f11738d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/505167d7c58f68170118f96436c85e0587e6d3f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/505167d7c58f68170118f96436c85e0587e6d3f5", "html_url": "https://github.com/rust-lang/rust/commit/505167d7c58f68170118f96436c85e0587e6d3f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/505167d7c58f68170118f96436c85e0587e6d3f5/comments", "author": null, "committer": null, "parents": [{"sha": "ad781a065ac874e402e15927a22faa080e97fe94", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad781a065ac874e402e15927a22faa080e97fe94", "html_url": "https://github.com/rust-lang/rust/commit/ad781a065ac874e402e15927a22faa080e97fe94"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "63489aeb374ebf9f0170e6d814ba5e8e86662f19", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/505167d7c58f68170118f96436c85e0587e6d3f5/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/505167d7c58f68170118f96436c85e0587e6d3f5/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=505167d7c58f68170118f96436c85e0587e6d3f5", "patch": "@@ -314,7 +314,8 @@\n #![feature(alloc_layout_extra)]\n #![feature(maybe_uninit)]\n #![cfg_attr(target_env = \"sgx\", feature(global_asm, range_contains, slice_index_methods,\n-                                        decl_macro, coerce_unsized, sgx_platform))]\n+                                        decl_macro, coerce_unsized, sgx_platform,\n+                                        min_const_unsafe_fn))]\n \n #![default_lib_allocator]\n "}]}