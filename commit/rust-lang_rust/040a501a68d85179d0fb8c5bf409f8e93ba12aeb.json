{"sha": "040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MGE1MDFhNjhkODUxNzlkMGZiOGM1YmY0MDlmOGU5M2JhMTJhZWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T09:27:02Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T09:27:02Z"}, "message": "make sure globals that yield function pointers aren't treated like functions", "tree": {"sha": "25def109c4e34fd1dfe76781ce0e7365a3d77422", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25def109c4e34fd1dfe76781ce0e7365a3d77422"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWTZmAAoJEFbW7qD8Z6xGC9wP/24n+FARKYN0JzTY4/1A+yN5\n+vRxYhPWXPre0o0/q1r0pQmBNPY7kgwcW2DgBuXek48wRsnkiq5ci5A9JCyReaB/\nq8n+aAULHlGxQHwOtKwYgS4I1l2eAuoBfRNl5MTSFLaQx9hRf4dD3GQ8LBRDlSGE\nAR8LGNV0KvP1i9Pemlaas3plIQGvD1rhKtv1Ji+/8ad2mJFz5edeg6e0mrpPXhZ1\nja4k5D0nYk9dfFZl+B1ThhmBopVMPGfXRkFWj8Xfs5B0KnBPEUKjjLOT5vQuhPC6\n1EUMrww4zzdW4ctllXyDcglKUxiF4bA6Vj3Sydu7yrCGH/W9BZAfoAagb7uEWrk8\nItUw9dt0olKtcxPGHTfxBCanzMtsawdhlc9+vV+3JhOliCa7pgWeOdJGrjlQnAAJ\n5gvHWqsaEFUdrlKpileN3gdEoZb1mPLsmc5mEH7QDWWqq3pQ9kDf48IRJUWCMxPn\nZg6uHPvc1PNA5bIGsqwowCyeP9vtRhDFXD8huPhF757HrirZukugKCxhw6laU3p9\nKvL+lNx2HKYcmD7Sw17I9dx+v89UzAH/JODnYBc5FVOvZHv1FqZhE71YM5l6hACa\nETwkNU+d+HeSzCV84TeLKLcAmY1COmsn8lnL68vlIggF8dlI05mCrl8328C3gL5U\nYdGUSyFL7aCcBKc9aRmf\n=N0qj\n-----END PGP SIGNATURE-----", "payload": "tree 25def109c4e34fd1dfe76781ce0e7365a3d77422\nparent 225a6a272d6fa9c945e9e55f2070f736844c2781\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465464422 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465464422 +0200\n\nmake sure globals that yield function pointers aren't treated like functions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "html_url": "https://github.com/rust-lang/rust/commit/040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/040a501a68d85179d0fb8c5bf409f8e93ba12aeb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225a6a272d6fa9c945e9e55f2070f736844c2781", "url": "https://api.github.com/repos/rust-lang/rust/commits/225a6a272d6fa9c945e9e55f2070f736844c2781", "html_url": "https://github.com/rust-lang/rust/commit/225a6a272d6fa9c945e9e55f2070f736844c2781"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6c0d58f1c47e77dc3b3c660fbe236458655d3102", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/040a501a68d85179d0fb8c5bf409f8e93ba12aeb/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/040a501a68d85179d0fb8c5bf409f8e93ba12aeb/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "patch": "@@ -1189,7 +1189,7 @@ impl<'a, 'b, 'mir, 'tcx> FnEvalContext<'a, 'b, 'mir, 'tcx> {\n                 match *literal {\n                     Value { ref value } => Ok(self.const_to_ptr(value)?),\n                     Item { def_id, substs } => {\n-                        if ty.is_fn() {\n+                        if let ty::TyFnDef(..) = ty.sty {\n                             Err(EvalError::Unimplemented(\"unimplemented: mentions of function items\".to_string()))\n                         } else {\n                             let cid = ConstantId {"}, {"sha": "db7b129eee601db020aadf4eaffd301109a04313", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/040a501a68d85179d0fb8c5bf409f8e93ba12aeb/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/040a501a68d85179d0fb8c5bf409f8e93ba12aeb/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "patch": "@@ -8,7 +8,7 @@ use super::{\n };\n use error::EvalResult;\n use rustc::mir::repr as mir;\n-use rustc::ty::subst;\n+use rustc::ty::{subst, self};\n use rustc::hir::def_id::DefId;\n use rustc::mir::visit::{Visitor, LvalueContext};\n use syntax::codemap::Span;\n@@ -151,7 +151,7 @@ impl<'a, 'b, 'mir, 'tcx> Visitor<'tcx> for ConstantExtractor<'a, 'b, 'mir, 'tcx>\n             // already computed by rustc\n             mir::Literal::Value { .. } => {}\n             mir::Literal::Item { def_id, substs } => {\n-                if constant.ty.is_fn() {\n+                if let ty::TyFnDef(..) = constant.ty.sty {\n                     // No need to do anything here, even if function pointers are implemented,\n                     // because the type is the actual function, not the signature of the function.\n                     // Thus we can simply create a zero sized allocation in `evaluate_operand`"}]}