{"sha": "5773e516787a90df4ed014cd20eed0226a1f63cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NzNlNTE2Nzg3YTkwZGY0ZWQwMTRjZDIwZWVkMDIyNmExZjYzY2Q=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-31T07:19:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-31T07:19:29Z"}, "message": "Inline a few methods", "tree": {"sha": "e79a2b3ad2a8d3547d2b7871919235898eb835aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e79a2b3ad2a8d3547d2b7871919235898eb835aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5773e516787a90df4ed014cd20eed0226a1f63cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5773e516787a90df4ed014cd20eed0226a1f63cd", "html_url": "https://github.com/rust-lang/rust/commit/5773e516787a90df4ed014cd20eed0226a1f63cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5773e516787a90df4ed014cd20eed0226a1f63cd/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8331dbe6d023a168334a7a46f15731c6bc1baf1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8331dbe6d023a168334a7a46f15731c6bc1baf1e", "html_url": "https://github.com/rust-lang/rust/commit/8331dbe6d023a168334a7a46f15731c6bc1baf1e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "29e999efeb18d92d70c1b94ee9cc4a7050ed208b", "filename": "compiler/rustc_data_structures/src/memmap.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5773e516787a90df4ed014cd20eed0226a1f63cd/compiler%2Frustc_data_structures%2Fsrc%2Fmemmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5773e516787a90df4ed014cd20eed0226a1f63cd/compiler%2Frustc_data_structures%2Fsrc%2Fmemmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fmemmap.rs?ref=5773e516787a90df4ed014cd20eed0226a1f63cd", "patch": "@@ -13,13 +13,15 @@ pub struct Mmap(Vec<u8>);\n \n #[cfg(not(target_arch = \"wasm32\"))]\n impl Mmap {\n+    #[inline]\n     pub unsafe fn map(file: File) -> io::Result<Self> {\n         memmap2::Mmap::map(&file).map(Mmap)\n     }\n }\n \n #[cfg(target_arch = \"wasm32\")]\n impl Mmap {\n+    #[inline]\n     pub unsafe fn map(mut file: File) -> io::Result<Self> {\n         use std::io::Read;\n \n@@ -32,6 +34,7 @@ impl Mmap {\n impl Deref for Mmap {\n     type Target = [u8];\n \n+    #[inline]\n     fn deref(&self) -> &[u8] {\n         &*self.0\n     }"}]}