{"sha": "34ae491ca9f7ad7549fa0d767f7452055df875d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YWU0OTFjYTlmN2FkNzU0OWZhMGQ3NjdmNzQ1MjA1NWRmODc1ZDg=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-01T08:03:17Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-01T14:32:38Z"}, "message": "Store arg mode and objfield mutability in their def", "tree": {"sha": "911eb4929b9b47f4ade295193cfddc8bb9b09870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/911eb4929b9b47f4ade295193cfddc8bb9b09870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34ae491ca9f7ad7549fa0d767f7452055df875d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34ae491ca9f7ad7549fa0d767f7452055df875d8", "html_url": "https://github.com/rust-lang/rust/commit/34ae491ca9f7ad7549fa0d767f7452055df875d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34ae491ca9f7ad7549fa0d767f7452055df875d8/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ba3fe5e40ed404f8865c0be4f9b5827d5861439", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba3fe5e40ed404f8865c0be4f9b5827d5861439", "html_url": "https://github.com/rust-lang/rust/commit/9ba3fe5e40ed404f8865c0be4f9b5827d5861439"}], "stats": {"total": 86, "additions": 43, "deletions": 43}, "files": [{"sha": "c9fe71670c332e66ce2338ebe9b20e22b7756b18", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -481,7 +481,7 @@ fn check_move_rhs(cx: &@ctx, src: &@ast::expr, sc: &scope, v: &vt<scope>) {\n     alt src.node {\n       ast::expr_path(p) {\n         alt cx.tcx.def_map.get(src.id) {\n-          ast::def_obj_field(_) {\n+          ast::def_obj_field(_, _) {\n             cx.tcx.sess.span_err(src.span,\n                                  ~\"may not move out of an obj field\");\n           }\n@@ -743,10 +743,10 @@ fn ty_can_unsafely_include(cx: &ctx, needle: ty::t, haystack: ty::t,\n \n fn def_is_local(d: &ast::def, objfields_count: bool) -> bool {\n     ret alt d {\n-          ast::def_local(_) | ast::def_arg(_) | ast::def_binding(_) { true }\n-          ast::def_obj_field(_) { objfields_count }\n-          _ { false }\n-        };\n+      ast::def_local(_) | ast::def_arg(_, _) | ast::def_binding(_) { true }\n+      ast::def_obj_field(_, _) { objfields_count }\n+      _ { false }\n+    };\n }\n \n fn fty_args(cx: &ctx, fty: ty::t) -> [ty::arg] {"}, {"sha": "1a26fe476ef86420a83dfdd2a226c33cabf8ade0", "filename": "src/comp/middle/freevars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffreevars.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -60,7 +60,7 @@ fn collect_freevars(def_map: &resolve::def_map, sess: &session::session,\n                                     ~\"internal error in collect_freevars\");\n                 }\n                 alt def_map.get(expr.id) {\n-                  ast::def_arg(did) { *refs += [expr.id]; }\n+                  ast::def_arg(did, _) { *refs += [expr.id]; }\n                   ast::def_local(did) { *refs += [expr.id]; }\n                   ast::def_binding(did) { *refs += [expr.id]; }\n                   _ {/* no-op */ }"}, {"sha": "54d08651a75006f67382110fe8016ee5e2ef8c20", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -624,13 +624,13 @@ fn scope_is_fn(sc: &scope) -> bool {\n \n fn def_is_local(d: &def) -> bool {\n     ret alt d {\n-          ast::def_arg(_) | ast::def_local(_) | ast::def_binding(_) { true }\n-          _ { false }\n-        };\n+      ast::def_arg(_, _) | ast::def_local(_) | ast::def_binding(_) { true }\n+      _ { false }\n+    };\n }\n \n fn def_is_obj_field(d: &def) -> bool {\n-    ret alt d { ast::def_obj_field(_) { true } _ { false } };\n+    ret alt d { ast::def_obj_field(_, _) { true } _ { false } };\n }\n \n fn def_is_ty_arg(d: &def) -> bool {\n@@ -764,7 +764,7 @@ fn lookup_in_fn(name: &ident, decl: &ast::fn_decl,\n       ns_value. {\n         for a: ast::arg in decl.inputs {\n             if istr::eq(a.ident, name) {\n-                ret some(ast::def_arg(local_def(a.id)));\n+                ret some(ast::def_arg(local_def(a.id), a.mode));\n             }\n         }\n         ret none::<def>;\n@@ -780,7 +780,7 @@ fn lookup_in_obj(name: &ident, ob: &ast::_obj, ty_params: &[ast::ty_param],\n       ns_value. {\n         for f: ast::obj_field in ob.fields {\n             if istr::eq(f.ident, name) {\n-                ret some(ast::def_obj_field(local_def(f.id)));\n+                ret some(ast::def_obj_field(local_def(f.id), f.mut));\n             }\n         }\n         ret none::<def>;\n@@ -1170,19 +1170,19 @@ fn index_nmod(md: &ast::native_mod) -> mod_index {\n // External lookups\n fn ns_for_def(d: def) -> namespace {\n     ret alt d {\n-          ast::def_fn(id, _) { ns_value }\n-          ast::def_obj_field(id) { ns_value }\n-          ast::def_mod(id) { ns_module }\n-          ast::def_native_mod(id) { ns_module }\n-          ast::def_const(id) { ns_value }\n-          ast::def_arg(id) { ns_value }\n-          ast::def_local(id) { ns_value }\n-          ast::def_variant(_, id) { ns_value }\n-          ast::def_ty(id) { ns_type }\n-          ast::def_binding(id) { ns_type }\n-          ast::def_use(id) { ns_module }\n-          ast::def_native_ty(id) { ns_type }\n-          ast::def_native_fn(id) { ns_value }\n+          ast::def_fn(_, _) { ns_value }\n+          ast::def_obj_field(_, _) { ns_value }\n+          ast::def_mod(_) { ns_module }\n+          ast::def_native_mod(_) { ns_module }\n+          ast::def_const(_) { ns_value }\n+          ast::def_arg(_, _) { ns_value }\n+          ast::def_local(_) { ns_value }\n+          ast::def_variant(_, _) { ns_value }\n+          ast::def_ty(_) { ns_type }\n+          ast::def_binding(_) { ns_type }\n+          ast::def_use(_) { ns_module }\n+          ast::def_native_ty(_) { ns_type }\n+          ast::def_native_fn(_) { ns_value }\n         };\n }\n "}, {"sha": "0d3c3bbd8002bdb905e3476017daee74c34a5e40", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -3141,7 +3141,7 @@ fn trans_var(cx: &@block_ctxt, sp: &span, id: ast::node_id) -> lval_result {\n         assert (cx.fcx.llupvars.contains_key(did.node));\n         ret lval_mem(cx, cx.fcx.llupvars.get(did.node));\n       }\n-      some(ast::def_arg(did)) {\n+      some(ast::def_arg(did, _)) {\n         assert (cx.fcx.llargs.contains_key(did.node));\n         ret lval_mem(cx, cx.fcx.llargs.get(did.node));\n       }\n@@ -3153,7 +3153,7 @@ fn trans_var(cx: &@block_ctxt, sp: &span, id: ast::node_id) -> lval_result {\n         assert (cx.fcx.lllocals.contains_key(did.node));\n         ret lval_mem(cx, cx.fcx.lllocals.get(did.node));\n       }\n-      some(ast::def_obj_field(did)) {\n+      some(ast::def_obj_field(did, _)) {\n         assert (cx.fcx.llobjfields.contains_key(did.node));\n         ret lval_mem(cx, cx.fcx.llobjfields.get(did.node));\n       }"}, {"sha": "be5d149135d22a444590cfe481f028f9aa9c1edc", "filename": "src/comp/middle/tstate/auxiliary.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -625,7 +625,7 @@ fn expr_to_constr_arg(tcx: ty::ctxt, e: &@expr) -> @constr_arg_use {\n                         carg_ident({ident: p.node.idents[0],\n                                     node: l_id.node}));\n           }\n-          some(def_arg(a_id)) {\n+          some(def_arg(a_id, _)) {\n             ret @respan(p.span,\n                         carg_ident({ident: p.node.idents[0],\n                                     node: a_id.node}));\n@@ -849,7 +849,7 @@ fn local_node_id_to_def_id_strict(fcx: &fn_ctxt, sp: &span, i: &node_id) ->\n    def_id {\n     alt local_node_id_to_def(fcx, i) {\n       some(def_local(d_id)) { ret d_id; }\n-      some(def_arg(a_id)) { ret a_id; }\n+      some(def_arg(a_id, _)) { ret a_id; }\n       some(_) {\n         fcx.ccx.tcx.sess.span_fatal(sp,\n                                     ~\"local_node_id_to_def_id: id \\\n@@ -871,7 +871,7 @@ fn local_node_id_to_def(fcx: &fn_ctxt, i: &node_id) -> option::t<def> {\n fn local_node_id_to_def_id(fcx: &fn_ctxt, i: &node_id) -> option::t<def_id> {\n     alt local_node_id_to_def(fcx, i) {\n       some(def_local(d_id)) { some(d_id) }\n-      some(def_arg(a_id)) { some(a_id) }\n+      some(def_arg(a_id, _)) { some(a_id) }\n       _ { none }\n     }\n }\n@@ -880,7 +880,7 @@ fn local_node_id_to_local_def_id(fcx: &fn_ctxt, i: &node_id) ->\n    option::t<node_id> {\n     alt local_node_id_to_def(fcx, i) {\n       some(def_local(d_id)) { some(d_id.node) }\n-      some(def_arg(a_id)) { some(a_id.node) }\n+      some(def_arg(a_id, _)) { some(a_id.node) }\n       _ { none }\n     }\n }"}, {"sha": "ce53a204df938ae446236a75bc0bb65a22e3e072", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -295,7 +295,7 @@ fn handle_update(fcx: &fn_ctxt, parent: &@expr, lhs: &@expr, rhs: &@expr,\n fn handle_var(fcx: &fn_ctxt, rslt: &pre_and_post, id: node_id, name: ident) {\n     let df = node_id_to_def_upvar_strict(fcx, id);\n     alt df {\n-      def_local(d_id) | def_arg(d_id) {\n+      def_local(d_id) | def_arg(d_id, _) {\n         let i = bit_num(fcx, ninit(d_id.node, name));\n         use_var(fcx, d_id.node);\n         require_and_preserve(i, rslt);"}, {"sha": "fc728f9ea652347d429abbbe6a85db44bd1fb7ce", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -2600,10 +2600,10 @@ fn substitute_type_params(cx: &ctxt, substs: &[ty::t], typ: t) -> t {\n fn def_has_ty_params(def: &ast::def) -> bool {\n     alt def {\n       ast::def_fn(_, _) { ret true; }\n-      ast::def_obj_field(_) { ret false; }\n+      ast::def_obj_field(_, _) { ret false; }\n       ast::def_mod(_) { ret false; }\n       ast::def_const(_) { ret false; }\n-      ast::def_arg(_) { ret false; }\n+      ast::def_arg(_, _) { ret false; }\n       ast::def_local(_) { ret false; }\n       ast::def_variant(_, _) { ret true; }\n       ast::def_ty(_) { ret false; }"}, {"sha": "9d44afdbfbdc446614f266efcf7017aa5b17af15", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -116,8 +116,7 @@ fn ty_param_kinds_and_ty_for_def(fcx: &@fn_ctxt, sp: &span, defn: &ast::def)\n    -> ty_param_kinds_and_ty {\n     let no_kinds: [ast::kind] = [];\n     alt defn {\n-      ast::def_arg(id) {\n-\n+      ast::def_arg(id, _) {\n         assert (fcx.locals.contains_key(id.node));\n         let typ = ty::mk_var(fcx.ccx.tcx, lookup_local(fcx, sp, id.node));\n         ret {kinds: no_kinds, ty: typ};\n@@ -127,7 +126,7 @@ fn ty_param_kinds_and_ty_for_def(fcx: &@fn_ctxt, sp: &span, defn: &ast::def)\n         let typ = ty::mk_var(fcx.ccx.tcx, lookup_local(fcx, sp, id.node));\n         ret {kinds: no_kinds, ty: typ};\n       }\n-      ast::def_obj_field(id) {\n+      ast::def_obj_field(id, _) {\n         assert (fcx.locals.contains_key(id.node));\n         let typ = ty::mk_var(fcx.ccx.tcx, lookup_local(fcx, sp, id.node));\n         ret {kinds: no_kinds, ty: typ};\n@@ -2642,8 +2641,9 @@ fn check_constraints(fcx: &@fn_ctxt, cs: [@ast::constr], args:[ast::arg]) {\n                     that's my justification.\n                     */\n                     let arg_occ_node_id = fcx.ccx.tcx.sess.next_node_id();\n-                    fcx.ccx.tcx.def_map.insert(arg_occ_node_id,\n-                                       ast::def_arg(local_def(args[i].id)));\n+                    fcx.ccx.tcx.def_map.insert\n+                        (arg_occ_node_id, ast::def_arg(local_def(args[i].id),\n+                                                       args[i].mode));\n                     {id:arg_occ_node_id,\n                      node: ast::expr_path(respan(a.span, p)),\n                      span:a.span}"}, {"sha": "f19bad3b47859843ed1c5b1b6e8f739ac417490c", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -29,11 +29,11 @@ type ty_param = {ident: ident, kind: kind};\n \n tag def {\n     def_fn(def_id, purity);\n-    def_obj_field(def_id);\n+    def_obj_field(def_id, mutability);\n     def_mod(def_id);\n     def_native_mod(def_id);\n     def_const(def_id);\n-    def_arg(def_id);\n+    def_arg(def_id, mode);\n     def_local(def_id);\n     def_variant(def_id, /* tag */def_id);\n "}, {"sha": "7744e03fe01e9b6db0c7bba5adcb2a06a5b27a25", "filename": "src/comp/syntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34ae491ca9f7ad7549fa0d767f7452055df875d8/src%2Fcomp%2Fsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast_util.rs?ref=34ae491ca9f7ad7549fa0d767f7452055df875d8", "patch": "@@ -29,11 +29,11 @@ fn variant_def_ids(d: &def) -> {tg: def_id, var: def_id} {\n fn def_id_of_def(d: def) -> def_id {\n     alt d {\n       def_fn(id, _) { ret id; }\n-      def_obj_field(id) { ret id; }\n+      def_obj_field(id, _) { ret id; }\n       def_mod(id) { ret id; }\n       def_native_mod(id) { ret id; }\n       def_const(id) { ret id; }\n-      def_arg(id) { ret id; }\n+      def_arg(id, _) { ret id; }\n       def_local(id) { ret id; }\n       def_variant(_, id) { ret id; }\n       def_ty(id) { ret id; }"}]}