{"sha": "fe7d7c20046c59ee91d763f5ab70aff42a73bca7", "node_id": "C_kwDOAAsO6NoAKGZlN2Q3YzIwMDQ2YzU5ZWU5MWQ3NjNmNWFiNzBhZmY0MmE3M2JjYTc", "commit": {"author": {"name": "Alphyr", "email": "47725341+a1phyr@users.noreply.github.com", "date": "2021-08-07T16:57:48Z"}, "committer": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2022-02-12T11:31:33Z"}, "message": "Fix typo\n\nCo-authored-by: Josh Triplett <josh@joshtriplett.org>", "tree": {"sha": "c18afc2b1e6858707c6f2c8431e83ac0f2db60ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c18afc2b1e6858707c6f2c8431e83ac0f2db60ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe7d7c20046c59ee91d763f5ab70aff42a73bca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7d7c20046c59ee91d763f5ab70aff42a73bca7", "html_url": "https://github.com/rust-lang/rust/commit/fe7d7c20046c59ee91d763f5ab70aff42a73bca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe7d7c20046c59ee91d763f5ab70aff42a73bca7/comments", "author": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3e2ffcbc69eadc63a7265a7902739080b9338de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e2ffcbc69eadc63a7265a7902739080b9338de", "html_url": "https://github.com/rust-lang/rust/commit/d3e2ffcbc69eadc63a7265a7902739080b9338de"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0ce2beb63d681ec3965d8dd76f1cd95777a4acb1", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe7d7c20046c59ee91d763f5ab70aff42a73bca7/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7d7c20046c59ee91d763f5ab70aff42a73bca7/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=fe7d7c20046c59ee91d763f5ab70aff42a73bca7", "patch": "@@ -428,7 +428,7 @@ impl<T, A: Allocator> RawVec<T, A> {\n \n         let ptr = unsafe {\n             // `Layout::array` cannot overflow here because it would have\n-            // owerflown earlier when capacity was larger.\n+            // overflowed earlier when capacity was larger.\n             let new_layout = Layout::array::<T>(cap).unwrap_unchecked();\n             self.alloc\n                 .shrink(ptr, layout, new_layout)"}]}