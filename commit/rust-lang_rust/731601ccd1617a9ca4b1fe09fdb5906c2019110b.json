{"sha": "731601ccd1617a9ca4b1fe09fdb5906c2019110b", "node_id": "C_kwDOAAsO6NoAKDczMTYwMWNjZDE2MTdhOWNhNGIxZmUwOWZkYjU5MDZjMjAxOTExMGI", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-06-02T00:41:02Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-06-02T01:18:59Z"}, "message": "Check tuple elements are `Sized` in `offset_of`", "tree": {"sha": "57b2ca1344249aab4ac2db54d27d2bd4b665acbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57b2ca1344249aab4ac2db54d27d2bd4b665acbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/731601ccd1617a9ca4b1fe09fdb5906c2019110b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/731601ccd1617a9ca4b1fe09fdb5906c2019110b", "html_url": "https://github.com/rust-lang/rust/commit/731601ccd1617a9ca4b1fe09fdb5906c2019110b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/731601ccd1617a9ca4b1fe09fdb5906c2019110b/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d59363ad0b6391b7fc5bbb02c9ccf9300eef3753", "url": "https://api.github.com/repos/rust-lang/rust/commits/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753", "html_url": "https://github.com/rust-lang/rust/commit/d59363ad0b6391b7fc5bbb02c9ccf9300eef3753"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "5e10add013b054d398b52bb4131e2edfc9e3512c", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/731601ccd1617a9ca4b1fe09fdb5906c2019110b/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731601ccd1617a9ca4b1fe09fdb5906c2019110b/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=731601ccd1617a9ca4b1fe09fdb5906c2019110b", "patch": "@@ -3117,16 +3117,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n                 ty::Tuple(tys) => {\n-                    let fstr = field.as_str();\n-\n-                    if let Ok(index) = fstr.parse::<usize>() {\n-                        if fstr == index.to_string() {\n-                            if let Some(&field_ty) = tys.get(index) {\n-                                field_indices.push(index.into());\n-                                current_container = field_ty;\n+                    if let Ok(index) = field.as_str().parse::<usize>()\n+                        && field.name == sym::integer(index)\n+                    {\n+                        for ty in tys.iter().take(index + 1) {\n+                            self.require_type_is_sized(ty, expr.span, traits::MiscObligation);\n+                        }\n+                        if let Some(&field_ty) = tys.get(index) {\n+                            field_indices.push(index.into());\n+                            current_container = field_ty;\n \n-                                continue;\n-                            }\n+                            continue;\n                         }\n                     }\n                 }"}, {"sha": "e393b159e64d5e44b7537cddd2820d0971cab11a", "filename": "tests/ui/offset-of/offset-of-dst-field.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/731601ccd1617a9ca4b1fe09fdb5906c2019110b/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731601ccd1617a9ca4b1fe09fdb5906c2019110b/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs?ref=731601ccd1617a9ca4b1fe09fdb5906c2019110b", "patch": "@@ -36,6 +36,8 @@ fn main() {\n     offset_of!(Alpha, z); //~ ERROR the size for values of type\n     offset_of!(Beta, z); //~ ERROR the size for values of type\n     offset_of!(Gamma, z); //~ ERROR the size for values of type\n+    offset_of!((u8, dyn Trait), 0); // ok\n+    offset_of!((u8, dyn Trait), 1); //~ ERROR the size for values of type\n }\n \n fn delta() {"}, {"sha": "4eaceaa93581774a0b118e31eda11c7823870bc9", "filename": "tests/ui/offset-of/offset-of-dst-field.stderr", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/731601ccd1617a9ca4b1fe09fdb5906c2019110b/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/731601ccd1617a9ca4b1fe09fdb5906c2019110b/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr?ref=731601ccd1617a9ca4b1fe09fdb5906c2019110b", "patch": "@@ -25,8 +25,17 @@ LL |     offset_of!(Gamma, z);\n    = help: the trait `Sized` is not implemented for `Extern`\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n+  --> $DIR/offset-of-dst-field.rs:40:5\n+   |\n+LL |     offset_of!((u8, dyn Trait), 1);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `dyn Trait`\n+   = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error[E0277]: the size for values of type `Extern` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:43:5\n+  --> $DIR/offset-of-dst-field.rs:45:5\n    |\n LL |     offset_of!(Delta<Extern>, z);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -35,7 +44,7 @@ LL |     offset_of!(Delta<Extern>, z);\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:44:5\n+  --> $DIR/offset-of-dst-field.rs:46:5\n    |\n LL |     offset_of!(Delta<dyn Trait>, z);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -44,7 +53,7 @@ LL |     offset_of!(Delta<dyn Trait>, z);\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:42:5\n+  --> $DIR/offset-of-dst-field.rs:44:5\n    |\n LL |     offset_of!(Delta<Alpha>, z);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -58,7 +67,7 @@ LL | struct Alpha {\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `T` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:48:5\n+  --> $DIR/offset-of-dst-field.rs:50:5\n    |\n LL | fn generic_with_maybe_sized<T: ?Sized>() -> usize {\n    |                             - this type parameter needs to be `std::marker::Sized`\n@@ -72,6 +81,6 @@ LL - fn generic_with_maybe_sized<T: ?Sized>() -> usize {\n LL + fn generic_with_maybe_sized<T>() -> usize {\n    |\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 8 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "49c8328da5c553806dc749a1835e01600294ac9b", "filename": "tests/ui/offset-of/offset-of-unsized.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/731601ccd1617a9ca4b1fe09fdb5906c2019110b/tests%2Fui%2Foffset-of%2Foffset-of-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/731601ccd1617a9ca4b1fe09fdb5906c2019110b/tests%2Fui%2Foffset-of%2Foffset-of-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-unsized.rs?ref=731601ccd1617a9ca4b1fe09fdb5906c2019110b", "patch": "@@ -1,5 +1,6 @@\n // build-pass\n-// regression test for #112051\n+// regression test for #112051, not in `offset-of-dst` as the issue is in codegen,\n+// and isn't triggered in the presence of typeck errors\n \n #![feature(offset_of)]\n "}]}