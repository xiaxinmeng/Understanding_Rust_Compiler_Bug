{"sha": "06f0adb34570ba83fee391abeb0bec0eec28a234", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZjBhZGIzNDU3MGJhODNmZWUzOTFhYmViMGJlYzBlZWMyOGEyMzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-25T10:35:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-25T10:35:24Z"}, "message": "Auto merge of #84216 - RalfJung:black-box, r=Mark-Simulacrum\n\nmove core::hint::black_box under its own feature gate\n\nThe `black_box` function had its own RFC and is tracked separately from the `test` feature at https://github.com/rust-lang/rust/issues/64102. Let's reflect this in the feature gate.\n\nTo avoid breaking all the benchmarks, libtest's `test::black_box` is a wrapping definition, not a reexport -- this means it is still under the `test` feature gate.", "tree": {"sha": "d993b31319e211e49286ddb17f099bae694c5cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d993b31319e211e49286ddb17f099bae694c5cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06f0adb34570ba83fee391abeb0bec0eec28a234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06f0adb34570ba83fee391abeb0bec0eec28a234", "html_url": "https://github.com/rust-lang/rust/commit/06f0adb34570ba83fee391abeb0bec0eec28a234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06f0adb34570ba83fee391abeb0bec0eec28a234/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13a2615883aa28433383a723a764ca9acb43fd48", "url": "https://api.github.com/repos/rust-lang/rust/commits/13a2615883aa28433383a723a764ca9acb43fd48", "html_url": "https://github.com/rust-lang/rust/commit/13a2615883aa28433383a723a764ca9acb43fd48"}, {"sha": "3d16e156aef937ae797892ef05e08b8159a415c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d16e156aef937ae797892ef05e08b8159a415c4", "html_url": "https://github.com/rust-lang/rust/commit/3d16e156aef937ae797892ef05e08b8159a415c4"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "4c73b7bf612c7c07f9ca7de161f7b4f2ffe11577", "filename": "compiler/rustc_index/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/compiler%2Frustc_index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/compiler%2Frustc_index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Flib.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -1,4 +1,5 @@\n #![feature(allow_internal_unstable)]\n+#![feature(bench_black_box)]\n #![feature(const_panic)]\n #![feature(extend_one)]\n #![feature(iter_zip)]"}, {"sha": "9df66263459b155eacffef46c40a9ec271da5dd7", "filename": "library/core/benches/fmt.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Fcore%2Fbenches%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Fcore%2Fbenches%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Ffmt.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -112,28 +112,28 @@ fn write_str_macro_debug(bh: &mut Bencher) {\n #[bench]\n fn write_u128_max(bh: &mut Bencher) {\n     bh.iter(|| {\n-        std::hint::black_box(format!(\"{}\", u128::MAX));\n+        test::black_box(format!(\"{}\", u128::MAX));\n     });\n }\n \n #[bench]\n fn write_u128_min(bh: &mut Bencher) {\n     bh.iter(|| {\n         let s = format!(\"{}\", 0u128);\n-        std::hint::black_box(s);\n+        test::black_box(s);\n     });\n }\n \n #[bench]\n fn write_u64_max(bh: &mut Bencher) {\n     bh.iter(|| {\n-        std::hint::black_box(format!(\"{}\", u64::MAX));\n+        test::black_box(format!(\"{}\", u64::MAX));\n     });\n }\n \n #[bench]\n fn write_u64_min(bh: &mut Bencher) {\n     bh.iter(|| {\n-        std::hint::black_box(format!(\"{}\", 0u64));\n+        test::black_box(format!(\"{}\", 0u64));\n     });\n }"}, {"sha": "f7aec73644921ab14cc7a158b9bc9e2a9c9e9b71", "filename": "library/core/src/hint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Fcore%2Fsrc%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Fcore%2Fsrc%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhint.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -154,7 +154,7 @@ pub fn spin_loop() {\n /// [`std::convert::identity`]: crate::convert::identity\n #[cfg_attr(not(miri), inline)]\n #[cfg_attr(miri, inline(never))]\n-#[unstable(feature = \"test\", issue = \"50297\")]\n+#[unstable(feature = \"bench_black_box\", issue = \"64102\")]\n #[cfg_attr(miri, allow(unused_mut))]\n pub fn black_box<T>(mut dummy: T) -> T {\n     // We need to \"use\" the argument in some way LLVM can't introspect, and on"}, {"sha": "0ab9f490fd4202b4f2e339fd612c99c06bdcdfad", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -233,6 +233,7 @@\n #![feature(assert_matches)]\n #![feature(associated_type_bounds)]\n #![feature(atomic_mut_ptr)]\n+#![feature(bench_black_box)]\n #![feature(box_syntax)]\n #![feature(c_variadic)]\n #![feature(cfg_accessible)]"}, {"sha": "7869ba2c04178b60a28148e1c2ff296fada7745c", "filename": "library/test/src/bench.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Ftest%2Fsrc%2Fbench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Ftest%2Fsrc%2Fbench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fbench.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -1,6 +1,4 @@\n //! Benchmarking module.\n-pub use std::hint::black_box;\n-\n use super::{\n     event::CompletedTest,\n     options::BenchMode,\n@@ -16,6 +14,15 @@ use std::panic::{catch_unwind, AssertUnwindSafe};\n use std::sync::{Arc, Mutex};\n use std::time::{Duration, Instant};\n \n+/// An identity function that *__hints__* to the compiler to be maximally pessimistic about what\n+/// `black_box` could do.\n+///\n+/// See [`std::hint::black_box`] for details.\n+#[inline(always)]\n+pub fn black_box<T>(dummy: T) -> T {\n+    std::hint::black_box(dummy)\n+}\n+\n /// Manager of the benchmarking runs.\n ///\n /// This is fed into functions marked with `#[bench]` to allow for"}, {"sha": "9adc099aaa56618812e3dda62bd14ef7ac6d8e20", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -24,6 +24,7 @@\n #![feature(rustc_private)]\n #![feature(nll)]\n #![feature(available_concurrency)]\n+#![feature(bench_black_box)]\n #![feature(internal_output_capture)]\n #![feature(panic_unwind)]\n #![feature(staged_api)]"}, {"sha": "66b76627c02e631320c99fee30a2c158cd1fe841", "filename": "src/test/ui/consts/cast-discriminant-zst-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fconsts%2Fcast-discriminant-zst-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fconsts%2Fcast-discriminant-zst-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcast-discriminant-zst-enum.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // Test a ZST enum whose dicriminant is ~0i128. This caused an ICE when casting to a i32.\n-#![feature(test)]\n+#![feature(bench_black_box)]\n use std::hint::black_box;\n \n #[derive(Copy, Clone)]"}, {"sha": "a47f6af02965b63c7eeaca87683439beeca17fb7", "filename": "src/test/ui/consts/const_discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n #![feature(const_discriminant)]\n-#![feature(test)]\n+#![feature(bench_black_box)]\n #![allow(dead_code)]\n \n use std::mem::{discriminant, Discriminant};"}, {"sha": "9a26a351d992c257f4ca41a3a03c777533506d4d", "filename": "src/test/ui/sanitize/address.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Faddress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Faddress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Faddress.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -7,7 +7,7 @@\n // error-pattern: AddressSanitizer: stack-buffer-overflow\n // error-pattern: 'xs' (line 15) <== Memory access at offset\n \n-#![feature(test)]\n+#![feature(bench_black_box)]\n \n use std::hint::black_box;\n "}, {"sha": "bb6986740d9067f50b011649e1411061e8693647", "filename": "src/test/ui/sanitize/hwaddress.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Fhwaddress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Fhwaddress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fhwaddress.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -7,7 +7,7 @@\n // run-fail\n // error-pattern: HWAddressSanitizer: tag-mismatch\n \n-#![feature(test)]\n+#![feature(bench_black_box)]\n \n use std::hint::black_box;\n "}, {"sha": "f63f81352dada78fa272f309f8a9a64703462a71", "filename": "src/test/ui/sanitize/leak.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Fleak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Fleak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fleak.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -6,7 +6,7 @@\n // run-fail\n // error-pattern: LeakSanitizer: detected memory leaks\n \n-#![feature(test)]\n+#![feature(bench_black_box)]\n \n use std::hint::black_box;\n use std::mem;"}, {"sha": "48a482a13aaa9d47b5eca083994f4dc4b544acbe", "filename": "src/test/ui/sanitize/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06f0adb34570ba83fee391abeb0bec0eec28a234/src%2Ftest%2Fui%2Fsanitize%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fmemory.rs?ref=06f0adb34570ba83fee391abeb0bec0eec28a234", "patch": "@@ -13,7 +13,7 @@\n \n #![feature(core_intrinsics)]\n #![feature(start)]\n-#![feature(test)]\n+#![feature(bench_black_box)]\n \n use std::hint::black_box;\n use std::mem::MaybeUninit;"}]}