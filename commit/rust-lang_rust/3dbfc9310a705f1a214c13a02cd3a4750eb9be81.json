{"sha": "3dbfc9310a705f1a214c13a02cd3a4750eb9be81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYmZjOTMxMGE3MDVmMWEyMTRjMTNhMDJjZDNhNDc1MGViOWJlODE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-21T20:00:06Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-21T20:00:06Z"}, "message": "rustc: Make the parser never assign any types, not even ty_nil", "tree": {"sha": "a53be2b7ba49fbaeabdcc293d046d68492200a1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a53be2b7ba49fbaeabdcc293d046d68492200a1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dbfc9310a705f1a214c13a02cd3a4750eb9be81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dbfc9310a705f1a214c13a02cd3a4750eb9be81", "html_url": "https://github.com/rust-lang/rust/commit/3dbfc9310a705f1a214c13a02cd3a4750eb9be81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dbfc9310a705f1a214c13a02cd3a4750eb9be81/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d5fad696a7405e9ae32fb3df338bd8f38d2f3e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d5fad696a7405e9ae32fb3df338bd8f38d2f3e9", "html_url": "https://github.com/rust-lang/rust/commit/4d5fad696a7405e9ae32fb3df338bd8f38d2f3e9"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "26d3b89d2abef8864202ac035f121b47419af15e", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3dbfc9310a705f1a214c13a02cd3a4750eb9be81/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbfc9310a705f1a214c13a02cd3a4750eb9be81/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=3dbfc9310a705f1a214c13a02cd3a4750eb9be81", "patch": "@@ -11,7 +11,6 @@ import util.common;\n import util.common.filename;\n import util.common.span;\n import util.common.new_str_hash;\n-import util.common.plain_ann;\n \n tag restriction {\n     UNRESTRICTED;\n@@ -1568,13 +1567,13 @@ fn parse_source_stmt(parser p) -> @ast.stmt {\n             auto decl = parse_let(p);\n             auto hi = p.get_span();\n             ret @spanned\n-                (lo, decl.span.hi, ast.stmt_decl(decl, plain_ann()));\n+                (lo, decl.span.hi, ast.stmt_decl(decl, ast.ann_none));\n         }\n \n         case (token.AUTO) {\n             auto decl = parse_auto(p);\n             auto hi = p.get_span();\n-            ret @spanned(lo, decl.span.hi, ast.stmt_decl(decl, plain_ann()));\n+            ret @spanned(lo, decl.span.hi, ast.stmt_decl(decl, ast.ann_none));\n         }\n \n         case (_) {\n@@ -1583,13 +1582,13 @@ fn parse_source_stmt(parser p) -> @ast.stmt {\n                 auto i = parse_item(p);\n                 auto hi = i.span.hi;\n                 auto decl = @spanned(lo, hi, ast.decl_item(i));\n-                ret @spanned(lo, hi, ast.stmt_decl(decl, plain_ann()));\n+                ret @spanned(lo, hi, ast.stmt_decl(decl, ast.ann_none));\n \n             } else {\n                 // Remainder are line-expr stmts.\n                 auto e = parse_expr(p);\n                 auto hi = p.get_span();\n-                ret @spanned(lo, e.span.hi, ast.stmt_expr(e, plain_ann()));\n+                ret @spanned(lo, e.span.hi, ast.stmt_expr(e, ast.ann_none));\n             }\n         }\n     }"}]}