{"sha": "e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "node_id": "C_kwDOAAsO6NoAKGUzNWI3YmJkZjhiZjk5MzliZTViY2JhZWY3ODFiOTVlOGM5M2I2ZTE", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2021-10-21T11:19:46Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2021-11-15T09:21:02Z"}, "message": "Stabilize -Z strip as -C strip\n\nLeave -Z strip available temporarily as an alias, to avoid breaking\ncargo until cargo transitions to using -C strip. (If the user passes\nboth, the -C version wins.)", "tree": {"sha": "7c8df211c6c273d8ca05ccff2904cc2e1e02241b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c8df211c6c273d8ca05ccff2904cc2e1e02241b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "html_url": "https://github.com/rust-lang/rust/commit/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4884bbec7ae6ba06211a2769271b8db38c8284b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4884bbec7ae6ba06211a2769271b8db38c8284b", "html_url": "https://github.com/rust-lang/rust/commit/c4884bbec7ae6ba06211a2769271b8db38c8284b"}], "stats": {"total": 53, "additions": 32, "deletions": 21}, "files": [{"sha": "638b2a7b5a9f24b1ad4dc7fb2901373a15d41e45", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "patch": "@@ -1034,15 +1034,25 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         SplitDebuginfo::Packed => link_dwarf_object(sess, &out_filename),\n     }\n \n+    let strip = strip_value(sess);\n+\n     if sess.target.is_like_osx {\n-        match sess.opts.debugging_opts.strip {\n+        match strip {\n             Strip::Debuginfo => strip_symbols_in_osx(sess, &out_filename, Some(\"-S\")),\n             Strip::Symbols => strip_symbols_in_osx(sess, &out_filename, None),\n             Strip::None => {}\n         }\n     }\n }\n \n+// Temporarily support both -Z strip and -C strip\n+fn strip_value(sess: &Session) -> Strip {\n+    match (sess.opts.debugging_opts.strip, sess.opts.cg.strip) {\n+        (s, Strip::None) => s,\n+        (_, s) => s,\n+    }\n+}\n+\n fn strip_symbols_in_osx<'a>(sess: &'a Session, out_filename: &Path, option: Option<&str>) {\n     let mut cmd = Command::new(\"strip\");\n     if let Some(option) = option {\n@@ -2014,7 +2024,7 @@ fn add_order_independent_options(\n     cmd.optimize();\n \n     // Pass debuginfo and strip flags down to the linker.\n-    cmd.debuginfo(sess.opts.debugging_opts.strip);\n+    cmd.debuginfo(strip_value(sess));\n \n     // We want to prevent the compiler from accidentally leaking in any system libraries,\n     // so by default we tell linkers not to link to any default libraries."}, {"sha": "6b666d7c292221863d8455186d0c17812e312b98", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "patch": "@@ -551,6 +551,7 @@ fn test_codegen_options_tracking_hash() {\n     untracked!(remark, Passes::Some(vec![String::from(\"pass1\"), String::from(\"pass2\")]));\n     untracked!(rpath, true);\n     untracked!(save_temps, true);\n+    untracked!(strip, Strip::Debuginfo);\n \n     macro_rules! tracked {\n         ($name: ident, $non_default_value: expr) => {\n@@ -684,7 +685,6 @@ fn test_debugging_options_tracking_hash() {\n     untracked!(self_profile_events, Some(vec![String::new()]));\n     untracked!(span_debug, true);\n     untracked!(span_free_formats, true);\n-    untracked!(strip, Strip::Debuginfo);\n     untracked!(temps_dir, Some(String::from(\"abc\")));\n     untracked!(terminal_width, Some(80));\n     untracked!(threads, 99);"}, {"sha": "5e6bbe0391881a0aab66f198697b2a9725b92599", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "patch": "@@ -37,7 +37,7 @@ use std::iter::{self, FromIterator};\n use std::path::{Path, PathBuf};\n use std::str::{self, FromStr};\n \n-/// The different settings that the `-Z strip` flag can have.\n+/// The different settings that the `-C strip` flag can have.\n #[derive(Clone, Copy, PartialEq, Hash, Debug)]\n pub enum Strip {\n     /// Do not strip at all."}, {"sha": "3f279a045f159746637894ff9733b217f80c643b", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "patch": "@@ -1015,6 +1015,8 @@ options! {\n         \"use soft float ABI (*eabihf targets only) (default: no)\"),\n     split_debuginfo: Option<SplitDebuginfo> = (None, parse_split_debuginfo, [TRACKED],\n         \"how to handle split-debuginfo, a platform-specific option\"),\n+    strip: Strip = (Strip::None, parse_strip, [UNTRACKED],\n+        \"tell the linker which information to strip (`none` (default), `debuginfo` or `symbols`)\"),\n     target_cpu: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"select target processor (`rustc --print target-cpus` for details)\"),\n     target_feature: String = (String::new(), parse_target_feature, [TRACKED],"}, {"sha": "0201b88417a8b8f2ef4a3c0cfcf4435c36a77472", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=e35b7bbdf8bf9939be5bcbaef781b95e8c93b6e1", "patch": "@@ -525,6 +525,22 @@ platforms. Possible values are:\n Note that `packed` and `unpacked` are gated behind `-Z unstable-options` on\n non-macOS platforms at this time.\n \n+## strip\n+\n+The option `-C strip=val` controls stripping of debuginfo and similar auxiliary\n+data from binaries during linking.\n+\n+Supported values for this option are:\n+\n+- `none` - debuginfo and symbols (if they exist) are copied to the produced\n+  binary or separate files depending on the target (e.g. `.pdb` files in case\n+  of MSVC).\n+- `debuginfo` - debuginfo sections and debuginfo symbols from the symbol table\n+  section are stripped at link time and are not copied to the produced binary\n+  or separate files.\n+- `symbols` - same as `debuginfo`, but the rest of the symbol table section is\n+  stripped as well if the linker supports it.\n+\n ## target-cpu\n \n This instructs `rustc` to generate code specifically for a particular processor."}, {"sha": "52cb98113c0c13296221f34d0daa6bfee04231cf", "filename": "src/doc/unstable-book/src/compiler-flags/strip.md", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c4884bbec7ae6ba06211a2769271b8db38c8284b/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fstrip.md", "raw_url": "https://github.com/rust-lang/rust/raw/c4884bbec7ae6ba06211a2769271b8db38c8284b/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fstrip.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fstrip.md?ref=c4884bbec7ae6ba06211a2769271b8db38c8284b", "patch": "@@ -1,17 +0,0 @@\n-# `strip`\n-\n-The tracking issue for this feature is: [#72110](https://github.com/rust-lang/rust/issues/72110).\n-\n-------------------------\n-\n-Option `-Z strip=val` controls stripping of debuginfo and similar auxiliary data from binaries\n-during linking.\n-\n-Supported values for this option are:\n-\n-- `none` - debuginfo and symbols (if they exist) are copied to the produced binary or separate files\n-depending on the target (e.g. `.pdb` files in case of MSVC).\n-- `debuginfo` - debuginfo sections and debuginfo symbols from the symbol table section\n-are stripped at link time and are not copied to the produced binary or separate files.\n-- `symbols` - same as `debuginfo`, but the rest of the symbol table section is stripped as well\n-if the linker supports it."}]}