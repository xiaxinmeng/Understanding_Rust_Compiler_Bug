{"sha": "0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZGQ2Y2MyNTkxZTBkY2EzYzU1YTY5ODQ0NGUwZTgzZTA3YjBjY2I=", "commit": {"author": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-06-10T06:42:17Z"}, "committer": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-06-10T06:42:17Z"}, "message": "Make OR_PATTERNS_BACK_COMPAT be a 2021 future-incompatible lint", "tree": {"sha": "e06a11bfc85ddfae59f022794008afe63474bfe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e06a11bfc85ddfae59f022794008afe63474bfe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "html_url": "https://github.com/rust-lang/rust/commit/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/comments", "author": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1639a16ebfaad2aa74fd535c778fd1614475b53d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1639a16ebfaad2aa74fd535c778fd1614475b53d", "html_url": "https://github.com/rust-lang/rust/commit/1639a16ebfaad2aa74fd535c778fd1614475b53d"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "f95d4a6ca54812b2efb33dce2d2ad6a46ae9dd72", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "patch": "@@ -3239,4 +3239,8 @@ declare_lint! {\n     pub OR_PATTERNS_BACK_COMPAT,\n     Allow,\n     \"detects usage of old versions of or-patterns\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reference: \"issue #84869 <https://github.com/rust-lang/rust/issues/84869>\",\n+        edition: Some(Edition::Edition2021),\n+    };\n }"}, {"sha": "f4e81a6be2a8906b4607abb2bc817b4836cc6faf", "filename": "src/test/ui/macros/macro-or-patterns-back-compat.fixed", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.fixed?ref=0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "patch": "@@ -2,13 +2,22 @@\n \n #![deny(or_patterns_back_compat)]\n #![allow(unused_macros)]\n-macro_rules! foo { ($x:pat_param | $y:pat) => {} } //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-macro_rules! bar { ($($x:pat_param)+ | $($y:pat)+) => {} } //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+\n+macro_rules! foo { ($x:pat_param | $y:pat) => {} }\n+//~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+//~| WARN this was previously accepted\n+macro_rules! bar { ($($x:pat_param)+ | $($y:pat)+) => {} }\n+//~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+//~| WARN this was previously accepted\n macro_rules! baz { ($x:pat_param | $y:pat_param) => {} } // should be ok\n macro_rules! qux { ($x:pat_param | $y:pat) => {} } // should be ok\n-macro_rules! ogg { ($x:pat_param | $y:pat_param) => {} } //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+macro_rules! ogg { ($x:pat_param | $y:pat_param) => {} }\n+//~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+//~| WARN this was previously accepted\n macro_rules! match_any {\n-    ( $expr:expr , $( $( $pat:pat_param )|+ => $expr_arm:expr ),+ ) => { //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+    ( $expr:expr , $( $( $pat:pat_param )|+ => $expr_arm:expr ),+ ) => {\n+        //~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+        //~| WARN this was previously accepted\n         match $expr {\n             $(\n                 $( $pat => $expr_arm, )+"}, {"sha": "49affdd38da9d79e4ac65db131ccbef38f255fd4", "filename": "src/test/ui/macros/macro-or-patterns-back-compat.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.rs?ref=0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "patch": "@@ -2,13 +2,22 @@\n \n #![deny(or_patterns_back_compat)]\n #![allow(unused_macros)]\n-macro_rules! foo { ($x:pat | $y:pat) => {} } //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-macro_rules! bar { ($($x:pat)+ | $($y:pat)+) => {} } //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+\n+macro_rules! foo { ($x:pat | $y:pat) => {} }\n+//~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+//~| WARN this was previously accepted\n+macro_rules! bar { ($($x:pat)+ | $($y:pat)+) => {} }\n+//~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+//~| WARN this was previously accepted\n macro_rules! baz { ($x:pat_param | $y:pat_param) => {} } // should be ok\n macro_rules! qux { ($x:pat_param | $y:pat) => {} } // should be ok\n-macro_rules! ogg { ($x:pat | $y:pat_param) => {} } //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+macro_rules! ogg { ($x:pat | $y:pat_param) => {} }\n+//~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+//~| WARN this was previously accepted\n macro_rules! match_any {\n-    ( $expr:expr , $( $( $pat:pat )|+ => $expr_arm:expr ),+ ) => { //~ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+    ( $expr:expr , $( $( $pat:pat )|+ => $expr_arm:expr ),+ ) => {\n+        //~^ ERROR the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n+        //~| WARN this was previously accepted\n         match $expr {\n             $(\n                 $( $pat => $expr_arm, )+"}, {"sha": "62687eb36b89e7984bc62cca630d88984f97dccf", "filename": "src/test/ui/macros/macro-or-patterns-back-compat.stderr", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.stderr?ref=0fdd6cc2591e0dca3c55a698444e0e83e07b0ccb", "patch": "@@ -1,5 +1,5 @@\n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:5:21\n+  --> $DIR/macro-or-patterns-back-compat.rs:6:21\n    |\n LL | macro_rules! foo { ($x:pat | $y:pat) => {} }\n    |                     ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`\n@@ -9,24 +9,35 @@ note: the lint level is defined here\n    |\n LL | #![deny(or_patterns_back_compat)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\n+   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>\n \n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:6:23\n+  --> $DIR/macro-or-patterns-back-compat.rs:9:23\n    |\n LL | macro_rules! bar { ($($x:pat)+ | $($y:pat)+) => {} }\n    |                       ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\n+   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>\n \n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:9:21\n+  --> $DIR/macro-or-patterns-back-compat.rs:14:21\n    |\n LL | macro_rules! ogg { ($x:pat | $y:pat_param) => {} }\n    |                     ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\n+   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>\n \n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:11:26\n+  --> $DIR/macro-or-patterns-back-compat.rs:18:26\n    |\n LL |     ( $expr:expr , $( $( $pat:pat )|+ => $expr_arm:expr ),+ ) => {\n    |                          ^^^^^^^^ help: use pat_param to preserve semantics: `$pat:pat_param`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\n+   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>\n \n error: aborting due to 4 previous errors\n "}]}