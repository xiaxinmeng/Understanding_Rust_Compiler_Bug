{"sha": "67f8244975505a3d6138a12750466a67eae7b968", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZjgyNDQ5NzU1MDVhM2Q2MTM4YTEyNzUwNDY2YTY3ZWFlN2I5Njg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-22T23:14:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-22T23:14:01Z"}, "message": "Rollup merge of #80302 - pierwill:fix-80287, r=lcnr\n\ndocs: Update rustc_middle::middle::region::ScopeTree\n\nCorrect return type in docs for [`yield_in_source`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/middle/region/struct.ScopeTree.html#method.yield_in_scope) method.\n\nCloses #80287.", "tree": {"sha": "a3b28ecdf9b0e712f4c9f2b047ff35c27d9d7b64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3b28ecdf9b0e712f4c9f2b047ff35c27d9d7b64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67f8244975505a3d6138a12750466a67eae7b968", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4n25CRBK7hj4Ov3rIwAAdHIIAK6PvcoYiJQJVIjMuzuhE6e2\n498BzCXUqdiPTHJujB/D8Mr67ByNzGrs01dSGTa+XODpqK1AnzTExFQ0ZqPBWurA\njy53pilW5N7Da2SBg6VhnexdIOV2TaeIrznRbgyqfjoEolK5dm5q0lZI1lZVFypL\nMM9qwBqrkEDGfpxOE2hL5O8n3g/2N8qWIsuXWrIVZ+V+sCEVwM5DZoshFPYmGXC8\njjB57DnMyKdvfvg8742h60U0RFFL9OuLrGdjG1yhilJ8hY/yAvEbGBFtdPoDk/AA\nplMmsjc05YppDaj+Y1G4FXSs6Z06q1JcjGpygY+Txoy2QBXrPlz0z1pFsvw3evM=\n=7QSI\n-----END PGP SIGNATURE-----\n", "payload": "tree a3b28ecdf9b0e712f4c9f2b047ff35c27d9d7b64\nparent f711f3ff5f3cf4841c50cbd1c06b83b092c8b174\nparent f078f7cd64302b9a3f29e11387fd0f7a547fa60c\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1608678841 +0100\ncommitter GitHub <noreply@github.com> 1608678841 +0100\n\nRollup merge of #80302 - pierwill:fix-80287, r=lcnr\n\ndocs: Update rustc_middle::middle::region::ScopeTree\n\nCorrect return type in docs for [`yield_in_source`](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/middle/region/struct.ScopeTree.html#method.yield_in_scope) method.\n\nCloses #80287.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67f8244975505a3d6138a12750466a67eae7b968", "html_url": "https://github.com/rust-lang/rust/commit/67f8244975505a3d6138a12750466a67eae7b968", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67f8244975505a3d6138a12750466a67eae7b968/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f711f3ff5f3cf4841c50cbd1c06b83b092c8b174", "url": "https://api.github.com/repos/rust-lang/rust/commits/f711f3ff5f3cf4841c50cbd1c06b83b092c8b174", "html_url": "https://github.com/rust-lang/rust/commit/f711f3ff5f3cf4841c50cbd1c06b83b092c8b174"}, {"sha": "f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "html_url": "https://github.com/rust-lang/rust/commit/f078f7cd64302b9a3f29e11387fd0f7a547fa60c"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "eb48198991c294dd08cf0864999d31bad36adf80", "filename": "compiler/rustc_middle/src/middle/region.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/67f8244975505a3d6138a12750466a67eae7b968/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67f8244975505a3d6138a12750466a67eae7b968/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs?ref=67f8244975505a3d6138a12750466a67eae7b968", "patch": "@@ -332,7 +332,7 @@ pub struct ScopeTree {\n pub struct YieldData {\n     /// The `Span` of the yield.\n     pub span: Span,\n-    /// The number of expressions and patterns appearing before the `yield` in the body plus one.\n+    /// The number of expressions and patterns appearing before the `yield` in the body, plus one.\n     pub expr_and_pat_count: usize,\n     pub source: hir::YieldSource,\n }\n@@ -449,9 +449,7 @@ impl ScopeTree {\n     }\n \n     /// Checks whether the given scope contains a `yield`. If so,\n-    /// returns `Some((span, expr_count))` with the span of a yield we found and\n-    /// the number of expressions and patterns appearing before the `yield` in the body + 1.\n-    /// If there a are multiple yields in a scope, the one with the highest number is returned.\n+    /// returns `Some(YieldData)`. If not, returns `None`.\n     pub fn yield_in_scope(&self, scope: Scope) -> Option<YieldData> {\n         self.yield_in_scope.get(&scope).cloned()\n     }"}]}