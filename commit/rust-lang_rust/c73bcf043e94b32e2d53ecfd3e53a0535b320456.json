{"sha": "c73bcf043e94b32e2d53ecfd3e53a0535b320456", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3M2JjZjA0M2U5NGIzMmUyZDUzZWNmZDNlNTNhMDUzNWIzMjA0NTY=", "commit": {"author": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-10-26T04:39:37Z"}, "committer": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-11-19T22:22:22Z"}, "message": "show macro backtrace with env var", "tree": {"sha": "2224466e5c781a49e49490898441ee892f586a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2224466e5c781a49e49490898441ee892f586a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c73bcf043e94b32e2d53ecfd3e53a0535b320456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c73bcf043e94b32e2d53ecfd3e53a0535b320456", "html_url": "https://github.com/rust-lang/rust/commit/c73bcf043e94b32e2d53ecfd3e53a0535b320456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c73bcf043e94b32e2d53ecfd3e53a0535b320456/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5041b3bb3d953a14f32b15d1e41341c629acae12", "url": "https://api.github.com/repos/rust-lang/rust/commits/5041b3bb3d953a14f32b15d1e41341c629acae12", "html_url": "https://github.com/rust-lang/rust/commit/5041b3bb3d953a14f32b15d1e41341c629acae12"}], "stats": {"total": 60, "additions": 47, "deletions": 13}, "files": [{"sha": "7ce902d0a6f609a30128aaf1278633968c9793b8", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 46, "deletions": 13, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c73bcf043e94b32e2d53ecfd3e53a0535b320456/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c73bcf043e94b32e2d53ecfd3e53a0535b320456/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=c73bcf043e94b32e2d53ecfd3e53a0535b320456", "patch": "@@ -23,6 +23,7 @@ use std::rc::Rc;\n use term;\n use std::collections::HashMap;\n use std::cmp::min;\n+use std::env;\n \n /// Emitter trait for emitting errors.\n pub trait Emitter {\n@@ -786,18 +787,20 @@ impl EmitterWriter {\n     fn fix_multispans_in_std_macros(&mut self,\n                                     span: &mut MultiSpan,\n                                     children: &mut Vec<SubDiagnostic>) {\n-        let mut spans_updated = self.fix_multispan_in_std_macros(span);\n-        for child in children.iter_mut() {\n-            spans_updated |= self.fix_multispan_in_std_macros(&mut child.span);\n-        }\n-        if spans_updated {\n-            children.push(SubDiagnostic {\n-                level: Level::Note,\n-                message: vec![(\"this error originates in a macro outside of the current crate\"\n-                    .to_string(), Style::NoStyle)],\n-                span: MultiSpan::new(),\n-                render_span: None,\n-            });\n+        if env::var_os(\"RUST_MACRO_BACKTRACE\").is_none() {\n+            let mut spans_updated = self.fix_multispan_in_std_macros(span);\n+            for child in children.iter_mut() {\n+                spans_updated |= self.fix_multispan_in_std_macros(&mut child.span);\n+            }\n+            if spans_updated {\n+                children.push(SubDiagnostic {\n+                    level: Level::Note,\n+                    message: vec![(\"this error originates in a macro outside of the current crate (run with RUST_MACRO_BACKTRACE=1 for more info)\"\n+                        .to_string(), Style::NoStyle)],\n+                    span: MultiSpan::new(),\n+                    render_span: None,\n+                });\n+            }\n         }\n     }\n \n@@ -1079,6 +1082,12 @@ impl EmitterWriter {\n             }\n         }\n \n+        if env::var_os(\"RUST_MACRO_BACKTRACE\").is_some() {\n+            if let Some(ref primary_span) = msp.primary_span().as_ref() {\n+                self.render_macro_backtrace_old_school(primary_span, &mut buffer)?;\n+            }\n+        }\n+\n         // final step: take our styled buffer, render it, then output it\n         emit_to_destination(&buffer.render(), level, &mut self.dst, self.short_message)?;\n \n@@ -1226,6 +1235,30 @@ impl EmitterWriter {\n             }\n         }\n     }\n+\n+    fn render_macro_backtrace_old_school(&self,\n+                                         sp: &Span,\n+                                         buffer: &mut StyledBuffer) -> io::Result<()> {\n+        if let Some(ref cm) = self.cm {\n+            for trace in sp.macro_backtrace().iter().rev() {\n+                let line_offset = buffer.num_lines();\n+ \n+                let mut diag_string =\n+                    format!(\"in this expansion of {}\", trace.macro_decl_name);\n+                if let Some(def_site_span) = trace.def_site_span {\n+                    diag_string.push_str(\n+                        &format!(\" (defined in {})\",\n+                            cm.span_to_filename(def_site_span)));\n+                }\n+                let snippet = cm.span_to_string(trace.call_site);\n+                buffer.append(line_offset, &format!(\"{} \", snippet), Style::NoStyle);\n+                buffer.append(line_offset, \"note\", Style::Level(Level::Note));\n+                buffer.append(line_offset, \": \", Style::NoStyle);\n+                buffer.append(line_offset, &diag_string, Style::OldSchoolNoteText);\n+            }\n+        }\n+        Ok(())\n+    }\n }\n \n fn draw_col_separator(buffer: &mut StyledBuffer, line: usize, col: usize) {\n@@ -1415,7 +1448,7 @@ impl Destination {\n                 }\n             }\n             Style::Quotation => {}\n-            Style::HeaderMsg => {\n+            Style::OldSchoolNoteText | Style::HeaderMsg => {\n                 self.start_attr(term::Attr::Bold)?;\n                 if cfg!(windows) {\n                     self.start_attr(term::Attr::ForegroundColor(term::color::BRIGHT_WHITE))?;"}, {"sha": "b76036b22df533d3b88732dd07f90edfe1e1a6d7", "filename": "src/librustc_errors/snippet.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c73bcf043e94b32e2d53ecfd3e53a0535b320456/src%2Flibrustc_errors%2Fsnippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c73bcf043e94b32e2d53ecfd3e53a0535b320456/src%2Flibrustc_errors%2Fsnippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fsnippet.rs?ref=c73bcf043e94b32e2d53ecfd3e53a0535b320456", "patch": "@@ -213,6 +213,7 @@ pub enum Style {\n     UnderlineSecondary,\n     LabelPrimary,\n     LabelSecondary,\n+    OldSchoolNoteText,\n     NoStyle,\n     Level(Level),\n     Highlight,"}]}