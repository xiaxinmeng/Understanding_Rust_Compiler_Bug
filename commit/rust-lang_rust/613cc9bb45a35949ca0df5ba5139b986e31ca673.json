{"sha": "613cc9bb45a35949ca0df5ba5139b986e31ca673", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxM2NjOWJiNDVhMzU5NDljYTBkZjViYTUxMzliOTg2ZTMxY2E2NzM=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-12-17T19:39:39Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-12-17T19:39:39Z"}, "message": "Edit rustc_ast::ast::FieldPat docs\n\nPunctuation fixes.", "tree": {"sha": "666cb578435bb7d58f49a3637b9a357be1c6df48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/666cb578435bb7d58f49a3637b9a357be1c6df48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/613cc9bb45a35949ca0df5ba5139b986e31ca673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/613cc9bb45a35949ca0df5ba5139b986e31ca673", "html_url": "https://github.com/rust-lang/rust/commit/613cc9bb45a35949ca0df5ba5139b986e31ca673", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/613cc9bb45a35949ca0df5ba5139b986e31ca673/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ba7ca2bbbff6cd424aebc654308febc00b9497a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba7ca2bbbff6cd424aebc654308febc00b9497a", "html_url": "https://github.com/rust-lang/rust/commit/2ba7ca2bbbff6cd424aebc654308febc00b9497a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "20f98d390960e6584920b6cce09033b1a7c1a0da", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/613cc9bb45a35949ca0df5ba5139b986e31ca673/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/613cc9bb45a35949ca0df5ba5139b986e31ca673/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=613cc9bb45a35949ca0df5ba5139b986e31ca673", "patch": "@@ -636,16 +636,16 @@ impl Pat {\n     }\n }\n \n-/// A single field in a struct pattern\n+/// A single field in a struct pattern.\n ///\n-/// Patterns like the fields of Foo `{ x, ref y, ref mut z }`\n-/// are treated the same as` x: x, y: ref y, z: ref mut z`,\n-/// except is_shorthand is true\n+/// Patterns like the fields of `Foo { x, ref y, ref mut z }`\n+/// are treated the same as `x: x, y: ref y, z: ref mut z`,\n+/// except when `is_shorthand` is true.\n #[derive(Clone, Encodable, Decodable, Debug)]\n pub struct FieldPat {\n-    /// The identifier for the field\n+    /// The identifier for the field.\n     pub ident: Ident,\n-    /// The pattern the field is destructured to\n+    /// The pattern the field is destructured to.\n     pub pat: P<Pat>,\n     pub is_shorthand: bool,\n     pub attrs: AttrVec,"}]}