{"sha": "1305119a3f7ef81e4333fa64521a8fbb22610641", "node_id": "C_kwDOAAsO6NoAKDEzMDUxMTlhM2Y3ZWY4MWU0MzMzZmE2NDUyMWE4ZmJiMjI2MTA2NDE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-11T16:18:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-11T16:18:44Z"}, "message": "Rollup merge of #107897 - GuillaumeGomez:reexported-macros-docs, r=notriddle\n\nReexported macros docs\n\nPart of #59368 (doesn't fix it, only improve the current situation a bit).\n\nMacros were not correctly handled in reexports and the reexport attributes were not merged with the item either. This PR fixes both.\n\nr? `@notriddle`", "tree": {"sha": "7a5155622d12e26aacd2593cf44fbc9521d20bdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a5155622d12e26aacd2593cf44fbc9521d20bdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1305119a3f7ef81e4333fa64521a8fbb22610641", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj57/kCRBK7hj4Ov3rIwAAXj8IAEFj11zRcNPlTsx1hmCZsYLf\nYjK2ocFmUiL9qNvLMT/BskKrmvyXm1HWrnxXEJkSZSPtwWjKPmYpEDdpBnKzpMPM\nzomeRe5LVKaYebH8wS1nzJtxA1qx1zXxZ9aRp2mIAp8nKJgnEELZ2yYVxNhIFkZV\nGewxwrez3af/vC1SShJYDqt+xzQuSFwLc7B1vQTfKkxrZ1n+fOmCG0Du7lJroiQo\nTMhj3yrRu3sEUvOVELD//i9hGl6iVagWBkvoEL4b7iziwray1A9in6IotwzOwVAr\nn/S8Su/PqBGjjMsyctQBOwBxAlkw3AO5dJzqWU185rk5OYRW8/HLHYNjrmJdqMo=\n=q8m8\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a5155622d12e26aacd2593cf44fbc9521d20bdf\nparent 4b7b5698a4fd19b1b88dfa133b6cae498851cafb\nparent 295fd0d8352ca4cff048b29064cfafbf5f29592c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676132324 +0100\ncommitter GitHub <noreply@github.com> 1676132324 +0100\n\nRollup merge of #107897 - GuillaumeGomez:reexported-macros-docs, r=notriddle\n\nReexported macros docs\n\nPart of #59368 (doesn't fix it, only improve the current situation a bit).\n\nMacros were not correctly handled in reexports and the reexport attributes were not merged with the item either. This PR fixes both.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1305119a3f7ef81e4333fa64521a8fbb22610641", "html_url": "https://github.com/rust-lang/rust/commit/1305119a3f7ef81e4333fa64521a8fbb22610641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1305119a3f7ef81e4333fa64521a8fbb22610641/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b7b5698a4fd19b1b88dfa133b6cae498851cafb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b7b5698a4fd19b1b88dfa133b6cae498851cafb", "html_url": "https://github.com/rust-lang/rust/commit/4b7b5698a4fd19b1b88dfa133b6cae498851cafb"}, {"sha": "295fd0d8352ca4cff048b29064cfafbf5f29592c", "url": "https://api.github.com/repos/rust-lang/rust/commits/295fd0d8352ca4cff048b29064cfafbf5f29592c", "html_url": "https://github.com/rust-lang/rust/commit/295fd0d8352ca4cff048b29064cfafbf5f29592c"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "42bdbddbce617785abafad98c5a981a277c15b76", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1305119a3f7ef81e4333fa64521a8fbb22610641/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1305119a3f7ef81e4333fa64521a8fbb22610641/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1305119a3f7ef81e4333fa64521a8fbb22610641", "patch": "@@ -2209,10 +2209,12 @@ fn clean_maybe_renamed_item<'tcx>(\n         };\n \n         let mut extra_attrs = Vec::new();\n-        if let Some(hir::Node::Item(use_node)) =\n-            import_id.and_then(|def_id| cx.tcx.hir().find_by_def_id(def_id))\n+        if let Some(import_id) = import_id &&\n+            let Some(hir::Node::Item(use_node)) = cx.tcx.hir().find_by_def_id(import_id)\n         {\n-            // We get all the various imports' attributes.\n+            // First, we add the attributes from the current import.\n+            extra_attrs.extend_from_slice(inline::load_attrs(cx, import_id.to_def_id()));\n+            // Then we get all the various imports' attributes.\n             get_all_import_attributes(use_node, cx.tcx, item.owner_id.def_id, &mut extra_attrs);\n         }\n "}, {"sha": "9c1e5f4a3cddb8aa448c5a5e6a72489e6f5f8027", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1305119a3f7ef81e4333fa64521a8fbb22610641/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1305119a3f7ef81e4333fa64521a8fbb22610641/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=1305119a3f7ef81e4333fa64521a8fbb22610641", "patch": "@@ -378,7 +378,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 let nonexported = !tcx.has_attr(def_id, sym::macro_export);\n \n                 if is_macro_2_0 || nonexported || self.inlining {\n-                    self.add_to_current_mod(item, renamed, None);\n+                    self.add_to_current_mod(item, renamed, import_id);\n                 }\n             }\n             hir::ItemKind::Mod(ref m) => {"}, {"sha": "c4dec703aed3ba8a948489923078fa875def2d2d", "filename": "tests/rustdoc/reexport-macro.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1305119a3f7ef81e4333fa64521a8fbb22610641/tests%2Frustdoc%2Freexport-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1305119a3f7ef81e4333fa64521a8fbb22610641/tests%2Frustdoc%2Freexport-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-macro.rs?ref=1305119a3f7ef81e4333fa64521a8fbb22610641", "patch": "@@ -0,0 +1,23 @@\n+// Ensure that macros are correctly reexported and that they get both the comment from the\n+// `pub use` and from the macro.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/macro.foo.html'\n+// @!has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' 'x y'\n+// @has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' 'y'\n+#[macro_use]\n+mod my_module {\n+    /// y\n+    #[macro_export]\n+    macro_rules! foo {\n+        () => ();\n+    }\n+}\n+\n+// @has 'foo/another_mod/macro.bar.html'\n+// @has - '//*[@class=\"toggle top-doc\"]/*[@class=\"docblock\"]' 'x y'\n+pub mod another_mod {\n+    /// x\n+    pub use crate::foo as bar;\n+}"}]}