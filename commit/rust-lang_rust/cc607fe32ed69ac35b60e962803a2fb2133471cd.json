{"sha": "cc607fe32ed69ac35b60e962803a2fb2133471cd", "node_id": "C_kwDOAAsO6NoAKGNjNjA3ZmUzMmVkNjlhYzM1YjYwZTk2MjgwM2EyZmIyMTMzNDcxY2Q", "commit": {"author": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-04-29T23:30:15Z"}, "committer": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-04-29T23:30:15Z"}, "message": "don't remove `dbg!` in arbitrary expressions", "tree": {"sha": "78ff591c1e06280f193a1374a162b327672d4629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78ff591c1e06280f193a1374a162b327672d4629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc607fe32ed69ac35b60e962803a2fb2133471cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc607fe32ed69ac35b60e962803a2fb2133471cd", "html_url": "https://github.com/rust-lang/rust/commit/cc607fe32ed69ac35b60e962803a2fb2133471cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc607fe32ed69ac35b60e962803a2fb2133471cd/comments", "author": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bc3da975a27fe6fe981559171f1cd7a778adb86", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc3da975a27fe6fe981559171f1cd7a778adb86", "html_url": "https://github.com/rust-lang/rust/commit/7bc3da975a27fe6fe981559171f1cd7a778adb86"}], "stats": {"total": 106, "additions": 82, "deletions": 24}, "files": [{"sha": "cea712f2feeaac298d7ea4b90d4925a45331432e", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/cc607fe32ed69ac35b60e962803a2fb2133471cd/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc607fe32ed69ac35b60e962803a2fb2133471cd/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=cc607fe32ed69ac35b60e962803a2fb2133471cd", "patch": "@@ -3,10 +3,10 @@ use clippy_utils::macros::root_macro_call_first_node;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::{is_in_cfg_test, is_in_test_function};\n use rustc_errors::Applicability;\n-use rustc_hir::{Expr, ExprKind};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_hir::{Expr, ExprKind, Node, Stmt, StmtKind};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n-use rustc_span::sym;\n+use rustc_span::{sym, Span};\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -31,6 +31,11 @@ declare_clippy_lint! {\n     \"`dbg!` macro is intended as a debugging tool\"\n }\n \n+fn span_including_semi(cx: &LateContext<'_>, span: Span) -> Span {\n+    let span = cx.sess().source_map().span_extend_to_next_char(span, ';', true);\n+    span.with_hi(span.hi() + rustc_span::BytePos(1))\n+}\n+\n #[derive(Copy, Clone)]\n pub struct DbgMacro {\n     allow_dbg_in_tests: bool,\n@@ -55,13 +60,24 @@ impl LateLintPass<'_> for DbgMacro {\n                 return;\n             }\n             let mut applicability = Applicability::MachineApplicable;\n-            let suggestion = match expr.peel_drop_temps().kind {\n-                // dbg!()\n-                ExprKind::Block(_, _) => String::new(),\n-                // dbg!(1)\n-                ExprKind::Match(val, ..) => {\n-                    snippet_with_applicability(cx, val.span.source_callsite(), \"..\", &mut applicability).to_string()\n+\n+            let (sugg_span, suggestion) = match expr.peel_drop_temps().kind {\n+                ExprKind::Block(..) => match cx.tcx.hir().find_parent(expr.hir_id) {\n+                    // dbg!() as a standalone statement, suggest removing the whole statement entirely\n+                    Some(Node::Stmt(\n+                        stmt @ Stmt {\n+                            kind: StmtKind::Semi(_),\n+                            ..\n+                        },\n+                    )) => (span_including_semi(cx, stmt.span.source_callsite()), String::new()),\n+                    // empty dbg!() in arbitrary position (e.g. `foo(dbg!())`), suggest replacing with `foo(())`\n+                    _ => (macro_call.span, String::from(\"()\")),\n                 },\n+                // dbg!(1)\n+                ExprKind::Match(val, ..) => (\n+                    macro_call.span,\n+                    snippet_with_applicability(cx, val.span.source_callsite(), \"..\", &mut applicability).to_string(),\n+                ),\n                 // dbg!(2, 3)\n                 ExprKind::Tup(\n                     [\n@@ -82,15 +98,15 @@ impl LateLintPass<'_> for DbgMacro {\n                         \"..\",\n                         &mut applicability,\n                     );\n-                    format!(\"({snippet})\")\n+                    (macro_call.span, format!(\"({snippet})\"))\n                 },\n                 _ => return,\n             };\n \n             span_lint_and_sugg(\n                 cx,\n                 DBG_MACRO,\n-                macro_call.span,\n+                sugg_span,\n                 \"the `dbg!` macro is intended as a debugging tool\",\n                 \"remove the invocation before committing it to a version control system\",\n                 suggestion,"}, {"sha": "ae2075e7dad38bed984283e9cb3fe70758973b38", "filename": "tests/ui/dbg_macro.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc607fe32ed69ac35b60e962803a2fb2133471cd/tests%2Fui%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc607fe32ed69ac35b60e962803a2fb2133471cd/tests%2Fui%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.rs?ref=cc607fe32ed69ac35b60e962803a2fb2133471cd", "patch": "@@ -4,6 +4,7 @@\n fn foo(n: u32) -> u32 {\n     if let Some(n) = dbg!(n.checked_sub(4)) { n } else { n }\n }\n+fn bar(_: ()) {}\n \n fn factorial(n: u32) -> u32 {\n     if dbg!(n <= 1) {\n@@ -21,6 +22,13 @@ fn main() {\n     dbg!(1, 2, 3, 4, 5);\n }\n \n+fn issue9914() {\n+    dbg!();\n+    #[allow(clippy::let_unit_value)]\n+    let _ = dbg!();\n+    bar(dbg!());\n+}\n+\n mod issue7274 {\n     trait Thing<'b> {\n         fn foo(&self);"}, {"sha": "34329a06b978485f4cb449084050a2f5ec7b4caf", "filename": "tests/ui/dbg_macro.stderr", "status": "modified", "additions": 47, "deletions": 13, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/cc607fe32ed69ac35b60e962803a2fb2133471cd/tests%2Fui%2Fdbg_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc607fe32ed69ac35b60e962803a2fb2133471cd/tests%2Fui%2Fdbg_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.stderr?ref=cc607fe32ed69ac35b60e962803a2fb2133471cd", "patch": "@@ -11,7 +11,7 @@ LL |     if let Some(n) = n.checked_sub(4) { n } else { n }\n    |                      ~~~~~~~~~~~~~~~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:9:8\n+  --> $DIR/dbg_macro.rs:10:8\n    |\n LL |     if dbg!(n <= 1) {\n    |        ^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL |     if n <= 1 {\n    |        ~~~~~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:10:9\n+  --> $DIR/dbg_macro.rs:11:9\n    |\n LL |         dbg!(1)\n    |         ^^^^^^^\n@@ -33,7 +33,7 @@ LL |         1\n    |\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:12:9\n+  --> $DIR/dbg_macro.rs:13:9\n    |\n LL |         dbg!(n * factorial(n - 1))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -44,7 +44,7 @@ LL |         n * factorial(n - 1)\n    |\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:17:5\n+  --> $DIR/dbg_macro.rs:18:5\n    |\n LL |     dbg!(42);\n    |     ^^^^^^^^\n@@ -55,7 +55,7 @@ LL |     42;\n    |     ~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:18:5\n+  --> $DIR/dbg_macro.rs:19:5\n    |\n LL |     dbg!(dbg!(dbg!(42)));\n    |     ^^^^^^^^^^^^^^^^^^^^\n@@ -66,7 +66,7 @@ LL |     dbg!(dbg!(42));\n    |     ~~~~~~~~~~~~~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:19:14\n+  --> $DIR/dbg_macro.rs:20:14\n    |\n LL |     foo(3) + dbg!(factorial(4));\n    |              ^^^^^^^^^^^^^^^^^^\n@@ -77,7 +77,7 @@ LL |     foo(3) + factorial(4);\n    |              ~~~~~~~~~~~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:20:5\n+  --> $DIR/dbg_macro.rs:21:5\n    |\n LL |     dbg!(1, 2, dbg!(3, 4));\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -88,7 +88,7 @@ LL |     (1, 2, dbg!(3, 4));\n    |     ~~~~~~~~~~~~~~~~~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:21:5\n+  --> $DIR/dbg_macro.rs:22:5\n    |\n LL |     dbg!(1, 2, 3, 4, 5);\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -99,7 +99,41 @@ LL |     (1, 2, 3, 4, 5);\n    |     ~~~~~~~~~~~~~~~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:41:9\n+  --> $DIR/dbg_macro.rs:26:5\n+   |\n+LL |     dbg!();\n+   |     ^^^^^^^\n+   |\n+help: remove the invocation before committing it to a version control system\n+   |\n+LL -     dbg!();\n+LL +     \n+   |\n+\n+error: the `dbg!` macro is intended as a debugging tool\n+  --> $DIR/dbg_macro.rs:28:13\n+   |\n+LL |     let _ = dbg!();\n+   |             ^^^^^^\n+   |\n+help: remove the invocation before committing it to a version control system\n+   |\n+LL |     let _ = ();\n+   |             ~~\n+\n+error: the `dbg!` macro is intended as a debugging tool\n+  --> $DIR/dbg_macro.rs:29:9\n+   |\n+LL |     bar(dbg!());\n+   |         ^^^^^^\n+   |\n+help: remove the invocation before committing it to a version control system\n+   |\n+LL |     bar(());\n+   |         ~~\n+\n+error: the `dbg!` macro is intended as a debugging tool\n+  --> $DIR/dbg_macro.rs:49:9\n    |\n LL |         dbg!(2);\n    |         ^^^^^^^\n@@ -110,7 +144,7 @@ LL |         2;\n    |         ~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:47:5\n+  --> $DIR/dbg_macro.rs:55:5\n    |\n LL |     dbg!(1);\n    |     ^^^^^^^\n@@ -121,7 +155,7 @@ LL |     1;\n    |     ~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:52:5\n+  --> $DIR/dbg_macro.rs:60:5\n    |\n LL |     dbg!(1);\n    |     ^^^^^^^\n@@ -132,7 +166,7 @@ LL |     1;\n    |     ~\n \n error: the `dbg!` macro is intended as a debugging tool\n-  --> $DIR/dbg_macro.rs:58:9\n+  --> $DIR/dbg_macro.rs:66:9\n    |\n LL |         dbg!(1);\n    |         ^^^^^^^\n@@ -142,5 +176,5 @@ help: remove the invocation before committing it to a version control system\n LL |         1;\n    |         ~\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 16 previous errors\n "}]}