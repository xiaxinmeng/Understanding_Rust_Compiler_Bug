{"sha": "e9a52f5af576ffd517284813858b6d06910460ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YTUyZjVhZjU3NmZmZDUxNzI4NDgxMzg1OGI2ZDA2OTEwNDYwZWE=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-04-08T05:35:26Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-04-08T08:03:42Z"}, "message": "Make intrinsic::Opaque more opaque", "tree": {"sha": "6610c4b14fc2a37db27ebebcb2dc3e9c4b6a50cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6610c4b14fc2a37db27ebebcb2dc3e9c4b6a50cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9a52f5af576ffd517284813858b6d06910460ea", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9a52f5af576ffd517284813858b6d06910460ea", "html_url": "https://github.com/rust-lang/rust/commit/e9a52f5af576ffd517284813858b6d06910460ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9a52f5af576ffd517284813858b6d06910460ea/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b2c26f39782ba30ad8868f971d5d8a606fcf88", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b2c26f39782ba30ad8868f971d5d8a606fcf88", "html_url": "https://github.com/rust-lang/rust/commit/04b2c26f39782ba30ad8868f971d5d8a606fcf88"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "dcf300bd31da604bc67f3026556b167c21b2737e", "filename": "src/librustc/front/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e9a52f5af576ffd517284813858b6d06910460ea/src%2Flibrustc%2Ffront%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9a52f5af576ffd517284813858b6d06910460ea/src%2Flibrustc%2Ffront%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fintrinsic.rs?ref=e9a52f5af576ffd517284813858b6d06910460ea", "patch": "@@ -28,8 +28,7 @@ pub mod intrinsic {\n         // Remaining fields not listed\n     }\n \n-    // FIXME: make this a 0-variant enum; trans/reflect.rs has to match it.\n-    pub type Opaque = ();\n+    pub enum Opaque { }\n \n     pub trait TyVisitor {\n         fn visit_bot(&self) -> bool;"}, {"sha": "596c55a68f872fa5602029c02877000ec2149428", "filename": "src/librustc/middle/trans/reflect.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e9a52f5af576ffd517284813858b6d06910460ea/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9a52f5af576ffd517284813858b6d06910460ea/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freflect.rs?ref=e9a52f5af576ffd517284813858b6d06910460ea", "patch": "@@ -274,12 +274,15 @@ pub impl Reflector {\n             let repr = adt::represent_type(bcx.ccx(), t);\n             let variants = ty::substd_enum_variants(ccx.tcx, did, substs);\n             let llptrty = T_ptr(type_of(ccx, t));\n+            let (_, opaquety) = *(ccx.tcx.intrinsic_defs.find(&ccx.sess.ident_of(~\"Opaque\"))\n+                                      .expect(\"Failed to resolve intrinsic::Opaque\"));\n+            let opaqueptrty = ty::mk_ptr(ccx.tcx, ty::mt { ty: opaquety, mutbl: ast::m_imm });\n \n             let make_get_disr = || {\n                 let sub_path = bcx.fcx.path + ~[path_name(special_idents::anon)];\n                 let sym = mangle_internal_name_by_path_and_seq(ccx, sub_path, ~\"get_disr\");\n                 let args = [ty::arg { mode: ast::expl(ast::by_copy),\n-                                      ty: ty::mk_nil_ptr(ccx.tcx) }];\n+                                      ty: opaqueptrty }];\n                 let llfty = type_of_fn(ccx, args, ty::mk_int(ccx.tcx));\n                 let llfdecl = decl_internal_cdecl_fn(ccx.llmod, sym, llfty);\n                 let arg = unsafe {"}]}