{"sha": "de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTFkMmFhODM1ZmY2YmJiMGE4YjZmY2VmMWZmMGExMTc0NDE4YjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-03T17:02:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-03T17:02:13Z"}, "message": "Auto merge of #29529 - Ryman:rustdoc-cap-lints, r=alexcrichton\n\nThis sets the `cap-lints` setting to 'allow' for all doc compilations. There's precedent for this as rustdoc [already whitelists unstable code](https://github.com/rust-lang/rust/blob/master/src/librustdoc/core.rs#L112) when compiling documentation, with the expectation being that a regular compile will complain about any problems. I think the same justification applies here.\r\n\r\nProblem case in the wild: https://github.com/laumann/compiletest-rs/pull/28\r\n\r\nr? @Manishearth", "tree": {"sha": "ebeca2e44b631c4b54e93c0a5df1b9a2ffd3190e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebeca2e44b631c4b54e93c0a5df1b9a2ffd3190e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3", "html_url": "https://github.com/rust-lang/rust/commit/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aa1f59e1eddbef7d85f7c4c9606f3941036c541", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa1f59e1eddbef7d85f7c4c9606f3941036c541", "html_url": "https://github.com/rust-lang/rust/commit/4aa1f59e1eddbef7d85f7c4c9606f3941036c541"}, {"sha": "b1ef5302d5456add7b3314cd871d23a2dc45afb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1ef5302d5456add7b3314cd871d23a2dc45afb5", "html_url": "https://github.com/rust-lang/rust/commit/b1ef5302d5456add7b3314cd871d23a2dc45afb5"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "ae01d6e542611cecdc9816c43909f3bf8da3463d", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3", "patch": "@@ -105,6 +105,7 @@ pub fn run_core(search_paths: SearchPaths, cfgs: Vec<String>, externs: Externs,\n         search_paths: search_paths,\n         crate_types: vec!(config::CrateTypeRlib),\n         lint_opts: vec!((warning_lint, lint::Allow)),\n+        lint_cap: Some(lint::Allow),\n         externs: externs,\n         target_triple: triple.unwrap_or(config::host_triple().to_string()),\n         cfg: config::parse_cfgspecs(cfgs),"}, {"sha": "e7f308a6f0b697f3e4f35efe6806bbb0b18db411", "filename": "src/test/rustdoc/cap-lints.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3/src%2Ftest%2Frustdoc%2Fcap-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3/src%2Ftest%2Frustdoc%2Fcap-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcap-lints.rs?ref=de11d2aa835ff6bbb0a8b6fcef1ff0a1174418b3", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This should fail a normal compile due to non_camel_case_types,\n+// It should pass a doc-compile as it only needs to type-check and\n+// therefore should not concern itself with the lints.\n+#[deny(warnings)]\n+\n+// @has cap_lints/struct.foo.html //pre '#[must_use]'\n+#[must_use]\n+pub struct foo {\n+    field: i32,\n+}"}]}