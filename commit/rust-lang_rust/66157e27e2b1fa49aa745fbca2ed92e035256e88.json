{"sha": "66157e27e2b1fa49aa745fbca2ed92e035256e88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MTU3ZTI3ZTJiMWZhNDlhYTc0NWZiY2EyZWQ5MmUwMzUyNTZlODg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-13T02:05:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-13T02:05:37Z"}, "message": "Rollup merge of #75400 - LukasKalbertodt:fix-f32-docs, r=KodrAus\n\nFix minor things in the `f32` primitive docs\n\nAll of these were review comments in #74621 that I first fixed in that PR, but later accidentally overwrote by a force push.\n\nThanks @the8472 for noticing.\n\nr? @KodrAus", "tree": {"sha": "597f6ef5f0b99370b3e1b9e91c12412a33f65354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/597f6ef5f0b99370b3e1b9e91c12412a33f65354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66157e27e2b1fa49aa745fbca2ed92e035256e88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNJ/xCRBK7hj4Ov3rIwAAdHIIADRrA9j6XlFyhryoypKLr6yt\nu60HhJFikW4ntU0aw44a21R9gtfpgJh1HFYMVrpXECHO2V4bUht/7F2T5BAc7kMe\nP3cnndBfNNRlS+jKvTcIcgq7IPlgdyFW3eV+1CLKoSjV7ubLR3Ai8vPZeCuv3iDx\nvAJmnSzvQDp6hz+9azqWoms3G+iDfAXJWrkvVkTZ3//9LTJemlU3cg70FSKw/zmM\nznVtLDY0CU2kETC7NshA2tqyGwyUb3S12kvdju0GK0rFhVDMNEQGV5Nbt3CYmcsP\nESAXT3f1Whdd44kZMDzxPSAqXaSOpR7ThReuPJJikUiUXg+FC+g1Io/DB4elhMc=\n=MNsN\n-----END PGP SIGNATURE-----\n", "payload": "tree 597f6ef5f0b99370b3e1b9e91c12412a33f65354\nparent d90a4b8ae9c6283bfae537f65e0cee41a69ed5f7\nparent 709d1056b890de640c3d8dabd70562950df98dcf\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597284337 +0900\ncommitter GitHub <noreply@github.com> 1597284337 +0900\n\nRollup merge of #75400 - LukasKalbertodt:fix-f32-docs, r=KodrAus\n\nFix minor things in the `f32` primitive docs\n\nAll of these were review comments in #74621 that I first fixed in that PR, but later accidentally overwrote by a force push.\n\nThanks @the8472 for noticing.\n\nr? @KodrAus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66157e27e2b1fa49aa745fbca2ed92e035256e88", "html_url": "https://github.com/rust-lang/rust/commit/66157e27e2b1fa49aa745fbca2ed92e035256e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66157e27e2b1fa49aa745fbca2ed92e035256e88/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d90a4b8ae9c6283bfae537f65e0cee41a69ed5f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d90a4b8ae9c6283bfae537f65e0cee41a69ed5f7", "html_url": "https://github.com/rust-lang/rust/commit/d90a4b8ae9c6283bfae537f65e0cee41a69ed5f7"}, {"sha": "709d1056b890de640c3d8dabd70562950df98dcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/709d1056b890de640c3d8dabd70562950df98dcf", "html_url": "https://github.com/rust-lang/rust/commit/709d1056b890de640c3d8dabd70562950df98dcf"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "0d2aca6bbc3eb78505d8fe6ecb17568566a1c8b8", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/66157e27e2b1fa49aa745fbca2ed92e035256e88/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66157e27e2b1fa49aa745fbca2ed92e035256e88/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=66157e27e2b1fa49aa745fbca2ed92e035256e88", "patch": "@@ -768,7 +768,8 @@ mod prim_tuple {}\n ///\n /// This type can represent a wide range of decimal numbers, like `3.5`, `27`,\n /// `-113.75`, `0.0078125`, `34359738368`, `0`, `-1`. So unlike integer types\n-/// (like `i32`), floating point types can represent non-integer numbers, too.\n+/// (such as `i32`), floating point types can represent non-integer numbers,\n+/// too.\n ///\n /// However, being able to represent this wide range of numbers comes at the\n /// cost of precision: floats can only represent some of the real numbers and\n@@ -779,15 +780,12 @@ mod prim_tuple {}\n /// often discard insignificant digits: `println!(\"{}\", 1.0f32 / 5.0f32)` will\n /// print `0.2`.\n ///\n-/// The precision is better for numbers near 0 and worse for large numbers. For\n-/// example, above 2<sup>24</sup>, not even all integers are representable.\n-///\n /// Additionally, `f32` can represent a couple of special values:\n ///\n /// - `-0`: this is just due to how floats are encoded. It is semantically\n ///   equivalent to `0` and `-0.0 == 0.0` results in `true`.\n /// - [\u221e](#associatedconstant.INFINITY) and\n-///   [-\u221e](#associatedconstant.NEG_INFINITY): these result from calculations\n+///   [\u2212\u221e](#associatedconstant.NEG_INFINITY): these result from calculations\n ///   like `1.0 / 0.0`.\n /// - [NaN (not a number)](#associatedconstant.NAN): this value results from\n ///   calculations like `(-1.0).sqrt()`. NaN has some potentially unexpected"}]}