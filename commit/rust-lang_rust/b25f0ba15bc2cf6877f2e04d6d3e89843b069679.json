{"sha": "b25f0ba15bc2cf6877f2e04d6d3e89843b069679", "node_id": "C_kwDOAAsO6NoAKGIyNWYwYmExNWJjMmNmNjg3N2YyZTA0ZDZkM2U4OTg0M2IwNjk2Nzk", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-20T15:15:48Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-20T15:15:48Z"}, "message": "Properly set the enum variant body expected type", "tree": {"sha": "bba958bfdc22a01b41003daf6537f716880dadb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bba958bfdc22a01b41003daf6537f716880dadb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b25f0ba15bc2cf6877f2e04d6d3e89843b069679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b25f0ba15bc2cf6877f2e04d6d3e89843b069679", "html_url": "https://github.com/rust-lang/rust/commit/b25f0ba15bc2cf6877f2e04d6d3e89843b069679", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b25f0ba15bc2cf6877f2e04d6d3e89843b069679/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f233cd5d25a2d57dbf617824ca352b45cddbbdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f233cd5d25a2d57dbf617824ca352b45cddbbdb", "html_url": "https://github.com/rust-lang/rust/commit/9f233cd5d25a2d57dbf617824ca352b45cddbbdb"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "2c6d503def1d310b75be2ecc2ed97e0884d8daf9", "filename": "crates/hir-ty/src/infer.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b25f0ba15bc2cf6877f2e04d6d3e89843b069679/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b25f0ba15bc2cf6877f2e04d6d3e89843b069679/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=b25f0ba15bc2cf6877f2e04d6d3e89843b069679", "patch": "@@ -18,7 +18,9 @@ use std::sync::Arc;\n \n use chalk_ir::{cast::Cast, ConstValue, DebruijnIndex, Mutability, Safety, Scalar, TypeFlags};\n use hir_def::{\n+    adt::{ReprData, ReprKind},\n     body::Body,\n+    builtin_type::BuiltinType,\n     data::{ConstData, StaticData},\n     expr::{BindingAnnotation, ExprId, PatId},\n     lang_item::LangItemTarget,\n@@ -67,12 +69,16 @@ pub(crate) fn infer_query(db: &dyn HirDatabase, def: DefWithBodyId) -> Arc<Infer\n         DefWithBodyId::ConstId(c) => ctx.collect_const(&db.const_data(c)),\n         DefWithBodyId::FunctionId(f) => ctx.collect_fn(f),\n         DefWithBodyId::StaticId(s) => ctx.collect_static(&db.static_data(s)),\n-        DefWithBodyId::VariantId(_v) => {\n-            // db.enum_data(v.parent)\n-            // FIXME: This should return the `repr(...)` type of the enum\n-            ctx.return_ty = TyBuilder::builtin(hir_def::builtin_type::BuiltinType::Uint(\n-                hir_def::builtin_type::BuiltinUint::U32,\n-            ));\n+        DefWithBodyId::VariantId(v) => {\n+            ctx.return_ty = match db.enum_data(v.parent).repr {\n+                Some(ReprData { kind: ReprKind::BuiltinInt { builtin, .. }, .. }) => {\n+                    TyBuilder::builtin(match builtin {\n+                        Either::Left(builtin) => BuiltinType::Int(builtin),\n+                        Either::Right(builtin) => BuiltinType::Uint(builtin),\n+                    })\n+                }\n+                _ => TyBuilder::builtin(BuiltinType::Uint(hir_def::builtin_type::BuiltinUint::U32)),\n+            };\n         }\n     }\n "}]}