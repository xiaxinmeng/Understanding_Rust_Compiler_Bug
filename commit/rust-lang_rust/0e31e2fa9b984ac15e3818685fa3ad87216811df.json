{"sha": "0e31e2fa9b984ac15e3818685fa3ad87216811df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMzFlMmZhOWI5ODRhYzE1ZTM4MTg2ODVmYTNhZDg3MjE2ODExZGY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-07-04T22:25:37Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-07-05T02:10:28Z"}, "message": "Remove rustc_mir_borrowck attribute and use rustc_mir instead", "tree": {"sha": "4e71dfe55d53f8eea0f326db84e5aa760a64ddba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e71dfe55d53f8eea0f326db84e5aa760a64ddba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e31e2fa9b984ac15e3818685fa3ad87216811df", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAls9fhUACgkQiMlBzaHU\nZDLJIg//Y2faoJG3p336uzk+XWHMw1Z5PYY2L6i24t4Wabkm6lDOUol/9xfGiw7E\nLgi+KRogY2+/a8MJqUwmVwK9jLvpsXOivfGSoNpfgKmiFJ7vxtzLbKxwZNZQS/9J\n0l8m6alcyB1Sve7EX9LfCrL4xBzY4vAep/wOJoCFziv/Sl4Y2aFSTXLfPLq3QsuJ\nL0P3a+k8zeFdmw1aY/BAjOn8A1excMMwIafZnEFhnX/8c7jgSgNJJ5AeOoUHsA6m\ngcYGcyHEon2N6+tUt4edS5LxIq9TPVV/VQL4U/i3DHHrW38hx1kv0qYe7spG6wRQ\nscaWZjCLb1VJ/KS7QkNwmZjhPB+cogIl/kWgtycsOMOvh5IZi6PZQoqw6AP/Ozfe\na5oJH7+NQaByR1RuQz/NIEMfX27rn7Hof3FfsYjdkDtO316nZUkZQS8qWAtEuA33\njS1dUcHLe/O90YUYzjxqeQ9h4xNdlP/nB6xrgR3pUzaVyYGPXr4avibMNyb/ukaS\nZmMFs9YItWKhQgi4P/I/RV7+CQIHs7rADT04jdppqC6ipl4UebuNtpSYpE9kslL8\nSJY2ihvXQEpQvLAroINvWuw8IX0lz7wCvmdjWOfwtsyxnCHPVYEo+40aTioLHdmb\nHcjGeXEHxy5FqHVczzZss3pXM7nn4rQmso9zPO1eMGtA7iRSqjg=\n=vqQL\n-----END PGP SIGNATURE-----", "payload": "tree 4e71dfe55d53f8eea0f326db84e5aa760a64ddba\nparent eded1aa14cb322b3b1000ee98ea9ba3a10dacba1\nauthor Santiago Pastorino <spastorino@gmail.com> 1530743137 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1530756628 -0300\n\nRemove rustc_mir_borrowck attribute and use rustc_mir instead\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e31e2fa9b984ac15e3818685fa3ad87216811df", "html_url": "https://github.com/rust-lang/rust/commit/0e31e2fa9b984ac15e3818685fa3ad87216811df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e31e2fa9b984ac15e3818685fa3ad87216811df/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eded1aa14cb322b3b1000ee98ea9ba3a10dacba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/eded1aa14cb322b3b1000ee98ea9ba3a10dacba1", "html_url": "https://github.com/rust-lang/rust/commit/eded1aa14cb322b3b1000ee98ea9ba3a10dacba1"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ba649f8e7a909c34e7f3730cc67f0d4c58da8c4d", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=0e31e2fa9b984ac15e3818685fa3ad87216811df", "patch": "@@ -80,7 +80,7 @@ fn mir_borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> BorrowC\n     let mut return_early;\n \n     // Return early if we are not supposed to use MIR borrow checker for this function.\n-    return_early = !tcx.has_attr(def_id, \"rustc_mir_borrowck\") && !tcx.use_mir_borrowck();\n+    return_early = !tcx.has_attr(def_id, \"rustc_mir\") && !tcx.use_mir_borrowck();\n \n     if tcx.is_struct_constructor(def_id) {\n         // We are not borrow checking the automatically generated struct constructors"}, {"sha": "da149f420644c5cd551dfd04cb013150b334caaa", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=0e31e2fa9b984ac15e3818685fa3ad87216811df", "patch": "@@ -36,7 +36,7 @@ impl MirPass for SanityCheck {\n                           src: MirSource, mir: &mut Mir<'tcx>) {\n         let def_id = src.def_id;\n         let id = tcx.hir.as_local_node_id(def_id).unwrap();\n-        if !tcx.has_attr(def_id, \"rustc_mir_borrowck\") {\n+        if !tcx.has_attr(def_id, \"rustc_mir\") {\n             debug!(\"skipping rustc_peek::SanityCheck on {}\", tcx.item_path_str(def_id));\n             return;\n         } else {"}, {"sha": "f5f0ede6864f4df3fe5064aef97b50de96edfdb0", "filename": "src/test/compile-fail/mir-dataflow/def-inits-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs?ref=0e31e2fa9b984ac15e3818685fa3ad87216811df", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_uninits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_definite_init,stop_after_dataflow)]\n fn foo(test: bool, x: &mut S, y: S, mut z: S) -> S {\n     let ret;"}, {"sha": "595f01f7c94b34a065a5736b8297a6ea34b2c1f4", "filename": "src/test/compile-fail/mir-dataflow/inits-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs?ref=0e31e2fa9b984ac15e3818685fa3ad87216811df", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_inits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_maybe_init,stop_after_dataflow)]\n fn foo(test: bool, x: &mut S, y: S, mut z: S) -> S {\n     let ret;"}, {"sha": "bb10c03254e3cb065a7514ee7108635a9f86a289", "filename": "src/test/compile-fail/mir-dataflow/uninits-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs?ref=0e31e2fa9b984ac15e3818685fa3ad87216811df", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_uninits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_maybe_uninit,stop_after_dataflow)]\n fn foo(test: bool, x: &mut S, y: S, mut z: S) -> S {\n     let ret;"}, {"sha": "9854ea779b3adfac2de73d5d63a36fd5e195a420", "filename": "src/test/compile-fail/mir-dataflow/uninits-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e31e2fa9b984ac15e3818685fa3ad87216811df/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs?ref=0e31e2fa9b984ac15e3818685fa3ad87216811df", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_uninits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_maybe_uninit,stop_after_dataflow)]\n fn foo(x: &mut S) {\n     // `x` is initialized here, so maybe-uninit bit is 0."}]}