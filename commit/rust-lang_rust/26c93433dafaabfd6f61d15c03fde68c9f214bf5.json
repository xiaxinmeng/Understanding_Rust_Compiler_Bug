{"sha": "26c93433dafaabfd6f61d15c03fde68c9f214bf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YzkzNDMzZGFmYWFiZmQ2ZjYxZDE1YzAzZmRlNjhjOWYyMTRiZjU=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-11-23T18:21:47Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-11-23T18:47:08Z"}, "message": "Require <T: Send> for AtomicOption\n\nFixes #19247.", "tree": {"sha": "ce41cffb1eca6c8a966cafba01c17fb0059f884f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce41cffb1eca6c8a966cafba01c17fb0059f884f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26c93433dafaabfd6f61d15c03fde68c9f214bf5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26c93433dafaabfd6f61d15c03fde68c9f214bf5", "html_url": "https://github.com/rust-lang/rust/commit/26c93433dafaabfd6f61d15c03fde68c9f214bf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26c93433dafaabfd6f61d15c03fde68c9f214bf5/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "220b99b148559e8996a1dbd279e8ca190bf94b2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/220b99b148559e8996a1dbd279e8ca190bf94b2e", "html_url": "https://github.com/rust-lang/rust/commit/220b99b148559e8996a1dbd279e8ca190bf94b2e"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "0bc5dd11c253d77ce2f782b3ddea747dc19ace05", "filename": "src/libsync/atomic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26c93433dafaabfd6f61d15c03fde68c9f214bf5/src%2Flibsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c93433dafaabfd6f61d15c03fde68c9f214bf5/src%2Flibsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fatomic.rs?ref=26c93433dafaabfd6f61d15c03fde68c9f214bf5", "patch": "@@ -96,7 +96,7 @@\n \n use alloc::boxed::Box;\n use core::mem;\n-use core::prelude::{Drop, None, Option, Some};\n+use core::prelude::{Send, Drop, None, Option, Some};\n \n pub use core::atomic::{AtomicBool, AtomicInt, AtomicUint, AtomicPtr};\n pub use core::atomic::{Ordering, Relaxed, Release, Acquire, AcqRel, SeqCst};\n@@ -114,7 +114,7 @@ pub struct AtomicOption<T> {\n     p: AtomicUint,\n }\n \n-impl<T> AtomicOption<T> {\n+impl<T: Send> AtomicOption<T> {\n     /// Create a new `AtomicOption`\n     pub fn new(p: Box<T>) -> AtomicOption<T> {\n         unsafe { AtomicOption { p: AtomicUint::new(mem::transmute(p)) } }\n@@ -170,7 +170,7 @@ impl<T> AtomicOption<T> {\n }\n \n #[unsafe_destructor]\n-impl<T> Drop for AtomicOption<T> {\n+impl<T: Send> Drop for AtomicOption<T> {\n     fn drop(&mut self) {\n         let _ = self.take(SeqCst);\n     }"}, {"sha": "15c726be2fd231f58c9eb9f3d73776159e7d63f0", "filename": "src/test/compile-fail/atomicoption-not-send-ref.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/26c93433dafaabfd6f61d15c03fde68c9f214bf5/src%2Ftest%2Fcompile-fail%2Fatomicoption-not-send-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c93433dafaabfd6f61d15c03fde68c9f214bf5/src%2Ftest%2Fcompile-fail%2Fatomicoption-not-send-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fatomicoption-not-send-ref.rs?ref=26c93433dafaabfd6f61d15c03fde68c9f214bf5", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::sync::atomic::AtomicOption;\n+\n+fn main() {\n+    let x = 0u;\n+    AtomicOption::new(box &x);  //~ ERROR `x` does not live long enough\n+}"}, {"sha": "df3ebf530df99fee859c41206ba372b2cf0b05eb", "filename": "src/test/compile-fail/atomicoption-not-send.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/26c93433dafaabfd6f61d15c03fde68c9f214bf5/src%2Ftest%2Fcompile-fail%2Fatomicoption-not-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c93433dafaabfd6f61d15c03fde68c9f214bf5/src%2Ftest%2Fcompile-fail%2Fatomicoption-not-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fatomicoption-not-send.rs?ref=26c93433dafaabfd6f61d15c03fde68c9f214bf5", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::kinds::marker;\n+use std::sync::atomic::AtomicOption;\n+\n+fn main() {\n+    AtomicOption::new(box marker::NoSend);  //~ ERROR `core::kinds::Send` is not implemented\n+}"}]}