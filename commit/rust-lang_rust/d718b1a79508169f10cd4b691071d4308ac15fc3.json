{"sha": "d718b1a79508169f10cd4b691071d4308ac15fc3", "node_id": "C_kwDOAAsO6NoAKGQ3MThiMWE3OTUwODE2OWYxMGNkNGI2OTEwNzFkNDMwOGFjMTVmYzM", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-10-31T14:02:38Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-10-31T14:09:36Z"}, "message": "Add JoinHandle::is_running.", "tree": {"sha": "9f60b7ce0033b74eb7385156bb27bc625f2a2ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f60b7ce0033b74eb7385156bb27bc625f2a2ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d718b1a79508169f10cd4b691071d4308ac15fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d718b1a79508169f10cd4b691071d4308ac15fc3", "html_url": "https://github.com/rust-lang/rust/commit/d718b1a79508169f10cd4b691071d4308ac15fc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d718b1a79508169f10cd4b691071d4308ac15fc3/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58899c4d9c63a6d27ac395ee9597ae797df7f026", "url": "https://api.github.com/repos/rust-lang/rust/commits/58899c4d9c63a6d27ac395ee9597ae797df7f026", "html_url": "https://github.com/rust-lang/rust/commit/58899c4d9c63a6d27ac395ee9597ae797df7f026"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "f8f64117113113258e178340a2667cb3b5dbb598", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d718b1a79508169f10cd4b691071d4308ac15fc3/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d718b1a79508169f10cd4b691071d4308ac15fc3/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=d718b1a79508169f10cd4b691071d4308ac15fc3", "patch": "@@ -1402,6 +1402,15 @@ impl<T> JoinHandle<T> {\n     pub fn join(mut self) -> Result<T> {\n         self.0.join()\n     }\n+\n+    /// Checks if the the associated thread is still running its main function.\n+    ///\n+    /// This might return `false` for a brief moment after the thread's main\n+    /// function has returned, but before the thread itself has stopped running.\n+    #[unstable(feature = \"thread_is_running\", issue = \"none\")]\n+    pub fn is_running(&self) -> bool {\n+        Arc::strong_count(&self.0.packet.0) > 1\n+    }\n }\n \n impl<T> AsInner<imp::Thread> for JoinHandle<T> {"}]}