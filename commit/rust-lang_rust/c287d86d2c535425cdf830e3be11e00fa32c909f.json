{"sha": "c287d86d2c535425cdf830e3be11e00fa32c909f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyODdkODZkMmM1MzU0MjVjZGY4MzBlM2JlMTFlMDBmYTMyYzkwOWY=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-02T18:36:12Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-03T00:00:48Z"}, "message": "Use .nth(x) instead of .skip(x).next() on iterators.", "tree": {"sha": "2470d0b17aa1a655d36abfee4e11574886b6dee9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2470d0b17aa1a655d36abfee4e11574886b6dee9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c287d86d2c535425cdf830e3be11e00fa32c909f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c287d86d2c535425cdf830e3be11e00fa32c909f", "html_url": "https://github.com/rust-lang/rust/commit/c287d86d2c535425cdf830e3be11e00fa32c909f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c287d86d2c535425cdf830e3be11e00fa32c909f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5abaeb3d6712b54f3309df968ebee39e544d0fcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5abaeb3d6712b54f3309df968ebee39e544d0fcc", "html_url": "https://github.com/rust-lang/rust/commit/5abaeb3d6712b54f3309df968ebee39e544d0fcc"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "61ca7c859abfd9715d221d477d1401716690aa58", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c287d86d2c535425cdf830e3be11e00fa32c909f/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c287d86d2c535425cdf830e3be11e00fa32c909f/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=c287d86d2c535425cdf830e3be11e00fa32c909f", "patch": "@@ -186,7 +186,7 @@ pub fn get_linker(sess: &Session, linker: &Path, flavor: LinkerFlavor) -> (PathB\n     if flavor == LinkerFlavor::Msvc && t.target_vendor == \"uwp\" {\n         if let Some(ref tool) = msvc_tool {\n             let original_path = tool.path();\n-            if let Some(ref root_lib_path) = original_path.ancestors().skip(4).next() {\n+            if let Some(ref root_lib_path) = original_path.ancestors().nth(4) {\n                 let arch = match t.arch.as_str() {\n                     \"x86_64\" => Some(\"x64\".to_string()),\n                     \"x86\" => Some(\"x86\".to_string()),"}, {"sha": "d05955fb858c0c3eda3c309f5a80a1527db5a94d", "filename": "src/librustc_infer/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c287d86d2c535425cdf830e3be11e00fa32c909f/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c287d86d2c535425cdf830e3be11e00fa32c909f/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=c287d86d2c535425cdf830e3be11e00fa32c909f", "patch": "@@ -401,9 +401,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         if let Ok(snippet) = self.tcx.sess.source_map().span_to_snippet(span) {\n             let refs_number =\n                 snippet.chars().filter(|c| !c.is_whitespace()).take_while(|c| *c == '&').count();\n-            if let Some('\\'') =\n-                snippet.chars().filter(|c| !c.is_whitespace()).skip(refs_number).next()\n-            {\n+            if let Some('\\'') = snippet.chars().filter(|c| !c.is_whitespace()).nth(refs_number) {\n                 // Do not suggest removal of borrow from type arguments.\n                 return;\n             }\n@@ -464,9 +462,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         if let Ok(snippet) = self.tcx.sess.source_map().span_to_snippet(span) {\n             let refs_number =\n                 snippet.chars().filter(|c| !c.is_whitespace()).take_while(|c| *c == '&').count();\n-            if let Some('\\'') =\n-                snippet.chars().filter(|c| !c.is_whitespace()).skip(refs_number).next()\n-            {\n+            if let Some('\\'') = snippet.chars().filter(|c| !c.is_whitespace()).nth(refs_number) {\n                 // Do not suggest removal of borrow from type arguments.\n                 return;\n             }"}]}