{"sha": "154bce18644698f4e8ef2a2ad2bdd853f2f1e31c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NGJjZTE4NjQ0Njk4ZjRlOGVmMmEyYWQyYmRkODUzZjJmMWUzMWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-27T15:07:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-27T15:07:45Z"}, "message": "remove dead code", "tree": {"sha": "0d70f6361d950379f306bd748e279b196675760b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d70f6361d950379f306bd748e279b196675760b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c", "html_url": "https://github.com/rust-lang/rust/commit/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f9a6521efc6939bb395238d249ee3a397fa4446", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f9a6521efc6939bb395238d249ee3a397fa4446", "html_url": "https://github.com/rust-lang/rust/commit/7f9a6521efc6939bb395238d249ee3a397fa4446"}], "stats": {"total": 37, "additions": 2, "deletions": 35}, "files": [{"sha": "ca775030d0a57a10e89089dae03fba0a6199667b", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=154bce18644698f4e8ef2a2ad2bdd853f2f1e31c", "patch": "@@ -2,7 +2,6 @@\n mod cancellation;\n mod input;\n mod loc2id;\n-pub mod mock;\n \n use std::{\n     panic, sync::Arc,"}, {"sha": "5e185062b450e53d03c9969bb374958cd97ed7ac", "filename": "crates/ra_db/src/mock.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7f9a6521efc6939bb395238d249ee3a397fa4446/crates%2Fra_db%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f9a6521efc6939bb395238d249ee3a397fa4446/crates%2Fra_db%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Fmock.rs?ref=7f9a6521efc6939bb395238d249ee3a397fa4446", "patch": "@@ -1,30 +0,0 @@\n-use rustc_hash::FxHashSet;\n-use relative_path::{RelativePath, RelativePathBuf};\n-\n-use crate::{FileId};\n-\n-#[derive(Default, Debug, Clone)]\n-pub struct FileMap(Vec<(FileId, RelativePathBuf)>);\n-\n-impl FileMap {\n-    pub fn add(&mut self, path: RelativePathBuf) -> FileId {\n-        let file_id = FileId((self.0.len() + 1) as u32);\n-        self.0.push((file_id, path));\n-        file_id\n-    }\n-\n-    pub fn files(&self) -> FxHashSet<FileId> {\n-        self.iter().map(|(id, _)| id).collect()\n-    }\n-\n-    pub fn file_id(&self, path: &str) -> FileId {\n-        assert!(path.starts_with('/'));\n-        self.iter().find(|(_, p)| p == &path[1..]).unwrap().0\n-    }\n-\n-    fn iter<'a>(&'a self) -> impl Iterator<Item = (FileId, &'a RelativePath)> + 'a {\n-        self.0\n-            .iter()\n-            .map(|(id, path)| (*id, path.as_relative_path()))\n-    }\n-}"}, {"sha": "0f2d22ab24dd66961591fa2c3c8ffca9c875b963", "filename": "crates/ra_ide_api/src/mock_analysis.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154bce18644698f4e8ef2a2ad2bdd853f2f1e31c/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs?ref=154bce18644698f4e8ef2a2ad2bdd853f2f1e31c", "patch": "@@ -2,7 +2,6 @@ use std::sync::Arc;\n \n use relative_path::RelativePathBuf;\n use test_utils::{extract_offset, extract_range, parse_fixture, CURSOR_MARKER};\n-use ra_db::mock::FileMap;\n \n use crate::{Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, FilePosition, FileRange, SourceRootId};\n \n@@ -83,15 +82,14 @@ impl MockAnalysis {\n     }\n     pub fn analysis_host(self) -> AnalysisHost {\n         let mut host = AnalysisHost::default();\n-        let mut file_map = FileMap::default();\n         let source_root = SourceRootId(0);\n         let mut change = AnalysisChange::new();\n         change.add_root(source_root, true);\n         let mut crate_graph = CrateGraph::default();\n-        for (path, contents) in self.files.into_iter() {\n+        for (i, (path, contents)) in self.files.into_iter().enumerate() {\n             assert!(path.starts_with('/'));\n             let path = RelativePathBuf::from_path(&path[1..]).unwrap();\n-            let file_id = file_map.add(path.clone());\n+            let file_id = FileId(i as u32 + 1);\n             if path == \"/lib.rs\" || path == \"/main.rs\" {\n                 crate_graph.add_crate_root(file_id);\n             }"}]}