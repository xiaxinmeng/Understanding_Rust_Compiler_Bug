{"sha": "d2212a49f6d447a14cdc87a9de2a4844e78b6905", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMjEyYTQ5ZjZkNDQ3YTE0Y2RjODdhOWRlMmE0ODQ0ZTc4YjY5MDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-13T15:03:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-13T15:03:57Z"}, "message": "Merge #5748\n\n5748: Rename ra_ssr -> ssr\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b9c7e76342b631709ecc7cea807dd82a43539312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9c7e76342b631709ecc7cea807dd82a43539312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2212a49f6d447a14cdc87a9de2a4844e78b6905", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNVZdCRBK7hj4Ov3rIwAAdHIIAADF/5jAP81eLk/5gVemp7vI\nJF1VAMzXO2ZKUN2DFMorOUf8N5kzpMhul5Ut6rNSqewoJZYXsmFsaR3bSCTkYcQE\n16sMQKTbij5nAlIE1YEbAxBTzFEosCiUYHRbvDk3ZAXc5pGqhTKrrBXU9hQ/9jpa\n12fZVHKbMwKw1WgMkuucKRUYssxABrZqW04umrlDai27WCbMsSSzuJVZF9rlHaEq\nvP19Iir/b0pY+umYtRxRczBavfbYIP6hxF6LK8sXhbPsOEraI9VrzWshKZ9iPJv8\n343zOBHYyWZUWeTZ4JsA2qinqe9Kt4BQKxB0+uW9PVou7h6BVmDkW3HeM/cDPG8=\n=v/aX\n-----END PGP SIGNATURE-----\n", "payload": "tree b9c7e76342b631709ecc7cea807dd82a43539312\nparent e9926948ca267932ccc1341388bfd1b3fa88a001\nparent ae3abd6e575940eb1221acf26c09e96352f052fa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597331037 +0000\ncommitter GitHub <noreply@github.com> 1597331037 +0000\n\nMerge #5748\n\n5748: Rename ra_ssr -> ssr\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2212a49f6d447a14cdc87a9de2a4844e78b6905", "html_url": "https://github.com/rust-lang/rust/commit/d2212a49f6d447a14cdc87a9de2a4844e78b6905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2212a49f6d447a14cdc87a9de2a4844e78b6905/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9926948ca267932ccc1341388bfd1b3fa88a001", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9926948ca267932ccc1341388bfd1b3fa88a001", "html_url": "https://github.com/rust-lang/rust/commit/e9926948ca267932ccc1341388bfd1b3fa88a001"}, {"sha": "ae3abd6e575940eb1221acf26c09e96352f052fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3abd6e575940eb1221acf26c09e96352f052fa", "html_url": "https://github.com/rust-lang/rust/commit/ae3abd6e575940eb1221acf26c09e96352f052fa"}], "stats": {"total": 601, "additions": 288, "deletions": 313}, "files": [{"sha": "4d8b748392d0e4c262104b76a31894c8c828b6a2", "filename": "Cargo.lock", "status": "modified", "additions": 88, "deletions": 88, "changes": 176, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -463,6 +463,24 @@ dependencies = [\n  \"libc\",\n ]\n \n+[[package]]\n+name = \"hir\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"arrayvec\",\n+ \"base_db\",\n+ \"either\",\n+ \"hir_def\",\n+ \"hir_expand\",\n+ \"hir_ty\",\n+ \"itertools\",\n+ \"log\",\n+ \"profile\",\n+ \"rustc-hash\",\n+ \"stdx\",\n+ \"syntax\",\n+]\n+\n [[package]]\n name = \"hir_def\"\n version = \"0.0.0\"\n@@ -507,6 +525,34 @@ dependencies = [\n  \"tt\",\n ]\n \n+[[package]]\n+name = \"hir_ty\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"arena\",\n+ \"arrayvec\",\n+ \"base_db\",\n+ \"chalk-ir\",\n+ \"chalk-recursive\",\n+ \"chalk-solve\",\n+ \"ena\",\n+ \"expect\",\n+ \"hir_def\",\n+ \"hir_expand\",\n+ \"itertools\",\n+ \"log\",\n+ \"profile\",\n+ \"rustc-hash\",\n+ \"scoped-tls\",\n+ \"smallvec\",\n+ \"stdx\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"tracing\",\n+ \"tracing-subscriber\",\n+ \"tracing-tree\",\n+]\n+\n [[package]]\n name = \"home\"\n version = \"0.5.3\"\n@@ -516,6 +562,25 @@ dependencies = [\n  \"winapi 0.3.9\",\n ]\n \n+[[package]]\n+name = \"ide_db\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"base_db\",\n+ \"either\",\n+ \"fst\",\n+ \"hir\",\n+ \"log\",\n+ \"once_cell\",\n+ \"profile\",\n+ \"rayon\",\n+ \"rustc-hash\",\n+ \"stdx\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"text_edit\",\n+]\n+\n [[package]]\n name = \"idna\"\n version = \"0.2.0\"\n@@ -1043,63 +1108,17 @@ version = \"0.1.0\"\n dependencies = [\n  \"base_db\",\n  \"either\",\n+ \"hir\",\n+ \"ide_db\",\n  \"itertools\",\n  \"profile\",\n- \"ra_hir\",\n- \"ra_ide_db\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n ]\n \n-[[package]]\n-name = \"ra_hir\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"arrayvec\",\n- \"base_db\",\n- \"either\",\n- \"hir_def\",\n- \"hir_expand\",\n- \"itertools\",\n- \"log\",\n- \"profile\",\n- \"ra_hir_ty\",\n- \"rustc-hash\",\n- \"stdx\",\n- \"syntax\",\n-]\n-\n-[[package]]\n-name = \"ra_hir_ty\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"arena\",\n- \"arrayvec\",\n- \"base_db\",\n- \"chalk-ir\",\n- \"chalk-recursive\",\n- \"chalk-solve\",\n- \"ena\",\n- \"expect\",\n- \"hir_def\",\n- \"hir_expand\",\n- \"itertools\",\n- \"log\",\n- \"profile\",\n- \"rustc-hash\",\n- \"scoped-tls\",\n- \"smallvec\",\n- \"stdx\",\n- \"syntax\",\n- \"test_utils\",\n- \"tracing\",\n- \"tracing-subscriber\",\n- \"tracing-tree\",\n-]\n-\n [[package]]\n name = \"ra_ide\"\n version = \"0.1.0\"\n@@ -1108,55 +1127,22 @@ dependencies = [\n  \"cfg\",\n  \"either\",\n  \"expect\",\n+ \"hir\",\n+ \"ide_db\",\n  \"indexmap\",\n  \"itertools\",\n  \"log\",\n  \"oorandom\",\n  \"profile\",\n  \"ra_assists\",\n- \"ra_hir\",\n- \"ra_ide_db\",\n- \"ra_ssr\",\n  \"rustc-hash\",\n+ \"ssr\",\n  \"stdx\",\n  \"syntax\",\n  \"test_utils\",\n  \"text_edit\",\n ]\n \n-[[package]]\n-name = \"ra_ide_db\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"base_db\",\n- \"either\",\n- \"fst\",\n- \"log\",\n- \"once_cell\",\n- \"profile\",\n- \"ra_hir\",\n- \"rayon\",\n- \"rustc-hash\",\n- \"stdx\",\n- \"syntax\",\n- \"test_utils\",\n- \"text_edit\",\n-]\n-\n-[[package]]\n-name = \"ra_ssr\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"base_db\",\n- \"expect\",\n- \"ra_hir\",\n- \"ra_ide_db\",\n- \"rustc-hash\",\n- \"syntax\",\n- \"test_utils\",\n- \"text_edit\",\n-]\n-\n [[package]]\n name = \"rayon\"\n version = \"1.3.1\"\n@@ -1236,7 +1222,10 @@ dependencies = [\n  \"env_logger\",\n  \"expect\",\n  \"flycheck\",\n+ \"hir\",\n  \"hir_def\",\n+ \"hir_ty\",\n+ \"ide_db\",\n  \"itertools\",\n  \"jod-thread\",\n  \"log\",\n@@ -1250,15 +1239,12 @@ dependencies = [\n  \"proc_macro_srv\",\n  \"profile\",\n  \"project_model\",\n- \"ra_hir\",\n- \"ra_hir_ty\",\n  \"ra_ide\",\n- \"ra_ide_db\",\n- \"ra_ssr\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n+ \"ssr\",\n  \"stdx\",\n  \"syntax\",\n  \"test_utils\",\n@@ -1456,6 +1442,20 @@ dependencies = [\n  \"serde\",\n ]\n \n+[[package]]\n+name = \"ssr\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"base_db\",\n+ \"expect\",\n+ \"hir\",\n+ \"ide_db\",\n+ \"rustc-hash\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"text_edit\",\n+]\n+\n [[package]]\n name = \"stdx\"\n version = \"0.1.0\""}, {"sha": "dbb2986b600708d4870c0c75a38ca9e01b4b3b49", "filename": "crates/hir/Cargo.toml", "status": "renamed", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_hir\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"hir\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -13,7 +13,6 @@ log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n either = \"1.5.3\"\n arrayvec = \"0.5.1\"\n-\n itertools = \"0.9.0\"\n \n stdx = { path = \"../stdx\" }\n@@ -22,4 +21,4 @@ base_db = { path = \"../base_db\" }\n profile = { path = \"../profile\" }\n hir_expand = { path = \"../hir_expand\" }\n hir_def = { path = \"../hir_def\" }\n-hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }\n+hir_ty = { path = \"../hir_ty\" }", "previous_filename": "crates/ra_hir/Cargo.toml"}, {"sha": "8ffb9e99b0ee813d6b44281cf6281c115742778f", "filename": "crates/hir/src/code_model.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/code_model.rs"}, {"sha": "07333c453f0e0c9f902ae0d636d7e0b94fdd61e7", "filename": "crates/hir/src/db.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdb.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/db.rs"}, {"sha": "363164b9b4a68bc98c5afb5e1b465a6b1ac64785", "filename": "crates/hir/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdiagnostics.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/diagnostics.rs"}, {"sha": "a53ac1e080be98d15222b2996dcbd74fbaebc7c6", "filename": "crates/hir/src/from_id.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Ffrom_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Ffrom_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Ffrom_id.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/from_id.rs"}, {"sha": "a50d4ff02909b5a57851875a0d55f752dce358a5", "filename": "crates/hir/src/has_source.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fhas_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fhas_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fhas_source.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/has_source.rs"}, {"sha": "24a0f6b4b18490b6c138aa1fd9ca84f44a5bab2a", "filename": "crates/hir/src/lib.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -9,11 +9,11 @@\n //! It is written in \"OO\" style. Each type is self contained (as in, it knows it's\n //! parents and full context). It should be \"clean code\".\n //!\n-//! `ra_hir_*` crates are the implementation of the compiler logic.\n+//! `hir_*` crates are the implementation of the compiler logic.\n //! They are written in \"ECS\" style, with relatively little abstractions.\n //! Many types are not self-contained, and explicitly use local indexes, arenas, etc.\n //!\n-//! `ra_hir` is what insulates the \"we don't know how to actually write an incremental compiler\"\n+//! `hir` is what insulates the \"we don't know how to actually write an incremental compiler\"\n //! from the ide with completions, hovers, etc. It is a (soft, internal) boundary:\n //! https://www.tedinski.com/2018/02/06/system-boundaries.html.\n ", "previous_filename": "crates/ra_hir/src/lib.rs"}, {"sha": "1467d825d9338bae0f0d0d7b1f72ff031756c565", "filename": "crates/hir/src/semantics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/semantics.rs"}, {"sha": "5918b9541be2ecd0c79ace07e72a8cbb451167b2", "filename": "crates/hir/src/semantics/source_to_def.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/semantics/source_to_def.rs"}, {"sha": "8750584f946ac09db257c6022beb431e4a88ac42", "filename": "crates/hir/src/source_analyzer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir/src/source_analyzer.rs"}, {"sha": "83b5013a902155de46befb472d7ed73f4c821760", "filename": "crates/hir_ty/Cargo.toml", "status": "renamed", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_hir_ty\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"hir_ty\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -15,9 +15,12 @@ smallvec = \"1.2.0\"\n ena = \"0.14.0\"\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n+scoped-tls = \"1\"\n+chalk-solve = { version = \"0.21.0\" }\n+chalk-ir = { version = \"0.21.0\" }\n+chalk-recursive = { version = \"0.21.0\" }\n \n stdx = { path = \"../stdx\" }\n-\n hir_def = { path = \"../hir_def\" }\n hir_expand = { path = \"../hir_expand\" }\n arena = { path = \"../arena\" }\n@@ -26,15 +29,9 @@ profile = { path = \"../profile\" }\n syntax = { path = \"../syntax\" }\n test_utils = { path = \"../test_utils\" }\n \n-scoped-tls = \"1\"\n-\n-chalk-solve = { version = \"0.21.0\" }\n-chalk-ir = { version = \"0.21.0\" }\n-chalk-recursive = { version = \"0.21.0\" }\n-\n [dev-dependencies]\n-expect = { path = \"../expect\" }\n-\n tracing = \"0.1\"\n tracing-subscriber = { version = \"0.2\", default-features = false, features = [\"env-filter\", \"registry\"] }\n tracing-tree = { version = \"0.1.4\" }\n+\n+expect = { path = \"../expect\" }", "previous_filename": "crates/ra_hir_ty/Cargo.toml"}, {"sha": "ece68183e749fe57893bba854eb36103fcc9c330", "filename": "crates/hir_ty/src/autoderef.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/autoderef.rs"}, {"sha": "25cf9eb7f1279099a2e7de51ad08e8b7e5a7add0", "filename": "crates/hir_ty/src/db.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdb.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/db.rs"}, {"sha": "ae0cf8d09b947e5cd7f2a4226b914041b2f30edb", "filename": "crates/hir_ty/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/diagnostics.rs"}, {"sha": "fb76e2e4ecf0ee14ced00bb0e6f2e5c8bf179221", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/diagnostics/expr.rs"}, {"sha": "7f007f1d652e1acfbcb619e6e92209a2e855fbb4", "filename": "crates/hir_ty/src/diagnostics/match_check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/diagnostics/match_check.rs"}, {"sha": "61ffbf5d1519111c71ed52f6637252dbcc26f342", "filename": "crates/hir_ty/src/diagnostics/unsafe_check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/diagnostics/unsafe_check.rs"}, {"sha": "19770e609afd3115bcd31bbb23aaddbb70d4aa8d", "filename": "crates/hir_ty/src/display.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/display.rs"}, {"sha": "03b00b101c2314788f795ad6f7ae4edd3b64d40a", "filename": "crates/hir_ty/src/infer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/infer.rs"}, {"sha": "32c7c57cd61a3be0561d59436b391eb6fda0ec77", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/infer/coerce.rs"}, {"sha": "a2f849d02130b4f1a9923f824d7c568618b71f38", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/infer/expr.rs"}, {"sha": "4dd4f9802d6ecf93bf48027fe64baccf9820080b", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/infer/pat.rs"}, {"sha": "80d7ed10ec3c6a9972d99a62bafe83be038ac623", "filename": "crates/hir_ty/src/infer/path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/infer/path.rs"}, {"sha": "2e895d911683c7f18b2cdace38d9b3a19a998cfb", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/infer/unify.rs"}, {"sha": "1e748476ac1946a6afefce3b91056136424889f3", "filename": "crates/hir_ty/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/lib.rs"}, {"sha": "cd574e983f90ad09bb314e4c52d3f72807bc2562", "filename": "crates/hir_ty/src/lower.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/lower.rs"}, {"sha": "ec59145c700a85990045ce4f7c6926947276ac58", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/method_resolution.rs"}, {"sha": "0870874fce6cd0544a9e93794ba8e81e5dfd9365", "filename": "crates/hir_ty/src/op.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fop.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/op.rs"}, {"sha": "37966b709848cc38c4bd08940f115fa25d48bcd2", "filename": "crates/hir_ty/src/primitive.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fprimitive.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/primitive.rs"}, {"sha": "15b8435e9213427e492212e7c753b94da8808027", "filename": "crates/hir_ty/src/test_db.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftest_db.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/test_db.rs"}, {"sha": "c953925ecb5810d5843719fd37a19db693d8e5f9", "filename": "crates/hir_ty/src/tests.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -35,7 +35,7 @@ use crate::{\n \n // These tests compare the inference results for all expressions in a file\n // against snapshots of the expected results using expect. Use\n-// `env UPDATE_EXPECT=1 cargo test -p ra_hir_ty` to update the snapshots.\n+// `env UPDATE_EXPECT=1 cargo test -p hir_ty` to update the snapshots.\n \n fn setup_tracing() -> tracing::subscriber::DefaultGuard {\n     use tracing_subscriber::{layer::SubscriberExt, EnvFilter, Registry};", "previous_filename": "crates/ra_hir_ty/src/tests.rs"}, {"sha": "17efd75cb6b699538c7a97f49b8e6f7013e91185", "filename": "crates/hir_ty/src/tests/coercion.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/coercion.rs"}, {"sha": "b502135d8e203af545ddfce284dff315d7c4fcb2", "filename": "crates/hir_ty/src/tests/display_source_code.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fdisplay_source_code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fdisplay_source_code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fdisplay_source_code.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/display_source_code.rs"}, {"sha": "d887c7a7992107a49f6aba66c0e22eb2fd8d814c", "filename": "crates/hir_ty/src/tests/macros.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/macros.rs"}, {"sha": "fa68355aa84734d9b95dfaf72866c0bf6bc6f6cc", "filename": "crates/hir_ty/src/tests/method_resolution.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/method_resolution.rs"}, {"sha": "49538b572db3089cd3c33cb302deb6c65221ffac", "filename": "crates/hir_ty/src/tests/never_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fnever_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fnever_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fnever_type.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/never_type.rs"}, {"sha": "39fabf7eb553da78447cfd7ea5af7aed6543e5d7", "filename": "crates/hir_ty/src/tests/patterns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/patterns.rs"}, {"sha": "b9ab0f3576a9d3803e66b6bb0445c2ff33b039b9", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/regression.rs"}, {"sha": "59eb59d5fab036df05d68e98fdc919a910e52e6b", "filename": "crates/hir_ty/src/tests/simple.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/simple.rs"}, {"sha": "526e61cafb460df57245dfc5566f740cee682bf4", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/tests/traits.rs"}, {"sha": "2553237170da9a29cd5786132a08fb681ef21b9b", "filename": "crates/hir_ty/src/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/traits.rs"}, {"sha": "b3365341791f12377e24efa226ce03cd503978bf", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/traits/chalk.rs"}, {"sha": "fc0f9c20198c751efac1a88967011fe60cfa9446", "filename": "crates/hir_ty/src/traits/chalk/interner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/traits/chalk/interner.rs"}, {"sha": "fe62f3fa7cd955e2c19a41f45923c5a363c4296f", "filename": "crates/hir_ty/src/traits/chalk/mapping.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/traits/chalk/mapping.rs"}, {"sha": "db915625c2b3e1ebb5670672682f72b671eeea36", "filename": "crates/hir_ty/src/traits/chalk/tls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Ftls.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/traits/chalk/tls.rs"}, {"sha": "e3e2442680e8ec7946c19501c70e480fe40c482b", "filename": "crates/hir_ty/src/utils.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fhir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Futils.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_hir_ty/src/utils.rs"}, {"sha": "885212162f3b95694fc6109848d12fb8e12436b3", "filename": "crates/ide_db/Cargo.toml", "status": "renamed", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_ide_db\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"ide_db\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -20,13 +20,11 @@ once_cell = \"1.3.1\"\n either = \"1.5.3\"\n \n stdx = { path = \"../stdx\" }\n-\n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n base_db = { path = \"../base_db\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }\n-\n # ra_ide should depend only on the top-level `hir` package. if you need\n # something from some `hir_xxx` subpackage, reexport the API via `hir`.\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }", "previous_filename": "crates/ra_ide_db/Cargo.toml"}, {"sha": "8b4fd7ab84981f21b5ee7c93fc6cd54e1c401f1e", "filename": "crates/ide_db/src/change.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fchange.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/change.rs"}, {"sha": "7b5d6ac491bbdfeebdae6e56c977098772bc8450", "filename": "crates/ide_db/src/defs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/defs.rs"}, {"sha": "1d0c202915ec1d240f85ec8849ae738f11b4d6a0", "filename": "crates/ide_db/src/imports_locator.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fimports_locator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fimports_locator.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/imports_locator.rs"}, {"sha": "fd474cd0f4918c27c6dabc42281ff4cd81d2f46c", "filename": "crates/ide_db/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/lib.rs"}, {"sha": "a381f7fb8d5e91277cdbe22cfdfdda43f6bf3ca8", "filename": "crates/ide_db/src/line_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fline_index.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/line_index.rs"}, {"sha": "b9360bf12912f04cc3ce8d48d93425e97e4f55d3", "filename": "crates/ide_db/src/search.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/search.rs"}, {"sha": "f1590ec66326856c3ea2e9df385701f95e6e4173", "filename": "crates/ide_db/src/source_change.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsource_change.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/source_change.rs"}, {"sha": "654df898e93d76c22a4384009ac231f8821adff5", "filename": "crates/ide_db/src/symbol_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/symbol_index.rs"}, {"sha": "7af9f9d9bb7bdafcd852e474572a1aca06dcadd0", "filename": "crates/ide_db/src/wasm_shims.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fwasm_shims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fide_db%2Fsrc%2Fwasm_shims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fwasm_shims.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ide_db/src/wasm_shims.rs"}, {"sha": "19e7591f71c762c5748d6a4614db9eeefdba3a3e", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -19,6 +19,6 @@ syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n profile = { path = \"../profile\" }\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+ide_db = { path = \"../ide_db\" }\n+hir = { path = \"../hir\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "79574b9ac8add906e575a860353c68d0abc04f56", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -5,7 +5,7 @@ use std::mem;\n use algo::find_covering_element;\n use base_db::{FileId, FileRange};\n use hir::Semantics;\n-use ra_ide_db::{\n+use ide_db::{\n     source_change::{SourceChange, SourceFileEdit},\n     RootDatabase,\n };"}, {"sha": "f4f997d8e19c460da8c993a9f4d1d4471bd9919c", "filename": "crates/ra_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::defs::{classify_name_ref, Definition, NameRefClass};\n+use ide_db::defs::{classify_name_ref, Definition, NameRefClass};\n use syntax::{ast, AstNode, SyntaxKind, T};\n use test_utils::mark;\n "}, {"sha": "cce789972e54ac27b79dbdc94eb8dbdfec92a61e", "filename": "crates/ra_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -5,7 +5,7 @@ use hir::{\n     AsAssocItem, AssocItemContainer, ModPath, Module, ModuleDef, PathResolution, Semantics, Trait,\n     Type,\n };\n-use ra_ide_db::{imports_locator, RootDatabase};\n+use ide_db::{imports_locator, RootDatabase};\n use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, AstNode},"}, {"sha": "f690ec343bcac33b12ae8e76ca3daa3349c80c3e", "filename": "crates/ra_assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,5 +1,5 @@\n use hir::{AssocItem, MacroDef, ModuleDef, Name, PathResolution, ScopeDef, SemanticsScope};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name_ref, Definition, NameRefClass},\n     RootDatabase,\n };"}, {"sha": "4bcdae7ba0e498914acbf0e7dad4ea58549474fd", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,6 +1,6 @@\n use base_db::FileId;\n use hir::{EnumVariant, Module, ModuleDef, Name};\n-use ra_ide_db::{defs::Definition, search::Reference, RootDatabase};\n+use ide_db::{defs::Definition, search::Reference, RootDatabase};\n use rustc_hash::FxHashSet;\n use syntax::{\n     algo::find_node_at_offset,"}, {"sha": "3d9bdb2bf79dec3867c93490e82d487d1a3bb0ba", "filename": "crates/ra_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,8 +1,8 @@\n use std::iter;\n \n use hir::{Adt, HasSource, ModuleDef, Semantics};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use syntax::ast::{self, make, AstNode, MatchArm, NameOwner, Pat};\n use test_utils::mark;\n "}, {"sha": "7f04b95725a8b3622463710d61cd7b50cf9661af", "filename": "crates/ra_assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::ast::{self, AstNode, NameOwner};\n use test_utils::mark;\n "}, {"sha": "2b52b333b885bdd45df3340593f8cd2b7de36747", "filename": "crates/ra_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::defs::Definition;\n+use ide_db::defs::Definition;\n use syntax::{\n     ast::{self, AstNode, AstToken},\n     TextRange,"}, {"sha": "527f457a79384e8d365040a65d64f4fcd4b55f11", "filename": "crates/ra_assists/src/handlers/reorder_fields.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -2,7 +2,7 @@ use itertools::Itertools;\n use rustc_hash::FxHashMap;\n \n use hir::{Adt, ModuleDef, PathResolution, Semantics, Struct};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{algo, ast, match_ast, AstNode, SyntaxKind, SyntaxKind::*, SyntaxNode};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};"}, {"sha": "f0cf35caf4619667356635abf69b5fa960bda86f", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -19,7 +19,7 @@ pub mod ast_transform;\n \n use base_db::FileRange;\n use hir::Semantics;\n-use ra_ide_db::{source_change::SourceChange, RootDatabase};\n+use ide_db::{source_change::SourceChange, RootDatabase};\n use syntax::TextRange;\n \n pub(crate) use crate::assist_context::{AssistContext, Assists};"}, {"sha": "ba1fb543b879df9f47b8ae20eacc0d7702e8b794", "filename": "crates/ra_assists/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -2,7 +2,7 @@ mod generated;\n \n use base_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::TextRange;\n use test_utils::{assert_eq_text, extract_offset, extract_range};\n "}, {"sha": "84ccacafe37f914eb6134573dfd2a6114a2ad2c4", "filename": "crates/ra_assists/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -4,8 +4,8 @@ pub(crate) mod insert_use;\n use std::{iter, ops};\n \n use hir::{Adt, Crate, Enum, ScopeDef, Semantics, Trait, Type};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, make, NameOwner},"}, {"sha": "8519e9ccaec7a4a9021b854d33c4e7f5d075ffa5", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -24,16 +24,16 @@ stdx = { path = \"../stdx\" }\n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n+ide_db = { path = \"../ide_db\" }\n cfg = { path = \"../cfg\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }\n ra_assists = { path = \"../ra_assists\" }\n-ra_ssr = { path = \"../ra_ssr\" }\n+ssr = { path = \"../ssr\" }\n \n # ra_ide should depend only on the top-level `hir` package. if you need\n # something from some `hir_xxx` subpackage, reexport the API via `hir`.\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+hir = { path = \"../hir\" }\n \n [dev-dependencies]\n expect = { path = \"../expect\" }"}, {"sha": "58e26b94ca7c4b45afb3dd24de3f367db8cacd34", "filename": "crates/ra_ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -3,7 +3,7 @@\n use indexmap::IndexMap;\n \n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{ast, match_ast, AstNode, TextRange};\n \n use crate::{"}, {"sha": "86abd2d8cec2beeaeac323cf8bee36b9d993c892", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n use either::Either;\n use hir::{Docs, HirDisplay, Semantics, Type};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use stdx::format_to;\n use syntax::{\n     ast::{self, ArgListOwner},"}, {"sha": "7fb4d687e1c16b35cfd0ff6ff4fa311719a265ea", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -19,7 +19,7 @@ mod complete_postfix;\n mod complete_macro_in_item_position;\n mod complete_trait_impl;\n \n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n \n use crate::{\n     completion::{"}, {"sha": "047ecd9d771738e2c036d776aeb366f45863eef2", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -2,7 +2,7 @@\n \n use base_db::SourceDatabase;\n use hir::{Semantics, SemanticsScope, Type};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::{find_covering_element, find_node_at_offset},\n     ast, match_ast, AstNode, NodeOrToken,"}, {"sha": "a3ec98178a10a6623f2a4fdbcbdcc00564157985", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -8,8 +8,8 @@ use std::cell::RefCell;\n \n use base_db::SourceDatabase;\n use hir::{diagnostics::DiagnosticSinkBuilder, Semantics};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstNode},\n     SyntaxNode, TextRange, T,"}, {"sha": "85b46c9958a17eaa86f1dd27d8a5df4dfc017a83", "filename": "crates/ra_ide/src/diagnostics/diagnostics_with_fix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -8,7 +8,7 @@ use hir::{\n     diagnostics::{Diagnostic, MissingFields, MissingOkInTailExpr, NoSuchField, UnresolvedModule},\n     HasSource, HirDisplay, Semantics, VariantDef,\n };\n-use ra_ide_db::{\n+use ide_db::{\n     source_change::{FileSystemEdit, SourceFileEdit},\n     RootDatabase,\n };"}, {"sha": "e77106177267785d7d26cd9b2bf06b028daf876a", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -3,7 +3,7 @@\n use base_db::{FileId, SourceDatabase};\n use either::Either;\n use hir::{original_range, AssocItem, FieldSource, HasSource, InFile, ModuleSource};\n-use ra_ide_db::{defs::Definition, RootDatabase};\n+use ide_db::{defs::Definition, RootDatabase};\n use syntax::{\n     ast::{self, DocCommentsOwner, NameOwner},\n     match_ast, AstNode, SmolStr,"}, {"sha": "31455709d7d8ad5bbccde3ddfe970e5d9431caa4", "filename": "crates/ra_ide/src/expand_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,5 +1,5 @@\n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::{find_node_at_offset, SyntaxRewriter},\n     ast, AstNode, NodeOrToken, SyntaxKind,"}, {"sha": "34563a0267f6acd64edce4b35aa6d4315b75e9e8", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,7 +1,7 @@\n use std::iter::successors;\n \n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::{self, find_covering_element, skip_trivia_token},\n     ast::{self, AstNode, AstToken},"}, {"sha": "15e9b7fad825e9298ad80dca3a95a5c483fed6d5", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,5 +1,5 @@\n use hir::Semantics;\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref},\n     symbol_index, RootDatabase,\n };"}, {"sha": "f503f4ec5fe4b0c14689796bb3a818bbcf5bac99", "filename": "crates/ra_ide/src/goto_implementation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,5 +1,5 @@\n use hir::{Crate, ImplDef, Semantics};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{algo::find_node_at_offset, ast, AstNode};\n \n use crate::{display::ToNav, FilePosition, NavigationTarget, RangeInfo};"}, {"sha": "4a151b1506401992d2fb1aa3f6d2a656d7b3cf88", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,4 +1,4 @@\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n \n use crate::{display::ToNav, FilePosition, NavigationTarget, RangeInfo};"}, {"sha": "331aa4db0c736bbceec74d136710be40795d4612", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -3,11 +3,11 @@ use hir::{\n     Adt, AsAssocItem, AssocItemContainer, Documentation, FieldSource, HasSource, HirDisplay,\n     Module, ModuleDef, ModuleSource, Semantics,\n };\n-use itertools::Itertools;\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n     RootDatabase,\n };\n+use itertools::Itertools;\n use stdx::format_to;\n use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n use test_utils::mark;"}, {"sha": "002adf9159f89bd8ef9de0269d56bd215d7c628e", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,5 +1,5 @@\n use hir::{Adt, Callable, HirDisplay, Semantics, Type};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use stdx::to_lower_snake_case;\n use syntax::{\n     ast::{self, ArgListOwner, AstNode},"}, {"sha": "bbc9e4b8af2764353c8d78832f7db3cd6d4926bb", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -3,7 +3,7 @@\n //! Strings, suitable for displaying to the human.\n //!\n //! What powers this API are the `RootDatabase` struct, which defines a `salsa`\n-//! database, and the `ra_hir` crate, where majority of the analysis happens.\n+//! database, and the `hir` crate, where majority of the analysis happens.\n //! However, IDE specific bits of the analysis (most notably completion) happen\n //! in this crate.\n \n@@ -39,7 +39,6 @@ mod matching_brace;\n mod parent_module;\n mod references;\n mod runnables;\n-mod ssr;\n mod status;\n mod syntax_highlighting;\n mod syntax_tree;\n@@ -52,7 +51,7 @@ use base_db::{\n     CheckCanceled, Env, FileLoader, FileSet, SourceDatabase, VfsPath,\n };\n use cfg::CfgOptions;\n-use ra_ide_db::{\n+use ide_db::{\n     symbol_index::{self, FileSymbol},\n     LineIndexDatabase,\n };\n@@ -86,16 +85,16 @@ pub use base_db::{\n     SourceRootId,\n };\n pub use hir::{Documentation, Semantics};\n-pub use ra_assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n-pub use ra_ide_db::{\n+pub use ide_db::{\n     change::AnalysisChange,\n     line_index::{LineCol, LineIndex},\n     search::SearchScope,\n     source_change::{FileSystemEdit, SourceChange, SourceFileEdit},\n     symbol_index::Query,\n     RootDatabase,\n };\n-pub use ra_ssr::SsrError;\n+pub use ra_assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n+pub use ssr::SsrError;\n pub use text_edit::{Indel, TextEdit};\n \n pub type Cancelable<T> = Result<T, Canceled>;\n@@ -515,20 +514,23 @@ impl Analysis {\n         &self,\n         query: &str,\n         parse_only: bool,\n-        position: FilePosition,\n+        resolve_context: FilePosition,\n         selections: Vec<FileRange>,\n     ) -> Cancelable<Result<SourceChange, SsrError>> {\n         self.with_db(|db| {\n-            let edits = ssr::parse_search_replace(query, parse_only, db, position, selections)?;\n+            let rule: ssr::SsrRule = query.parse()?;\n+            let mut match_finder = ssr::MatchFinder::in_context(db, resolve_context, selections);\n+            match_finder.add_rule(rule)?;\n+            let edits = if parse_only { Vec::new() } else { match_finder.edits() };\n             Ok(SourceChange::from(edits))\n         })\n     }\n \n     /// Performs an operation on that may be Canceled.\n-    fn with_db<F: FnOnce(&RootDatabase) -> T + std::panic::UnwindSafe, T>(\n-        &self,\n-        f: F,\n-    ) -> Cancelable<T> {\n+    fn with_db<F, T>(&self, f: F) -> Cancelable<T>\n+    where\n+        F: FnOnce(&RootDatabase) -> T + std::panic::UnwindSafe,\n+    {\n         self.db.catch_canceled(f)\n     }\n }"}, {"sha": "59ed2967cf2ac4c049e70f1e7b6768d457db1216", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,6 +1,6 @@\n use base_db::{CrateId, FileId, FilePosition};\n use hir::Semantics;\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstNode},"}, {"sha": "0a76ec6b4306fa9d8ef7fb06d4738400be77a8ec", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -12,7 +12,7 @@\n mod rename;\n \n use hir::Semantics;\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n     search::SearchScope,\n     RootDatabase,\n@@ -27,7 +27,7 @@ use crate::{display::TryToNav, FilePosition, FileRange, NavigationTarget, RangeI\n \n pub(crate) use self::rename::rename;\n \n-pub use ra_ide_db::search::{Reference, ReferenceAccess, ReferenceKind};\n+pub use ide_db::search::{Reference, ReferenceAccess, ReferenceKind};\n \n #[derive(Debug, Clone)]\n pub struct ReferenceSearchResult {"}, {"sha": "d73dc9cd00b0ae2b56834d071054d35729603005", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -2,7 +2,7 @@\n \n use base_db::SourceDatabaseExt;\n use hir::{Module, ModuleDef, ModuleSource, Semantics};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,\n };"}, {"sha": "c3e07c8dec731f8b2ca7448a4f345bd58f636b6a", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -2,8 +2,8 @@ use std::fmt;\n \n use cfg::CfgExpr;\n use hir::{AsAssocItem, Attrs, HirFileId, InFile, Semantics};\n+use ide_db::RootDatabase;\n use itertools::Itertools;\n-use ra_ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstNode, AttrsOwner, DocCommentsOwner, ModuleItemOwner, NameOwner},\n     match_ast, SyntaxNode,"}, {"sha": "97b82b70e5b4db8da5b025bbad74fd677104438a", "filename": "crates/ra_ide/src/ssr.rs", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,72 +0,0 @@\n-use base_db::{FilePosition, FileRange};\n-use ra_ide_db::RootDatabase;\n-\n-use crate::SourceFileEdit;\n-use ra_ssr::{MatchFinder, SsrError, SsrRule};\n-\n-// Feature: Structural Search and Replace\n-//\n-// Search and replace with named wildcards that will match any expression, type, path, pattern or item.\n-// The syntax for a structural search replace command is `<search_pattern> ==>> <replace_pattern>`.\n-// A `$<name>` placeholder in the search pattern will match any AST node and `$<name>` will reference it in the replacement.\n-// Within a macro call, a placeholder will match up until whatever token follows the placeholder.\n-//\n-// All paths in both the search pattern and the replacement template must resolve in the context\n-// in which this command is invoked. Paths in the search pattern will then match the code if they\n-// resolve to the same item, even if they're written differently. For example if we invoke the\n-// command in the module `foo` with a pattern of `Bar`, then code in the parent module that refers\n-// to `foo::Bar` will match.\n-//\n-// Paths in the replacement template will be rendered appropriately for the context in which the\n-// replacement occurs. For example if our replacement template is `foo::Bar` and we match some\n-// code in the `foo` module, we'll insert just `Bar`.\n-//\n-// Inherent method calls should generally be written in UFCS form. e.g. `foo::Bar::baz($s, $a)` will\n-// match `$s.baz($a)`, provided the method call `baz` resolves to the method `foo::Bar::baz`.\n-//\n-// The scope of the search / replace will be restricted to the current selection if any, otherwise\n-// it will apply to the whole workspace.\n-//\n-// Placeholders may be given constraints by writing them as `${<name>:<constraint1>:<constraint2>...}`.\n-//\n-// Supported constraints:\n-//\n-// |===\n-// | Constraint    | Restricts placeholder\n-//\n-// | kind(literal) | Is a literal (e.g. `42` or `\"forty two\"`)\n-// | not(a)        | Negates the constraint `a`\n-// |===\n-//\n-// Available via the command `rust-analyzer.ssr`.\n-//\n-// ```rust\n-// // Using structural search replace command [foo($a, $b) ==>> ($a).foo($b)]\n-//\n-// // BEFORE\n-// String::from(foo(y + 5, z))\n-//\n-// // AFTER\n-// String::from((y + 5).foo(z))\n-// ```\n-//\n-// |===\n-// | Editor  | Action Name\n-//\n-// | VS Code | **Rust Analyzer: Structural Search Replace**\n-// |===\n-pub fn parse_search_replace(\n-    rule: &str,\n-    parse_only: bool,\n-    db: &RootDatabase,\n-    resolve_context: FilePosition,\n-    selections: Vec<FileRange>,\n-) -> Result<Vec<SourceFileEdit>, SsrError> {\n-    let rule: SsrRule = rule.parse()?;\n-    let mut match_finder = MatchFinder::in_context(db, resolve_context, selections);\n-    match_finder.add_rule(rule)?;\n-    if parse_only {\n-        return Ok(Vec::new());\n-    }\n-    Ok(match_finder.edits())\n-}"}, {"sha": "c2370818180798cc28513e643a1fa2b233055121", "filename": "crates/ra_ide/src/status.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fstatus.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -5,11 +5,11 @@ use base_db::{\n     FileTextQuery, SourceRootId,\n };\n use hir::MacroFile;\n-use profile::{memory_usage, Bytes};\n-use ra_ide_db::{\n+use ide_db::{\n     symbol_index::{LibrarySymbolsQuery, SymbolIndex},\n     RootDatabase,\n };\n+use profile::{memory_usage, Bytes};\n use rustc_hash::FxHashMap;\n use syntax::{ast, Parse, SyntaxNode};\n "}, {"sha": "5d7c7e8d02a20586675ed2f1478a336a38e7298c", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -5,7 +5,7 @@ mod injection;\n mod tests;\n \n use hir::{Name, Semantics, VariantDef};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,\n };"}, {"sha": "f8004495960c83e3a47dda5fac2bf41642543b3b", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,5 +1,5 @@\n use base_db::{FileId, SourceDatabase};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     algo, AstNode, NodeOrToken, SourceFile,\n     SyntaxKind::{RAW_STRING, STRING},"}, {"sha": "899ce5f26527058c5e97473c7dfccd63f7fc2467", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -16,7 +16,7 @@\n mod on_enter;\n \n use base_db::{FilePosition, SourceDatabase};\n-use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n+use ide_db::{source_change::SourceFileEdit, RootDatabase};\n use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, edit::IndentLevel, AstToken},"}, {"sha": "f7d46146c50923b044e8f797afb00c3c9108c1d3", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -2,7 +2,7 @@\n //! comments, but should handle indent some time in the future as well.\n \n use base_db::{FilePosition, SourceDatabase};\n-use ra_ide_db::RootDatabase;\n+use ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstToken},\n     AstNode, SmolStr, SourceFile,"}, {"sha": "749cf648c6f7d25b91ed0f2030955c4e8dfda438", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -47,11 +47,11 @@ toolchain = { path = \"../toolchain\" }\n \n # This should only be used in CLI\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n-ra_ssr = { path = \"../ra_ssr\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n+ide_db = { path = \"../ide_db\" }\n+ssr = { path = \"../ssr\" }\n+hir = { path = \"../hir\" }\n hir_def = { path = \"../hir_def\" }\n-hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }\n+hir_ty = { path = \"../hir_ty\" }\n proc_macro_srv = { path = \"../proc_macro_srv\" }\n \n [target.'cfg(windows)'.dependencies]"}, {"sha": "0bc92431a9a0b7d69c15f11478fed5e56e61cfc9", "filename": "crates/rust-analyzer/src/bin/args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -7,8 +7,8 @@ use std::{env, fmt::Write, path::PathBuf};\n \n use anyhow::{bail, Result};\n use pico_args::Arguments;\n-use ra_ssr::{SsrPattern, SsrRule};\n use rust_analyzer::cli::{AnalysisStatsCmd, BenchCmd, BenchWhat, Position, Verbosity};\n+use ssr::{SsrPattern, SsrRule};\n use vfs::AbsPathBuf;\n \n pub(crate) struct Args {"}, {"sha": "b237a94d113ad7164a6d6ca3294522667c783963", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -13,11 +13,13 @@ use anyhow::Result;\n use ra_ide::Analysis;\n use syntax::{AstNode, SourceFile};\n \n-pub use analysis_bench::{BenchCmd, BenchWhat, Position};\n-pub use analysis_stats::AnalysisStatsCmd;\n-pub use diagnostics::diagnostics;\n-pub use load_cargo::load_cargo;\n-pub use ssr::{apply_ssr_rules, search_for_patterns};\n+pub use self::{\n+    analysis_bench::{BenchCmd, BenchWhat, Position},\n+    analysis_stats::AnalysisStatsCmd,\n+    diagnostics::diagnostics,\n+    load_cargo::load_cargo,\n+    ssr::{apply_ssr_rules, search_for_patterns},\n+};\n \n #[derive(Clone, Copy)]\n pub enum Verbosity {"}, {"sha": "c11e109437191c97884162ca281ab5bda42d49e2", "filename": "crates/rust-analyzer/src/cli/ssr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,7 +1,7 @@\n //! Applies structured search replace rules from the command line.\n \n use crate::cli::{load_cargo::load_cargo, Result};\n-use ra_ssr::{MatchFinder, SsrPattern, SsrRule};\n+use ssr::{MatchFinder, SsrPattern, SsrRule};\n \n pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n     use base_db::SourceDatabaseExt;\n@@ -27,7 +27,7 @@ pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n /// for much else.\n pub fn search_for_patterns(patterns: Vec<SsrPattern>, debug_snippet: Option<String>) -> Result<()> {\n     use base_db::SourceDatabaseExt;\n-    use ra_ide_db::symbol_index::SymbolsDatabase;\n+    use ide_db::symbol_index::SymbolsDatabase;\n     let (host, _vfs) = load_cargo(&std::env::current_dir()?, true, true)?;\n     let db = host.raw_database();\n     let mut match_finder = MatchFinder::at_first_file(db)?;"}, {"sha": "cd05eeecc89df21946564cec7792e70e6307c10d", "filename": "crates/ssr/Cargo.toml", "status": "renamed", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2FCargo.toml?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -1,22 +1,23 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_ssr\"\n+name = \"ssr\"\n version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-license = \"MIT OR Apache-2.0\"\n description = \"Structural search and replace of Rust code\"\n+license = \"MIT OR Apache-2.0\"\n repository = \"https://github.com/rust-analyzer/rust-analyzer\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n \n [dependencies]\n+rustc-hash = \"1.1.0\"\n+\n text_edit = { path = \"../text_edit\" }\n syntax = { path = \"../syntax\" }\n base_db = { path = \"../base_db\" }\n-ra_ide_db = { path = \"../ra_ide_db\" }\n-hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n-rustc-hash = \"1.1.0\"\n+ide_db = { path = \"../ide_db\" }\n+hir = { path = \"../hir\" }\n test_utils = { path = \"../test_utils\" }\n \n [dev-dependencies]", "previous_filename": "crates/ra_ssr/Cargo.toml"}, {"sha": "c02bacae6bfe68f2ed94a114011ecb805006844e", "filename": "crates/ssr/src/errors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Ferrors.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ssr/src/errors.rs"}, {"sha": "292bd5b9a73a6ffc25c9c83ae7157ddf6f07b8b2", "filename": "crates/ssr/src/lib.rs", "status": "renamed", "additions": 57, "deletions": 5, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Flib.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -3,6 +3,58 @@\n //! Allows searching the AST for code that matches one or more patterns and then replacing that code\n //! based on a template.\n \n+// Feature: Structural Search and Replace\n+//\n+// Search and replace with named wildcards that will match any expression, type, path, pattern or item.\n+// The syntax for a structural search replace command is `<search_pattern> ==>> <replace_pattern>`.\n+// A `$<name>` placeholder in the search pattern will match any AST node and `$<name>` will reference it in the replacement.\n+// Within a macro call, a placeholder will match up until whatever token follows the placeholder.\n+//\n+// All paths in both the search pattern and the replacement template must resolve in the context\n+// in which this command is invoked. Paths in the search pattern will then match the code if they\n+// resolve to the same item, even if they're written differently. For example if we invoke the\n+// command in the module `foo` with a pattern of `Bar`, then code in the parent module that refers\n+// to `foo::Bar` will match.\n+//\n+// Paths in the replacement template will be rendered appropriately for the context in which the\n+// replacement occurs. For example if our replacement template is `foo::Bar` and we match some\n+// code in the `foo` module, we'll insert just `Bar`.\n+//\n+// Inherent method calls should generally be written in UFCS form. e.g. `foo::Bar::baz($s, $a)` will\n+// match `$s.baz($a)`, provided the method call `baz` resolves to the method `foo::Bar::baz`.\n+//\n+// The scope of the search / replace will be restricted to the current selection if any, otherwise\n+// it will apply to the whole workspace.\n+//\n+// Placeholders may be given constraints by writing them as `${<name>:<constraint1>:<constraint2>...}`.\n+//\n+// Supported constraints:\n+//\n+// |===\n+// | Constraint    | Restricts placeholder\n+//\n+// | kind(literal) | Is a literal (e.g. `42` or `\"forty two\"`)\n+// | not(a)        | Negates the constraint `a`\n+// |===\n+//\n+// Available via the command `rust-analyzer.ssr`.\n+//\n+// ```rust\n+// // Using structural search replace command [foo($a, $b) ==>> ($a).foo($b)]\n+//\n+// // BEFORE\n+// String::from(foo(y + 5, z))\n+//\n+// // AFTER\n+// String::from((y + 5).foo(z))\n+// ```\n+//\n+// |===\n+// | Editor  | Action Name\n+//\n+// | VS Code | **Rust Analyzer: Structural Search Replace**\n+// |===\n+\n mod matching;\n mod nester;\n mod parsing;\n@@ -20,7 +72,7 @@ pub use crate::matching::Match;\n use crate::matching::MatchFailureReason;\n use base_db::{FileId, FilePosition, FileRange};\n use hir::Semantics;\n-use ra_ide_db::source_change::SourceFileEdit;\n+use ide_db::source_change::SourceFileEdit;\n use resolving::ResolvedRule;\n use rustc_hash::FxHashMap;\n use syntax::{ast, AstNode, SyntaxNode, TextRange};\n@@ -49,7 +101,7 @@ pub struct SsrMatches {\n /// Searches a crate for pattern matches and possibly replaces them with something else.\n pub struct MatchFinder<'db> {\n     /// Our source of information about the user's code.\n-    sema: Semantics<'db, ra_ide_db::RootDatabase>,\n+    sema: Semantics<'db, ide_db::RootDatabase>,\n     rules: Vec<ResolvedRule>,\n     resolution_scope: resolving::ResolutionScope<'db>,\n     restrict_ranges: Vec<FileRange>,\n@@ -59,7 +111,7 @@ impl<'db> MatchFinder<'db> {\n     /// Constructs a new instance where names will be looked up as if they appeared at\n     /// `lookup_context`.\n     pub fn in_context(\n-        db: &'db ra_ide_db::RootDatabase,\n+        db: &'db ide_db::RootDatabase,\n         lookup_context: FilePosition,\n         mut restrict_ranges: Vec<FileRange>,\n     ) -> MatchFinder<'db> {\n@@ -70,9 +122,9 @@ impl<'db> MatchFinder<'db> {\n     }\n \n     /// Constructs an instance using the start of the first file in `db` as the lookup context.\n-    pub fn at_first_file(db: &'db ra_ide_db::RootDatabase) -> Result<MatchFinder<'db>, SsrError> {\n+    pub fn at_first_file(db: &'db ide_db::RootDatabase) -> Result<MatchFinder<'db>, SsrError> {\n         use base_db::SourceDatabaseExt;\n-        use ra_ide_db::symbol_index::SymbolsDatabase;\n+        use ide_db::symbol_index::SymbolsDatabase;\n         if let Some(first_file_id) = db\n             .local_roots()\n             .iter()", "previous_filename": "crates/ra_ssr/src/lib.rs"}, {"sha": "ffc7202ae560fb09061259e57c53291a568ca39b", "filename": "crates/ssr/src/matching.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fmatching.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -92,7 +92,7 @@ pub(crate) fn get_match(\n     rule: &ResolvedRule,\n     code: &SyntaxNode,\n     restrict_range: &Option<FileRange>,\n-    sema: &Semantics<ra_ide_db::RootDatabase>,\n+    sema: &Semantics<ide_db::RootDatabase>,\n ) -> Result<Match, MatchFailed> {\n     record_match_fails_reasons_scope(debug_active, || {\n         Matcher::try_match(rule, code, restrict_range, sema)\n@@ -101,7 +101,7 @@ pub(crate) fn get_match(\n \n /// Checks if our search pattern matches a particular node of the AST.\n struct Matcher<'db, 'sema> {\n-    sema: &'sema Semantics<'db, ra_ide_db::RootDatabase>,\n+    sema: &'sema Semantics<'db, ide_db::RootDatabase>,\n     /// If any placeholders come from anywhere outside of this range, then the match will be\n     /// rejected.\n     restrict_range: Option<FileRange>,\n@@ -123,7 +123,7 @@ impl<'db, 'sema> Matcher<'db, 'sema> {\n         rule: &ResolvedRule,\n         code: &SyntaxNode,\n         restrict_range: &Option<FileRange>,\n-        sema: &'sema Semantics<'db, ra_ide_db::RootDatabase>,\n+        sema: &'sema Semantics<'db, ide_db::RootDatabase>,\n     ) -> Result<Match, MatchFailed> {\n         let match_state = Matcher { sema, restrict_range: restrict_range.clone(), rule };\n         // First pass at matching, where we check that node types and idents match.\n@@ -606,7 +606,7 @@ impl Match {\n     fn render_template_paths(\n         &mut self,\n         template: &ResolvedPattern,\n-        sema: &Semantics<ra_ide_db::RootDatabase>,\n+        sema: &Semantics<ide_db::RootDatabase>,\n     ) -> Result<(), MatchFailed> {\n         let module = sema\n             .scope(&self.matched_node)", "previous_filename": "crates/ra_ssr/src/matching.rs"}, {"sha": "6ac355dfc22b47db29349f465f97391daaf60f35", "filename": "crates/ssr/src/nester.rs", "status": "renamed", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fnester.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fnester.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fnester.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -13,7 +13,7 @@ use syntax::SyntaxNode;\n \n pub(crate) fn nest_and_remove_collisions(\n     mut matches: Vec<Match>,\n-    sema: &hir::Semantics<ra_ide_db::RootDatabase>,\n+    sema: &hir::Semantics<ide_db::RootDatabase>,\n ) -> SsrMatches {\n     // We sort the matches by depth then by rule index. Sorting by depth means that by the time we\n     // see a match, any parent matches or conflicting matches will have already been seen. Sorting\n@@ -36,7 +36,7 @@ impl MatchCollector {\n     /// Attempts to add `m` to matches. If it conflicts with an existing match, it is discarded. If\n     /// it is entirely within the a placeholder of an existing match, then it is added as a child\n     /// match of the existing match.\n-    fn add_match(&mut self, m: Match, sema: &hir::Semantics<ra_ide_db::RootDatabase>) {\n+    fn add_match(&mut self, m: Match, sema: &hir::Semantics<ide_db::RootDatabase>) {\n         let matched_node = m.matched_node.clone();\n         if let Some(existing) = self.matches_by_node.get_mut(&matched_node) {\n             try_add_sub_match(m, existing, sema);\n@@ -53,11 +53,7 @@ impl MatchCollector {\n }\n \n /// Attempts to add `m` as a sub-match of `existing`.\n-fn try_add_sub_match(\n-    m: Match,\n-    existing: &mut Match,\n-    sema: &hir::Semantics<ra_ide_db::RootDatabase>,\n-) {\n+fn try_add_sub_match(m: Match, existing: &mut Match, sema: &hir::Semantics<ide_db::RootDatabase>) {\n     for p in existing.placeholder_values.values_mut() {\n         // Note, no need to check if p.range.file is equal to m.range.file, since we\n         // already know we're within `existing`.", "previous_filename": "crates/ra_ssr/src/nester.rs"}, {"sha": "9570e96e36eee441bb29da6930e66a1d2cb0f7fc", "filename": "crates/ssr/src/parsing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fparsing.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ssr/src/parsing.rs"}, {"sha": "8f8fe6149a57d45dfe8e57c28f1041721d52be8e", "filename": "crates/ssr/src/replacing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Freplacing.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "previous_filename": "crates/ra_ssr/src/replacing.rs"}, {"sha": "020fd799413822d22261fb20d2605d4019e5e32d", "filename": "crates/ssr/src/resolving.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fresolving.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -187,7 +187,7 @@ impl Resolver<'_, '_> {\n \n impl<'db> ResolutionScope<'db> {\n     pub(crate) fn new(\n-        sema: &hir::Semantics<'db, ra_ide_db::RootDatabase>,\n+        sema: &hir::Semantics<'db, ide_db::RootDatabase>,\n         resolve_context: FilePosition,\n     ) -> ResolutionScope<'db> {\n         use syntax::ast::AstNode;", "previous_filename": "crates/ra_ssr/src/resolving.rs"}, {"sha": "8509cfa4dea0d0ec07e48ad1f845ba0b27cf9138", "filename": "crates/ssr/src/search.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fsearch.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -6,7 +6,7 @@ use crate::{\n     Match, MatchFinder,\n };\n use base_db::{FileId, FileRange};\n-use ra_ide_db::{\n+use ide_db::{\n     defs::Definition,\n     search::{Reference, SearchScope},\n };\n@@ -146,7 +146,7 @@ impl<'db> MatchFinder<'db> {\n         if self.restrict_ranges.is_empty() {\n             // Unrestricted search.\n             use base_db::SourceDatabaseExt;\n-            use ra_ide_db::symbol_index::SymbolsDatabase;\n+            use ide_db::symbol_index::SymbolsDatabase;\n             for &root in self.sema.db.local_roots().iter() {\n                 let sr = self.sema.db.source_root(root);\n                 for file_id in sr.iter() {", "previous_filename": "crates/ra_ssr/src/search.rs"}, {"sha": "0d0a0009064213db0c4b5e48d1ee8b783bc14ac3", "filename": "crates/ssr/src/tests.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates%2Fssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Ftests.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -61,13 +61,13 @@ fn parser_undefined_placeholder_in_replacement() {\n \n /// `code` may optionally contain a cursor marker `<|>`. If it doesn't, then the position will be\n /// the start of the file. If there's a second cursor marker, then we'll return a single range.\n-pub(crate) fn single_file(code: &str) -> (ra_ide_db::RootDatabase, FilePosition, Vec<FileRange>) {\n+pub(crate) fn single_file(code: &str) -> (ide_db::RootDatabase, FilePosition, Vec<FileRange>) {\n     use base_db::fixture::WithFixture;\n-    use ra_ide_db::symbol_index::SymbolsDatabase;\n+    use ide_db::symbol_index::SymbolsDatabase;\n     let (mut db, file_id, range_or_offset) = if code.contains(test_utils::CURSOR_MARKER) {\n-        ra_ide_db::RootDatabase::with_range_or_offset(code)\n+        ide_db::RootDatabase::with_range_or_offset(code)\n     } else {\n-        let (db, file_id) = ra_ide_db::RootDatabase::with_single_file(code);\n+        let (db, file_id) = ide_db::RootDatabase::with_single_file(code);\n         (db, file_id, RangeOrOffset::Offset(0.into()))\n     };\n     let selections;", "previous_filename": "crates/ra_ssr/src/tests.rs"}, {"sha": "04bebbfca5c9a09b8bd854186e9dd33ae46c3279", "filename": "docs/dev/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -148,14 +148,14 @@ Internal representations are lowered to LSP in the `rust-analyzer` crate (the on\n \n ## IDE/Compiler split\n \n-There's a semi-hard split between \"compiler\" and \"IDE\", at the `ra_hir` crate.\n+There's a semi-hard split between \"compiler\" and \"IDE\", at the `hir` crate.\n Compiler derives new facts about source code.\n It explicitly acknowledges that not all info is available (i.e. you can't look at types during name resolution).\n \n IDE assumes that all information is available at all times.\n \n-IDE should use only types from `ra_hir`, and should not depend on the underling compiler types.\n-`ra_hir` is a facade.\n+IDE should use only types from `hir`, and should not depend on the underling compiler types.\n+`hir` is a facade.\n \n ## IDE API\n "}, {"sha": "0ffe61026ac0aa73d0baef68136745aa5ff550fd", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -102,7 +102,7 @@ defines most of the \"input\" queries: facts supplied by the client of the\n analyzer. Reading the docs of the `base_db::input` module should be useful:\n everything else is strictly derived from those inputs.\n \n-### `crates/ra_hir*` crates\n+### `crates/hir*` crates\n \n HIR provides high-level \"object oriented\" access to Rust code.\n \n@@ -113,10 +113,10 @@ is responsible for guessing a HIR for a particular source position.\n \n Underneath, HIR works on top of salsa, using a `HirDatabase` trait.\n \n-`ra_hir_xxx` crates have a strong ECS flavor, in that they work with raw ids and\n+`hir_xxx` crates have a strong ECS flavor, in that they work with raw ids and\n directly query the database.\n \n-The top-level `ra_hir` fa\u00e7ade crate wraps ids into a more OO-flavored API.\n+The top-level `hir` fa\u00e7ade crate wraps ids into a more OO-flavored API.\n \n ### `crates/ra_ide`\n "}, {"sha": "29d84bf3f6a4c93753a6e911a8a878bc3e969c49", "filename": "docs/dev/guide.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/docs%2Fdev%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/docs%2Fdev%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fguide.md?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -275,16 +275,16 @@ several times, with different sets of `cfg`s enabled. The IDE-specific task of\n mapping source code position into a semantic model is inherently imprecise for\n this reason, and is handled by the [`source_binder`].\n \n-[`source_binder`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/source_binder.rs\n+[`source_binder`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/source_binder.rs\n \n The semantic interface is declared in the [`code_model_api`] module. Each entity is\n identified by an integer ID and has a bunch of methods which take a salsa database\n as an argument and returns other entities (which are also IDs). Internally, these\n methods invoke various queries on the database to build the model on demand.\n Here's [the list of queries].\n \n-[`code_model_api`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/code_model_api.rs\n-[the list of queries]: https://github.com/rust-analyzer/rust-analyzer/blob/7e84440e25e19529e4ff8a66e521d1b06349c6ec/crates/ra_hir/src/db.rs#L20-L106\n+[`code_model_api`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/code_model_api.rs\n+[the list of queries]: https://github.com/rust-analyzer/rust-analyzer/blob/7e84440e25e19529e4ff8a66e521d1b06349c6ec/crates/hir/src/db.rs#L20-L106\n \n The first step of building the model is parsing the source code.\n \n@@ -341,7 +341,7 @@ The algorithm for building a tree of modules is to start with a crate root\n declarations and recursively process child modules. This is handled by the\n [`module_tree_query`], with two slight variations.\n \n-[`module_tree_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/module_tree.rs#L116-L123\n+[`module_tree_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/module_tree.rs#L116-L123\n \n First, rust-analyzer builds a module tree for all crates in a source root\n simultaneously. The main reason for this is historical (`module_tree` predates\n@@ -364,7 +364,7 @@ the same, we don't have to re-execute [`module_tree_query`]. In fact, we only\n need to re-execute it when we add/remove new files or when we change mod\n declarations.\n \n-[`submodules_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/module_tree.rs#L41\n+[`submodules_query`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/module_tree.rs#L41\n \n We store the resulting modules in a `Vec`-based indexed arena. The indices in\n the arena becomes module IDs. And this brings us to the next topic:\n@@ -393,7 +393,7 @@ database we use includes a couple of [interners]. How to \"garbage collect\"\n unused locations is an open question.\n \n [`LocationInterner`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/base_db/src/loc2id.rs#L65-L71\n-[interners]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/db.rs#L22-L23\n+[interners]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/db.rs#L22-L23\n \n For example, we use `LocationInterner` to assign IDs to definitions of functions,\n structs, enums, etc. The location, [`DefLoc`] contains two bits of information:\n@@ -407,7 +407,7 @@ using offsets, text ranges or syntax trees as keys and values for queries. What\n we do instead is we store \"index\" of the item among all of the items of a file\n (so, a positional based ID, but localized to a single file).\n \n-[`DefLoc`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ids.rs#L127-L139\n+[`DefLoc`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/ids.rs#L127-L139\n \n One thing we've glossed over for the time being is support for macros. We have\n only proof of concept handling of macros at the moment, but they are extremely\n@@ -440,7 +440,7 @@ terms of `HirFileId`! This does not recur infinitely though: any chain of\n `HirFileId`s bottoms out in `HirFileId::FileId`, that is, some source file\n actually written by the user.\n \n-[`HirFileId`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ids.rs#L18-L125\n+[`HirFileId`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/ids.rs#L18-L125\n \n Now that we understand how to identify a definition, in a source or in a\n macro-generated file, we can discuss name resolution a bit.\n@@ -454,14 +454,14 @@ each module into a position-independent representation which does not change if\n we modify bodies of the items. After that we [loop] resolving all imports until\n we've reached a fixed point.\n \n-[lower]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L113-L117\n-[loop]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres.rs#L186-L196\n+[lower]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L113-L117\n+[loop]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres.rs#L186-L196\n \n And, given all our preparation with IDs and a position-independent representation,\n it is satisfying to [test] that typing inside function body does not invalidate\n name resolution results.\n \n-[test]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/tests.rs#L376\n+[test]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/tests.rs#L376\n \n An interesting fact about name resolution is that it \"erases\" all of the\n intermediate paths from the imports: in the end, we know which items are defined\n@@ -496,10 +496,10 @@ there's an intermediate [projection query] which returns only the first\n position-independent part of the lowering. The result of this query is stable.\n Naturally, name resolution [uses] this stable projection query.\n \n-[imports]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L52-L59\n-[`SourceMap`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L52-L59\n-[projection query]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/nameres/lower.rs#L97-L103\n-[uses]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/query_definitions.rs#L49\n+[imports]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L52-L59\n+[`SourceMap`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L52-L59\n+[projection query]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/nameres/lower.rs#L97-L103\n+[uses]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/query_definitions.rs#L49\n \n ## Type inference\n \n@@ -521,10 +521,10 @@ construct a mapping from `ExprId`s to types.\n \n [@flodiebold]: https://github.com/flodiebold\n [#327]: https://github.com/rust-analyzer/rust-analyzer/pull/327\n-[lower the AST]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs\n-[positional ID]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs#L13-L15\n-[a source map]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/expr.rs#L41-L44\n-[type inference]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/ty.rs#L1208-L1223\n+[lower the AST]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/expr.rs\n+[positional ID]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/expr.rs#L13-L15\n+[a source map]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/expr.rs#L41-L44\n+[type inference]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/hir/src/ty.rs#L1208-L1223\n \n ## Tying it all together: completion\n "}, {"sha": "97a11a01eeb19baf98ef02517a14be13dc64cea4", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2212a49f6d447a14cdc87a9de2a4844e78b6905/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=d2212a49f6d447a14cdc87a9de2a4844e78b6905", "patch": "@@ -192,7 +192,7 @@ impl TidyDocs {\n         }\n \n         let poorly_documented = [\n-            \"ra_hir\",\n+            \"hir\",\n             \"hir_expand\",\n             \"ra_ide\",\n             \"mbe\",\n@@ -201,7 +201,7 @@ impl TidyDocs {\n             \"project_model\",\n             \"syntax\",\n             \"tt\",\n-            \"ra_hir_ty\",\n+            \"hir_ty\",\n         ];\n \n         let mut has_fixmes ="}]}