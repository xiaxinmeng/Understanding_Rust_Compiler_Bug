{"sha": "abe307cf451e02227d681eecca0e471f4f4534a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZTMwN2NmNDUxZTAyMjI3ZDY4MWVlY2NhMGU0NzFmNGY0NTM0YTc=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-13T18:55:25Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-13T18:55:25Z"}, "message": "Uncomment recently-no-longer-failing std.deque tests.  Add a few arbitrary-access checks.", "tree": {"sha": "b03e2eabe3c6a0f112059c431cdf029d214bb2d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b03e2eabe3c6a0f112059c431cdf029d214bb2d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abe307cf451e02227d681eecca0e471f4f4534a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abe307cf451e02227d681eecca0e471f4f4534a7", "html_url": "https://github.com/rust-lang/rust/commit/abe307cf451e02227d681eecca0e471f4f4534a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abe307cf451e02227d681eecca0e471f4f4534a7/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73ee16b1a41fef7aeb7b08aaac835200ce857c48", "url": "https://api.github.com/repos/rust-lang/rust/commits/73ee16b1a41fef7aeb7b08aaac835200ce857c48", "html_url": "https://github.com/rust-lang/rust/commit/73ee16b1a41fef7aeb7b08aaac835200ce857c48"}], "stats": {"total": 104, "additions": 74, "deletions": 30}, "files": [{"sha": "ecd8bc44d33a90dd757b322178342df7b511e99f", "filename": "src/test/run-pass/lib-deque.rs", "status": "modified", "additions": 74, "deletions": 30, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/abe307cf451e02227d681eecca0e471f4f4534a7/src%2Ftest%2Frun-pass%2Flib-deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abe307cf451e02227d681eecca0e471f4f4534a7/src%2Ftest%2Frun-pass%2Flib-deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-deque.rs?ref=abe307cf451e02227d681eecca0e471f4f4534a7", "patch": "@@ -35,8 +35,25 @@ fn test_simple() {\n   log i;\n   check (i == 17);\n \n-  /* FIXME (issue #138):  Test d.get() once it no longer causes\n-   * segfault. */\n+  check (d.size() == 0u);\n+  d.add_back(3);\n+  check (d.size() == 1u);\n+  d.add_front(2);\n+  check (d.size() == 2u);\n+  d.add_back(4);\n+  check (d.size() == 3u);\n+  d.add_front(1);\n+  check (d.size() == 4u);\n+\n+  log d.get(0);\n+  log d.get(1);\n+  log d.get(2);\n+  log d.get(3);\n+\n+  check (d.get(0) == 1);\n+  check (d.get(1) == 2);\n+  check (d.get(2) == 3);\n+  check (d.get(3) == 4);\n }\n \n fn test_boxes(@int a, @int b, @int c, @int d) {\n@@ -57,13 +74,25 @@ fn test_boxes(@int a, @int b, @int c, @int d) {\n   check (deq.pop_back() == c);\n   check (deq.pop_back() == a);\n \n-  /* FIXME (issue #138):  Test d.get() once it no longer causes\n-   * segfault. */\n+  check (deq.size() == 0u);\n+  deq.add_back(c);\n+  check (deq.size() == 1u);\n+  deq.add_front(b);\n+  check (deq.size() == 2u);\n+  deq.add_back(d);\n+  check (deq.size() == 3u);\n+  deq.add_front(a);\n+  check (deq.size() == 4u);\n+\n+  check (deq.get(0) == a);\n+  check (deq.get(1) == b);\n+  check (deq.get(2) == c);\n+  check (deq.get(3) == d);\n }\n \n-type eqfn[T] = fn(&T a, &T b) -> bool;\n+type eqfn[T] = fn(T a, T b) -> bool;\n \n-fn test_parameterized[T](eqfn[T] e, &T a, &T b, &T c, &T d) {\n+fn test_parameterized[T](eqfn[T] e, T a, T b, T c, T d) {\n   let deque.t[T] deq = deque.create[T]();\n   check (deq.size() == 0u);\n   deq.add_front(a);\n@@ -81,8 +110,20 @@ fn test_parameterized[T](eqfn[T] e, &T a, &T b, &T c, &T d) {\n   check (e(deq.pop_back(), c));\n   check (e(deq.pop_back(), a));\n \n-  /* FIXME (issue #138):  Test d.get() once it no longer causes\n-   * segfault. */\n+  check (deq.size() == 0u);\n+  deq.add_back(c);\n+  check (deq.size() == 1u);\n+  deq.add_front(b);\n+  check (deq.size() == 2u);\n+  deq.add_back(d);\n+  check (deq.size() == 3u);\n+  deq.add_front(a);\n+  check (deq.size() == 4u);\n+\n+  check (e(deq.get(0), a));\n+  check (e(deq.get(1), b));\n+  check (e(deq.get(2), c));\n+  check (e(deq.get(3), d));\n }\n \n type taggy = tag(one(int), two(int, int), three(int, int, int));\n@@ -94,15 +135,15 @@ type taggypar[T] = tag(onepar(int),\n type reccy = rec(int x, int y, taggy t);\n \n fn main() {\n-  fn inteq(&int a, &int b) -> bool {\n+  fn inteq(int a, int b) -> bool {\n     ret a == b;\n   }\n \n-  fn intboxeq(&@int a, &@int b) -> bool {\n+  fn intboxeq(@int a, @int b) -> bool {\n     ret a == b;\n   }\n \n-  fn taggyeq(&taggy a, &taggy b) -> bool {\n+  fn taggyeq(taggy a, taggy b) -> bool {\n     alt (a) {\n       case (one(a1)) {\n         alt (b) {\n@@ -125,7 +166,7 @@ fn main() {\n     }\n   }\n \n-  fn taggypareq[T](&taggypar[T] a, &taggypar[T] b) -> bool {\n+  fn taggypareq[T](taggypar[T] a, taggypar[T] b) -> bool {\n     alt (a) {\n       case (onepar[T](a1)) {\n         alt (b) {\n@@ -150,65 +191,68 @@ fn main() {\n     }\n   }\n \n-  fn reccyeq(&reccy a, &reccy b) -> bool {\n+  fn reccyeq(reccy a, reccy b) -> bool {\n     ret (a.x == b.x && a.y == b.y && taggyeq(a.t, b.t));\n   }\n \n-  log \"test simple\";\n+  log \"*** starting\";\n+\n+  log \"*** test simple\";\n   test_simple();\n+  log \"*** end test simple\";\n \n   /*\n    * FIXME: Causes \"Invalid read of size 4\" under valgrind.\n \n-  log \"test boxes\";\n+  log \"*** test boxes\";\n   test_boxes(@5, @72, @64, @175);\n+  log \"*** end test boxes\";\n \n    */\n \n   log \"test parameterized: int\";\n-  let eqfn[int] eq1 = bind inteq(_, _);\n+  let eqfn[int] eq1 = inteq;\n   test_parameterized[int](eq1, 5, 72, 64, 175);\n \n   /*\n    * FIXME: Appears to segfault after an upcall_grow_task\n \n-  log \"test parameterized: @int\";\n-  let eqfn[@int] eq2 = bind intboxeq(_, _);\n+  log \"*** test parameterized: @int\";\n+  let eqfn[@int] eq2 = intboxeq;\n   test_parameterized[@int](eq2, @5, @72, @64, @175);\n+  log \"*** end test parameterized @int\";\n \n-   */\n+  */\n \n   log \"test parameterized: taggy\";\n-  let eqfn[taggy] eq3 = bind taggyeq(_, _);\n+  let eqfn[taggy] eq3 = taggyeq;\n   test_parameterized[taggy](eq3,\n                             one(1), two(1, 2), three(1, 2, 3), two(17, 42));\n \n   /*\n-   * FIXME: Segfault.\n+   * FIXME: Segfault.  Also appears to be caused only after upcall_grow_task\n \n-  log \"test parameterized: taggypar[int]\";\n-  let eqfn[taggypar[int]] eq4 = bind taggypareq[int](_, _);\n+  log \"*** test parameterized: taggypar[int]\";\n+  let eqfn[taggypar[int]] eq4 = taggypareq[int];\n   test_parameterized[taggypar[int]](eq4,\n                                     onepar[int](1),\n                                     twopar[int](1, 2),\n                                     threepar[int](1, 2, 3),\n                                     twopar[int](17, 42));\n+  log \"*** end test parameterized: taggypar[int]\";\n \n    */\n \n-  /*\n-   * FIXME: Segfault.\n-\n-  log \"test parameterized: reccy\";\n+  log \"*** test parameterized: reccy\";\n   let reccy reccy1 = rec(x=1, y=2, t=one(1));\n   let reccy reccy2 = rec(x=345, y=2, t=two(1, 2));\n   let reccy reccy3 = rec(x=1, y=777, t=three(1, 2, 3));\n   let reccy reccy4 = rec(x=19, y=252, t=two(17, 42));\n-  let eqfn[reccy] eq5 = bind reccyeq(_, _);\n+  let eqfn[reccy] eq5 = reccyeq;\n   test_parameterized[reccy](eq5,\n                             reccy1, reccy2, reccy3, reccy4);\n+  log \"*** end test parameterized: reccy\";\n \n-   */\n \n-  log \"done\";\n+  log \"*** done\";\n }"}]}