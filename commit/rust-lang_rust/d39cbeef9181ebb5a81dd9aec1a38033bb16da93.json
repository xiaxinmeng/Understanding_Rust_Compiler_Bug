{"sha": "d39cbeef9181ebb5a81dd9aec1a38033bb16da93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOWNiZWVmOTE4MWViYjVhODFkZDlhZWMxYTM4MDMzYmIxNmRhOTM=", "commit": {"author": {"name": "Brennan Vincent", "email": "brennan@materialize.io", "date": "2020-05-31T16:21:45Z"}, "committer": {"name": "Brennan Vincent", "email": "brennan@materialize.io", "date": "2020-05-31T16:21:45Z"}, "message": "add test", "tree": {"sha": "02de0b1d6c28450111234a6432e99fab1a089cf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02de0b1d6c28450111234a6432e99fab1a089cf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d39cbeef9181ebb5a81dd9aec1a38033bb16da93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d39cbeef9181ebb5a81dd9aec1a38033bb16da93", "html_url": "https://github.com/rust-lang/rust/commit/d39cbeef9181ebb5a81dd9aec1a38033bb16da93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d39cbeef9181ebb5a81dd9aec1a38033bb16da93/comments", "author": {"login": "umanwizard", "id": 1893159, "node_id": "MDQ6VXNlcjE4OTMxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1893159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umanwizard", "html_url": "https://github.com/umanwizard", "followers_url": "https://api.github.com/users/umanwizard/followers", "following_url": "https://api.github.com/users/umanwizard/following{/other_user}", "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions", "organizations_url": "https://api.github.com/users/umanwizard/orgs", "repos_url": "https://api.github.com/users/umanwizard/repos", "events_url": "https://api.github.com/users/umanwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/umanwizard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "umanwizard", "id": 1893159, "node_id": "MDQ6VXNlcjE4OTMxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1893159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umanwizard", "html_url": "https://github.com/umanwizard", "followers_url": "https://api.github.com/users/umanwizard/followers", "following_url": "https://api.github.com/users/umanwizard/following{/other_user}", "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions", "organizations_url": "https://api.github.com/users/umanwizard/orgs", "repos_url": "https://api.github.com/users/umanwizard/repos", "events_url": "https://api.github.com/users/umanwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/umanwizard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ef9703740bfe31f9706a843938e628acedb9968", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef9703740bfe31f9706a843938e628acedb9968", "html_url": "https://github.com/rust-lang/rust/commit/8ef9703740bfe31f9706a843938e628acedb9968"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "bb40d2043786ce4434fae04d324b901c660a7d9e", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d39cbeef9181ebb5a81dd9aec1a38033bb16da93/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39cbeef9181ebb5a81dd9aec1a38033bb16da93/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=d39cbeef9181ebb5a81dd9aec1a38033bb16da93", "patch": "@@ -615,6 +615,33 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn test_find_all_refs_nested_module() {\n+        let code = r#\"\n+            //- /lib.rs\n+            mod foo {\n+                mod bar;\n+            }\n+\n+            fn f<|>() {}\n+\n+            //- /foo/bar.rs\n+            use crate::f;\n+\n+            fn g() {\n+                f();\n+            }\n+        \"#;\n+\n+        let (analysis, pos) = analysis_and_position(code);\n+        let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n+        check_result(\n+            refs,\n+            \"f FN_DEF FileId(1) 25..34 28..29 Other\",\n+            &[\"FileId(2) 11..12 Other\", \"FileId(2) 27..28 StructLiteral\"],\n+        );\n+    }\n+\n     fn get_all_refs(text: &str) -> ReferenceSearchResult {\n         let (analysis, position) = single_file_with_position(text);\n         analysis.find_all_refs(position, None).unwrap().unwrap()"}]}