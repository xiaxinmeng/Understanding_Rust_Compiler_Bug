{"sha": "a852758bd6ad76c97bca33ab83f9f8e8bf7810dc", "node_id": "C_kwDOAAsO6NoAKGE4NTI3NThiZDZhZDc2Yzk3YmNhMzNhYjgzZjlmOGU4YmY3ODEwZGM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-06T12:24:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-06T12:24:58Z"}, "message": "Merge #11912\n\n11912: Fix `SearchScope::reverse_dependencies` trying to search more files than necessary r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "44a83884d702b27954f53d1aead400a5f4475326", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44a83884d702b27954f53d1aead400a5f4475326"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a852758bd6ad76c97bca33ab83f9f8e8bf7810dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiTYaaCRBK7hj4Ov3rIwAA1UYIAH2aSD4lt4dtChoY/7N2ITHs\nkV8Ouy9RZICZqPsN7WWBwsY7HvwYmDzxxsq0wapSoC+gVZk4TTBmgjD/F5NBn8st\n4A9gMX5f7cXpJxhhhb4t0v7GFN5TFKrJ2DoMKjk1j82QNgIgggSu1r2OeNlrGtJP\nPqlzqrBlp3NYRnY1aVa6b6CB5amFnLp2/8cS0nm3tDCi7Hl2KsIrLuJ6ViSB7ADF\nI7w+7tsj3Io/26/LYnoAGrLYofDXdB7HefP+Ma/FAQetg0J0JBqPDvU0vJ6a6+Di\nZBB45rTQYLfxlf/F2T8GakWs4zf1B+Z1riFajx/iqDCGt4w1QLEvomsB/te2Cks=\n=IBxx\n-----END PGP SIGNATURE-----\n", "payload": "tree 44a83884d702b27954f53d1aead400a5f4475326\nparent fa06e3d0f9dcd5568ae8fd386c63c91924df8710\nparent 4e6390bb129f212614eda8a0cd6662d9cb4440f3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1649247898 +0000\ncommitter GitHub <noreply@github.com> 1649247898 +0000\n\nMerge #11912\n\n11912: Fix `SearchScope::reverse_dependencies` trying to search more files than necessary r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a852758bd6ad76c97bca33ab83f9f8e8bf7810dc", "html_url": "https://github.com/rust-lang/rust/commit/a852758bd6ad76c97bca33ab83f9f8e8bf7810dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a852758bd6ad76c97bca33ab83f9f8e8bf7810dc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa06e3d0f9dcd5568ae8fd386c63c91924df8710", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa06e3d0f9dcd5568ae8fd386c63c91924df8710", "html_url": "https://github.com/rust-lang/rust/commit/fa06e3d0f9dcd5568ae8fd386c63c91924df8710"}, {"sha": "4e6390bb129f212614eda8a0cd6662d9cb4440f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6390bb129f212614eda8a0cd6662d9cb4440f3", "html_url": "https://github.com/rust-lang/rust/commit/4e6390bb129f212614eda8a0cd6662d9cb4440f3"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "63a45aa3efc84546d15e8897168dce9061ca2f8c", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a852758bd6ad76c97bca33ab83f9f8e8bf7810dc/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a852758bd6ad76c97bca33ab83f9f8e8bf7810dc/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=a852758bd6ad76c97bca33ab83f9f8e8bf7810dc", "patch": "@@ -102,12 +102,18 @@ impl SearchScope {\n     /// Build a search scope spanning all the reverse dependencies of the given crate.\n     fn reverse_dependencies(db: &RootDatabase, of: hir::Crate) -> SearchScope {\n         let mut entries = FxHashMap::default();\n-        for rev_dep in of.transitive_reverse_dependencies(db) {\n-            let root_file = rev_dep.root_file(db);\n-            let source_root_id = db.file_source_root(root_file);\n-            let source_root = db.source_root(source_root_id);\n-            entries.extend(source_root.iter().map(|id| (id, None)));\n-        }\n+        let mut insert_modules = |of: hir::Crate| {\n+            entries.extend(of.modules(db).into_iter().filter_map(|module| {\n+                match module.definition_source(db) {\n+                    InFile { file_id, value: ModuleSource::SourceFile(..) } => {\n+                        Some((file_id.original_file(db), None))\n+                    }\n+                    _ => None,\n+                }\n+            }));\n+        };\n+        insert_modules(of);\n+        of.transitive_reverse_dependencies(db).into_iter().for_each(insert_modules);\n         SearchScope { entries }\n     }\n "}]}