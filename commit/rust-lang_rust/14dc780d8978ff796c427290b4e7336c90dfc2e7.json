{"sha": "14dc780d8978ff796c427290b4e7336c90dfc2e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZGM3ODBkODk3OGZmNzk2YzQyNzI5MGI0ZTczMzZjOTBkZmMyZTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-20T20:39:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-22T11:08:40Z"}, "message": "fix a comment in validity", "tree": {"sha": "756b3b58a59c9d4ee3bf6970d67a24a09f517ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/756b3b58a59c9d4ee3bf6970d67a24a09f517ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14dc780d8978ff796c427290b4e7336c90dfc2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14dc780d8978ff796c427290b4e7336c90dfc2e7", "html_url": "https://github.com/rust-lang/rust/commit/14dc780d8978ff796c427290b4e7336c90dfc2e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14dc780d8978ff796c427290b4e7336c90dfc2e7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3e7efc8c17b920122de4a317ab788e2eb65f3ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3e7efc8c17b920122de4a317ab788e2eb65f3ee", "html_url": "https://github.com/rust-lang/rust/commit/f3e7efc8c17b920122de4a317ab788e2eb65f3ee"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c28c3b4d3f1f582d4df0587f70f2cc23d89d5b1e", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14dc780d8978ff796c427290b4e7336c90dfc2e7/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14dc780d8978ff796c427290b4e7336c90dfc2e7/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=14dc780d8978ff796c427290b4e7336c90dfc2e7", "patch": "@@ -226,7 +226,9 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n         // Validate all fields\n         match dest.layout.fields {\n             // primitives are unions with zero fields\n-            // FIXME: Use some other indicator instead, like `layout.abi`.\n+            // We still check `layout.fields`, not `layout.abi`, because `layout.abi`\n+            // is `Scalar` for newtypes around scalars, but we want to descend through the\n+            // fields to get a proper `path`.\n             layout::FieldPlacement::Union(0) => {\n                 match dest.layout.abi {\n                     // nothing to do, whatever the pointer points to, it is never going to be read"}]}