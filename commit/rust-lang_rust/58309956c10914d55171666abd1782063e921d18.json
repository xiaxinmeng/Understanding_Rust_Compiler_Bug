{"sha": "58309956c10914d55171666abd1782063e921d18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MzA5OTU2YzEwOTE0ZDU1MTcxNjY2YWJkMTc4MjA2M2U5MjFkMTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-21T12:43:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-27T13:26:23Z"}, "message": "for now, we allow Undef in raw pointers as we do in integers", "tree": {"sha": "44eea729f2385ca28f41bf767661ee3106f5d702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44eea729f2385ca28f41bf767661ee3106f5d702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58309956c10914d55171666abd1782063e921d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58309956c10914d55171666abd1782063e921d18", "html_url": "https://github.com/rust-lang/rust/commit/58309956c10914d55171666abd1782063e921d18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58309956c10914d55171666abd1782063e921d18/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd94930ee3d928c4029b4d118befdd620eaf0919", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd94930ee3d928c4029b4d118befdd620eaf0919", "html_url": "https://github.com/rust-lang/rust/commit/dd94930ee3d928c4029b4d118befdd620eaf0919"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "f86fef9454e82891f1b8e15a3450788b18b1a3fa", "filename": "tests/compile-fail/validity/undef.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dd94930ee3d928c4029b4d118befdd620eaf0919/tests%2Fcompile-fail%2Fvalidity%2Fundef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd94930ee3d928c4029b4d118befdd620eaf0919/tests%2Fcompile-fail%2Fvalidity%2Fundef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fundef.rs?ref=dd94930ee3d928c4029b4d118befdd620eaf0919", "patch": "@@ -1,12 +0,0 @@\n-#![allow(unused_variables)]\n-// error-pattern: encountered undefined address in pointer\n-\n-use std::mem;\n-\n-fn make_raw() -> *const f32 {\n-    unsafe { mem::uninitialized() }\n-}\n-\n-fn main() {\n-    let _x = make_raw();\n-}"}]}