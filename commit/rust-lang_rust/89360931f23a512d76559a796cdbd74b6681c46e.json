{"sha": "89360931f23a512d76559a796cdbd74b6681c46e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MzYwOTMxZjIzYTUxMmQ3NjU1OWE3OTZjZGJkNzRiNjY4MWM0NmU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-16T22:14:42Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-23T12:57:43Z"}, "message": "Fix proc macro crate encoding.", "tree": {"sha": "5bb3dc4976dc8b3f93056b7a59fffe52424e9ff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bb3dc4976dc8b3f93056b7a59fffe52424e9ff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89360931f23a512d76559a796cdbd74b6681c46e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89360931f23a512d76559a796cdbd74b6681c46e", "html_url": "https://github.com/rust-lang/rust/commit/89360931f23a512d76559a796cdbd74b6681c46e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89360931f23a512d76559a796cdbd74b6681c46e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eb0bbd2a89a1342f411e138b944aa0598f3a311", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb0bbd2a89a1342f411e138b944aa0598f3a311", "html_url": "https://github.com/rust-lang/rust/commit/4eb0bbd2a89a1342f411e138b944aa0598f3a311"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "3961adacecae8cecfffd6cec7507e4bbe137aae5", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/89360931f23a512d76559a796cdbd74b6681c46e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89360931f23a512d76559a796cdbd74b6681c46e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=89360931f23a512d76559a796cdbd74b6681c46e", "patch": "@@ -1613,12 +1613,19 @@ impl EncodeContext<'a, 'tcx> {\n             let tcx = self.tcx;\n             let hir = tcx.hir();\n \n-            record!(self.tables.span[LOCAL_CRATE.as_def_id()] <- hir.span(hir::CRATE_HIR_ID));\n-\n             let proc_macro_decls_static = tcx.proc_macro_decls_static(LOCAL_CRATE).unwrap().index;\n             let stability = tcx.lookup_stability(DefId::local(CRATE_DEF_INDEX)).copied();\n             let macros = self.lazy(hir.krate().proc_macros.iter().map(|p| p.owner.local_def_index));\n \n+            record!(self.tables.def_kind[LOCAL_CRATE.as_def_id()] <- DefKind::Mod);\n+            record!(self.tables.span[LOCAL_CRATE.as_def_id()] <- tcx.def_span(LOCAL_CRATE.as_def_id()));\n+            record!(self.tables.attributes[LOCAL_CRATE.as_def_id()] <- tcx.get_attrs(LOCAL_CRATE.as_def_id()));\n+            record!(self.tables.visibility[LOCAL_CRATE.as_def_id()] <- tcx.visibility(LOCAL_CRATE.as_def_id()));\n+            if let Some(stability) = stability {\n+                record!(self.tables.stability[LOCAL_CRATE.as_def_id()] <- stability);\n+            }\n+            self.encode_deprecation(LOCAL_CRATE.as_def_id());\n+\n             // Normally, this information is encoded when we walk the items\n             // defined in this crate. However, we skip doing that for proc-macro crates,\n             // so we manually encode just the information that we need"}]}