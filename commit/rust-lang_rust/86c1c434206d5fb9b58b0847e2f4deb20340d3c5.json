{"sha": "86c1c434206d5fb9b58b0847e2f4deb20340d3c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YzFjNDM0MjA2ZDVmYjliNThiMDg0N2UyZjRkZWIyMDM0MGQzYzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T08:38:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T09:58:16Z"}, "message": "fix pointer invalidation when extnding a vector from an untrusted iterator", "tree": {"sha": "eba8e8fb2a27cd08a1f0e51c0fc093692c4ccd36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eba8e8fb2a27cd08a1f0e51c0fc093692c4ccd36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86c1c434206d5fb9b58b0847e2f4deb20340d3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86c1c434206d5fb9b58b0847e2f4deb20340d3c5", "html_url": "https://github.com/rust-lang/rust/commit/86c1c434206d5fb9b58b0847e2f4deb20340d3c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86c1c434206d5fb9b58b0847e2f4deb20340d3c5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6556549fa6d74791d1e3e155ae8a4d1480ea4481", "url": "https://api.github.com/repos/rust-lang/rust/commits/6556549fa6d74791d1e3e155ae8a4d1480ea4481", "html_url": "https://github.com/rust-lang/rust/commit/6556549fa6d74791d1e3e155ae8a4d1480ea4481"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6f264399fa884e594c721f277eac43c274862687", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86c1c434206d5fb9b58b0847e2f4deb20340d3c5/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c1c434206d5fb9b58b0847e2f4deb20340d3c5/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=86c1c434206d5fb9b58b0847e2f4deb20340d3c5", "patch": "@@ -2019,6 +2019,8 @@ where\n                 let (lower, _) = iterator.size_hint();\n                 let mut vector = Vec::with_capacity(lower.saturating_add(1));\n                 unsafe {\n+                    // `vector` is new, cannot have aliases, so us getting exclusive references\n+                    // here is okay.\n                     ptr::write(vector.get_unchecked_mut(0), element);\n                     vector.set_len(1);\n                 }\n@@ -2145,7 +2147,7 @@ impl<T> Vec<T> {\n                 self.reserve(lower.saturating_add(1));\n             }\n             unsafe {\n-                ptr::write(self.get_unchecked_mut(len), element);\n+                ptr::write(self.as_mut_ptr().add(len), element);\n                 // NB can't overflow since we would have had to alloc the address space\n                 self.set_len(len + 1);\n             }"}]}