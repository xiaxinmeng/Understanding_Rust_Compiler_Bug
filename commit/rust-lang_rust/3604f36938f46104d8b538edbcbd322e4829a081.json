{"sha": "3604f36938f46104d8b538edbcbd322e4829a081", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MDRmMzY5MzhmNDYxMDRkOGI1MzhlZGJjYmQzMjJlNDgyOWEwODE=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-02T04:21:01Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-04T03:54:17Z"}, "message": "Implement folding of ast::ty.", "tree": {"sha": "0f867b3132103f16d5fe7bbf8c5ff24414b7c408", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f867b3132103f16d5fe7bbf8c5ff24414b7c408"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3604f36938f46104d8b538edbcbd322e4829a081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3604f36938f46104d8b538edbcbd322e4829a081", "html_url": "https://github.com/rust-lang/rust/commit/3604f36938f46104d8b538edbcbd322e4829a081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3604f36938f46104d8b538edbcbd322e4829a081/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e25b2bb91118ff40e110129808451a762e7f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e25b2bb91118ff40e110129808451a762e7f5c", "html_url": "https://github.com/rust-lang/rust/commit/42e25b2bb91118ff40e110129808451a762e7f5c"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "dc172e430a59cdae9c02af20fb8a755c71c34442", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3604f36938f46104d8b538edbcbd322e4829a081/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3604f36938f46104d8b538edbcbd322e4829a081/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=3604f36938f46104d8b538edbcbd322e4829a081", "patch": "@@ -415,9 +415,36 @@ fn noop_fold_expr(e: expr_, fld: ast_fold) -> expr_ {\n         }\n }\n \n-fn noop_fold_ty(t: ty_, _fld: ast_fold) -> ty_ {\n-    //drop in ty::fold_ty here if necessary\n-    ret t;\n+fn noop_fold_ty(t: ty_, fld: ast_fold) -> ty_ {\n+    let fold_mac = bind fold_mac_(_, fld);\n+    fn fold_mt(mt: mt, fld: ast_fold) -> mt {\n+        {ty: fld.fold_ty(mt.ty), mut: mt.mut}\n+    }\n+    fn fold_field(f: ty_field, fld: ast_fold) -> ty_field {\n+        {node: {ident: fld.fold_ident(f.node.ident),\n+                mt: fold_mt(f.node.mt, fld)},\n+         span: fld.new_span(f.span)}\n+    }\n+    alt t {\n+      ty_nil | ty_bot | ty_bool | ty_str {t}\n+      ty_int(_) | ty_uint(_) | ty_float(_) {t}\n+      ty_box(mt) {ty_box(fold_mt(mt, fld))}\n+      ty_uniq(mt) {ty_uniq(fold_mt(mt, fld))}\n+      ty_vec(mt) {ty_vec(fold_mt(mt, fld))}\n+      ty_ptr(mt) {ty_ptr(fold_mt(mt, fld))}\n+      ty_task {t}\n+      ty_port(ty) {ty_port(fld.fold_ty(ty))}\n+      ty_chan(ty) {ty_chan(fld.fold_ty(ty))}\n+      ty_rec(fields) {ty_rec(vec::map(fields) {|f| fold_field(f, fld)})}\n+      ty_fn(proto, decl) {ty_fn(proto, fold_fn_decl(decl, fld))}\n+      ty_tup(tys) {ty_tup(vec::map(tys) {|ty| fld.fold_ty(ty)})}\n+      ty_path(path, id) {ty_path(fld.fold_path(path), fld.new_id(id))}\n+      ty_type {t}\n+      // FIXME: constrs likely needs to be folded...\n+      ty_constr(ty, constrs) {ty_constr(fld.fold_ty(ty), constrs)}\n+      ty_mac(mac) {ty_mac(fold_mac(mac))}\n+      ty_infer {t}\n+    }\n }\n \n fn noop_fold_constr(c: constr_, fld: ast_fold) -> constr_ {"}]}