{"sha": "09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OTgyNzg0YzZhZDFjNzhmOTQ4MGMzYzJjMGMzYTJiMmJmN2Y5Njk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-09T23:08:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-09T23:08:03Z"}, "message": "Begin adding some test runner types to std. Issue #428", "tree": {"sha": "d8eaf0eeef57a111ca24c28b73626a7edb1f7367", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8eaf0eeef57a111ca24c28b73626a7edb1f7367"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969", "html_url": "https://github.com/rust-lang/rust/commit/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "html_url": "https://github.com/rust-lang/rust/commit/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "da9c4f78cc27fbfa3189c20475c9f921fa9eb1cd", "filename": "src/lib/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969", "patch": "@@ -87,6 +87,7 @@ mod term;\n mod time;\n mod smallintmap;\n mod ptr;\n+mod test;\n \n // Local Variables:\n // mode: rust;"}, {"sha": "cfee1f8207228f9f4b116e162bd06905cccf4891", "filename": "src/lib/test.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=09982784c6ad1c78f9480c3c2c0c3a2b2bf7f969", "patch": "@@ -0,0 +1,56 @@\n+// Support code for rustc's built in test runner generator. Currently,\n+// none of this is meant for users. It is intended to support the\n+// simplest interface possible for representing and running tests\n+// while providing a base that other test frameworks may build off of.\n+\n+export test_name;\n+export test_fn;\n+export test_desc;\n+export test_main;\n+\n+// The name of a test. By convention this follows the rules for rust\n+// paths, i.e it should be a series of identifiers seperated by double\n+// colons. This way if some test runner wants to arrange the tests\n+// heirarchically it may.\n+type test_name = str;\n+\n+// A function that runs a test. If the function returns successfully,\n+// the test succeeds; if the function fails then the test fails. We\n+// may need to come up with a more clever definition of test in order\n+// to support isolation of tests into tasks.\n+type test_fn = fn();\n+\n+// The definition of a single test. A test runner will run a list of\n+// these.\n+type test_desc = rec(test_name name,\n+                     test_fn fn);\n+\n+// The default console test runner. It accepts the command line\n+// arguments and a vector of test_descs (generated at compile time).\n+fn test_main(&vec[str] args, &test_desc[] tests) -> int {\n+    if (run_tests(tests)) {\n+        ret 0;\n+    } else {\n+        ret -1;\n+    }\n+}\n+\n+fn run_tests(&test_desc[] tests) -> bool {\n+    auto out = io::stdout();\n+\n+    for (test_desc test in tests) {\n+        out.write_line(\"running \" + test.name);\n+    }\n+\n+    ret true;\n+}\n+\n+\n+// Local Variables:\n+// mode: rust;\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:"}]}