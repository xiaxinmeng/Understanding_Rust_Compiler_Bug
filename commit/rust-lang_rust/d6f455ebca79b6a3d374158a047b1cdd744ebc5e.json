{"sha": "d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZjQ1NWViY2E3OWI2YTNkMzc0MTU4YTA0N2IxY2RkNzQ0ZWJjNWU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-04-06T00:17:49Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-04-06T00:18:26Z"}, "message": "rustllvm: Only initialize command-line arguments once\n\nIn my WIP on rustpkg, I was calling driver code that calls\nLLVMRustWriteOutputFile more than once. This was making LLVM\nunhappy, since that function has code that initializes the\ncommand-line options for LLVM, and I guess you can't do that more\nthan once. So, check if they've already been initialized.", "tree": {"sha": "da66732bfd2d5a0ec9bc53d89487e2a74d42ce24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da66732bfd2d5a0ec9bc53d89487e2a74d42ce24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "html_url": "https://github.com/rust-lang/rust/commit/d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6f455ebca79b6a3d374158a047b1cdd744ebc5e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "babe50633349cd29f0a0757079e0e13bdc0310fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/babe50633349cd29f0a0757079e0e13bdc0310fa", "html_url": "https://github.com/rust-lang/rust/commit/babe50633349cd29f0a0757079e0e13bdc0310fa"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "bdf13746f3ebf4973017b63a1ad42eae97454e73", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d6f455ebca79b6a3d374158a047b1cdd744ebc5e/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d6f455ebca79b6a3d374158a047b1cdd744ebc5e/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=d6f455ebca79b6a3d374158a047b1cdd744ebc5e", "patch": "@@ -62,6 +62,8 @@ using namespace llvm::sys;\n \n static const char *LLVMRustError;\n \n+extern cl::opt<bool> EnableARMEHABI;\n+\n extern \"C\" LLVMMemoryBufferRef\n LLVMRustCreateMemoryBufferWithContentsOfFile(const char *Path) {\n   LLVMMemoryBufferRef MemBuf = NULL;\n@@ -429,10 +431,16 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n \n   LLVMRustInitializeTargets();\n \n-  int argc = 3;\n-  const char* argv[] = {\"rustc\", \"-arm-enable-ehabi\",\n-      \"-arm-enable-ehabi-descriptors\"};\n-  cl::ParseCommandLineOptions(argc, argv);\n+  // Initializing the command-line options more than once is not\n+  // allowed. So, check if they've already been initialized.\n+  // (This could happen if we're being called from rustpkg, for\n+  // example.)\n+  if (!EnableARMEHABI) {\n+    int argc = 3;\n+    const char* argv[] = {\"rustc\", \"-arm-enable-ehabi\",\n+\t\t\t  \"-arm-enable-ehabi-descriptors\"};\n+    cl::ParseCommandLineOptions(argc, argv);\n+  }\n \n   TargetOptions Options;\n   Options.NoFramePointerElim = true;"}]}