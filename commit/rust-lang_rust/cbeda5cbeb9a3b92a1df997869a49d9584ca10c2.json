{"sha": "cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZWRhNWNiZWI5YTNiOTJhMWRmOTk3ODY5YTQ5ZDk1ODRjYTEwYzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-24T17:37:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-24T17:37:29Z"}, "message": "Auto merge of #86467 - ChrisDenton:win-env-clear, r=JohnTitor\n\nWindows: Fix `Command::env_clear` so it works if no variables are set\n\nPreviously, it would error unless at least one new environment variable was added. The missing null presumably meant that Windows was reading random memory in that case.\n\nSee: [CreateProcessW](https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessw) (scroll down to `lpEnvironment`). Essentially the environment block is a null terminated list of null terminated strings and an empty list is `\\0\\0` and not `\\0`.\n\nEDIT: Oh, [CreateEnvironmentBlock](https://docs.microsoft.com/en-gb/windows/win32/api/userenv/nf-userenv-createenvironmentblock) states this much more explicitly.\n\nFixes #31259", "tree": {"sha": "4468f6468cc7227782bf6820c13c1241e442a08c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4468f6468cc7227782bf6820c13c1241e442a08c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "html_url": "https://github.com/rust-lang/rust/commit/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d95745e5fa39680d97a52d0e07ed7842b163bacc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d95745e5fa39680d97a52d0e07ed7842b163bacc", "html_url": "https://github.com/rust-lang/rust/commit/d95745e5fa39680d97a52d0e07ed7842b163bacc"}, {"sha": "16145a99528c862cfaca87e836fdd844ba155567", "url": "https://api.github.com/repos/rust-lang/rust/commits/16145a99528c862cfaca87e836fdd844ba155567", "html_url": "https://github.com/rust-lang/rust/commit/16145a99528c862cfaca87e836fdd844ba155567"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "bc71c150550a4080a0ad6f51e945a7cef6698460", "filename": "library/std/src/process/tests.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/library%2Fstd%2Fsrc%2Fprocess%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/library%2Fstd%2Fsrc%2Fprocess%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess%2Ftests.rs?ref=cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "patch": "@@ -399,3 +399,12 @@ fn test_command_implements_send_sync() {\n     fn take_send_sync_type<T: Send + Sync>(_: T) {}\n     take_send_sync_type(Command::new(\"\"))\n }\n+\n+// Ensure that starting a process with no environment variables works on Windows.\n+// This will fail if the environment block is ill-formed.\n+#[test]\n+#[cfg(windows)]\n+fn env_empty() {\n+    let p = Command::new(\"cmd\").args(&[\"/C\", \"exit 0\"]).env_clear().spawn();\n+    assert!(p.is_ok());\n+}"}, {"sha": "14de2530842f8da93d16558e109ee6ad50419c8f", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbeda5cbeb9a3b92a1df997869a49d9584ca10c2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=cbeda5cbeb9a3b92a1df997869a49d9584ca10c2", "patch": "@@ -530,6 +530,12 @@ fn make_envp(maybe_env: Option<BTreeMap<EnvKey, OsString>>) -> io::Result<(*mut\n     if let Some(env) = maybe_env {\n         let mut blk = Vec::new();\n \n+        // If there are no environment variables to set then signal this by\n+        // pushing a null.\n+        if env.is_empty() {\n+            blk.push(0);\n+        }\n+\n         for (k, v) in env {\n             blk.extend(ensure_no_nuls(k.0)?.encode_wide());\n             blk.push('=' as u16);"}]}