{"sha": "c53ce3b0cf271641530f3160a46ac239ca0c3623", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1M2NlM2IwY2YyNzE2NDE1MzBmMzE2MGE0NmFjMjM5Y2EwYzM2MjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-16T16:22:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-16T16:22:26Z"}, "message": "Rollup merge of #63595 - semarie:openbsd-sparc64, r=alexcrichton\n\nadd sparc64-unknown-openbsd target\n\non OpenBSD, some architectures relies on libc++ (from LLVM) and some\nothers on libestdc++ (particular version of libstdc++ from GCC).\n\nsparc64-unknown-openbsd needs libestdc++ and libgcc (as x86_64 some\nyears ago). Reintroduce the support of them for openbsd, only for\nsparc64 arch. Some others architectures on OpenBSD could use them too.", "tree": {"sha": "c4c9953e322b7063354ca3e4e91696d3e7dc10bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4c9953e322b7063354ca3e4e91696d3e7dc10bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c53ce3b0cf271641530f3160a46ac239ca0c3623", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdVthDCRBK7hj4Ov3rIwAAdHIIAHfqceJw8brrYQ6Q7ItwqbU2\n71J+3X9GgrkjVUI26MbRMvxxamvwy747HuVCeYqEd5Cvfx5K1qQsJJ/hWCgTfpSN\ncDkLj4rAv678DyRlq8GsWYG6hU5zR3Ki8QLxeRcKkAAdxTFysxAUq9xPb2PFSxfB\nCkj3z9VTK3L7DjExluhKUiqxZRuf10JEyqH31Wixgl3+II2lYwew8VcS/T0I48l5\n0cEJbvD7rMfPodYDM8MnLteyz+WblYmZDcVHvwKlQoUClbazK8Rb353rhNP3Qrjg\nV94sW+xvfGBFa2+9Ci7rfFIJxvRMwFZ9h3fvOHT4Ph9puOD64q9aEvfXmk5yTxs=\n=l349\n-----END PGP SIGNATURE-----\n", "payload": "tree c4c9953e322b7063354ca3e4e91696d3e7dc10bf\nparent c83d3c32815c13d9fa2e881ed97b7163030cd8cc\nparent c01ba2f2e873b8c37616acb888a3a187953e8878\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565972546 +0200\ncommitter GitHub <noreply@github.com> 1565972546 +0200\n\nRollup merge of #63595 - semarie:openbsd-sparc64, r=alexcrichton\n\nadd sparc64-unknown-openbsd target\n\non OpenBSD, some architectures relies on libc++ (from LLVM) and some\nothers on libestdc++ (particular version of libstdc++ from GCC).\n\nsparc64-unknown-openbsd needs libestdc++ and libgcc (as x86_64 some\nyears ago). Reintroduce the support of them for openbsd, only for\nsparc64 arch. Some others architectures on OpenBSD could use them too.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c53ce3b0cf271641530f3160a46ac239ca0c3623", "html_url": "https://github.com/rust-lang/rust/commit/c53ce3b0cf271641530f3160a46ac239ca0c3623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c53ce3b0cf271641530f3160a46ac239ca0c3623/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c83d3c32815c13d9fa2e881ed97b7163030cd8cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c83d3c32815c13d9fa2e881ed97b7163030cd8cc", "html_url": "https://github.com/rust-lang/rust/commit/c83d3c32815c13d9fa2e881ed97b7163030cd8cc"}, {"sha": "c01ba2f2e873b8c37616acb888a3a187953e8878", "url": "https://api.github.com/repos/rust-lang/rust/commits/c01ba2f2e873b8c37616acb888a3a187953e8878", "html_url": "https://github.com/rust-lang/rust/commit/c01ba2f2e873b8c37616acb888a3a187953e8878"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "8391822bb7579cc9d6017857a2a51b6b4abbd1ce", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=c53ce3b0cf271641530f3160a46ac239ca0c3623", "patch": "@@ -250,8 +250,11 @@ fn main() {\n     let llvm_use_libcxx = env::var_os(\"LLVM_USE_LIBCXX\");\n \n     let stdcppname = if target.contains(\"openbsd\") {\n-        // llvm-config on OpenBSD doesn't mention stdlib=libc++\n-        \"c++\"\n+        if target.contains(\"sparc64\") {\n+            \"estdc++\"\n+        } else {\n+            \"c++\"\n+        }\n     } else if target.contains(\"freebsd\") {\n         \"c++\"\n     } else if target.contains(\"darwin\") {"}, {"sha": "31c3dfb502a3b691c518737da558f115546295fa", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=c53ce3b0cf271641530f3160a46ac239ca0c3623", "patch": "@@ -398,6 +398,7 @@ supported_targets! {\n \n     (\"aarch64-unknown-openbsd\", aarch64_unknown_openbsd),\n     (\"i686-unknown-openbsd\", i686_unknown_openbsd),\n+    (\"sparc64-unknown-openbsd\", sparc64_unknown_openbsd),\n     (\"x86_64-unknown-openbsd\", x86_64_unknown_openbsd),\n \n     (\"aarch64-unknown-netbsd\", aarch64_unknown_netbsd),"}, {"sha": "229e0621e0dc1cef92bc52cf3e2ca415685d3d20", "filename": "src/librustc_target/spec/sparc64_unknown_openbsd.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_openbsd.rs?ref=c53ce3b0cf271641530f3160a46ac239ca0c3623", "patch": "@@ -0,0 +1,22 @@\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::openbsd_base::opts();\n+    base.cpu = \"v9\".to_string();\n+    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n+    base.max_atomic_width = Some(64);\n+\n+    Ok(Target {\n+        llvm_target: \"sparc64-unknown-openbsd\".to_string(),\n+        target_endian: \"big\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"E-m:e-i64:64-n32:64-S128\".to_string(),\n+        arch: \"sparc64\".to_string(),\n+        target_os: \"openbsd\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: base,\n+    })\n+}"}, {"sha": "f24d957d67b7588ed323aebdc9ce123a91f6966f", "filename": "src/libunwind/build.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibunwind%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53ce3b0cf271641530f3160a46ac239ca0c3623/src%2Flibunwind%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Fbuild.rs?ref=c53ce3b0cf271641530f3160a46ac239ca0c3623", "patch": "@@ -23,7 +23,11 @@ fn main() {\n     } else if target.contains(\"netbsd\") {\n         println!(\"cargo:rustc-link-lib=gcc_s\");\n     } else if target.contains(\"openbsd\") {\n-        println!(\"cargo:rustc-link-lib=c++abi\");\n+        if target.contains(\"sparc64\") {\n+            println!(\"cargo:rustc-link-lib=gcc\");\n+        } else {\n+            println!(\"cargo:rustc-link-lib=c++abi\");\n+        }\n     } else if target.contains(\"solaris\") {\n         println!(\"cargo:rustc-link-lib=gcc_s\");\n     } else if target.contains(\"dragonfly\") {"}]}