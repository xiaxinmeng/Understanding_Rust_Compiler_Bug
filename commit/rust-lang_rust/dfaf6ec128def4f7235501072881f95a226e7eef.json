{"sha": "dfaf6ec128def4f7235501072881f95a226e7eef", "node_id": "C_kwDOAAsO6NoAKGRmYWY2ZWMxMjhkZWY0ZjcyMzU1MDEwNzI4ODFmOTVhMjI2ZTdlZWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-26T14:57:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-26T14:57:49Z"}, "message": "Rollup merge of #99724 - ehuss:fix-broken-links-fragment, r=Dylan-DPC\n\nFix some broken link fragments.\n\nAn exception for link fragments starting with `-` was added in #49590. However, it is not clear what issues were encountered at the time. Perhaps those were fixed in the meantime.\n\nThis removes the exception, and fixes a couple of broken links that were skipped due to it.", "tree": {"sha": "51ac9849bccbf386371cb28476628b1b9b787c76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51ac9849bccbf386371cb28476628b1b9b787c76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfaf6ec128def4f7235501072881f95a226e7eef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi4ADtCRBK7hj4Ov3rIwAAp4QIAGngeEVfaRYeTRexFf2cYmEZ\nPsrXa8wFFFXvfu24rGcQcM02w4TPett4B1XXo8NwEtP6ZV79gpH9FjEJ2bUj5/HD\nkEZ5w9R2VcAieNIXShTT9eLhP/4aRb7JKxR2lwhiUpUMnAN/DUXr5Dz5TmALDS4R\n5w67gbmG80g01qWje0mXjXIMO2W9ZLcU6JoFMxh8JJm3pb6skibs/Lpxa6wbiXAk\njQRjRuue9JlUd66R6u5oqO1tLEAToaml18/sn8Swl5MW11P4Z/sI+zJ+pRigQuuI\nybe8lz9Fn6tN2J57N5fPVjeh1YTXXereUCQo0p+FclAuaswjZzkkWMtutE2EdsE=\n=E6T+\n-----END PGP SIGNATURE-----\n", "payload": "tree 51ac9849bccbf386371cb28476628b1b9b787c76\nparent ea299e8f316d815693d30f7922b97bfd175d4e95\nparent 91599b44dc7cb5209b2339aa21dcd73fcc5d2597\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1658847469 +0200\ncommitter GitHub <noreply@github.com> 1658847469 +0200\n\nRollup merge of #99724 - ehuss:fix-broken-links-fragment, r=Dylan-DPC\n\nFix some broken link fragments.\n\nAn exception for link fragments starting with `-` was added in #49590. However, it is not clear what issues were encountered at the time. Perhaps those were fixed in the meantime.\n\nThis removes the exception, and fixes a couple of broken links that were skipped due to it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfaf6ec128def4f7235501072881f95a226e7eef", "html_url": "https://github.com/rust-lang/rust/commit/dfaf6ec128def4f7235501072881f95a226e7eef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfaf6ec128def4f7235501072881f95a226e7eef/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea299e8f316d815693d30f7922b97bfd175d4e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea299e8f316d815693d30f7922b97bfd175d4e95", "html_url": "https://github.com/rust-lang/rust/commit/ea299e8f316d815693d30f7922b97bfd175d4e95"}, {"sha": "91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "url": "https://api.github.com/repos/rust-lang/rust/commits/91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "html_url": "https://github.com/rust-lang/rust/commit/91599b44dc7cb5209b2339aa21dcd73fcc5d2597"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "9438948af544a86a22fac07b7d79b87b2777ce97", "filename": "src/doc/rustdoc/src/deprecated-features.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfaf6ec128def4f7235501072881f95a226e7eef/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/dfaf6ec128def4f7235501072881f95a226e7eef/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md?ref=dfaf6ec128def4f7235501072881f95a226e7eef", "patch": "@@ -10,4 +10,4 @@ change in any release.\n \n In the past the most common use case for customizing passes was to omit the `strip-private` pass.\n You can do this more easily, and without risk of the pass being changed, by passing\n-[`--document-private-items`](./unstable-features.md#--document-private-items).\n+[`--document-private-items`](command-line-arguments.md#--document-private-items-show-items-that-are-not-public)."}, {"sha": "32b350074903e14e24e62212020e052c18be7183", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfaf6ec128def4f7235501072881f95a226e7eef/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/dfaf6ec128def4f7235501072881f95a226e7eef/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=dfaf6ec128def4f7235501072881f95a226e7eef", "patch": "@@ -466,7 +466,7 @@ Note that the third item is the crate root, which in this case is undocumented.\n and is also accepted on stable toolchains.\n \n It can also be used with `--show-coverage`. Take a look at its\n-[documentation](#--show-coverage-get-statistics-about-code-documentation-coverage) for more\n+[documentation](#--show-coverage-calculate-the-percentage-of-items-with-documentation) for more\n information.\n \n ### `--enable-per-target-ignores`: allow `ignore-foo` style filters for doctests"}, {"sha": "a7c78d80ccd768d1cd0484bed46b93a997040cb5", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dfaf6ec128def4f7235501072881f95a226e7eef/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfaf6ec128def4f7235501072881f95a226e7eef/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=dfaf6ec128def4f7235501072881f95a226e7eef", "patch": "@@ -348,11 +348,6 @@ impl Checker {\n                     return;\n                 }\n \n-                // These appear to be broken in mdbook right now?\n-                if fragment.starts_with('-') {\n-                    return;\n-                }\n-\n                 parse_ids(&mut target_ids.borrow_mut(), &pretty_path, target_source, report);\n \n                 if target_ids.borrow().contains(*fragment) {"}]}