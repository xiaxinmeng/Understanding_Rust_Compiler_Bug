{"sha": "ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhN2FlNWEzZDBiMTVhMTQ2ZTlmNDJiYmZiOWY1MjEwMmI4ZTc1MDk=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2016-11-19T07:33:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-19T07:33:13Z"}, "message": "don't freeze globals twice", "tree": {"sha": "225a75c54c01800a6f615a82791636f12a7afa8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/225a75c54c01800a6f615a82791636f12a7afa8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509", "html_url": "https://github.com/rust-lang/rust/commit/ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b632d553e8c4590ea349a54254d9aacaea0f543", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b632d553e8c4590ea349a54254d9aacaea0f543", "html_url": "https://github.com/rust-lang/rust/commit/0b632d553e8c4590ea349a54254d9aacaea0f543"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "4e7241c8f00f3981993ec908ae29d6155017fa73", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=ca7ae5a3d0b15a146e9f42bbfb9f52102b8e7509", "patch": "@@ -383,9 +383,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         }\n                     },\n                 }\n-                if let Value::ByRef(ptr) = global_value.data.expect(\"global should have been initialized\") {\n-                    self.memory.freeze(ptr.alloc_id)?;\n-                }\n                 assert!(global_value.mutable);\n                 global_value.mutable = false;\n             } else {"}]}