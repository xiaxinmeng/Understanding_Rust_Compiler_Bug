{"sha": "78934b03e39af86e60bdafcfe186b0f88c5b192e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4OTM0YjAzZTM5YWY4NmU2MGJkYWZjZmUxODZiMGY4OGM1YjE5MmU=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-06T18:59:33Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-06T18:59:33Z"}, "message": "Add a kind_of_move_of_path method to FlowedMoveData.", "tree": {"sha": "cb87ebbf23707ea6d2539389c3faf292352e8b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb87ebbf23707ea6d2539389c3faf292352e8b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78934b03e39af86e60bdafcfe186b0f88c5b192e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78934b03e39af86e60bdafcfe186b0f88c5b192e", "html_url": "https://github.com/rust-lang/rust/commit/78934b03e39af86e60bdafcfe186b0f88c5b192e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78934b03e39af86e60bdafcfe186b0f88c5b192e/comments", "author": null, "committer": null, "parents": [{"sha": "40e3fb4c0b46569b0ab4f5642ed1726915d59e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/40e3fb4c0b46569b0ab4f5642ed1726915d59e98", "html_url": "https://github.com/rust-lang/rust/commit/40e3fb4c0b46569b0ab4f5642ed1726915d59e98"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "3e38aed20ce89b9d896593e67c27d23ac7642feb", "filename": "src/librustc/middle/borrowck/move_data.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/78934b03e39af86e60bdafcfe186b0f88c5b192e/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78934b03e39af86e60bdafcfe186b0f88c5b192e/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmove_data.rs?ref=78934b03e39af86e60bdafcfe186b0f88c5b192e", "patch": "@@ -537,6 +537,28 @@ impl<'a> FlowedMoveData<'a> {\n         })\n     }\n \n+    pub fn kind_of_move_of_path(&self,\n+                                id: ast::NodeId,\n+                                loan_path: &Rc<LoanPath>)\n+                                -> Option<MoveKind> {\n+        //! Returns the kind of a move of `loan_path` by `id`, if one exists.\n+\n+        let mut ret = None;\n+        for loan_path_index in self.move_data.path_map.borrow().find(&*loan_path).iter() {\n+            self.dfcx_moves.each_gen_bit_frozen(id, |move_index| {\n+                let move = self.move_data.moves.borrow();\n+                let move = move.get(move_index);\n+                if move.path == **loan_path_index {\n+                    ret = Some(move.kind);\n+                    false\n+                } else {\n+                    true\n+                }\n+            });\n+        }\n+        ret\n+    }\n+\n     pub fn each_move_of(&self,\n                         id: ast::NodeId,\n                         loan_path: &Rc<LoanPath>,"}]}