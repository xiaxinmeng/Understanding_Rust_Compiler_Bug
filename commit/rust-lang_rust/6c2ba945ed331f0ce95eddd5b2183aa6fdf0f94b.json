{"sha": "6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMmJhOTQ1ZWQzMzFmMGNlOTVlZGRkNWIyMTgzYWE2ZmRmMGY5NGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-11T12:35:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-11T13:29:33Z"}, "message": "reduce visibility", "tree": {"sha": "f9c68892423a362fabc792ec793d623ded3dfe2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9c68892423a362fabc792ec793d623ded3dfe2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b", "html_url": "https://github.com/rust-lang/rust/commit/6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "505acc973b3b865195d7d0aeb47c419c35f6bbbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/505acc973b3b865195d7d0aeb47c419c35f6bbbc", "html_url": "https://github.com/rust-lang/rust/commit/505acc973b3b865195d7d0aeb47c419c35f6bbbc"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1f1d05409bbbd9709e87df27281ec74b3175d7a1", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=6c2ba945ed331f0ce95eddd5b2183aa6fdf0f94b", "patch": "@@ -80,7 +80,7 @@ enum FnCallNode<'a> {\n }\n \n impl<'a> FnCallNode<'a> {\n-    pub fn with_node(syntax: &'a SyntaxNode, offset: TextUnit) -> Option<FnCallNode<'a>> {\n+    fn with_node(syntax: &'a SyntaxNode, offset: TextUnit) -> Option<FnCallNode<'a>> {\n         if let Some(expr) = find_node_at_offset::<ast::CallExpr>(syntax, offset) {\n             return Some(FnCallNode::CallExpr(expr));\n         }\n@@ -90,7 +90,7 @@ impl<'a> FnCallNode<'a> {\n         None\n     }\n \n-    pub fn name_ref(&self) -> Option<&'a ast::NameRef> {\n+    fn name_ref(&self) -> Option<&'a ast::NameRef> {\n         match *self {\n             FnCallNode::CallExpr(call_expr) => Some(match call_expr.expr()?.kind() {\n                 ast::ExprKind::PathExpr(path_expr) => path_expr.path()?.segment()?.name_ref()?,\n@@ -103,7 +103,7 @@ impl<'a> FnCallNode<'a> {\n         }\n     }\n \n-    pub fn arg_list(&self) -> Option<&'a ast::ArgList> {\n+    fn arg_list(&self) -> Option<&'a ast::ArgList> {\n         match *self {\n             FnCallNode::CallExpr(expr) => expr.arg_list(),\n             FnCallNode::MethodCallExpr(expr) => expr.arg_list(),"}]}