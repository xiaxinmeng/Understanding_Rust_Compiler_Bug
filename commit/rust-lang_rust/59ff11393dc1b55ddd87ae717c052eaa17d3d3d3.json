{"sha": "59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZmYxMTM5M2RjMWI1NWRkZDg3YWU3MTdjMDUyZWFhMTdkM2QzZDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-08T22:58:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-08T22:58:25Z"}, "message": "Rollup merge of #60550 - skinny121:concrete_const_tests, r=varkor\n\nAdd tests for concrete const types\n\nIn response to the request for help in https://github.com/rust-lang/rust/issues/44580#issuecomment-488819344, I have added several ui tests around the use of concrete const types, i.e. A<2>.\n\nr? @varkor", "tree": {"sha": "4516c3fcfe02c898f6d865e132d42005bd60f0fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4516c3fcfe02c898f6d865e132d42005bd60f0fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc018RCRBK7hj4Ov3rIwAAdHIIACMGIAS7keZPLyERS6qbCVFq\nSDdSkYQp6CnZs8FbRCVGm1rWOw2oLHIWqvnhQSHZ4sZzcEPUBuCV5n2DioWJ8lQC\nl5YzW2doR/XJKTkIr2RCPkWh65/WEmVFo07mN0mM3Y5jkypxAJ2jweQalvRol/ph\nB50RZlTGJdYCEpRCg9aVCVloPgFCM+fqPjK6E+XytHQyh0UCqi7lzmdk2yfU1wSy\n38lb691pCMYUz6c+bdL7+TFhDt+j5vFBWG+0maAxLpgiPUYNTKLS19V1HlKR0lpA\nB1He6rtHstmNyvU75fO5V62kDWQRELdtIEDRE4wi9QFOLgN0krfraEZEg+rDw0Y=\n=paM4\n-----END PGP SIGNATURE-----\n", "payload": "tree 4516c3fcfe02c898f6d865e132d42005bd60f0fa\nparent cfed892cb37ef5f1dce29d2e38d3a2eb9f86bb53\nparent bfa15f39888a514f1eb164e210cf5d85b33146e1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557356305 +0200\ncommitter GitHub <noreply@github.com> 1557356305 +0200\n\nRollup merge of #60550 - skinny121:concrete_const_tests, r=varkor\n\nAdd tests for concrete const types\n\nIn response to the request for help in https://github.com/rust-lang/rust/issues/44580#issuecomment-488819344, I have added several ui tests around the use of concrete const types, i.e. A<2>.\n\nr? @varkor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "html_url": "https://github.com/rust-lang/rust/commit/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfed892cb37ef5f1dce29d2e38d3a2eb9f86bb53", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfed892cb37ef5f1dce29d2e38d3a2eb9f86bb53", "html_url": "https://github.com/rust-lang/rust/commit/cfed892cb37ef5f1dce29d2e38d3a2eb9f86bb53"}, {"sha": "bfa15f39888a514f1eb164e210cf5d85b33146e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa15f39888a514f1eb164e210cf5d85b33146e1", "html_url": "https://github.com/rust-lang/rust/commit/bfa15f39888a514f1eb164e210cf5d85b33146e1"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "54981b77a2b84801d0f07cd3faec6b69725f9565", "filename": "src/test/ui/const-generics/concrete-const-as-fn-arg.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.rs?ref=59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "patch": "@@ -0,0 +1,14 @@\n+// Test that a concrete const type i.e. A<2>, can be used as an argument type in a function\n+// run-pass\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+struct A<const N: usize>; // ok\n+\n+fn with_concrete_const_arg(_: A<2>) -> u32 { 17 }\n+\n+fn main() {\n+    let val: A<2> = A;\n+    assert_eq!(with_concrete_const_arg(val), 17);\n+}"}, {"sha": "955b319d7004460b27e969c533cac716e294edc8", "filename": "src/test/ui/const-generics/concrete-const-as-fn-arg.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr?ref=59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "patch": "@@ -0,0 +1,6 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/concrete-const-as-fn-arg.rs:4:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+"}, {"sha": "226ea4151806ecd68688738afba44578fdb2ae78", "filename": "src/test/ui/const-generics/concrete-const-impl-method.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.rs?ref=59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "patch": "@@ -0,0 +1,24 @@\n+// Test that a method/associated non-method within an impl block of a concrete const type i.e. A<2>,\n+// is callable.\n+// run-pass\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+pub struct A<const N: u32>;\n+\n+impl A<2> {\n+    fn impl_method(&self) -> u32 {\n+        17\n+    }\n+\n+    fn associated_non_method() -> u32 {\n+        17\n+    }\n+}\n+\n+fn main() {\n+    let val: A<2> = A;\n+    assert_eq!(val.impl_method(), 17);\n+    assert_eq!(A::<2>::associated_non_method(), 17);\n+}"}, {"sha": "3ce488c62755a2c4612b89e31330ef1a9f756009", "filename": "src/test/ui/const-generics/concrete-const-impl-method.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59ff11393dc1b55ddd87ae717c052eaa17d3d3d3/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr?ref=59ff11393dc1b55ddd87ae717c052eaa17d3d3d3", "patch": "@@ -0,0 +1,6 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/concrete-const-impl-method.rs:5:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+"}]}