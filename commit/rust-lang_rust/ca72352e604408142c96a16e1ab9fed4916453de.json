{"sha": "ca72352e604408142c96a16e1ab9fed4916453de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNzIzNTJlNjA0NDA4MTQyYzk2YTE2ZTFhYjlmZWQ0OTE2NDUzZGU=", "commit": {"author": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-04T16:33:05Z"}, "committer": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-05T00:08:26Z"}, "message": "Suggest removing semicolon in last expression only if it's type is known", "tree": {"sha": "50c88236b7555ed54b1110fa26de5d797ce76478", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50c88236b7555ed54b1110fa26de5d797ce76478"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca72352e604408142c96a16e1ab9fed4916453de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca72352e604408142c96a16e1ab9fed4916453de", "html_url": "https://github.com/rust-lang/rust/commit/ca72352e604408142c96a16e1ab9fed4916453de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca72352e604408142c96a16e1ab9fed4916453de/comments", "author": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d626e4dadc37d7027d65f087da0ad1ddb460959f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d626e4dadc37d7027d65f087da0ad1ddb460959f", "html_url": "https://github.com/rust-lang/rust/commit/d626e4dadc37d7027d65f087da0ad1ddb460959f"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "b8f1fb00de9ef346641cf3a042a9ed4566e6a57d", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca72352e604408142c96a16e1ab9fed4916453de/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca72352e604408142c96a16e1ab9fed4916453de/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ca72352e604408142c96a16e1ab9fed4916453de", "patch": "@@ -5387,7 +5387,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             _ => return None,\n         };\n         let last_expr_ty = self.node_ty(last_expr.hir_id);\n-        if self.can_sub(self.param_env, last_expr_ty, expected_ty).is_err() {\n+        if matches!(last_expr_ty.kind, ty::Error)\n+            || self.can_sub(self.param_env, last_expr_ty, expected_ty).is_err()\n+        {\n             return None;\n         }\n         let original_span = original_sp(last_stmt.span, blk.span);"}, {"sha": "a443db40732ac4acdff2001e07e09ea3ae629353", "filename": "src/test/ui/issues/issue-43162.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca72352e604408142c96a16e1ab9fed4916453de/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca72352e604408142c96a16e1ab9fed4916453de/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43162.stderr?ref=ca72352e604408142c96a16e1ab9fed4916453de", "patch": "@@ -17,9 +17,6 @@ LL | fn foo() -> bool {\n    |    ---      ^^^^ expected `bool`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n-LL |\n-LL |     break true;\n-   |               - help: consider removing this semicolon\n \n error: aborting due to 3 previous errors\n "}, {"sha": "8bf725cb5ee38129377237df1aafdaf074432f19", "filename": "src/test/ui/typeck/issue-67971.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ca72352e604408142c96a16e1ab9fed4916453de/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca72352e604408142c96a16e1ab9fed4916453de/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.rs?ref=ca72352e604408142c96a16e1ab9fed4916453de", "patch": "@@ -0,0 +1,9 @@\n+struct S {}\n+\n+fn foo(ctx: &mut S) -> String { //~ ERROR mismatched types\n+    // Don't suggest to remove semicolon as it won't fix anything\n+    ctx.sleep = 0;\n+    //~^ ERROR no field `sleep` on type `&mut S`\n+}\n+\n+fn main() {}"}, {"sha": "36ad3fcb342a88c0b3c2db172d9476d2fcbeedb8", "filename": "src/test/ui/typeck/issue-67971.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ca72352e604408142c96a16e1ab9fed4916453de/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca72352e604408142c96a16e1ab9fed4916453de/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-67971.stderr?ref=ca72352e604408142c96a16e1ab9fed4916453de", "patch": "@@ -0,0 +1,18 @@\n+error[E0609]: no field `sleep` on type `&mut S`\n+  --> $DIR/issue-67971.rs:5:9\n+   |\n+LL |     ctx.sleep = 0;\n+   |         ^^^^^ unknown field\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-67971.rs:3:24\n+   |\n+LL | fn foo(ctx: &mut S) -> String {\n+   |    ---                 ^^^^^^ expected struct `std::string::String`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0308, E0609.\n+For more information about an error, try `rustc --explain E0308`."}]}