{"sha": "a674f852db184f07b6ccc81b9fab230036873e57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NzRmODUyZGIxODRmMDdiNmNjYzgxYjlmYWIyMzAwMzY4NzNlNTc=", "commit": {"author": {"name": "Diggory Blake", "email": "diggsey@googlemail.com", "date": "2015-01-19T05:43:15Z"}, "committer": {"name": "Diggory Blake", "email": "diggsey@googlemail.com", "date": "2015-01-19T05:43:15Z"}, "message": "Ranges implement Clone where possible", "tree": {"sha": "3fb57e6de985a4dd2b5ebe777ca481789373d9a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fb57e6de985a4dd2b5ebe777ca481789373d9a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a674f852db184f07b6ccc81b9fab230036873e57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a674f852db184f07b6ccc81b9fab230036873e57", "html_url": "https://github.com/rust-lang/rust/commit/a674f852db184f07b6ccc81b9fab230036873e57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a674f852db184f07b6ccc81b9fab230036873e57/comments", "author": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcaeb6aa23ecba2dc2af870668a9239136d20fa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcaeb6aa23ecba2dc2af870668a9239136d20fa3", "html_url": "https://github.com/rust-lang/rust/commit/dcaeb6aa23ecba2dc2af870668a9239136d20fa3"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "7131253d5c40cf04671d14ba7cce1380ce1a7568", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a674f852db184f07b6ccc81b9fab230036873e57/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a674f852db184f07b6ccc81b9fab230036873e57/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=a674f852db184f07b6ccc81b9fab230036873e57", "patch": "@@ -880,7 +880,7 @@ pub trait IndexMut<Index: ?Sized> {\n }\n \n /// An unbounded range.\n-#[derive(Copy, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq)]\n #[lang=\"full_range\"]\n #[unstable = \"API still in development\"]\n pub struct FullRange;\n@@ -893,7 +893,7 @@ impl fmt::Show for FullRange {\n }\n \n /// A (half-open) range which is bounded at both ends.\n-#[derive(Copy, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq)]\n #[lang=\"range\"]\n #[unstable = \"API still in development\"]\n pub struct Range<Idx> {\n@@ -952,7 +952,7 @@ impl<Idx: fmt::Show> fmt::Show for Range<Idx> {\n }\n \n /// A range which is only bounded below.\n-#[derive(Copy, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq)]\n #[lang=\"range_from\"]\n #[unstable = \"API still in development\"]\n pub struct RangeFrom<Idx> {\n@@ -981,7 +981,7 @@ impl<Idx: fmt::Show> fmt::Show for RangeFrom<Idx> {\n }\n \n /// A range which is only bounded above.\n-#[derive(Copy, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq)]\n #[lang=\"range_to\"]\n #[unstable = \"API still in development\"]\n pub struct RangeTo<Idx> {"}, {"sha": "0ec33d218f9a9117e40c523d51cb5401a7f8627c", "filename": "src/test/run-pass/issue-21384.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a674f852db184f07b6ccc81b9fab230036873e57/src%2Ftest%2Frun-pass%2Fissue-21384.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a674f852db184f07b6ccc81b9fab230036873e57/src%2Ftest%2Frun-pass%2Fissue-21384.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21384.rs?ref=a674f852db184f07b6ccc81b9fab230036873e57", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn test<T : Clone>(arg: T) -> T {\n+    arg.clone()\n+}\n+\n+#[derive(PartialEq)]\n+struct Test(int);\n+\n+fn main() {\n+    // Check that ranges implement clone\n+    assert!(test(1..5) == (1..5));\n+    assert!(test(..5) == (..5));\n+    assert!(test(1..) == (1..));\n+    assert!(test(FullRange) == (FullRange));\n+\n+    // Check that ranges can still be used with non-clone limits\n+    assert!((Test(1)..Test(5)) == (Test(1)..Test(5)));\n+}"}]}