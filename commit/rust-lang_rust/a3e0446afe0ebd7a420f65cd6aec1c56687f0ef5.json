{"sha": "a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZTA0NDZhZmUwZWJkN2E0MjBmNjVjZDZhZWMxYzU2Njg3ZjBlZjU=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-13T07:31:53Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-13T07:31:53Z"}, "message": "Extend to the `assert` macro family", "tree": {"sha": "6682cb57f733f7a0022c1073571787f2b9319300", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6682cb57f733f7a0022c1073571787f2b9319300"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "html_url": "https://github.com/rust-lang/rust/commit/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fdb8fb0c15ddc202eed70b82babca8d529e39b", "url": "https://api.github.com/repos/rust-lang/rust/commits/32fdb8fb0c15ddc202eed70b82babca8d529e39b", "html_url": "https://github.com/rust-lang/rust/commit/32fdb8fb0c15ddc202eed70b82babca8d529e39b"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "a95d71042ee272a6674f451e11eb8e5798bc6079", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "patch": "@@ -7,6 +7,7 @@ use rustc_ast::{ast, token};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOp, BinOpKind, BorrowKind, Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_parse::parser;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n@@ -64,10 +65,20 @@ declare_lint_pass!(EqOp => [EQ_OP, OP_REF]);\n \n impl EarlyLintPass for EqOp {\n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::MacCall) {\n+        let macro_list = [\n+            sym!(assert_eq),\n+            sym!(assert_ne),\n+            sym!(debug_assert_eq),\n+            sym!(debug_assert_ne),\n+        ];\n         if_chain! {\n-            if mac.path == sym!(assert_eq);\n+            if !in_external_macro(cx.sess, mac.span());\n+            if mac.path.segments.len() == 1;\n+            let macro_name = mac.path.segments[0].ident.name;\n+            if macro_list.contains(&macro_name);\n             let tokens = mac.args.inner_tokens();\n-            let mut parser = parser::Parser::new(&cx.sess.parse_sess, tokens, false, None);\n+            let mut parser = parser::Parser::new(\n+                &cx.sess.parse_sess, tokens, false, None);\n             if let Ok(left) = parser.parse_expr();\n             if parser.eat(&token::Comma);\n             if let Ok(right) = parser.parse_expr();\n@@ -80,7 +91,7 @@ impl EarlyLintPass for EqOp {\n                     cx,\n                     EQ_OP,\n                     left_expr.span.to(right_expr.span),\n-                    \"identical args used in this `assert_eq!` macro call\",\n+                    &format!(\"identical args used in this `{}!` macro call\", macro_name),\n                 );\n             }\n         }"}, {"sha": "25e1c6ac6b75b45c02b2d3a8707bfb1c293cc113", "filename": "tests/ui/eq_op_early.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/tests%2Fui%2Feq_op_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/tests%2Fui%2Feq_op_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op_early.rs?ref=a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "patch": "@@ -7,9 +7,32 @@ fn main() {\n     // lint identical args in `assert_eq!` (see #3574)\n     assert_eq!(a, a);\n     assert_eq!(a + 1, a + 1);\n-\n     // ok\n     assert_eq!(a, b);\n     assert_eq!(a, a + 1);\n     assert_eq!(a + 1, b + 1);\n+\n+    // lint identical args in `assert_ne!`\n+    assert_ne!(a, a);\n+    assert_ne!(a + 1, a + 1);\n+    // ok\n+    assert_ne!(a, b);\n+    assert_ne!(a, a + 1);\n+    assert_ne!(a + 1, b + 1);\n+\n+    // lint identical args in `debug_assert_eq!`\n+    debug_assert_eq!(a, a);\n+    debug_assert_eq!(a + 1, a + 1);\n+    // ok\n+    debug_assert_eq!(a, b);\n+    debug_assert_eq!(a, a + 1);\n+    debug_assert_eq!(a + 1, b + 1);\n+\n+    // lint identical args in `debug_assert_ne!`\n+    debug_assert_ne!(a, a);\n+    debug_assert_ne!(a + 1, a + 1);\n+    // ok\n+    debug_assert_ne!(a, b);\n+    debug_assert_ne!(a, a + 1);\n+    debug_assert_ne!(a + 1, b + 1);\n }"}, {"sha": "1df094fae180278c7be922f6a933e466b770f6f9", "filename": "tests/ui/eq_op_early.stderr", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/tests%2Fui%2Feq_op_early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5/tests%2Fui%2Feq_op_early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op_early.stderr?ref=a3e0446afe0ebd7a420f65cd6aec1c56687f0ef5", "patch": "@@ -12,5 +12,41 @@ error: identical args used in this `assert_eq!` macro call\n LL |     assert_eq!(a + 1, a + 1);\n    |                ^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: identical args used in this `assert_ne!` macro call\n+  --> $DIR/eq_op_early.rs:16:16\n+   |\n+LL |     assert_ne!(a, a);\n+   |                ^^^^\n+\n+error: identical args used in this `assert_ne!` macro call\n+  --> $DIR/eq_op_early.rs:17:16\n+   |\n+LL |     assert_ne!(a + 1, a + 1);\n+   |                ^^^^^^^^^^^^\n+\n+error: identical args used in this `debug_assert_eq!` macro call\n+  --> $DIR/eq_op_early.rs:24:22\n+   |\n+LL |     debug_assert_eq!(a, a);\n+   |                      ^^^^\n+\n+error: identical args used in this `debug_assert_eq!` macro call\n+  --> $DIR/eq_op_early.rs:25:22\n+   |\n+LL |     debug_assert_eq!(a + 1, a + 1);\n+   |                      ^^^^^^^^^^^^\n+\n+error: identical args used in this `debug_assert_ne!` macro call\n+  --> $DIR/eq_op_early.rs:32:22\n+   |\n+LL |     debug_assert_ne!(a, a);\n+   |                      ^^^^\n+\n+error: identical args used in this `debug_assert_ne!` macro call\n+  --> $DIR/eq_op_early.rs:33:22\n+   |\n+LL |     debug_assert_ne!(a + 1, a + 1);\n+   |                      ^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n "}]}