{"sha": "bea6ab23f9db9daa481187e2feea46f26da01a72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYTZhYjIzZjlkYjlkYWE0ODExODdlMmZlZWE0NmYyNmRhMDFhNzI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-12-12T04:12:46Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-12-19T17:23:37Z"}, "message": "enable LLVM's SPARC backend", "tree": {"sha": "fe894e45788bb127dd65e58c8c250a2a6d7664c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe894e45788bb127dd65e58c8c250a2a6d7664c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea6ab23f9db9daa481187e2feea46f26da01a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea6ab23f9db9daa481187e2feea46f26da01a72", "html_url": "https://github.com/rust-lang/rust/commit/bea6ab23f9db9daa481187e2feea46f26da01a72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea6ab23f9db9daa481187e2feea46f26da01a72/comments", "author": null, "committer": null, "parents": [{"sha": "10271ea24fbd7b28a42df8eb02a8dcf6d6132d71", "url": "https://api.github.com/repos/rust-lang/rust/commits/10271ea24fbd7b28a42df8eb02a8dcf6d6132d71", "html_url": "https://github.com/rust-lang/rust/commit/10271ea24fbd7b28a42df8eb02a8dcf6d6132d71"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "09dbd9f8220b0922d32eba5ff3d2e03ddf29312a", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea6ab23f9db9daa481187e2feea46f26da01a72/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea6ab23f9db9daa481187e2feea46f26da01a72/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=bea6ab23f9db9daa481187e2feea46f26da01a72", "patch": "@@ -81,7 +81,7 @@ pub fn llvm(build: &Build, target: &str) {\n        .profile(profile)\n        .define(\"LLVM_ENABLE_ASSERTIONS\", assertions)\n        .define(\"LLVM_TARGETS_TO_BUILD\",\n-               \"X86;ARM;AArch64;Mips;PowerPC;SystemZ;JSBackend;MSP430\")\n+               \"X86;ARM;AArch64;Mips;PowerPC;SystemZ;JSBackend;MSP430;Sparc\")\n        .define(\"LLVM_INCLUDE_EXAMPLES\", \"OFF\")\n        .define(\"LLVM_INCLUDE_TESTS\", \"OFF\")\n        .define(\"LLVM_INCLUDE_DOCS\", \"OFF\")"}, {"sha": "657cb0ece066ac7b6d6da31c6820a165bc3ec6a0", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea6ab23f9db9daa481187e2feea46f26da01a72/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea6ab23f9db9daa481187e2feea46f26da01a72/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=bea6ab23f9db9daa481187e2feea46f26da01a72", "patch": "@@ -95,7 +95,7 @@ fn main() {\n     let is_crossed = target != host;\n \n     let optional_components =\n-        [\"x86\", \"arm\", \"aarch64\", \"mips\", \"powerpc\", \"pnacl\", \"systemz\", \"jsbackend\", \"msp430\"];\n+        [\"x86\", \"arm\", \"aarch64\", \"mips\", \"powerpc\", \"pnacl\", \"systemz\", \"jsbackend\", \"msp430\", \"sparc\"];\n \n     // FIXME: surely we don't need all these components, right? Stuff like mcjit\n     //        or interpreter the compiler itself never uses."}, {"sha": "aa63ca7089b7111e055aa3bad0b2f92835e8a400", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bea6ab23f9db9daa481187e2feea46f26da01a72/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea6ab23f9db9daa481187e2feea46f26da01a72/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=bea6ab23f9db9daa481187e2feea46f26da01a72", "patch": "@@ -370,6 +370,12 @@ pub fn initialize_available_targets() {\n                  LLVMInitializeMSP430Target,\n                  LLVMInitializeMSP430TargetMC,\n                  LLVMInitializeMSP430AsmPrinter);\n+    init_target!(llvm_component = \"sparc\",\n+                 LLVMInitializeSparcTargetInfo,\n+                 LLVMInitializeSparcTarget,\n+                 LLVMInitializeSparcTargetMC,\n+                 LLVMInitializeSparcAsmPrinter,\n+                 LLVMInitializeSparcAsmParser);\n }\n \n pub fn last_error() -> Option<String> {"}]}