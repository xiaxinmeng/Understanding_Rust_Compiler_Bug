{"sha": "e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NzM1ZGRlYzAxNTUxZDNmN2IzZDRkNzY1MjdkMmQwYmI3MGUyNDI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-17T02:44:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-17T02:44:12Z"}, "message": "Rollup merge of #80097 - SimonSapin:popcount, r=m-ou-se\n\nAdd `popcount` and `popcnt` as doc aliases for `count_ones` methods.\n\nInteger types have a `count_ones` method that end up calling `intrinsics::ctpop`. On some architectures, that intrinsic is translated as a corresponding CPU instruction know as \"popcount\" or \"popcnt\".\n\nThis PR makes it so that searching for those names in rustdoc shows those methods.\n\nCC https://blog.rust-lang.org/2020/11/19/Rust-1.48.html#adding-search-aliases", "tree": {"sha": "22abf9c91374ce7d9d736e50bb4323dfe8676757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22abf9c91374ce7d9d736e50bb4323dfe8676757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf2sX8CRBK7hj4Ov3rIwAAdHIIAIttnSB583jLLjAjNzGMOWcx\nI0hYYpsQtKBiZf83v6ArjcQHxWTgPxnpZT7at/nxxNnPvpVQmXVmQAtjEy48LNhZ\nle399gSiOTQ10fhRmZKh5cehBXZbcTr+sNRmr+0gaOiT/s0h4XKjzyaIvv1JUUEq\nR3+qkAOVOsrHe7PnjrYBzVutCyIlrLtobg3mIelwxiPW4JnVVMHKA491iWPvDBZx\nLhiNepeA67s9wu75RyO3hr9abzabgKgmdaCfHu9ICQSw5CsodfgLZutU8Ve1Jr+V\nQov4gd0e9Xki7McBexDLk5EXdaTbn96UrRfGJj6+PPIItB28cEoAixdk5UrzKeQ=\n=X01G\n-----END PGP SIGNATURE-----\n", "payload": "tree 22abf9c91374ce7d9d736e50bb4323dfe8676757\nparent 5ce62da43bd66b03b9550d31fb180915f40cd473\nparent f365de353ad3d48b5e9269ebc373f82d5aeb19d0\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1608173052 +0900\ncommitter GitHub <noreply@github.com> 1608173052 +0900\n\nRollup merge of #80097 - SimonSapin:popcount, r=m-ou-se\n\nAdd `popcount` and `popcnt` as doc aliases for `count_ones` methods.\n\nInteger types have a `count_ones` method that end up calling `intrinsics::ctpop`. On some architectures, that intrinsic is translated as a corresponding CPU instruction know as \"popcount\" or \"popcnt\".\n\nThis PR makes it so that searching for those names in rustdoc shows those methods.\n\nCC https://blog.rust-lang.org/2020/11/19/Rust-1.48.html#adding-search-aliases\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "html_url": "https://github.com/rust-lang/rust/commit/e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ce62da43bd66b03b9550d31fb180915f40cd473", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce62da43bd66b03b9550d31fb180915f40cd473", "html_url": "https://github.com/rust-lang/rust/commit/5ce62da43bd66b03b9550d31fb180915f40cd473"}, {"sha": "f365de353ad3d48b5e9269ebc373f82d5aeb19d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f365de353ad3d48b5e9269ebc373f82d5aeb19d0", "html_url": "https://github.com/rust-lang/rust/commit/f365de353ad3d48b5e9269ebc373f82d5aeb19d0"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2cde5d9995b62ec9908e8212ce880f595e08e302", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "patch": "@@ -92,6 +92,8 @@ $EndFeature, \"\n \"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             #[rustc_const_stable(feature = \"const_int_methods\", since = \"1.32.0\")]\n+            #[doc(alias = \"popcount\")]\n+            #[doc(alias = \"popcnt\")]\n             #[inline]\n             pub const fn count_ones(self) -> u32 { (self as $UnsignedT).count_ones() }\n         }"}, {"sha": "ae8fc18a83882adec91e0e542b95653975abb7e1", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "patch": "@@ -90,6 +90,8 @@ assert_eq!(n.count_ones(), 3);\", $EndFeature, \"\n ```\"),\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             #[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]\n+            #[doc(alias = \"popcount\")]\n+            #[doc(alias = \"popcnt\")]\n             #[inline]\n             pub const fn count_ones(self) -> u32 {\n                 intrinsics::ctpop(self as $ActualT) as u32"}, {"sha": "77c9a93008c91c3e28354639532b111c1ba09e6e", "filename": "library/core/src/num/wrapping.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/library%2Fcore%2Fsrc%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4735ddec01551d3f7b3d4d76527d2d0bb70e242/library%2Fcore%2Fsrc%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fwrapping.rs?ref=e4735ddec01551d3f7b3d4d76527d2d0bb70e242", "patch": "@@ -453,6 +453,8 @@ let n = Wrapping(0b01001100\", stringify!($t), \");\n assert_eq!(n.count_ones(), 3);\n ```\"),\n                 #[inline]\n+                #[doc(alias = \"popcount\")]\n+                #[doc(alias = \"popcnt\")]\n                 #[unstable(feature = \"wrapping_int_impl\", issue = \"32463\")]\n                 pub const fn count_ones(self) -> u32 {\n                     self.0.count_ones()"}]}