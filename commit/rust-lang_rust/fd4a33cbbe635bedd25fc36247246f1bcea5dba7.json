{"sha": "fd4a33cbbe635bedd25fc36247246f1bcea5dba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNGEzM2NiYmU2MzViZWRkMjVmYzM2MjQ3MjQ2ZjFiY2VhNWRiYTc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-11T19:27:24Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-17T09:33:14Z"}, "message": "Update doctest tests", "tree": {"sha": "b2d5170c3b19c0ac066c21575f396a5d0c5e778a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2d5170c3b19c0ac066c21575f396a5d0c5e778a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4a33cbbe635bedd25fc36247246f1bcea5dba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a33cbbe635bedd25fc36247246f1bcea5dba7", "html_url": "https://github.com/rust-lang/rust/commit/fd4a33cbbe635bedd25fc36247246f1bcea5dba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a33cbbe635bedd25fc36247246f1bcea5dba7/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32d64edcf9d31ded609ab70b31bd3779d6f85ec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/32d64edcf9d31ded609ab70b31bd3779d6f85ec1", "html_url": "https://github.com/rust-lang/rust/commit/32d64edcf9d31ded609ab70b31bd3779d6f85ec1"}], "stats": {"total": 68, "additions": 34, "deletions": 34}, "files": [{"sha": "a024e9c72a43e01969a2523dfca486cc115a7b67", "filename": "src/librustdoc/doctest/tests.rs", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/fd4a33cbbe635bedd25fc36247246f1bcea5dba7/src%2Flibrustdoc%2Fdoctest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4a33cbbe635bedd25fc36247246f1bcea5dba7/src%2Flibrustdoc%2Fdoctest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest%2Ftests.rs?ref=fd4a33cbbe635bedd25fc36247246f1bcea5dba7", "patch": "@@ -11,8 +11,8 @@ fn main() {\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -26,8 +26,8 @@ fn main() {\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -44,8 +44,8 @@ use asdf::qwop;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 3));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 3));\n }\n \n #[test]\n@@ -61,8 +61,8 @@ use asdf::qwop;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -79,8 +79,8 @@ use std::*;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"std\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, Some(\"std\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -98,8 +98,8 @@ use asdf::qwop;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -115,8 +115,8 @@ use asdf::qwop;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -134,8 +134,8 @@ use asdf::qwop;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 3));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 3));\n \n     // Adding more will also bump the returned line offset.\n     opts.attrs.push(\"feature(hella_dope)\".to_string());\n@@ -147,8 +147,8 @@ use asdf::qwop;\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 4));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 4));\n }\n \n #[test]\n@@ -164,8 +164,8 @@ fn main() {\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -180,8 +180,8 @@ fn main() {\n     assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 1));\n+    let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 1));\n }\n \n #[test]\n@@ -196,8 +196,8 @@ fn main() {\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n }\n \n #[test]\n@@ -210,8 +210,8 @@ assert_eq!(2+2, 4);\";\n //Ceci n'est pas une `fn main`\n assert_eq!(2+2, 4);\"\n         .to_string();\n-    let output = make_test(input, None, true, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 1));\n+    let (output, len, _) = make_test(input, None, true, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 1));\n }\n \n #[test]\n@@ -224,8 +224,8 @@ fn make_test_display_warnings() {\n assert_eq!(2+2, 4);\n }\"\n     .to_string();\n-    let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 1));\n+    let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 1));\n }\n \n #[test]\n@@ -242,8 +242,8 @@ assert_eq!(2+2, 4);\n }\"\n     .to_string();\n \n-    let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 2));\n+    let (output, len, _) = make_test(input, None, false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 2));\n \n     let input = \"extern crate hella_qwop;\n assert_eq!(asdf::foo, 4);\";\n@@ -256,8 +256,8 @@ assert_eq!(asdf::foo, 4);\n }\"\n     .to_string();\n \n-    let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 3));\n+    let (output, len, _) = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 3));\n }\n \n #[test]\n@@ -274,6 +274,6 @@ test_wrapper! {\n }\"\n     .to_string();\n \n-    let output = make_test(input, Some(\"my_crate\"), false, &opts, DEFAULT_EDITION);\n-    assert_eq!(output, (expected, 1));\n+    let (output, len, _) = make_test(input, Some(\"my_crate\"), false, &opts, DEFAULT_EDITION);\n+    assert_eq!((output, len), (expected, 1));\n }"}]}