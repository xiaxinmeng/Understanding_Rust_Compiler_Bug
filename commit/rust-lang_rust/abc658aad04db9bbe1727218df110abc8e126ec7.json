{"sha": "abc658aad04db9bbe1727218df110abc8e126ec7", "node_id": "C_kwDOAAsO6NoAKGFiYzY1OGFhZDA0ZGI5YmJlMTcyNzIxOGRmMTEwYWJjOGUxMjZlYzc", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T12:17:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "internal: add prefix entry points", "tree": {"sha": "f6188a94f300992aea3c96a81ce003add025e6de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6188a94f300992aea3c96a81ce003add025e6de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abc658aad04db9bbe1727218df110abc8e126ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abc658aad04db9bbe1727218df110abc8e126ec7", "html_url": "https://github.com/rust-lang/rust/commit/abc658aad04db9bbe1727218df110abc8e126ec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abc658aad04db9bbe1727218df110abc8e126ec7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3ba55bd062f985a92b4cee3732319d9b6c131c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3ba55bd062f985a92b4cee3732319d9b6c131c5", "html_url": "https://github.com/rust-lang/rust/commit/d3ba55bd062f985a92b4cee3732319d9b6c131c5"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "86dce61da2d3d6b5e5111c2846f21592fce535f2", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/abc658aad04db9bbe1727218df110abc8e126ec7/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc658aad04db9bbe1727218df110abc8e126ec7/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=abc658aad04db9bbe1727218df110abc8e126ec7", "patch": "@@ -44,6 +44,18 @@ use crate::{\n     TokenSet, T,\n };\n \n+pub(crate) mod entry {\n+    use super::*;\n+\n+    pub(crate) mod prefix {\n+        use super::*;\n+\n+        pub(crate) fn vis(p: &mut Parser) {\n+            let _ = opt_visibility(p, false);\n+        }\n+    }\n+}\n+\n pub(crate) mod entry_points {\n     use super::*;\n "}, {"sha": "f0b93c4511a1a2a4efc2fa5efd3af41babc39786", "filename": "crates/parser/src/lib.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/abc658aad04db9bbe1727218df110abc8e126ec7/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc658aad04db9bbe1727218df110abc8e126ec7/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=abc658aad04db9bbe1727218df110abc8e126ec7", "patch": "@@ -41,6 +41,30 @@ pub use crate::{\n     syntax_kind::SyntaxKind,\n };\n \n+/// Parse a syntactic construct at the *start* of the input.\n+///\n+/// This is used by macro-by-example parser to implement things like `$i:item`.\n+///\n+/// Note that this is generally non-optional -- the result is intentionally not\n+/// `Option<Output>`. The way MBE work, by the time we *try* to parse `$e:expr`\n+/// we already commit to expression. In other words, this API by design can't be\n+/// used to implement \"rollback and try another alternative\" logic.\n+pub enum PrefixEntryPoint {\n+    Vis,\n+}\n+\n+impl PrefixEntryPoint {\n+    pub fn parse(self, input: &Input) -> Output {\n+        let entry_point: fn(&'_ mut parser::Parser) = match self {\n+            PrefixEntryPoint::Vis => grammar::entry::prefix::vis,\n+        };\n+        let mut p = parser::Parser::new(input);\n+        entry_point(&mut p);\n+        let events = p.finish();\n+        event::process(events)\n+    }\n+}\n+\n /// rust-analyzer parser allows you to choose one of the possible entry points.\n ///\n /// The primary consumer of this API are declarative macros, `$x:expr` matchers"}]}