{"sha": "09cbe588c3a73b06ce800732ce122d8357c1d0cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5Y2JlNTg4YzNhNzNiMDZjZTgwMDczMmNlMTIyZDgzNTdjMWQwY2M=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-31T22:59:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-31T22:59:29Z"}, "message": "more readable printing of validation operands", "tree": {"sha": "578ff886900fc5d9e43e49ddb50bb68b0717145e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/578ff886900fc5d9e43e49ddb50bb68b0717145e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09cbe588c3a73b06ce800732ce122d8357c1d0cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09cbe588c3a73b06ce800732ce122d8357c1d0cc", "html_url": "https://github.com/rust-lang/rust/commit/09cbe588c3a73b06ce800732ce122d8357c1d0cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09cbe588c3a73b06ce800732ce122d8357c1d0cc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e426e10683d851a530e17d33bf6454d958b7d46", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e426e10683d851a530e17d33bf6454d958b7d46", "html_url": "https://github.com/rust-lang/rust/commit/5e426e10683d851a530e17d33bf6454d958b7d46"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "1e8dda0addf4cb8a42f0caec95668a758c766393", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=09cbe588c3a73b06ce800732ce122d8357c1d0cc", "patch": "@@ -877,7 +877,7 @@ pub struct ValidationOperand<'tcx, T> {\n \n impl<'tcx, T: Debug> Debug for ValidationOperand<'tcx, T> {\n     fn fmt(&self, fmt: &mut Formatter) -> fmt::Result {\n-        write!(fmt, \"{:?}@{:?}\", self.lval, self.ty)?;\n+        write!(fmt, \"{:?}: {:?}\", self.lval, self.ty)?;\n         if let Some(ce) = self.re {\n             // (reuse lifetime rendering policy from ppaux.)\n             write!(fmt, \"/{}\", ty::ReScope(ce))?;"}, {"sha": "4a143c4cee9e2a198291c63b3839c44c8bc91079", "filename": "src/test/mir-opt/validate_1.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=09cbe588c3a73b06ce800732ce122d8357c1d0cc", "patch": "@@ -22,26 +22,26 @@ fn main() {\n // START rustc.node4.EraseRegions.after.mir\n // fn foo(_1: &ReErased mut i32) -> () {\n //     bb0: {\n-//         Validate(Acquire, [_1@&ReFree(DefId { krate: CrateNum(0), node: DefIndex(3) => validate_1/8cd878b::foo[0] }, BrAnon(0)) mut i32]);\n+//         Validate(Acquire, [_1: &ReFree(DefId { krate: CrateNum(0), node: DefIndex(3) => validate_1/8cd878b::foo[0] }, BrAnon(0)) mut i32]);\n //         return;\n //     }\n // }\n // END rustc.node4.EraseRegions.after.mir\n // START rustc.node11.EraseRegions.after.mir\n // fn main() -> () {\n //     bb0: {\n-//         Validate(Suspend(ReScope(Misc(NodeId(20)))), [_1@i32]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(20)))), [_1: i32]);\n //         _4 = &ReErased mut _1;\n-//         Validate(Acquire, [(*_4)@i32/ReScope(Misc(NodeId(20)))]);\n-//         Validate(Suspend(ReScope(Misc(NodeId(20)))), [(*_4)@i32/ReScope(Misc(NodeId(20)))]);\n+//         Validate(Acquire, [(*_4): i32/ReScope(Misc(NodeId(20)))]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(20)))), [(*_4): i32/ReScope(Misc(NodeId(20)))]);\n //         _3 = &ReErased mut (*_4);\n-//         Validate(Acquire, [(*_3)@i32/ReScope(Misc(NodeId(20)))]);\n-//         Validate(Release, [_3@&ReScope(Misc(NodeId(20))) mut i32]);\n+//         Validate(Acquire, [(*_3): i32/ReScope(Misc(NodeId(20)))]);\n+//         Validate(Release, [_3: &ReScope(Misc(NodeId(20))) mut i32]);\n //         _2 = const foo(_3) -> bb1;\n //     }\n //\n //     bb1: {\n-//         Validate(Acquire, [_2@()]);\n+//         Validate(Acquire, [_2: ()]);\n //         EndRegion(ReScope(Misc(NodeId(20))));\n //         return;\n //     }"}, {"sha": "37ebd720d52da567aecf5f8974d2912d025bbf5e", "filename": "src/test/mir-opt/validate_2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Ftest%2Fmir-opt%2Fvalidate_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Ftest%2Fmir-opt%2Fvalidate_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_2.rs?ref=09cbe588c3a73b06ce800732ce122d8357c1d0cc", "patch": "@@ -19,9 +19,9 @@ fn main() {\n // START rustc.node4.EraseRegions.after.mir\n // fn main() -> () {\n //     bb1: {\n-//         Validate(Release, [_2@std::boxed::Box<[i32; 3]>]);\n+//         Validate(Release, [_2: std::boxed::Box<[i32; 3]>]);\n //         _1 = _2 as std::boxed::Box<[i32]> (Unsize);\n-//         Validate(Acquire, [_1@std::boxed::Box<[i32]>]);\n+//         Validate(Acquire, [_1: std::boxed::Box<[i32]>]);\n //     }\n // }\n // END rustc.node4.EraseRegions.after.mir"}, {"sha": "100fae5c678194fb8d80e611c991703809c3da70", "filename": "src/test/mir-opt/validate_3.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09cbe588c3a73b06ce800732ce122d8357c1d0cc/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs?ref=09cbe588c3a73b06ce800732ce122d8357c1d0cc", "patch": "@@ -32,13 +32,13 @@ fn main() {\n // fn main() -> () {\n //     let mut _5: &ReErased i32;\n //     bb0: {\n-//         Validate(Suspend(ReScope(Misc(NodeId(46)))), [((*_2).0: i32)@i32/ReScope(Remainder(BlockRemainder { block: NodeId(18), first_statement_index: 3 })) (imm)]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(46)))), [((*_2).0: i32): i32/ReScope(Remainder(BlockRemainder { block: NodeId(18), first_statement_index: 3 })) (imm)]);\n //         _5 = &ReErased ((*_2).0: i32);\n-//         Validate(Acquire, [(*_5)@i32/ReScope(Misc(NodeId(46))) (imm)]);\n-//         Validate(Suspend(ReScope(Misc(NodeId(46)))), [(*_5)@i32/ReScope(Misc(NodeId(46))) (imm)]);\n+//         Validate(Acquire, [(*_5): i32/ReScope(Misc(NodeId(46))) (imm)]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(46)))), [(*_5): i32/ReScope(Misc(NodeId(46))) (imm)]);\n //         _4 = &ReErased (*_5);\n-//         Validate(Acquire, [(*_4)@i32/ReScope(Misc(NodeId(46))) (imm)]);\n-//         Validate(Release, [_4@&ReScope(Misc(NodeId(46))) i32]);\n+//         Validate(Acquire, [(*_4): i32/ReScope(Misc(NodeId(46))) (imm)]);\n+//         Validate(Release, [_4: &ReScope(Misc(NodeId(46))) i32]);\n //         _3 = const foo(_4) -> bb1;\n //     }\n //     bb1: {"}]}