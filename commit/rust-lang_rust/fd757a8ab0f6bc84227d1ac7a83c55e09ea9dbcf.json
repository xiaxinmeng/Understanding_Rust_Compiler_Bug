{"sha": "fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNzU3YThhYjBmNmJjODQyMjdkMWFjN2E4M2M1NWUwOWVhOWRiY2Y=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-07-14T18:52:49Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-07-21T07:22:59Z"}, "message": "Added bitv iterator benchmarks", "tree": {"sha": "5366b09d3fac58fe53bfa9fa8f7a90c11638c4c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5366b09d3fac58fe53bfa9fa8f7a90c11638c4c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf", "html_url": "https://github.com/rust-lang/rust/commit/fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b4d8d688240c229a4e3d51cdaa96899258a2340", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4d8d688240c229a4e3d51cdaa96899258a2340", "html_url": "https://github.com/rust-lang/rust/commit/0b4d8d688240c229a4e3d51cdaa96899258a2340"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "168d6a3991674e91a14849d75875ae6a61db0520", "filename": "src/libextra/bitv.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf/src%2Flibextra%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf/src%2Flibextra%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbitv.rs?ref=fd757a8ab0f6bc84227d1ac7a83c55e09ea9dbcf", "patch": "@@ -568,6 +568,7 @@ pub struct BitvIterator<'self> {\n }\n \n impl<'self> Iterator<bool> for BitvIterator<'self> {\n+    #[inline]\n     fn next(&mut self) -> Option<bool> {\n         if self.next_idx < self.bitv.nbits {\n             let idx = self.next_idx;\n@@ -866,6 +867,7 @@ pub struct BitvSetIterator<'self> {\n }\n \n impl<'self> Iterator<uint> for BitvSetIterator<'self> {\n+    #[inline]\n     fn next(&mut self) -> Option<uint> {\n         while self.next_idx < self.set.capacity() {\n             let idx = self.next_idx;\n@@ -1566,4 +1568,38 @@ mod tests {\n             b1.union(&b2);\n         }\n     }\n+\n+    #[bench]\n+    fn bench_btv_small_iter(b: &mut BenchHarness) {\n+        let bitv = Bitv::new(uint::bits, false);\n+        do b.iter {\n+            let mut sum = 0;\n+            for bitv.iter().advance |pres| {\n+                sum += pres as uint;\n+            }\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_bitv_big_iter(b: &mut BenchHarness) {\n+        let bitv = Bitv::new(BENCH_BITS, false);\n+        do b.iter {\n+            let mut sum = 0;\n+            for bitv.iter().advance |pres| {\n+                sum += pres as uint;\n+            }\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_bitvset_iter(b: &mut BenchHarness) {\n+        let bitv = BitvSet::from_bitv(from_fn(BENCH_BITS,\n+                                              |idx| {idx % 3 == 0}));\n+        do b.iter {\n+            let mut sum = 0;\n+            for bitv.iter().advance |idx| {\n+                sum += idx;\n+            }\n+        }\n+    }\n }"}]}