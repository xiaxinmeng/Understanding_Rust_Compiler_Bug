{"sha": "01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYWViZjAxYmMwY2QwZDk1ZTAyY2M0YzkxMDU5ZjAyZTRiMDNiMTM=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-02-09T02:47:57Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-04-14T03:25:42Z"}, "message": "implement RFC amendment 1494", "tree": {"sha": "ced4c8066d6664dcb5d74ea1355a1b6f62402b9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ced4c8066d6664dcb5d74ea1355a1b6f62402b9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "html_url": "https://github.com/rust-lang/rust/commit/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "526f2bf5c534308193246e13ab2da8b3c0cf3cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/526f2bf5c534308193246e13ab2da8b3c0cf3cbb", "html_url": "https://github.com/rust-lang/rust/commit/526f2bf5c534308193246e13ab2da8b3c0cf3cbb"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "87ab3dad50c7082e6374c554f3d776e692a9c8e8", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "patch": "@@ -1014,6 +1014,7 @@ fn is_in_follow(_: &ExtCtxt, tok: &Token, frag: &str) -> Result<bool, String> {\n                 match *tok {\n                     OpenDelim(token::DelimToken::Brace) | OpenDelim(token::DelimToken::Bracket) |\n                     Comma | FatArrow | Colon | Eq | Gt | Semi | BinOp(token::Or) => Ok(true),\n+                    MatchNt(_, ref frag, _, _) if frag.name.as_str() == \"block\" => Ok(true),\n                     Ident(i, _) if (i.name.as_str() == \"as\" ||\n                                     i.name.as_str() == \"where\") => Ok(true),\n                     _ => Ok(false)"}, {"sha": "f985340c524108a32c12526bb87b910a9c4d6a90", "filename": "src/test/compile-fail/macro-follow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/src%2Ftest%2Fcompile-fail%2Fmacro-follow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/src%2Ftest%2Fcompile-fail%2Fmacro-follow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-follow.rs?ref=01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "patch": "@@ -55,7 +55,7 @@ macro_rules! follow_expr {\n     ($e:expr $m:meta) => {};  //~ERROR `$e:expr` is followed by `$m:meta`\n }\n // FOLLOW(ty) = {OpenDelim(Brace), Comma, FatArrow, Colon, Eq, Gt, Semi, Or,\n-//               Ident(as), Ident(where), OpenDelim(Bracket)}\n+//               Ident(as), Ident(where), OpenDelim(Bracket), Nonterminal(Block)}\n macro_rules! follow_ty {\n     ($t:ty ()) => {};       //~WARN  `$t:ty` is followed by `(`\n     ($t:ty []) => {};       // ok (RFC 1462)\n@@ -67,7 +67,7 @@ macro_rules! follow_ty {\n     ($t:ty $t:ty) => {};    //~ERROR `$t:ty` is followed by `$t:ty`\n     ($t:ty $s:stmt) => {};  //~ERROR `$t:ty` is followed by `$s:stmt`\n     ($t:ty $p:path) => {};  //~ERROR `$t:ty` is followed by `$p:path`\n-    ($t:ty $b:block) => {}; //~ERROR `$t:ty` is followed by `$b:block`\n+    ($t:ty $b:block) => {}; // ok (RFC 1494)\n     ($t:ty $i:ident) => {}; //~ERROR `$t:ty` is followed by `$i:ident`\n     ($t:ty $t:tt) => {};    //~ERROR `$t:ty` is followed by `$t:tt`\n     ($t:ty $i:item) => {};  //~ERROR `$t:ty` is followed by `$i:item`\n@@ -109,7 +109,7 @@ macro_rules! follow_path {\n     ($p:path $t:ty) => {};    //~ERROR `$p:path` is followed by `$t:ty`\n     ($p:path $s:stmt) => {};  //~ERROR `$p:path` is followed by `$s:stmt`\n     ($p:path $p:path) => {};  //~ERROR `$p:path` is followed by `$p:path`\n-    ($p:path $b:block) => {}; //~ERROR `$p:path` is followed by `$b:block`\n+    ($p:path $b:block) => {}; // ok (RFC 1494)\n     ($p:path $i:ident) => {}; //~ERROR `$p:path` is followed by `$i:ident`\n     ($p:path $t:tt) => {};    //~ERROR `$p:path` is followed by `$t:tt`\n     ($p:path $i:item) => {};  //~ERROR `$p:path` is followed by `$i:item`"}, {"sha": "dca676f8cf95fe71707d0d094b0ff44ee8856252", "filename": "src/test/run-pass/macro-follow.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/src%2Ftest%2Frun-pass%2Fmacro-follow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01aebf01bc0cd0d95e02cc4c91059f02e4b03b13/src%2Ftest%2Frun-pass%2Fmacro-follow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-follow.rs?ref=01aebf01bc0cd0d95e02cc4c91059f02e4b03b13", "patch": "@@ -26,7 +26,7 @@ macro_rules! follow_expr {\n     ($e:expr ;) => {};\n }\n // FOLLOW(ty) = {OpenDelim(Brace), Comma, FatArrow, Colon, Eq, Gt, Semi, Or,\n-//               Ident(as), Ident(where), OpenDelim(Bracket)}\n+//               Ident(as), Ident(where), OpenDelim(Bracket), Nonterminal(Block)}\n macro_rules! follow_ty {\n     ($t:ty {}) => {};\n     ($t:ty ,) => {};\n@@ -39,6 +39,7 @@ macro_rules! follow_ty {\n     ($t:ty as) => {};\n     ($t:ty where) => {};\n     ($t:ty []) => {};\n+    ($t:ty $b:block) => {};\n }\n // FOLLOW(stmt) = FOLLOW(expr)\n macro_rules! follow_stmt {\n@@ -59,6 +60,7 @@ macro_rules! follow_path {\n     ($p:path as) => {};\n     ($p:path where) => {};\n     ($p:path []) => {};\n+    ($p:path $b:block) => {};\n }\n // FOLLOW(block) = any token\n macro_rules! follow_block {"}]}