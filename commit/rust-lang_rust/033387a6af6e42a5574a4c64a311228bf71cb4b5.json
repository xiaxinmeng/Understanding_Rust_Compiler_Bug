{"sha": "033387a6af6e42a5574a4c64a311228bf71cb4b5", "node_id": "C_kwDOAAsO6NoAKDAzMzM4N2E2YWY2ZTQyYTU1NzRhNGM2NGEzMTEyMjhiZjcxY2I0YjU", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-16T20:08:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-16T20:08:04Z"}, "message": "Rollup merge of #100629 - GuillaumeGomez:merged-ty, r=compiler-errors\n\nUse `merged_ty` method instead of rewriting it every time\n\n`merged_ty` [source code](https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_typeck/check/coercion.rs.html#1331-1333) is quite literally the same, so instead of rewriting it, makes more sense to use the method instead.\n\nr? `@compiler-errors`", "tree": {"sha": "3dfecbee63ecdcf3471c8af74e516d99b47edd9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dfecbee63ecdcf3471c8af74e516d99b47edd9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/033387a6af6e42a5574a4c64a311228bf71cb4b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi+/kkCRBK7hj4Ov3rIwAAQuIIAKjGVCpp54UwZA69FG6DSPF0\n2mACFzqPo21DDCcjt2PD4x2YGmljB60VhOb1MGlOi143qL5CQdlh6q6616MZHiQ5\nL9fFXvNOwaGqX9/Em8EWQ1NiibF7u5r8zdbfuKY+Yzo/OE7N7Vn1ZvMBQFLiqJCz\nQVcCWs0iLp9LPM0Zwk5KEqCCrrQ/OT5PJHqSnEt4V5ZhbGcBPwljnT+Kx2I8Px0/\nrKgppdWOQMpNHEpBP4mZSZe161LsC8XfVHNJ61F9Lj1+Acy0mQPsCppV7N5SoyKR\neFcUq+KiH5QgQ0Ngs/WwOivi8zQ1cCEfCjI/dZS36mMIAX6XA4Kx7TKbp+dWEI4=\n=lP02\n-----END PGP SIGNATURE-----\n", "payload": "tree 3dfecbee63ecdcf3471c8af74e516d99b47edd9f\nparent b7b4f79bc98b8fc939e2bb4c7bb14542b69dd539\nparent 1f7d1eae9677f16a94a15b58d2b2477ad0776bd7\nauthor Takayuki Maeda <takoyaki0316@gmail.com> 1660680484 +0900\ncommitter GitHub <noreply@github.com> 1660680484 +0900\n\nRollup merge of #100629 - GuillaumeGomez:merged-ty, r=compiler-errors\n\nUse `merged_ty` method instead of rewriting it every time\n\n`merged_ty` [source code](https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_typeck/check/coercion.rs.html#1331-1333) is quite literally the same, so instead of rewriting it, makes more sense to use the method instead.\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/033387a6af6e42a5574a4c64a311228bf71cb4b5", "html_url": "https://github.com/rust-lang/rust/commit/033387a6af6e42a5574a4c64a311228bf71cb4b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/033387a6af6e42a5574a4c64a311228bf71cb4b5/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7b4f79bc98b8fc939e2bb4c7bb14542b69dd539", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b4f79bc98b8fc939e2bb4c7bb14542b69dd539", "html_url": "https://github.com/rust-lang/rust/commit/b7b4f79bc98b8fc939e2bb4c7bb14542b69dd539"}, {"sha": "1f7d1eae9677f16a94a15b58d2b2477ad0776bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f7d1eae9677f16a94a15b58d2b2477ad0776bd7", "html_url": "https://github.com/rust-lang/rust/commit/1f7d1eae9677f16a94a15b58d2b2477ad0776bd7"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "def592c46c2e514a4614813094b79fe193deaf3c", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/033387a6af6e42a5574a4c64a311228bf71cb4b5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033387a6af6e42a5574a4c64a311228bf71cb4b5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=033387a6af6e42a5574a4c64a311228bf71cb4b5", "patch": "@@ -1488,14 +1488,14 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n                     // `break`, we want to call the `()` \"expected\"\n                     // since it is implied by the syntax.\n                     // (Note: not all force-units work this way.)\"\n-                    (expression_ty, self.final_ty.unwrap_or(self.expected_ty))\n+                    (expression_ty, self.merged_ty())\n                 } else {\n                     // Otherwise, the \"expected\" type for error\n                     // reporting is the current unification type,\n                     // which is basically the LUB of the expressions\n                     // we've seen so far (combined with the expected\n                     // type)\n-                    (self.final_ty.unwrap_or(self.expected_ty), expression_ty)\n+                    (self.merged_ty(), expression_ty)\n                 };\n                 let (expected, found) = fcx.resolve_vars_if_possible((expected, found));\n "}]}