{"sha": "cd31e6ff3987a1e0f94c64f31d6068c459126667", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMzFlNmZmMzk4N2ExZTBmOTRjNjRmMzFkNjA2OGM0NTkxMjY2Njc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-30T05:30:53Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-12-30T06:05:48Z"}, "message": "Forbid static methods in object safe traits\n\nCloses #19949 and rust-lang/rfcs#428\n\n[breaking change]\n\nIf you have traits used with objects with static methods, you'll need to move\nthe static methods to a different trait.", "tree": {"sha": "e3cdeb5e4b714d039435f968fea322b3a874113e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3cdeb5e4b714d039435f968fea322b3a874113e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd31e6ff3987a1e0f94c64f31d6068c459126667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd31e6ff3987a1e0f94c64f31d6068c459126667", "html_url": "https://github.com/rust-lang/rust/commit/cd31e6ff3987a1e0f94c64f31d6068c459126667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd31e6ff3987a1e0f94c64f31d6068c459126667/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fea5aa656ff4349f4d3e1fea1447d26986762ae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fea5aa656ff4349f4d3e1fea1447d26986762ae1", "html_url": "https://github.com/rust-lang/rust/commit/fea5aa656ff4349f4d3e1fea1447d26986762ae1"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "83712472639876b5e837fb9d7cea80eac12547b5", "filename": "src/librustc_typeck/check/vtable.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd31e6ff3987a1e0f94c64f31d6068c459126667/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd31e6ff3987a1e0f94c64f31d6068c459126667/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs?ref=cd31e6ff3987a1e0f94c64f31d6068c459126667", "patch": "@@ -166,11 +166,13 @@ fn check_object_safety_inner<'tcx>(tcx: &ty::ctxt<'tcx>,\n         }\n     }\n \n-    /// Returns a vec of error messages. If hte vec is empty - no errors!\n+    /// Returns a vec of error messages. If the vec is empty - no errors!\n     ///\n     /// There are some limitations to calling functions through an object, because (a) the self\n     /// type is not known (that's the whole point of a trait instance, after all, to obscure the\n-    /// self type) and (b) the call must go through a vtable and hence cannot be monomorphized.\n+    /// self type), (b) the call must go through a vtable and hence cannot be monomorphized and\n+    /// (c) the trait contains static methods which can't be called because we don't know the\n+    /// concrete type.\n     fn check_object_safety_of_method<'tcx>(tcx: &ty::ctxt<'tcx>,\n                                            method: &ty::Method<'tcx>)\n                                            -> Vec<String> {\n@@ -185,9 +187,11 @@ fn check_object_safety_inner<'tcx>(tcx: &ty::ctxt<'tcx>,\n             }\n \n             ty::StaticExplicitSelfCategory => {\n-                // Static methods are always object-safe since they\n-                // can't be called through a trait object\n-                return msgs\n+                // Static methods are never object safe (reason (c)).\n+                msgs.push(format!(\"cannot call a static method (`{}`) \\\n+                                   through a trait object\",\n+                                  method_name));\n+                return msgs;\n             }\n             ty::ByReferenceExplicitSelfCategory(..) |\n             ty::ByBoxExplicitSelfCategory => {}"}]}