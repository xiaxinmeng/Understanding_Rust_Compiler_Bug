{"sha": "0db9e4067038f3c70eb04e86b1bba5b14b172f47", "node_id": "C_kwDOAAsO6NoAKDBkYjllNDA2NzAzOGYzYzcwZWIwNGU4NmIxYmJhNWIxNGIxNzJmNDc", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-02-02T06:06:13Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-02-02T06:08:17Z"}, "message": "Fix unicode slicing bug", "tree": {"sha": "5ff93859ac8c33afec251f8344a15186f566ef49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ff93859ac8c33afec251f8344a15186f566ef49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0db9e4067038f3c70eb04e86b1bba5b14b172f47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0db9e4067038f3c70eb04e86b1bba5b14b172f47", "html_url": "https://github.com/rust-lang/rust/commit/0db9e4067038f3c70eb04e86b1bba5b14b172f47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0db9e4067038f3c70eb04e86b1bba5b14b172f47/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9907ad853f9d4837f62c3a00f0d33fba562d8e3", "html_url": "https://github.com/rust-lang/rust/commit/c9907ad853f9d4837f62c3a00f0d33fba562d8e3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f6e7ec8094e458be68f5a0a68c1ce8aa98601594", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0db9e4067038f3c70eb04e86b1bba5b14b172f47/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0db9e4067038f3c70eb04e86b1bba5b14b172f47/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=0db9e4067038f3c70eb04e86b1bba5b14b172f47", "patch": "@@ -74,7 +74,7 @@ fn extract_path_backwards(text: &str, end_pos: usize) -> Option<usize> {\n     use rustc_lexer::{is_id_continue, is_id_start};\n     let mut current_pos = end_pos;\n     loop {\n-        if current_pos >= 2 && &text[current_pos - 2..current_pos] == \"::\" {\n+        if current_pos >= 2 && text[..current_pos].ends_with(\"::\") {\n             current_pos -= 2;\n         }\n         let new_pos = text[..current_pos]\n@@ -217,9 +217,9 @@ impl<'a, 'tcx> DocVisitor for InvalidHtmlTagsLinter<'a, 'tcx> {\n                     let mut diag = lint.build(msg);\n                     // If a tag looks like `<this>`, it might actually be a generic.\n                     // We don't try to detect stuff `<like, this>` because that's not valid HTML,\n-                    // and we don' try to detect stuff `<like this>` because that's not valid Rust.\n+                    // and we don't try to detect stuff `<like this>` because that's not valid Rust.\n                     if let Some(Some(generics_start)) = (is_open_tag\n-                        && &dox[range.end - 1..range.end] == \">\")\n+                        && dox[..range.end].ends_with(\">\"))\n                         .then(|| extract_path_backwards(&dox, range.start))\n                     {\n                         let generics_sp = match super::source_span_for_markdown_range("}]}