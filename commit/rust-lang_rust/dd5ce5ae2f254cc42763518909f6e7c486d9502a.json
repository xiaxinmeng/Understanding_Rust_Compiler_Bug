{"sha": "dd5ce5ae2f254cc42763518909f6e7c486d9502a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNWNlNWFlMmYyNTRjYzQyNzYzNTE4OTA5ZjZlN2M0ODZkOTUwMmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-20T06:11:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-20T06:11:36Z"}, "message": "auto merge of #19105 : alfie/rust/master, r=thestinger\n\nAs discussed in pull #19068, trying to make the wording more clear for unsafe code vs undefined behavior.", "tree": {"sha": "6c67efe56351c88b3aa8b2f87dafc8ad24454ee4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c67efe56351c88b3aa8b2f87dafc8ad24454ee4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd5ce5ae2f254cc42763518909f6e7c486d9502a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ce5ae2f254cc42763518909f6e7c486d9502a", "html_url": "https://github.com/rust-lang/rust/commit/dd5ce5ae2f254cc42763518909f6e7c486d9502a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ce5ae2f254cc42763518909f6e7c486d9502a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "793624261a221aa4592381fa8067e1f597b90c22", "url": "https://api.github.com/repos/rust-lang/rust/commits/793624261a221aa4592381fa8067e1f597b90c22", "html_url": "https://github.com/rust-lang/rust/commit/793624261a221aa4592381fa8067e1f597b90c22"}, {"sha": "e0b0c83138236ba1b2d532f79647ee45f7824741", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b0c83138236ba1b2d532f79647ee45f7824741", "html_url": "https://github.com/rust-lang/rust/commit/e0b0c83138236ba1b2d532f79647ee45f7824741"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "4f0c9a5042211de8e8a6fa66296270fddc3eed6e", "filename": "src/doc/reference.md", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dd5ce5ae2f254cc42763518909f6e7c486d9502a/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd5ce5ae2f254cc42763518909f6e7c486d9502a/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=dd5ce5ae2f254cc42763518909f6e7c486d9502a", "patch": "@@ -1114,13 +1114,13 @@ Rust:\n ##### Unsafe functions\n \n Unsafe functions are functions that are not safe in all contexts and/or for all\n-possible inputs. Such a function must be prefixed with the keyword `unsafe`.\n+possible inputs. Such a function must be prefixed with the keyword `unsafe` and\n+can only be called from an `unsafe` block or another `unsafe` function.\n \n ##### Unsafe blocks\n \n-A block of code can also be prefixed with the `unsafe` keyword, to permit\n-calling `unsafe` functions or dereferencing raw pointers within a safe\n-function.\n+A block of code can be prefixed with the `unsafe` keyword, to permit calling\n+`unsafe` functions or dereferencing raw pointers within a safe function.\n \n When a programmer has sufficient conviction that a sequence of potentially\n unsafe operations is actually safe, they can encapsulate that sequence (taken\n@@ -1140,12 +1140,11 @@ represented with reference-counted pointers in safe code. By using `unsafe`\n blocks to represent the reverse links as raw pointers, it can be implemented\n with only boxes.\n \n-##### Behavior considered unsafe\n+##### Behavior considered undefined\n \n-This is a list of behavior which is forbidden in all Rust code. Type checking\n-provides the guarantee that these issues are never caused by safe code. An\n-`unsafe` block or function is responsible for never invoking this behaviour or\n-exposing an API making it possible for it to occur in safe code.\n+The following is a list of behavior which is forbidden in all Rust code,\n+including within `unsafe` blocks and `unsafe` functions. Type checking provides\n+the guarantee that these issues are never caused by safe code.\n \n * Data races\n * Dereferencing a null/dangling raw pointer"}]}