{"sha": "f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "node_id": "C_kwDOAAsO6NoAKGY3YjQyMTAyZTY4NTM3YzZiMGJiYjNhMWU4M2M5ZGI2OTgyMGRmYjM", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-08-30T16:00:20Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2023-01-30T17:11:34Z"}, "message": "errors: implement `IntoDiagnosticArg` for `&T`\n\nImplement `IntoDiagnosticArg` for `&'a T` when `T` implements\n`IntoDiagnosticArg` and `Clone`. Makes it easier to write diagnostic\nstructs that borrow something which implements `IntoDiagnosticArg`.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "4d68aca42bfbb5355e5a37ef9448e414cc549bed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d68aca42bfbb5355e5a37ef9448e414cc549bed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "html_url": "https://github.com/rust-lang/rust/commit/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59cc5e5d59796f5817d46b31450923597d9f8ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/59cc5e5d59796f5817d46b31450923597d9f8ae7", "html_url": "https://github.com/rust-lang/rust/commit/59cc5e5d59796f5817d46b31450923597d9f8ae7"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "2440f20502ab192674f339842513138c5c4b71a2", "filename": "compiler/rustc_borrowck/src/diagnostics/region_name.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_name.rs?ref=f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "patch": "@@ -187,6 +187,12 @@ impl Display for RegionName {\n     }\n }\n \n+impl rustc_errors::IntoDiagnosticArg for RegionName {\n+    fn into_diagnostic_arg(self) -> rustc_errors::DiagnosticArgValue<'static> {\n+        self.to_string().into_diagnostic_arg()\n+    }\n+}\n+\n impl<'tcx> MirBorrowckCtxt<'_, 'tcx> {\n     pub(crate) fn mir_def_id(&self) -> hir::def_id::LocalDefId {\n         self.body.source.def_id().expect_local()"}, {"sha": "13199d03852550687aa595f6f0450f65c4177a23", "filename": "compiler/rustc_borrowck/src/session_diagnostics.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs?ref=f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "patch": "@@ -1,4 +1,4 @@\n-use rustc_errors::{IntoDiagnosticArg, MultiSpan};\n+use rustc_errors::MultiSpan;\n use rustc_macros::{Diagnostic, LintDiagnostic, Subdiagnostic};\n use rustc_middle::ty::{GenericArg, Ty};\n use rustc_span::Span;\n@@ -128,18 +128,6 @@ pub(crate) enum LifetimeReturnCategoryErr<'a> {\n     },\n }\n \n-impl IntoDiagnosticArg for &RegionName {\n-    fn into_diagnostic_arg(self) -> rustc_errors::DiagnosticArgValue<'static> {\n-        format!(\"{}\", self).into_diagnostic_arg()\n-    }\n-}\n-\n-impl IntoDiagnosticArg for RegionName {\n-    fn into_diagnostic_arg(self) -> rustc_errors::DiagnosticArgValue<'static> {\n-        format!(\"{}\", self).into_diagnostic_arg()\n-    }\n-}\n-\n #[derive(Subdiagnostic)]\n pub(crate) enum RequireStaticErr {\n     #[note(borrowck_used_impl_require_static)]"}, {"sha": "d5a5ef3b445f9cbd395695ea3341fc723cf13344", "filename": "compiler/rustc_errors/src/diagnostic_impls.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b42102e68537c6b0bbb3a1e83c9db69820dfb3/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs?ref=f7b42102e68537c6b0bbb3a1e83c9db69820dfb3", "patch": "@@ -36,6 +36,12 @@ impl<'a, T: fmt::Display> From<&'a T> for DiagnosticArgFromDisplay<'a> {\n     }\n }\n \n+impl<'a, T: Clone + IntoDiagnosticArg> IntoDiagnosticArg for &'a T {\n+    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+        self.clone().into_diagnostic_arg()\n+    }\n+}\n+\n macro_rules! into_diagnostic_arg_using_display {\n     ($( $ty:ty ),+ $(,)?) => {\n         $("}]}