{"sha": "4ff6195929b6649f776312f177ba601b2542872a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZjYxOTU5MjliNjY0OWY3NzYzMTJmMTc3YmE2MDFiMjU0Mjg3MmE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-15T17:19:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-15T17:19:32Z"}, "message": "Rollup merge of #68252 - matthiaskrgr:redundant_clones, r=oli-obk\n\nremove redundant clones, found by clippy", "tree": {"sha": "b325b62ec542acdcdde7e70ff0bc1d3180e6d949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b325b62ec542acdcdde7e70ff0bc1d3180e6d949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ff6195929b6649f776312f177ba601b2542872a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeH0mkCRBK7hj4Ov3rIwAAdHIIAI5ak8x9dVMExLR/lwy4T2bH\nFy5B+qKIQfBnkHSkXlm2nvvWXQ1GMywWjBa+P3wsB9TgBv7uHr7MdlQ+aZNOPEK6\n0u/MyM53CEXy0tnkMKbpHhO5adNyZQfMj6lY9QqNfuyDWTYegOpUxO/ur9xCY3dq\nxdCbuQ9lSxGEeSg46tYfkxIgH7ODavmxbSmbP6O84B5KuIxCN1b3DO4SyT6P94ho\nu4SDmZ8zFfsr9KuoBC7YyPKWvff6YfN6Nr61S5Q6Q2QEHQidVhjinYfUTX97c7un\nCrjp2luMFM0eI+1SR83O+WVX6GWT0MrL2Z7CdtZ8LQqVoAzuldVx36FqiwccyfA=\n=PzbJ\n-----END PGP SIGNATURE-----\n", "payload": "tree b325b62ec542acdcdde7e70ff0bc1d3180e6d949\nparent 9de54fadae2324d2341b18043b2d17ae3f68875a\nparent 312c3a067a090dd7c970ba40c08909ca1281c312\nauthor Dylan DPC <dylan.dpc@gmail.com> 1579108772 +0530\ncommitter GitHub <noreply@github.com> 1579108772 +0530\n\nRollup merge of #68252 - matthiaskrgr:redundant_clones, r=oli-obk\n\nremove redundant clones, found by clippy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff6195929b6649f776312f177ba601b2542872a", "html_url": "https://github.com/rust-lang/rust/commit/4ff6195929b6649f776312f177ba601b2542872a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ff6195929b6649f776312f177ba601b2542872a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9de54fadae2324d2341b18043b2d17ae3f68875a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9de54fadae2324d2341b18043b2d17ae3f68875a", "html_url": "https://github.com/rust-lang/rust/commit/9de54fadae2324d2341b18043b2d17ae3f68875a"}, {"sha": "312c3a067a090dd7c970ba40c08909ca1281c312", "url": "https://api.github.com/repos/rust-lang/rust/commits/312c3a067a090dd7c970ba40c08909ca1281c312", "html_url": "https://github.com/rust-lang/rust/commit/312c3a067a090dd7c970ba40c08909ca1281c312"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "6ef6dcf87eddb6b552f0d2cc64ca32158f128458", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=4ff6195929b6649f776312f177ba601b2542872a", "patch": "@@ -429,7 +429,6 @@ pub fn print_after_hir_lowering<'tcx>(\n         PpmSource(s) => {\n             // Silently ignores an identified node.\n             let out = &mut out;\n-            let src = src.clone();\n             call_with_pp_support(&s, tcx.sess, Some(tcx), move |annotation| {\n                 debug!(\"pretty printing source code {:?}\", s);\n                 let sess = annotation.sess();\n@@ -447,7 +446,6 @@ pub fn print_after_hir_lowering<'tcx>(\n \n         PpmHir(s) => {\n             let out = &mut out;\n-            let src = src.clone();\n             call_with_pp_support_hir(&s, tcx, move |annotation, krate| {\n                 debug!(\"pretty printing source code {:?}\", s);\n                 let sess = annotation.sess();"}, {"sha": "065a3b14428c700f4691f6ba6721bf4f911cdd73", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=4ff6195929b6649f776312f177ba601b2542872a", "patch": "@@ -500,7 +500,7 @@ impl<'a> Parser<'a> {\n             err.span_suggestion_short(\n                 lo.to(self.prev_span),\n                 \"remove the parentheses\",\n-                snippet.to_owned(),\n+                snippet,\n                 Applicability::MachineApplicable,\n             );\n         }"}, {"sha": "5bd10303162b295711ce9e076d04b7f22a632d84", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=4ff6195929b6649f776312f177ba601b2542872a", "patch": "@@ -718,7 +718,7 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n         }\n \n         if !errors.is_empty() {\n-            self.throw_unresolved_import_error(errors.clone(), None);\n+            self.throw_unresolved_import_error(errors, None);\n         }\n     }\n "}, {"sha": "f899e722a561573085add3ad490a14c6b2e33ed3", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=4ff6195929b6649f776312f177ba601b2542872a", "patch": "@@ -704,7 +704,7 @@ impl Tester for Collector {\n         debug!(\"creating test {}: {}\", name, test);\n         self.tests.push(testing::TestDescAndFn {\n             desc: testing::TestDesc {\n-                name: testing::DynTestName(name.clone()),\n+                name: testing::DynTestName(name),\n                 ignore: match config.ignore {\n                     Ignore::All => true,\n                     Ignore::None => false,"}, {"sha": "45669d120c7c276cc8391f5c30857b3e011b399e", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff6195929b6649f776312f177ba601b2542872a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=4ff6195929b6649f776312f177ba601b2542872a", "patch": "@@ -553,7 +553,7 @@ fn run_test_in_process(\n         Err(e) => calc_result(&desc, Err(e.as_ref()), &time_opts, &exec_time),\n     };\n     let stdout = data.lock().unwrap().to_vec();\n-    let message = CompletedTest::new(desc.clone(), test_result, exec_time, stdout);\n+    let message = CompletedTest::new(desc, test_result, exec_time, stdout);\n     monitor_ch.send(message).unwrap();\n }\n \n@@ -602,7 +602,7 @@ fn spawn_test_subprocess(\n         (result, test_output, exec_time)\n     })();\n \n-    let message = CompletedTest::new(desc.clone(), result, exec_time, test_output);\n+    let message = CompletedTest::new(desc, result, exec_time, test_output);\n     monitor_ch.send(message).unwrap();\n }\n "}]}