{"sha": "1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZjhjMTBiZDQyNTcwY2NiYjExMmYzNzQxZmFmYmU2Y2Y3MWFjNjc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-02T11:42:42Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T02:19:50Z"}, "message": "simplify feature_err imports", "tree": {"sha": "dce18f3479de3450a815d3a6f448deeef1b5d7f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce18f3479de3450a815d3a6f448deeef1b5d7f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "html_url": "https://github.com/rust-lang/rust/commit/1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c78090690cf78b453cf828babd3dd69eb276779", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c78090690cf78b453cf828babd3dd69eb276779", "html_url": "https://github.com/rust-lang/rust/commit/7c78090690cf78b453cf828babd3dd69eb276779"}], "stats": {"total": 47, "additions": 22, "deletions": 25}, "files": [{"sha": "e586ad1836c737926ad53c17fcb2422589709e10", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -13,8 +13,8 @@ use rustc_span::source_map::MultiSpan;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;\n-use syntax::feature_gate;\n use syntax::print::pprust;\n+use syntax::sess::feature_err;\n \n use rustc_error_codes::*;\n \n@@ -223,7 +223,7 @@ impl<'a> LintLevelsBuilder<'a> {\n                             // don't have any lint names (`#[level(reason = \"foo\")]`)\n                             if let ast::LitKind::Str(rationale, _) = name_value.kind {\n                                 if !self.sess.features_untracked().lint_reasons {\n-                                    feature_gate::feature_err(\n+                                    feature_err(\n                                         &self.sess.parse_sess,\n                                         sym::lint_reasons,\n                                         item.span,"}, {"sha": "4874d65b2b0db9131298a8c87b1dfc78253c2d25", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -18,7 +18,7 @@ use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::CRATE_NODE_ID;\n use syntax::attr::{self, ConstStability, Deprecation, RustcDeprecation, Stability};\n-use syntax::feature_gate::feature_err_issue;\n+use syntax::sess::feature_err_issue;\n \n use std::num::NonZeroU32;\n "}, {"sha": "f20de93bdeb67e8de6232dc633ccbc1b99b76378", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -18,11 +18,11 @@ use rustc_span::{FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n use syntax::attr::{self, is_builtin_attr, HasAttrs};\n-use syntax::feature_gate::{self, feature_err};\n+use syntax::feature_gate;\n use syntax::mut_visit::*;\n use syntax::print::pprust;\n use syntax::ptr::P;\n-use syntax::sess::ParseSess;\n+use syntax::sess::{feature_err, ParseSess};\n use syntax::token;\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::util::map_in_place::MapInPlace;"}, {"sha": "9426d5e26f5e545bdce78adecafdf0d8e67156f8", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -1,4 +1,5 @@\n use rustc::middle::cstore::{self, NativeLibrary};\n+use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n@@ -10,7 +11,6 @@ use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::spec::abi::Abi;\n use syntax::attr;\n-use syntax::feature_gate::feature_err;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<NativeLibrary> {\n     let mut collector = Collector { tcx, libs: Vec::new() };"}, {"sha": "0e9d16cfa56a8170f009f6b024174c984c617bec", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -6,6 +6,7 @@ use super::{PatCtxt, PatKind, PatternError};\n \n use rustc::hir::map::Map;\n use rustc::lint;\n+use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::ty::subst::{InternalSubsts, SubstsRef};\n use rustc::ty::{self, Ty, TyCtxt};\n@@ -19,7 +20,6 @@ use rustc_hir::{HirId, Pat};\n use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::Mutability;\n-use syntax::feature_gate::feature_err;\n \n use std::slice;\n "}, {"sha": "e69b580565e53d490b82e6270dc242f661104305", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -1,12 +1,12 @@\n //! Concrete error types for all operations which may be invalid in a certain const context.\n \n use rustc::session::config::nightly_options;\n+use rustc::session::parse::feature_err;\n use rustc::ty::TyCtxt;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::sym;\n use rustc_span::{Span, Symbol};\n-use syntax::feature_gate::feature_err;\n \n use super::{ConstKind, Item};\n "}, {"sha": "8467acc759c2b5cd25e93d1c047df0349d3b2121", "filename": "src/librustc_parse/config.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_parse%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_parse%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fconfig.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -22,10 +22,9 @@ use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Attribute, MetaItem};\n use syntax::attr;\n use syntax::attr::HasAttrs;\n-use syntax::feature_gate::feature_err;\n use syntax::mut_visit::*;\n use syntax::ptr::P;\n-use syntax::sess::ParseSess;\n+use syntax::sess::{feature_err, ParseSess};\n use syntax::util::map_in_place::MapInPlace;\n \n use smallvec::SmallVec;"}, {"sha": "39ba2fbc63b4392dace79cacf1f9dc047e43a4cd", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -9,6 +9,7 @@\n \n use rustc::hir::map::Map;\n use rustc::session::config::nightly_options;\n+use rustc::session::parse::feature_err;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_error_codes::*;\n@@ -18,7 +19,6 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::{sym, Span, Symbol};\n use syntax::ast::Mutability;\n-use syntax::feature_gate::feature_err;\n \n use std::fmt;\n "}, {"sha": "af37d218d68f08b1ecf4f0327fa68cfd161113c1", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -5,6 +5,7 @@ use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability::{DeprecationEntry, Index};\n+use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::query::Providers;\n@@ -20,7 +21,6 @@ use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::Attribute;\n use syntax::attr::{self, Stability};\n-use syntax::feature_gate::feature_err;\n \n use std::cmp::Ordering;\n use std::mem::replace;"}, {"sha": "85b5d8ef1cb5d4bcb1a54499e9530cff07f5d463", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -7,6 +7,7 @@ use crate::{AmbiguityError, AmbiguityErrorMisc, AmbiguityKind, Determinacy};\n use crate::{CrateLint, ParentScope, ResolutionError, Resolver, Scope, ScopeSet, Weak};\n use crate::{ModuleKind, ModuleOrUniformRoot, NameBinding, PathResult, Segment, ToNameBinding};\n use rustc::middle::stability;\n+use rustc::session::parse::feature_err;\n use rustc::session::Session;\n use rustc::{lint, span_bug, ty};\n use rustc_data_structures::fx::FxHashSet;\n@@ -23,7 +24,6 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident, NodeId};\n use syntax::attr::{self, StabilityLevel};\n-use syntax::feature_gate::feature_err;\n use syntax::print::pprust;\n \n use rustc_data_structures::sync::Lrc;"}, {"sha": "c15bcd81443d66c2b2fb5387b068e5c81c6c69d5", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -10,6 +10,7 @@ use crate::namespace::Namespace;\n use crate::require_c_abi_if_c_variadic;\n use crate::util::common::ErrorReported;\n use rustc::lint::builtin::AMBIGUOUS_ASSOCIATED_ITEMS;\n+use rustc::session::parse::feature_err;\n use rustc::traits;\n use rustc::traits::astconv_object_safety_violations;\n use rustc::traits::error_reporting::report_object_safety_error;\n@@ -30,7 +31,6 @@ use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n use syntax::ast;\n-use syntax::feature_gate::feature_err;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use std::collections::BTreeSet;"}, {"sha": "1afb703ca1506818d6b938f1fb1a13ad1fc9135c", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -53,6 +53,7 @@\n use crate::check::{FnCtxt, Needs};\n use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::infer::{Coercion, InferOk, InferResult};\n+use rustc::session::parse::feature_err;\n use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n@@ -62,6 +63,7 @@ use rustc::ty::fold::TypeFoldable;\n use rustc::ty::relate::RelateResult;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TypeAndMut};\n+use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n@@ -70,9 +72,6 @@ use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n use smallvec::{smallvec, SmallVec};\n use std::ops::Deref;\n-use syntax::feature_gate;\n-\n-use rustc_error_codes::*;\n \n struct Coerce<'a, 'tcx> {\n     fcx: &'a FnCtxt<'a, 'tcx>,\n@@ -627,7 +626,7 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n         }\n \n         if has_unsized_tuple_coercion && !self.tcx.features().unsized_tuple_coercion {\n-            feature_gate::feature_err(\n+            feature_err(\n                 &self.tcx.sess.parse_sess,\n                 sym::unsized_tuple_coercion,\n                 self.cause.span,"}, {"sha": "dea1be7641afa1cfeaac465516b4caf20fe07fbc", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -99,6 +99,7 @@ use rustc::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc::infer::{self, InferCtxt, InferOk, InferResult};\n use rustc::middle::region;\n use rustc::mir::interpret::ConstValue;\n+use rustc::session::parse::feature_err;\n use rustc::traits::error_reporting::recursive_type_with_infinite_size_error;\n use rustc::traits::{self, ObligationCause, ObligationCauseCode, TraitEngine};\n use rustc::ty::adjustment::{\n@@ -130,7 +131,6 @@ use rustc_span::{self, BytePos, MultiSpan, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n-use syntax::feature_gate::feature_err;\n use syntax::util::parser::ExprPrecedence;\n \n use rustc_error_codes::*;"}, {"sha": "a496a6e12ce1a0f7d5c4ce0c54c47068fc434410", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -3,6 +3,7 @@ use crate::constrained_generic_params::{identify_constrained_generic_params, Par\n \n use rustc::infer::opaque_types::may_define_opaque_type;\n use rustc::middle::lang_items;\n+use rustc::session::parse::feature_err;\n use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, AdtKind, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable};\n@@ -13,7 +14,6 @@ use rustc_hir::ItemKind;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::feature_gate;\n \n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ParItemLikeVisitor;\n@@ -821,7 +821,7 @@ fn check_method_receiver<'fcx, 'tcx>(\n         if !receiver_is_valid(fcx, span, receiver_ty, self_ty, false) {\n             if receiver_is_valid(fcx, span, receiver_ty, self_ty, true) {\n                 // Report error; would have worked with `arbitrary_self_types`.\n-                feature_gate::feature_err(\n+                feature_err(\n                     &fcx.tcx.sess.parse_sess,\n                     sym::arbitrary_self_types,\n                     span,"}, {"sha": "ad750d5ab8341691f82a909fae80a76b2de6edef", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -23,6 +23,7 @@ use crate::middle::weak_lang_items;\n use rustc::hir::map::Map;\n use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc::mir::mono::Linkage;\n+use rustc::session::parse::feature_err;\n use rustc::traits;\n use rustc::ty::query::Providers;\n use rustc::ty::subst::GenericArgKind;\n@@ -45,7 +46,6 @@ use rustc_target::spec::abi;\n use syntax::ast;\n use syntax::ast::{Ident, MetaItemKind};\n use syntax::attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n-use syntax::feature_gate;\n \n use rustc_error_codes::*;\n \n@@ -1537,7 +1537,7 @@ fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                         _ => None,\n                     };\n                     if let Some(unsupported_type) = err {\n-                        feature_gate::feature_err(\n+                        feature_err(\n                             &tcx.sess.parse_sess,\n                             sym::const_compare_raw_pointers,\n                             hir_ty.span,\n@@ -2633,7 +2633,7 @@ fn from_target_feature(\n                 None => true,\n             };\n             if !allowed && id.is_local() {\n-                feature_gate::feature_err(\n+                feature_err(\n                     &tcx.sess.parse_sess,\n                     feature_gate.unwrap(),\n                     item.span(),"}, {"sha": "c03e848b7a420696d4159378c0b08ffc2c44a054", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af8c10bd42570ccbb112f3741fafbe6cf71ac67/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=1af8c10bd42570ccbb112f3741fafbe6cf71ac67", "patch": "@@ -78,7 +78,6 @@ pub mod expand;\n pub mod feature_gate {\n     mod check;\n     pub use check::{check_attribute, check_crate};\n-    pub use rustc_session::parse::{feature_err, feature_err_issue};\n }\n pub mod mut_visit;\n pub mod ptr;"}]}