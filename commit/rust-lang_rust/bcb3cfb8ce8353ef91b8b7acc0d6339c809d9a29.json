{"sha": "bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYjNjZmI4Y2U4MzUzZWY5MWI4YjdhY2MwZDYzMzljODA5ZDlhMjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-20T22:55:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-20T22:55:07Z"}, "message": "core::rt: Improve docs for run_in_newsched_task testing function", "tree": {"sha": "063fc99eeec6a3a2874196a4d29baf5133287cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/063fc99eeec6a3a2874196a4d29baf5133287cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29", "html_url": "https://github.com/rust-lang/rust/commit/bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e17202ff4a694a2cf96fd7d2ccb1d62265ce7c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e17202ff4a694a2cf96fd7d2ccb1d62265ce7c2", "html_url": "https://github.com/rust-lang/rust/commit/6e17202ff4a694a2cf96fd7d2ccb1d62265ce7c2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "e394a873feac6442d80741ed6f93e914a5ea64a9", "filename": "src/libcore/rt/test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29/src%2Flibcore%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29/src%2Flibcore%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Ftest.rs?ref=bcb3cfb8ce8353ef91b8b7acc0d6339c809d9a29", "patch": "@@ -10,7 +10,8 @@\n \n use super::io::net::ip::{IpAddr, Ipv4};\n \n-// For setting up tests of the new scheduler\n+/// Creates a new scheduler in a new thread and runs a task in it,\n+/// then waits for the scheduler to exit.\n pub fn run_in_newsched_task(f: ~fn()) {\n     use cell::Cell;\n     use unstable::run_in_bare_thread;"}]}