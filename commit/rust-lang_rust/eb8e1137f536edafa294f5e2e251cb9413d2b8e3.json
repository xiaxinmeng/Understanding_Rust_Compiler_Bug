{"sha": "eb8e1137f536edafa294f5e2e251cb9413d2b8e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOGUxMTM3ZjUzNmVkYWZhMjk0ZjVlMmUyNTFjYjk0MTNkMmI4ZTM=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-02-15T11:06:21Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-02-15T11:27:37Z"}, "message": "openbsd: disable test_file_desc test\n\npipe(2), under FreeBSD and OpenBSD return a bidirectionnal pipe. So\nreading from the writer would block (waiting data) instead of returning\nan error.", "tree": {"sha": "b8feafee68f454e8e7f675ab0d793f3eac496928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8feafee68f454e8e7f675ab0d793f3eac496928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb8e1137f536edafa294f5e2e251cb9413d2b8e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb8e1137f536edafa294f5e2e251cb9413d2b8e3", "html_url": "https://github.com/rust-lang/rust/commit/eb8e1137f536edafa294f5e2e251cb9413d2b8e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb8e1137f536edafa294f5e2e251cb9413d2b8e3/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b63cee4a11fcfecf20ed8419bc3bd6859e6496bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b63cee4a11fcfecf20ed8419bc3bd6859e6496bc", "html_url": "https://github.com/rust-lang/rust/commit/b63cee4a11fcfecf20ed8419bc3bd6859e6496bc"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "0ee2b5b68090ede1123950edbb95c94059d8ed8a", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e1137f536edafa294f5e2e251cb9413d2b8e3/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e1137f536edafa294f5e2e251cb9413d2b8e3/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=eb8e1137f536edafa294f5e2e251cb9413d2b8e3", "patch": "@@ -364,7 +364,10 @@ mod tests {\n     use os;\n     use prelude::v1::*;\n \n-    #[cfg_attr(target_os = \"freebsd\", ignore)] // hmm, maybe pipes have a tiny buffer\n+    #[cfg_attr(any(target_os = \"freebsd\",\n+                   target_os = \"openbsd\"),\n+               ignore)]\n+    // under some system, pipe(2) will return a bidrectionnal pipe\n     #[test]\n     fn test_file_desc() {\n         // Run this test with some pipes so we don't have to mess around with"}]}