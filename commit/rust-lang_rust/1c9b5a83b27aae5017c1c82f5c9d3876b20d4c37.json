{"sha": "1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOWI1YTgzYjI3YWFlNTAxN2MxYzgyZjVjOWQzODc2YjIwZDRjMzc=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-30T02:43:49Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-31T04:18:08Z"}, "message": "RIMOV, round 6.\n\nThis gets rid of `mut` inside bare vectors. It's going to cause some\nproblems later.", "tree": {"sha": "4723e65b2fbea843bc51ff2236038833c56f414c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4723e65b2fbea843bc51ff2236038833c56f414c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "html_url": "https://github.com/rust-lang/rust/commit/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "610fd6bc932c7befe0b87b92c1a63565fa3bf02e", "url": "https://api.github.com/repos/rust-lang/rust/commits/610fd6bc932c7befe0b87b92c1a63565fa3bf02e", "html_url": "https://github.com/rust-lang/rust/commit/610fd6bc932c7befe0b87b92c1a63565fa3bf02e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "688cd32a1e0ce4b18f75748a671e7a155e4ca77f", "filename": "src/libcore/hash.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/src%2Flibcore%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/src%2Flibcore%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash.rs?ref=1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "patch": "@@ -169,7 +169,7 @@ struct SipState {\n     mut v1: u64,\n     mut v2: u64,\n     mut v3: u64,\n-    tail: [mut u8 * 8], // unprocessed bytes\n+    mut tail: [u8 * 8], // unprocessed bytes\n     mut ntail: uint,  // how many bytes in tail are valid\n }\n \n@@ -183,7 +183,7 @@ fn SipState(key0: u64, key1: u64) -> SipState {\n         mut v1 : 0u64,\n         mut v2 : 0u64,\n         mut v3 : 0u64,\n-        tail : [mut 0u8,0,0,0,0,0,0,0],\n+        mut tail : [0u8,0,0,0,0,0,0,0],\n         mut ntail : 0u,\n     };\n     (&state).reset();"}, {"sha": "d928ad264fdd298718d96753fb6915187b631c61", "filename": "src/librustc/middle/typeck/infer/region_inference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs?ref=1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "patch": "@@ -1237,15 +1237,15 @@ impl RegionVarBindings {\n                 classification: Contracting,\n                 span: self.var_spans[var_idx],\n                 value: NoValue,\n-                head_edge: [mut uint::max_value, uint::max_value]\n+                head_edge: [uint::max_value, uint::max_value]\n             }\n         });\n \n         // It would be nice to write this using map():\n         let mut edges = vec::with_capacity(num_edges);\n         for self.constraints.each_ref |constraint, span| {\n             edges.push(GraphEdge {\n-                next_edge: [mut uint::max_value, uint::max_value],\n+                next_edge: [uint::max_value, uint::max_value],\n                 constraint: *constraint,\n                 span: *span\n             });"}, {"sha": "5e5537aedeaccb004199401dee72f2da8498cbd5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1c9b5a83b27aae5017c1c82f5c9d3876b20d4c37", "patch": "@@ -193,7 +193,7 @@ pub fn Parser(sess: parse_sess,\n         token: tok0.tok,\n         span: span0,\n         last_span: span0,\n-        buffer: [mut {tok: tok0.tok, sp: span0}, ..4],\n+        mut buffer: [{tok: tok0.tok, sp: span0}, ..4],\n         buffer_start: 0,\n         buffer_end: 0,\n         tokens_consumed: 0u,\n@@ -213,7 +213,7 @@ pub struct Parser {\n     mut token: token::Token,\n     mut span: span,\n     mut last_span: span,\n-    mut buffer: [mut {tok: token::Token, sp: span} * 4],\n+    mut buffer: [{tok: token::Token, sp: span} * 4],\n     mut buffer_start: int,\n     mut buffer_end: int,\n     mut tokens_consumed: uint,"}]}