{"sha": "f8f44cfb9b598efea7cfbabdad356912e9b09afd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZjQ0Y2ZiOWI1OThlZmVhN2NmYmFiZGFkMzU2OTEyZTliMDlhZmQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-21T14:24:15Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-21T14:24:15Z"}, "message": "Fall back to parent DefMaps when resolving paths", "tree": {"sha": "c99321f9c3838a741b96523af1dffca73724d819", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c99321f9c3838a741b96523af1dffca73724d819"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8f44cfb9b598efea7cfbabdad356912e9b09afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f44cfb9b598efea7cfbabdad356912e9b09afd", "html_url": "https://github.com/rust-lang/rust/commit/f8f44cfb9b598efea7cfbabdad356912e9b09afd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8f44cfb9b598efea7cfbabdad356912e9b09afd/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "896dfacfc47068df716fe4969a68adefadb1693e", "url": "https://api.github.com/repos/rust-lang/rust/commits/896dfacfc47068df716fe4969a68adefadb1693e", "html_url": "https://github.com/rust-lang/rust/commit/896dfacfc47068df716fe4969a68adefadb1693e"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "ec90f4e65054e96b250d6493943649cf0d0d8dd9", "filename": "crates/hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f8f44cfb9b598efea7cfbabdad356912e9b09afd/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8f44cfb9b598efea7cfbabdad356912e9b09afd/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=f8f44cfb9b598efea7cfbabdad356912e9b09afd", "patch": "@@ -103,6 +103,43 @@ impl DefMap {\n         original_module: LocalModuleId,\n         path: &ModPath,\n         shadow: BuiltinShadowMode,\n+    ) -> ResolvePathResult {\n+        let mut result = ResolvePathResult::empty(ReachedFixedPoint::No);\n+        result.segment_index = Some(usize::max_value());\n+\n+        let mut current_map = self;\n+        loop {\n+            let new = current_map.resolve_path_fp_with_macro_single(\n+                db,\n+                mode,\n+                original_module,\n+                path,\n+                shadow,\n+            );\n+\n+            // Merge `new` into `result`.\n+            result.resolved_def = result.resolved_def.or(new.resolved_def);\n+            if result.reached_fixedpoint == ReachedFixedPoint::No {\n+                result.reached_fixedpoint = new.reached_fixedpoint;\n+            }\n+            // FIXME: this doesn't seem right; what if the different namespace resolutions come from different crates?\n+            result.krate = result.krate.or(new.krate);\n+            result.segment_index = result.segment_index.min(new.segment_index);\n+\n+            match &current_map.parent {\n+                Some(map) => current_map = map,\n+                None => return result,\n+            }\n+        }\n+    }\n+\n+    pub(super) fn resolve_path_fp_with_macro_single(\n+        &self,\n+        db: &dyn DefDatabase,\n+        mode: ResolveMode,\n+        original_module: LocalModuleId,\n+        path: &ModPath,\n+        shadow: BuiltinShadowMode,\n     ) -> ResolvePathResult {\n         let mut segments = path.segments.iter().enumerate();\n         let mut curr_per_ns: PerNs = match path.kind {"}]}