{"sha": "708f053807a0844d8d772d14a9d636b232ec5f90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOGYwNTM4MDdhMDg0NGQ4ZDc3MmQxNGE5ZDYzNmIyMzJlYzVmOTA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-11-24T15:39:04Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-21T18:41:22Z"}, "message": "Add test for #65774\n\nCloses #65774", "tree": {"sha": "c337498445b249e4de4a832ede3f34c9386b666b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c337498445b249e4de4a832ede3f34c9386b666b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/708f053807a0844d8d772d14a9d636b232ec5f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/708f053807a0844d8d772d14a9d636b232ec5f90", "html_url": "https://github.com/rust-lang/rust/commit/708f053807a0844d8d772d14a9d636b232ec5f90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/708f053807a0844d8d772d14a9d636b232ec5f90/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f94eaeaf736e19b9249eb690a381202bcc5065b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f94eaeaf736e19b9249eb690a381202bcc5065b3", "html_url": "https://github.com/rust-lang/rust/commit/f94eaeaf736e19b9249eb690a381202bcc5065b3"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "e087da5d0ef407586c7ff53672ff8a819b96252e", "filename": "src/test/ui/associated-types/issue-65774-1.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-1.rs?ref=708f053807a0844d8d772d14a9d636b232ec5f90", "patch": "@@ -0,0 +1,57 @@\n+#![feature(associated_type_defaults)]\n+\n+trait MyDisplay { fn method(&self) { } }\n+\n+impl<'a, T: MyDisplay> MyDisplay for &'a mut T { }\n+\n+struct T;\n+\n+trait MPU {\n+    type MpuConfig: MyDisplay = T;\n+    //~^ ERROR the trait bound `T: MyDisplay` is not satisfied\n+}\n+\n+struct S;\n+\n+impl MPU for S { }\n+//~^ ERROR the trait bound `T: MyDisplay` is not satisfied\n+\n+trait MyWrite {\n+    fn my_write(&self, _: &dyn MyDisplay) { }\n+}\n+\n+trait ProcessType {\n+    fn process_detail_fmt(&self, _: &mut dyn MyWrite);\n+}\n+\n+struct Process;\n+\n+impl ProcessType for Process {\n+    fn process_detail_fmt(&self, writer: &mut dyn MyWrite)\n+    {\n+\n+        let mut val: Option<<S as MPU>::MpuConfig> = None;\n+        let valref: &mut <S as MPU>::MpuConfig = val.as_mut().unwrap();\n+\n+        // // This causes a different ICE (but its similar if you squint right):\n+        // //\n+        // // `Unimplemented` selecting `Binder(<T as MyDisplay>)` during codegen\n+        //\n+        // writer.my_write(valref)\n+\n+        // This one causes the ICE:\n+        // FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<T as MyDisplay>)), depth=1),Unimplemented)\n+        let closure = |config: &mut <S as MPU>::MpuConfig| writer.my_write(&config);\n+        closure(valref);\n+    }\n+}\n+\n+fn create() -> &'static dyn ProcessType {\n+    let input: Option<&mut Process> = None;\n+    let process: &mut Process = input.unwrap();\n+    process\n+}\n+\n+pub fn main() {\n+    create();\n+}"}, {"sha": "559136be705e28de59a639ff4f231611cfc23a1c", "filename": "src/test/ui/associated-types/issue-65774-1.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-1.stderr?ref=708f053807a0844d8d772d14a9d636b232ec5f90", "patch": "@@ -0,0 +1,17 @@\n+error[E0277]: the trait bound `T: MyDisplay` is not satisfied\n+  --> $DIR/issue-65774-1.rs:10:21\n+   |\n+LL | trait MPU {\n+   | --------- required by `MPU`\n+LL |     type MpuConfig: MyDisplay = T;\n+   |                     ^^^^^^^^^ the trait `MyDisplay` is not implemented for `T`\n+\n+error[E0277]: the trait bound `T: MyDisplay` is not satisfied\n+  --> $DIR/issue-65774-1.rs:16:6\n+   |\n+LL | impl MPU for S { }\n+   |      ^^^ the trait `MyDisplay` is not implemented for `T`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "fba41fc0af797525847a8a977b091ee1ddb0bb3b", "filename": "src/test/ui/associated-types/issue-65774-2.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-2.rs?ref=708f053807a0844d8d772d14a9d636b232ec5f90", "patch": "@@ -0,0 +1,57 @@\n+#![feature(associated_type_defaults)]\n+\n+trait MyDisplay { fn method(&self) { } }\n+\n+impl<'a, T: MyDisplay> MyDisplay for &'a mut T { }\n+\n+struct T;\n+\n+trait MPU {\n+    type MpuConfig: MyDisplay = T;\n+    //~^ ERROR the trait bound `T: MyDisplay` is not satisfied\n+}\n+\n+struct S;\n+\n+impl MPU for S { }\n+//~^ ERROR the trait bound `T: MyDisplay` is not satisfied\n+\n+trait MyWrite {\n+    fn my_write(&self, _: &dyn MyDisplay) { }\n+}\n+\n+trait ProcessType {\n+    fn process_detail_fmt(&self, _: &mut dyn MyWrite);\n+}\n+\n+struct Process;\n+\n+impl ProcessType for Process {\n+    fn process_detail_fmt(&self, writer: &mut dyn MyWrite)\n+    {\n+\n+        let mut val: Option<<S as MPU>::MpuConfig> = None;\n+        let valref: &mut <S as MPU>::MpuConfig = val.as_mut().unwrap();\n+\n+        // // This causes a different ICE (but its similar if you squint right):\n+        // //\n+        // // `Unimplemented` selecting `Binder(<T as MyDisplay>)` during codegen\n+        //\n+        writer.my_write(valref)\n+\n+        // This one causes the ICE:\n+        // FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<T as MyDisplay>)), depth=1),Unimplemented)\n+        /*let closure = |config: &mut <S as MPU>::MpuConfig| writer.my_write(&config);\n+        closure(valref);*/\n+    }\n+}\n+\n+fn create() -> &'static dyn ProcessType {\n+    let input: Option<&mut Process> = None;\n+    let process: &mut Process = input.unwrap();\n+    process\n+}\n+\n+pub fn main() {\n+    create();\n+}"}, {"sha": "cb515964226a5a3ee5a78a867f71430686174d2f", "filename": "src/test/ui/associated-types/issue-65774-2.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/708f053807a0844d8d772d14a9d636b232ec5f90/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-65774-2.stderr?ref=708f053807a0844d8d772d14a9d636b232ec5f90", "patch": "@@ -0,0 +1,17 @@\n+error[E0277]: the trait bound `T: MyDisplay` is not satisfied\n+  --> $DIR/issue-65774-2.rs:10:21\n+   |\n+LL | trait MPU {\n+   | --------- required by `MPU`\n+LL |     type MpuConfig: MyDisplay = T;\n+   |                     ^^^^^^^^^ the trait `MyDisplay` is not implemented for `T`\n+\n+error[E0277]: the trait bound `T: MyDisplay` is not satisfied\n+  --> $DIR/issue-65774-2.rs:16:6\n+   |\n+LL | impl MPU for S { }\n+   |      ^^^ the trait `MyDisplay` is not implemented for `T`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}