{"sha": "ab906179ccd6254f51f0d254479c9b211b0276b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOTA2MTc5Y2NkNjI1NGY1MWYwZDI1NDQ3OWM5YjIxMWIwMjc2YjE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-02-18T04:42:11Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-02-18T04:42:11Z"}, "message": "Always inline `run_utf8_validation`.\n\nIt only has two call sites, and the one within `from_utf8` is hot within\nrustc itself.", "tree": {"sha": "f020ed8f001ae5410bfa46d40f74819f2aa86903", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f020ed8f001ae5410bfa46d40f74819f2aa86903"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab906179ccd6254f51f0d254479c9b211b0276b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab906179ccd6254f51f0d254479c9b211b0276b1", "html_url": "https://github.com/rust-lang/rust/commit/ab906179ccd6254f51f0d254479c9b211b0276b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab906179ccd6254f51f0d254479c9b211b0276b1/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e7af4669f80e5f682141f050193ab679afdb4b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7af4669f80e5f682141f050193ab679afdb4b1", "html_url": "https://github.com/rust-lang/rust/commit/5e7af4669f80e5f682141f050193ab679afdb4b1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a943e49c3e24dc435236994681bf168b2baec436", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab906179ccd6254f51f0d254479c9b211b0276b1/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab906179ccd6254f51f0d254479c9b211b0276b1/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=ab906179ccd6254f51f0d254479c9b211b0276b1", "patch": "@@ -1499,7 +1499,7 @@ fn contains_nonascii(x: usize) -> bool {\n \n /// Walks through `v` checking that it's a valid UTF-8 sequence,\n /// returning `Ok(())` in that case, or, if it is invalid, `Err(err)`.\n-#[inline]\n+#[inline(always)]\n fn run_utf8_validation(v: &[u8]) -> Result<(), Utf8Error> {\n     let mut index = 0;\n     let len = v.len();"}]}