{"sha": "e5d90652e203aee41ae41b7ad696652e77654766", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZDkwNjUyZTIwM2FlZTQxYWU0MWI3YWQ2OTY2NTJlNzc2NTQ3NjY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-05T12:29:17Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-04T09:17:36Z"}, "message": "Comment on the unsafety code for layout constrained fields", "tree": {"sha": "a93a22a0cb65ec9ec4dac38dca45e729644f15ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a93a22a0cb65ec9ec4dac38dca45e729644f15ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5d90652e203aee41ae41b7ad696652e77654766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d90652e203aee41ae41b7ad696652e77654766", "html_url": "https://github.com/rust-lang/rust/commit/e5d90652e203aee41ae41b7ad696652e77654766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5d90652e203aee41ae41b7ad696652e77654766/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55abc0bc907b84b0fe7a9a4793c1549dad978762", "url": "https://api.github.com/repos/rust-lang/rust/commits/55abc0bc907b84b0fe7a9a4793c1549dad978762", "html_url": "https://github.com/rust-lang/rust/commit/55abc0bc907b84b0fe7a9a4793c1549dad978762"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "671ca355dbfc1ae3914d908dfec6bd6c4d63724e", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5d90652e203aee41ae41b7ad696652e77654766/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d90652e203aee41ae41b7ad696652e77654766/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=e5d90652e203aee41ae41b7ad696652e77654766", "patch": "@@ -192,6 +192,12 @@ impl<'a, 'tcx> Visitor<'tcx> for UnsafetyChecker<'a, 'tcx> {\n                     .ty(self.mir, self.tcx)\n                     .to_ty(self.tcx)\n                     .is_freeze(self.tcx, self.param_env, self.source_info.span);\n+                // prevent\n+                // * `&mut x.field`\n+                // * `x.field = y;`\n+                // * `&x.field` if `field`'s type has interior mutability\n+                // because either of these would allow modifying the layout constrained field and\n+                // insert values that violate the layout constraints.\n                 if context.is_mutating_use() || is_borrow_of_interior_mut {\n                     self.check_mut_borrowing_layout_constrained_field(\n                         place, context.is_mutating_use(),"}]}