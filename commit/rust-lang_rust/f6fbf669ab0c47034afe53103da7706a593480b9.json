{"sha": "f6fbf669ab0c47034afe53103da7706a593480b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZmJmNjY5YWIwYzQ3MDM0YWZlNTMxMDNkYTc3MDZhNTkzNDgwYjk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-10T07:40:40Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-11T11:36:15Z"}, "message": "Mark RefUnwindSafe impls for stable atomic types as stable.\n\nThese impls were effectively stable. #[unstable] had no effect here,\nsince both RefUnwindSafe and these types were already stable.\n\nThese effectively became stable as soon as the types became stable,\nwhich was in 1.34.0.", "tree": {"sha": "da60e1f6ed62eb716aca375749e1be1a90aa5a6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da60e1f6ed62eb716aca375749e1be1a90aa5a6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6fbf669ab0c47034afe53103da7706a593480b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6fbf669ab0c47034afe53103da7706a593480b9", "html_url": "https://github.com/rust-lang/rust/commit/f6fbf669ab0c47034afe53103da7706a593480b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6fbf669ab0c47034afe53103da7706a593480b9/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5c645f40e98bfcda81a10929aaaf18dd0a00414", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c645f40e98bfcda81a10929aaaf18dd0a00414", "html_url": "https://github.com/rust-lang/rust/commit/e5c645f40e98bfcda81a10929aaaf18dd0a00414"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "18d9c2f11b544b4b687f4451c44899a708b97fc4", "filename": "library/std/src/panic.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f6fbf669ab0c47034afe53103da7706a593480b9/library%2Fstd%2Fsrc%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6fbf669ab0c47034afe53103da7706a593480b9/library%2Fstd%2Fsrc%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanic.rs?ref=f6fbf669ab0c47034afe53103da7706a593480b9", "patch": "@@ -232,16 +232,16 @@ impl<T: ?Sized> RefUnwindSafe for RwLock<T> {}\n #[stable(feature = \"unwind_safe_atomic_refs\", since = \"1.14.0\")]\n impl RefUnwindSafe for atomic::AtomicIsize {}\n #[cfg(target_has_atomic_load_store = \"8\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicI8 {}\n #[cfg(target_has_atomic_load_store = \"16\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicI16 {}\n #[cfg(target_has_atomic_load_store = \"32\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicI32 {}\n #[cfg(target_has_atomic_load_store = \"64\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicI64 {}\n #[cfg(target_has_atomic_load_store = \"128\")]\n #[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n@@ -251,16 +251,16 @@ impl RefUnwindSafe for atomic::AtomicI128 {}\n #[stable(feature = \"unwind_safe_atomic_refs\", since = \"1.14.0\")]\n impl RefUnwindSafe for atomic::AtomicUsize {}\n #[cfg(target_has_atomic_load_store = \"8\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicU8 {}\n #[cfg(target_has_atomic_load_store = \"16\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicU16 {}\n #[cfg(target_has_atomic_load_store = \"32\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicU32 {}\n #[cfg(target_has_atomic_load_store = \"64\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for atomic::AtomicU64 {}\n #[cfg(target_has_atomic_load_store = \"128\")]\n #[unstable(feature = \"integer_atomics\", issue = \"32976\")]"}]}