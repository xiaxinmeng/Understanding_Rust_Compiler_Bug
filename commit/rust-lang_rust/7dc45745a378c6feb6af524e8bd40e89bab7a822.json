{"sha": "7dc45745a378c6feb6af524e8bd40e89bab7a822", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYzQ1NzQ1YTM3OGM2ZmViNmFmNTI0ZThiZDQwZTg5YmFiN2E4MjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T16:51:11Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T19:15:35Z"}, "message": "save top-level macros in module items", "tree": {"sha": "1d223d721a0fb94f5d024dfee52503275f203537", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d223d721a0fb94f5d024dfee52503275f203537"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dc45745a378c6feb6af524e8bd40e89bab7a822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc45745a378c6feb6af524e8bd40e89bab7a822", "html_url": "https://github.com/rust-lang/rust/commit/7dc45745a378c6feb6af524e8bd40e89bab7a822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dc45745a378c6feb6af524e8bd40e89bab7a822/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5b2fd67711eeab6146021542937028dff3bf8a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b2fd67711eeab6146021542937028dff3bf8a7", "html_url": "https://github.com/rust-lang/rust/commit/e5b2fd67711eeab6146021542937028dff3bf8a7"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "2f9684e3327b75aa787324f2b4f9106e06c8321b", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7dc45745a378c6feb6af524e8bd40e89bab7a822/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc45745a378c6feb6af524e8bd40e89bab7a822/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=7dc45745a378c6feb6af524e8bd40e89bab7a822", "patch": "@@ -33,7 +33,7 @@ mod ty;\n \n use std::ops::Index;\n \n-use ra_syntax::{SyntaxNodeRef, SyntaxNode, SyntaxKind};\n+use ra_syntax::{SyntaxNodeRef, SyntaxNode, SyntaxKind, SourceFile, AstNode, ast};\n use ra_db::{LocationIntener, SourceRootId, FileId, Cancelable};\n \n use crate::{\n@@ -169,11 +169,23 @@ pub struct SourceFileItems {\n }\n \n impl SourceFileItems {\n-    fn new(file_id: FileId) -> SourceFileItems {\n-        SourceFileItems {\n+    fn new(file_id: FileId, source_file: SourceFile) -> SourceFileItems {\n+        let mut res = SourceFileItems {\n             file_id,\n             arena: Arena::default(),\n-        }\n+        };\n+        res.init(source_file);\n+        res\n+    }\n+\n+    fn init(&mut self, source_file: SourceFile) {\n+        source_file.syntax().descendants().for_each(|it| {\n+            if let Some(module_item) = ast::ModuleItem::cast(it) {\n+                self.alloc(module_item.syntax().owned());\n+            } else if let Some(macro_call) = ast::MacroCall::cast(it) {\n+                self.alloc(macro_call.syntax().owned());\n+            }\n+        });\n     }\n \n     fn alloc(&mut self, item: SyntaxNode) -> SourceFileItemId {"}, {"sha": "f6623122230a177a8b5823bdabf8b88d58d970cc", "filename": "crates/ra_hir/src/query_definitions.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7dc45745a378c6feb6af524e8bd40e89bab7a822/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc45745a378c6feb6af524e8bd40e89bab7a822/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs?ref=7dc45745a378c6feb6af524e8bd40e89bab7a822", "patch": "@@ -48,17 +48,9 @@ pub(super) fn enum_data(db: &impl HirDatabase, def_id: DefId) -> Cancelable<Arc<\n }\n \n pub(super) fn file_items(db: &impl HirDatabase, file_id: FileId) -> Arc<SourceFileItems> {\n-    let mut res = SourceFileItems::new(file_id);\n     let source_file = db.source_file(file_id);\n     let source_file = source_file.borrowed();\n-    source_file\n-        .syntax()\n-        .descendants()\n-        .filter_map(ast::ModuleItem::cast)\n-        .map(|it| it.syntax().owned())\n-        .for_each(|it| {\n-            res.alloc(it);\n-        });\n+    let res = SourceFileItems::new(file_id, source_file);\n     Arc::new(res)\n }\n "}, {"sha": "6753c513f3ed08d05e40b82d0712d597160c4bf1", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dc45745a378c6feb6af524e8bd40e89bab7a822/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dc45745a378c6feb6af524e8bd40e89bab7a822/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=7dc45745a378c6feb6af524e8bd40e89bab7a822", "patch": "@@ -51,7 +51,7 @@ use ra_text_edit::AtomTextEdit;\n use crate::yellow::GreenNode;\n \n /// `SourceFileNode` represents a parse tree for a single Rust file.\n-pub use crate::ast::SourceFileNode;\n+pub use crate::ast::{SourceFile, SourceFileNode};\n \n impl SourceFileNode {\n     fn new(green: GreenNode, errors: Vec<SyntaxError>) -> SourceFileNode {"}]}