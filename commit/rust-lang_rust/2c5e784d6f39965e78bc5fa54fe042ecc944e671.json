{"sha": "2c5e784d6f39965e78bc5fa54fe042ecc944e671", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNWU3ODRkNmYzOTk2NWU3OGJjNWZhNTRmZTA0MmVjYzk0NGU2NzE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-05-29T13:42:32Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-05-29T13:42:54Z"}, "message": "add const_fn features", "tree": {"sha": "fd10c6c087fdc7f8dfa90cd268736ab9854b5383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd10c6c087fdc7f8dfa90cd268736ab9854b5383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c5e784d6f39965e78bc5fa54fe042ecc944e671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c5e784d6f39965e78bc5fa54fe042ecc944e671", "html_url": "https://github.com/rust-lang/rust/commit/2c5e784d6f39965e78bc5fa54fe042ecc944e671", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c5e784d6f39965e78bc5fa54fe042ecc944e671/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f29fd4eb0eefc6df81e6b4c77cf6d48678e7563", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f29fd4eb0eefc6df81e6b4c77cf6d48678e7563", "html_url": "https://github.com/rust-lang/rust/commit/1f29fd4eb0eefc6df81e6b4c77cf6d48678e7563"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "0e3f9d5aaddf6aa29c87069a0dfcd52cfaa61c37", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -14,6 +14,7 @@\n #![feature(collections)]\n #![feature(collections_drain)]\n #![feature(core)]\n+#![feature(const_fn)]\n #![feature(hash)]\n #![feature(rand)]\n #![feature(rustc_private)]"}, {"sha": "6ec3f5b7869b017700c53db81ced0087b54b3bd5", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -14,6 +14,7 @@\n #![feature(box_syntax)]\n #![feature(unboxed_closures)]\n #![feature(core)]\n+#![feature(const_fn)]\n #![feature(test)]\n #![feature(rand)]\n #![feature(unicode)]"}, {"sha": "15767024ba80fb3eec77a348f1418f0518136edf", "filename": "src/liblog/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Fliblog%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Fliblog%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Flib.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -173,6 +173,7 @@\n #![feature(staged_api)]\n #![feature(box_syntax)]\n #![feature(core)]\n+#![feature(const_fn)]\n #![feature(std_misc)]\n \n use std::boxed;"}, {"sha": "4a715ca621cc2abf21f52947228667c2eaa978a4", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -29,6 +29,7 @@\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(collections)]\n+#![feature(const_fn)]\n #![feature(core)]\n #![feature(duration)]\n #![feature(duration_span)]"}, {"sha": "f25c6eb21a47b0a364c238af86476a9c9ab158f8", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -30,6 +30,7 @@\n #![feature(box_syntax)]\n #![feature(collections)]\n #![feature(core)]\n+#![feature(const_fn)]\n #![feature(libc)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "373fc04217540d3d3ec3665ba6cbcc8310758cce", "filename": "src/test/auxiliary/issue-17718.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fauxiliary%2Fissue-17718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fauxiliary%2Fissue-17718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-17718.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(const_fn)]\n+\n use std::sync::atomic;\n \n pub const C1: usize = 1;"}, {"sha": "19f790ddc90717875b915d866a5bd7670bfe7ae0", "filename": "src/test/compile-fail/dropck_arr_cycle_checked.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_arr_cycle_checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_arr_cycle_checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_arr_cycle_checked.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -13,6 +13,8 @@\n //\n // (Compare against compile-fail/dropck_vec_cycle_checked.rs)\n \n+#![feature(const_fn)]\n+\n use std::cell::Cell;\n use id::Id;\n "}, {"sha": "584e5eabf0cd8f7e21cee5de46b9ea11bcfac8e3", "filename": "src/test/compile-fail/dropck_tarena_cycle_checked.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_tarena_cycle_checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_tarena_cycle_checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_tarena_cycle_checked.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -17,6 +17,7 @@\n //  for the error message we see here.)\n \n #![allow(unstable)]\n+#![feature(const_fn)]\n \n extern crate arena;\n "}, {"sha": "6e0679da949e1792c3e3881ed0a915175c53511a", "filename": "src/test/compile-fail/dropck_trait_cycle_checked.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_trait_cycle_checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_trait_cycle_checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_trait_cycle_checked.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -13,6 +13,8 @@\n //\n // (Compare against compile-fail/dropck_vec_cycle_checked.rs)\n \n+#![feature(const_fn)]\n+\n use std::cell::Cell;\n use id::Id;\n "}, {"sha": "bc33ff8399aa5611fd59cd17c55469a61e0fec16", "filename": "src/test/compile-fail/dropck_vec_cycle_checked.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_vec_cycle_checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fdropck_vec_cycle_checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdropck_vec_cycle_checked.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -12,6 +12,8 @@\n //\n // (Compare against compile-fail/dropck_arr_cycle_checked.rs)\n \n+#![feature(const_fn)]\n+\n use std::cell::Cell;\n use id::Id;\n "}, {"sha": "d2df0d9ef270204834ffaf8f1d96c204292d30ec", "filename": "src/test/compile-fail/functional-struct-update-respects-privacy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-respects-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-respects-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-respects-privacy.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -10,6 +10,8 @@\n \n // RFC 736 (and Issue 21407): functional struct update should respect privacy.\n \n+#![feature(const_fn)]\n+\n // The `foo` module attempts to maintains an invariant that each `S`\n // has a unique `u64` id.\n use self::foo::S;"}, {"sha": "ec6d1141c1a057aff2677424b9393f8884bc888d", "filename": "src/test/compile-fail/issue-17718-const-borrow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17718-const-borrow.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(const_fn)]\n+\n use std::cell::UnsafeCell;\n \n const A: UnsafeCell<usize> = UnsafeCell::new(1);"}, {"sha": "7d0a9007829926e1ea4bb198ffcfd4ef5d0ffa1e", "filename": "src/test/compile-fail/issue-7364.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fissue-7364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fissue-7364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7364.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![feature(box_syntax)]\n+#![feature(const_fn)]\n \n use std::cell::RefCell;\n "}, {"sha": "375289596841d5ae59474d5a80034f71ac5926e3", "filename": "src/test/compile-fail/vec-must-not-hide-type-from-dropck.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fvec-must-not-hide-type-from-dropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fcompile-fail%2Fvec-must-not-hide-type-from-dropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-must-not-hide-type-from-dropck.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -23,6 +23,8 @@\n // conditions above to be satisfied, meaning that if the dropck is\n // sound, it should reject this code.\n \n+#![feature(const_fn)]\n+\n use std::cell::Cell;\n use id::Id;\n "}, {"sha": "8032b53e9dd7ca4aa8dc21082fb63bc2d46e131c", "filename": "src/test/debuginfo/constant-debug-locs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fdebuginfo%2Fconstant-debug-locs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Fdebuginfo%2Fconstant-debug-locs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fconstant-debug-locs.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -15,6 +15,7 @@\n #![allow(dead_code, unused_variables)]\n #![omit_gdb_pretty_printer_section]\n #![feature(std_misc, core)]\n+#![feature(const_fn)]\n \n // This test makes sure that the compiler doesn't crash when trying to assign\n // debug locations to const-expressions."}, {"sha": "b13e34256d2293704864de1db0c3144240b40dd9", "filename": "src/test/run-pass-valgrind/cast-enum-with-dtor.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #![allow(dead_code)]\n+#![feature(const_fn)]\n \n // check dtor calling order when casting enums.\n "}, {"sha": "8dc7d79ec2a7772c5c6d4162cd767d94ac118a2f", "filename": "src/test/run-pass/associated-types-project-from-type-param-via-bound-in-where-clause.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fassociated-types-project-from-type-param-via-bound-in-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fassociated-types-project-from-type-param-via-bound-in-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-project-from-type-param-via-bound-in-where-clause.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -12,6 +12,8 @@\n // `Item` originates in a where-clause, not the declaration of\n // `T`. Issue #20300.\n \n+#![feature(const_fn)]\n+\n use std::marker::{PhantomData};\n use std::sync::atomic::{AtomicUsize};\n use std::sync::atomic::Ordering::SeqCst;"}, {"sha": "e889d74c7ccc4e85be6317f0087bc3bf66e34c69", "filename": "src/test/run-pass/box-of-array-of-drop-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fbox-of-array-of-drop-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fbox-of-array-of-drop-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-of-array-of-drop-1.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -11,6 +11,8 @@\n // Test that we cleanup a fixed size Box<[D; k]> properly when D has a\n // destructor.\n \n+#![feature(const_fn)]\n+\n use std::thread;\n use std::sync::atomic::{AtomicUsize, Ordering};\n "}, {"sha": "f108ef4f5d22de94deefff812dc0ceca310bb88c", "filename": "src/test/run-pass/box-of-array-of-drop-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fbox-of-array-of-drop-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fbox-of-array-of-drop-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-of-array-of-drop-2.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -11,6 +11,8 @@\n // Test that we cleanup dynamic sized Box<[D]> properly when D has a\n // destructor.\n \n+#![feature(const_fn)]\n+\n use std::thread;\n use std::sync::atomic::{AtomicUsize, Ordering};\n "}, {"sha": "42c7a47c59db1f24791dfa6772a1e90a6c883306", "filename": "src/test/run-pass/const-fn-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fconst-fn-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fconst-fn-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-fn-method.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -10,7 +10,7 @@\n \n #![feature(const_fn)]\n \n-struct Foo { val: u32 }\n+struct Foo { value: u32 }\n \n impl Foo {\n     const fn new() -> Foo {"}, {"sha": "993e5e1c1e6e90f0eaa8f0f96f79de320ae0634c", "filename": "src/test/run-pass/issue-17718-static-unsafe-interior.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fissue-17718-static-unsafe-interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fissue-17718-static-unsafe-interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17718-static-unsafe-interior.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -11,6 +11,8 @@\n // pretty-expanded FIXME #23616\n \n #![feature(core)]\n+#![feature(const_fn)]\n+\n \n use std::marker;\n use std::cell::UnsafeCell;"}, {"sha": "2bb69d105ff5d8c50b05836f29e9e330f3a26e90", "filename": "src/test/run-pass/issue-17718.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fissue-17718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fissue-17718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17718.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -12,6 +12,7 @@\n \n \n #![feature(core)]\n+#![feature(const_fn)]\n \n extern crate issue_17718 as other;\n "}, {"sha": "699189a4e6aedd88657acc9e56aedbb1b121e14e", "filename": "src/test/run-pass/issue-21486.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fissue-21486.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fissue-21486.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21486.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -12,6 +12,7 @@\n // created via FRU and control-flow breaks in the middle of\n // construction.\n \n+#![feature(const_fn)]\n \n use std::sync::atomic::{Ordering, AtomicUsize};\n "}, {"sha": "89ac626158392f73f33da2da2c93039add3d0f0b", "filename": "src/test/run-pass/nested-vec-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fnested-vec-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fnested-vec-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested-vec-3.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -12,6 +12,7 @@\n // the contents implement Drop and we hit a panic in the middle of\n // construction.\n \n+#![feature(const_fn)]\n \n use std::thread;\n use std::sync::atomic::{AtomicUsize, Ordering};"}, {"sha": "b67eb205396b29cff30bdf088bc3877469b2c534", "filename": "src/test/run-pass/struct-order-of-eval-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-3.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -11,6 +11,7 @@\n // Checks that functional-record-update order-of-eval is as expected\n // even when no Drop-implementations are involved.\n \n+#![feature(const_fn)]\n \n use std::sync::atomic::{Ordering, AtomicUsize};\n "}, {"sha": "20d27d8b309bbb9c35795c129ffa4d61c906d7de", "filename": "src/test/run-pass/struct-order-of-eval-4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-4.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -11,6 +11,7 @@\n // Checks that struct-literal expression order-of-eval is as expected\n // even when no Drop-implementations are involved.\n \n+#![feature(const_fn)]\n \n use std::sync::atomic::{Ordering, AtomicUsize};\n "}, {"sha": "209fe22207f49b5386b012c2ff48134a2a5d72f8", "filename": "src/test/run-pass/vector-sort-panic-safe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fvector-sort-panic-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c5e784d6f39965e78bc5fa54fe042ecc944e671/src%2Ftest%2Frun-pass%2Fvector-sort-panic-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvector-sort-panic-safe.rs?ref=2c5e784d6f39965e78bc5fa54fe042ecc944e671", "patch": "@@ -10,6 +10,7 @@\n \n \n #![feature(rand, core)]\n+#![feature(const_fn)]\n \n use std::sync::atomic::{AtomicUsize, Ordering};\n use std::__rand::{thread_rng, Rng};"}]}