{"sha": "1ee8fefcff6d60652945c63c485ba55b5e2bf581", "node_id": "C_kwDOAAsO6NoAKDFlZThmZWZjZmY2ZDYwNjUyOTQ1YzYzYzQ4NWJhNTViNWUyYmY1ODE", "commit": {"author": {"name": "Bernardo Uriarte", "email": "berublan@gmail.com", "date": "2022-05-21T14:18:55Z"}, "committer": {"name": "Bernardo Uriarte", "email": "berublan@gmail.com", "date": "2022-05-21T14:18:55Z"}, "message": "take into account excludeDirs when computing linked_projects", "tree": {"sha": "a7b1aadcd44d0ea1c8859abd5fe2f1b154b6590a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7b1aadcd44d0ea1c8859abd5fe2f1b154b6590a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ee8fefcff6d60652945c63c485ba55b5e2bf581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee8fefcff6d60652945c63c485ba55b5e2bf581", "html_url": "https://github.com/rust-lang/rust/commit/1ee8fefcff6d60652945c63c485ba55b5e2bf581", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ee8fefcff6d60652945c63c485ba55b5e2bf581/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7009e5ab353dddcf9005c057e9af23d1c81d8a79", "url": "https://api.github.com/repos/rust-lang/rust/commits/7009e5ab353dddcf9005c057e9af23d1c81d8a79", "html_url": "https://github.com/rust-lang/rust/commit/7009e5ab353dddcf9005c057e9af23d1c81d8a79"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "d7e6c8a82ad804751491ac77341f8de4c242054f", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1ee8fefcff6d60652945c63c485ba55b5e2bf581/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ee8fefcff6d60652945c63c485ba55b5e2bf581/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=1ee8fefcff6d60652945c63c485ba55b5e2bf581", "patch": "@@ -694,7 +694,22 @@ impl Config {\n         match self.data.linkedProjects.as_slice() {\n             [] => match self.discovered_projects.as_ref() {\n                 Some(discovered_projects) => {\n-                    discovered_projects.iter().cloned().map(LinkedProject::from).collect()\n+                    let exclude_dirs: Vec<_> = self\n+                        .data\n+                        .files_excludeDirs\n+                        .iter()\n+                        .map(|p| self.root_path.join(p))\n+                        .collect();\n+                    discovered_projects\n+                        .iter()\n+                        .filter(|p| {\n+                            let (ProjectManifest::ProjectJson(path)\n+                            | ProjectManifest::CargoToml(path)) = p;\n+                            !exclude_dirs.iter().any(|p| path.starts_with(p))\n+                        })\n+                        .cloned()\n+                        .map(LinkedProject::from)\n+                        .collect()\n                 }\n                 None => Vec::new(),\n             },"}]}