{"sha": "34e6995aa3cec561595d52ca28471d9a6c8dd437", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZTY5OTVhYTNjZWM1NjE1OTVkNTJjYTI4NDcxZDlhNmM4ZGQ0Mzc=", "commit": {"author": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-29T19:54:29Z"}, "committer": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-29T19:54:29Z"}, "message": "Add information about numeric casts, from the nomicon", "tree": {"sha": "fac6a4ca1b6b24c89d9d7fff48351041027af786", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fac6a4ca1b6b24c89d9d7fff48351041027af786"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34e6995aa3cec561595d52ca28471d9a6c8dd437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34e6995aa3cec561595d52ca28471d9a6c8dd437", "html_url": "https://github.com/rust-lang/rust/commit/34e6995aa3cec561595d52ca28471d9a6c8dd437", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34e6995aa3cec561595d52ca28471d9a6c8dd437/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6952121e0a4654c7d94bfe679c97afac8f66ce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6952121e0a4654c7d94bfe679c97afac8f66ce9", "html_url": "https://github.com/rust-lang/rust/commit/d6952121e0a4654c7d94bfe679c97afac8f66ce9"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "ae7c1c661a2c39e85460cb6d94b9ad2ae7999dba", "filename": "src/doc/book/casting-between-types.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/34e6995aa3cec561595d52ca28471d9a6c8dd437/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/34e6995aa3cec561595d52ca28471d9a6c8dd437/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fcasting-between-types.md?ref=34e6995aa3cec561595d52ca28471d9a6c8dd437", "patch": "@@ -67,6 +67,32 @@ For example\n let one = true as u8;\n let at_sign = 64 as char;\n ```\n+\n+For numeric casts, there are quite a few cases to consider:\n+\n+* Casting between two integers of the same size (e.g. i32 -> u32) is a no-op\n+* Casting from a larger integer to a smaller integer (e.g. u32 -> u8) will\n+  truncate\n+* Casting from a smaller integer to a larger integer (e.g. u8 -> u32) will\n+    * zero-extend if the source is unsigned\n+    * sign-extend if the source is signed\n+* Casting from a float to an integer will round the float towards zero\n+    * **[NOTE: currently this will cause Undefined Behavior if the rounded\n+      value cannot be represented by the target integer type][float-int]**.\n+      This includes Inf and NaN. This is a bug and will be fixed.\n+* Casting from an integer to float will produce the floating point\n+  representation of the integer, rounded if necessary (rounding strategy\n+  unspecified)\n+* Casting from an f32 to an f64 is perfect and lossless\n+* Casting from an f64 to an f32 will produce the closest possible value\n+  (rounding strategy unspecified)\n+    * **[NOTE: currently this will cause Undefined Behavior if the value\n+      is finite but larger or smaller than the largest or smallest finite\n+      value representable by f32][float-float]**. This is a bug and will\n+      be fixed.\n+\n+[float-int]: https://github.com/rust-lang/rust/issues/10184\n+[float-float]: https://github.com/rust-lang/rust/issues/15536\n  \n ## Pointer casts\n  "}]}