{"sha": "b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZGJjN2MxNWQ0ZjMwMjc0MTBiMzgzNjE1NGRhMWFlNjNlMGE3ZDM=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-03-27T10:44:33Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-04-03T17:43:12Z"}, "message": "Implement generating graphs of the build steps", "tree": {"sha": "3cb21d315f0ef395fc0005beaf61b16c275e5cb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cb21d315f0ef395fc0005beaf61b16c275e5cb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "html_url": "https://github.com/rust-lang/rust/commit/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4620a3d1471fd7943ebd413dcbc94d51bcfea8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4620a3d1471fd7943ebd413dcbc94d51bcfea8e", "html_url": "https://github.com/rust-lang/rust/commit/f4620a3d1471fd7943ebd413dcbc94d51bcfea8e"}], "stats": {"total": 73, "additions": 69, "deletions": 4}, "files": [{"sha": "5b918a063b07c80a8a3791c71fb3e0e0e6cc20a0", "filename": "src/Cargo.lock", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "patch": "@@ -124,6 +124,7 @@ dependencies = [\n  \"lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"petgraph 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pretty_assertions 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -641,6 +642,11 @@ version = \"0.1.0\"\n name = \"find_impls\"\n version = \"0.1.0\"\n \n+[[package]]\n+name = \"fixedbitset\"\n+version = \"0.1.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"flate2\"\n version = \"1.0.1\"\n@@ -1168,6 +1174,11 @@ dependencies = [\n  \"vcpkg 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"ordermap\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"owning_ref\"\n version = \"0.3.3\"\n@@ -1234,6 +1245,15 @@ dependencies = [\n  \"syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"petgraph\"\n+version = \"0.4.12\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"pkg-config\"\n version = \"0.3.9\"\n@@ -2709,6 +2729,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"934799b6c1de475a012a02dab0ace1ace43789ee4b99bcfbf1a2e3e8ced5de82\"\n \"checksum failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c7cdda555bb90c9bb67a3b670a0f42de8e73f5981524123ad8578aafec8ddb8b\"\n \"checksum filetime 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"714653f3e34871534de23771ac7b26e999651a0a228f47beb324dfdf1dd4b10f\"\n+\"checksum fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"86d4de0081402f5e88cdac65c8dcdcc73118c1a7a465e2a05f0da05843a8ea33\"\n \"checksum flate2 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9fac2277e84e5e858483756647a9d0aa8d9a2b7cba517fd84325a0aaa69a0909\"\n \"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n \"checksum foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\n@@ -2764,12 +2785,14 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum openssl 0.10.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1636c9f1d78af9cbcc50e523bfff4a30274108aad5e86761afd4d31e4e184fa7\"\n \"checksum openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de\"\n \"checksum openssl-sys 0.9.27 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d6fdc5c4a02e69ce65046f1763a0181107038e02176233acb0b3351d7cc588f9\"\n+\"checksum ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n \"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n \"checksum parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9fd9d732f2de194336fb02fe11f9eed13d9e76f13f4315b4d88a14ca411750cd\"\n \"checksum parking_lot_core 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"538ef00b7317875071d5e00f603f24d16f0b474c1a5fc0ccb8b454ca72eafa79\"\n \"checksum percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831\"\n \"checksum pest 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0fce5d8b5cc33983fc74f78ad552b5522ab41442c4ca91606e4236eb4b5ceefc\"\n \"checksum pest_derive 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab94faafeb93f4c5e3ce81ca0e5a779529a602ad5d09ae6d21996bfb8b6a52bf\"\n+\"checksum petgraph 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b30dc85588cd02b9b76f5e386535db546d21dc68506cff2abebee0b6445e8e4\"\n \"checksum pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a8b4c6b8165cd1a1cd4b9b120978131389f64bdaf456435caa41e630edba903\"\n \"checksum pretty_assertions 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a029430f0d744bc3d15dd474d591bed2402b645d024583082b9f63bb936dac6\"\n \"checksum proc-macro2 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd07deb3c6d1d9ff827999c7f9b04cdfd66b1b17ae508e14fe47b620f2282ae0\""}, {"sha": "2f9c4e148a6bad72cc2c5be24ad9ae0a976122ea", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "patch": "@@ -42,6 +42,7 @@ serde_json = \"1.0.2\"\n toml = \"0.4\"\n lazy_static = \"0.2\"\n time = \"0.1\"\n+petgraph = \"0.4.12\"\n \n [dev-dependencies]\n pretty_assertions = \"0.5\""}, {"sha": "86a51c8e26bb83cf3f5690f86af7cb921e67d01c", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "patch": "@@ -19,6 +19,7 @@ use std::ops::Deref;\n use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::time::{Instant, Duration};\n+use std::collections::HashMap;\n \n use compile;\n use install;\n@@ -35,6 +36,9 @@ use native;\n \n pub use Compiler;\n \n+use petgraph::Graph;\n+use petgraph::graph::NodeIndex;\n+\n pub struct Builder<'a> {\n     pub build: &'a Build,\n     pub top_stage: u32,\n@@ -43,6 +47,9 @@ pub struct Builder<'a> {\n     stack: RefCell<Vec<Box<Any>>>,\n     time_spent_on_dependencies: Cell<Duration>,\n     pub paths: Vec<PathBuf>,\n+    graph_nodes: RefCell<HashMap<String, NodeIndex>>,\n+    graph: RefCell<Graph<String, bool>>,\n+    parent: Cell<Option<NodeIndex>>,\n }\n \n impl<'a> Deref for Builder<'a> {\n@@ -353,6 +360,9 @@ impl<'a> Builder<'a> {\n             stack: RefCell::new(Vec::new()),\n             time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n             paths: vec![],\n+            graph_nodes: RefCell::new(HashMap::new()),\n+            graph: RefCell::new(Graph::new()),\n+            parent: Cell::new(None),\n         };\n \n         let builder = &builder;\n@@ -389,6 +399,9 @@ impl<'a> Builder<'a> {\n             stack: RefCell::new(Vec::new()),\n             time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n             paths: paths.to_owned(),\n+            graph_nodes: RefCell::new(HashMap::new()),\n+            graph: RefCell::new(Graph::new()),\n+            parent: Cell::new(None),\n         };\n \n         if kind == Kind::Dist {\n@@ -833,12 +846,37 @@ impl<'a> Builder<'a> {\n             if let Some(out) = self.cache.get(&step) {\n                 self.build.verbose(&format!(\"{}c {:?}\", \"  \".repeat(stack.len()), step));\n \n+                {\n+                    let mut graph = self.graph.borrow_mut();\n+                    let parent = self.parent.get();\n+                    let us = *self.graph_nodes.borrow_mut()\n+                        .entry(format!(\"{:?}\", step))\n+                        .or_insert_with(|| graph.add_node(format!(\"{:?}\", step)));\n+                    if let Some(parent) = parent {\n+                        graph.add_edge(parent, us, false);\n+                    }\n+                }\n+\n                 return out;\n             }\n             self.build.verbose(&format!(\"{}> {:?}\", \"  \".repeat(stack.len()), step));\n             stack.push(Box::new(step.clone()));\n         }\n \n+        let prev_parent = self.parent.get();\n+\n+        {\n+            let mut graph = self.graph.borrow_mut();\n+            let parent = self.parent.get();\n+            let us = *self.graph_nodes.borrow_mut()\n+                .entry(format!(\"{:?}\", step))\n+                .or_insert_with(|| graph.add_node(format!(\"{:?}\", step)));\n+            self.parent.set(Some(us));\n+            if let Some(parent) = parent {\n+                graph.add_edge(parent, us, true);\n+            }\n+        }\n+\n         let (out, dur) = {\n             let start = Instant::now();\n             let zero = Duration::new(0, 0);\n@@ -849,6 +887,8 @@ impl<'a> Builder<'a> {\n             (out, dur - deps)\n         };\n \n+        self.parent.set(prev_parent);\n+\n         if self.build.config.print_step_timings && dur > Duration::from_millis(100) {\n             println!(\"[TIMING] {:?} -- {}.{:03}\",\n                      step,"}, {"sha": "5b13fa27fbfbe2cee7af770ec844668ad22ba688", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0dbc7c15d4f3027410b3836154da1ae63e0a7d3/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=b0dbc7c15d4f3027410b3836154da1ae63e0a7d3", "patch": "@@ -131,6 +131,7 @@ extern crate getopts;\n extern crate num_cpus;\n extern crate toml;\n extern crate time;\n+extern crate petgraph;\n \n #[cfg(test)]\n #[macro_use]\n@@ -600,14 +601,14 @@ impl Build {\n \n     /// Runs a command, printing out nice contextual information if it fails.\n     fn run(&self, cmd: &mut Command) {\n-        if cfg!(test) { return; }\n+        if self.config.dry_run { return; }\n         self.verbose(&format!(\"running: {:?}\", cmd));\n         run_silent(cmd)\n     }\n \n     /// Runs a command, printing out nice contextual information if it fails.\n     fn run_quiet(&self, cmd: &mut Command) {\n-        if cfg!(test) { return; }\n+        if self.config.dry_run { return; }\n         self.verbose(&format!(\"running: {:?}\", cmd));\n         run_suppressed(cmd)\n     }\n@@ -616,7 +617,7 @@ impl Build {\n     /// Exits if the command failed to execute at all, otherwise returns its\n     /// `status.success()`.\n     fn try_run(&self, cmd: &mut Command) -> bool {\n-        if cfg!(test) { return true; }\n+        if self.config.dry_run { return true; }\n         self.verbose(&format!(\"running: {:?}\", cmd));\n         try_run_silent(cmd)\n     }\n@@ -625,7 +626,7 @@ impl Build {\n     /// Exits if the command failed to execute at all, otherwise returns its\n     /// `status.success()`.\n     fn try_run_quiet(&self, cmd: &mut Command) -> bool {\n-        if cfg!(test) { return true; }\n+        if self.config.dry_run { return true; }\n         self.verbose(&format!(\"running: {:?}\", cmd));\n         try_run_suppressed(cmd)\n     }"}]}