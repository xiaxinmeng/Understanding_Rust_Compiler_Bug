{"sha": "a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZmRiNDFhY2U0ZGU3NzM3YTNiYTBlNGVmNWU2OGQwYTQxZTkyNGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T14:33:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T14:33:27Z"}, "message": "fix typo", "tree": {"sha": "f4f3c59a59e4a607b77321cb685bf616824dc8f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4f3c59a59e4a607b77321cb685bf616824dc8f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d", "html_url": "https://github.com/rust-lang/rust/commit/a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fc51501e06661e0a096ac6363ccb82d604c933a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc51501e06661e0a096ac6363ccb82d604c933a", "html_url": "https://github.com/rust-lang/rust/commit/8fc51501e06661e0a096ac6363ccb82d604c933a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e1493bdaa09494aa5efbcf87560f2df99e28e7d9", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=a2fdb41ace4de7737a3ba0e4ef5e68d0a41e924d", "patch": "@@ -216,8 +216,8 @@ impl AnalysisImpl {\n             .sweep(salsa::SweepStrategy::default().discard_values());\n         Ok(query.search(&buf))\n     }\n-    /// This return `Vec`: a module may be inclucded from several places.\n-    /// We don't handle this case yet though, so the Vec has length at most one.\n+    /// This return `Vec`: a module may be included from several places. We\n+    /// don't handle this case yet though, so the Vec has length at most one.\n     pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n         let descr = match ModuleDescriptor::guess_from_position(&*self.db, position)? {\n             None => return Ok(Vec::new()),"}]}