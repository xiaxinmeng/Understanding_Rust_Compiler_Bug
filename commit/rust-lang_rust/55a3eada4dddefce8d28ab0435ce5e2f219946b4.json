{"sha": "55a3eada4dddefce8d28ab0435ce5e2f219946b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YTNlYWRhNGRkZGVmY2U4ZDI4YWIwNDM1Y2U1ZTJmMjE5OTQ2YjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-28T20:11:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-28T20:11:59Z"}, "message": "Rollup merge of #64387 - nathanwhit:redundant-semi-fix, r=varkor\n\nFix redundant semicolon lint interaction with proc macro attributes\n\nFixes #63967 and fixes #63947, both of which were caused by the lint's changes to the parser interacting poorly with proc macro attributes and causing span information to be lost\n\nr? @varkor", "tree": {"sha": "fcb3ab44293eea1db7efce773ac818f2cc39e3d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcb3ab44293eea1db7efce773ac818f2cc39e3d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55a3eada4dddefce8d28ab0435ce5e2f219946b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdj76PCRBK7hj4Ov3rIwAAdHIIAGQIGcb4livzpxF8+9gU/2C0\nUXz5/KrKnGDf3uC27A1QeVknJyzbktrJDOy6k1Pn3xH6jbJWFj2jlsYoSn3JUnxJ\nAUE1zWN8De4glp1kYteSUVhUVwSiFJMH4HnGw2kPUpOpCXdJu/lldrnAL3rMCUrG\n/J0aWHQC2pbV7IYRRCta5oYUn7lysTpQCnlRnznUNXKhDFtk8UJSkIEvOb1AEI2C\njFmFI8l4XCGVEVJtHpE5pExaoZR+RxYRA2xJyrPQCRX1xTSJgErbBAePscoDdXdc\nTd1aoA5i1RdDBCsiwZ/rQGYeTGSgLeugmSMhy482FR0qSkCO92FNC2WpvNb0dMk=\n=ykuJ\n-----END PGP SIGNATURE-----\n", "payload": "tree fcb3ab44293eea1db7efce773ac818f2cc39e3d1\nparent b18d8612c8e73604f0721449ce6126f80ad83a98\nparent 66c33c0e92c456ddec24c0b11475e912d1507934\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569701519 +0200\ncommitter GitHub <noreply@github.com> 1569701519 +0200\n\nRollup merge of #64387 - nathanwhit:redundant-semi-fix, r=varkor\n\nFix redundant semicolon lint interaction with proc macro attributes\n\nFixes #63967 and fixes #63947, both of which were caused by the lint's changes to the parser interacting poorly with proc macro attributes and causing span information to be lost\n\nr? @varkor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55a3eada4dddefce8d28ab0435ce5e2f219946b4", "html_url": "https://github.com/rust-lang/rust/commit/55a3eada4dddefce8d28ab0435ce5e2f219946b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55a3eada4dddefce8d28ab0435ce5e2f219946b4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b18d8612c8e73604f0721449ce6126f80ad83a98", "url": "https://api.github.com/repos/rust-lang/rust/commits/b18d8612c8e73604f0721449ce6126f80ad83a98", "html_url": "https://github.com/rust-lang/rust/commit/b18d8612c8e73604f0721449ce6126f80ad83a98"}, {"sha": "66c33c0e92c456ddec24c0b11475e912d1507934", "url": "https://api.github.com/repos/rust-lang/rust/commits/66c33c0e92c456ddec24c0b11475e912d1507934", "html_url": "https://github.com/rust-lang/rust/commit/66c33c0e92c456ddec24c0b11475e912d1507934"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "4b9c2d13f26b95b82d460c498faf7cb3a268125b", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=55a3eada4dddefce8d28ab0435ce5e2f219946b4", "patch": "@@ -1657,9 +1657,18 @@ impl<'a> State<'a> {\n                 }\n             }\n             ast::StmtKind::Semi(ref expr) => {\n-                self.space_if_not_bol();\n-                self.print_expr_outer_attr_style(expr, false);\n-                self.s.word(\";\");\n+                match expr.kind {\n+                    // Filter out empty `Tup` exprs created for the `redundant_semicolon`\n+                    // lint, as they shouldn't be visible and interact poorly\n+                    // with proc macros.\n+                    ast::ExprKind::Tup(ref exprs) if exprs.is_empty()\n+                      && expr.attrs.is_empty() => (),\n+                    _ => {\n+                        self.space_if_not_bol();\n+                        self.print_expr_outer_attr_style(expr, false);\n+                        self.s.word(\";\");\n+                    }\n+                }\n             }\n             ast::StmtKind::Mac(ref mac) => {\n                 let (ref mac, style, ref attrs) = **mac;"}, {"sha": "5a94ccd746803333ed99a09d0cfc0a32e8b1ac10", "filename": "src/test/ui/lint/redundant-semicolon/auxiliary/redundant-semi-proc-macro-def.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fauxiliary%2Fredundant-semi-proc-macro-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fauxiliary%2Fredundant-semi-proc-macro-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fauxiliary%2Fredundant-semi-proc-macro-def.rs?ref=55a3eada4dddefce8d28ab0435ce5e2f219946b4", "patch": "@@ -0,0 +1,12 @@\n+// force-host\n+// no-prefer-dynamic\n+#![crate_type=\"proc-macro\"]\n+#![crate_name=\"redundant_semi_proc_macro\"]\n+extern crate proc_macro;\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_attribute]\n+pub fn should_preserve_spans(_attr: TokenStream, item: TokenStream) -> TokenStream {\n+    eprintln!(\"{:?}\", item);\n+    item\n+}"}, {"sha": "f207b235735feae397fc3b89799930caf7f4fc02", "filename": "src/test/ui/lint/redundant-semicolon/redundant-semi-proc-macro.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.rs?ref=55a3eada4dddefce8d28ab0435ce5e2f219946b4", "patch": "@@ -0,0 +1,19 @@\n+// aux-build:redundant-semi-proc-macro-def.rs\n+\n+#![deny(redundant_semicolon)]\n+extern crate redundant_semi_proc_macro;\n+use redundant_semi_proc_macro::should_preserve_spans;\n+\n+#[should_preserve_spans]\n+fn span_preservation()  {\n+    let tst = 123;; //~ ERROR unnecessary trailing semicolon\n+    match tst {\n+        // Redundant semicolons are parsed as empty tuple exprs\n+        // for the lint, so ensure the lint doesn't affect\n+        // empty tuple exprs explicitly in source.\n+        123 => (),\n+        _ => ()\n+    };;; //~ ERROR unnecessary trailing semicolons\n+}\n+\n+fn main() {}"}, {"sha": "5f289c0914d6e9873d4cf3756c16a3f0c0c7af12", "filename": "src/test/ui/lint/redundant-semicolon/redundant-semi-proc-macro.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/55a3eada4dddefce8d28ab0435ce5e2f219946b4/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fredundant-semi-proc-macro.stderr?ref=55a3eada4dddefce8d28ab0435ce5e2f219946b4", "patch": "@@ -0,0 +1,21 @@\n+TokenStream [Ident { ident: \"fn\", span: #0 bytes(197..199) }, Ident { ident: \"span_preservation\", span: #0 bytes(200..217) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(217..219) }, Group { delimiter: Brace, stream: TokenStream [Ident { ident: \"let\", span: #0 bytes(227..230) }, Ident { ident: \"tst\", span: #0 bytes(231..234) }, Punct { ch: '=', spacing: Alone, span: #0 bytes(235..236) }, Literal { lit: Lit { kind: Integer, symbol: 123, suffix: None }, span: Span { lo: BytePos(237), hi: BytePos(240), ctxt: #0 } }, Punct { ch: ';', spacing: Joint, span: #0 bytes(240..241) }, Punct { ch: ';', spacing: Alone, span: #0 bytes(241..242) }, Ident { ident: \"match\", span: #0 bytes(288..293) }, Ident { ident: \"tst\", span: #0 bytes(294..297) }, Group { delimiter: Brace, stream: TokenStream [Literal { lit: Lit { kind: Integer, symbol: 123, suffix: None }, span: Span { lo: BytePos(482), hi: BytePos(485), ctxt: #0 } }, Punct { ch: '=', spacing: Joint, span: #0 bytes(486..488) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(486..488) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(489..491) }, Punct { ch: ',', spacing: Alone, span: #0 bytes(491..492) }, Ident { ident: \"_\", span: #0 bytes(501..502) }, Punct { ch: '=', spacing: Joint, span: #0 bytes(503..505) }, Punct { ch: '>', spacing: Alone, span: #0 bytes(503..505) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: #0 bytes(506..508) }], span: #0 bytes(298..514) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(514..515) }, Punct { ch: ';', spacing: Joint, span: #0 bytes(515..516) }, Punct { ch: ';', spacing: Alone, span: #0 bytes(516..517) }], span: #0 bytes(221..561) }]\n+error: unnecessary trailing semicolon\n+  --> $DIR/redundant-semi-proc-macro.rs:9:19\n+   |\n+LL |     let tst = 123;;\n+   |                   ^ help: remove this semicolon\n+   |\n+note: lint level defined here\n+  --> $DIR/redundant-semi-proc-macro.rs:3:9\n+   |\n+LL | #![deny(redundant_semicolon)]\n+   |         ^^^^^^^^^^^^^^^^^^^\n+\n+error: unnecessary trailing semicolons\n+  --> $DIR/redundant-semi-proc-macro.rs:16:7\n+   |\n+LL |     };;;\n+   |       ^^ help: remove these semicolons\n+\n+error: aborting due to 2 previous errors\n+"}]}