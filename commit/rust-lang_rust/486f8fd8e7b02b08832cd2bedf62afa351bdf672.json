{"sha": "486f8fd8e7b02b08832cd2bedf62afa351bdf672", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NmY4ZmQ4ZTdiMDJiMDg4MzJjZDJiZWRmNjJhZmEzNTFiZGY2NzI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-05T23:58:22Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-12T09:37:28Z"}, "message": "Fixup formatting of tests and source", "tree": {"sha": "ac92bff9feac6ae6fb5c44d7a897c3fef5e185e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac92bff9feac6ae6fb5c44d7a897c3fef5e185e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/486f8fd8e7b02b08832cd2bedf62afa351bdf672", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/486f8fd8e7b02b08832cd2bedf62afa351bdf672", "html_url": "https://github.com/rust-lang/rust/commit/486f8fd8e7b02b08832cd2bedf62afa351bdf672", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/486f8fd8e7b02b08832cd2bedf62afa351bdf672/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4cdb68925e4cb3a2df74df61da333136afae582", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cdb68925e4cb3a2df74df61da333136afae582", "html_url": "https://github.com/rust-lang/rust/commit/a4cdb68925e4cb3a2df74df61da333136afae582"}], "stats": {"total": 122, "additions": 65, "deletions": 57}, "files": [{"sha": "555c0eb96e7ca9ba88fc829ee53429ac26adcc21", "filename": "src/attr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -194,7 +194,8 @@ fn has_newlines_before_after_comment(comment: &str) -> (&str, &str) {\n             .rev()\n             .take_while(|c| c.is_whitespace())\n             .filter(|&c| c == '\\n')\n-            .count() > 1\n+            .count()\n+            > 1\n     };\n     (if mlb { \"\\n\" } else { \"\" }, if mla { \"\\n\" } else { \"\" })\n }"}, {"sha": "cd5e58437e600b2b7404f04c7e0118d44924ac09", "filename": "src/bin/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -38,7 +38,8 @@ fn main() {\n \n     let exit_code = match execute(&opts) {\n         Ok((exit_mode, summary)) => {\n-            if summary.has_operational_errors() || summary.has_parsing_errors()\n+            if summary.has_operational_errors()\n+                || summary.has_parsing_errors()\n                 || ((summary.has_diff || summary.has_check_errors())\n                     && exit_mode == ExitCodeMode::Check)\n             {"}, {"sha": "42b883589db1dd42ac03197fc6e816336b5cbd5a", "filename": "src/closures.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -363,7 +363,8 @@ where\n                 })\n                 .unwrap_or(false)\n         })\n-        .count() > 1\n+        .count()\n+        > 1\n }\n \n fn is_block_closure_forced(context: &RewriteContext, expr: &ast::Expr) -> bool {"}, {"sha": "c4675cbcdf7ebd0a1659ed470a0322d2dd78cd96", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -863,16 +863,16 @@ impl<'a> ControlFlow<'a> {\n             && context\n                 .config\n                 .width_heuristics()\n-                .single_line_if_else_max_width > 0\n+                .single_line_if_else_max_width\n+                > 0\n         {\n             let trial = self.rewrite_single_line(&pat_expr_string, context, shape.width);\n \n             if let Some(cond_str) = trial {\n-                if cond_str.len()\n-                    <= context\n-                        .config\n-                        .width_heuristics()\n-                        .single_line_if_else_max_width\n+                if cond_str.len() <= context\n+                    .config\n+                    .width_heuristics()\n+                    .single_line_if_else_max_width\n                 {\n                     return Some((cond_str, 0));\n                 }"}, {"sha": "00db19f3b6ce1ebf53e0fa6e64ddafcc21d78635", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -1382,7 +1382,8 @@ fn format_tuple_struct(\n         )?;\n     }\n \n-    if !where_clause_str.is_empty() && !where_clause_str.contains('\\n')\n+    if !where_clause_str.is_empty()\n+        && !where_clause_str.contains('\\n')\n         && (result.contains('\\n')\n             || offset.block_indent + result.len() + where_clause_str.len() + 1\n                 > context.config.max_width())\n@@ -2527,7 +2528,8 @@ fn rewrite_where_clause_rfc_style(\n         && comment_before.is_empty()\n         && comment_after.is_empty()\n         && !preds_str.contains('\\n')\n-        && 6 + preds_str.len() <= shape.width || where_single_line\n+        && 6 + preds_str.len() <= shape.width\n+        || where_single_line\n     {\n         Cow::from(\" \")\n     } else {\n@@ -2737,7 +2739,8 @@ fn format_generics(\n             false,\n         )?;\n         result.push_str(&where_clause_str);\n-        brace_pos == BracePos::ForceSameLine || brace_style == BraceStyle::PreferSameLine\n+        brace_pos == BracePos::ForceSameLine\n+            || brace_style == BraceStyle::PreferSameLine\n             || (generics.where_clause.predicates.is_empty()\n                 && trimmed_last_line_width(&result) == 1)\n     } else {"}, {"sha": "29c7e40fb176e6720c6b0ef6e4c6ad2b09e55176", "filename": "src/lists.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -97,11 +97,10 @@ impl ListItem {\n     }\n \n     pub fn is_different_group(&self) -> bool {\n-        self.inner_as_ref().contains('\\n') || self.pre_comment.is_some()\n-            || self\n-                .post_comment\n-                .as_ref()\n-                .map_or(false, |s| s.contains('\\n'))\n+        self.inner_as_ref().contains('\\n') || self.pre_comment.is_some() || self\n+            .post_comment\n+            .as_ref()\n+            .map_or(false, |s| s.contains('\\n'))\n     }\n \n     pub fn is_multiline(&self) -> bool {"}, {"sha": "76f50b30a545281b371410721f2d60c9ea25c28b", "filename": "src/macros.rs", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -1107,23 +1107,22 @@ fn indent_macro_snippet(\n         .min()?;\n \n     Some(\n-        first_line + \"\\n\"\n-            + &trimmed_lines\n-                .iter()\n-                .map(\n-                    |&(trimmed, ref line, prefix_space_width)| match prefix_space_width {\n-                        _ if !trimmed => line.to_owned(),\n-                        Some(original_indent_width) => {\n-                            let new_indent_width = indent.width()\n-                                + original_indent_width.saturating_sub(min_prefix_space_width);\n-                            let new_indent = Indent::from_width(context.config, new_indent_width);\n-                            format!(\"{}{}\", new_indent.to_string(context.config), line.trim())\n-                        }\n-                        None => String::new(),\n-                    },\n-                )\n-                .collect::<Vec<_>>()\n-                .join(\"\\n\"),\n+        first_line + \"\\n\" + &trimmed_lines\n+            .iter()\n+            .map(\n+                |&(trimmed, ref line, prefix_space_width)| match prefix_space_width {\n+                    _ if !trimmed => line.to_owned(),\n+                    Some(original_indent_width) => {\n+                        let new_indent_width = indent.width() + original_indent_width\n+                            .saturating_sub(min_prefix_space_width);\n+                        let new_indent = Indent::from_width(context.config, new_indent_width);\n+                        format!(\"{}{}\", new_indent.to_string(context.config), line.trim())\n+                    }\n+                    None => String::new(),\n+                },\n+            )\n+            .collect::<Vec<_>>()\n+            .join(\"\\n\"),\n     )\n }\n "}, {"sha": "54e594d814f8a210d4beac2f518ca3093f3b3778", "filename": "src/overflow.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -320,15 +320,13 @@ impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n                                     ListTactic::HorizontalVertical,\n                                     Separator::Comma,\n                                     self.nested_shape.width,\n-                                )\n-                                    == DefinitiveListTactic::Horizontal\n+                                ) == DefinitiveListTactic::Horizontal\n                                 && definitive_tactic(\n                                     &list_items[num_args_before + 1..],\n                                     ListTactic::HorizontalVertical,\n                                     Separator::Comma,\n                                     self.nested_shape.width,\n-                                )\n-                                    == DefinitiveListTactic::Horizontal;\n+                                ) == DefinitiveListTactic::Horizontal;\n \n                             if one_line {\n                                 tactic = DefinitiveListTactic::SpecialMacro(num_args_before);"}, {"sha": "5947b4ae87ffd4b6835e5755df19ef5df733be9d", "filename": "src/reorder.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -242,12 +242,13 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         let item_length = items\n             .iter()\n             .take_while(|ppi| {\n-                item_kind.is_same_item_kind(&***ppi) && (!in_group || {\n-                    let current = self.codemap.lookup_line_range(ppi.span());\n-                    let in_same_group = current.lo < last.hi + 2;\n-                    last = current;\n-                    in_same_group\n-                })\n+                item_kind.is_same_item_kind(&***ppi)\n+                    && (!in_group || {\n+                        let current = self.codemap.lookup_line_range(ppi.span());\n+                        let in_same_group = current.lo < last.hi + 2;\n+                        last = current;\n+                        in_same_group\n+                    })\n             })\n             .count();\n         let items = &items[..item_length];"}, {"sha": "39eaf57d72e9487836d0f63c5a758b1b67ad7bc0", "filename": "src/string.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -72,7 +72,8 @@ pub fn rewrite_string<'a>(\n     // succeed.\n     let mut max_chars = shape\n         .width\n-        .checked_sub(fmt.opener.len() + ender_length + 1)? + 1;\n+        .checked_sub(fmt.opener.len() + ender_length + 1)?\n+        + 1;\n \n     // Snip a line at a time from `orig` until it is used up. Push the snippet\n     // onto result."}, {"sha": "633f9f8bd3f3e56489ddd5927663dc204f4fac56", "filename": "src/test/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -703,7 +703,8 @@ impl ConfigCodeBlock {\n             .unwrap()\n             .split('\\n')\n             .nth(0)\n-            .unwrap_or(\"\") == \"#![rustfmt::skip]\";\n+            .unwrap_or(\"\")\n+            == \"#![rustfmt::skip]\";\n \n         if self.config_name.is_none() && !fmt_skip {\n             write_message(&format!("}, {"sha": "48b71d9a84fa0060787abd3d8e90ae7aae0fea93", "filename": "src/utils.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -295,11 +295,10 @@ pub fn mk_sp(lo: BytePos, hi: BytePos) -> Span {\n // Return true if the given span does not intersect with file lines.\n macro_rules! out_of_file_lines_range {\n     ($self:ident, $span:expr) => {\n-        !$self.config.file_lines().is_all()\n-            && !$self\n-                .config\n-                .file_lines()\n-                .intersects(&$self.codemap.lookup_line_range($span))\n+        !$self.config.file_lines().is_all() && !$self\n+            .config\n+            .file_lines()\n+            .intersects(&$self.codemap.lookup_line_range($span))\n     };\n }\n "}, {"sha": "1b7fdb9be1d1745baa9a51620d27d1d691ea0e31", "filename": "src/vertical.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -173,11 +173,14 @@ pub fn rewrite_with_alignment<T: AlignedItem>(\n         let rest_span = mk_sp(init_last_pos, span.hi());\n         let rest_str = rewrite_with_alignment(rest, context, shape, rest_span, one_line_width)?;\n         Some(\n-            result + spaces + \"\\n\"\n+            result\n+                + spaces\n+                + \"\\n\"\n                 + &shape\n                     .indent\n                     .block_indent(context.config)\n-                    .to_string(context.config) + &rest_str,\n+                    .to_string(context.config)\n+                + &rest_str,\n         )\n     }\n }"}, {"sha": "dc529fbd3748e6de6ba2fb4d092ccb68c8ff875e", "filename": "tests/target/expr.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/486f8fd8e7b02b08832cd2bedf62afa351bdf672/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486f8fd8e7b02b08832cd2bedf62afa351bdf672/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=486f8fd8e7b02b08832cd2bedf62afa351bdf672", "patch": "@@ -14,15 +14,15 @@ fn foo() -> bool {\n         self.codemap.span_to_filename(s) == self.codemap.span_to_filename(m.inner);\n \n     let some_val = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa * bbbb\n-        / (bbbbbb - function_call(x, *very_long_pointer, y)) + 1000;\n+        / (bbbbbb - function_call(x, *very_long_pointer, y))\n+        + 1000;\n \n     some_ridiculously_loooooooooooooooooooooong_function(\n         10000 * 30000000000 + 40000 / 1002200000000 - 50000 * sqrt(-1),\n         trivial_value,\n     );\n     (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-        + a\n-        + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+        + a + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n         + aaaaa);\n \n     {\n@@ -358,7 +358,8 @@ fn issue1749() {\n         {\n             {\n                 if self.shape[(r as f32 + self.x_offset) as usize]\n-                    [(c as f32 + self.y_offset) as usize] != 0\n+                    [(c as f32 + self.y_offset) as usize]\n+                    != 0\n                 {\n                     // hello\n                 }"}]}