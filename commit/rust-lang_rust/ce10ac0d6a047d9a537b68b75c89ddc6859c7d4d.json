{"sha": "ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "node_id": "C_kwDOAAsO6NoAKGNlMTBhYzBkNmEwNDdkOWE1MzdiNjhiNzVjODlkZGM2ODU5YzdkNGQ", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-11-13T10:32:57Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-11-13T10:32:57Z"}, "message": "remove leading newlines from `NonZero*` doc examples", "tree": {"sha": "ae5451c2b8f61b605e16c356d529c4fc9e49a0bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae5451c2b8f61b605e16c356d529c4fc9e49a0bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "html_url": "https://github.com/rust-lang/rust/commit/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d/comments", "author": null, "committer": null, "parents": [{"sha": "b7b7f2716ee1655a696d3d64c3e12638d0dd19c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b7f2716ee1655a696d3d64c3e12638d0dd19c0", "html_url": "https://github.com/rust-lang/rust/commit/b7b7f2716ee1655a696d3d64c3e12638d0dd19c0"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "6a417b54daa93ff7ca2b43cf5a58aeddf13e9511", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "patch": "@@ -321,7 +321,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let one = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -356,7 +355,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let one = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -391,8 +389,8 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_ops)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let one = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -420,7 +418,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -461,7 +458,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(7).unwrap().ilog2(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(8).unwrap().ilog2(), 3);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(9).unwrap().ilog2(), 3);\")]\n@@ -486,7 +482,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(99).unwrap().ilog10(), 1);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(100).unwrap().ilog10(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(101).unwrap().ilog10(), 2);\")]\n@@ -526,7 +521,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -556,7 +550,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -591,7 +584,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -626,7 +618,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -662,7 +653,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -905,7 +895,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -941,7 +930,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -986,8 +974,8 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_ops)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -1014,7 +1002,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let three = \", stringify!($Ty), \"::new(3)?;\")]\n@@ -1058,7 +1045,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let three = \", stringify!($Ty), \"::new(3)?;\")]\n@@ -1162,8 +1148,8 @@ macro_rules! nonzero_min_max_unsigned {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MIN.get(), 1\", stringify!($Int), \");\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n@@ -1177,8 +1163,8 @@ macro_rules! nonzero_min_max_unsigned {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MAX.get(), \", stringify!($Int), \"::MAX);\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n@@ -1204,8 +1190,8 @@ macro_rules! nonzero_min_max_signed {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MIN.get(), \", stringify!($Int), \"::MIN);\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n@@ -1223,8 +1209,8 @@ macro_rules! nonzero_min_max_signed {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MAX.get(), \", stringify!($Int), \"::MAX);\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]"}]}