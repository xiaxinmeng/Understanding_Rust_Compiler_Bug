{"sha": "25b5d301638895776326852ed9add707f1bbb403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YjVkMzAxNjM4ODk1Nzc2MzI2ODUyZWQ5YWRkNzA3ZjFiYmI0MDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-13T19:36:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-13T19:36:54Z"}, "message": "Rollup merge of #60710 - varkor:delay_span_bug-const-parent, r=matthewjasper\n\nUse `delay_span_bug` for error cases when checking `AnonConst` parent\n\nFixes #60704.\nFixes #60650.", "tree": {"sha": "2190b543ce73ed10bf620906528ef3967ba31f72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2190b543ce73ed10bf620906528ef3967ba31f72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25b5d301638895776326852ed9add707f1bbb403", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc2cdWCRBK7hj4Ov3rIwAAdHIIAHUoKNI5Tef0/bTGnN0N13QD\n/R8RXhHa2hQXbudkQED7XoK2Z7H82M7uxHQJWTgdo/m/DnCXsBBqmrXNEbgnrJik\nyII3hQR/6HwBQ6oXn7KJffTjZCDgjShDtlUP3yzv2ghddXnAYSeBA7Pbt6ov7fn2\njUs88P/tpw27yK8mfiouW3E1k81sWJhgqSU5eSYr3qwS2LqfYD/4dXfI+1Kt7pCf\nHMb1EzRcs4ChRxIGeOR3izupMWLk56ijl83FxrauYGvXNNt6Fz3xMTDHq7094hcU\nqHGInW3e+Md2ealc1mQXj9+io9VkMIAU3+legur9+WgXmSUEjKVSij0Qv9DM0Bo=\n=krns\n-----END PGP SIGNATURE-----\n", "payload": "tree 2190b543ce73ed10bf620906528ef3967ba31f72\nparent e952b52a16e14fd18b95c0e6cef48ead82d1c266\nparent 0f792abf00490066a8743e9b9686fecaad5dcac8\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557776214 +0200\ncommitter GitHub <noreply@github.com> 1557776214 +0200\n\nRollup merge of #60710 - varkor:delay_span_bug-const-parent, r=matthewjasper\n\nUse `delay_span_bug` for error cases when checking `AnonConst` parent\n\nFixes #60704.\nFixes #60650.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25b5d301638895776326852ed9add707f1bbb403", "html_url": "https://github.com/rust-lang/rust/commit/25b5d301638895776326852ed9add707f1bbb403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25b5d301638895776326852ed9add707f1bbb403/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e952b52a16e14fd18b95c0e6cef48ead82d1c266", "url": "https://api.github.com/repos/rust-lang/rust/commits/e952b52a16e14fd18b95c0e6cef48ead82d1c266", "html_url": "https://github.com/rust-lang/rust/commit/e952b52a16e14fd18b95c0e6cef48ead82d1c266"}, {"sha": "0f792abf00490066a8743e9b9686fecaad5dcac8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f792abf00490066a8743e9b9686fecaad5dcac8", "html_url": "https://github.com/rust-lang/rust/commit/0f792abf00490066a8743e9b9686fecaad5dcac8"}], "stats": {"total": 84, "additions": 81, "deletions": 3}, "files": [{"sha": "6527e8655b5ef21bb6d93a7b65f5fed7c8c098fa", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/25b5d301638895776326852ed9add707f1bbb403/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25b5d301638895776326852ed9add707f1bbb403/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=25b5d301638895776326852ed9add707f1bbb403", "patch": "@@ -1404,15 +1404,27 @@ pub fn checked_type_of<'a, 'tcx>(\n                                     if !fail {\n                                         return None;\n                                     }\n-                                    bug!(\"unexpected const parent path def {:?}\", x);\n+                                    tcx.sess.delay_span_bug(\n+                                        DUMMY_SP,\n+                                        &format!(\n+                                            \"unexpected const parent path def {:?}\", x\n+                                        ),\n+                                    );\n+                                    tcx.types.err\n                                 }\n                             }\n                         }\n                         x => {\n                             if !fail {\n                                 return None;\n                             }\n-                            bug!(\"unexpected const parent path {:?}\", x);\n+                            tcx.sess.delay_span_bug(\n+                                DUMMY_SP,\n+                                &format!(\n+                                    \"unexpected const parent path {:?}\", x\n+                                ),\n+                            );\n+                            tcx.types.err\n                         }\n                     }\n                 }\n@@ -1421,7 +1433,13 @@ pub fn checked_type_of<'a, 'tcx>(\n                     if !fail {\n                         return None;\n                     }\n-                    bug!(\"unexpected const parent in type_of_def_id(): {:?}\", x);\n+                    tcx.sess.delay_span_bug(\n+                        DUMMY_SP,\n+                        &format!(\n+                            \"unexpected const parent in type_of_def_id(): {:?}\", x\n+                        ),\n+                    );\n+                    tcx.types.err\n                 }\n             }\n         }"}, {"sha": "c3f5e360fe28084c73d7b0f8061f125a18966930", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs?ref=25b5d301638895776326852ed9add707f1bbb403", "patch": "@@ -0,0 +1,11 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+// We should probably be able to infer the types here. However, this test is checking that we don't\n+// get an ICE in this case. It may be modified later to not be an error.\n+\n+struct Foo<const NUM_BYTES: usize>(pub [u8; NUM_BYTES]);\n+\n+fn main() {\n+    let _ = Foo::<3>([1, 2, 3]); //~ ERROR type annotations needed\n+}"}, {"sha": "a0641bd2fdc96d1a56fca57c2f682ac0ffb7738e", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr?ref=25b5d301638895776326852ed9add707f1bbb403", "patch": "@@ -0,0 +1,15 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/cannot-infer-type-for-const-param.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+\n+error[E0282]: type annotations needed\n+  --> $DIR/cannot-infer-type-for-const-param.rs:10:19\n+   |\n+LL |     let _ = Foo::<3>([1, 2, 3]);\n+   |                   ^ cannot infer type for `{integer}`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "b069cd89680c18f1fabdec11692c1107c3a5f9d8", "filename": "src/test/ui/const-generics/invalid-const-arg-for-type-param.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.rs?ref=25b5d301638895776326852ed9add707f1bbb403", "patch": "@@ -0,0 +1,9 @@\n+use std::convert::TryInto;\n+\n+struct S;\n+\n+fn main() {\n+    let _: u32 = 5i32.try_into::<32>().unwrap(); //~ ERROR wrong number of const arguments\n+    S.f::<0>(); //~ ERROR no method named `f`\n+    S::<0>; //~ ERROR  wrong number of const arguments\n+}"}, {"sha": "8f3f91651edfb351ad700fc128c6a3bb7db01c2f", "filename": "src/test/ui/const-generics/invalid-const-arg-for-type-param.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25b5d301638895776326852ed9add707f1bbb403/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-const-arg-for-type-param.stderr?ref=25b5d301638895776326852ed9add707f1bbb403", "patch": "@@ -0,0 +1,25 @@\n+error[E0107]: wrong number of const arguments: expected 0, found 1\n+  --> $DIR/invalid-const-arg-for-type-param.rs:6:34\n+   |\n+LL |     let _: u32 = 5i32.try_into::<32>().unwrap();\n+   |                                  ^^ unexpected const argument\n+\n+error[E0599]: no method named `f` found for type `S` in the current scope\n+  --> $DIR/invalid-const-arg-for-type-param.rs:7:7\n+   |\n+LL | struct S;\n+   | --------- method `f` not found for this\n+...\n+LL |     S.f::<0>();\n+   |       ^\n+\n+error[E0107]: wrong number of const arguments: expected 0, found 1\n+  --> $DIR/invalid-const-arg-for-type-param.rs:8:9\n+   |\n+LL |     S::<0>;\n+   |         ^ unexpected const argument\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0107, E0599.\n+For more information about an error, try `rustc --explain E0107`."}]}