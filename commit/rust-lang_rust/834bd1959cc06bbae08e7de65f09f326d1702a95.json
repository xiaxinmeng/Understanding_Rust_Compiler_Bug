{"sha": "834bd1959cc06bbae08e7de65f09f326d1702a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNGJkMTk1OWNjMDZiYmFlMDhlN2RlNjVmMDlmMzI2ZDE3MDJhOTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-01T03:06:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-01T03:06:13Z"}, "message": "Auto merge of #60280 - varkor:const-param-invariance, r=eddyb\n\nFix indexing issue for const parameter invariance\n\nWe were previously not taking account of the parent parameters.\n\nr? @eddyb\ncc @Zoxc", "tree": {"sha": "a49c75970bcecf92daaa468beb3c2ee7c2dbbb7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a49c75970bcecf92daaa468beb3c2ee7c2dbbb7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/834bd1959cc06bbae08e7de65f09f326d1702a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/834bd1959cc06bbae08e7de65f09f326d1702a95", "html_url": "https://github.com/rust-lang/rust/commit/834bd1959cc06bbae08e7de65f09f326d1702a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/834bd1959cc06bbae08e7de65f09f326d1702a95/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96ee0ba59e12f5350e799ba724a58fd488a739f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/96ee0ba59e12f5350e799ba724a58fd488a739f2", "html_url": "https://github.com/rust-lang/rust/commit/96ee0ba59e12f5350e799ba724a58fd488a739f2"}, {"sha": "f024196dd5468aeb684ac7437dc51dbf84dab67d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f024196dd5468aeb684ac7437dc51dbf84dab67d", "html_url": "https://github.com/rust-lang/rust/commit/f024196dd5468aeb684ac7437dc51dbf84dab67d"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "51a1d088ddccb586aa7d053e6f048f0e915f1186", "filename": "src/librustc_typeck/variance/solve.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/834bd1959cc06bbae08e7de65f09f326d1702a95/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834bd1959cc06bbae08e7de65f09f326d1702a95/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs?ref=834bd1959cc06bbae08e7de65f09f326d1702a95", "patch": "@@ -78,6 +78,22 @@ impl<'a, 'tcx> SolveContext<'a, 'tcx> {\n         }\n     }\n \n+    fn enforce_const_invariance(&self, generics: &ty::Generics, variances: &mut Vec<ty::Variance>) {\n+        let tcx = self.terms_cx.tcx;\n+\n+        // Make all const parameters invariant.\n+        for param in generics.params.iter() {\n+            if let ty::GenericParamDefKind::Const = param.kind {\n+                variances[param.index as usize] = ty::Invariant;\n+            }\n+        }\n+\n+        // Make all the const parameters in the parent invariant (recursively).\n+        if let Some(def_id) = generics.parent {\n+            self.enforce_const_invariance(tcx.generics_of(def_id), variances);\n+        }\n+    }\n+\n     fn create_map(&self) -> FxHashMap<DefId, Lrc<Vec<ty::Variance>>> {\n         let tcx = self.terms_cx.tcx;\n \n@@ -91,11 +107,7 @@ impl<'a, 'tcx> SolveContext<'a, 'tcx> {\n             debug!(\"id={} variances={:?}\", id, variances);\n \n             // Const parameters are always invariant.\n-            for (idx, param) in generics.params.iter().enumerate() {\n-                if let ty::GenericParamDefKind::Const = param.kind {\n-                    variances[idx] = ty::Invariant;\n-                }\n-            }\n+            self.enforce_const_invariance(generics, &mut variances);\n \n             // Functions are permitted to have unused generic parameters: make those invariant.\n             if let ty::FnDef(..) = tcx.type_of(def_id).sty {"}]}