{"sha": "b3be11efbdd274b0dfd94c720cf6e396cab98c33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYmUxMWVmYmRkMjc0YjBkZmQ5NGM3MjBjZjZlMzk2Y2FiOThjMzM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-07T16:20:56Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-07T16:20:56Z"}, "message": "Formatting.", "tree": {"sha": "6d2dbd9097022a4160f8eebec750e5367a8a4c15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d2dbd9097022a4160f8eebec750e5367a8a4c15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3be11efbdd274b0dfd94c720cf6e396cab98c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3be11efbdd274b0dfd94c720cf6e396cab98c33", "html_url": "https://github.com/rust-lang/rust/commit/b3be11efbdd274b0dfd94c720cf6e396cab98c33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3be11efbdd274b0dfd94c720cf6e396cab98c33/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "060e8cbaf1e3a57b97f96b13f702e04de4a5f1d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/060e8cbaf1e3a57b97f96b13f702e04de4a5f1d3", "html_url": "https://github.com/rust-lang/rust/commit/060e8cbaf1e3a57b97f96b13f702e04de4a5f1d3"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f09bc01701b748addda915e81d794bb3130bcb59", "filename": "library/std/src/sys/cloudabi/condvar.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b3be11efbdd274b0dfd94c720cf6e396cab98c33/library%2Fstd%2Fsrc%2Fsys%2Fcloudabi%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3be11efbdd274b0dfd94c720cf6e396cab98c33/library%2Fstd%2Fsrc%2Fsys%2Fcloudabi%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fcloudabi%2Fcondvar.rs?ref=b3be11efbdd274b0dfd94c720cf6e396cab98c33", "patch": "@@ -28,7 +28,11 @@ impl Condvar {\n \n     pub unsafe fn notify_one(&self) {\n         if self.condvar.load(Ordering::Relaxed) != abi::CONDVAR_HAS_NO_WAITERS.0 {\n-            let ret = abi::condvar_signal(&self.condvar as *const AtomicU32 as *mut abi::condvar, abi::scope::PRIVATE, 1);\n+            let ret = abi::condvar_signal(\n+                &self.condvar as *const AtomicU32 as *mut abi::condvar,\n+                abi::scope::PRIVATE,\n+                1,\n+            );\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to signal on condition variable\");\n         }\n     }"}]}