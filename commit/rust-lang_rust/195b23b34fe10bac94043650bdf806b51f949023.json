{"sha": "195b23b34fe10bac94043650bdf806b51f949023", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NWIyM2IzNGZlMTBiYWM5NDA0MzY1MGJkZjgwNmI1MWY5NDkwMjM=", "commit": {"author": {"name": "Gareth Smith", "email": "garethdanielsmith@gmail.com", "date": "2014-01-04T13:26:03Z"}, "committer": {"name": "Gareth Smith", "email": "garethdanielsmith@gmail.com", "date": "2014-01-04T13:26:03Z"}, "message": "Restore Writer.write_char, see #10861.", "tree": {"sha": "2a71f0293d8991bd0ffbd5b41b116d1bb1ae0025", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a71f0293d8991bd0ffbd5b41b116d1bb1ae0025"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/195b23b34fe10bac94043650bdf806b51f949023", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/195b23b34fe10bac94043650bdf806b51f949023", "html_url": "https://github.com/rust-lang/rust/commit/195b23b34fe10bac94043650bdf806b51f949023", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/195b23b34fe10bac94043650bdf806b51f949023/comments", "author": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "239fb1f6ee3af1e9b5d5372a9edb2bb1de07e451", "url": "https://api.github.com/repos/rust-lang/rust/commits/239fb1f6ee3af1e9b5d5372a9edb2bb1de07e451", "html_url": "https://github.com/rust-lang/rust/commit/239fb1f6ee3af1e9b5d5372a9edb2bb1de07e451"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "aaba3232aa059887370f4e6d02745d7aac97836a", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/195b23b34fe10bac94043650bdf806b51f949023/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/195b23b34fe10bac94043650bdf806b51f949023/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=195b23b34fe10bac94043650bdf806b51f949023", "patch": "@@ -419,6 +419,16 @@ mod test {\n         assert_eq!(r.read_to_str(), ~\"testingtesting\\ntesting\");\n     }\n \n+    #[test]\n+    fn test_write_char() {\n+        let mut writer = MemWriter::new();\n+        writer.write_char('a');\n+        writer.write_char('\\n');\n+        writer.write_char('\u1ec7');\n+        let mut r = BufReader::new(*writer.inner_ref());\n+        assert_eq!(r.read_to_str(), ~\"a\\n\u1ec7\");\n+    }\n+\n     #[test]\n     fn test_read_whole_string_bad() {\n         let buf = [0xff];"}, {"sha": "a7b443b1d415c5adf8261ca3cd40316c2768af4a", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/195b23b34fe10bac94043650bdf806b51f949023/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/195b23b34fe10bac94043650bdf806b51f949023/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=195b23b34fe10bac94043650bdf806b51f949023", "patch": "@@ -284,6 +284,7 @@ Out of scope\n #[allow(missing_doc)];\n \n use cast;\n+use char::Char;\n use condition::Guard;\n use container::Container;\n use int;\n@@ -902,6 +903,13 @@ pub trait Writer {\n         self.write(['\\n' as u8]);\n     }\n \n+    /// Write a single char, encoded as UTF-8.\n+    fn write_char(&mut self, c: char) {\n+        let mut buf = [0u8, ..4];\n+        let n = c.encode_utf8(buf.as_mut_slice());\n+        self.write(buf.slice_to(n));\n+    }\n+\n     /// Write the result of passing n through `int::to_str_bytes`.\n     fn write_int(&mut self, n: int) {\n         int::to_str_bytes(n, 10u, |bytes| self.write(bytes))"}]}