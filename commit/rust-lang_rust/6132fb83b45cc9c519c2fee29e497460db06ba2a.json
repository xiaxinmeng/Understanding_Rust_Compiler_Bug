{"sha": "6132fb83b45cc9c519c2fee29e497460db06ba2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMzJmYjgzYjQ1Y2M5YzUxOWMyZmVlMjllNDk3NDYwZGIwNmJhMmE=", "commit": {"author": {"name": "Anatol Pomozov", "email": "anatol.pomozov@gmail.com", "date": "2017-04-04T05:41:55Z"}, "committer": {"name": "Anatol Pomozov", "email": "anatol.pomozov@gmail.com", "date": "2017-04-04T05:44:25Z"}, "message": "Replace magic number with readable sig constant\n\nSIG_ERR is defined as 'pub const SIG_ERR: sighandler_t = !0 as sighandler_t;'", "tree": {"sha": "4b7eef0b7d7f2315b4104d24538c49a932db0790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b7eef0b7d7f2315b4104d24538c49a932db0790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6132fb83b45cc9c519c2fee29e497460db06ba2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6132fb83b45cc9c519c2fee29e497460db06ba2a", "html_url": "https://github.com/rust-lang/rust/commit/6132fb83b45cc9c519c2fee29e497460db06ba2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6132fb83b45cc9c519c2fee29e497460db06ba2a/comments", "author": {"login": "anatol", "id": 7032, "node_id": "MDQ6VXNlcjcwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anatol", "html_url": "https://github.com/anatol", "followers_url": "https://api.github.com/users/anatol/followers", "following_url": "https://api.github.com/users/anatol/following{/other_user}", "gists_url": "https://api.github.com/users/anatol/gists{/gist_id}", "starred_url": "https://api.github.com/users/anatol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anatol/subscriptions", "organizations_url": "https://api.github.com/users/anatol/orgs", "repos_url": "https://api.github.com/users/anatol/repos", "events_url": "https://api.github.com/users/anatol/events{/privacy}", "received_events_url": "https://api.github.com/users/anatol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anatol", "id": 7032, "node_id": "MDQ6VXNlcjcwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anatol", "html_url": "https://github.com/anatol", "followers_url": "https://api.github.com/users/anatol/followers", "following_url": "https://api.github.com/users/anatol/following{/other_user}", "gists_url": "https://api.github.com/users/anatol/gists{/gist_id}", "starred_url": "https://api.github.com/users/anatol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anatol/subscriptions", "organizations_url": "https://api.github.com/users/anatol/orgs", "repos_url": "https://api.github.com/users/anatol/repos", "events_url": "https://api.github.com/users/anatol/events{/privacy}", "received_events_url": "https://api.github.com/users/anatol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5309a3e31d88def1f3ea966162ed4f81f161d500", "url": "https://api.github.com/repos/rust-lang/rust/commits/5309a3e31d88def1f3ea966162ed4f81f161d500", "html_url": "https://github.com/rust-lang/rust/commit/5309a3e31d88def1f3ea966162ed4f81f161d500"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "854d380d128c9d18d500297b7ecaa07badce30a3", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6132fb83b45cc9c519c2fee29e497460db06ba2a/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6132fb83b45cc9c519c2fee29e497460db06ba2a/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=6132fb83b45cc9c519c2fee29e497460db06ba2a", "patch": "@@ -92,7 +92,7 @@ pub fn init() {\n \n     #[cfg(not(any(target_os = \"nacl\", target_os = \"emscripten\", target_os=\"fuchsia\")))]\n     unsafe fn reset_sigpipe() {\n-        assert!(signal(libc::SIGPIPE, libc::SIG_IGN) != !0);\n+        assert!(signal(libc::SIGPIPE, libc::SIG_IGN) != libc::SIG_ERR);\n     }\n     #[cfg(any(target_os = \"nacl\", target_os = \"emscripten\", target_os=\"fuchsia\"))]\n     unsafe fn reset_sigpipe() {}"}]}