{"sha": "c27633489d038765922d996ebd59ba032007d25c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNzYzMzQ4OWQwMzg3NjU5MjJkOTk2ZWJkNTliYTAzMjAwN2QyNWM=", "commit": {"author": {"name": "SNCPlay42", "email": "SNCPlay42@gmail.com", "date": "2020-07-21T21:50:56Z"}, "committer": {"name": "SNCPlay42", "email": "SNCPlay42@gmail.com", "date": "2020-07-22T22:52:49Z"}, "message": "add RegionName::span", "tree": {"sha": "f556ae2efe010bd3df944b2856a68be8ff37d07b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f556ae2efe010bd3df944b2856a68be8ff37d07b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c27633489d038765922d996ebd59ba032007d25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c27633489d038765922d996ebd59ba032007d25c", "html_url": "https://github.com/rust-lang/rust/commit/c27633489d038765922d996ebd59ba032007d25c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c27633489d038765922d996ebd59ba032007d25c/comments", "author": {"login": "SNCPlay42", "id": 5455518, "node_id": "MDQ6VXNlcjU0NTU1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5455518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SNCPlay42", "html_url": "https://github.com/SNCPlay42", "followers_url": "https://api.github.com/users/SNCPlay42/followers", "following_url": "https://api.github.com/users/SNCPlay42/following{/other_user}", "gists_url": "https://api.github.com/users/SNCPlay42/gists{/gist_id}", "starred_url": "https://api.github.com/users/SNCPlay42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SNCPlay42/subscriptions", "organizations_url": "https://api.github.com/users/SNCPlay42/orgs", "repos_url": "https://api.github.com/users/SNCPlay42/repos", "events_url": "https://api.github.com/users/SNCPlay42/events{/privacy}", "received_events_url": "https://api.github.com/users/SNCPlay42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SNCPlay42", "id": 5455518, "node_id": "MDQ6VXNlcjU0NTU1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5455518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SNCPlay42", "html_url": "https://github.com/SNCPlay42", "followers_url": "https://api.github.com/users/SNCPlay42/followers", "following_url": "https://api.github.com/users/SNCPlay42/following{/other_user}", "gists_url": "https://api.github.com/users/SNCPlay42/gists{/gist_id}", "starred_url": "https://api.github.com/users/SNCPlay42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SNCPlay42/subscriptions", "organizations_url": "https://api.github.com/users/SNCPlay42/orgs", "repos_url": "https://api.github.com/users/SNCPlay42/repos", "events_url": "https://api.github.com/users/SNCPlay42/events{/privacy}", "received_events_url": "https://api.github.com/users/SNCPlay42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad7bc3f428300aee6764f6e23527e19eb235e81", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad7bc3f428300aee6764f6e23527e19eb235e81", "html_url": "https://github.com/rust-lang/rust/commit/8ad7bc3f428300aee6764f6e23527e19eb235e81"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "cc8a5e0768cba3ab721919ff033bb08b579fc153", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c27633489d038765922d996ebd59ba032007d25c/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c27633489d038765922d996ebd59ba032007d25c/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=c27633489d038765922d996ebd59ba032007d25c", "patch": "@@ -19,7 +19,7 @@ use crate::borrow_check::{\n     MirBorrowckCtxt,\n };\n \n-use super::{OutlivesSuggestionBuilder, RegionName, RegionNameSource};\n+use super::{OutlivesSuggestionBuilder, RegionName};\n \n impl ConstraintDescription for ConstraintCategory {\n     fn description(&self) -> &'static str {\n@@ -396,18 +396,8 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n             diag.span_label(upvar_span, \"variable captured here\");\n         }\n \n-        match self.give_region_a_name(*outlived_fr).unwrap().source {\n-            RegionNameSource::NamedEarlyBoundRegion(fr_span)\n-            | RegionNameSource::NamedFreeRegion(fr_span)\n-            | RegionNameSource::SynthesizedFreeEnvRegion(fr_span, _)\n-            | RegionNameSource::CannotMatchHirTy(fr_span, _)\n-            | RegionNameSource::MatchedHirTy(fr_span)\n-            | RegionNameSource::MatchedAdtAndSegment(fr_span)\n-            | RegionNameSource::AnonRegionFromUpvar(fr_span, _)\n-            | RegionNameSource::AnonRegionFromOutput(fr_span, _, _) => {\n-                diag.span_label(fr_span, \"inferred to be a `FnMut` closure\");\n-            }\n-            _ => {}\n+        if let Some(fr_span) = self.give_region_a_name(*outlived_fr).unwrap().span() {\n+            diag.span_label(fr_span, \"inferred to be a `FnMut` closure\");\n         }\n \n         diag.note("}, {"sha": "81148d888ed9c39a586768660dc2bd8af28d4d18", "filename": "src/librustc_mir/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c27633489d038765922d996ebd59ba032007d25c/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c27633489d038765922d996ebd59ba032007d25c/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=c27633489d038765922d996ebd59ba032007d25c", "patch": "@@ -68,6 +68,22 @@ impl RegionName {\n         }\n     }\n \n+    crate fn span(&self) -> Option<Span> {\n+        match self.source {\n+            RegionNameSource::Static => None,\n+            RegionNameSource::NamedEarlyBoundRegion(span)\n+            | RegionNameSource::NamedFreeRegion(span)\n+            | RegionNameSource::SynthesizedFreeEnvRegion(span, _)\n+            | RegionNameSource::CannotMatchHirTy(span, _)\n+            | RegionNameSource::MatchedHirTy(span)\n+            | RegionNameSource::MatchedAdtAndSegment(span)\n+            | RegionNameSource::AnonRegionFromUpvar(span, _)\n+            | RegionNameSource::AnonRegionFromOutput(span, _, _)\n+            | RegionNameSource::AnonRegionFromYieldTy(span, _)\n+            | RegionNameSource::AnonRegionFromAsyncFn(span) => Some(span),\n+        }\n+    }\n+\n     crate fn highlight_region_name(&self, diag: &mut DiagnosticBuilder<'_>) {\n         match &self.source {\n             RegionNameSource::NamedFreeRegion(span)"}]}