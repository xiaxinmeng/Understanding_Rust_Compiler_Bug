{"sha": "51b141e3e499558ddfece1f00dd6714f442c2404", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYjE0MWUzZTQ5OTU1OGRkZmVjZTFmMDBkZDY3MTRmNDQyYzI0MDQ=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T19:36:46Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:22:01Z"}, "message": "fmt: simplify parse_type", "tree": {"sha": "9918034b617e065fa76c0a554545f4e357b50cf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9918034b617e065fa76c0a554545f4e357b50cf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51b141e3e499558ddfece1f00dd6714f442c2404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51b141e3e499558ddfece1f00dd6714f442c2404", "html_url": "https://github.com/rust-lang/rust/commit/51b141e3e499558ddfece1f00dd6714f442c2404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51b141e3e499558ddfece1f00dd6714f442c2404/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a17ab2a9cb4a9c1ce34da670127e45c70e2b99f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a17ab2a9cb4a9c1ce34da670127e45c70e2b99f", "html_url": "https://github.com/rust-lang/rust/commit/0a17ab2a9cb4a9c1ce34da670127e45c70e2b99f"}], "stats": {"total": 41, "additions": 15, "deletions": 26}, "files": [{"sha": "3cc7e2458b25cf69d2d8579e05fc90c83cb1ff4e", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 15, "deletions": 26, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/51b141e3e499558ddfece1f00dd6714f442c2404/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51b141e3e499558ddfece1f00dd6714f442c2404/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=51b141e3e499558ddfece1f00dd6714f442c2404", "patch": "@@ -310,34 +310,23 @@ pub mod ct {\n     pub fn parse_type(s: &str, i: uint, lim: uint, err: ErrorFn) ->\n        Parsed<Ty> {\n         if i >= lim { err(~\"missing type in conversion\"); }\n-        let tstr = str::slice(s, i, i+1u);\n         // FIXME (#2249): Do we really want two signed types here?\n         // How important is it to be printf compatible?\n-        let t =\n-            if tstr == ~\"b\" {\n-                TyBool\n-            } else if tstr == ~\"s\" {\n-                TyStr\n-            } else if tstr == ~\"c\" {\n-                TyChar\n-            } else if tstr == ~\"d\" || tstr == ~\"i\" {\n-                TyInt(Signed)\n-            } else if tstr == ~\"u\" {\n-                TyInt(Unsigned)\n-            } else if tstr == ~\"x\" {\n-                TyHex(CaseLower)\n-            } else if tstr == ~\"X\" {\n-                TyHex(CaseUpper)\n-            } else if tstr == ~\"t\" {\n-                TyBits\n-            } else if tstr == ~\"o\" {\n-                TyOctal\n-            } else if tstr == ~\"f\" {\n-                TyFloat\n-            } else if tstr == ~\"?\" {\n-                TyPoly\n-            } else { err(~\"unknown type in conversion: \" + tstr) };\n-        return Parsed::new(t, i + 1u);\n+        let t = match s[i] {\n+            'b' as u8 => TyBool,\n+            's' as u8 => TyStr,\n+            'c' as u8 => TyChar,\n+            'd' as u8 | 'i' as u8 => TyInt(Signed),\n+            'u' as u8 => TyInt(Unsigned),\n+            'x' as u8 => TyHex(CaseLower),\n+            'X' as u8 => TyHex(CaseUpper),\n+            't' as u8 => TyBits,\n+            'o' as u8 => TyOctal,\n+            'f' as u8 => TyFloat,\n+            '?' as u8 => TyPoly,\n+            _ => err(~\"unknown type in conversion: \" + s.substr(i, 1))\n+        };\n+        Parsed::new(t, i + 1)\n     }\n }\n "}]}