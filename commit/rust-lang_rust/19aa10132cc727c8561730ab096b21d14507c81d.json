{"sha": "19aa10132cc727c8561730ab096b21d14507c81d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YWExMDEzMmNjNzI3Yzg1NjE3MzBhYjA5NmIyMWQxNDUwN2M4MWQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-31T09:22:22Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-31T09:22:22Z"}, "message": "Speed up String::from_utf16", "tree": {"sha": "7854de65862a4ea4a5a2abd0fac13c7ba66e6c01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7854de65862a4ea4a5a2abd0fac13c7ba66e6c01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19aa10132cc727c8561730ab096b21d14507c81d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19aa10132cc727c8561730ab096b21d14507c81d", "html_url": "https://github.com/rust-lang/rust/commit/19aa10132cc727c8561730ab096b21d14507c81d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19aa10132cc727c8561730ab096b21d14507c81d/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0db7abe5b6f3cdfca736f9238689cbea8ef61c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0db7abe5b6f3cdfca736f9238689cbea8ef61c7e", "html_url": "https://github.com/rust-lang/rust/commit/0db7abe5b6f3cdfca736f9238689cbea8ef61c7e"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "8690f9017c406d9eeca42f876741c1e1af3bf5fb", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/19aa10132cc727c8561730ab096b21d14507c81d/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19aa10132cc727c8561730ab096b21d14507c81d/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=19aa10132cc727c8561730ab096b21d14507c81d", "patch": "@@ -618,7 +618,15 @@ impl String {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn from_utf16(v: &[u16]) -> Result<String, FromUtf16Error> {\n-        decode_utf16(v.iter().cloned()).collect::<Result<_, _>>().map_err(|_| FromUtf16Error(()))\n+        let mut ret = String::with_capacity(v.len());\n+        for c in decode_utf16(v.iter().cloned()) {\n+            if let Ok(c) = c {\n+                ret.push(c);\n+            } else {\n+                return Err(FromUtf16Error(()));\n+            }\n+        }\n+        Ok(ret)\n     }\n \n     /// Decode a UTF-16 encoded slice `v` into a `String`, replacing"}]}