{"sha": "09f205ac57b2eac47c043e60546cc4a98bcb70cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZjIwNWFjNTdiMmVhYzQ3YzA0M2U2MDU0NmNjNGE5OGJjYjcwY2I=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-11T10:29:52Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-12T11:58:44Z"}, "message": "Use () for crate_variances.", "tree": {"sha": "cf4837c6da2e220fc1ff09e552808fed365fec35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4837c6da2e220fc1ff09e552808fed365fec35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09f205ac57b2eac47c043e60546cc4a98bcb70cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09f205ac57b2eac47c043e60546cc4a98bcb70cb", "html_url": "https://github.com/rust-lang/rust/commit/09f205ac57b2eac47c043e60546cc4a98bcb70cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09f205ac57b2eac47c043e60546cc4a98bcb70cb/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f4f6ee4fd12f5eed5832f8006281571114818a", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f4f6ee4fd12f5eed5832f8006281571114818a", "html_url": "https://github.com/rust-lang/rust/commit/75f4f6ee4fd12f5eed5832f8006281571114818a"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "2825f1e0bc462b51be68171989f6d5188f64a8b5", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09f205ac57b2eac47c043e60546cc4a98bcb70cb/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09f205ac57b2eac47c043e60546cc4a98bcb70cb/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=09f205ac57b2eac47c043e60546cc4a98bcb70cb", "patch": "@@ -544,7 +544,7 @@ rustc_queries! {\n     }\n \n     /// Gets a map with the variance of every item; use `item_variance` instead.\n-    query crate_variances(_: CrateNum) -> ty::CrateVariancesMap<'tcx> {\n+    query crate_variances(_: ()) -> ty::CrateVariancesMap<'tcx> {\n         storage(ArenaCacheSelector<'tcx>)\n         desc { \"computing the variances for items in this crate\" }\n     }"}, {"sha": "66fb9eb86931b3bd8357a2ebf24e025a608ec0fb", "filename": "compiler/rustc_typeck/src/variance/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/09f205ac57b2eac47c043e60546cc4a98bcb70cb/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09f205ac57b2eac47c043e60546cc4a98bcb70cb/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fmod.rs?ref=09f205ac57b2eac47c043e60546cc4a98bcb70cb", "patch": "@@ -6,7 +6,7 @@\n use hir::Node;\n use rustc_arena::DroplessArena;\n use rustc_hir as hir;\n-use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc_hir::def_id::DefId;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, CrateVariancesMap, TyCtxt};\n \n@@ -30,8 +30,7 @@ pub fn provide(providers: &mut Providers) {\n     *providers = Providers { variances_of, crate_variances, ..*providers };\n }\n \n-fn crate_variances(tcx: TyCtxt<'_>, crate_num: CrateNum) -> CrateVariancesMap<'_> {\n-    assert_eq!(crate_num, LOCAL_CRATE);\n+fn crate_variances(tcx: TyCtxt<'_>, (): ()) -> CrateVariancesMap<'_> {\n     let arena = DroplessArena::default();\n     let terms_cx = terms::determine_parameters_to_be_inferred(tcx, &arena);\n     let constraints_cx = constraints::add_constraints_from_crate(terms_cx);\n@@ -79,6 +78,6 @@ fn variances_of(tcx: TyCtxt<'_>, item_def_id: DefId) -> &[ty::Variance] {\n \n     // Everything else must be inferred.\n \n-    let crate_map = tcx.crate_variances(LOCAL_CRATE);\n+    let crate_map = tcx.crate_variances(());\n     crate_map.variances.get(&item_def_id).copied().unwrap_or(&[])\n }"}]}