{"sha": "04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OTIxMzk4YjY4OGNmM2VkYThkNTM5NGQ3YTVkYmVlY2QxZjJiYWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-01-16T21:48:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-16T21:48:23Z"}, "message": "Rollup merge of #39065 - frewsxcv:libstd-os-unix-ffi-docs, r=GuillaumeGomez\n\nAdd doc examples & description in `std::os::unix::ffi`.\n\nNone", "tree": {"sha": "1ccc784b01dbcff26bf03e15736c1c66569f93df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ccc784b01dbcff26bf03e15736c1c66569f93df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "html_url": "https://github.com/rust-lang/rust/commit/04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04921398b688cf3eda8d5394d7a5dbeecd1f2baf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c382ff8977cdd799fcc0769eb2ca247dc69d21a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c382ff8977cdd799fcc0769eb2ca247dc69d21a1", "html_url": "https://github.com/rust-lang/rust/commit/c382ff8977cdd799fcc0769eb2ca247dc69d21a1"}, {"sha": "de73e52f5701e754a4e9a5b2c2377d2b4ba834eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/de73e52f5701e754a4e9a5b2c2377d2b4ba834eb", "html_url": "https://github.com/rust-lang/rust/commit/de73e52f5701e754a4e9a5b2c2377d2b4ba834eb"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "fb9984ccbdda5f63444ead83602afbe6e3f384a3", "filename": "src/libstd/sys/unix/ext/ffi.rs", "status": "modified", "additions": 57, "deletions": 3, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/04921398b688cf3eda8d5394d7a5dbeecd1f2baf/src%2Flibstd%2Fsys%2Funix%2Fext%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04921398b688cf3eda8d5394d7a5dbeecd1f2baf/src%2Flibstd%2Fsys%2Funix%2Fext%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fffi.rs?ref=04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "patch": "@@ -20,11 +20,38 @@ use sys_common::{FromInner, IntoInner, AsInner};\n /// Unix-specific extensions to `OsString`.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait OsStringExt {\n-    /// Creates an `OsString` from a byte vector.\n+    /// Creates an [`OsString`] from a byte vector.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::ffi::OsString;\n+    /// use std::os::unix::ffi::OsStringExt;\n+    ///\n+    /// let bytes = b\"foo\".to_vec();\n+    /// let os_string = OsString::from_vec(bytes);\n+    /// assert_eq!(os_string.to_str(), Some(\"foo\"));\n+    /// ```\n+    ///\n+    /// [`OsString`]: ../../../ffi/struct.OsString.html\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn from_vec(vec: Vec<u8>) -> Self;\n \n-    /// Yields the underlying byte vector of this `OsString`.\n+    /// Yields the underlying byte vector of this [`OsString`].\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::ffi::OsString;\n+    /// use std::os::unix::ffi::OsStringExt;\n+    ///\n+    /// let mut os_string = OsString::new();\n+    /// os_string.push(\"foo\");\n+    /// let bytes = os_string.into_vec();\n+    /// assert_eq!(bytes, b\"foo\");\n+    /// ```\n+    ///\n+    /// [`OsString`]: ../../../ffi/struct.OsString.html\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn into_vec(self) -> Vec<u8>;\n }\n@@ -43,9 +70,36 @@ impl OsStringExt for OsString {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait OsStrExt {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    /// Creates an [`OsStr`] from a byte slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::ffi::OsStr;\n+    /// use std::os::unix::ffi::OsStrExt;\n+    ///\n+    /// let bytes = b\"foo\";\n+    /// let os_str = OsStr::from_bytes(bytes);\n+    /// assert_eq!(os_str.to_str(), Some(\"foo\"));\n+    /// ```\n+    ///\n+    /// [`OsStr`]: ../../../ffi/struct.OsStr.html\n     fn from_bytes(slice: &[u8]) -> &Self;\n \n-    /// Gets the underlying byte view of the `OsStr` slice.\n+    /// Gets the underlying byte view of the [`OsStr`] slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::ffi::OsStr;\n+    /// use std::os::unix::ffi::OsStrExt;\n+    ///\n+    /// let mut os_str = OsStr::new(\"foo\");\n+    /// let bytes = os_str.as_bytes();\n+    /// assert_eq!(bytes, b\"foo\");\n+    /// ```\n+    ///\n+    /// [`OsStr`]: ../../../ffi/struct.OsStr.html\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn as_bytes(&self) -> &[u8];\n }"}]}