{"sha": "892acc5b36552995515f91d2bc14ae82f81d7b8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MmFjYzViMzY1NTI5OTU1MTVmOTFkMmJjMTRhZTgyZjgxZDdiOGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T15:03:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T15:03:50Z"}, "message": "impl items", "tree": {"sha": "e046cfbec482330e34a196f0f132fc738bf563f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e046cfbec482330e34a196f0f132fc738bf563f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/892acc5b36552995515f91d2bc14ae82f81d7b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/892acc5b36552995515f91d2bc14ae82f81d7b8d", "html_url": "https://github.com/rust-lang/rust/commit/892acc5b36552995515f91d2bc14ae82f81d7b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/892acc5b36552995515f91d2bc14ae82f81d7b8d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf2b17a572b56371cfc29bbc3a686edcb12782c", "url": "https://api.github.com/repos/rust-lang/rust/commits/edf2b17a572b56371cfc29bbc3a686edcb12782c", "html_url": "https://github.com/rust-lang/rust/commit/edf2b17a572b56371cfc29bbc3a686edcb12782c"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "e10e5aaf462d0b278c812bf6b59a7258fb11b017", "filename": "src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -158,6 +158,7 @@ Grammar(\n         \"TYPE_ARG_LIST\",\n \n         \"PARAM_LIST\",\n+        \"SELF_PARAM\",\n         \"ARG_LIST\",\n     ]\n )"}, {"sha": "7d657ced030e6bb8a94dc99111c98093dabc9821", "filename": "src/parser/grammar/items/traits.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -29,6 +29,17 @@ pub(super) fn impl_item(p: &mut Parser) {\n     }\n     type_params::where_clause(p);\n     p.expect(L_CURLY);\n+\n+    // test impl_item_items\n+    // impl F {\n+    //     type A = i32;\n+    //     const B: i32 = 92;\n+    //     fn foo() {}\n+    //     fn bar(&self) {}\n+    // }\n+    while !p.at(EOF) && !p.at(R_CURLY) {\n+        item(p);\n+    }\n     p.expect(R_CURLY);\n }\n "}, {"sha": "b8847fb68bdab9adbb87cdf7e9a94b024d72058b", "filename": "src/parser/grammar/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fparser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fparser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fmod.rs?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -104,6 +104,7 @@ fn fn_value_parameters(p: &mut Parser) {\n     assert!(p.at(L_PAREN));\n     let m = p.start();\n     p.bump();\n+    self_param(p);\n     while !p.at(EOF) && !p.at(R_PAREN) {\n         value_parameter(p);\n         if !p.at(R_PAREN) {\n@@ -120,6 +121,29 @@ fn fn_value_parameters(p: &mut Parser) {\n         types::type_(p);\n         m.complete(p, VALUE_PARAMETER);\n     }\n+\n+    // test self_param\n+    // impl S {\n+    //     fn a(self) {}\n+    //     fn b(&self,) {}\n+    //     fn c(&mut self, x: i32) {}\n+    // }\n+    fn self_param(p: &mut Parser) {\n+        let la1 = p.nth(1);\n+        let la2 = p.nth(2);\n+        let n_toks = match (p.current(), la1, la2) {\n+            (SELF_KW, _, _) => 1,\n+            (AMPERSAND, SELF_KW, _) => 2,\n+            (AMPERSAND, MUT_KW, SELF_KW) => 3,\n+            _ => return,\n+        };\n+        let m = p.start();\n+        for _ in 0..n_toks { p.bump(); }\n+        m.complete(p, SELF_PARAM);\n+        if !p.at(R_PAREN) {\n+            p.expect(COMMA);\n+        }\n+    }\n }\n \n fn fn_ret_type(p: &mut Parser) {"}, {"sha": "0603f53fdc855396649a0097de52311db8c162c3", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -145,6 +145,7 @@ pub enum SyntaxKind {\n     TYPE_PARAM_LIST,\n     TYPE_ARG_LIST,\n     PARAM_LIST,\n+    SELF_PARAM,\n     ARG_LIST,\n     // Technical SyntaxKinds: they appear temporally during parsing,\n     // but never end up in the final tree\n@@ -298,6 +299,7 @@ impl SyntaxKind {\n             TYPE_PARAM_LIST => &SyntaxInfo { name: \"TYPE_PARAM_LIST\" },\n             TYPE_ARG_LIST => &SyntaxInfo { name: \"TYPE_ARG_LIST\" },\n             PARAM_LIST => &SyntaxInfo { name: \"PARAM_LIST\" },\n+            SELF_PARAM => &SyntaxInfo { name: \"SELF_PARAM\" },\n             ARG_LIST => &SyntaxInfo { name: \"ARG_LIST\" },\n             TOMBSTONE => &SyntaxInfo { name: \"TOMBSTONE\" },\n             EOF => &SyntaxInfo { name: \"EOF\" },"}, {"sha": "f108514879dbbf18493b585432341e7c67deabcf", "filename": "tests/data/parser/inline/0054_impl_item_items.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.rs?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -0,0 +1,6 @@\n+impl F {\n+    type A = i32;\n+    const B: i32 = 92;\n+    fn foo() {}\n+    fn bar(&self) {}\n+}"}, {"sha": "739f3d0f9bb6395a5c2e563b78675d351b3b3a10", "filename": "tests/data/parser/inline/0054_impl_item_items.txt", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0054_impl_item_items.txt?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -0,0 +1,77 @@\n+FILE@[0; 89)\n+  IMPL_ITEM@[0; 89)\n+    IMPL_KW@[0; 4)\n+    PATH_TYPE@[4; 7)\n+      PATH@[4; 7)\n+        PATH_SEGMENT@[4; 7)\n+          NAME_REF@[4; 7)\n+            WHITESPACE@[4; 5)\n+            IDENT@[5; 6) \"F\"\n+            WHITESPACE@[6; 7)\n+    L_CURLY@[7; 8)\n+    TYPE_ITEM@[8; 31)\n+      WHITESPACE@[8; 13)\n+      TYPE_KW@[13; 17)\n+      NAME@[17; 20)\n+        WHITESPACE@[17; 18)\n+        IDENT@[18; 19) \"A\"\n+        WHITESPACE@[19; 20)\n+      EQ@[20; 21)\n+      PATH_TYPE@[21; 25)\n+        PATH@[21; 25)\n+          PATH_SEGMENT@[21; 25)\n+            NAME_REF@[21; 25)\n+              WHITESPACE@[21; 22)\n+              IDENT@[22; 25) \"i32\"\n+      SEMI@[25; 26)\n+      WHITESPACE@[26; 31)\n+    CONST_ITEM@[31; 54)\n+      CONST_KW@[31; 36)\n+      NAME@[36; 38)\n+        WHITESPACE@[36; 37)\n+        IDENT@[37; 38) \"B\"\n+      COLON@[38; 39)\n+      PATH_TYPE@[39; 44)\n+        PATH@[39; 44)\n+          PATH_SEGMENT@[39; 44)\n+            NAME_REF@[39; 44)\n+              WHITESPACE@[39; 40)\n+              IDENT@[40; 43) \"i32\"\n+              WHITESPACE@[43; 44)\n+      EQ@[44; 45)\n+      LITERAL@[45; 48)\n+        WHITESPACE@[45; 46)\n+        INT_NUMBER@[46; 48)\n+      SEMI@[48; 49)\n+      WHITESPACE@[49; 54)\n+    FN_ITEM@[54; 70)\n+      FN_KW@[54; 56)\n+      NAME@[56; 60)\n+        WHITESPACE@[56; 57)\n+        IDENT@[57; 60) \"foo\"\n+      PARAM_LIST@[60; 63)\n+        L_PAREN@[60; 61)\n+        R_PAREN@[61; 62)\n+        WHITESPACE@[62; 63)\n+      BLOCK@[63; 70)\n+        L_CURLY@[63; 64)\n+        R_CURLY@[64; 65)\n+        WHITESPACE@[65; 70)\n+    FN_ITEM@[70; 87)\n+      FN_KW@[70; 72)\n+      NAME@[72; 76)\n+        WHITESPACE@[72; 73)\n+        IDENT@[73; 76) \"bar\"\n+      PARAM_LIST@[76; 84)\n+        L_PAREN@[76; 77)\n+        SELF_PARAM@[77; 82)\n+          AMPERSAND@[77; 78)\n+          SELF_KW@[78; 82)\n+        R_PAREN@[82; 83)\n+        WHITESPACE@[83; 84)\n+      BLOCK@[84; 87)\n+        L_CURLY@[84; 85)\n+        R_CURLY@[85; 86)\n+        WHITESPACE@[86; 87)\n+    R_CURLY@[87; 88)\n+    WHITESPACE@[88; 89)"}, {"sha": "2890c27e2fb4c2a5544268816d7d39d9c7817af8", "filename": "tests/data/parser/inline/0055_self_param.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/892acc5b36552995515f91d2bc14ae82f81d7b8d/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892acc5b36552995515f91d2bc14ae82f81d7b8d/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.rs?ref=892acc5b36552995515f91d2bc14ae82f81d7b8d", "patch": "@@ -0,0 +1,5 @@\n+impl S {\n+    fn a(self) {}\n+    fn b(&self,) {}\n+    fn c(&mut self, x: i32) {}\n+}"}]}