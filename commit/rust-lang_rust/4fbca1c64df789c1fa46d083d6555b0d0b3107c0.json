{"sha": "4fbca1c64df789c1fa46d083d6555b0d0b3107c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYmNhMWM2NGRmNzg5YzFmYTQ2ZDA4M2Q2NTU1YjBkMGIzMTA3YzA=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-31T13:57:03Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-31T13:57:03Z"}, "message": "vscode: use ctx.subscriptions instead of local .disposables", "tree": {"sha": "7fe1e7f7779a9da25a1bf79883944dc9cae0ac66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fe1e7f7779a9da25a1bf79883944dc9cae0ac66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fbca1c64df789c1fa46d083d6555b0d0b3107c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbca1c64df789c1fa46d083d6555b0d0b3107c0", "html_url": "https://github.com/rust-lang/rust/commit/4fbca1c64df789c1fa46d083d6555b0d0b3107c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fbca1c64df789c1fa46d083d6555b0d0b3107c0/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09a760e52e20dcd79d902b05065934615cc4d56b", "url": "https://api.github.com/repos/rust-lang/rust/commits/09a760e52e20dcd79d902b05065934615cc4d56b", "html_url": "https://github.com/rust-lang/rust/commit/09a760e52e20dcd79d902b05065934615cc4d56b"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "eba5111930b9cdd43309f586494dd7c9173bee8a", "filename": "editors/code/src/commands/syntax_tree.ts", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4fbca1c64df789c1fa46d083d6555b0d0b3107c0/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4fbca1c64df789c1fa46d083d6555b0d0b3107c0/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts?ref=4fbca1c64df789c1fa46d083d6555b0d0b3107c0", "patch": "@@ -12,8 +12,8 @@ const AST_FILE_SCHEME = \"rust-analyzer\";\n export function syntaxTree(ctx: Ctx): Cmd {\n     const tdcp = new TextDocumentContentProvider(ctx);\n \n-    ctx.pushCleanup(new AstInspector);\n-    ctx.pushCleanup(tdcp);\n+    void new AstInspector(ctx);\n+\n     ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider(AST_FILE_SCHEME, tdcp));\n \n     return async () => {\n@@ -35,17 +35,14 @@ export function syntaxTree(ctx: Ctx): Cmd {\n     };\n }\n \n-class TextDocumentContentProvider implements vscode.TextDocumentContentProvider, Disposable {\n+class TextDocumentContentProvider implements vscode.TextDocumentContentProvider {\n     readonly uri = vscode.Uri.parse('rust-analyzer://syntaxtree');\n     readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n-    private readonly disposables: Disposable[] = [];\n+\n \n     constructor(private readonly ctx: Ctx) {\n-        vscode.workspace.onDidChangeTextDocument(this.onDidChangeTextDocument, this, this.disposables);\n-        vscode.window.onDidChangeActiveTextEditor(this.onDidChangeActiveTextEditor, this, this.disposables);\n-    }\n-    dispose() {\n-        this.disposables.forEach(d => d.dispose());\n+        vscode.workspace.onDidChangeTextDocument(this.onDidChangeTextDocument, this, ctx.subscriptions);\n+        vscode.window.onDidChangeActiveTextEditor(this.onDidChangeActiveTextEditor, this, ctx.subscriptions);\n     }\n \n     private onDidChangeTextDocument(event: vscode.TextDocumentChangeEvent) {\n@@ -88,16 +85,16 @@ class AstInspector implements vscode.HoverProvider, Disposable {\n         border: \"#ffffff 1px solid\",\n     });\n     private rustEditor: undefined | RustEditor;\n-    private readonly disposables: Disposable[] = [];\n \n-    constructor() {\n-        this.disposables.push(vscode.languages.registerHoverProvider({ scheme: AST_FILE_SCHEME }, this));\n-        vscode.workspace.onDidCloseTextDocument(this.onDidCloseTextDocument, this, this.disposables);\n-        vscode.window.onDidChangeVisibleTextEditors(this.onDidChangeVisibleTextEditors, this, this.disposables);\n+    constructor(ctx: Ctx) {\n+        ctx.pushCleanup(vscode.languages.registerHoverProvider({ scheme: AST_FILE_SCHEME }, this));\n+        vscode.workspace.onDidCloseTextDocument(this.onDidCloseTextDocument, this, ctx.subscriptions);\n+        vscode.window.onDidChangeVisibleTextEditors(this.onDidChangeVisibleTextEditors, this, ctx.subscriptions);\n+\n+        ctx.pushCleanup(this);\n     }\n     dispose() {\n         this.setRustEditor(undefined);\n-        this.disposables.forEach(d => d.dispose());\n     }\n \n     private onDidCloseTextDocument(doc: vscode.TextDocument) {"}]}