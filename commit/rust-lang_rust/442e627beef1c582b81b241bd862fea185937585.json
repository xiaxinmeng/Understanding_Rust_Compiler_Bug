{"sha": "442e627beef1c582b81b241bd862fea185937585", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MmU2MjdiZWVmMWM1ODJiODFiMjQxYmQ4NjJmZWExODU5Mzc1ODU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T16:40:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T16:40:14Z"}, "message": "Auto merge of #87697 - GuillaumeGomez:add-e0784, r=nagisa\n\nAssign E0784 error code for union expression errors", "tree": {"sha": "4e341d194019a77c8ccc94d83e893eb2314d9106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e341d194019a77c8ccc94d83e893eb2314d9106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/442e627beef1c582b81b241bd862fea185937585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/442e627beef1c582b81b241bd862fea185937585", "html_url": "https://github.com/rust-lang/rust/commit/442e627beef1c582b81b241bd862fea185937585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/442e627beef1c582b81b241bd862fea185937585/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e886d68766719a7fc1714c52a0e7e81929e8b8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e886d68766719a7fc1714c52a0e7e81929e8b8e", "html_url": "https://github.com/rust-lang/rust/commit/4e886d68766719a7fc1714c52a0e7e81929e8b8e"}, {"sha": "e500cd214011449a1954d7aa4445d4e65a49ea76", "url": "https://api.github.com/repos/rust-lang/rust/commits/e500cd214011449a1954d7aa4445d4e65a49ea76", "html_url": "https://github.com/rust-lang/rust/commit/e500cd214011449a1954d7aa4445d4e65a49ea76"}], "stats": {"total": 63, "additions": 51, "deletions": 12}, "files": [{"sha": "c2e62328cb151e38f4a0a33ce8000980c2c75190", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/442e627beef1c582b81b241bd862fea185937585/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/442e627beef1c582b81b241bd862fea185937585/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=442e627beef1c582b81b241bd862fea185937585", "patch": "@@ -479,6 +479,7 @@ E0780: include_str!(\"./error_codes/E0780.md\"),\n E0781: include_str!(\"./error_codes/E0781.md\"),\n E0782: include_str!(\"./error_codes/E0782.md\"),\n E0783: include_str!(\"./error_codes/E0783.md\"),\n+E0784: include_str!(\"./error_codes/E0784.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard\n@@ -636,7 +637,7 @@ E0783: include_str!(\"./error_codes/E0783.md\"),\n     E0711, // a feature has been declared with conflicting stability attributes\n     E0717, // rustc_promotable without stability attribute\n //  E0721, // `await` keyword\n-//    E0723, unstable feature in `const` context\n+//  E0723, unstable feature in `const` context\n     E0726, // non-explicit (not `'_`) elided lifetime in unsupported position\n //  E0738, // Removed; errored on `#[track_caller] fn`s in `extern \"Rust\" { ... }`.\n     E0772, // `'static' obligation coming from `impl dyn Trait {}` or `impl Foo for dyn Bar {}`."}, {"sha": "b20b7039bf4720f565ca67a6f2e4de7973d500c4", "filename": "compiler/rustc_error_codes/src/error_codes/E0784.md", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/442e627beef1c582b81b241bd862fea185937585/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0784.md", "raw_url": "https://github.com/rust-lang/rust/raw/442e627beef1c582b81b241bd862fea185937585/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0784.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0784.md?ref=442e627beef1c582b81b241bd862fea185937585", "patch": "@@ -0,0 +1,32 @@\n+A union expression does not have exactly one field.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0784\n+union Bird {\n+    pigeon: u8,\n+    turtledove: u16,\n+}\n+\n+let bird = Bird {}; // error\n+let bird = Bird { pigeon: 0, turtledove: 1 }; // error\n+```\n+\n+The key property of unions is that all fields of a union share common storage.\n+As a result, writes to one field of a union can overwrite its other fields, and\n+size of a union is determined by the size of its largest field.\n+\n+You can find more information about the union types in the [Rust reference].\n+\n+Working example:\n+\n+```\n+union Bird {\n+    pigeon: u8,\n+    turtledove: u16,\n+}\n+\n+let bird = Bird { pigeon: 0 }; // OK\n+```\n+\n+[Rust reference]: https://doc.rust-lang.org/reference/items/unions.html"}, {"sha": "831b573e1568a15129e2a675433f336459e1e8f1", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/442e627beef1c582b81b241bd862fea185937585/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/442e627beef1c582b81b241bd862fea185937585/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=442e627beef1c582b81b241bd862fea185937585", "patch": "@@ -1304,7 +1304,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // Make sure the programmer specified correct number of fields.\n         if kind_name == \"union\" {\n             if ast_fields.len() != 1 {\n-                tcx.sess.span_err(span, \"union expressions should have exactly one field\");\n+                struct_span_err!(\n+                    tcx.sess,\n+                    span,\n+                    E0784,\n+                    \"union expressions should have exactly one field\",\n+                )\n+                .emit();\n             }\n         } else if check_completeness && !error_happened && !remaining_fields.is_empty() {\n             let no_accessible_remaining_fields = remaining_fields"}, {"sha": "90ad16402f7db04f356c208f835b97153c38032b", "filename": "src/test/ui/union/union-fields-2.mirunsafeck.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/442e627beef1c582b81b241bd862fea185937585/src%2Ftest%2Fui%2Funion%2Funion-fields-2.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/442e627beef1c582b81b241bd862fea185937585/src%2Ftest%2Fui%2Funion%2Funion-fields-2.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-fields-2.mirunsafeck.stderr?ref=442e627beef1c582b81b241bd862fea185937585", "patch": "@@ -1,10 +1,10 @@\n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:10:13\n    |\n LL |     let u = U {};\n    |             ^\n \n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:12:13\n    |\n LL |     let u = U { a: 0, b: 1 };\n@@ -18,13 +18,13 @@ LL |     let u = U { a: 0, b: 1, c: 2 };\n    |\n    = note: available fields are: `a`, `b`\n \n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:13:13\n    |\n LL |     let u = U { a: 0, b: 1, c: 2 };\n    |             ^\n \n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:15:13\n    |\n LL |     let u = U { ..u };\n@@ -80,5 +80,5 @@ LL |     let U { a, .. } = u;\n \n error: aborting due to 13 previous errors\n \n-Some errors have detailed explanations: E0026, E0436, E0560.\n+Some errors have detailed explanations: E0026, E0436, E0560, E0784.\n For more information about an error, try `rustc --explain E0026`."}, {"sha": "90ad16402f7db04f356c208f835b97153c38032b", "filename": "src/test/ui/union/union-fields-2.thirunsafeck.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/442e627beef1c582b81b241bd862fea185937585/src%2Ftest%2Fui%2Funion%2Funion-fields-2.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/442e627beef1c582b81b241bd862fea185937585/src%2Ftest%2Fui%2Funion%2Funion-fields-2.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-fields-2.thirunsafeck.stderr?ref=442e627beef1c582b81b241bd862fea185937585", "patch": "@@ -1,10 +1,10 @@\n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:10:13\n    |\n LL |     let u = U {};\n    |             ^\n \n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:12:13\n    |\n LL |     let u = U { a: 0, b: 1 };\n@@ -18,13 +18,13 @@ LL |     let u = U { a: 0, b: 1, c: 2 };\n    |\n    = note: available fields are: `a`, `b`\n \n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:13:13\n    |\n LL |     let u = U { a: 0, b: 1, c: 2 };\n    |             ^\n \n-error: union expressions should have exactly one field\n+error[E0784]: union expressions should have exactly one field\n   --> $DIR/union-fields-2.rs:15:13\n    |\n LL |     let u = U { ..u };\n@@ -80,5 +80,5 @@ LL |     let U { a, .. } = u;\n \n error: aborting due to 13 previous errors\n \n-Some errors have detailed explanations: E0026, E0436, E0560.\n+Some errors have detailed explanations: E0026, E0436, E0560, E0784.\n For more information about an error, try `rustc --explain E0026`."}]}