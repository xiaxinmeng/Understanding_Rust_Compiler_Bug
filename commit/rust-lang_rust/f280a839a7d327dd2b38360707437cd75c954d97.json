{"sha": "f280a839a7d327dd2b38360707437cd75c954d97", "node_id": "C_kwDOAAsO6NoAKGYyODBhODM5YTdkMzI3ZGQyYjM4MzYwNzA3NDM3Y2Q3NWM5NTRkOTc", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-04-11T19:17:52Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-04-16T22:23:59Z"}, "message": "Add support for MIR opt unit tests", "tree": {"sha": "191623c7e1a4e778f76f2106a5efa547067d6022", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/191623c7e1a4e778f76f2106a5efa547067d6022"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f280a839a7d327dd2b38360707437cd75c954d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f280a839a7d327dd2b38360707437cd75c954d97", "html_url": "https://github.com/rust-lang/rust/commit/f280a839a7d327dd2b38360707437cd75c954d97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f280a839a7d327dd2b38360707437cd75c954d97/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8422403f775126c40d558838d321c063554c822", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8422403f775126c40d558838d321c063554c822", "html_url": "https://github.com/rust-lang/rust/commit/c8422403f775126c40d558838d321c063554c822"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "ee923908e3001af2cf0e0ff030511fe215d79006", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f280a839a7d327dd2b38360707437cd75c954d97/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f280a839a7d327dd2b38360707437cd75c954d97/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=f280a839a7d327dd2b38360707437cd75c954d97", "patch": "@@ -751,6 +751,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(location_detail, LocationDetail { file: true, line: false, column: false });\n     tracked!(merge_functions, Some(MergeFunctions::Disabled));\n     tracked!(mir_emit_retag, true);\n+    tracked!(mir_enable_passes, vec![(\"DestProp\".to_string(), false)]);\n     tracked!(mir_opt_level, Some(4));\n     tracked!(move_size_limit, Some(4096));\n     tracked!(mutable_noalias, Some(true));"}, {"sha": "cf88e8b2144d8a62516d55576e7f31275efeffa2", "filename": "compiler/rustc_mir_transform/src/pass_manager.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f280a839a7d327dd2b38360707437cd75c954d97/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f280a839a7d327dd2b38360707437cd75c954d97/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs?ref=f280a839a7d327dd2b38360707437cd75c954d97", "patch": "@@ -77,17 +77,30 @@ pub fn run_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>, passes: &[&dyn\n     let mut cnt = 0;\n \n     let validate = tcx.sess.opts.debugging_opts.validate_mir;\n+    let overridden_passes = &tcx.sess.opts.debugging_opts.mir_enable_passes;\n+    trace!(\"Overridden: {:?}\", overridden_passes);\n \n     if validate {\n         validate_body(tcx, body, format!(\"start of phase transition from {:?}\", start_phase));\n     }\n \n     for pass in passes {\n-        if !pass.is_enabled(&tcx.sess) {\n-            continue;\n-        }\n-\n         let name = pass.name();\n+\n+        if let Some((_, polarity)) = overridden_passes.iter().rev().find(|(s, _)| s == &*name) {\n+            trace!(\n+                \"{} {} as requested by flag\",\n+                if *polarity { \"Running\" } else { \"Not running\" },\n+                name\n+            );\n+            if !polarity {\n+                continue;\n+            }\n+        } else {\n+            if !pass.is_enabled(&tcx.sess) {\n+                continue;\n+            }\n+        }\n         let dump_enabled = pass.is_mir_dump_enabled();\n \n         if dump_enabled {"}, {"sha": "a5c1c713bfc815f6afad73064d84ed2725d35022", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f280a839a7d327dd2b38360707437cd75c954d97/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f280a839a7d327dd2b38360707437cd75c954d97/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=f280a839a7d327dd2b38360707437cd75c954d97", "patch": "@@ -369,6 +369,8 @@ mod desc {\n     pub const parse_opt_langid: &str = \"a language identifier\";\n     pub const parse_opt_pathbuf: &str = \"a path\";\n     pub const parse_list: &str = \"a space-separated list of strings\";\n+    pub const parse_list_with_polarity: &str =\n+        \"a comma-separated list of strings, with elements beginning with + or -\";\n     pub const parse_opt_comma_list: &str = \"a comma-separated list of strings\";\n     pub const parse_number: &str = \"a number\";\n     pub const parse_opt_number: &str = parse_number;\n@@ -530,6 +532,22 @@ mod parse {\n         }\n     }\n \n+    crate fn parse_list_with_polarity(slot: &mut Vec<(String, bool)>, v: Option<&str>) -> bool {\n+        match v {\n+            Some(s) => {\n+                for s in s.split(\",\") {\n+                    match s.chars().next() {\n+                        Some('+') => slot.push((s[1..].to_string(), true)),\n+                        Some('-') => slot.push((s[1..].to_string(), false)),\n+                        _ => return false,\n+                    }\n+                }\n+                true\n+            }\n+            None => false,\n+        }\n+    }\n+\n     crate fn parse_location_detail(ld: &mut LocationDetail, v: Option<&str>) -> bool {\n         if let Some(v) = v {\n             ld.line = false;\n@@ -1319,6 +1337,10 @@ options! {\n     mir_emit_retag: bool = (false, parse_bool, [TRACKED],\n         \"emit Retagging MIR statements, interpreted e.g., by miri; implies -Zmir-opt-level=0 \\\n         (default: no)\"),\n+    mir_enable_passes: Vec<(String, bool)> = (Vec::new(), parse_list_with_polarity, [TRACKED],\n+        \"use like `-Zmir-enable-passes=+DestProp,-InstCombine`. Forces the specified passes to be \\\n+        enabled, overriding all other checks. Passes that are not specified are enabled or \\\n+        disabled by other flags as usual.\"),\n     mir_opt_level: Option<usize> = (None, parse_opt_number, [TRACKED],\n         \"MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\"),\n     move_size_limit: Option<usize> = (None, parse_opt_number, [TRACKED],"}, {"sha": "e6f058569dbd8cf816823a087cf6c3b646fc9a1f", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f280a839a7d327dd2b38360707437cd75c954d97/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f280a839a7d327dd2b38360707437cd75c954d97/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=f280a839a7d327dd2b38360707437cd75c954d97", "patch": "@@ -157,6 +157,8 @@ pub struct TestProps {\n     pub should_ice: bool,\n     // If true, the stderr is expected to be different across bit-widths.\n     pub stderr_per_bitwidth: bool,\n+    // The MIR opt to unit test, if any\n+    pub mir_unit_test: Option<String>,\n }\n \n mod directives {\n@@ -189,6 +191,7 @@ mod directives {\n     pub const STDERR_PER_BITWIDTH: &'static str = \"stderr-per-bitwidth\";\n     pub const INCREMENTAL: &'static str = \"incremental\";\n     pub const KNOWN_BUG: &'static str = \"known-bug\";\n+    pub const MIR_UNIT_TEST: &'static str = \"unit-test\";\n     // This isn't a real directive, just one that is probably mistyped often\n     pub const INCORRECT_COMPILER_FLAGS: &'static str = \"compiler-flags\";\n }\n@@ -232,6 +235,7 @@ impl TestProps {\n             assembly_output: None,\n             should_ice: false,\n             stderr_per_bitwidth: false,\n+            mir_unit_test: None,\n         }\n     }\n \n@@ -392,6 +396,9 @@ impl TestProps {\n                 config.set_name_directive(ln, STDERR_PER_BITWIDTH, &mut self.stderr_per_bitwidth);\n                 config.set_name_directive(ln, INCREMENTAL, &mut self.incremental);\n                 config.set_name_directive(ln, KNOWN_BUG, &mut self.known_bug);\n+                config.set_name_value_directive(ln, MIR_UNIT_TEST, &mut self.mir_unit_test, |s| {\n+                    s.trim().to_string()\n+                });\n             });\n         }\n "}, {"sha": "6618fff64d38c2a4ad2282d1112effbd7083c1fa", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f280a839a7d327dd2b38360707437cd75c954d97/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f280a839a7d327dd2b38360707437cd75c954d97/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=f280a839a7d327dd2b38360707437cd75c954d97", "patch": "@@ -1856,10 +1856,14 @@ impl<'test> TestCx<'test> {\n                 rustc.args(&[\n                     \"-Copt-level=1\",\n                     \"-Zdump-mir=all\",\n-                    \"-Zmir-opt-level=4\",\n                     \"-Zvalidate-mir\",\n                     \"-Zdump-mir-exclude-pass-number\",\n                 ]);\n+                if let Some(pass) = &self.props.mir_unit_test {\n+                    rustc.args(&[\"-Zmir-opt-level=0\", &format!(\"-Zmir-enable-passes=+{}\", pass)]);\n+                } else {\n+                    rustc.arg(\"-Zmir-opt-level=4\");\n+                }\n \n                 let mir_dump_dir = self.get_mir_dump_dir();\n                 let _ = fs::remove_dir_all(&mir_dump_dir);"}]}