{"sha": "24784c60df583d1807faa889a84312df1d2e3b22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0Nzg0YzYwZGY1ODNkMTgwN2ZhYTg4OWE4NDMxMmRmMWQyZTNiMjI=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-07-21T17:51:27Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-07-21T17:51:27Z"}, "message": "Code review fixes", "tree": {"sha": "69fee254755a8db21a8ad55e894b3a26a3c9a2b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69fee254755a8db21a8ad55e894b3a26a3c9a2b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24784c60df583d1807faa889a84312df1d2e3b22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24784c60df583d1807faa889a84312df1d2e3b22", "html_url": "https://github.com/rust-lang/rust/commit/24784c60df583d1807faa889a84312df1d2e3b22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24784c60df583d1807faa889a84312df1d2e3b22/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "201b344f2b0c9e84606115d135cd658d0a955d2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/201b344f2b0c9e84606115d135cd658d0a955d2c", "html_url": "https://github.com/rust-lang/rust/commit/201b344f2b0c9e84606115d135cd658d0a955d2c"}], "stats": {"total": 131, "additions": 62, "deletions": 69}, "files": [{"sha": "739a44b195e10238abcefdfa69319d323ada3787", "filename": "crates/ra_ide_api/src/inlay_hints.rs", "status": "modified", "additions": 60, "deletions": 4, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/24784c60df583d1807faa889a84312df1d2e3b22/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24784c60df583d1807faa889a84312df1d2e3b22/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs?ref=24784c60df583d1807faa889a84312df1d2e3b22", "patch": "@@ -61,7 +61,7 @@ fn get_inlay_hints(node: &SyntaxNode) -> Vec<InlayHint> {\n             }\n         })\n         .accept(&node)\n-        .unwrap_or_else(Vec::new)\n+        .unwrap_or_default()\n }\n \n #[cfg(test)]\n@@ -93,7 +93,7 @@ fn main() {\n         let i_squared = i * i;\n         i_squared\n     });\n-    \n+\n     let test: i32 = 33;\n \n     let (x, c) = (42, 'a');\n@@ -104,7 +104,63 @@ fn main() {\n         )\n         .ok()\n         .unwrap();\n-        let hints = inlay_hints(&file);\n-        assert_debug_snapshot_matches!(\"inlay_hints\", hints);\n+        assert_debug_snapshot_matches!(inlay_hints(&file), @r#\"[\n+    InlayHint {\n+        range: [71; 75),\n+        text: \"let test = 54;\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [90; 94),\n+        text: \"let test = InnerStruct {};\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [121; 125),\n+        text: \"let test = OuterStruct {};\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [152; 156),\n+        text: \"let test = vec![222];\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [178; 186),\n+        text: \"let mut test = Vec::new();\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [229; 233),\n+        text: \"let test = test.into_iter().map(|i| i * i).collect::<Vec<_>>();\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [258; 259),\n+        text: \"i\",\n+        inlay_kind: ClosureParameter,\n+    },\n+    InlayHint {\n+        range: [297; 305),\n+        text: \"let mut test = 33;\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [417; 426),\n+        text: \"let i_squared = i * i;\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [496; 502),\n+        text: \"let (x, c) = (42, \\'a\\');\",\n+        inlay_kind: LetBinding,\n+    },\n+    InlayHint {\n+        range: [524; 528),\n+        text: \"let test = (42, \\'a\\');\",\n+        inlay_kind: LetBinding,\n+    },\n+]\"#\n+        );\n     }\n }"}, {"sha": "32168f12d7662056e48c64f44f917ba3213e2b5c", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24784c60df583d1807faa889a84312df1d2e3b22/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24784c60df583d1807faa889a84312df1d2e3b22/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=24784c60df583d1807faa889a84312df1d2e3b22", "patch": "@@ -399,8 +399,8 @@ impl Analysis {\n     }\n \n     /// Returns a list of the places in the file where type hints can be displayed.\n-    pub fn inlay_hints(&self, file_id: FileId) -> Vec<InlayHint> {\n-        inlay_hints::inlay_hints(&self.db.parse(file_id).tree())\n+    pub fn inlay_hints(&self, file_id: FileId) -> Cancelable<Vec<InlayHint>> {\n+        self.with_db(|db| inlay_hints::inlay_hints(&db.parse(file_id).tree()))\n     }\n \n     /// Returns the set of folding ranges."}, {"sha": "f4d562314f59cb55c2bb993dbe2f6c78fa8e02f2", "filename": "crates/ra_ide_api/src/snapshots/tests__inlay_hints.snap", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/201b344f2b0c9e84606115d135cd658d0a955d2c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__inlay_hints.snap", "raw_url": "https://github.com/rust-lang/rust/raw/201b344f2b0c9e84606115d135cd658d0a955d2c/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__inlay_hints.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__inlay_hints.snap?ref=201b344f2b0c9e84606115d135cd658d0a955d2c", "patch": "@@ -1,63 +0,0 @@\n----\n-created: \"2019-07-20T20:13:53.385368Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/inlay_hints.rs\n-expression: hints\n----\n-[\n-    InlayHint {\n-        range: [71; 75),\n-        text: \"let test = 54;\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [90; 94),\n-        text: \"let test = InnerStruct {};\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [121; 125),\n-        text: \"let test = OuterStruct {};\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [152; 156),\n-        text: \"let test = vec![222];\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [178; 186),\n-        text: \"let mut test = Vec::new();\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [229; 233),\n-        text: \"let test = test.into_iter().map(|i| i * i).collect::<Vec<_>>();\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [258; 259),\n-        text: \"i\",\n-        inlay_kind: ClosureParameter,\n-    },\n-    InlayHint {\n-        range: [297; 305),\n-        text: \"let mut test = 33;\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [417; 426),\n-        text: \"let i_squared = i * i;\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [500; 506),\n-        text: \"let (x, c) = (42, \\'a\\');\",\n-        inlay_kind: LetBinding,\n-    },\n-    InlayHint {\n-        range: [528; 532),\n-        text: \"let test = (42, \\'a\\');\",\n-        inlay_kind: LetBinding,\n-    },\n-]"}]}