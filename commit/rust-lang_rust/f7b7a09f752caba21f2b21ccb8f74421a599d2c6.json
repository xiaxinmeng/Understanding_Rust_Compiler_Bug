{"sha": "f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YjdhMDlmNzUyY2FiYTIxZjJiMjFjY2I4Zjc0NDIxYTU5OWQyYzY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-16T16:17:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-16T16:17:36Z"}, "message": "Merge #7696\n\n7696: Fix a few clippy::perf warnings r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "7ae74a1d80fa0d17d389e96de978ca63374420bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae74a1d80fa0d17d389e96de978ca63374420bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgK/AgCRBK7hj4Ov3rIwAAdHIIACX7gguiJ9HsanB+lvTRDWuT\nwCPMD7VAj6VjMgfoyw50M44ILK1i/8HgOINKArq0hLzHk8Nc2+2ooEAAr9gCUDvJ\n8N955CslS5EJEDZtvNKUXkXiw8OkwptT7mfgNwnQC3YG9Npw7NuDOYZNN9hx9zy+\nC+qaog/i8PdOohBll60ejFMBiq4Zrx0qQmYxKC+FyCBYz/RO2E5/w8FtJlYSVOCi\niAIes7CK9ALNS/DAw2uGUp20Qzgtl9jPoc0Pzh0cU3t6VTE5Mg79whM5brbfEWle\n2j+nK1z4J0gIqPOw5kgauSp/nfeOT1e7+sw0sPjLpXzGo4niQI6Fw96jb4awEOY=\n=15DR\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ae74a1d80fa0d17d389e96de978ca63374420bf\nparent cc49502ab47bcd20c90589226282b8f3c3df5190\nparent f9bb398cc50d2cad543cd5d2d135db5574ba3a6c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613492256 +0000\ncommitter GitHub <noreply@github.com> 1613492256 +0000\n\nMerge #7696\n\n7696: Fix a few clippy::perf warnings r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "html_url": "https://github.com/rust-lang/rust/commit/f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc49502ab47bcd20c90589226282b8f3c3df5190", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc49502ab47bcd20c90589226282b8f3c3df5190", "html_url": "https://github.com/rust-lang/rust/commit/cc49502ab47bcd20c90589226282b8f3c3df5190"}, {"sha": "f9bb398cc50d2cad543cd5d2d135db5574ba3a6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9bb398cc50d2cad543cd5d2d135db5574ba3a6c", "html_url": "https://github.com/rust-lang/rust/commit/f9bb398cc50d2cad543cd5d2d135db5574ba3a6c"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "7bdd3cca35046e3d3249cc87279042b1b154f7c7", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -232,7 +232,7 @@ fn rewrite_intra_doc_link(\n         let items = t.items(db);\n         if let Some(field_or_assoc_item) = items.iter().find_map(|assoc_item| {\n             if let Some(name) = assoc_item.name(db) {\n-                if link.to_string() == format!(\"{}::{}\", canonical_path, name) {\n+                if *link == format!(\"{}::{}\", canonical_path, name) {\n                     return Some(FieldOrAssocItem::AssocItem(*assoc_item));\n                 }\n             }"}, {"sha": "abed1969e37c524f13f4a4026167fe91ea80d77b", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -31,7 +31,7 @@ pub(crate) fn goto_definition(\n     let original_token = pick_best(file.token_at_offset(position.offset))?;\n     let token = sema.descend_into_macros(original_token.clone());\n     let parent = token.parent();\n-    if let Some(comment) = ast::Comment::cast(token.clone()) {\n+    if let Some(comment) = ast::Comment::cast(token) {\n         let nav = def_for_doc_comment(&sema, position, &comment)?.try_to_nav(db)?;\n         return Some(RangeInfo::new(original_token.text_range(), vec![nav]));\n     }"}, {"sha": "a4b320227930b7fde51c0cb806b8ec3452ed434a", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -342,8 +342,10 @@ fn rename_to_self(sema: &Semantics<RootDatabase>, local: hir::Local) -> RenameRe\n \n     // FIXME: reimplement this on the hir instead\n     // as of the time of this writing params in hir don't keep their names\n-    let fn_ast =\n-        fn_def.source(sema.db).ok_or(format_err!(\"Cannot rename non-param local to self\"))?.value;\n+    let fn_ast = fn_def\n+        .source(sema.db)\n+        .ok_or_else(|| format_err!(\"Cannot rename non-param local to self\"))?\n+        .value;\n \n     let first_param_range = fn_ast\n         .param_list()"}, {"sha": "f8f3fae3d081668ac81665b5c2a968a929c12f0c", "filename": "crates/ide/src/view_hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Fview_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide%2Fsrc%2Fview_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fview_hir.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -11,7 +11,7 @@ use syntax::{algo::find_node_at_offset, ast, AstNode};\n // | VS Code | **Rust Analyzer: View Hir**\n // |===\n pub(crate) fn view_hir(db: &RootDatabase, position: FilePosition) -> String {\n-    body_hir(db, position).unwrap_or(\"Not inside a function body\".to_string())\n+    body_hir(db, position).unwrap_or_else(|| \"Not inside a function body\".to_string())\n }\n \n fn body_hir(db: &RootDatabase, position: FilePosition) -> Option<String> {"}, {"sha": "22dd172f707823970e47fff806fee246e3192ce2", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -345,7 +345,7 @@ impl<'a> FindUsages<'a> {\n         for (file_id, search_range) in search_scope {\n             let text = sema.db.file_text(file_id);\n             let search_range =\n-                search_range.unwrap_or(TextRange::up_to(TextSize::of(text.as_str())));\n+                search_range.unwrap_or_else(|| TextRange::up_to(TextSize::of(text.as_str())));\n \n             let tree = Lazy::new(|| sema.parse(file_id).syntax().clone());\n "}, {"sha": "295b5f8eff0dc855a9bc0a894bd8eaf3d89cd2d6", "filename": "crates/project_model/src/build_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fproject_model%2Fsrc%2Fbuild_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Fproject_model%2Fsrc%2Fbuild_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fbuild_data.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -61,7 +61,7 @@ pub(crate) type BuildDataMap = FxHashMap<String, BuildData>;\n \n impl BuildDataCollector {\n     pub(crate) fn add_config(&mut self, workspace_root: &AbsPath, config: BuildDataConfig) {\n-        self.configs.insert(workspace_root.to_path_buf().clone(), config);\n+        self.configs.insert(workspace_root.to_path_buf(), config);\n     }\n \n     pub fn collect(&mut self, progress: &dyn Fn(String)) -> Result<BuildDataResult> {"}, {"sha": "04a77d677b671c789b1bce80ef06f76c600e5743", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -519,7 +519,7 @@ impl Config {\n                     .data\n                     .checkOnSave_target\n                     .clone()\n-                    .or(self.data.cargo_target.clone()),\n+                    .or_else(|| self.data.cargo_target.clone()),\n                 all_targets: self.data.checkOnSave_allTargets,\n                 no_default_features: self\n                     .data\n@@ -533,7 +533,7 @@ impl Config {\n                     .data\n                     .checkOnSave_features\n                     .clone()\n-                    .unwrap_or(self.data.cargo_features.clone()),\n+                    .unwrap_or_else(|| self.data.cargo_features.clone()),\n                 extra_args: self.data.checkOnSave_extraArgs.clone(),\n             },\n         };\n@@ -731,7 +731,7 @@ fn get_field<T: DeserializeOwned>(\n fn schema(fields: &[(&'static str, &'static str, &[&str], &str)]) -> serde_json::Value {\n     for ((f1, ..), (f2, ..)) in fields.iter().zip(&fields[1..]) {\n         fn key(f: &str) -> &str {\n-            f.splitn(2, \"_\").next().unwrap()\n+            f.splitn(2, '_').next().unwrap()\n         }\n         assert!(key(f1) <= key(f2), \"wrong field order: {:?} {:?}\", f1, f2);\n     }"}, {"sha": "b0ddb603dbe668e9e12505b638a86b17ee70ce03", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7b7a09f752caba21f2b21ccb8f74421a599d2c6/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=f7b7a09f752caba21f2b21ccb8f74421a599d2c6", "patch": "@@ -891,10 +891,10 @@ pub(crate) fn code_lens(\n \n             let id = lsp_types::TextDocumentIdentifier { uri: url.clone() };\n \n-            let doc_pos = lsp_types::TextDocumentPositionParams::new(id.clone(), position);\n+            let doc_pos = lsp_types::TextDocumentPositionParams::new(id, position);\n \n             let goto_params = lsp_types::request::GotoImplementationParams {\n-                text_document_position_params: doc_pos.clone(),\n+                text_document_position_params: doc_pos,\n                 work_done_progress_params: Default::default(),\n                 partial_result_params: Default::default(),\n             };"}]}