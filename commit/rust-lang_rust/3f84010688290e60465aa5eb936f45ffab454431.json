{"sha": "3f84010688290e60465aa5eb936f45ffab454431", "node_id": "C_kwDOAAsO6NoAKDNmODQwMTA2ODgyOTBlNjA0NjVhYTVlYjkzNmY0NWZmYWI0NTQ0MzE", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2021-10-30T10:02:20Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2021-11-02T09:54:58Z"}, "message": "Examine lifetimes in `OpaqueDef` bounds as well\n\nFix #7893.", "tree": {"sha": "4bd6c1d8e8e372214f5cfce0eeb22b7a5a141ea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd6c1d8e8e372214f5cfce0eeb22b7a5a141ea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f84010688290e60465aa5eb936f45ffab454431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f84010688290e60465aa5eb936f45ffab454431", "html_url": "https://github.com/rust-lang/rust/commit/3f84010688290e60465aa5eb936f45ffab454431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f84010688290e60465aa5eb936f45ffab454431/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08b7e87843c711aacba3a6336dd2422d05d44d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/08b7e87843c711aacba3a6336dd2422d05d44d7d", "html_url": "https://github.com/rust-lang/rust/commit/08b7e87843c711aacba3a6336dd2422d05d44d7d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "cb0b96e0652e53b1115b238a63713907c8a7fa04", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f84010688290e60465aa5eb936f45ffab454431/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f84010688290e60465aa5eb936f45ffab454431/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=3f84010688290e60465aa5eb936f45ffab454431", "patch": "@@ -378,11 +378,15 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n \n     fn visit_ty(&mut self, ty: &'tcx Ty<'_>) {\n         match ty.kind {\n-            TyKind::OpaqueDef(item, _) => {\n+            TyKind::OpaqueDef(item, bounds) => {\n                 let map = self.cx.tcx.hir();\n                 let item = map.item(item);\n                 walk_item(self, item);\n                 walk_ty(self, ty);\n+                self.lts.extend(bounds.iter().filter_map(|bound| match bound {\n+                    GenericArg::Lifetime(l) => Some(RefLt::Named(l.name.ident().name)),\n+                    _ => None,\n+                }));\n             },\n             TyKind::BareFn(&BareFnTy { decl, .. }) => {\n                 let mut sub_visitor = RefVisitor::new(self.cx);"}]}