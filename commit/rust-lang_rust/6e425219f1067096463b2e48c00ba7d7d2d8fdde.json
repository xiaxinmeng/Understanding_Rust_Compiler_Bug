{"sha": "6e425219f1067096463b2e48c00ba7d7d2d8fdde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNDI1MjE5ZjEwNjcwOTY0NjNiMmU0OGMwMGJhN2Q3ZDJkOGZkZGU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-09-15T17:28:52Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-09-19T18:52:55Z"}, "message": "Don't claim that locals in a function are declared outside of the\nfunction body", "tree": {"sha": "953844c1db79842fc70ffc876cb7e76e5e51f680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/953844c1db79842fc70ffc876cb7e76e5e51f680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e425219f1067096463b2e48c00ba7d7d2d8fdde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e425219f1067096463b2e48c00ba7d7d2d8fdde", "html_url": "https://github.com/rust-lang/rust/commit/6e425219f1067096463b2e48c00ba7d7d2d8fdde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e425219f1067096463b2e48c00ba7d7d2d8fdde/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcd0cd0adef72e2bc00016eccd97af2ebf70c12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd0cd0adef72e2bc00016eccd97af2ebf70c12c", "html_url": "https://github.com/rust-lang/rust/commit/fcd0cd0adef72e2bc00016eccd97af2ebf70c12c"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "b7000b254a7de42b2e250a300a7102afffe0d50d", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e425219f1067096463b2e48c00ba7d7d2d8fdde/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e425219f1067096463b2e48c00ba7d7d2d8fdde/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=6e425219f1067096463b2e48c00ba7d7d2d8fdde", "patch": "@@ -391,7 +391,11 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         let escapes_from = if infcx.tcx.is_closure(mir_def_id) { \"closure\" } else { \"function\" };\n \n-        if fr_name_and_span.is_none() && outlived_fr_name_and_span.is_none() {\n+        // Revert to the normal error in these cases.\n+        // Assignments aren't \"escapes\" in function items.\n+        if (fr_name_and_span.is_none() && outlived_fr_name_and_span.is_none())\n+            || (category == ConstraintCategory::Assignment && escapes_from == \"function\")\n+        {\n             return self.report_general_error(mir, infcx, mir_def_id,\n                                              fr, true, outlived_fr, false,\n                                              category, span, errors_buffer);"}, {"sha": "7558c5caa0e24b7a37269e151efbedec6620896f", "filename": "src/test/ui/regions/regions-infer-paramd-indirect.nll.stderr", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6e425219f1067096463b2e48c00ba7d7d2d8fdde/src%2Ftest%2Fui%2Fregions%2Fregions-infer-paramd-indirect.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e425219f1067096463b2e48c00ba7d7d2d8fdde/src%2Ftest%2Fui%2Fregions%2Fregions-infer-paramd-indirect.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-paramd-indirect.nll.stderr?ref=6e425219f1067096463b2e48c00ba7d7d2d8fdde", "patch": "@@ -1,12 +1,13 @@\n-error: borrowed data escapes outside of function\n+error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-paramd-indirect.rs:33:9\n    |\n+LL | impl<'a> set_f<'a> for c<'a> {\n+   |      -- lifetime `'a` defined here\n+...\n LL |     fn set_f_bad(&mut self, b: Box<b>) {\n-   |                  ---------  - `b` is a reference that is only valid in the function body\n-   |                  |\n-   |                  `self` is declared here, outside of the function body\n+   |                             - has type `std::boxed::Box<std::boxed::Box<&'1 isize>>`\n LL |         self.f = b;\n-   |         ^^^^^^ `b` escapes the function body here\n+   |         ^^^^^^ assignment requires that `'1` must outlive `'a`\n \n error: aborting due to previous error\n "}]}