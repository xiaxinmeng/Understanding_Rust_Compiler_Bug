{"sha": "72454f401e3547468819f4dfb67d23f4056aefe1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNDU0ZjQwMWUzNTQ3NDY4ODE5ZjRkZmI2N2QyM2Y0MDU2YWVmZTE=", "commit": {"author": {"name": "David Forsythe", "email": "dforsythe@gmail.com", "date": "2013-01-31T17:10:15Z"}, "committer": {"name": "David Forsythe", "email": "dforsythe@gmail.com", "date": "2013-01-31T17:10:15Z"}, "message": "add if to borrowed ptr tutorial", "tree": {"sha": "c3bcb3c0b9a1f5748e863e12ff2611a70169a1bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3bcb3c0b9a1f5748e863e12ff2611a70169a1bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72454f401e3547468819f4dfb67d23f4056aefe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72454f401e3547468819f4dfb67d23f4056aefe1", "html_url": "https://github.com/rust-lang/rust/commit/72454f401e3547468819f4dfb67d23f4056aefe1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72454f401e3547468819f4dfb67d23f4056aefe1/comments", "author": {"login": "dforsyth", "id": 72623, "node_id": "MDQ6VXNlcjcyNjIz", "avatar_url": "https://avatars.githubusercontent.com/u/72623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dforsyth", "html_url": "https://github.com/dforsyth", "followers_url": "https://api.github.com/users/dforsyth/followers", "following_url": "https://api.github.com/users/dforsyth/following{/other_user}", "gists_url": "https://api.github.com/users/dforsyth/gists{/gist_id}", "starred_url": "https://api.github.com/users/dforsyth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dforsyth/subscriptions", "organizations_url": "https://api.github.com/users/dforsyth/orgs", "repos_url": "https://api.github.com/users/dforsyth/repos", "events_url": "https://api.github.com/users/dforsyth/events{/privacy}", "received_events_url": "https://api.github.com/users/dforsyth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dforsyth", "id": 72623, "node_id": "MDQ6VXNlcjcyNjIz", "avatar_url": "https://avatars.githubusercontent.com/u/72623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dforsyth", "html_url": "https://github.com/dforsyth", "followers_url": "https://api.github.com/users/dforsyth/followers", "following_url": "https://api.github.com/users/dforsyth/following{/other_user}", "gists_url": "https://api.github.com/users/dforsyth/gists{/gist_id}", "starred_url": "https://api.github.com/users/dforsyth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dforsyth/subscriptions", "organizations_url": "https://api.github.com/users/dforsyth/orgs", "repos_url": "https://api.github.com/users/dforsyth/repos", "events_url": "https://api.github.com/users/dforsyth/events{/privacy}", "received_events_url": "https://api.github.com/users/dforsyth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b462e0765f02fd7bb0f2613240ae2489a47fee", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b462e0765f02fd7bb0f2613240ae2489a47fee", "html_url": "https://github.com/rust-lang/rust/commit/42b462e0765f02fd7bb0f2613240ae2489a47fee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "939051ca6058dcf3a56c63289a1d9746abcd4c74", "filename": "doc/tutorial-borrowed-ptr.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72454f401e3547468819f4dfb67d23f4056aefe1/doc%2Ftutorial-borrowed-ptr.md", "raw_url": "https://github.com/rust-lang/rust/raw/72454f401e3547468819f4dfb67d23f4056aefe1/doc%2Ftutorial-borrowed-ptr.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-borrowed-ptr.md?ref=72454f401e3547468819f4dfb67d23f4056aefe1", "patch": "@@ -50,7 +50,7 @@ Suppose we wanted to write a procedure that computed the distance between any\n two points, no matter where they were stored. For example, we might like to\n compute the distance between `on_the_stack` and `shared_box`, or between\n `shared_box` and `unique_box`. One option is to define a function that takes\n-two arguments of type `Point`\u2014that is, it takes the points by value. But we\n+two arguments of type `Point`\u2014that is, it takes the points by value. But if we\n define it this way, calling the function will cause the points to be\n copied. For points, this is probably not so bad, but often copies are\n expensive. Worse, if the data type contains mutable fields, copying can change"}]}