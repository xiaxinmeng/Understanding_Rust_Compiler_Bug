{"sha": "e701ae376a040d9f5614cda3be6fabffe884b432", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MDFhZTM3NmEwNDBkOWY1NjE0Y2RhM2JlNmZhYmZmZTg4NGI0MzI=", "commit": {"author": {"name": "Jan Verbeek", "email": "jan.verbeek@posteo.nl", "date": "2020-10-17T11:36:59Z"}, "committer": {"name": "Jan Verbeek", "email": "jan.verbeek@posteo.nl", "date": "2020-10-17T11:36:59Z"}, "message": "Suggest correct place to add `self` parameter when inside closure\n\nIt would incorrectly suggest adding it as a parameter to the closure instead of the\ncontaining function.", "tree": {"sha": "e1a396230ff695c232c17614df18e8e8762788a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1a396230ff695c232c17614df18e8e8762788a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e701ae376a040d9f5614cda3be6fabffe884b432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e701ae376a040d9f5614cda3be6fabffe884b432", "html_url": "https://github.com/rust-lang/rust/commit/e701ae376a040d9f5614cda3be6fabffe884b432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e701ae376a040d9f5614cda3be6fabffe884b432/comments", "author": {"login": "blyxxyz", "id": 15526524, "node_id": "MDQ6VXNlcjE1NTI2NTI0", "avatar_url": "https://avatars.githubusercontent.com/u/15526524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxxyz", "html_url": "https://github.com/blyxxyz", "followers_url": "https://api.github.com/users/blyxxyz/followers", "following_url": "https://api.github.com/users/blyxxyz/following{/other_user}", "gists_url": "https://api.github.com/users/blyxxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxxyz/subscriptions", "organizations_url": "https://api.github.com/users/blyxxyz/orgs", "repos_url": "https://api.github.com/users/blyxxyz/repos", "events_url": "https://api.github.com/users/blyxxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxxyz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxxyz", "id": 15526524, "node_id": "MDQ6VXNlcjE1NTI2NTI0", "avatar_url": "https://avatars.githubusercontent.com/u/15526524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxxyz", "html_url": "https://github.com/blyxxyz", "followers_url": "https://api.github.com/users/blyxxyz/followers", "following_url": "https://api.github.com/users/blyxxyz/following{/other_user}", "gists_url": "https://api.github.com/users/blyxxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxxyz/subscriptions", "organizations_url": "https://api.github.com/users/blyxxyz/orgs", "repos_url": "https://api.github.com/users/blyxxyz/repos", "events_url": "https://api.github.com/users/blyxxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxxyz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03687f8ffaf5ff03f6bedbe77752b9f930c7efeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/03687f8ffaf5ff03f6bedbe77752b9f930c7efeb", "html_url": "https://github.com/rust-lang/rust/commit/03687f8ffaf5ff03f6bedbe77752b9f930c7efeb"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "7517ab66170a2943943d7fc0aa815f52337efc34", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e701ae376a040d9f5614cda3be6fabffe884b432/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701ae376a040d9f5614cda3be6fabffe884b432/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=e701ae376a040d9f5614cda3be6fabffe884b432", "patch": "@@ -369,7 +369,7 @@ struct DiagnosticMetadata<'ast> {\n     /// param.\n     currently_processing_generics: bool,\n \n-    /// The current enclosing function (used for better errors).\n+    /// The current enclosing (non-closure) function (used for better errors).\n     current_function: Option<(FnKind<'ast>, Span)>,\n \n     /// A list of labels as of yet unused. Labels will be removed from this map when\n@@ -515,8 +515,10 @@ impl<'a: 'ast, 'ast> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast> {\n             FnKind::Fn(FnCtxt::Assoc(_), ..) => NormalRibKind,\n             FnKind::Closure(..) => ClosureOrAsyncRibKind,\n         };\n-        let previous_value =\n-            replace(&mut self.diagnostic_metadata.current_function, Some((fn_kind, sp)));\n+        let previous_value = self.diagnostic_metadata.current_function;\n+        if matches!(fn_kind, FnKind::Fn(..)) {\n+            self.diagnostic_metadata.current_function = Some((fn_kind, sp));\n+        }\n         debug!(\"(resolving function) entering function\");\n         let declaration = fn_kind.decl();\n "}, {"sha": "6e531942cad523693c8e89c70cdbb988c05f6111", "filename": "src/test/ui/error-codes/E0424.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Ferror-codes%2FE0424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Ferror-codes%2FE0424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0424.rs?ref=e701ae376a040d9f5614cda3be6fabffe884b432", "patch": "@@ -10,6 +10,10 @@ impl Foo {\n     fn baz(_: i32) {\n         self.bar(); //~ ERROR E0424\n     }\n+\n+    fn qux() {\n+        let _ = || self.bar(); //~ ERROR E0424\n+    }\n }\n \n fn main () {"}, {"sha": "20b7a4cb6ece6a52ca503fb1265497ffb15dac37", "filename": "src/test/ui/error-codes/E0424.stderr", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Ferror-codes%2FE0424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Ferror-codes%2FE0424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0424.stderr?ref=e701ae376a040d9f5614cda3be6fabffe884b432", "patch": "@@ -24,14 +24,27 @@ help: add a `self` receiver parameter to make the associated `fn` a method\n LL |     fn baz(&self, _: i32) {\n    |            ^^^^^^\n \n+error[E0424]: expected value, found module `self`\n+  --> $DIR/E0424.rs:15:20\n+   |\n+LL |     fn qux() {\n+   |        --- this function doesn't have a `self` parameter\n+LL |         let _ = || self.bar();\n+   |                    ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+   |\n+help: add a `self` receiver parameter to make the associated `fn` a method\n+   |\n+LL |     fn qux(&self) {\n+   |            ^^^^^\n+\n error[E0424]: expected unit struct, unit variant or constant, found module `self`\n-  --> $DIR/E0424.rs:16:9\n+  --> $DIR/E0424.rs:20:9\n    |\n LL | fn main () {\n    |    ---- this function can't have a `self` parameter\n LL |     let self = \"self\";\n    |         ^^^^ `self` value is a keyword and may not be bound to variables or shadowed\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0424`."}, {"sha": "b5abccb4b19f9c7a65de2c941b6612c2818dd039", "filename": "src/test/ui/issues/issue-5099.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Fissues%2Fissue-5099.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Fissues%2Fissue-5099.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5099.rs?ref=e701ae376a040d9f5614cda3be6fabffe884b432", "patch": "@@ -5,6 +5,9 @@ trait B <A> {\n     fn b(x: i32) {\n         this.b(x); //~ ERROR cannot find value `this` in this scope\n     }\n+    fn c() {\n+        let _ = || this.a; //~ ERROR cannot find value `this` in this scope\n+    }\n }\n \n fn main() {}"}, {"sha": "b39c4a9f272d02154f451d80d83b0f8727fa12b2", "filename": "src/test/ui/issues/issue-5099.stderr", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Fissues%2Fissue-5099.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e701ae376a040d9f5614cda3be6fabffe884b432/src%2Ftest%2Fui%2Fissues%2Fissue-5099.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5099.stderr?ref=e701ae376a040d9f5614cda3be6fabffe884b432", "patch": "@@ -28,6 +28,21 @@ help: if you meant to use `self`, you are also missing a `self` receiver argumen\n LL |     fn b(&self, x: i32) {\n    |          ^^^^^^\n \n-error: aborting due to 2 previous errors\n+error[E0425]: cannot find value `this` in this scope\n+  --> $DIR/issue-5099.rs:9:20\n+   |\n+LL |         let _ = || this.a;\n+   |                    ^^^^ not found in this scope\n+   |\n+help: you might have meant to use `self` here instead\n+   |\n+LL |         let _ = || self.a;\n+   |                    ^^^^\n+help: if you meant to use `self`, you are also missing a `self` receiver argument\n+   |\n+LL |     fn c(&self) {\n+   |          ^^^^^\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}]}