{"sha": "5ff45dc89efdaabe903e5bff4dc1c170def7b325", "node_id": "C_kwDOAAsO6NoAKDVmZjQ1ZGM4OWVmZGFhYmU5MDNlNWJmZjRkYzFjMTcwZGVmN2IzMjU", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-22T19:53:34Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-23T11:55:43Z"}, "message": "Move InferCtxtExt to rustc_trait_selection", "tree": {"sha": "1e19762cb2fe6a622c0ac5f00cf235a295c67500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e19762cb2fe6a622c0ac5f00cf235a295c67500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ff45dc89efdaabe903e5bff4dc1c170def7b325", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmMEwD8ACgkQgTGiTgx5\n76+u5g/9E2RIvjNIQBDhkb31KWXeiZn03YfEbtQdv7VQtfftyOoAaxPrn98nBxfR\nEWGB40C0ApjEYPjfIQhmRQmgZRftQR8v6QudBurv9KH8OdL9BLNR8/vidW07X8jx\nWWdnGR/z4NCHAUZp2YnpBat7zg86PHlIztra7rQd/hScNk1X728xMjQoVXvCl2R1\nwHTpiQOSer/m+rp0IGSgtYG9zo/igM+P4UbUlBIO7+KDMaNcB+6dvBYdmyPIn3Gx\nqLI4TqrdFM/7xIJtqEJSho3e/KWAng/dTy3CA+V8E0wg5t/Uhu8Fh+G45guNmVH5\nQwbpyfC4paErfqv7AZZ8gA/uLd5CDRkxDFOFhuQJ1obX8zXYLLAH2vGFb2VS+MDb\nr9apHr0M+kKkEeu+oMeKMEdMMkcIAD6O7412GVuTj0oX2TCpYPanp5+75i8KFJBY\nf55BW5nl2/f5SzvaDwWwQDi+MIQndWhqjt9RQYzjxGo2nXmXaAArojRb9RFQQUES\n5P4aTjQEUEO2wwpnvIBqk71KM46tk4pkro8Apv0ANt1j4KuLwh4OgW9X0rFBiod7\nrWDReSkn2NPMkqdsSoZ8FspO2nb6PZc/nIKRj9iz970lS2As+DAy89MwFHSklWYe\nKPVy2hqqOLHbKGICI6JvMnZFu/LGPyiX0e24ljSLDgQ3PMU2GKw=\n=XXD/\n-----END PGP SIGNATURE-----", "payload": "tree 1e19762cb2fe6a622c0ac5f00cf235a295c67500\nparent 1cff5642037b83ce1239a624bbe617a9aa0d59b1\nauthor Santiago Pastorino <spastorino@gmail.com> 1661198014 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1661255743 -0300\n\nMove InferCtxtExt to rustc_trait_selection\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff45dc89efdaabe903e5bff4dc1c170def7b325", "html_url": "https://github.com/rust-lang/rust/commit/5ff45dc89efdaabe903e5bff4dc1c170def7b325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ff45dc89efdaabe903e5bff4dc1c170def7b325/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cff5642037b83ce1239a624bbe617a9aa0d59b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cff5642037b83ce1239a624bbe617a9aa0d59b1", "html_url": "https://github.com/rust-lang/rust/commit/1cff5642037b83ce1239a624bbe617a9aa0d59b1"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "ce48d4c99e9de1805c8c466c4459cdd945a0ad0d", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -20,6 +20,7 @@\n #![feature(let_else)]\n #![feature(if_let_guard)]\n #![feature(never_type)]\n+#![feature(type_alias_impl_trait)]\n #![recursion_limit = \"512\"] // For rustdoc\n \n #[macro_use]"}, {"sha": "86471eeb070e056049943d24ae5bd5ffb866c674", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -13,6 +13,7 @@ mod fulfill;\n pub mod misc;\n mod object_safety;\n mod on_unimplemented;\n+pub mod outlives_bounds;\n mod project;\n pub mod query;\n pub(crate) mod relationships;"}, {"sha": "a4b540182280b601b0115adfa63090fba8035d60", "filename": "compiler/rustc_trait_selection/src/traits/outlives_bounds.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -1,11 +1,11 @@\n+use crate::infer::InferCtxt;\n+use crate::traits::query::type_op::{self, TypeOp, TypeOpOutput};\n+use crate::traits::query::NoSolution;\n+use crate::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::HirId;\n use rustc_middle::ty::{self, ParamEnv, Ty};\n-use rustc_trait_selection::infer::InferCtxt;\n-use rustc_trait_selection::traits::query::type_op::{self, TypeOp, TypeOpOutput};\n-use rustc_trait_selection::traits::query::NoSolution;\n-use rustc_trait_selection::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n \n pub use rustc_middle::traits::query::OutlivesBound;\n ", "previous_filename": "compiler/rustc_typeck/src/outlives/outlives_bounds.rs"}, {"sha": "af5e5622fb38173b5353a2731103bb244f90a75b", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -1,6 +1,5 @@\n use super::potentially_plural_count;\n use crate::errors::LifetimesOrBoundsMismatchOnTrait;\n-use crate::outlives::outlives_bounds::InferCtxtExt as _;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticId, ErrorGuaranteed};\n use rustc_hir as hir;\n@@ -17,6 +16,7 @@ use rustc_middle::ty::{self, DefIdTree};\n use rustc_middle::ty::{GenericParamDefKind, ToPredicate, TyCtxt};\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::outlives_bounds::InferCtxtExt as _;\n use rustc_trait_selection::traits::{\n     self, ObligationCause, ObligationCauseCode, ObligationCtxt, Reveal,\n };"}, {"sha": "ce42647c837a54844f8f621668c376ad1e149862", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -1,5 +1,4 @@\n use crate::constrained_generic_params::{identify_constrained_generic_params, Parameter};\n-use crate::outlives::outlives_bounds::InferCtxtExt as _;\n use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, ErrorGuaranteed};\n@@ -22,6 +21,7 @@ use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_trait_selection::autoderef::Autoderef;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::outlives_bounds::InferCtxtExt as _;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt as _;\n use rustc_trait_selection::traits::{\n     self, ObligationCause, ObligationCauseCode, ObligationCtxt, WellFormedLoc,"}, {"sha": "2741d9f776ce2bd4313a80e1801ce1ee119c5aed", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -67,7 +67,6 @@\n \n use crate::constrained_generic_params as cgp;\n use crate::errors::SubstsOnOverriddenImpl;\n-use crate::outlives::outlives_bounds::InferCtxtExt as _;\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::{DefId, LocalDefId};\n@@ -79,6 +78,7 @@ use rustc_middle::ty::trait_def::TraitSpecializationKind;\n use rustc_middle::ty::{self, TyCtxt, TypeVisitable};\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n+use rustc_trait_selection::traits::outlives_bounds::InferCtxtExt as _;\n use rustc_trait_selection::traits::{self, translate_substs, wf, ObligationCtxt};\n \n pub(super) fn check_min_specialization(tcx: TyCtxt<'_>, impl_def_id: LocalDefId) {"}, {"sha": "e50c267659e3f3b5a754e80966f59d2ea23eb75c", "filename": "compiler/rustc_typeck/src/outlives/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff45dc89efdaabe903e5bff4dc1c170def7b325/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fmod.rs?ref=5ff45dc89efdaabe903e5bff4dc1c170def7b325", "patch": "@@ -9,7 +9,6 @@ use rustc_span::Span;\n \n mod explicit;\n mod implicit_infer;\n-pub(crate) mod outlives_bounds;\n /// Code to write unit test for outlives.\n pub mod test;\n mod utils;"}]}