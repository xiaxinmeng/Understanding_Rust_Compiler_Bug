{"sha": "dba35d2be72f4b78343d1a0f0b4737306f310672", "node_id": "C_kwDOAAsO6NoAKGRiYTM1ZDJiZTcyZjRiNzgzNDNkMWEwZjBiNDczNzMwNmYzMTA2NzI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-02T14:10:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-02T14:10:46Z"}, "message": "Auto merge of #2530 - oli-obk:rustup, r=RalfJung\n\nRustup\n\nBreakage issue: https://github.com/rust-lang/rust/issues/101324", "tree": {"sha": "a234609e1b8990b7c793fd5db58a687b722110c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a234609e1b8990b7c793fd5db58a687b722110c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dba35d2be72f4b78343d1a0f0b4737306f310672", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dba35d2be72f4b78343d1a0f0b4737306f310672", "html_url": "https://github.com/rust-lang/rust/commit/dba35d2be72f4b78343d1a0f0b4737306f310672", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dba35d2be72f4b78343d1a0f0b4737306f310672/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c24c4c37513f77c6875fec0eb25a887622739f", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c24c4c37513f77c6875fec0eb25a887622739f", "html_url": "https://github.com/rust-lang/rust/commit/92c24c4c37513f77c6875fec0eb25a887622739f"}, {"sha": "169569cccb0882d3e94c82fc89ab34a34dda0604", "url": "https://api.github.com/repos/rust-lang/rust/commits/169569cccb0882d3e94c82fc89ab34a34dda0604", "html_url": "https://github.com/rust-lang/rust/commit/169569cccb0882d3e94c82fc89ab34a34dda0604"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c27bb1863175896dd9e64c3f52107a459290af2c", "filename": "cargo-miri/src/setup.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dba35d2be72f4b78343d1a0f0b4737306f310672/cargo-miri%2Fsrc%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dba35d2be72f4b78343d1a0f0b4737306f310672/cargo-miri%2Fsrc%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fsrc%2Fsetup.rs?ref=dba35d2be72f4b78343d1a0f0b4737306f310672", "patch": "@@ -76,7 +76,7 @@ pub fn setup(subcommand: &MiriCommand, host: &str, target: &str) {\n             show_error!(\"xargo is too old; please upgrade to the latest version\")\n         }\n         let mut cmd = cargo();\n-        cmd.args(&[\"install\", \"xargo\"]);\n+        cmd.args([\"install\", \"xargo\"]);\n         ask_to_run(cmd, ask_user, \"install a recent enough xargo\");\n     }\n \n@@ -93,7 +93,7 @@ pub fn setup(subcommand: &MiriCommand, host: &str, target: &str) {\n         None => {\n             // Check for `rust-src` rustup component.\n             let output = miri_for_host()\n-                .args(&[\"--print\", \"sysroot\"])\n+                .args([\"--print\", \"sysroot\"])\n                 .output()\n                 .expect(\"failed to determine sysroot\");\n             if !output.status.success() {\n@@ -110,7 +110,7 @@ pub fn setup(subcommand: &MiriCommand, host: &str, target: &str) {\n             if !rustup_src.join(\"std\").join(\"Cargo.toml\").exists() {\n                 // Ask the user to install the `rust-src` component, and use that.\n                 let mut cmd = Command::new(\"rustup\");\n-                cmd.args(&[\"component\", \"add\", \"rust-src\"]);\n+                cmd.args([\"component\", \"add\", \"rust-src\"]);\n                 ask_to_run(\n                     cmd,\n                     ask_user,\n@@ -136,7 +136,7 @@ pub fn setup(subcommand: &MiriCommand, host: &str, target: &str) {\n     let dirs = directories::ProjectDirs::from(\"org\", \"rust-lang\", \"miri\").unwrap();\n     let dir = dirs.cache_dir();\n     if !dir.exists() {\n-        fs::create_dir_all(&dir).unwrap();\n+        fs::create_dir_all(dir).unwrap();\n     }\n     // The interesting bit: Xargo.toml (only needs content if we actually need std)\n     let xargo_toml = if std::env::var_os(\"MIRI_NO_STD\").is_some() {\n@@ -178,8 +178,8 @@ path = \"lib.rs\"\n     // Now invoke xargo.\n     let mut command = xargo_check();\n     command.arg(\"check\").arg(\"-q\");\n-    command.current_dir(&dir);\n-    command.env(\"XARGO_HOME\", &dir);\n+    command.current_dir(dir);\n+    command.env(\"XARGO_HOME\", dir);\n     command.env(\"XARGO_RUST_SRC\", &rust_src);\n     // We always need to set a target so rustc bootstrap can tell apart host from target crates.\n     command.arg(\"--target\").arg(target);"}, {"sha": "0b9f9bba0ad4b144d79bfe1e17eb97c5214cbf2e", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dba35d2be72f4b78343d1a0f0b4737306f310672/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/dba35d2be72f4b78343d1a0f0b4737306f310672/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=dba35d2be72f4b78343d1a0f0b4737306f310672", "patch": "@@ -1 +1 @@\n-4fd4de7ea358ad6fc28c5780533ea8ccc09e1006\n+9353538c7bea6edb245457712cec720305c4576e"}, {"sha": "3da33fee4c0edcfd7b095a5221db443259b87ebd", "filename": "tests/pass/concurrency/sync_nopreempt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dba35d2be72f4b78343d1a0f0b4737306f310672/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dba35d2be72f4b78343d1a0f0b4737306f310672/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs?ref=dba35d2be72f4b78343d1a0f0b4737306f310672", "patch": "@@ -16,7 +16,7 @@ fn check_conditional_variables_notify_all() {\n                 let (lock, cvar) = &*pair2;\n                 let guard = lock.lock().unwrap();\n                 // Block waiting on the conditional variable.\n-                let _ = cvar.wait(guard).unwrap();\n+                let _guard = cvar.wait(guard).unwrap();\n             })\n         })\n         .inspect(|_| {"}]}