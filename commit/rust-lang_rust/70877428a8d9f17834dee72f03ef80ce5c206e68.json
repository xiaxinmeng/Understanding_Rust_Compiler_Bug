{"sha": "70877428a8d9f17834dee72f03ef80ce5c206e68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwODc3NDI4YThkOWYxNzgzNGRlZTcyZjAzZWY4MGNlNWMyMDZlNjg=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-11T13:57:50Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-27T14:29:47Z"}, "message": "Pass crate environment to proc macros", "tree": {"sha": "60202937d17883cd862b1c788e6bde495a16dd2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60202937d17883cd862b1c788e6bde495a16dd2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70877428a8d9f17834dee72f03ef80ce5c206e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70877428a8d9f17834dee72f03ef80ce5c206e68", "html_url": "https://github.com/rust-lang/rust/commit/70877428a8d9f17834dee72f03ef80ce5c206e68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70877428a8d9f17834dee72f03ef80ce5c206e68/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "798968e1e3a7d9eafa0c27c857571cdc347c34a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/798968e1e3a7d9eafa0c27c857571cdc347c34a7", "html_url": "https://github.com/rust-lang/rust/commit/798968e1e3a7d9eafa0c27c857571cdc347c34a7"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "9567bcc424de40d08e1e62f85faa10be7644f73f", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=70877428a8d9f17834dee72f03ef80ce5c206e68", "patch": "@@ -151,8 +151,12 @@ pub enum ProcMacroKind {\n }\n \n pub trait ProcMacroExpander: fmt::Debug + Send + Sync + RefUnwindSafe {\n-    fn expand(&self, subtree: &Subtree, attrs: Option<&Subtree>)\n-        -> Result<Subtree, ExpansionError>;\n+    fn expand(\n+        &self,\n+        subtree: &Subtree,\n+        attrs: Option<&Subtree>,\n+        env: &Env,\n+    ) -> Result<Subtree, ExpansionError>;\n }\n \n #[derive(Debug, Clone)]\n@@ -418,6 +422,10 @@ impl Env {\n     pub fn get(&self, env: &str) -> Option<String> {\n         self.entries.get(env).cloned()\n     }\n+\n+    pub fn iter(&self) -> impl Iterator<Item = (&str, &str)> {\n+        self.entries.iter().map(|(k, v)| (k.as_str(), v.as_str()))\n+    }\n }\n \n #[derive(Debug)]"}, {"sha": "06f0a3ed9cc423f76b86298523bb0137f78c2489", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=70877428a8d9f17834dee72f03ef80ce5c206e68", "patch": "@@ -271,7 +271,7 @@ fn expand_proc_macro(\n         _ => unreachable!(),\n     };\n \n-    expander.expand(db, lazy_id, &macro_arg.0)\n+    expander.expand(db, loc.krate, &macro_arg.0)\n }\n \n fn parse_or_expand(db: &dyn AstDatabase, file_id: HirFileId) -> Option<SyntaxNode> {"}, {"sha": "7c77f6ce0a36cdefebaefc81dda2496ac4eb31d1", "filename": "crates/hir_expand/src/proc_macro.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs?ref=70877428a8d9f17834dee72f03ef80ce5c206e68", "patch": "@@ -1,6 +1,6 @@\n //! Proc Macro Expander stub\n \n-use crate::{db::AstDatabase, LazyMacroId};\n+use crate::db::AstDatabase;\n use base_db::{CrateId, ProcMacroId};\n use tt::buffer::{Cursor, TokenBuffer};\n \n@@ -32,7 +32,7 @@ impl ProcMacroExpander {\n     pub fn expand(\n         self,\n         db: &dyn AstDatabase,\n-        _id: LazyMacroId,\n+        calling_crate: CrateId,\n         tt: &tt::Subtree,\n     ) -> Result<tt::Subtree, mbe::ExpandError> {\n         match self.proc_macro_id {\n@@ -47,7 +47,10 @@ impl ProcMacroExpander {\n                 let tt = remove_derive_attrs(tt)\n                     .ok_or_else(|| err!(\"Fail to remove derive for custom derive\"))?;\n \n-                proc_macro.expander.expand(&tt, None).map_err(mbe::ExpandError::from)\n+                // Proc macros have access to the environment variables of the invoking crate.\n+                let env = &krate_graph[calling_crate].env;\n+\n+                proc_macro.expander.expand(&tt, None, &env).map_err(mbe::ExpandError::from)\n             }\n             None => Err(mbe::ExpandError::UnresolvedProcMacro),\n         }"}, {"sha": "2ea456fb0960b37aadee0d78162950ed73788e46", "filename": "crates/proc_macro_api/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fproc_macro_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fproc_macro_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Flib.rs?ref=70877428a8d9f17834dee72f03ef80ce5c206e68", "patch": "@@ -16,7 +16,7 @@ use std::{\n     sync::Arc,\n };\n \n-use base_db::ProcMacro;\n+use base_db::{Env, ProcMacro};\n use tt::{SmolStr, Subtree};\n \n use crate::process::{ProcMacroProcessSrv, ProcMacroProcessThread};\n@@ -44,12 +44,14 @@ impl base_db::ProcMacroExpander for ProcMacroProcessExpander {\n         &self,\n         subtree: &Subtree,\n         attr: Option<&Subtree>,\n+        env: &Env,\n     ) -> Result<Subtree, tt::ExpansionError> {\n         let task = ExpansionTask {\n             macro_body: subtree.clone(),\n             macro_name: self.name.to_string(),\n             attributes: attr.cloned(),\n             lib: self.dylib_path.to_path_buf(),\n+            env: env.iter().map(|(k, v)| (k.to_string(), v.to_string())).collect(),\n         };\n \n         let result: ExpansionResult = self.process.send_task(msg::Request::ExpansionMacro(task))?;"}, {"sha": "cf830b59f17834abfaff59d1c179822a79e23071", "filename": "crates/proc_macro_api/src/rpc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs?ref=70877428a8d9f17834dee72f03ef80ce5c206e68", "patch": "@@ -51,6 +51,9 @@ pub struct ExpansionTask {\n     pub attributes: Option<Subtree>,\n \n     pub lib: PathBuf,\n+\n+    /// Environment variables to set during macro expansion.\n+    pub env: Vec<(String, String)>,\n }\n \n #[derive(Clone, Eq, PartialEq, Debug, Default, Serialize, Deserialize)]\n@@ -251,6 +254,7 @@ mod tests {\n             macro_name: Default::default(),\n             attributes: None,\n             lib: Default::default(),\n+            env: Default::default(),\n         };\n \n         let json = serde_json::to_string(&task).unwrap();"}, {"sha": "d4f04ee0696780432fc755680fc47fd54f408c50", "filename": "crates/proc_macro_srv/src/lib.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fproc_macro_srv%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70877428a8d9f17834dee72f03ef80ce5c206e68/crates%2Fproc_macro_srv%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Flib.rs?ref=70877428a8d9f17834dee72f03ef80ce5c206e68", "patch": "@@ -24,7 +24,7 @@ use proc_macro::bridge::client::TokenStream;\n use proc_macro_api::{ExpansionResult, ExpansionTask, ListMacrosResult, ListMacrosTask};\n use std::{\n     collections::{hash_map::Entry, HashMap},\n-    fs,\n+    env, fs,\n     path::{Path, PathBuf},\n     time::SystemTime,\n };\n@@ -37,7 +37,23 @@ pub(crate) struct ProcMacroSrv {\n impl ProcMacroSrv {\n     pub fn expand(&mut self, task: &ExpansionTask) -> Result<ExpansionResult, String> {\n         let expander = self.expander(&task.lib)?;\n-        match expander.expand(&task.macro_name, &task.macro_body, task.attributes.as_ref()) {\n+\n+        let mut prev_env = HashMap::new();\n+        for (k, v) in &task.env {\n+            prev_env.insert(k.as_str(), env::var_os(k));\n+            env::set_var(k, v);\n+        }\n+\n+        let result = expander.expand(&task.macro_name, &task.macro_body, task.attributes.as_ref());\n+\n+        for (k, _) in &task.env {\n+            match &prev_env[k.as_str()] {\n+                Some(v) => env::set_var(k, v),\n+                None => env::remove_var(k),\n+            }\n+        }\n+\n+        match result {\n             Ok(expansion) => Ok(ExpansionResult { expansion }),\n             Err(msg) => {\n                 let msg = msg.as_str().unwrap_or(\"<unknown error>\");"}]}