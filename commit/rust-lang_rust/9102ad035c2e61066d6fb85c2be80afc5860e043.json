{"sha": "9102ad035c2e61066d6fb85c2be80afc5860e043", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMDJhZDAzNWMyZTYxMDY2ZDZmYjg1YzJiZTgwYWZjNTg2MGUwNDM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-25T19:53:15Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-27T17:28:37Z"}, "message": "debuginfo: Added more tests for region pointers (tuples, structs).", "tree": {"sha": "a8e5f4f1317d9c93db245ddecd0ec6fd6cbb6da6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e5f4f1317d9c93db245ddecd0ec6fd6cbb6da6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9102ad035c2e61066d6fb85c2be80afc5860e043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9102ad035c2e61066d6fb85c2be80afc5860e043", "html_url": "https://github.com/rust-lang/rust/commit/9102ad035c2e61066d6fb85c2be80afc5860e043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9102ad035c2e61066d6fb85c2be80afc5860e043/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a3094159fc50c062e55e76379b402b4a5d5270d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3094159fc50c062e55e76379b402b4a5d5270d", "html_url": "https://github.com/rust-lang/rust/commit/6a3094159fc50c062e55e76379b402b4a5d5270d"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "f00872c00b0e49d4ff994d47d481f73608f6133a", "filename": "src/test/debug-info/reference-to-struct.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/9102ad035c2e61066d6fb85c2be80afc5860e043/src%2Ftest%2Fdebug-info%2Freference-to-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9102ad035c2e61066d6fb85c2be80afc5860e043/src%2Ftest%2Fdebug-info%2Freference-to-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Freference-to-struct.rs?ref=9102ad035c2e61066d6fb85c2be80afc5860e043", "patch": "@@ -0,0 +1,78 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// GDB doesn't know about UTF-32 character encoding and will print a rust char as only its numerical\n+// value.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+\n+// debugger:print *stack_val_ref\n+// check:$1 = {x = 10, y = 23.5}\n+\n+// debugger:print *stack_val_interior_ref_1\n+// check:$2 = 10\n+\n+// debugger:print *stack_val_interior_ref_2\n+// check:$3 = 23.5\n+\n+// debugger:print *ref_to_unnamed\n+// check:$4 = {x = 11, y = 24.5}\n+\n+// debugger:print *managed_val_ref\n+// check:$5 = {x = 12, y = 25.5}\n+\n+// debugger:print *managed_val_interior_ref_1\n+// check:$6 = 12\n+\n+// debugger:print *managed_val_interior_ref_2\n+// check:$7 = 25.5\n+\n+// debugger:print *unique_val_ref\n+// check:$8 = {x = 13, y = 26.5}\n+\n+// debugger:print *unique_val_interior_ref_1\n+// check:$9 = 13\n+\n+// debugger:print *unique_val_interior_ref_2\n+// check:$10 = 26.5\n+\n+\n+\n+struct SomeStruct {\n+    x: int,\n+    y: f64\n+}\n+\n+fn main() {\n+    let stack_val: SomeStruct = SomeStruct { x: 10, y: 23.5 };\n+    let stack_val_ref : &SomeStruct = &stack_val;\n+    let stack_val_interior_ref_1 : &int = &stack_val.x;\n+    let stack_val_interior_ref_2 : &f64 = &stack_val.y;\n+    let ref_to_unnamed : &SomeStruct = &SomeStruct { x: 11, y: 24.5 };\n+\n+    let managed_val = @SomeStruct { x: 12, y: 25.5 };\n+    let managed_val_ref : &SomeStruct = managed_val;\n+    let managed_val_interior_ref_1 : &int = &managed_val.x;\n+    let managed_val_interior_ref_2 : &f64 = &managed_val.y;\n+\n+    let unique_val = ~SomeStruct { x: 13, y: 26.5 };\n+    let unique_val_ref : &SomeStruct = unique_val;\n+    let unique_val_interior_ref_1 : &int = &unique_val.x;\n+    let unique_val_interior_ref_2 : &f64 = &unique_val.y;\n+\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}, {"sha": "86d02185bdae7839a68b35c086d15db4d2a7ac8e", "filename": "src/test/debug-info/reference-to-tuple.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/9102ad035c2e61066d6fb85c2be80afc5860e043/src%2Ftest%2Fdebug-info%2Freference-to-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9102ad035c2e61066d6fb85c2be80afc5860e043/src%2Ftest%2Fdebug-info%2Freference-to-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Freference-to-tuple.rs?ref=9102ad035c2e61066d6fb85c2be80afc5860e043", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// GDB doesn't know about UTF-32 character encoding and will print a rust char as only its numerical\n+// value.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+\n+// debugger:print *stack_val_ref\n+// check:$1 = {-14, -19}\n+\n+// debugger:print *ref_to_unnamed\n+// check:$2 = {-15, -20}\n+\n+// debugger:print *managed_val_ref\n+// check:$3 = {-16, -21}\n+\n+// debugger:print *unique_val_ref\n+// check:$4 = {-17, -22}\n+\n+fn main() {\n+    let stack_val: (i16, f32) = (-14, -19f32);\n+    let stack_val_ref : &(i16, f32) = &stack_val;\n+    let ref_to_unnamed : &(i16, f32) = &(-15, -20f32);\n+\n+    let managed_val : @(i16, f32) = @(-16, -21f32);\n+    let managed_val_ref : &(i16, f32) = managed_val;\n+\n+    let unique_val: ~(i16, f32) = ~(-17, -22f32);\n+    let unique_val_ref : &(i16, f32) = unique_val;\n+\n+    zzz();\n+}\n+\n+fn zzz() {()}\n\\ No newline at end of file"}]}