{"sha": "032c4deefee8afcb55fb4ce0e82090776d297b50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMmM0ZGVlZmVlOGFmY2I1NWZiNGNlMGU4MjA5MDc3NmQyOTdiNTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-13T00:00:25Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-13T00:00:44Z"}, "message": "stdlib: Implement ivec::count", "tree": {"sha": "8c7c563e8af1164e2a01f77708e48b95aab6f2b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c7c563e8af1164e2a01f77708e48b95aab6f2b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/032c4deefee8afcb55fb4ce0e82090776d297b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/032c4deefee8afcb55fb4ce0e82090776d297b50", "html_url": "https://github.com/rust-lang/rust/commit/032c4deefee8afcb55fb4ce0e82090776d297b50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/032c4deefee8afcb55fb4ce0e82090776d297b50/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b97318bb80121388909cc9c55ff7465664c4845d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b97318bb80121388909cc9c55ff7465664c4845d", "html_url": "https://github.com/rust-lang/rust/commit/b97318bb80121388909cc9c55ff7465664c4845d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6101163d32d4e1d1a7d6e56ec6d90a948cca3f45", "filename": "src/lib/ivec.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/032c4deefee8afcb55fb4ce0e82090776d297b50/src%2Flib%2Fivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/032c4deefee8afcb55fb4ce0e82090776d297b50/src%2Flib%2Fivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fivec.rs?ref=032c4deefee8afcb55fb4ce0e82090776d297b50", "patch": "@@ -208,6 +208,12 @@ fn member[T](&T x, &T[] v) -> bool {\n     ret false;\n }\n \n+fn count[T](&T x, &T[mutable?] v) -> uint {\n+    auto cnt = 0u;\n+    for (T elt in v) { if (x == elt) { cnt += 1u; } }\n+    ret cnt;\n+}\n+\n fn find[T](fn(&T) -> bool  f, &T[] v) -> option::t[T] {\n     for (T elt in v) { if (f(elt)) { ret some[T](elt); } }\n     ret none[T];"}]}