{"sha": "cdd74fc7b19805c65c7d6f759ec6871be1c38fce", "node_id": "C_kwDOAAsO6NoAKGNkZDc0ZmM3YjE5ODA1YzY1YzdkNmY3NTllYzY4NzFiZTFjMzhmY2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-16T00:12:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-16T00:12:06Z"}, "message": "Auto merge of #97065 - gabriel-doriath-dohler:master, r=joshtriplett\n\nRename `eq_ignore_case` to `starts_with_ignore_case`\n\nThe method doesn't test for equality. It tests if the object starts with\na given byte array, so its name is confusing.", "tree": {"sha": "25888ebe2d05d5333acfe0edbee6072219cae606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25888ebe2d05d5333acfe0edbee6072219cae606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdd74fc7b19805c65c7d6f759ec6871be1c38fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd74fc7b19805c65c7d6f759ec6871be1c38fce", "html_url": "https://github.com/rust-lang/rust/commit/cdd74fc7b19805c65c7d6f759ec6871be1c38fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdd74fc7b19805c65c7d6f759ec6871be1c38fce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e1761c704f074b7b8c7ff8a7433acfd65d2ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e1761c704f074b7b8c7ff8a7433acfd65d2ee9", "html_url": "https://github.com/rust-lang/rust/commit/42e1761c704f074b7b8c7ff8a7433acfd65d2ee9"}, {"sha": "26265319c7d04306ccdf60e50580e3778f5e9134", "url": "https://api.github.com/repos/rust-lang/rust/commits/26265319c7d04306ccdf60e50580e3778f5e9134", "html_url": "https://github.com/rust-lang/rust/commit/26265319c7d04306ccdf60e50580e3778f5e9134"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "17957d7e770484ea63d745441a60430e1a4d564d", "filename": "library/core/src/num/dec2flt/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdd74fc7b19805c65c7d6f759ec6871be1c38fce/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdd74fc7b19805c65c7d6f759ec6871be1c38fce/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fcommon.rs?ref=cdd74fc7b19805c65c7d6f759ec6871be1c38fce", "patch": "@@ -36,7 +36,7 @@ pub(crate) trait ByteSlice: AsRef<[u8]> {\n     }\n \n     /// Check if self starts with u with a case-insensitive comparison.\n-    fn eq_ignore_case(&self, u: &[u8]) -> bool {\n+    fn starts_with_ignore_case(&self, u: &[u8]) -> bool {\n         debug_assert!(self.as_ref().len() >= u.len());\n         let iter = self.as_ref().iter().zip(u.iter());\n         let d = iter.fold(0, |i, (&x, &y)| i | (x ^ y));"}, {"sha": "1a90e0d206fd7f4e041fb97e63eb7d8c2739f3ec", "filename": "library/core/src/num/dec2flt/parse.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdd74fc7b19805c65c7d6f759ec6871be1c38fce/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdd74fc7b19805c65c7d6f759ec6871be1c38fce/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fparse.rs?ref=cdd74fc7b19805c65c7d6f759ec6871be1c38fce", "patch": "@@ -207,12 +207,12 @@ pub fn parse_number(s: &[u8], negative: bool) -> Option<Number> {\n /// Parse a partial representation of a special, non-finite float.\n fn parse_partial_inf_nan<F: RawFloat>(s: &[u8]) -> Option<(F, usize)> {\n     fn parse_inf_rest(s: &[u8]) -> usize {\n-        if s.len() >= 8 && s[3..].as_ref().eq_ignore_case(b\"inity\") { 8 } else { 3 }\n+        if s.len() >= 8 && s[3..].as_ref().starts_with_ignore_case(b\"inity\") { 8 } else { 3 }\n     }\n     if s.len() >= 3 {\n-        if s.eq_ignore_case(b\"nan\") {\n+        if s.starts_with_ignore_case(b\"nan\") {\n             return Some((F::NAN, 3));\n-        } else if s.eq_ignore_case(b\"inf\") {\n+        } else if s.starts_with_ignore_case(b\"inf\") {\n             return Some((F::INFINITY, parse_inf_rest(s)));\n         }\n     }"}]}