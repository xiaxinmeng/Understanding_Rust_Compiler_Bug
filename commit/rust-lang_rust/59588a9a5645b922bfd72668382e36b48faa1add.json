{"sha": "59588a9a5645b922bfd72668382e36b48faa1add", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NTg4YTlhNTY0NWI5MjJiZmQ3MjY2ODM4MmUzNmI0OGZhYTFhZGQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-09-01T07:23:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-01T07:23:29Z"}, "message": "Rollup merge of #88542 - tavianator:readdir_r-errno, r=jyn514\n\nUse the return value of readdir_r() instead of errno\n\nPOSIX says:\n\n> If successful, the readdir_r() function shall return zero; otherwise,\n> an error number shall be returned to indicate the error.\n\nBut we were previously using errno instead of the return value.  This\nled to issue #86649.", "tree": {"sha": "44d3183e5f7679c51c6d5649a873917176403aa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44d3183e5f7679c51c6d5649a873917176403aa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59588a9a5645b922bfd72668382e36b48faa1add", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLypxCRBK7hj4Ov3rIwAAHxwIADRyblLz4mBX3ZKegzevm49N\nK9XBd7yfzu3rPii/MCmqw2Itygl1bR9jxuGCDT62fe7ZtJIpJWjbfYBJz1WzXjsD\nMyPEAFHC2jBYOH8EfyUPnUOv2O++non3buEVLIMd36GQXwi2Qccmtnicx7cpkYOG\nH4zFtj1Dqk+MFokH+UgylcUSAdT2n4F9klcGB4q1mbYxSKIOIxU6nz7wez7x/kyb\nwiSoMSlS4K6KTULQaVMerJ3XFUU2xKFFZH0VNbn1CHzYYVhpjK6GZSD0Fzz/F0/j\nhT0vtmJ1H+iA8K0Lr3wtSmvRHp3em2qUuBn7I1mSB1RUzlnM+VfyLnzQfF8zljM=\n=iPPp\n-----END PGP SIGNATURE-----\n", "payload": "tree 44d3183e5f7679c51c6d5649a873917176403aa5\nparent bbc94ed32982eb4a12a0778837e17581e885d59e\nparent 0e0c8aef87fe78c797a455d34e7490254f3d22b2\nauthor Mara Bos <m-ou.se@m-ou.se> 1630481009 +0200\ncommitter GitHub <noreply@github.com> 1630481009 +0200\n\nRollup merge of #88542 - tavianator:readdir_r-errno, r=jyn514\n\nUse the return value of readdir_r() instead of errno\n\nPOSIX says:\n\n> If successful, the readdir_r() function shall return zero; otherwise,\n> an error number shall be returned to indicate the error.\n\nBut we were previously using errno instead of the return value.  This\nled to issue #86649.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59588a9a5645b922bfd72668382e36b48faa1add", "html_url": "https://github.com/rust-lang/rust/commit/59588a9a5645b922bfd72668382e36b48faa1add", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59588a9a5645b922bfd72668382e36b48faa1add/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbc94ed32982eb4a12a0778837e17581e885d59e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc94ed32982eb4a12a0778837e17581e885d59e", "html_url": "https://github.com/rust-lang/rust/commit/bbc94ed32982eb4a12a0778837e17581e885d59e"}, {"sha": "0e0c8aef87fe78c797a455d34e7490254f3d22b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e0c8aef87fe78c797a455d34e7490254f3d22b2", "html_url": "https://github.com/rust-lang/rust/commit/0e0c8aef87fe78c797a455d34e7490254f3d22b2"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "6d7524a733afd85cac14a01793ee06047328f5fc", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/59588a9a5645b922bfd72668382e36b48faa1add/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59588a9a5645b922bfd72668382e36b48faa1add/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=59588a9a5645b922bfd72668382e36b48faa1add", "patch": "@@ -506,15 +506,16 @@ impl Iterator for ReadDir {\n             let mut ret = DirEntry { entry: mem::zeroed(), dir: Arc::clone(&self.inner) };\n             let mut entry_ptr = ptr::null_mut();\n             loop {\n-                if readdir64_r(self.inner.dirp.0, &mut ret.entry, &mut entry_ptr) != 0 {\n+                let err = readdir64_r(self.inner.dirp.0, &mut ret.entry, &mut entry_ptr);\n+                if err != 0 {\n                     if entry_ptr.is_null() {\n                         // We encountered an error (which will be returned in this iteration), but\n                         // we also reached the end of the directory stream. The `end_of_stream`\n                         // flag is enabled to make sure that we return `None` in the next iteration\n                         // (instead of looping forever)\n                         self.end_of_stream = true;\n                     }\n-                    return Some(Err(Error::last_os_error()));\n+                    return Some(Err(Error::from_raw_os_error(err)));\n                 }\n                 if entry_ptr.is_null() {\n                     return None;"}]}