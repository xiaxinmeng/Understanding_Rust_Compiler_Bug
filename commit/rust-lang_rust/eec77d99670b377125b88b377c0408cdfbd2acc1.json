{"sha": "eec77d99670b377125b88b377c0408cdfbd2acc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYzc3ZDk5NjcwYjM3NzEyNWI4OGIzNzdjMDQwOGNkZmJkMmFjYzE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-21T01:01:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-21T01:01:39Z"}, "message": "Rollup merge of #83306 - Aaron1011:js-sys-lint, r=petrochenkov\n\nExtend `proc_macro_back_compat` lint to `js-sys`\n\nWith this PR, we now lint for all cases where we perform some kind of\nproc-macro back-compat hack.\n\nThe `js-sys` had an internal fix made to properly handle\n`None`-delimited groups, so we need to manually check the version in the\nfilename. As a result, we no longer apply the back-compat hack to cases\nwhere the version number is missing file the file path. This should not\naffect any users of the `crates.io` crate.", "tree": {"sha": "62a7498753e1b8596a241740d97e67677ef23fc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62a7498753e1b8596a241740d97e67677ef23fc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eec77d99670b377125b88b377c0408cdfbd2acc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgVprzCRBK7hj4Ov3rIwAAdHIIAACbe63xfJ6z6f8xbPu7BQlV\nIE4zClq6EnPRtpTERzcdRsLxdA1D6XsDTBvd2EZh82xfUsMBRa0aiEH6RBcIOTIk\n/KWZaBeI2+KbYfkBveYo3vY+ImVtMPCf8Wb1W/ReSmjkdvlTMjNq8urqQp7Xu/CG\nMSDOmX8xiQpeACU8Tutah03e1wM5jfMb660CUMUXwn69qkFwqf2sKD1mlpvxeOuD\nVv39A/z+6RTeqT2WE5cRfe/473KtTmRDdT38E/sodkOd3xYZHjE/OcOzYfA0hyZ9\nT1e/u9vwCwq8SH9/hk7eTiRvGtMiF+m7jq4vO48KzbECPdp2DqWK7zmR6lQoUUs=\n=ttJk\n-----END PGP SIGNATURE-----\n", "payload": "tree 62a7498753e1b8596a241740d97e67677ef23fc3\nparent d778a80026e308178e35330ce50e1f9cf3dc17e7\nparent f6a35d7df276bdc939746786f7d43b05e60f7dcd\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616288499 +0100\ncommitter GitHub <noreply@github.com> 1616288499 +0100\n\nRollup merge of #83306 - Aaron1011:js-sys-lint, r=petrochenkov\n\nExtend `proc_macro_back_compat` lint to `js-sys`\n\nWith this PR, we now lint for all cases where we perform some kind of\nproc-macro back-compat hack.\n\nThe `js-sys` had an internal fix made to properly handle\n`None`-delimited groups, so we need to manually check the version in the\nfilename. As a result, we no longer apply the back-compat hack to cases\nwhere the version number is missing file the file path. This should not\naffect any users of the `crates.io` crate.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eec77d99670b377125b88b377c0408cdfbd2acc1", "html_url": "https://github.com/rust-lang/rust/commit/eec77d99670b377125b88b377c0408cdfbd2acc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eec77d99670b377125b88b377c0408cdfbd2acc1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d778a80026e308178e35330ce50e1f9cf3dc17e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d778a80026e308178e35330ce50e1f9cf3dc17e7", "html_url": "https://github.com/rust-lang/rust/commit/d778a80026e308178e35330ce50e1f9cf3dc17e7"}, {"sha": "f6a35d7df276bdc939746786f7d43b05e60f7dcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a35d7df276bdc939746786f7d43b05e60f7dcd", "html_url": "https://github.com/rust-lang/rust/commit/f6a35d7df276bdc939746786f7d43b05e60f7dcd"}], "stats": {"total": 106, "additions": 90, "deletions": 16}, "files": [{"sha": "1ea26b4eab44b3069ee73c8fcf0810a5016fe545", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/eec77d99670b377125b88b377c0408cdfbd2acc1/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec77d99670b377125b88b377c0408cdfbd2acc1/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=eec77d99670b377125b88b377c0408cdfbd2acc1", "patch": "@@ -739,9 +739,8 @@ fn ident_name_compatibility_hack(\n \n                 let time_macros_impl =\n                     macro_name == sym::impl_macros && matches_prefix(\"time-macros-impl\", \"lib.rs\");\n-                if time_macros_impl\n-                    || (macro_name == sym::arrays && matches_prefix(\"js-sys\", \"lib.rs\"))\n-                {\n+                let js_sys = macro_name == sym::arrays && matches_prefix(\"js-sys\", \"lib.rs\");\n+                if time_macros_impl || js_sys {\n                     let snippet = source_map.span_to_snippet(orig_span);\n                     if snippet.as_deref() == Ok(\"$name\") {\n                         if time_macros_impl {\n@@ -754,8 +753,35 @@ fn ident_name_compatibility_hack(\n                                 \"the `time-macros-impl` crate will stop compiling in futures version of Rust. \\\n                                 Please update to the latest version of the `time` crate to avoid breakage\".to_string())\n                             );\n+                            return Some((*ident, *is_raw));\n+                        }\n+                        if js_sys {\n+                            if let Some(c) = path\n+                                .components()\n+                                .flat_map(|c| c.as_os_str().to_str())\n+                                .find(|c| c.starts_with(\"js-sys\"))\n+                            {\n+                                let mut version = c.trim_start_matches(\"js-sys-\").split(\".\");\n+                                if version.next() == Some(\"0\")\n+                                    && version.next() == Some(\"3\")\n+                                    && version\n+                                        .next()\n+                                        .and_then(|c| c.parse::<u32>().ok())\n+                                        .map_or(false, |v| v < 40)\n+                                {\n+                                    rustc.sess.buffer_lint_with_diagnostic(\n+                                        &PROC_MACRO_BACK_COMPAT,\n+                                        orig_span,\n+                                        ast::CRATE_NODE_ID,\n+                                        \"using an old version of `js-sys`\",\n+                                        BuiltinLintDiagnostics::ProcMacroBackCompat(\n+                                        \"older versions of the `js-sys` crate will stop compiling in future versions of Rust; \\\n+                                        please update to `js-sys` v0.3.40 or above\".to_string())\n+                                    );\n+                                    return Some((*ident, *is_raw));\n+                                }\n+                            }\n                         }\n-                        return Some((*ident, *is_raw));\n                     }\n                 }\n "}, {"sha": "2b742771d6f2c7dede3574c71e7577bdd4747a5d", "filename": "src/test/ui/proc-macro/group-compat-hack/group-compat-hack.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.rs?ref=eec77d99670b377125b88b377c0408cdfbd2acc1", "patch": "@@ -43,7 +43,8 @@ mod with_version {\n     struct Foo;\n     impl_macros!(Foo); //~  WARN using an old version\n                        //~| WARN this was previously\n-    arrays!(Foo);\n+    arrays!(Foo); //~  WARN using an old version\n+                  //~| WARN this was previously\n     other!(Foo);\n }\n \n@@ -77,5 +78,11 @@ mod actori_web_version_test {\n     tuple_from_req!(Foo);\n }\n \n+mod with_good_js_sys_version {\n+    include!(\"js-sys-0.3.40/src/lib.rs\");\n+    struct Foo;\n+    arrays!(Foo);\n+}\n+\n \n fn main() {}"}, {"sha": "effcd68cf967c9fe331b3d9fb3cf3b029b8ebe92", "filename": "src/test/ui/proc-macro/group-compat-hack/group-compat-hack.stderr", "status": "modified", "additions": 38, "deletions": 5, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stderr?ref=eec77d99670b377125b88b377c0408cdfbd2acc1", "patch": "@@ -31,13 +31,29 @@ LL |     impl_macros!(Foo);\n    = note: the `time-macros-impl` crate will stop compiling in futures version of Rust. Please update to the latest version of the `time` crate to avoid breakage\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+warning: using an old version of `js-sys`\n+  --> $DIR/js-sys-0.3.17/src/lib.rs:5:32\n+   |\n+LL |         #[my_macro] struct Two($name);\n+   |                                ^^^^^\n+   | \n+  ::: $DIR/group-compat-hack.rs:46:5\n+   |\n+LL |     arrays!(Foo);\n+   |     ------------- in this macro invocation\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `js-sys` crate will stop compiling in future versions of Rust; please update to `js-sys` v0.3.40 or above\n+   = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n warning: using an old version of `actix-web`\n   --> $DIR/actix-web/src/extract.rs:5:34\n    |\n LL |         #[my_macro] struct Three($T);\n    |                                  ^^\n    | \n-  ::: $DIR/group-compat-hack.rs:54:5\n+  ::: $DIR/group-compat-hack.rs:55:5\n    |\n LL |     tuple_from_req!(Foo);\n    |     --------------------- in this macro invocation\n@@ -53,7 +69,7 @@ warning: using an old version of `actix-web`\n LL |         #[my_macro] struct Three($T);\n    |                                  ^^\n    | \n-  ::: $DIR/group-compat-hack.rs:62:5\n+  ::: $DIR/group-compat-hack.rs:63:5\n    |\n LL |     tuple_from_req!(Foo);\n    |     --------------------- in this macro invocation\n@@ -63,7 +79,7 @@ LL |     tuple_from_req!(Foo);\n    = note: the version of `actix-web` you are using might stop compiling in future versions of Rust; please update to the latest version of the `actix-web` crate to avoid breakage\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-warning: 4 warnings emitted\n+warning: 5 warnings emitted\n \n Future incompatibility report: Future breakage date: None, diagnostic:\n warning: using an old version of `time-macros-impl`\n@@ -100,14 +116,31 @@ LL |     impl_macros!(Foo);\n    = note: the `time-macros-impl` crate will stop compiling in futures version of Rust. Please update to the latest version of the `time` crate to avoid breakage\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+Future breakage date: None, diagnostic:\n+warning: using an old version of `js-sys`\n+  --> $DIR/js-sys-0.3.17/src/lib.rs:5:32\n+   |\n+LL |         #[my_macro] struct Two($name);\n+   |                                ^^^^^\n+   | \n+  ::: $DIR/group-compat-hack.rs:46:5\n+   |\n+LL |     arrays!(Foo);\n+   |     ------------- in this macro invocation\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `js-sys` crate will stop compiling in future versions of Rust; please update to `js-sys` v0.3.40 or above\n+   = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n Future breakage date: None, diagnostic:\n warning: using an old version of `actix-web`\n   --> $DIR/actix-web/src/extract.rs:5:34\n    |\n LL |         #[my_macro] struct Three($T);\n    |                                  ^^\n    | \n-  ::: $DIR/group-compat-hack.rs:54:5\n+  ::: $DIR/group-compat-hack.rs:55:5\n    |\n LL |     tuple_from_req!(Foo);\n    |     --------------------- in this macro invocation\n@@ -124,7 +157,7 @@ warning: using an old version of `actix-web`\n LL |         #[my_macro] struct Three($T);\n    |                                  ^^\n    | \n-  ::: $DIR/group-compat-hack.rs:62:5\n+  ::: $DIR/group-compat-hack.rs:63:5\n    |\n LL |     tuple_from_req!(Foo);\n    |     --------------------- in this macro invocation"}, {"sha": "82d6bc33bf95b95f960d75d2bd360dcb3d54373c", "filename": "src/test/ui/proc-macro/group-compat-hack/group-compat-hack.stdout", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stdout?ref=eec77d99670b377125b88b377c0408cdfbd2acc1", "patch": "@@ -1,10 +1,11 @@\n Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/time-macros-impl/src/lib.rs:5:21: 5:27 (#6) }, Ident { ident: \"One\", span: $DIR/time-macros-impl/src/lib.rs:5:28: 5:31 (#6) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:27:18: 27:21 (#0) }], span: $DIR/time-macros-impl/src/lib.rs:5:31: 5:38 (#6) }, Punct { ch: ';', spacing: Alone, span: $DIR/time-macros-impl/src/lib.rs:5:38: 5:39 (#6) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys/src/lib.rs:5:21: 5:27 (#10) }, Ident { ident: \"Two\", span: $DIR/js-sys/src/lib.rs:5:28: 5:31 (#10) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:29:13: 29:16 (#0) }], span: $DIR/js-sys/src/lib.rs:5:31: 5:38 (#10) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys/src/lib.rs:5:38: 5:39 (#10) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys/src/lib.rs:5:21: 5:27 (#10) }, Ident { ident: \"Two\", span: $DIR/js-sys/src/lib.rs:5:28: 5:31 (#10) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:29:13: 29:16 (#0) }], span: $DIR/js-sys/src/lib.rs:5:32: 5:37 (#10) }], span: $DIR/js-sys/src/lib.rs:5:31: 5:38 (#10) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys/src/lib.rs:5:38: 5:39 (#10) }]\n Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:22:25: 22:31 (#14) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:22:32: 22:37 (#14) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:30:12: 30:15 (#0) }], span: $DIR/group-compat-hack.rs:22:38: 22:43 (#14) }], span: $DIR/group-compat-hack.rs:22:37: 22:44 (#14) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:22:44: 22:45 (#14) }]\n Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:21: 5:27 (#20) }, Ident { ident: \"One\", span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:28: 5:31 (#20) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:44:18: 44:21 (#0) }], span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:31: 5:38 (#20) }, Punct { ch: ';', spacing: Alone, span: $DIR/time-macros-impl-0.1.0/src/lib.rs:5:38: 5:39 (#20) }]\n Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys-0.3.17/src/lib.rs:5:21: 5:27 (#24) }, Ident { ident: \"Two\", span: $DIR/js-sys-0.3.17/src/lib.rs:5:28: 5:31 (#24) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:46:13: 46:16 (#0) }], span: $DIR/js-sys-0.3.17/src/lib.rs:5:31: 5:38 (#24) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys-0.3.17/src/lib.rs:5:38: 5:39 (#24) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:39:25: 39:31 (#28) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:39:32: 39:37 (#28) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:47:12: 47:15 (#0) }], span: $DIR/group-compat-hack.rs:39:38: 39:43 (#28) }], span: $DIR/group-compat-hack.rs:39:37: 39:44 (#28) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:39:44: 39:45 (#28) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actix-web/src/extract.rs:5:21: 5:27 (#33) }, Ident { ident: \"Three\", span: $DIR/actix-web/src/extract.rs:5:28: 5:33 (#33) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:54:21: 54:24 (#0) }], span: $DIR/actix-web/src/extract.rs:5:33: 5:37 (#33) }, Punct { ch: ';', spacing: Alone, span: $DIR/actix-web/src/extract.rs:5:37: 5:38 (#33) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actix-web-2.0.0/src/extract.rs:5:21: 5:27 (#38) }, Ident { ident: \"Three\", span: $DIR/actix-web-2.0.0/src/extract.rs:5:28: 5:33 (#38) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:62:21: 62:24 (#0) }], span: $DIR/actix-web-2.0.0/src/extract.rs:5:33: 5:37 (#38) }, Punct { ch: ';', spacing: Alone, span: $DIR/actix-web-2.0.0/src/extract.rs:5:37: 5:38 (#38) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actori-web/src/extract.rs:5:21: 5:27 (#43) }, Ident { ident: \"Four\", span: $DIR/actori-web/src/extract.rs:5:28: 5:32 (#43) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:70:21: 70:24 (#0) }], span: $DIR/actori-web/src/extract.rs:5:33: 5:35 (#43) }], span: $DIR/actori-web/src/extract.rs:5:32: 5:36 (#43) }, Punct { ch: ';', spacing: Alone, span: $DIR/actori-web/src/extract.rs:5:36: 5:37 (#43) }]\n-Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actori-web-2.0.0/src/extract.rs:5:21: 5:27 (#48) }, Ident { ident: \"Four\", span: $DIR/actori-web-2.0.0/src/extract.rs:5:28: 5:32 (#48) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:77:21: 77:24 (#0) }], span: $DIR/actori-web-2.0.0/src/extract.rs:5:33: 5:35 (#48) }], span: $DIR/actori-web-2.0.0/src/extract.rs:5:32: 5:36 (#48) }, Punct { ch: ';', spacing: Alone, span: $DIR/actori-web-2.0.0/src/extract.rs:5:36: 5:37 (#48) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/group-compat-hack.rs:39:25: 39:31 (#28) }, Ident { ident: \"Three\", span: $DIR/group-compat-hack.rs:39:32: 39:37 (#28) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:48:12: 48:15 (#0) }], span: $DIR/group-compat-hack.rs:39:38: 39:43 (#28) }], span: $DIR/group-compat-hack.rs:39:37: 39:44 (#28) }, Punct { ch: ';', spacing: Alone, span: $DIR/group-compat-hack.rs:39:44: 39:45 (#28) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actix-web/src/extract.rs:5:21: 5:27 (#33) }, Ident { ident: \"Three\", span: $DIR/actix-web/src/extract.rs:5:28: 5:33 (#33) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:55:21: 55:24 (#0) }], span: $DIR/actix-web/src/extract.rs:5:33: 5:37 (#33) }, Punct { ch: ';', spacing: Alone, span: $DIR/actix-web/src/extract.rs:5:37: 5:38 (#33) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actix-web-2.0.0/src/extract.rs:5:21: 5:27 (#38) }, Ident { ident: \"Three\", span: $DIR/actix-web-2.0.0/src/extract.rs:5:28: 5:33 (#38) }, Group { delimiter: Parenthesis, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:63:21: 63:24 (#0) }], span: $DIR/actix-web-2.0.0/src/extract.rs:5:33: 5:37 (#38) }, Punct { ch: ';', spacing: Alone, span: $DIR/actix-web-2.0.0/src/extract.rs:5:37: 5:38 (#38) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actori-web/src/extract.rs:5:21: 5:27 (#43) }, Ident { ident: \"Four\", span: $DIR/actori-web/src/extract.rs:5:28: 5:32 (#43) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:71:21: 71:24 (#0) }], span: $DIR/actori-web/src/extract.rs:5:33: 5:35 (#43) }], span: $DIR/actori-web/src/extract.rs:5:32: 5:36 (#43) }, Punct { ch: ';', spacing: Alone, span: $DIR/actori-web/src/extract.rs:5:36: 5:37 (#43) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/actori-web-2.0.0/src/extract.rs:5:21: 5:27 (#48) }, Ident { ident: \"Four\", span: $DIR/actori-web-2.0.0/src/extract.rs:5:28: 5:32 (#48) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:78:21: 78:24 (#0) }], span: $DIR/actori-web-2.0.0/src/extract.rs:5:33: 5:35 (#48) }], span: $DIR/actori-web-2.0.0/src/extract.rs:5:32: 5:36 (#48) }, Punct { ch: ';', spacing: Alone, span: $DIR/actori-web-2.0.0/src/extract.rs:5:36: 5:37 (#48) }]\n+Called proc_macro_hack with TokenStream [Ident { ident: \"struct\", span: $DIR/js-sys-0.3.40/src/lib.rs:5:21: 5:27 (#53) }, Ident { ident: \"Two\", span: $DIR/js-sys-0.3.40/src/lib.rs:5:28: 5:31 (#53) }, Group { delimiter: Parenthesis, stream: TokenStream [Group { delimiter: None, stream: TokenStream [Ident { ident: \"Foo\", span: $DIR/group-compat-hack.rs:84:13: 84:16 (#0) }], span: $DIR/js-sys-0.3.40/src/lib.rs:5:32: 5:37 (#53) }], span: $DIR/js-sys-0.3.40/src/lib.rs:5:31: 5:38 (#53) }, Punct { ch: ';', spacing: Alone, span: $DIR/js-sys-0.3.40/src/lib.rs:5:38: 5:39 (#53) }]"}, {"sha": "d1a66940ebf3cfba4ce0b79eee84a10063c03b3c", "filename": "src/test/ui/proc-macro/group-compat-hack/js-sys-0.3.40/src/lib.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fjs-sys-0.3.40%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec77d99670b377125b88b377c0408cdfbd2acc1/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fjs-sys-0.3.40%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fjs-sys-0.3.40%2Fsrc%2Flib.rs?ref=eec77d99670b377125b88b377c0408cdfbd2acc1", "patch": "@@ -0,0 +1,7 @@\n+// ignore-test this is not a test\n+\n+macro_rules! arrays {\n+    ($name:ident) => {\n+        #[my_macro] struct Two($name);\n+    }\n+}"}]}