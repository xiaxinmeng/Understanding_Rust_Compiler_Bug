{"sha": "25930e47ba0f53b6ff3bd439f6478747884a05b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1OTMwZTQ3YmEwZjUzYjZmZjNiZDQzOWY2NDc4NzQ3ODg0YTA1YjI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-05T18:02:55Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-19T08:25:13Z"}, "message": "update codegen of `discriminant_value`", "tree": {"sha": "cc068419e184f528d3fb9a6cf06d380c7f34b36b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc068419e184f528d3fb9a6cf06d380c7f34b36b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25930e47ba0f53b6ff3bd439f6478747884a05b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25930e47ba0f53b6ff3bd439f6478747884a05b2", "html_url": "https://github.com/rust-lang/rust/commit/25930e47ba0f53b6ff3bd439f6478747884a05b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25930e47ba0f53b6ff3bd439f6478747884a05b2/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6975bf22f651c67b1b2e84c1421b4b6623c89de", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6975bf22f651c67b1b2e84c1421b4b6623c89de", "html_url": "https://github.com/rust-lang/rust/commit/b6975bf22f651c67b1b2e84c1421b4b6623c89de"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "1e6d2e3dbb74ef1c8758a920f32f479776f9ba6f", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/25930e47ba0f53b6ff3bd439f6478747884a05b2/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25930e47ba0f53b6ff3bd439f6478747884a05b2/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=25930e47ba0f53b6ff3bd439f6478747884a05b2", "patch": "@@ -188,11 +188,11 @@ impl IntrinsicCallMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n             }\n             \"size_of\" | \"pref_align_of\" | \"min_align_of\" | \"needs_drop\" | \"type_id\"\n             | \"type_name\" => {\n-                let ty_name = self\n+                let value = self\n                     .tcx\n                     .const_eval_instance(ty::ParamEnv::reveal_all(), instance, None)\n                     .unwrap();\n-                OperandRef::from_const(self, ty_name, ret_ty).immediate_or_packed_pair(self)\n+                OperandRef::from_const(self, value, ret_ty).immediate_or_packed_pair(self)\n             }\n             // Effectively no-op\n             \"forget\" => {\n@@ -549,7 +549,13 @@ impl IntrinsicCallMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n                 }\n             }\n \n-            \"discriminant_value\" => args[0].deref(self.cx()).codegen_get_discr(self, ret_ty),\n+            \"discriminant_value\" => {\n+                if ret_ty.is_integral() {\n+                    args[0].deref(self.cx()).codegen_get_discr(self, ret_ty)\n+                } else {\n+                    span_bug!(span, \"Invalid discriminant type for `{:?}`\", arg_tys[0])\n+                }\n+            }\n \n             name if name.starts_with(\"simd_\") => {\n                 match generic_simd_intrinsic(self, name, callee_ty, args, ret_ty, llret_ty, span) {"}, {"sha": "42b969c99917ffa92f5cafae0999239e1c2f489e", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/25930e47ba0f53b6ff3bd439f6478747884a05b2/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25930e47ba0f53b6ff3bd439f6478747884a05b2/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=25930e47ba0f53b6ff3bd439f6478747884a05b2", "patch": "@@ -2,8 +2,6 @@\n //! looking at their MIR. Intrinsics/functions supported here are shared by CTFE\n //! and miri.\n \n-use std::convert::TryFrom;\n-\n use rustc_hir::def_id::DefId;\n use rustc_middle::mir::{\n     self,\n@@ -220,7 +218,12 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             sym::discriminant_value => {\n                 let place = self.deref_operand(args[0])?;\n                 let discr_val = self.read_discriminant(place.into())?.0;\n-                self.write_scalar(Scalar::from_u64(u64::try_from(discr_val).unwrap()), dest)?;\n+                let scalar = match dest.layout.ty.kind {\n+                    ty::Int(_) => Scalar::from_int(discr_val as i128, dest.layout.size),\n+                    ty::Uint(_) => Scalar::from_uint(discr_val, dest.layout.size),\n+                    _ => bug!(\"invalid `discriminant_value` return layout: {:?}\", dest.layout),\n+                };\n+                self.write_scalar(scalar, dest)?;\n             }\n             sym::unchecked_shl\n             | sym::unchecked_shr"}, {"sha": "bded2c695c9db50f8df0275e2d1f383d92296df1", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25930e47ba0f53b6ff3bd439f6478747884a05b2/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25930e47ba0f53b6ff3bd439f6478747884a05b2/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=25930e47ba0f53b6ff3bd439f6478747884a05b2", "patch": "@@ -8,7 +8,7 @@ use rustc_hir as hir;\n use rustc_middle::traits::{ObligationCause, ObligationCauseCode};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_span::symbol::{Ident, Symbol};\n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n \n use std::iter;"}]}