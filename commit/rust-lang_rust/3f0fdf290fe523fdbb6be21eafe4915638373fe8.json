{"sha": "3f0fdf290fe523fdbb6be21eafe4915638373fe8", "node_id": "C_kwDOAAsO6NoAKDNmMGZkZjI5MGZlNTIzZmRiYjZiZTIxZWFmZTQ5MTU2MzgzNzNmZTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-23T12:24:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-23T13:13:38Z"}, "message": "pass clippy::cast_lossless", "tree": {"sha": "d58a06b227a6e2d03ac288c889138eade3cd68b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d58a06b227a6e2d03ac288c889138eade3cd68b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f0fdf290fe523fdbb6be21eafe4915638373fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0fdf290fe523fdbb6be21eafe4915638373fe8", "html_url": "https://github.com/rust-lang/rust/commit/3f0fdf290fe523fdbb6be21eafe4915638373fe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f0fdf290fe523fdbb6be21eafe4915638373fe8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9aad98a3b61e77e31317c6fef86ffff6bac175a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9aad98a3b61e77e31317c6fef86ffff6bac175a", "html_url": "https://github.com/rust-lang/rust/commit/b9aad98a3b61e77e31317c6fef86ffff6bac175a"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "1a07ce9aa12bd51d6b46ffdef011f1d377b4850d", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3f0fdf290fe523fdbb6be21eafe4915638373fe8", "patch": "@@ -9,7 +9,7 @@\n #![feature(is_some_with)]\n #![feature(nonzero_ops)]\n #![feature(local_key_cell_methods)]\n-#![warn(rust_2018_idioms)]\n+// Configure clippy and other lints\n #![allow(\n     clippy::collapsible_else_if,\n     clippy::collapsible_if,\n@@ -24,6 +24,7 @@\n     clippy::derive_hash_xor_eq,\n     clippy::too_many_arguments\n )]\n+#![warn(rust_2018_idioms, clippy::cast_lossless)]\n \n extern crate rustc_apfloat;\n extern crate rustc_ast;"}, {"sha": "c1d39dc0928656f4f5977f22e7a8aa3108311c4e", "filename": "src/shims/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=3f0fdf290fe523fdbb6be21eafe4915638373fe8", "patch": "@@ -202,7 +202,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let env_block_ptr = this.read_pointer(env_block_op)?;\n         let result = this.deallocate_ptr(env_block_ptr, None, MiriMemoryKind::Runtime.into());\n         // If the function succeeds, the return value is nonzero.\n-        Ok(result.is_ok() as i32)\n+        Ok(i32::from(result.is_ok()))\n     }\n \n     fn setenv("}, {"sha": "9d19160b84d63fa8b159944a47137946348c63fa", "filename": "src/shims/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=3f0fdf290fe523fdbb6be21eafe4915638373fe8", "patch": "@@ -73,7 +73,7 @@ impl<'tcx> TlsData<'tcx> {\n         self.keys.try_insert(new_key, TlsEntry { data: Default::default(), dtor }).unwrap();\n         trace!(\"New TLS key allocated: {} with dtor {:?}\", new_key, dtor);\n \n-        if max_size.bits() < 128 && new_key >= (1u128 << max_size.bits() as u128) {\n+        if max_size.bits() < 128 && new_key >= (1u128 << max_size.bits()) {\n             throw_unsup_format!(\"we ran out of TLS key space\");\n         }\n         Ok(new_key)"}, {"sha": "709b27d191b26b51c3c346cf7737ff6c1042436d", "filename": "src/stacked_borrows/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Fstacked_borrows%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f0fdf290fe523fdbb6be21eafe4915638373fe8/src%2Fstacked_borrows%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows%2Fitem.rs?ref=3f0fdf290fe523fdbb6be21eafe4915638373fe8", "patch": "@@ -22,7 +22,7 @@ impl Item {\n         assert!(tag.0.get() <= TAG_MASK);\n         let packed_tag = tag.0.get();\n         let packed_perm = perm.to_bits() << PERM_SHIFT;\n-        let packed_protected = (protected as u64) << PROTECTED_SHIFT;\n+        let packed_protected = u64::from(protected) << PROTECTED_SHIFT;\n \n         let new = Self(packed_tag | packed_perm | packed_protected);\n "}]}