{"sha": "c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYWMyZTg2ZjlkNzU0NTU5NGZkYjFiZTI3ZjJmZTkzMzY2OTljYTc=", "commit": {"author": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2020-05-29T07:15:46Z"}, "committer": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2020-05-29T15:51:38Z"}, "message": "Get libdir from stage0 compiler", "tree": {"sha": "6ff39219685acc10c8398ba6e7d9f44b9f38a19a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ff39219685acc10c8398ba6e7d9f44b9f38a19a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQTXjLIROS7AD0PcqBoQxGo6bmMoMgUCXtEvjQAKCRAQxGo6bmMo\nMlejAP9gcd+L8WLvSWNilx1gbq0IP+buoxTjep3iUXuOXfo4iwD9FfZsD53LaYLy\nzkzpCUTcHdJIyrzKitXLiBaC8lXSduQ=\n=7U4d\n-----END PGP SIGNATURE-----", "payload": "tree 6ff39219685acc10c8398ba6e7d9f44b9f38a19a\nparent ce722999ea7a150d57504222e16107ef8a6556e6\nauthor O01eg <o01eg@yandex.ru> 1590736546 +0300\ncommitter O01eg <o01eg@yandex.ru> 1590767498 +0300\n\nGet libdir from stage0 compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "html_url": "https://github.com/rust-lang/rust/commit/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7/comments", "author": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce722999ea7a150d57504222e16107ef8a6556e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce722999ea7a150d57504222e16107ef8a6556e6", "html_url": "https://github.com/rust-lang/rust/commit/ce722999ea7a150d57504222e16107ef8a6556e6"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "c8a85eae252ff0c9e0d72dcbaf0447454d7f226a", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "patch": "@@ -648,6 +648,7 @@ impl<'a> Builder<'a> {\n     pub fn sysroot_libdir_relative(&self, compiler: Compiler) -> &Path {\n         match self.config.libdir_relative() {\n             Some(relative_libdir) if compiler.stage >= 1 => relative_libdir,\n+            _ if compiler.stage == 0 => &self.build.initial_libdir,\n             _ => Path::new(\"lib\"),\n         }\n     }"}, {"sha": "c46c68e4d56824d9224868fb105c985a7e12c386", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "patch": "@@ -243,6 +243,7 @@ pub struct Build {\n     initial_rustc: PathBuf,\n     initial_cargo: PathBuf,\n     initial_lld: PathBuf,\n+    initial_libdir: PathBuf,\n \n     // Runtime state filled in later on\n     // C/C++ compilers and archiver for all targets\n@@ -344,8 +345,8 @@ impl Build {\n         // we always try to use git for LLVM builds\n         let in_tree_llvm_info = channel::GitInfo::new(false, &src.join(\"src/llvm-project\"));\n \n-        let initial_target_libdir = if config.dry_run {\n-            \"/dummy/path/to/lib/\".to_string()\n+        let initial_target_libdir_str = if config.dry_run {\n+            \"/dummy/lib/path/to/lib/\".to_string()\n         } else {\n             output(\n                 Command::new(&config.initial_rustc)\n@@ -355,13 +356,28 @@ impl Build {\n                     .arg(\"target-libdir\"),\n             )\n         };\n-        let initial_lld =\n-            Path::new(&initial_target_libdir).parent().unwrap().join(\"bin\").join(\"rust-lld\");\n+        let initial_target_dir = Path::new(&initial_target_libdir_str).parent().unwrap();\n+        let initial_lld = initial_target_dir.join(\"bin\").join(\"rust-lld\");\n+\n+        let initial_sysroot = if config.dry_run {\n+            \"/dummy\".to_string()\n+        } else {\n+            output(Command::new(&config.initial_rustc).arg(\"--print\").arg(\"sysroot\"))\n+        };\n+        let initial_libdir = initial_target_dir\n+            .parent()\n+            .unwrap()\n+            .parent()\n+            .unwrap()\n+            .strip_prefix(initial_sysroot.trim())\n+            .unwrap()\n+            .to_path_buf();\n \n         let mut build = Build {\n             initial_rustc: config.initial_rustc.clone(),\n             initial_cargo: config.initial_cargo.clone(),\n             initial_lld,\n+            initial_libdir,\n             local_rebuild: config.local_rebuild,\n             fail_fast: config.cmd.fail_fast(),\n             doc_tests: config.cmd.doc_tests(),"}]}