{"sha": "c647735f40c402f674917aff0361d4f3be7a24d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NDc3MzVmNDBjNDAyZjY3NDkxN2FmZjAzNjFkNGYzYmU3YTI0ZDg=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-10-20T17:09:50Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-10-20T17:30:09Z"}, "message": "rustc_lint: remove unused to_string\n\nIn this instance, we can just pass a &str slice\nand save an allocation.", "tree": {"sha": "4381cf579914372ef3297e782a256b2daea63006", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4381cf579914372ef3297e782a256b2daea63006"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c647735f40c402f674917aff0361d4f3be7a24d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c647735f40c402f674917aff0361d4f3be7a24d8", "html_url": "https://github.com/rust-lang/rust/commit/c647735f40c402f674917aff0361d4f3be7a24d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c647735f40c402f674917aff0361d4f3be7a24d8/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463", "html_url": "https://github.com/rust-lang/rust/commit/4d247ad7d3d2a9f72cd60e281f39b5d85bd6a463"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9da40dd10f8236f8023e1a184364e670768cd7e8", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c647735f40c402f674917aff0361d4f3be7a24d8/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c647735f40c402f674917aff0361d4f3be7a24d8/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=c647735f40c402f674917aff0361d4f3be7a24d8", "patch": "@@ -145,9 +145,9 @@ fn lint_overflowing_range_endpoint<'tcx>(\n                     // We need to preserve the literal's suffix,\n                     // as it may determine typing information.\n                     let suffix = match lit.node {\n-                        LitKind::Int(_, LitIntType::Signed(s)) => s.name_str().to_string(),\n-                        LitKind::Int(_, LitIntType::Unsigned(s)) => s.name_str().to_string(),\n-                        LitKind::Int(_, LitIntType::Unsuffixed) => \"\".to_string(),\n+                        LitKind::Int(_, LitIntType::Signed(s)) => s.name_str(),\n+                        LitKind::Int(_, LitIntType::Unsigned(s)) => s.name_str(),\n+                        LitKind::Int(_, LitIntType::Unsuffixed) => \"\",\n                         _ => bug!(),\n                     };\n                     let suggestion = format!(\"{}..={}{}\", start, lit_val - 1, suffix);"}]}