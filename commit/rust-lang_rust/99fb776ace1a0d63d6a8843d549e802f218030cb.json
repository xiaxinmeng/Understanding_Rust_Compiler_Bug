{"sha": "99fb776ace1a0d63d6a8843d549e802f218030cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZmI3NzZhY2UxYTBkNjNkNmE4ODQzZDU0OWU4MDJmMjE4MDMwY2I=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2021-05-18T08:21:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-18T08:21:55Z"}, "message": "Rollup merge of #7235 - camsteffen:manual-unwrap-or-deref, r=flip1995\n\nFix another manual_unwrap_or deref FP\n\nchangelog: none (since this just piggybacks on #7233)\n\nFixes #6960", "tree": {"sha": "f944dfa7fbc5c7b63b602bb4a63e7eeab4fe1062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f944dfa7fbc5c7b63b602bb4a63e7eeab4fe1062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99fb776ace1a0d63d6a8843d549e802f218030cb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgo3kjCRBK7hj4Ov3rIwAANOMIAH3lJjK7oiGqLBIwtOzNnqZj\nT5inI5X9+m9q9HYGBsz6YNK33h6uElSxyR0pPwKNfXkguLMjb6vQcgumIV4Z3FoB\nPWaNevgwJ569yG0tfSqVEqa4yNsjB+SNAz4kSzg/blK/T9dmSPFkJdE8CRTSaQjg\n3ROYoLc5mEsyuCfl2mCJhrsFZFCx6Ez5WTA59w5madUp09zgg9GAtG41ccPafDiA\nL0KXUdnXYcGsIPvq3IqD4nT80J2myrbPkLFsRJ0M72vfsnuxQIiGaSoMbYdLmm5r\n5OFPECJ0JN9NjJtjaaCE5cVAa8v+U8MobNvGzlk30DSvEYbdpPkbGg05QAmUOWc=\n=zllc\n-----END PGP SIGNATURE-----\n", "payload": "tree f944dfa7fbc5c7b63b602bb4a63e7eeab4fe1062\nparent 9028173b244dc6cf11a34e73fda4259d7280c3e1\nparent 8356c485a99890339022a7afd99fc13ae09e5805\nauthor Philipp Krones <hello@philkrones.com> 1621326115 +0200\ncommitter GitHub <noreply@github.com> 1621326115 +0200\n\nRollup merge of #7235 - camsteffen:manual-unwrap-or-deref, r=flip1995\n\nFix another manual_unwrap_or deref FP\n\nchangelog: none (since this just piggybacks on #7233)\n\nFixes #6960\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99fb776ace1a0d63d6a8843d549e802f218030cb", "html_url": "https://github.com/rust-lang/rust/commit/99fb776ace1a0d63d6a8843d549e802f218030cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99fb776ace1a0d63d6a8843d549e802f218030cb/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9028173b244dc6cf11a34e73fda4259d7280c3e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9028173b244dc6cf11a34e73fda4259d7280c3e1", "html_url": "https://github.com/rust-lang/rust/commit/9028173b244dc6cf11a34e73fda4259d7280c3e1"}, {"sha": "8356c485a99890339022a7afd99fc13ae09e5805", "url": "https://api.github.com/repos/rust-lang/rust/commits/8356c485a99890339022a7afd99fc13ae09e5805", "html_url": "https://github.com/rust-lang/rust/commit/8356c485a99890339022a7afd99fc13ae09e5805"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "2f579edd6ade5ec0407e834385e8a12297f36dff", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/99fb776ace1a0d63d6a8843d549e802f218030cb/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fb776ace1a0d63d6a8843d549e802f218030cb/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=99fb776ace1a0d63d6a8843d549e802f218030cb", "patch": "@@ -11,7 +11,6 @@ use rustc_hir::{Arm, Expr, ExprKind, PatKind};\n use rustc_lint::LintContext;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n-use rustc_middle::ty::adjustment::Adjust;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n \n@@ -54,21 +53,6 @@ impl LateLintPass<'_> for ManualUnwrapOr {\n     }\n }\n \n-#[derive(Copy, Clone)]\n-enum Case {\n-    Option,\n-    Result,\n-}\n-\n-impl Case {\n-    fn unwrap_fn_path(&self) -> &str {\n-        match self {\n-            Case::Option => \"Option::unwrap_or\",\n-            Case::Result => \"Result::unwrap_or\",\n-        }\n-    }\n-}\n-\n fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n     fn applicable_or_arm<'a>(cx: &LateContext<'_>, arms: &'a [Arm<'a>]) -> Option<&'a Arm<'a>> {\n         if_chain! {\n@@ -87,9 +71,8 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             if is_lang_ctor(cx, qpath, OptionSome) || is_lang_ctor(cx, qpath, ResultOk);\n             if let PatKind::Binding(_, binding_hir_id, ..) = unwrap_pat.kind;\n             if path_to_local_id(unwrap_arm.body, binding_hir_id);\n+            if cx.typeck_results().expr_adjustments(unwrap_arm.body).is_empty();\n             if !contains_return_break_continue_macro(or_arm.body);\n-            if !cx.typeck_results().expr_adjustments(unwrap_arm.body).iter()\n-                .any(|a| matches!(a.kind, Adjust::Deref(Some(..))));\n             then {\n                 Some(or_arm)\n             } else {\n@@ -101,10 +84,10 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n     if_chain! {\n         if let ExprKind::Match(scrutinee, match_arms, _) = expr.kind;\n         let ty = cx.typeck_results().expr_ty(scrutinee);\n-        if let Some(case) = if is_type_diagnostic_item(cx, ty, sym::option_type) {\n-            Some(Case::Option)\n+        if let Some(ty_name) = if is_type_diagnostic_item(cx, ty, sym::option_type) {\n+            Some(\"Option\")\n         } else if is_type_diagnostic_item(cx, ty, sym::result_type) {\n-            Some(Case::Result)\n+            Some(\"Result\")\n         } else {\n             None\n         };\n@@ -127,7 +110,7 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             span_lint_and_sugg(\n                 cx,\n                 MANUAL_UNWRAP_OR, expr.span,\n-                &format!(\"this pattern reimplements `{}`\", case.unwrap_fn_path()),\n+                &format!(\"this pattern reimplements `{}::unwrap_or`\", ty_name),\n                 \"replace with\",\n                 format!(\n                     \"{}.unwrap_or({})\","}, {"sha": "3717f962745fb4da9a0e3097731343000be21a8b", "filename": "tests/ui/manual_unwrap_or.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/99fb776ace1a0d63d6a8843d549e802f218030cb/tests%2Fui%2Fmanual_unwrap_or.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/99fb776ace1a0d63d6a8843d549e802f218030cb/tests%2Fui%2Fmanual_unwrap_or.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.fixed?ref=99fb776ace1a0d63d6a8843d549e802f218030cb", "patch": "@@ -171,4 +171,11 @@ fn format_name(name: Option<&Rc<str>>) -> &str {\n     }\n }\n \n+fn implicit_deref_ref() {\n+    let _: &str = match Some(&\"bye\") {\n+        None => \"hi\",\n+        Some(s) => s,\n+    };\n+}\n+\n fn main() {}"}, {"sha": "989adde1f5bbb7518e8c41a22e24df5fa0cbe82b", "filename": "tests/ui/manual_unwrap_or.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/99fb776ace1a0d63d6a8843d549e802f218030cb/tests%2Fui%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99fb776ace1a0d63d6a8843d549e802f218030cb/tests%2Fui%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.rs?ref=99fb776ace1a0d63d6a8843d549e802f218030cb", "patch": "@@ -213,4 +213,11 @@ fn format_name(name: Option<&Rc<str>>) -> &str {\n     }\n }\n \n+fn implicit_deref_ref() {\n+    let _: &str = match Some(&\"bye\") {\n+        None => \"hi\",\n+        Some(s) => s,\n+    };\n+}\n+\n fn main() {}"}]}