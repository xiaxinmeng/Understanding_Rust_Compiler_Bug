{"sha": "4cbfe1582a91bb3899e878f0691f4fec2647e97e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYmZlMTU4MmE5MWJiMzg5OWU4NzhmMDY5MWY0ZmVjMjY0N2U5N2U=", "commit": {"author": {"name": "pravic", "email": "ehysta@gmail.com", "date": "2016-03-17T09:05:22Z"}, "committer": {"name": "pravic", "email": "ehysta@gmail.com", "date": "2016-03-17T09:05:22Z"}, "message": "test: Fix missing call of function pointer\n\nAlso an unused variable warning was here.", "tree": {"sha": "3bb7dbc1bb7cf1f9bae034940a912d5293801893", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bb7dbc1bb7cf1f9bae034940a912d5293801893"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cbfe1582a91bb3899e878f0691f4fec2647e97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cbfe1582a91bb3899e878f0691f4fec2647e97e", "html_url": "https://github.com/rust-lang/rust/commit/4cbfe1582a91bb3899e878f0691f4fec2647e97e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cbfe1582a91bb3899e878f0691f4fec2647e97e/comments", "author": {"login": "pravic", "id": 724639, "node_id": "MDQ6VXNlcjcyNDYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/724639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pravic", "html_url": "https://github.com/pravic", "followers_url": "https://api.github.com/users/pravic/followers", "following_url": "https://api.github.com/users/pravic/following{/other_user}", "gists_url": "https://api.github.com/users/pravic/gists{/gist_id}", "starred_url": "https://api.github.com/users/pravic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pravic/subscriptions", "organizations_url": "https://api.github.com/users/pravic/orgs", "repos_url": "https://api.github.com/users/pravic/repos", "events_url": "https://api.github.com/users/pravic/events{/privacy}", "received_events_url": "https://api.github.com/users/pravic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pravic", "id": 724639, "node_id": "MDQ6VXNlcjcyNDYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/724639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pravic", "html_url": "https://github.com/pravic", "followers_url": "https://api.github.com/users/pravic/followers", "following_url": "https://api.github.com/users/pravic/following{/other_user}", "gists_url": "https://api.github.com/users/pravic/gists{/gist_id}", "starred_url": "https://api.github.com/users/pravic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pravic/subscriptions", "organizations_url": "https://api.github.com/users/pravic/orgs", "repos_url": "https://api.github.com/users/pravic/repos", "events_url": "https://api.github.com/users/pravic/events{/privacy}", "received_events_url": "https://api.github.com/users/pravic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e0f2f2f050443f2aec4e9c7d25618a6a6639b83", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0f2f2f050443f2aec4e9c7d25618a6a6639b83", "html_url": "https://github.com/rust-lang/rust/commit/6e0f2f2f050443f2aec4e9c7d25618a6a6639b83"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "abd1709825c974b605f03b011c5113f0bb3afc25", "filename": "src/test/run-pass/variadic-ffi.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4cbfe1582a91bb3899e878f0691f4fec2647e97e/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cbfe1582a91bb3899e878f0691f4fec2647e97e/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs?ref=4cbfe1582a91bb3899e878f0691f4fec2647e97e", "patch": "@@ -45,15 +45,15 @@ pub fn main() {\n         let x: unsafe extern fn(*mut c_char, *const c_char, ...) -> c_int = sprintf;\n \n         // A function that takes a function pointer\n-        unsafe fn call(p: unsafe extern fn(*mut c_char, *const c_char, ...) -> c_int) {\n+        unsafe fn call(fp: unsafe extern fn(*mut c_char, *const c_char, ...) -> c_int) {\n             // Call with just the named parameter\n             let c = CString::new(&b\"Hello World\\n\"[..]).unwrap();\n-            check(\"Hello World\\n\", |s| sprintf(s, c.as_ptr()));\n+            check(\"Hello World\\n\", |s| fp(s, c.as_ptr()));\n \n             // Call with variable number of arguments\n             let c = CString::new(&b\"%d %f %c %s\\n\"[..]).unwrap();\n             check(\"42 42.500000 a %d %f %c %s\\n\\n\", |s| {\n-                sprintf(s, c.as_ptr(), 42, 42.5f64, 'a' as c_int, c.as_ptr());\n+                fp(s, c.as_ptr(), 42, 42.5f64, 'a' as c_int, c.as_ptr());\n             });\n         }\n "}]}