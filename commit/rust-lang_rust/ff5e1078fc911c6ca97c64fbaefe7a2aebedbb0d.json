{"sha": "ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNWUxMDc4ZmM5MTFjNmNhOTdjNjRmYmFlZmU3YTJhZWJlZGJiMGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-12T10:48:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-12T10:48:43Z"}, "message": "assign tracking issue", "tree": {"sha": "072b6a3292cc153a0c2d0d81844361c128975123", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/072b6a3292cc153a0c2d0d81844361c128975123"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "html_url": "https://github.com/rust-lang/rust/commit/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f5c98bd8a27b5313d0b1a5830076139c562b6b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f5c98bd8a27b5313d0b1a5830076139c562b6b6", "html_url": "https://github.com/rust-lang/rust/commit/5f5c98bd8a27b5313d0b1a5830076139c562b6b6"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "39d4aca636a05c6a632bc1a0347dd1913f52e4d1", "filename": "src/libcore/ptr/const_ptr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/src%2Flibcore%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/src%2Flibcore%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fconst_ptr.rs?ref=ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "patch": "@@ -842,8 +842,8 @@ impl<T> *const [T] {\n     /// assert_eq!(slice.as_ptr(), 0 as *const i8);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n-    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n+    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n     pub const fn as_ptr(self) -> *const T {\n         self as *const T\n     }\n@@ -867,7 +867,7 @@ impl<T> *const [T] {\n     ///     assert_eq!(x.get_unchecked(1), x.as_ptr().add(1));\n     /// }\n     /// ```\n-    #[unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n     #[inline]\n     pub unsafe fn get_unchecked<I>(self, index: I) -> *const I::Output\n     where"}, {"sha": "644465d7d17f8a60fc92dcb49f515124a4a6ab84", "filename": "src/libcore/ptr/mut_ptr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/src%2Flibcore%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/src%2Flibcore%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmut_ptr.rs?ref=ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "patch": "@@ -1043,8 +1043,8 @@ impl<T> *mut [T] {\n     /// assert_eq!(slice.as_mut_ptr(), 0 as *mut i8);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n-    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n+    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n     pub const fn as_mut_ptr(self) -> *mut T {\n         self as *mut T\n     }\n@@ -1068,7 +1068,7 @@ impl<T> *mut [T] {\n     ///     assert_eq!(x.get_unchecked_mut(1), x.as_mut_ptr().add(1));\n     /// }\n     /// ```\n-    #[unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n     #[inline]\n     pub unsafe fn get_unchecked_mut<I>(self, index: I) -> *mut I::Output\n     where"}, {"sha": "b362a49d604e7ffd2a3ccdecee89c4f33c17f440", "filename": "src/libcore/ptr/non_null.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/src%2Flibcore%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d/src%2Flibcore%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fnon_null.rs?ref=ff5e1078fc911c6ca97c64fbaefe7a2aebedbb0d", "patch": "@@ -217,8 +217,8 @@ impl<T> NonNull<[T]> {\n     /// assert_eq!(slice.as_non_null_ptr(), NonNull::new(1 as *mut i8).unwrap());\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n-    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n+    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n     pub const fn as_non_null_ptr(self) -> NonNull<T> {\n         // SAFETY: We know `self` is non-null.\n         unsafe { NonNull::new_unchecked(self.as_ptr().as_mut_ptr()) }\n@@ -245,7 +245,7 @@ impl<T> NonNull<[T]> {\n     ///     assert_eq!(x.get_unchecked_mut(1).as_ptr(), x.as_non_null_ptr().as_ptr().add(1));\n     /// }\n     /// ```\n-    #[unstable(feature = \"slice_ptr_get\", issue = \"none\")]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n     #[inline]\n     pub unsafe fn get_unchecked_mut<I>(self, index: I) -> NonNull<I::Output>\n     where"}]}