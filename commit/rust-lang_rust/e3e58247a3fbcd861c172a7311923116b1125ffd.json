{"sha": "e3e58247a3fbcd861c172a7311923116b1125ffd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZTU4MjQ3YTNmYmNkODYxYzE3MmE3MzExOTIzMTE2YjExMjVmZmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-26T03:37:22Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-26T08:12:04Z"}, "message": "Rollup merge of #32469 - nikomatsakis:shared-cgu, r=eddyb\n\nmake available monomorphizations shared by CGU\n\nThe current setup means that all generics are local to a codegen-unit,\nwhich means massive duplication.", "tree": {"sha": "9bea4473632e6c77450624ad2e509fa3589eb2cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bea4473632e6c77450624ad2e509fa3589eb2cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3e58247a3fbcd861c172a7311923116b1125ffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3e58247a3fbcd861c172a7311923116b1125ffd", "html_url": "https://github.com/rust-lang/rust/commit/e3e58247a3fbcd861c172a7311923116b1125ffd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3e58247a3fbcd861c172a7311923116b1125ffd/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "671027817c6ef7351db6dbb47cfac42cf5f0707a", "url": "https://api.github.com/repos/rust-lang/rust/commits/671027817c6ef7351db6dbb47cfac42cf5f0707a", "html_url": "https://github.com/rust-lang/rust/commit/671027817c6ef7351db6dbb47cfac42cf5f0707a"}, {"sha": "13877ac4428cc9cbf6b07ad98e0f0b152381fac7", "url": "https://api.github.com/repos/rust-lang/rust/commits/13877ac4428cc9cbf6b07ad98e0f0b152381fac7", "html_url": "https://github.com/rust-lang/rust/commit/13877ac4428cc9cbf6b07ad98e0f0b152381fac7"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bd556c0f2ebf60f67ea659c52431f2bc0fd3cdc9", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3e58247a3fbcd861c172a7311923116b1125ffd/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3e58247a3fbcd861c172a7311923116b1125ffd/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=e3e58247a3fbcd861c172a7311923116b1125ffd", "patch": "@@ -80,6 +80,7 @@ pub struct SharedCrateContext<'a, 'tcx: 'a> {\n     mir_map: &'a MirMap<'tcx>,\n     mir_cache: RefCell<DefIdMap<Rc<mir::Mir<'tcx>>>>,\n \n+    available_monomorphizations: RefCell<FnvHashSet<String>>,\n     available_drop_glues: RefCell<FnvHashMap<DropGlueKind<'tcx>, String>>,\n     use_dll_storage_attrs: bool,\n \n@@ -105,7 +106,6 @@ pub struct LocalCrateContext<'tcx> {\n     /// Cache instances of monomorphic and polymorphic items\n     instances: RefCell<FnvHashMap<Instance<'tcx>, ValueRef>>,\n     monomorphizing: RefCell<DefIdMap<usize>>,\n-    available_monomorphizations: RefCell<FnvHashSet<String>>,\n     /// Cache generated vtables\n     vtables: RefCell<FnvHashMap<ty::PolyTraitRef<'tcx>, ValueRef>>,\n     /// Cache of constant strings,\n@@ -357,6 +357,7 @@ impl<'b, 'tcx> SharedCrateContext<'b, 'tcx> {\n             },\n             check_overflow: check_overflow,\n             check_drop_flag_for_sanity: check_drop_flag_for_sanity,\n+            available_monomorphizations: RefCell::new(FnvHashSet()),\n             available_drop_glues: RefCell::new(FnvHashMap()),\n             use_dll_storage_attrs: use_dll_storage_attrs,\n             translation_items: RefCell::new(FnvHashMap()),\n@@ -474,7 +475,6 @@ impl<'tcx> LocalCrateContext<'tcx> {\n                 external_srcs: RefCell::new(NodeMap()),\n                 instances: RefCell::new(FnvHashMap()),\n                 monomorphizing: RefCell::new(DefIdMap()),\n-                available_monomorphizations: RefCell::new(FnvHashSet()),\n                 vtables: RefCell::new(FnvHashMap()),\n                 const_cstr_cache: RefCell::new(FnvHashMap()),\n                 const_unsized: RefCell::new(FnvHashMap()),\n@@ -723,7 +723,7 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n     }\n \n     pub fn available_monomorphizations<'a>(&'a self) -> &'a RefCell<FnvHashSet<String>> {\n-        &self.local.available_monomorphizations\n+        &self.shared.available_monomorphizations\n     }\n \n     pub fn available_drop_glues(&self) -> &RefCell<FnvHashMap<DropGlueKind<'tcx>, String>> {"}]}