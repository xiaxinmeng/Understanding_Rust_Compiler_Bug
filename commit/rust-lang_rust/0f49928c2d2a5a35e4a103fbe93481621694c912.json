{"sha": "0f49928c2d2a5a35e4a103fbe93481621694c912", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNDk5MjhjMmQyYTVhMzVlNGExMDNmYmU5MzQ4MTYyMTY5NGM5MTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-15T01:29:01Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-15T02:04:32Z"}, "message": "rustc: Break metadata's dependency on link", "tree": {"sha": "f3242ca322930fe736e7c88b01db0669cc3dcaaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3242ca322930fe736e7c88b01db0669cc3dcaaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f49928c2d2a5a35e4a103fbe93481621694c912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f49928c2d2a5a35e4a103fbe93481621694c912", "html_url": "https://github.com/rust-lang/rust/commit/0f49928c2d2a5a35e4a103fbe93481621694c912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f49928c2d2a5a35e4a103fbe93481621694c912/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f08fe56479b93179317f32b1585d28ca2fd03968", "url": "https://api.github.com/repos/rust-lang/rust/commits/f08fe56479b93179317f32b1585d28ca2fd03968", "html_url": "https://github.com/rust-lang/rust/commit/f08fe56479b93179317f32b1585d28ca2fd03968"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "2fb3dd352acd80e4d9f98f87b03fb234d7077224", "filename": "src/rustc/back/link.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Flink.rs?ref=0f49928c2d2a5a35e4a103fbe93481621694c912", "patch": "@@ -286,10 +286,8 @@ mod write {\n  *\n  */\n \n-type link_meta = {name: str, vers: str, extras_hash: str};\n-\n fn build_link_meta(sess: session, c: ast::crate, output: str,\n-                   sha: sha1) -> link_meta {\n+                   sha: sha1) -> encoder::link_meta {\n \n     type provided_metas =\n         {name: option<str>,\n@@ -412,8 +410,8 @@ fn truncated_sha1_result(sha: sha1) -> str unsafe {\n \n \n // This calculates STH for a symbol, as defined above\n-fn symbol_hash(tcx: ty::ctxt, sha: sha1, t: ty::t, link_meta: link_meta) ->\n-   str {\n+fn symbol_hash(tcx: ty::ctxt, sha: sha1, t: ty::t,\n+               link_meta: encoder::link_meta) -> str {\n     // NB: do *not* use abbrevs here as we want the symbol names\n     // to be independent of one another in the crate.\n \n@@ -526,7 +524,7 @@ fn mangle_internal_name_by_seq(ccx: @crate_ctxt, flav: str) -> str {\n fn link_binary(sess: session,\n                obj_filename: str,\n                out_filename: str,\n-               lm: link_meta) {\n+               lm: encoder::link_meta) {\n     // Converts a library file name into a cc -l argument\n     fn unlib(config: @session::config, filename: str) -> str unsafe {\n         let rmlib = fn@(filename: str) -> str {"}, {"sha": "740a6678eed803eeb72cad94a0ad8299510fb241", "filename": "src/rustc/metadata.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata.rs?ref=0f49928c2d2a5a35e4a103fbe93481621694c912", "patch": "@@ -15,8 +15,6 @@ mod front {\n }\n \n mod back {\n-    import link = back_::link;\n-    export link;\n }\n \n mod driver {"}, {"sha": "4a047ac34a42715a286eda47fa83870a1d2afdd4", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=0f49928c2d2a5a35e4a103fbe93481621694c912", "patch": "@@ -21,6 +21,7 @@ import middle::resolve;\n import syntax::ast;\n import driver::session::session;\n \n+export link_meta;\n export encode_parms;\n export encode_metadata;\n export encoded_ty;\n@@ -33,6 +34,9 @@ export encode_ctxt;\n export write_type;\n export encode_def_id;\n \n+// FIXME: This probably belongs somewhere else\n+type link_meta = {name: str, vers: str, extras_hash: str};\n+\n type abbrev_map = map::hashmap<ty::t, tyencode::ty_abbrev>;\n \n type encode_inlined_item = fn@(ecx: @encode_ctxt,\n@@ -47,7 +51,7 @@ type encode_parms = {\n     impl_map: resolve::impl_map,\n     item_symbols: hashmap<ast::node_id, str>,\n     discrim_symbols: hashmap<ast::node_id, str>,\n-    link_meta: back::link::link_meta,\n+    link_meta: link_meta,\n     cstore: cstore::cstore,\n     encode_inlined_item: encode_inlined_item\n };\n@@ -59,7 +63,7 @@ enum encode_ctxt = {\n     impl_map: resolve::impl_map,\n     item_symbols: hashmap<ast::node_id, str>,\n     discrim_symbols: hashmap<ast::node_id, str>,\n-    link_meta: back::link::link_meta,\n+    link_meta: link_meta,\n     cstore: cstore::cstore,\n     encode_inlined_item: encode_inlined_item,\n     type_abbrevs: abbrev_map"}, {"sha": "b0ff30b22f72679a08aabab2a3d4c502ec57a950", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=0f49928c2d2a5a35e4a103fbe93481621694c912", "patch": "@@ -4950,7 +4950,7 @@ fn create_module_map(ccx: @crate_ctxt) -> ValueRef {\n }\n \n \n-fn decl_crate_map(sess: session::session, mapmeta: link::link_meta,\n+fn decl_crate_map(sess: session::session, mapmeta: encoder::link_meta,\n                   llmod: ModuleRef) -> ValueRef {\n     let targ_cfg = sess.targ_cfg;\n     let int_type = T_int(targ_cfg);\n@@ -5043,7 +5043,7 @@ fn write_abi_version(ccx: @crate_ctxt) {\n fn trans_crate(sess: session::session, crate: @ast::crate, tcx: ty::ctxt,\n                output: str, emap: resolve::exp_map,\n                maps: astencode::maps)\n-    -> (ModuleRef, link::link_meta) {\n+    -> (ModuleRef, encoder::link_meta) {\n     let sha = std::sha1::sha1();\n     let link_meta = link::build_link_meta(sess, *crate, output, sha);\n     let reachable = reachable::find_reachable(crate.node.module, emap, tcx,"}, {"sha": "ac7971971652f66455a976666b1814fc50f98336", "filename": "src/rustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49928c2d2a5a35e4a103fbe93481621694c912/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=0f49928c2d2a5a35e4a103fbe93481621694c912", "patch": "@@ -77,7 +77,7 @@ type crate_ctxt = {\n      reachable: reachable::map,\n      item_symbols: hashmap<ast::node_id, str>,\n      mut main_fn: option<ValueRef>,\n-     link_meta: link::link_meta,\n+     link_meta: encoder::link_meta,\n      enum_sizes: hashmap<ty::t, uint>,\n      discrims: hashmap<ast::def_id, ValueRef>,\n      discrim_symbols: hashmap<ast::node_id, str>,"}]}