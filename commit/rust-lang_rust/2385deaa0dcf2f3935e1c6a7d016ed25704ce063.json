{"sha": "2385deaa0dcf2f3935e1c6a7d016ed25704ce063", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzODVkZWFhMGRjZjJmMzkzNWUxYzZhN2QwMTZlZDI1NzA0Y2UwNjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-11T20:06:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-11T20:11:21Z"}, "message": "rt: Add locking invariants to rust_task", "tree": {"sha": "2561d5a3159eca47e614a305eec4f2294af0f23c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2561d5a3159eca47e614a305eec4f2294af0f23c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2385deaa0dcf2f3935e1c6a7d016ed25704ce063", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2385deaa0dcf2f3935e1c6a7d016ed25704ce063", "html_url": "https://github.com/rust-lang/rust/commit/2385deaa0dcf2f3935e1c6a7d016ed25704ce063", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2385deaa0dcf2f3935e1c6a7d016ed25704ce063/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e0e32faac1af7b239f5d1f11d6afa620c96a781", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0e32faac1af7b239f5d1f11d6afa620c96a781", "html_url": "https://github.com/rust-lang/rust/commit/5e0e32faac1af7b239f5d1f11d6afa620c96a781"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "9c2d8824b34eca07dc772bb48bf36c805b28ec4f", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2385deaa0dcf2f3935e1c6a7d016ed25704ce063/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2385deaa0dcf2f3935e1c6a7d016ed25704ce063/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=2385deaa0dcf2f3935e1c6a7d016ed25704ce063", "patch": "@@ -440,6 +440,7 @@ rust_task::transition(rust_task_list *src, rust_task_list *dst) {\n \n void\n rust_task::block(rust_cond *on, const char* name) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);\n     LOG(this, task, \"Blocking on 0x%\" PRIxPTR \", cond: 0x%\" PRIxPTR,\n                          (uintptr_t) on, (uintptr_t) cond);\n@@ -453,6 +454,7 @@ rust_task::block(rust_cond *on, const char* name) {\n \n void\n rust_task::wakeup(rust_cond *from) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);\n     A(sched, cond != NULL, \"Cannot wake up unblocked task.\");\n     LOG(this, task, \"Blocked on 0x%\" PRIxPTR \" woken up on 0x%\" PRIxPTR,\n@@ -473,6 +475,7 @@ rust_task::wakeup(rust_cond *from) {\n \n void\n rust_task::die() {\n+    I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);\n     transition(&sched->running_tasks, &sched->dead_tasks);\n     sched->lock.signal();\n@@ -535,6 +538,7 @@ void rust_task::on_wakeup(rust_task::wakeup_callback *callback) {\n }\n \n rust_port_id rust_task::register_port(rust_port *port) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);\n \n     rust_port_id id = next_port_id++;\n@@ -543,11 +547,13 @@ rust_port_id rust_task::register_port(rust_port *port) {\n }\n \n void rust_task::release_port(rust_port_id id) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);\n     port_table.remove(id);\n }\n \n rust_port *rust_task::get_port_by_id(rust_port_id id) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);\n     rust_port *port = NULL;\n     port_table.get(id, &port);\n@@ -571,6 +577,7 @@ rust_port *rust_task::get_port_by_chan_handle(chan_handle *handle) {\n // to another.\n const type_desc *\n rust_task::release_alloc(void *alloc) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     lock.lock();\n \n     assert(local_allocs.find(alloc) != local_allocs.end());\n@@ -587,6 +594,7 @@ rust_task::release_alloc(void *alloc) {\n // reparented to this one.\n void\n rust_task::claim_alloc(void *alloc, const type_desc *tydesc) {\n+    I(sched, !lock.lock_held_by_current_thread());\n     lock.lock();\n \n     assert(local_allocs.find(alloc) == local_allocs.end());"}]}