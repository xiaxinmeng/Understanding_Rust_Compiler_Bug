{"sha": "8876e2c29e0509b530648156e919b355b49c2dd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NzZlMmMyOWUwNTA5YjUzMDY0ODE1NmU5MTliMzU1YjQ5YzJkZDg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-10T23:32:21Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-10T23:32:21Z"}, "message": "Oops, fix logging string specs. Nobody likes writing RUST_LOG=_ZN5rustc5front7creaderE, do they?", "tree": {"sha": "729d9db1cc21f9279bc2ac5b990b3e4d71a36996", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/729d9db1cc21f9279bc2ac5b990b3e4d71a36996"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8876e2c29e0509b530648156e919b355b49c2dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8876e2c29e0509b530648156e919b355b49c2dd8", "html_url": "https://github.com/rust-lang/rust/commit/8876e2c29e0509b530648156e919b355b49c2dd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8876e2c29e0509b530648156e919b355b49c2dd8/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9671d214082016e61b59bd67bb6d4e295188a2a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9671d214082016e61b59bd67bb6d4e295188a2a4", "html_url": "https://github.com/rust-lang/rust/commit/9671d214082016e61b59bd67bb6d4e295188a2a4"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "cd91dc9b66b4381ab18b21fd5e806ef21f061ff2", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8876e2c29e0509b530648156e919b355b49c2dd8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8876e2c29e0509b530648156e919b355b49c2dd8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=8876e2c29e0509b530648156e919b355b49c2dd8", "patch": "@@ -5810,8 +5810,7 @@ fn load_if_immediate(&@block_ctxt cx, ValueRef v, &ty::t t) -> ValueRef {\n \n fn trans_log(int lvl, &@block_ctxt cx, &@ast::expr e) -> result {\n     auto lcx = cx.fcx.lcx;\n-    auto modname = link::mangle_internal_name_by_path(lcx.ccx,\n-                                                      lcx.module_path);\n+    auto modname = str::connect(lcx.module_path, \"::\");\n     auto global;\n     if (lcx.ccx.module_data.contains_key(modname)) {\n         global = lcx.ccx.module_data.get(modname);"}]}