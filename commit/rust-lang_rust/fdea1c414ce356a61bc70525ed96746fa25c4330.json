{"sha": "fdea1c414ce356a61bc70525ed96746fa25c4330", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZWExYzQxNGNlMzU2YTYxYmM3MDUyNWVkOTY3NDZmYTI1YzQzMzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T21:50:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T21:50:40Z"}, "message": "rustdoc: Extract doc nodes for native mods", "tree": {"sha": "8938be24bee28fe8ff9a619c7ea20847c7363214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8938be24bee28fe8ff9a619c7ea20847c7363214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdea1c414ce356a61bc70525ed96746fa25c4330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdea1c414ce356a61bc70525ed96746fa25c4330", "html_url": "https://github.com/rust-lang/rust/commit/fdea1c414ce356a61bc70525ed96746fa25c4330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdea1c414ce356a61bc70525ed96746fa25c4330/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba173d84098024d43628a250b0024ffe83b48558", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba173d84098024d43628a250b0024ffe83b48558", "html_url": "https://github.com/rust-lang/rust/commit/ba173d84098024d43628a250b0024ffe83b48558"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "f5c5c07564abe64245f4968a186a35c8dd2ae80a", "filename": "src/rustdoc/doc.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fdea1c414ce356a61bc70525ed96746fa25c4330/src%2Frustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdea1c414ce356a61bc70525ed96746fa25c4330/src%2Frustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdoc.rs?ref=fdea1c414ce356a61bc70525ed96746fa25c4330", "patch": "@@ -37,7 +37,7 @@ type moddoc = {\n \n type nmoddoc = {\n     item: itemdoc,\n-    fns: ~[fndoc]\n+    fns: [fndoc]\n };\n \n type constdoc = {\n@@ -120,6 +120,15 @@ impl util for moddoc {\n         }\n     }\n \n+    fn nmods() -> [nmoddoc] {\n+        vec::filter_map(*self.items) {|itemtag|\n+            alt itemtag {\n+              nmodtag(nmoddoc) { some(nmoddoc) }\n+              _ { none }\n+            }\n+        }\n+    }\n+\n     fn fns() -> [fndoc] {\n         vec::filter_map(*self.items) {|itemtag|\n             alt itemtag {"}, {"sha": "8a2770a76d13476d10573a57269de8797cc125c5", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/fdea1c414ce356a61bc70525ed96746fa25c4330/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdea1c414ce356a61bc70525ed96746fa25c4330/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=fdea1c414ce356a61bc70525ed96746fa25c4330", "patch": "@@ -57,6 +57,11 @@ fn moddoc_from_mod(\n                     moddoc_from_mod(itemdoc, m)\n                 ))\n               }\n+              ast::item_native_mod(nm) {\n+                some(doc::nmodtag(\n+                    nmoddoc_from_mod(itemdoc, nm)\n+                ))\n+              }\n               ast::item_fn(decl, _, _) {\n                 some(doc::fntag(\n                     fndoc_from_fn(itemdoc, decl)\n@@ -100,6 +105,23 @@ fn moddoc_from_mod(\n     }\n }\n \n+fn nmoddoc_from_mod(\n+    itemdoc: doc::itemdoc,\n+    module: ast::native_mod\n+) -> doc::nmoddoc {\n+    {\n+        item: itemdoc,\n+        fns: vec::map(module.items) {|item|\n+            let itemdoc = mk_itemdoc(item.id, item.ident);\n+            alt item.node {\n+              ast::native_item_fn(decl, _) {\n+                fndoc_from_fn(itemdoc, decl)\n+              }\n+            }\n+        }\n+    }\n+}\n+\n fn fndoc_from_fn(\n     itemdoc: doc::itemdoc,\n     decl: ast::fn_decl\n@@ -341,6 +363,18 @@ mod test {\n         assert doc.topmod.mods()[0].mods()[1].name() == \"c\";\n     }\n \n+    #[test]\n+    fn extract_native_mods() {\n+        let doc = mk_doc(\"native mod a { }\");\n+        assert doc.topmod.nmods()[0].name() == \"a\";\n+    }\n+\n+    #[test]\n+    fn extract_fns_from_native_mods() {\n+        let doc = mk_doc(\"native mod a { fn a(); }\");\n+        assert doc.topmod.nmods()[0].fns[0].name() == \"a\";\n+    }\n+\n     #[test]\n     fn extract_mods_deep() {\n         let doc = mk_doc(\"mod a { mod b { mod c { } } }\");"}, {"sha": "efdcf277ffbadca1a923e1f7b797a8a143ac49e8", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fdea1c414ce356a61bc70525ed96746fa25c4330/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdea1c414ce356a61bc70525ed96746fa25c4330/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=fdea1c414ce356a61bc70525ed96746fa25c4330", "patch": "@@ -154,7 +154,7 @@ fn default_seq_fold_nmod<T>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: ~vec::map(*doc.fns) {|fndoc|\n+        fns: vec::map(doc.fns) {|fndoc|\n             fold.fold_fn(fold, fndoc)\n         }\n         with doc"}]}