{"sha": "9d4d45215a95c92f05189e51131c60c1d15702d4", "node_id": "C_kwDOAAsO6NoAKDlkNGQ0NTIxNWE5NWM5MmYwNTE4OWU1MTEzMWM2MGMxZDE1NzAyZDQ", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:44:09Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:44:09Z"}, "message": "Rename", "tree": {"sha": "08502691df68cfb4faed2d1e9577a3717540e4ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08502691df68cfb4faed2d1e9577a3717540e4ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d4d45215a95c92f05189e51131c60c1d15702d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d4d45215a95c92f05189e51131c60c1d15702d4", "html_url": "https://github.com/rust-lang/rust/commit/9d4d45215a95c92f05189e51131c60c1d15702d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d4d45215a95c92f05189e51131c60c1d15702d4/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "369e430b05534e694183b6faa8e4e0e540973158", "url": "https://api.github.com/repos/rust-lang/rust/commits/369e430b05534e694183b6faa8e4e0e540973158", "html_url": "https://github.com/rust-lang/rust/commit/369e430b05534e694183b6faa8e4e0e540973158"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "aac5b156499f188f37a061c4bfaea908161d4ff9", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9d4d45215a95c92f05189e51131c60c1d15702d4/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d4d45215a95c92f05189e51131c60c1d15702d4/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=9d4d45215a95c92f05189e51131c60c1d15702d4", "patch": "@@ -87,8 +87,8 @@ pub struct LineIndex {\n     newlines: Box<[TextSize]>,\n     /// List of non-ASCII characters on each line.\n     line_wide_chars: IntMap<u32, Box<[WideChar]>>,\n-    /// The size of the entire text.\n-    size: TextSize,\n+    /// The length of the entire text.\n+    len: TextSize,\n }\n \n impl LineIndex {\n@@ -135,7 +135,7 @@ impl LineIndex {\n         LineIndex {\n             newlines: newlines.into_boxed_slice(),\n             line_wide_chars,\n-            size: TextSize::of(text),\n+            len: TextSize::of(text),\n         }\n     }\n \n@@ -153,7 +153,7 @@ impl LineIndex {\n     /// Returns `None` if the `offset` was invalid, e.g. if it extends past the end of the text or\n     /// points to the middle of a multi-byte character.\n     pub fn try_line_col(&self, offset: TextSize) -> Option<LineCol> {\n-        if offset > self.size {\n+        if offset > self.len {\n             return None;\n         }\n         let line = self.newlines.partition_point(|&it| it <= offset);"}]}