{"sha": "d18653158ddde023f8165ef7ba3c607661398abf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxODY1MzE1OGRkZGUwMjNmODE2NWVmN2JhM2M2MDc2NjEzOThhYmY=", "commit": {"author": {"name": "Frank", "email": "lifrank@grinnell.edu", "date": "2020-09-25T16:03:45Z"}, "committer": {"name": "Frank", "email": "lifrank@grinnell.edu", "date": "2020-09-25T16:09:04Z"}, "message": "remove useless test, update disallowed_method description", "tree": {"sha": "d2b1f510adce0bfa1ce39e0b5cda43b7a91e529d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2b1f510adce0bfa1ce39e0b5cda43b7a91e529d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d18653158ddde023f8165ef7ba3c607661398abf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d18653158ddde023f8165ef7ba3c607661398abf", "html_url": "https://github.com/rust-lang/rust/commit/d18653158ddde023f8165ef7ba3c607661398abf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d18653158ddde023f8165ef7ba3c607661398abf/comments", "author": {"login": "ilknarf", "id": 30297768, "node_id": "MDQ6VXNlcjMwMjk3NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/30297768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilknarf", "html_url": "https://github.com/ilknarf", "followers_url": "https://api.github.com/users/ilknarf/followers", "following_url": "https://api.github.com/users/ilknarf/following{/other_user}", "gists_url": "https://api.github.com/users/ilknarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilknarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilknarf/subscriptions", "organizations_url": "https://api.github.com/users/ilknarf/orgs", "repos_url": "https://api.github.com/users/ilknarf/repos", "events_url": "https://api.github.com/users/ilknarf/events{/privacy}", "received_events_url": "https://api.github.com/users/ilknarf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilknarf", "id": 30297768, "node_id": "MDQ6VXNlcjMwMjk3NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/30297768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilknarf", "html_url": "https://github.com/ilknarf", "followers_url": "https://api.github.com/users/ilknarf/followers", "following_url": "https://api.github.com/users/ilknarf/following{/other_user}", "gists_url": "https://api.github.com/users/ilknarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilknarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilknarf/subscriptions", "organizations_url": "https://api.github.com/users/ilknarf/orgs", "repos_url": "https://api.github.com/users/ilknarf/repos", "events_url": "https://api.github.com/users/ilknarf/events{/privacy}", "received_events_url": "https://api.github.com/users/ilknarf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9da2946d81a973b3c25aa5f4739ac7e05c27278", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9da2946d81a973b3c25aa5f4739ac7e05c27278", "html_url": "https://github.com/rust-lang/rust/commit/f9da2946d81a973b3c25aa5f4739ac7e05c27278"}], "stats": {"total": 84, "additions": 3, "deletions": 81}, "files": [{"sha": "581c3242e3745c81ee8202db7a28bf7601d5f9ac", "filename": "clippy_lints/src/disallowed_method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d18653158ddde023f8165ef7ba3c607661398abf/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18653158ddde023f8165ef7ba3c607661398abf/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_method.rs?ref=d18653158ddde023f8165ef7ba3c607661398abf", "patch": "@@ -18,12 +18,12 @@ declare_clippy_lint! {\n     ///\n     /// ```rust,ignore\n     /// // example code where clippy issues a warning\n-    /// foo.bad_method(); // Foo is disallowed\n+    /// foo.bad_method(); // Foo::bad_method is disallowed in the configuration\n     /// ```\n     /// Use instead:\n     /// ```rust,ignore\n     /// // example code which does not raise clippy warning\n-    /// goodStruct.bad_method(); // not disallowed\n+    /// goodStruct.bad_method(); // GoodStruct::bad_method is not disallowed\n     /// ```\n     pub DISALLOWED_METHOD,\n     nursery,"}, {"sha": "03f8c5a2c075ebee7e3194c380b25b1243a25af8", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d18653158ddde023f8165ef7ba3c607661398abf/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d18653158ddde023f8165ef7ba3c607661398abf/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=d18653158ddde023f8165ef7ba3c607661398abf", "patch": "@@ -165,7 +165,7 @@ define_Conf! {\n     /// Lint: WILDCARD_IMPORTS. Whether to allow certain wildcard imports (prelude, super in tests).\n     (warn_on_all_wildcard_imports, \"warn_on_all_wildcard_imports\": bool, false),\n     /// Lint: DISALLOWED_METHOD. The list of blacklisted methods to lint about. NB: `bar` is not here since it has legitimate uses\n-    (disallowed_methods, \"disallowed_methods\": Vec<String>, [\"disallowed_method::Foo::bad_method\", \"disallowed_method::Baz::bad_method\", \"disallowed_method::Quux::bad_method\"].iter().map(ToString::to_string).collect()),\n+    (disallowed_methods, \"disallowed_methods\": Vec<String>, Vec::<String>::new()),\n }\n \n impl Default for Conf {"}, {"sha": "46c9185268c6806d9fc9f8a91921abdc905c0442", "filename": "tests/ui/disallowed_method.rs", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f9da2946d81a973b3c25aa5f4739ac7e05c27278/tests%2Fui%2Fdisallowed_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9da2946d81a973b3c25aa5f4739ac7e05c27278/tests%2Fui%2Fdisallowed_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdisallowed_method.rs?ref=f9da2946d81a973b3c25aa5f4739ac7e05c27278", "patch": "@@ -1,56 +0,0 @@\n-#![warn(clippy::disallowed_method)]\n-#![allow(clippy::no_effect, clippy::many_single_char_names)]\n-\n-struct ImplStruct;\n-\n-trait Baz {\n-    fn bad_method(self);\n-}\n-\n-impl Baz for ImplStruct {\n-    fn bad_method(self) {}\n-}\n-\n-struct Foo;\n-\n-impl Foo {\n-    fn bad_method(self) {}\n-}\n-\n-struct StaticStruct;\n-\n-trait Quux {\n-    fn bad_method();\n-}\n-\n-impl Quux for StaticStruct {\n-    fn bad_method() {}\n-}\n-\n-struct NormalStruct;\n-\n-impl NormalStruct {\n-    fn bad_method(self) {}\n-}\n-\n-struct AttrStruct {\n-    bad_method: i32,\n-}\n-\n-fn main() {\n-    let b = ImplStruct;\n-    let f = Foo;\n-    let c = ImplStruct;\n-    let n = NormalStruct;\n-    let a = AttrStruct { bad_method: 5 };\n-\n-    // lint these\n-    b.bad_method();\n-    c.bad_method();\n-    f.bad_method();\n-    // these are good\n-    // good because not a method call (ExprKind => Call)\n-    StaticStruct::bad_method();\n-    n.bad_method();\n-    a.bad_method;\n-}"}, {"sha": "40db1b946d88c927b3a4904273fc076bc39777f6", "filename": "tests/ui/disallowed_method.stderr", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f9da2946d81a973b3c25aa5f4739ac7e05c27278/tests%2Fui%2Fdisallowed_method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9da2946d81a973b3c25aa5f4739ac7e05c27278/tests%2Fui%2Fdisallowed_method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdisallowed_method.stderr?ref=f9da2946d81a973b3c25aa5f4739ac7e05c27278", "patch": "@@ -1,22 +0,0 @@\n-error: use of a disallowed method `disallowed_method::Baz::bad_method`\n-  --> $DIR/disallowed_method.rs:48:5\n-   |\n-LL |     b.bad_method();\n-   |     ^^^^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::disallowed-method` implied by `-D warnings`\n-\n-error: use of a disallowed method `disallowed_method::Baz::bad_method`\n-  --> $DIR/disallowed_method.rs:49:5\n-   |\n-LL |     c.bad_method();\n-   |     ^^^^^^^^^^^^^^\n-\n-error: use of a disallowed method `disallowed_method::Foo::bad_method`\n-  --> $DIR/disallowed_method.rs:50:5\n-   |\n-LL |     f.bad_method();\n-   |     ^^^^^^^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-"}]}