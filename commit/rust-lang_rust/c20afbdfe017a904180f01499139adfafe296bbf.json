{"sha": "c20afbdfe017a904180f01499139adfafe296bbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMGFmYmRmZTAxN2E5MDQxODBmMDE0OTkxMzlhZGZhZmUyOTZiYmY=", "commit": {"author": {"name": "Marcin Serwin", "email": "toxyxer@gmail.com", "date": "2020-04-15T16:37:37Z"}, "committer": {"name": "Marcin Serwin", "email": "toxyxer@gmail.com", "date": "2020-04-16T06:00:32Z"}, "message": "Lint map_flatten if caller is an Option", "tree": {"sha": "7a9c390b14746d026b78b903a3e300b65d08920d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a9c390b14746d026b78b903a3e300b65d08920d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c20afbdfe017a904180f01499139adfafe296bbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c20afbdfe017a904180f01499139adfafe296bbf", "html_url": "https://github.com/rust-lang/rust/commit/c20afbdfe017a904180f01499139adfafe296bbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c20afbdfe017a904180f01499139adfafe296bbf/comments", "author": {"login": "marcin-serwin", "id": 12128106, "node_id": "MDQ6VXNlcjEyMTI4MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/12128106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcin-serwin", "html_url": "https://github.com/marcin-serwin", "followers_url": "https://api.github.com/users/marcin-serwin/followers", "following_url": "https://api.github.com/users/marcin-serwin/following{/other_user}", "gists_url": "https://api.github.com/users/marcin-serwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcin-serwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcin-serwin/subscriptions", "organizations_url": "https://api.github.com/users/marcin-serwin/orgs", "repos_url": "https://api.github.com/users/marcin-serwin/repos", "events_url": "https://api.github.com/users/marcin-serwin/events{/privacy}", "received_events_url": "https://api.github.com/users/marcin-serwin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcin-serwin", "id": 12128106, "node_id": "MDQ6VXNlcjEyMTI4MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/12128106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcin-serwin", "html_url": "https://github.com/marcin-serwin", "followers_url": "https://api.github.com/users/marcin-serwin/followers", "following_url": "https://api.github.com/users/marcin-serwin/following{/other_user}", "gists_url": "https://api.github.com/users/marcin-serwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcin-serwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcin-serwin/subscriptions", "organizations_url": "https://api.github.com/users/marcin-serwin/orgs", "repos_url": "https://api.github.com/users/marcin-serwin/repos", "events_url": "https://api.github.com/users/marcin-serwin/events{/privacy}", "received_events_url": "https://api.github.com/users/marcin-serwin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1765c5da908a676215184f94e8021b3c37a10980", "url": "https://api.github.com/repos/rust-lang/rust/commits/1765c5da908a676215184f94e8021b3c37a10980", "html_url": "https://github.com/rust-lang/rust/commit/1765c5da908a676215184f94e8021b3c37a10980"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "608b351c3e1f55526cda89719aa610aff90c5361", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c20afbdfe017a904180f01499139adfafe296bbf/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c20afbdfe017a904180f01499139adfafe296bbf/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=c20afbdfe017a904180f01499139adfafe296bbf", "patch": "@@ -2484,7 +2484,7 @@ fn lint_ok_expect(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, ok_args: &[hir\n     }\n }\n \n-/// lint use of `map().flatten()` for `Iterators`\n+/// lint use of `map().flatten()` for `Iterators` and 'Options'\n fn lint_map_flatten<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr<'_>, map_args: &'tcx [hir::Expr<'_>]) {\n     // lint if caller of `.map().flatten()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n@@ -2503,6 +2503,24 @@ fn lint_map_flatten<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr<\n             Applicability::MachineApplicable,\n         );\n     }\n+\n+    // lint if caller of `.map().flatten()` is an Option\n+    if match_type(cx, cx.tables.expr_ty(&map_args[0]), &paths::OPTION) {\n+        let msg = \"called `map(..).flatten()` on an `Option`. \\\n+                    This is more succinctly expressed by calling `.and_then(..)`\";\n+        let self_snippet = snippet(cx, map_args[0].span, \"..\");\n+        let func_snippet = snippet(cx, map_args[1].span, \"..\");\n+        let hint = format!(\"{0}.and_then({1})\", self_snippet, func_snippet);\n+        span_lint_and_sugg(\n+            cx,\n+            MAP_FLATTEN,\n+            expr.span,\n+            msg,\n+            \"try using `and_then` instead\",\n+            hint,\n+            Applicability::MachineApplicable,\n+        );\n+    }\n }\n \n /// lint use of `map().unwrap_or_else()` for `Option`s and `Result`s"}]}