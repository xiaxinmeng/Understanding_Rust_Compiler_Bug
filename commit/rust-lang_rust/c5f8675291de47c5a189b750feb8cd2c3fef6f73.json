{"sha": "c5f8675291de47c5a189b750feb8cd2c3fef6f73", "node_id": "C_kwDOAAsO6NoAKGM1Zjg2NzUyOTFkZTQ3YzVhMTg5Yjc1MGZlYjhjZDJjM2ZlZjZmNzM", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-09-30T02:33:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-30T02:33:39Z"}, "message": "Rollup merge of #89311 - FabianWolff:issue-89305, r=oli-obk\n\nAdd unit assignment to MIR for `asm!()`\n\nFixes #89305. `ExprKind::LlvmInlineAsm` gets a `push_assign_unit()` here:\nhttps://github.com/rust-lang/rust/blob/2b6ed3b675475abc01ce7e68bb75b457f0c85684/compiler/rustc_mir_build/src/build/expr/into.rs#L475-L479\n\nThe same should probably happen for `ExprKind::InlineAsm`, which fixes the \"use of possibly-uninitialized variable\" error described in #89305.", "tree": {"sha": "ded416035cfedbef2b5a38990a41c7023d293c4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded416035cfedbef2b5a38990a41c7023d293c4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f8675291de47c5a189b750feb8cd2c3fef6f73", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVSIECRBK7hj4Ov3rIwAAjHMIAEh/glkqlPpxCdmFdzRBW/va\nzXeopusy37l4vBshAnZRCq2o6/b2aJ/2qRF4kMWzQ5Ve1FRrql6twvHvqebEjKC9\nMGmjOO7GrNQ3NDApTlfXK6UVV1VKDfQcy6rIvJEQ6E19NB37KrJcbG7c5vjb1T7M\nis0jWSPr8A97rgteUrFl52rdSAJbC2d8xGJaoFKufLLz/d5EPYd2gDZIMk1pT25l\nBnPag+Q45lPS6kn2IPa3x9HIwXDoIJe0db/7kklfZrzDyF37PvDQLmjVpOUdxPGo\nHfW+dZkb8x4z7DDzvUEZYJlsqazd8RXVmCm/+ykn9a29WFusIr9puBMjmy7srU4=\n=RoG8\n-----END PGP SIGNATURE-----\n", "payload": "tree ded416035cfedbef2b5a38990a41c7023d293c4b\nparent 8dfe52293a61aaa4ff44b20d538c52ddc7834617\nparent cd0873b50276bca8bfcaf8d12beeb28d3fffb692\nauthor Eric Huss <eric@huss.org> 1632969219 -0700\ncommitter GitHub <noreply@github.com> 1632969219 -0700\n\nRollup merge of #89311 - FabianWolff:issue-89305, r=oli-obk\n\nAdd unit assignment to MIR for `asm!()`\n\nFixes #89305. `ExprKind::LlvmInlineAsm` gets a `push_assign_unit()` here:\nhttps://github.com/rust-lang/rust/blob/2b6ed3b675475abc01ce7e68bb75b457f0c85684/compiler/rustc_mir_build/src/build/expr/into.rs#L475-L479\n\nThe same should probably happen for `ExprKind::InlineAsm`, which fixes the \"use of possibly-uninitialized variable\" error described in #89305.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f8675291de47c5a189b750feb8cd2c3fef6f73", "html_url": "https://github.com/rust-lang/rust/commit/c5f8675291de47c5a189b750feb8cd2c3fef6f73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f8675291de47c5a189b750feb8cd2c3fef6f73/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dfe52293a61aaa4ff44b20d538c52ddc7834617", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfe52293a61aaa4ff44b20d538c52ddc7834617", "html_url": "https://github.com/rust-lang/rust/commit/8dfe52293a61aaa4ff44b20d538c52ddc7834617"}, {"sha": "cd0873b50276bca8bfcaf8d12beeb28d3fffb692", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0873b50276bca8bfcaf8d12beeb28d3fffb692", "html_url": "https://github.com/rust-lang/rust/commit/cd0873b50276bca8bfcaf8d12beeb28d3fffb692"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "53868f285576392751518368d4168bfe39dd81a1", "filename": "compiler/rustc_mir_build/src/build/expr/into.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c5f8675291de47c5a189b750feb8cd2c3fef6f73/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f8675291de47c5a189b750feb8cd2c3fef6f73/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs?ref=c5f8675291de47c5a189b750feb8cd2c3fef6f73", "patch": "@@ -449,8 +449,11 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     })\n                     .collect();\n \n-                let destination = this.cfg.start_new_block();\n+                if !options.contains(InlineAsmOptions::NORETURN) {\n+                    this.cfg.push_assign_unit(block, source_info, destination, this.tcx);\n+                }\n \n+                let destination_block = this.cfg.start_new_block();\n                 this.cfg.terminate(\n                     block,\n                     source_info,\n@@ -462,11 +465,11 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         destination: if options.contains(InlineAsmOptions::NORETURN) {\n                             None\n                         } else {\n-                            Some(destination)\n+                            Some(destination_block)\n                         },\n                     },\n                 );\n-                destination.unit()\n+                destination_block.unit()\n             }\n \n             // These cases don't actually need a destination"}, {"sha": "bdcf3f305ebb18cc6841ff79ad59cd70000c747c", "filename": "src/test/ui/asm/issue-89305.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c5f8675291de47c5a189b750feb8cd2c3fef6f73/src%2Ftest%2Fui%2Fasm%2Fissue-89305.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f8675291de47c5a189b750feb8cd2c3fef6f73/src%2Ftest%2Fui%2Fasm%2Fissue-89305.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-89305.rs?ref=c5f8675291de47c5a189b750feb8cd2c3fef6f73", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for #89305, where a variable was erroneously reported\n+// as both unused and possibly-uninitialized.\n+\n+// check-pass\n+\n+#![feature(asm)]\n+#![warn(unused)]\n+\n+fn main() {\n+    unsafe {\n+        let x: () = asm!(\"nop\");\n+        //~^ WARNING: unused variable: `x`\n+    }\n+}"}, {"sha": "9cc127b44d008765b7a841efca42ab93d68f91f0", "filename": "src/test/ui/asm/issue-89305.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c5f8675291de47c5a189b750feb8cd2c3fef6f73/src%2Ftest%2Fui%2Fasm%2Fissue-89305.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5f8675291de47c5a189b750feb8cd2c3fef6f73/src%2Ftest%2Fui%2Fasm%2Fissue-89305.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-89305.stderr?ref=c5f8675291de47c5a189b750feb8cd2c3fef6f73", "patch": "@@ -0,0 +1,15 @@\n+warning: unused variable: `x`\n+  --> $DIR/issue-89305.rs:11:13\n+   |\n+LL |         let x: () = asm!(\"nop\");\n+   |             ^ help: if this is intentional, prefix it with an underscore: `_x`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-89305.rs:7:9\n+   |\n+LL | #![warn(unused)]\n+   |         ^^^^^^\n+   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`\n+\n+warning: 1 warning emitted\n+"}]}