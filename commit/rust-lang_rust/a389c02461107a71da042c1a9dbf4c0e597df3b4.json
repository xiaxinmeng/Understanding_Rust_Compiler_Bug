{"sha": "a389c02461107a71da042c1a9dbf4c0e597df3b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzODljMDI0NjExMDdhNzFkYTA0MmMxYTlkYmY0YzBlNTk3ZGYzYjQ=", "commit": {"author": {"name": "boolean_coercion", "email": "booleancoercion@gmail.com", "date": "2021-02-11T10:30:23Z"}, "committer": {"name": "boolean_coercion", "email": "booleancoercion@gmail.com", "date": "2021-02-12T09:54:22Z"}, "message": "from_str_radix_10 should be done", "tree": {"sha": "9121a5e576f8e1db04005668df1ab033281c3adc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9121a5e576f8e1db04005668df1ab033281c3adc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a389c02461107a71da042c1a9dbf4c0e597df3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a389c02461107a71da042c1a9dbf4c0e597df3b4", "html_url": "https://github.com/rust-lang/rust/commit/a389c02461107a71da042c1a9dbf4c0e597df3b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a389c02461107a71da042c1a9dbf4c0e597df3b4/comments", "author": {"login": "booleancoercion", "id": 33005025, "node_id": "MDQ6VXNlcjMzMDA1MDI1", "avatar_url": "https://avatars.githubusercontent.com/u/33005025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/booleancoercion", "html_url": "https://github.com/booleancoercion", "followers_url": "https://api.github.com/users/booleancoercion/followers", "following_url": "https://api.github.com/users/booleancoercion/following{/other_user}", "gists_url": "https://api.github.com/users/booleancoercion/gists{/gist_id}", "starred_url": "https://api.github.com/users/booleancoercion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/booleancoercion/subscriptions", "organizations_url": "https://api.github.com/users/booleancoercion/orgs", "repos_url": "https://api.github.com/users/booleancoercion/repos", "events_url": "https://api.github.com/users/booleancoercion/events{/privacy}", "received_events_url": "https://api.github.com/users/booleancoercion/received_events", "type": "User", "site_admin": false}, "committer": {"login": "booleancoercion", "id": 33005025, "node_id": "MDQ6VXNlcjMzMDA1MDI1", "avatar_url": "https://avatars.githubusercontent.com/u/33005025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/booleancoercion", "html_url": "https://github.com/booleancoercion", "followers_url": "https://api.github.com/users/booleancoercion/followers", "following_url": "https://api.github.com/users/booleancoercion/following{/other_user}", "gists_url": "https://api.github.com/users/booleancoercion/gists{/gist_id}", "starred_url": "https://api.github.com/users/booleancoercion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/booleancoercion/subscriptions", "organizations_url": "https://api.github.com/users/booleancoercion/orgs", "repos_url": "https://api.github.com/users/booleancoercion/repos", "events_url": "https://api.github.com/users/booleancoercion/events{/privacy}", "received_events_url": "https://api.github.com/users/booleancoercion/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64729390a1b2b6b05f8a4407658163ddff4d017e", "url": "https://api.github.com/repos/rust-lang/rust/commits/64729390a1b2b6b05f8a4407658163ddff4d017e", "html_url": "https://github.com/rust-lang/rust/commit/64729390a1b2b6b05f8a4407658163ddff4d017e"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "57661e0f9bcaa58c861c7f43a929b2ad41521751", "filename": "clippy_lints/src/from_str_radix_10.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a389c02461107a71da042c1a9dbf4c0e597df3b4/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a389c02461107a71da042c1a9dbf4c0e597df3b4/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs?ref=a389c02461107a71da042c1a9dbf4c0e597df3b4", "patch": "@@ -52,18 +52,20 @@ impl LateLintPass<'tcx> for FromStrRadix10 {\n             // function `from_str_radix`\n             if pathseg.ident.name.as_str() == \"from_str_radix\";\n \n-            // check if the second argument resolves to a constant `10`\n+            // check if the second argument is a primitive `10`\n             if arguments.len() == 2;\n-            if is_constant_10(&arguments[1]);\n+            if let ExprKind::Lit(lit) = &arguments[1].kind;\n+            if let rustc_ast::ast::LitKind::Int(10, _) = lit.node;\n \n             then {\n+                let orig_string = crate::utils::snippet(cx, arguments[0].span, \"string\");\n                 span_lint_and_sugg(\n                     cx,\n                     FROM_STR_RADIX_10,\n                     exp.span,\n                     \"This call to `from_str_radix` can be shortened to a call to str::parse\",\n                     \"try\",\n-                    format!(\"TODO\"),\n+                    format!(\"({}).parse()\", orig_string),\n                     Applicability::MachineApplicable\n                 );\n             }\n@@ -77,9 +79,4 @@ fn is_primitive_integer_ty(ty: PrimTy) -> bool {\n         PrimTy::Uint(_) => true,\n         _ => false\n     }\n-}\n-\n-fn is_constant_10<'tcx>(expr: &Expr<'tcx>) -> bool {\n-    // TODO\n-    true\n }\n\\ No newline at end of file"}]}