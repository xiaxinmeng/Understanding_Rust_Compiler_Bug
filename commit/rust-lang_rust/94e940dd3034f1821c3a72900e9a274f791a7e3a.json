{"sha": "94e940dd3034f1821c3a72900e9a274f791a7e3a", "node_id": "C_kwDOAAsO6NoAKDk0ZTk0MGRkMzAzNGYxODIxYzNhNzI5MDBlOWEyNzRmNzkxYTdlM2E", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-29T14:51:52Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-30T17:21:44Z"}, "message": "Collect `panic/panic_bounds_check` during monomorphization", "tree": {"sha": "b3e307c9c625436ca2f01883e56498a9b10c2ba2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3e307c9c625436ca2f01883e56498a9b10c2ba2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e940dd3034f1821c3a72900e9a274f791a7e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e940dd3034f1821c3a72900e9a274f791a7e3a", "html_url": "https://github.com/rust-lang/rust/commit/94e940dd3034f1821c3a72900e9a274f791a7e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e940dd3034f1821c3a72900e9a274f791a7e3a/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd757b9e0622815be615addb3031770922b87874", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd757b9e0622815be615addb3031770922b87874", "html_url": "https://github.com/rust-lang/rust/commit/dd757b9e0622815be615addb3031770922b87874"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "59988e69b5d3a0d3af3dc8c516c459fd19391af0", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/94e940dd3034f1821c3a72900e9a274f791a7e3a/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e940dd3034f1821c3a72900e9a274f791a7e3a/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=94e940dd3034f1821c3a72900e9a274f791a7e3a", "patch": "@@ -806,13 +806,22 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                     }\n                 }\n             }\n+            mir::TerminatorKind::Assert { ref msg, .. } => {\n+                let lang_item = match msg {\n+                    mir::AssertKind::BoundsCheck { .. } => LangItem::PanicBoundsCheck,\n+                    _ => LangItem::Panic,\n+                };\n+                let instance = Instance::mono(tcx, tcx.require_lang_item(lang_item, Some(source)));\n+                if should_codegen_locally(tcx, &instance) {\n+                    self.output.push(create_fn_mono_item(tcx, instance, source));\n+                }\n+            }\n             mir::TerminatorKind::Goto { .. }\n             | mir::TerminatorKind::SwitchInt { .. }\n             | mir::TerminatorKind::Resume\n             | mir::TerminatorKind::Abort\n             | mir::TerminatorKind::Return\n-            | mir::TerminatorKind::Unreachable\n-            | mir::TerminatorKind::Assert { .. } => {}\n+            | mir::TerminatorKind::Unreachable => {}\n             mir::TerminatorKind::GeneratorDrop\n             | mir::TerminatorKind::Yield { .. }\n             | mir::TerminatorKind::FalseEdge { .. }"}, {"sha": "abec7ad50aed6c4ec9f1abc1e5a75b4be2d16129", "filename": "src/test/codegen-units/item-collection/implicit-panic-call.rs", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/94e940dd3034f1821c3a72900e9a274f791a7e3a/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fimplicit-panic-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e940dd3034f1821c3a72900e9a274f791a7e3a/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fimplicit-panic-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fimplicit-panic-call.rs?ref=94e940dd3034f1821c3a72900e9a274f791a7e3a", "patch": "@@ -0,0 +1,58 @@\n+// compile-flags:-Zprint-mono-items=lazy\n+\n+// rust-lang/rust#90405\n+// Ensure implicit panic calls are collected\n+\n+#![feature(lang_items)]\n+#![feature(no_core)]\n+#![crate_type = \"lib\"]\n+#![no_core]\n+#![no_std]\n+\n+#[lang = \"panic_location\"]\n+struct Location<'a> {\n+    _file: &'a str,\n+    _line: u32,\n+    _col: u32,\n+}\n+\n+#[lang = \"panic\"]\n+#[inline]\n+#[track_caller]\n+fn panic(_: &'static str) -> ! {\n+    loop {}\n+}\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n+#[lang = \"freeze\"]\n+trait Freeze {}\n+\n+impl Copy for i32 {}\n+\n+#[lang = \"div\"]\n+trait Div<Rhs = Self> {\n+    type Output;\n+    fn div(self, rhs: Rhs) -> Self::Output;\n+}\n+\n+impl Div for i32 {\n+    type Output = i32;\n+    fn div(self, rhs: i32) -> i32 {\n+        self / rhs\n+    }\n+}\n+\n+#[allow(unconditional_panic)]\n+pub fn foo() {\n+    // This implicitly generates a panic call.\n+    let _ = 1 / 0;\n+}\n+\n+//~ MONO_ITEM fn foo\n+//~ MONO_ITEM fn <i32 as Div>::div\n+//~ MONO_ITEM fn panic"}]}