{"sha": "6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlM2IxZDYzYjY0NDVjYjU1ZDc1YjFjMzYwZTk5NzUyZTdjMWZiOTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T14:29:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-21T14:29:44Z"}, "message": "Rollup merge of #67393 - michaelwoerister:llvm-args-override, r=varkor\n\nEnable opting out of specific default LLVM arguments.\n\n`rustc` by default adds a few arguments to LLVM (like `-mergefunc-use-aliases` for example). With this PR `rustc` will only emit these arguments if the same argument has not already been specified by the user via `-Cllvm-args`. This enables opting out of these defaults.\n\nThe PR also removes a PGO specific `-Z` flag the effect of which can also be easily achieved by `-Cllvm-args`.\n\nFixes https://github.com/rust-lang/rust/issues/64310.", "tree": {"sha": "70bf2dfe7adb3d84ccfc3ec5eb45deac01e873d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70bf2dfe7adb3d84ccfc3ec5eb45deac01e873d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/ixYCRBK7hj4Ov3rIwAAdHIIAHee3fQXQ2oqulj89rHmwbsJ\nQBM+u5n0pZM/HuKOmywT4irI3HNsKYZIsBl22AE4w+l3fm+jDXbh+l6+zPEcowMR\nmMQg0X23qGl/jAJVM/4MzRH7KAHA/8aTLs8wLv21ymi3ZFDdTq6JRcxMbpVZV8Qf\nhM+GtxMQEJLN7js0BOTYURh0OYWdxMncsC+ZCPtSAmJHBnOtXqb/JVB2GpgceTRc\n4VCcvS6JTU1VtRrr9Zgel1cSvyUFZLJN1uFt+pbUhxTIYJ2DfHCB07BwTQz1llOL\n2iy/pcDmtLjGH3hm4yiOr1YQot7OFiHjVxsZ4cnIu0X69EWGfsm1otQ6kiJSffE=\n=zo8h\n-----END PGP SIGNATURE-----\n", "payload": "tree 70bf2dfe7adb3d84ccfc3ec5eb45deac01e873d2\nparent c0bf3afc96246ddefd3bcecc77c62bed1f00f14e\nparent 1ca145c3b5b7bc8907ff6f176df2b5687a8ea85f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576938584 +0100\ncommitter GitHub <noreply@github.com> 1576938584 +0100\n\nRollup merge of #67393 - michaelwoerister:llvm-args-override, r=varkor\n\nEnable opting out of specific default LLVM arguments.\n\n`rustc` by default adds a few arguments to LLVM (like `-mergefunc-use-aliases` for example). With this PR `rustc` will only emit these arguments if the same argument has not already been specified by the user via `-Cllvm-args`. This enables opting out of these defaults.\n\nThe PR also removes a PGO specific `-Z` flag the effect of which can also be easily achieved by `-Cllvm-args`.\n\nFixes https://github.com/rust-lang/rust/issues/64310.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "html_url": "https://github.com/rust-lang/rust/commit/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0bf3afc96246ddefd3bcecc77c62bed1f00f14e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0bf3afc96246ddefd3bcecc77c62bed1f00f14e", "html_url": "https://github.com/rust-lang/rust/commit/c0bf3afc96246ddefd3bcecc77c62bed1f00f14e"}, {"sha": "1ca145c3b5b7bc8907ff6f176df2b5687a8ea85f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca145c3b5b7bc8907ff6f176df2b5687a8ea85f", "html_url": "https://github.com/rust-lang/rust/commit/1ca145c3b5b7bc8907ff6f176df2b5687a8ea85f"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "3145b0df63b8ae6c8c00077ea45e211e97e5892c", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "patch": "@@ -3,6 +3,7 @@ use crate::llvm;\n use syntax_pos::symbol::Symbol;\n use rustc::session::Session;\n use rustc::session::config::PrintRequest;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_target::spec::{MergeFunctions, PanicStrategy};\n use libc::c_int;\n use std::ffi::CString;\n@@ -51,43 +52,60 @@ unsafe fn configure_llvm(sess: &Session) {\n \n     llvm::LLVMRustInstallFatalErrorHandler();\n \n+    fn llvm_arg_to_arg_name(full_arg: &str) -> &str {\n+        full_arg.trim().split(|c: char| {\n+            c == '=' || c.is_whitespace()\n+        }).next().unwrap_or(\"\")\n+    }\n+\n+    let user_specified_args: FxHashSet<_> = sess\n+        .opts\n+        .cg\n+        .llvm_args\n+        .iter()\n+        .map(|s| llvm_arg_to_arg_name(s))\n+        .filter(|s| s.len() > 0)\n+        .collect();\n+\n     {\n-        let mut add = |arg: &str| {\n-            let s = CString::new(arg).unwrap();\n-            llvm_args.push(s.as_ptr());\n-            llvm_c_strs.push(s);\n+        // This adds the given argument to LLVM. Unless `force` is true\n+        // user specified arguments are *not* overridden.\n+        let mut add = |arg: &str, force: bool| {\n+            if force || !user_specified_args.contains(llvm_arg_to_arg_name(arg)) {\n+                let s = CString::new(arg).unwrap();\n+                llvm_args.push(s.as_ptr());\n+                llvm_c_strs.push(s);\n+            }\n         };\n-        add(\"rustc\"); // fake program name\n-        if sess.time_llvm_passes() { add(\"-time-passes\"); }\n-        if sess.print_llvm_passes() { add(\"-debug-pass=Structure\"); }\n-        if sess.opts.debugging_opts.disable_instrumentation_preinliner {\n-            add(\"-disable-preinline\");\n-        }\n+        add(\"rustc\", true); // fake program name\n+        if sess.time_llvm_passes() { add(\"-time-passes\", false); }\n+        if sess.print_llvm_passes() { add(\"-debug-pass=Structure\", false); }\n+\n         if sess.opts.debugging_opts.generate_arange_section {\n-            add(\"-generate-arange-section\");\n+            add(\"-generate-arange-section\", false);\n         }\n         if get_major_version() >= 8 {\n             match sess.opts.debugging_opts.merge_functions\n                   .unwrap_or(sess.target.target.options.merge_functions) {\n                 MergeFunctions::Disabled |\n                 MergeFunctions::Trampolines => {}\n                 MergeFunctions::Aliases => {\n-                    add(\"-mergefunc-use-aliases\");\n+                    add(\"-mergefunc-use-aliases\", false);\n                 }\n             }\n         }\n \n         if sess.target.target.target_os == \"emscripten\" &&\n             sess.panic_strategy() == PanicStrategy::Unwind {\n-            add(\"-enable-emscripten-cxx-exceptions\");\n+            add(\"-enable-emscripten-cxx-exceptions\", false);\n         }\n \n         // HACK(eddyb) LLVM inserts `llvm.assume` calls to preserve align attributes\n         // during inlining. Unfortunately these may block other optimizations.\n-        add(\"-preserve-alignment-assumptions-during-inlining=false\");\n+        add(\"-preserve-alignment-assumptions-during-inlining=false\", false);\n \n         for arg in &sess.opts.cg.llvm_args {\n-            add(&(*arg));\n+            add(&(*arg), true);\n         }\n     }\n "}, {"sha": "2f2d03fc596e48e6fadc6ebf647b64d876925bb8", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "patch": "@@ -866,8 +866,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"extra arguments to prepend to the linker invocation (space separated)\"),\n     profile: bool = (false, parse_bool, [TRACKED],\n                      \"insert profiling code\"),\n-    disable_instrumentation_preinliner: bool = (false, parse_bool, [TRACKED],\n-        \"Disable the instrumentation pre-inliner, useful for profiling / PGO.\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],"}]}