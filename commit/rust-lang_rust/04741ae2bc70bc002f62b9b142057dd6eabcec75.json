{"sha": "04741ae2bc70bc002f62b9b142057dd6eabcec75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NzQxYWUyYmM3MGJjMDAyZjYyYjliMTQyMDU3ZGQ2ZWFiY2VjNzU=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-10T21:50:53Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-10T21:50:53Z"}, "message": "Use `original_file` instead of `as_original_file`", "tree": {"sha": "8176e932390fd55de30c85c66d3fad54f1da47de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8176e932390fd55de30c85c66d3fad54f1da47de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04741ae2bc70bc002f62b9b142057dd6eabcec75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04741ae2bc70bc002f62b9b142057dd6eabcec75", "html_url": "https://github.com/rust-lang/rust/commit/04741ae2bc70bc002f62b9b142057dd6eabcec75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04741ae2bc70bc002f62b9b142057dd6eabcec75/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4c506f338d03a633419459bb32daf331153d5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b4c506f338d03a633419459bb32daf331153d5e", "html_url": "https://github.com/rust-lang/rust/commit/3b4c506f338d03a633419459bb32daf331153d5e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5cb67fb95bab2f298bf215914b698828dd0fc2b6", "filename": "crates/ra_ide_api/src/display/navigation_target.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04741ae2bc70bc002f62b9b142057dd6eabcec75/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04741ae2bc70bc002f62b9b142057dd6eabcec75/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=04741ae2bc70bc002f62b9b142057dd6eabcec75", "patch": "@@ -119,7 +119,7 @@ impl NavigationTarget {\n \n     pub(crate) fn from_module(db: &RootDatabase, module: hir::Module) -> NavigationTarget {\n         let src = module.definition_source(db);\n-        let file_id = src.file_id.as_original_file();\n+        let file_id = src.file_id.original_file(db);\n         let name = module.name(db).map(|it| it.to_string().into()).unwrap_or_default();\n         match src.ast {\n             ModuleSource::SourceFile(node) => {\n@@ -139,7 +139,7 @@ impl NavigationTarget {\n     pub(crate) fn from_module_to_decl(db: &RootDatabase, module: hir::Module) -> NavigationTarget {\n         let name = module.name(db).map(|it| it.to_string().into()).unwrap_or_default();\n         if let Some(src) = module.declaration_source(db) {\n-            let file_id = src.file_id.as_original_file();\n+            let file_id = src.file_id.original_file(db);\n             return NavigationTarget::from_syntax(\n                 file_id,\n                 name,\n@@ -213,7 +213,7 @@ impl NavigationTarget {\n     ) -> NavigationTarget {\n         let src = impl_block.source(db);\n         NavigationTarget::from_syntax(\n-            src.file_id.as_original_file(),\n+            src.file_id.original_file(db),\n             \"impl\".into(),\n             None,\n             src.ast.syntax(),"}, {"sha": "c95c47bf1e82abc1574c34a3be6d749479153002", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04741ae2bc70bc002f62b9b142057dd6eabcec75/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04741ae2bc70bc002f62b9b142057dd6eabcec75/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=04741ae2bc70bc002f62b9b142057dd6eabcec75", "patch": "@@ -140,7 +140,7 @@ fn rename_mod(\n     let module_src = hir::Source { file_id: position.file_id.into(), ast: ast_module.clone() };\n     if let Some(module) = hir::Module::from_declaration(db, module_src) {\n         let src = module.definition_source(db);\n-        let file_id = src.file_id.as_original_file();\n+        let file_id = src.file_id.original_file(db);\n         match src.ast {\n             ModuleSource::SourceFile(..) => {\n                 let mod_path: RelativePathBuf = db.file_relative_path(file_id);"}]}