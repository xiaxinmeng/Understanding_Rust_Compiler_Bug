{"sha": "e759db361ef36423933fab6d5e1af9a7eb2de7d8", "node_id": "C_kwDOAAsO6NoAKGU3NTlkYjM2MWVmMzY0MjM5MzNmYWI2ZDVlMWFmOWE3ZWIyZGU3ZDg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-23T10:21:46Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-23T10:21:46Z"}, "message": "Resolve functions as proc-macros via FileAstId", "tree": {"sha": "6242e05503f2663db27b361019daf4bcb938de92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6242e05503f2663db27b361019daf4bcb938de92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e759db361ef36423933fab6d5e1af9a7eb2de7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e759db361ef36423933fab6d5e1af9a7eb2de7d8", "html_url": "https://github.com/rust-lang/rust/commit/e759db361ef36423933fab6d5e1af9a7eb2de7d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e759db361ef36423933fab6d5e1af9a7eb2de7d8/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "217f356541a314c8afde7999d4fb145a3c65790e", "url": "https://api.github.com/repos/rust-lang/rust/commits/217f356541a314c8afde7999d4fb145a3c65790e", "html_url": "https://github.com/rust-lang/rust/commit/217f356541a314c8afde7999d4fb145a3c65790e"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "f41e7ee4c4cbf01bdbcee23d768084e0b2311abd", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e759db361ef36423933fab6d5e1af9a7eb2de7d8/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e759db361ef36423933fab6d5e1af9a7eb2de7d8/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=e759db361ef36423933fab6d5e1af9a7eb2de7d8", "patch": "@@ -1388,9 +1388,13 @@ impl Function {\n         let loc = self.id.lookup(db.upcast());\n         let krate = loc.krate(db);\n         let def_map = db.crate_def_map(krate.into());\n-        let name = &function_data.name;\n+        let ast_id =\n+            InFile::new(loc.id.file_id(), loc.id.item_tree(db.upcast())[loc.id.value].ast_id);\n+\n         let mut exported_proc_macros = def_map.exported_proc_macros();\n-        exported_proc_macros.find(|(_, mac_name)| mac_name == name).map(|(id, _)| MacroDef { id })\n+        exported_proc_macros\n+            .find(|&(id, _)| matches!(id.kind, MacroDefKind::ProcMacro(_, _, id) if id == ast_id))\n+            .map(|(id, _)| MacroDef { id })\n     }\n \n     /// A textual representation of the HIR of this function for debugging purposes."}, {"sha": "c3ac84e58c6fb3311728f27c2e8c42e06e3dc975", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e759db361ef36423933fab6d5e1af9a7eb2de7d8/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e759db361ef36423933fab6d5e1af9a7eb2de7d8/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=e759db361ef36423933fab6d5e1af9a7eb2de7d8", "patch": "@@ -1536,19 +1536,21 @@ trait Trait {\n         )\n     }\n \n+    // FIXME: import is classified as function\n     #[test]\n     fn attr() {\n         check(\n             r#\"\n //- proc_macros: identity\n+use proc_macros::identity;\n \n #[proc_macros::$0identity]\n fn func() {}\n \"#,\n             expect![[r#\"\n                 identity Attribute FileId(1) 1..107 32..40\n \n-                FileId(0) 16..24\n+                FileId(0) 43..51\n             \"#]],\n         );\n         check(\n@@ -1564,21 +1566,52 @@ fn func$0() {}\n         );\n     }\n \n+    // FIXME: import is classified as function\n+    #[test]\n+    fn proc_macro() {\n+        check(\n+            r#\"\n+//- proc_macros: mirror\n+use proc_macros::mirror;\n+\n+mirror$0! {}\n+\"#,\n+            expect![[r#\"\n+                mirror Macro FileId(1) 1..77 22..28\n+\n+                FileId(0) 26..32\n+            \"#]],\n+        )\n+    }\n+\n     #[test]\n     fn derive() {\n         check(\n             r#\"\n //- proc_macros: derive_identity\n //- minicore: derive\n+use proc_macros::DeriveIdentity;\n \n #[derive(proc_macros::DeriveIdentity$0)]\n struct Foo;\n \"#,\n             expect![[r#\"\n                 derive_identity Derive FileId(2) 1..107 45..60\n \n-                FileId(0) 23..37\n+                FileId(0) 17..31\n+                FileId(0) 56..70\n             \"#]],\n-        )\n+        );\n+        check(\n+            r#\"\n+#[proc_macro_derive(Derive, attributes(x))]\n+pub fn deri$0ve(_stream: TokenStream) -> TokenStream {}\n+\"#,\n+            expect![[r#\"\n+                derive Derive FileId(0) 0..97 51..57\n+\n+                (no references)\n+            \"#]],\n+        );\n     }\n }"}]}