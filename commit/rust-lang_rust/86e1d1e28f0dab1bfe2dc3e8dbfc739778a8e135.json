{"sha": "86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "node_id": "C_kwDOAAsO6NoAKDg2ZTFkMWUyOGYwZGFiMWJmZTJkYzNlOGRiZmM3Mzk3NzhhOGUxMzU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-14T04:06:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-14T04:06:51Z"}, "message": "Rollup merge of #100446 - TaKO8Ki:suggest-removing-semicolon-after-impl-trait-items, r=compiler-errors\n\nSuggest removing a semicolon after impl/trait items\n\nfixes #99822", "tree": {"sha": "9316f6886d681f1ef44e82bcf16148338eec3691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9316f6886d681f1ef44e82bcf16148338eec3691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi+HTbCRBK7hj4Ov3rIwAAXlEIAFRr18VgWQEWWeSW1GVISJQ6\n+rNO0t0BA7T4la23Z0juTST89y2+uHs61Swu5ZznRcmpq0cCqHmVtp6IpxKYUiiE\nrkQmHRUMyaQZCC1e0enqwdvm1GJs4la9X1RF33jM1mtVvotpN+cEcB1pGv5tan0M\nlBCXo/RorAgzVgyxK7m7/h/swrdXqHARz6i1JQP2moCQIhqwGLbsXk2EweBntCxP\nU0XG14P7bxV1Cwry42Q78lhzzEJam1RdLS5z+MTED+Ado+rwCR+n2gBBledkXzD3\nYt6pvbGXKSulpmi2t0RYOG9aKaTJo8zPJOwHoRYwJZnaQKt/N6kG2hQdhJ8gj08=\n=XBC0\n-----END PGP SIGNATURE-----\n", "payload": "tree 9316f6886d681f1ef44e82bcf16148338eec3691\nparent d46451ce2c75dd0757916b87eb6522fb3739d6ef\nparent d47df26784355eaa4006eee60f262c6035fea307\nauthor Michael Goulet <michael@errs.io> 1660450011 -0700\ncommitter GitHub <noreply@github.com> 1660450011 -0700\n\nRollup merge of #100446 - TaKO8Ki:suggest-removing-semicolon-after-impl-trait-items, r=compiler-errors\n\nSuggest removing a semicolon after impl/trait items\n\nfixes #99822\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "html_url": "https://github.com/rust-lang/rust/commit/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d46451ce2c75dd0757916b87eb6522fb3739d6ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/d46451ce2c75dd0757916b87eb6522fb3739d6ef", "html_url": "https://github.com/rust-lang/rust/commit/d46451ce2c75dd0757916b87eb6522fb3739d6ef"}, {"sha": "d47df26784355eaa4006eee60f262c6035fea307", "url": "https://api.github.com/repos/rust-lang/rust/commits/d47df26784355eaa4006eee60f262c6035fea307", "html_url": "https://github.com/rust-lang/rust/commit/d47df26784355eaa4006eee60f262c6035fea307"}], "stats": {"total": 67, "additions": 63, "deletions": 4}, "files": [{"sha": "c6dd5e7fda30ce2a3579de6645cd25b20bcb9372", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "patch": "@@ -675,14 +675,44 @@ impl<'a> Parser<'a> {\n             }\n             match parse_item(self) {\n                 Ok(None) => {\n+                    let is_unnecessary_semicolon = !items.is_empty()\n+                        // When the close delim is `)` in a case like the following, `token.kind` is expected to be `token::CloseDelim(Delimiter::Parenthesis)`,\n+                        // but the actual `token.kind` is `token::CloseDelim(Delimiter::Bracket)`.\n+                        // This is because the `token.kind` of the close delim is treated as the same as\n+                        // that of the open delim in `TokenTreesReader::parse_token_tree`, even if the delimiters of them are different.\n+                        // Therefore, `token.kind` should not be compared here.\n+                        //\n+                        // issue-60075.rs\n+                        // ```\n+                        // trait T {\n+                        //     fn qux() -> Option<usize> {\n+                        //         let _ = if true {\n+                        //         });\n+                        //          ^ this close delim\n+                        //         Some(4)\n+                        //     }\n+                        // ```\n+                        && self\n+                            .span_to_snippet(self.prev_token.span)\n+                            .map_or(false, |snippet| snippet == \"}\")\n+                        && self.token.kind == token::Semi;\n+                    let semicolon_span = self.token.span;\n                     // We have to bail or we'll potentially never make progress.\n                     let non_item_span = self.token.span;\n                     self.consume_block(Delimiter::Brace, ConsumeClosingDelim::Yes);\n-                    self.struct_span_err(non_item_span, \"non-item in item list\")\n-                        .span_label(open_brace_span, \"item list starts here\")\n+                    let mut err = self.struct_span_err(non_item_span, \"non-item in item list\");\n+                    err.span_label(open_brace_span, \"item list starts here\")\n                         .span_label(non_item_span, \"non-item starts here\")\n-                        .span_label(self.prev_token.span, \"item list ends here\")\n-                        .emit();\n+                        .span_label(self.prev_token.span, \"item list ends here\");\n+                    if is_unnecessary_semicolon {\n+                        err.span_suggestion(\n+                            semicolon_span,\n+                            \"consider removing this semicolon\",\n+                            \"\",\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+                    err.emit();\n                     break;\n                 }\n                 Ok(Some(item)) => items.extend(item),"}, {"sha": "63704735490faa9890e37d9ec496ac3085b6e985", "filename": "src/test/ui/parser/suggest-removing-semicolon-after-impl-trait-items.fixed", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.fixed?ref=86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "patch": "@@ -0,0 +1,7 @@\n+// run-rustfix\n+\n+trait Foo {\n+    fn bar() {} //~ ERROR non-item in item list\n+}\n+\n+fn main() {}"}, {"sha": "4650b05e20ce8852e5688087707d0cb9fd981e7e", "filename": "src/test/ui/parser/suggest-removing-semicolon-after-impl-trait-items.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.rs?ref=86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "patch": "@@ -0,0 +1,7 @@\n+// run-rustfix\n+\n+trait Foo {\n+    fn bar() {}; //~ ERROR non-item in item list\n+}\n+\n+fn main() {}"}, {"sha": "396e0c130f11b1222c119932894530188f0de6c4", "filename": "src/test/ui/parser/suggest-removing-semicolon-after-impl-trait-items.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fsuggest-removing-semicolon-after-impl-trait-items.stderr?ref=86e1d1e28f0dab1bfe2dc3e8dbfc739778a8e135", "patch": "@@ -0,0 +1,15 @@\n+error: non-item in item list\n+  --> $DIR/suggest-removing-semicolon-after-impl-trait-items.rs:4:16\n+   |\n+LL | trait Foo {\n+   |           - item list starts here\n+LL |     fn bar() {};\n+   |                ^\n+   |                |\n+   |                non-item starts here\n+   |                help: consider removing this semicolon\n+LL | }\n+   | - item list ends here\n+\n+error: aborting due to previous error\n+"}]}