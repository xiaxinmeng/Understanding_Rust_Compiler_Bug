{"sha": "0bb9bdf8e337b494c5ea385a309425c46f6aa383", "node_id": "C_kwDOAAsO6NoAKDBiYjliZGY4ZTMzN2I0OTRjNWVhMzg1YTMwOTQyNWM0NmY2YWEzODM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-09-05T15:31:14Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-09-05T15:31:14Z"}, "message": "Use value_lane instead of value_field in simd/llvm.rs", "tree": {"sha": "7730d2285e7fade18bec76ff7581511695647227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7730d2285e7fade18bec76ff7581511695647227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb9bdf8e337b494c5ea385a309425c46f6aa383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb9bdf8e337b494c5ea385a309425c46f6aa383", "html_url": "https://github.com/rust-lang/rust/commit/0bb9bdf8e337b494c5ea385a309425c46f6aa383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb9bdf8e337b494c5ea385a309425c46f6aa383/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c393c78ede150fbdf693e23689d472fc54bfa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c393c78ede150fbdf693e23689d472fc54bfa6", "html_url": "https://github.com/rust-lang/rust/commit/c4c393c78ede150fbdf693e23689d472fc54bfa6"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "783d426c30bcc0d14cf94bb658b854e1e4b337fb", "filename": "src/intrinsics/llvm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0bb9bdf8e337b494c5ea385a309425c46f6aa383/src%2Fintrinsics%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb9bdf8e337b494c5ea385a309425c46f6aa383/src%2Fintrinsics%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm.rs?ref=0bb9bdf8e337b494c5ea385a309425c46f6aa383", "patch": "@@ -29,8 +29,7 @@ pub(crate) fn codegen_llvm_intrinsic_call<'tcx>(\n             let mut res = fx.bcx.ins().iconst(types::I32, 0);\n \n             for lane in (0..lane_count).rev() {\n-                let a_lane =\n-                    a.value_field(fx, mir::Field::new(lane.try_into().unwrap())).load_scalar(fx);\n+                let a_lane = a.value_lane(fx, lane).load_scalar(fx);\n \n                 // cast float to int\n                 let a_lane = match lane_ty {"}]}