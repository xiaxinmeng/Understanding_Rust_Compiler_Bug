{"sha": "fb98796892db43ed5db3d38edea5146a4cadcacc", "node_id": "C_kwDOAAsO6NoAKGZiOTg3OTY4OTJkYjQzZWQ1ZGIzZDM4ZWRlYTUxNDZhNGNhZGNhY2M", "commit": {"author": {"name": "Albert Larsan", "email": "74931857+albertlarsan68@users.noreply.github.com", "date": "2022-11-11T09:53:58Z"}, "committer": {"name": "Albert Larsan", "email": "74931857+albertlarsan68@users.noreply.github.com", "date": "2022-11-11T10:14:09Z"}, "message": "Apply suggestions", "tree": {"sha": "b3b096ca6bd0b504437f761c61b43e0703542b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b096ca6bd0b504437f761c61b43e0703542b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb98796892db43ed5db3d38edea5146a4cadcacc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECtuvMkQcAKCG3qpZknCbiLuPE+oFAmNuIJ8ACgkQknCbiLuP\nE+oTeg//bGmdoEpJ4lSTHGXrsgZQiDFeHiFyKnOmxJeTqSSHAAq48tv0n96ANlaW\nqIbZ5ey8ojPwbB/IoPUNQW0j0aD3kvBmmHq3g9zPQN9TYJUuvLiImaAPX3am1eNo\njMP4bi3zwEvSb6FCX9j/ZIAm//dhl/ZkHid2RO7d9ik4q20seJshTwwjBgTeOrmU\np8dM/VugHWCvcFbTAIjFRZgFUIat9P9G7oHdHf563faJD7DRDTDovxxHDZ2+G+dx\ncDYJRiWtqqSL3gByOWWwbjc75Bm4T8BOdfhEoscLs7KhVuRjjTryzZw3u46iuJRU\nC86rMIDwqxiJRfJcJu4hOFq2hpWnM8Ox6rzDbfN3GJnEyKSNxzi0YOmmM3dGmJB8\nOCXWK6hpgoAhl1tCIXCLofoOoqug8IcPOOvNHvVXzhIFG68YhTIbYu+ArYHToxHX\n+POCbTLKVWP+Bz4V8fVz6yfIKn4beHptweSn0q5KRTTPGjOK/0e+axJkRg3isGtN\nBJt4m6b+gwqG1XZFenYdmk5ZgZJeZ9sg5lL/h2eSvXLgLwhp+ce7dDU3pY3Z7P1E\nxJNMKv3/0HwV52aaYthstwWvbvwQNQP60vz9r/jWV51R5lFfY8I32CQAVrn74zRP\nds4+RlHMWDghOjWJxmBR0hzFp44uD81PQW71lgcnv6xU0MQhrqQ=\n=/d00\n-----END PGP SIGNATURE-----", "payload": "tree b3b096ca6bd0b504437f761c61b43e0703542b70\nparent d85b61460aeff77ad149741ea14b80880a2c48a6\nauthor Albert Larsan <74931857+albertlarsan68@users.noreply.github.com> 1668160438 +0100\ncommitter Albert Larsan <74931857+albertlarsan68@users.noreply.github.com> 1668161649 +0100\n\nApply suggestions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb98796892db43ed5db3d38edea5146a4cadcacc", "html_url": "https://github.com/rust-lang/rust/commit/fb98796892db43ed5db3d38edea5146a4cadcacc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb98796892db43ed5db3d38edea5146a4cadcacc/comments", "author": {"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}, "committer": {"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85b61460aeff77ad149741ea14b80880a2c48a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d85b61460aeff77ad149741ea14b80880a2c48a6", "html_url": "https://github.com/rust-lang/rust/commit/d85b61460aeff77ad149741ea14b80880a2c48a6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1d20bdddf08523ecbbb77c89a806ad6c44cbee3e", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb98796892db43ed5db3d38edea5146a4cadcacc/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb98796892db43ed5db3d38edea5146a4cadcacc/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=fb98796892db43ed5db3d38edea5146a4cadcacc", "patch": "@@ -107,9 +107,9 @@ macro_rules! int_impl {\n \n         /// Returns the number of leading zeros in the binary representation of `self`.\n         ///\n-        /// The\n+        /// Depending on what you're doing with the value, you might also be interested in the\n         #[doc = concat!(\"[`\", stringify!($SelfTy), \"::ilog2()`]\")]\n-        /// function returns a consistent number, even if the type widens.\n+        /// function which returns a consistent number, even if the type widens.\n         ///\n         /// # Examples\n         ///"}, {"sha": "e5f8e26f2862f21d4b0c8e793fbdf7ff1706b280", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb98796892db43ed5db3d38edea5146a4cadcacc/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb98796892db43ed5db3d38edea5146a4cadcacc/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=fb98796892db43ed5db3d38edea5146a4cadcacc", "patch": "@@ -109,9 +109,9 @@ macro_rules! uint_impl {\n \n         /// Returns the number of leading zeros in the binary representation of `self`.\n         ///\n-        /// The\n+        /// Depending on what you're doing with the value, you might also be interested in the\n         #[doc = concat!(\"[`\", stringify!($SelfTy), \"::ilog2()`]\")]\n-        /// function returns a consistent number, even if the type widens.\n+        /// function which returns a consistent number, even if the type widens.\n         ///\n         /// # Examples\n         ///"}]}