{"sha": "fcbdf08a86216291ff747500b7cfe4d11feb92ad", "node_id": "C_kwDOAAsO6NoAKGZjYmRmMDhhODYyMTYyOTFmZjc0NzUwMGI3Y2ZlNGQxMWZlYjkyYWQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-09T23:08:42Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-10T02:57:56Z"}, "message": "Add regression test for #93205\n\nThis issue was most likely fixed by #93805.", "tree": {"sha": "7dddadc826c2a6d3a07a08ccab96d8ca612f2d5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dddadc826c2a6d3a07a08ccab96d8ca612f2d5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcbdf08a86216291ff747500b7cfe4d11feb92ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcbdf08a86216291ff747500b7cfe4d11feb92ad", "html_url": "https://github.com/rust-lang/rust/commit/fcbdf08a86216291ff747500b7cfe4d11feb92ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcbdf08a86216291ff747500b7cfe4d11feb92ad/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93ab13b4e894ab74258c40aaf29872db2b17b6b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/93ab13b4e894ab74258c40aaf29872db2b17b6b4", "html_url": "https://github.com/rust-lang/rust/commit/93ab13b4e894ab74258c40aaf29872db2b17b6b4"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "c1dda3b4c6cfe7f4f2372ae38d7c22e5d4d98a1a", "filename": "src/test/rustdoc/intra-doc/assoc-reexport-super.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fcbdf08a86216291ff747500b7cfe4d11feb92ad/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassoc-reexport-super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcbdf08a86216291ff747500b7cfe4d11feb92ad/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassoc-reexport-super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassoc-reexport-super.rs?ref=fcbdf08a86216291ff747500b7cfe4d11feb92ad", "patch": "@@ -0,0 +1,20 @@\n+// Regression test for #93205\n+\n+#![crate_name = \"foo\"]\n+\n+mod generated {\n+    pub struct MyNewType;\n+    impl MyNewType {\n+        pub const FOO: Self = Self;\n+    }\n+}\n+\n+pub use generated::MyNewType;\n+\n+mod prelude {\n+    impl super::MyNewType {\n+        /// An alias for [`Self::FOO`].\n+        // @has 'foo/struct.MyNewType.html' '//a[@href=\"struct.MyNewType.html#associatedconstant.FOO\"]'\n+        pub const FOO2: Self = Self::FOO;\n+    }\n+}"}]}