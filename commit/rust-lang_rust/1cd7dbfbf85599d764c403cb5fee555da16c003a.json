{"sha": "1cd7dbfbf85599d764c403cb5fee555da16c003a", "node_id": "C_kwDOAAsO6NoAKDFjZDdkYmZiZjg1NTk5ZDc2NGM0MDNjYjVmZWU1NTVkYTE2YzAwM2E", "commit": {"author": {"name": "Michal Rostecki", "email": "vadorovsky@gmail.com", "date": "2023-01-16T11:13:52Z"}, "committer": {"name": "Michal Rostecki", "email": "vadorovsky@gmail.com", "date": "2023-01-25T02:44:03Z"}, "message": "Add `target_has_atomic*` symbols if any atomic width is supported\n\nAtomic operations for different widths (8-bit, 16-bit, 32-bit etc.) are\nguarded by `target_has_atomic = \"value\"` symbol (i.e. `target_has_atomic\n= \"8\"`) (and the other derivatives), but before this change, there was\nno width-agnostic symbol indicating a general availability of atomic\noperations.\n\nThis change introduces:\n\n* `target_has_atomic_load_store` symbol when atomics for any integer\n  width are supported by the target.\n* `target_has_atomic` symbol when also CAS is supported.\n\nFixes #106845\n\nSigned-off-by: Michal Rostecki <vadorovsky@gmail.com>", "tree": {"sha": "61351af86b24a69da06cbd6c2f0428ef65bb215c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61351af86b24a69da06cbd6c2f0428ef65bb215c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cd7dbfbf85599d764c403cb5fee555da16c003a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd7dbfbf85599d764c403cb5fee555da16c003a", "html_url": "https://github.com/rust-lang/rust/commit/1cd7dbfbf85599d764c403cb5fee555da16c003a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cd7dbfbf85599d764c403cb5fee555da16c003a/comments", "author": {"login": "vadorovsky", "id": 34685103, "node_id": "MDQ6VXNlcjM0Njg1MTAz", "avatar_url": "https://avatars.githubusercontent.com/u/34685103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadorovsky", "html_url": "https://github.com/vadorovsky", "followers_url": "https://api.github.com/users/vadorovsky/followers", "following_url": "https://api.github.com/users/vadorovsky/following{/other_user}", "gists_url": "https://api.github.com/users/vadorovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadorovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadorovsky/subscriptions", "organizations_url": "https://api.github.com/users/vadorovsky/orgs", "repos_url": "https://api.github.com/users/vadorovsky/repos", "events_url": "https://api.github.com/users/vadorovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/vadorovsky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadorovsky", "id": 34685103, "node_id": "MDQ6VXNlcjM0Njg1MTAz", "avatar_url": "https://avatars.githubusercontent.com/u/34685103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadorovsky", "html_url": "https://github.com/vadorovsky", "followers_url": "https://api.github.com/users/vadorovsky/followers", "following_url": "https://api.github.com/users/vadorovsky/following{/other_user}", "gists_url": "https://api.github.com/users/vadorovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadorovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadorovsky/subscriptions", "organizations_url": "https://api.github.com/users/vadorovsky/orgs", "repos_url": "https://api.github.com/users/vadorovsky/repos", "events_url": "https://api.github.com/users/vadorovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/vadorovsky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e6a9e8b6251bbc8276cb78cabe1998deecbed7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e6a9e8b6251bbc8276cb78cabe1998deecbed7", "html_url": "https://github.com/rust-lang/rust/commit/c8e6a9e8b6251bbc8276cb78cabe1998deecbed7"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "09bd474688bf2874ba0a3e7ae1a00e0d57d51e1f", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cd7dbfbf85599d764c403cb5fee555da16c003a/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cd7dbfbf85599d764c403cb5fee555da16c003a/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=1cd7dbfbf85599d764c403cb5fee555da16c003a", "patch": "@@ -957,6 +957,7 @@ fn default_configuration(sess: &Session) -> CrateConfig {\n     if sess.target.has_thread_local {\n         ret.insert((sym::target_thread_local, None));\n     }\n+    let mut has_atomic = false;\n     for (i, align) in [\n         (8, layout.i8_align.abi),\n         (16, layout.i16_align.abi),\n@@ -965,6 +966,7 @@ fn default_configuration(sess: &Session) -> CrateConfig {\n         (128, layout.i128_align.abi),\n     ] {\n         if i >= min_atomic_width && i <= max_atomic_width {\n+            has_atomic = true;\n             let mut insert_atomic = |s, align: Align| {\n                 ret.insert((sym::target_has_atomic_load_store, Some(Symbol::intern(s))));\n                 if atomic_cas {\n@@ -981,6 +983,12 @@ fn default_configuration(sess: &Session) -> CrateConfig {\n             }\n         }\n     }\n+    if sess.is_nightly_build() && has_atomic {\n+        ret.insert((sym::target_has_atomic_load_store, None));\n+        if atomic_cas {\n+            ret.insert((sym::target_has_atomic, None));\n+        }\n+    }\n \n     let panic_strategy = sess.panic_strategy();\n     ret.insert((sym::panic, Some(panic_strategy.desc_symbol())));"}]}