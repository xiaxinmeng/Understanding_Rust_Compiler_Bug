{"sha": "a8088220937764db329135b3e778de935a9abbb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MDg4MjIwOTM3NzY0ZGIzMjkxMzViM2U3NzhkZTkzNWE5YWJiYjI=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-10T17:04:16Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-10T17:12:01Z"}, "message": "Simplify lower ast block", "tree": {"sha": "d86fda38c044b686a1f3d806cd159a81af443aec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d86fda38c044b686a1f3d806cd159a81af443aec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8088220937764db329135b3e778de935a9abbb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8088220937764db329135b3e778de935a9abbb2", "html_url": "https://github.com/rust-lang/rust/commit/a8088220937764db329135b3e778de935a9abbb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8088220937764db329135b3e778de935a9abbb2/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4d9624242df6bfe6c0a298867dd2bd527263424", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4d9624242df6bfe6c0a298867dd2bd527263424", "html_url": "https://github.com/rust-lang/rust/commit/a4d9624242df6bfe6c0a298867dd2bd527263424"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "3a97321ceb69195276e05ee0d843f97f4a7bb47f", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a8088220937764db329135b3e778de935a9abbb2/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8088220937764db329135b3e778de935a9abbb2/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=a8088220937764db329135b3e778de935a9abbb2", "patch": "@@ -2409,26 +2409,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     }\n \n     fn lower_block_noalloc(&mut self, b: &Block, targeted_by_break: bool) -> hir::Block<'hir> {\n-        let mut expr: Option<&'hir _> = None;\n-\n-        let stmts = self.arena.alloc_from_iter(\n-            b.stmts\n-                .iter()\n-                .enumerate()\n-                .filter_map(|(index, stmt)| {\n-                    if index == b.stmts.len() - 1 {\n-                        if let StmtKind::Expr(ref e) = stmt.kind {\n-                            expr = Some(self.lower_expr(e));\n-                            None\n-                        } else {\n-                            Some(self.lower_stmt(stmt))\n-                        }\n-                    } else {\n-                        Some(self.lower_stmt(stmt))\n-                    }\n-                })\n-                .flatten(),\n-        );\n+        let (stmts, expr) = match &*b.stmts {\n+            [stmts @ .., Stmt { kind: StmtKind::Expr(e), .. }] => (stmts, Some(&*e)),\n+            stmts => (stmts, None),\n+        };\n+        let stmts = self.arena.alloc_from_iter(stmts.iter().flat_map(|stmt| self.lower_stmt(stmt)));\n+        let expr = expr.map(|e| self.lower_expr(e));\n         let rules = self.lower_block_check_mode(&b.rules);\n         let hir_id = self.lower_node_id(b.id);\n "}]}