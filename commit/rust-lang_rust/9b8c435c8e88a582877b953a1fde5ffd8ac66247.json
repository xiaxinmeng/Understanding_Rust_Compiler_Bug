{"sha": "9b8c435c8e88a582877b953a1fde5ffd8ac66247", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOGM0MzVjOGU4OGE1ODI4NzdiOTUzYTFmZGU1ZmZkOGFjNjYyNDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-30T22:02:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-30T22:02:52Z"}, "message": "More 0.7 release notes", "tree": {"sha": "4a54011b41466f503b87e1415feb0867e9da69ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a54011b41466f503b87e1415feb0867e9da69ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b8c435c8e88a582877b953a1fde5ffd8ac66247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b8c435c8e88a582877b953a1fde5ffd8ac66247", "html_url": "https://github.com/rust-lang/rust/commit/9b8c435c8e88a582877b953a1fde5ffd8ac66247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b8c435c8e88a582877b953a1fde5ffd8ac66247/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca835f482cebcd353db789e45f9cec72db1a24ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca835f482cebcd353db789e45f9cec72db1a24ed", "html_url": "https://github.com/rust-lang/rust/commit/ca835f482cebcd353db789e45f9cec72db1a24ed"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "33f749d001033650d5b87d4fda5f258b83922334", "filename": "RELEASES.txt", "status": "modified", "additions": 35, "deletions": 30, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/9b8c435c8e88a582877b953a1fde5ffd8ac66247/RELEASES.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9b8c435c8e88a582877b953a1fde5ffd8ac66247/RELEASES.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.txt?ref=9b8c435c8e88a582877b953a1fde5ffd8ac66247", "patch": "@@ -1,54 +1,56 @@\n Version 0.7 (July 2013)\n -----------------------\n \n-   * ??? changes, numerous bugfixes\n+   * ~2000 changes, numerous bugfixes\n \n-   * Syntax changes\n+   * Language\n       * `impl`s no longer accept a visibility qualifier. Put them on methods\n         instead.\n-      * `use mod` is no longer valid.\n-      * `fail!` and `assert!` accept `~str`, `&'static str` or `fmt!`-style\n-        argument list.\n-      * `Encodable`, `Decodable`, `Ord`, `TotalOrd`, `TotalEq`, `DeepClone`,\n-        `Rand`, `Zero` and `ToStr` can all be automatically derived with\n-        `#[deriving(...)]`.\n-      * The `Durable` trait is replaced with the `'static` bounds.\n-      * At long last, 'argument modes' no longer exist.\n-      * The `bytes!` macro returns a vector of bytes for string, u8, char,\n-        and unsuffixed integer literals.\n-      * `#[static_assert]` makes compile-time assertions about static bools.\n-\n-   * Semantic changes\n       * The borrow checker has been rewritten with flow-sensitivity, fixing\n         many bugs and inconveniences.\n       * The `self` parameter no longer implicitly means `&'self self`,\n         and can be explicitly marked with a lifetime.\n-      * Structs with the `#[packed]` attribute have byte alignment and\n-        no padding between fields.\n+      * Overloadable compound operators (`+=`, etc.) have been temporarily\n+        removed due to bugs.\n       * The `for` loop protocol now requires `for`-iterators to return `bool`\n         so they compose better.\n+      * The `Durable` trait is replaced with the `'static` bounds.\n       * Trait default methods work more often.\n+      * Structs with the `#[packed]` attribute have byte alignment and\n+        no padding between fields.\n       * Type parameters bound by `Copy` must now be copied explicitly with\n         the `copy` keyword.\n       * It is now illegal to move out of a dereferenced unsafe pointer.\n       * `Option<~T>` is now represented as a nullable pointer.\n       * `@mut` does dynamic borrow checks correctly.\n-      * Macros TODO\n       * The `main` function is only detected at the topmost level of the crate.\n         The `#[main]` attribute is still valid anywhere.\n       * Struct fields may no longer be mutable. Use inherited mutability.\n-      * The `#[non_owned]` attribute makes a type that would otherwise be\n-        `Owned`, not. TODO this may change to non_send before 0.7\n-      * The `#[mutable]` attribute makes a type that would otherwise be\n-        `Const`, note. TODO this may change to non_freeze before 0.7\n+      * The `#[no_send]` attribute makes a type that would otherwise be\n+        `Send`, not.\n+      * The `#[no_freeze]` attribute makes a type that would otherwise be\n+        `Freeze`, not.\n       * Unbounded recursion will abort the process after reaching the limit\n         specified by the `RUST_MAX_STACK` environment variable (default: 1GB).\n       * The `vecs_implicitly_copyable` lint mode has been removed. Vectors\n         are never implicitly copyable.\n+      * `#[static_assert]` makes compile-time assertions about static bools.\n+      * At long last, 'argument modes' no longer exist.\n+      * The rarely used `use mod` statement no longer exists.\n+\n+   * Syntax extensions\n+      * `fail!` and `assert!` accept `~str`, `&'static str` or `fmt!`-style\n+        argument list.\n+      * `Encodable`, `Decodable`, `Ord`, `TotalOrd`, `TotalEq`, `DeepClone`,\n+        `Rand`, `Zero` and `ToStr` can all be automatically derived with\n+        `#[deriving(...)]`.\n+      * The `bytes!` macro returns a vector of bytes for string, u8, char,\n+        and unsuffixed integer literals.\n \n    * Libraries\n       * The `core` crate was renamed to `std`.\n       * The `std` crate was renamed to `extra`.\n+      * More and improved documentation.\n       * std: `iterator` module for external iterator objects.\n       * Many old-style (internal, higher-order function) iterators replaced by\n         implementations of `Iterator`.\n@@ -91,8 +93,16 @@ Version 0.7 (July 2013)\n       * extra: Implementation of fixed output size variations of SHA-2.\n \n    * Tooling\n-      * `unused_unsafe` lint mode for detecting unnecessary `unsafe` blocks.\n-      * `unused_mut` lint mode for identifying unused `mut` qualifiers.\n+      * `unused_variable`  lint mode for unused variables (default: warn).\n+      * `unused_unsafe` lint mode for detecting unnecessary `unsafe` blocks\n+        (default: warn).\n+      * `unused_mut` lint mode for identifying unused `mut` qualifiers\n+        (default: warn).\n+      * `dead_assignment` lint mode for unread variables (default: warn).\n+      * `unnecessary_allocation` lint mode detects some heap allocations that are\n+        immediately borrowed so could be written without allocating (default: warn).\n+      * `missing_doc` lint mode (default: allow).\n+      * `unreachable_code` lint mode (default: warn).\n       * The `rusti` command has been rewritten and a number of bugs addressed.\n       * rustc outputs in color on more terminals.\n       * rustc accepts a `--link-args` flag to pass arguments to the linker.\n@@ -101,12 +111,7 @@ Version 0.7 (July 2013)\n         dynamic borrowcheck failures for debugging.\n       * rustdoc has a nicer stylesheet.\n       * Various improvements to rustdoc.\n-      * Improvements to rustpkg (see the detailed release notes)\n-\n-   * Other\n-      * More and improved library documentation.\n-      * Various improvements on ARM and Android.\n-      * Various improvements to MIPS backend.\n+      * Improvements to rustpkg (see the detailed release notes).\n \n Version 0.6 (April 2013)\n ------------------------"}]}