{"sha": "745361d17d348013a554c5019b4d0c5cf17aa1de", "node_id": "C_kwDOAAsO6NoAKDc0NTM2MWQxN2QzNDgwMTNhNTU0YzUwMTliNGQwYzVjZjE3YWExZGU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-11T05:45:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-11T05:45:57Z"}, "message": "Rollup merge of #107888 - lcnr:opaque-ty-validate, r=wesleywiser\n\nrevert #107074, add regression test\n\nfixes #107346", "tree": {"sha": "b01799bc4a5d9eb188c04bfabde41e350af58484", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b01799bc4a5d9eb188c04bfabde41e350af58484"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/745361d17d348013a554c5019b4d0c5cf17aa1de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5yuVCRBK7hj4Ov3rIwAABXkIADntpcmJ/yNt8Q7AvFSCo5tM\nZNnP7I88oBRC6GR8NMqiaHSQiYeohuj4jxsMLVNctrEv27W9jVLt3lPRvVx5Nncm\nl7xIBegQDi/oX5DvRpybRlasOADlln/rtuODTRJKXGYPojnByAziB53ARi+LIy5w\ng1Ac45yX8qe9yHG9hXwlELezMjQTlpRAuhA9vH0299sYQ2t+YSqlvNM0azCxRhat\n3238gfEbr1LHLLaBgA0t6zP9YSKV//eYP9MZjXVmceTlWnLPmm6AAcLgNFNY12Uh\nSKqln2h/LhjPOH4/S1JF7sAtcz20VXV7GAxDXV0nFPQRETuLI/7/hbFR2q730Nw=\n=c9z5\n-----END PGP SIGNATURE-----\n", "payload": "tree b01799bc4a5d9eb188c04bfabde41e350af58484\nparent dfc242220f28827b184ef7f3f028de3f0c52208c\nparent 3a72238aa6c78d071f4b10d60c76550ccea6493f\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1676094357 +0530\ncommitter GitHub <noreply@github.com> 1676094357 +0530\n\nRollup merge of #107888 - lcnr:opaque-ty-validate, r=wesleywiser\n\nrevert #107074, add regression test\n\nfixes #107346\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/745361d17d348013a554c5019b4d0c5cf17aa1de", "html_url": "https://github.com/rust-lang/rust/commit/745361d17d348013a554c5019b4d0c5cf17aa1de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/745361d17d348013a554c5019b4d0c5cf17aa1de/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfc242220f28827b184ef7f3f028de3f0c52208c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc242220f28827b184ef7f3f028de3f0c52208c", "html_url": "https://github.com/rust-lang/rust/commit/dfc242220f28827b184ef7f3f028de3f0c52208c"}, {"sha": "3a72238aa6c78d071f4b10d60c76550ccea6493f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a72238aa6c78d071f4b10d60c76550ccea6493f", "html_url": "https://github.com/rust-lang/rust/commit/3a72238aa6c78d071f4b10d60c76550ccea6493f"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "56c60d59d2858676f336c247079f263ef33208f5", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/745361d17d348013a554c5019b4d0c5cf17aa1de/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/745361d17d348013a554c5019b4d0c5cf17aa1de/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=745361d17d348013a554c5019b4d0c5cf17aa1de", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::mir::{\n     RetagKind, RuntimePhase, Rvalue, SourceScope, Statement, StatementKind, Terminator,\n     TerminatorKind, UnOp, START_BLOCK,\n };\n-use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt};\n+use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeVisitable};\n use rustc_mir_dataflow::impls::MaybeStorageLive;\n use rustc_mir_dataflow::storage::always_storage_live_locals;\n use rustc_mir_dataflow::{Analysis, ResultsCursor};\n@@ -231,6 +231,15 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             return true;\n         }\n \n+        // We sometimes have to use `defining_opaque_types` for subtyping\n+        // to succeed here and figuring out how exactly that should work\n+        // is annoying. It is harmless enough to just not validate anything\n+        // in that case. We still check this after analysis as all opque\n+        // types have been revealed at this point.\n+        if (src, dest).has_opaque_types() {\n+            return true;\n+        }\n+\n         crate::util::is_subtype(self.tcx, self.param_env, src, dest)\n     }\n }"}, {"sha": "fe883ce6fc8ed3909566edc178a5cfd9ee150859", "filename": "tests/ui/impl-trait/nested-return-type2.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/745361d17d348013a554c5019b4d0c5cf17aa1de/tests%2Fui%2Fimpl-trait%2Fnested-return-type2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/745361d17d348013a554c5019b4d0c5cf17aa1de/tests%2Fui%2Fimpl-trait%2Fnested-return-type2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fnested-return-type2.rs?ref=745361d17d348013a554c5019b4d0c5cf17aa1de", "patch": "@@ -1,4 +1,7 @@\n // check-pass\n+// compile-flags: -Zvalidate-mir\n+\n+// Using -Zvalidate-mir as a regression test for #107346.\n \n trait Duh {}\n "}, {"sha": "09ad3bd05c1b3dda20e4842d09f3186cde6d8249", "filename": "tests/ui/impl-trait/nested-return-type2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/745361d17d348013a554c5019b4d0c5cf17aa1de/tests%2Fui%2Fimpl-trait%2Fnested-return-type2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/745361d17d348013a554c5019b4d0c5cf17aa1de/tests%2Fui%2Fimpl-trait%2Fnested-return-type2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fnested-return-type2.stderr?ref=745361d17d348013a554c5019b4d0c5cf17aa1de", "patch": "@@ -1,5 +1,5 @@\n warning: opaque type `impl Trait<Assoc = impl Send>` does not satisfy its associated type bounds\n-  --> $DIR/nested-return-type2.rs:25:24\n+  --> $DIR/nested-return-type2.rs:28:24\n    |\n LL |     type Assoc: Duh;\n    |                 --- this associated type bound is unsatisfied for `impl Send`"}]}