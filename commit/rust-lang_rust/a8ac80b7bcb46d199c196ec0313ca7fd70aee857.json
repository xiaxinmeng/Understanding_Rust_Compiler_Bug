{"sha": "a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YWM4MGI3YmNiNDZkMTk5YzE5NmVjMDMxM2NhN2ZkNzBhZWU4NTc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-05-22T14:09:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-05-22T14:09:25Z"}, "message": "Final cleanups\n\n* Clean up the `install-windows-build-deps.yml` file and add some more\n  comments where appropriate.\n\n* Add some comments to `run.yml`\n\n* Don't fast path the `rustfmt` submodule, but we'll take care of that\n  later if necessary.", "tree": {"sha": "abb3c7908b1ed4b3a8b561d34704e1e82621953f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abb3c7908b1ed4b3a8b561d34704e1e82621953f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "html_url": "https://github.com/rust-lang/rust/commit/a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36ee777cebd865ffd7e8223b4ae4bf533f7b476b", "url": "https://api.github.com/repos/rust-lang/rust/commits/36ee777cebd865ffd7e8223b4ae4bf533f7b476b", "html_url": "https://github.com/rust-lang/rust/commit/36ee777cebd865ffd7e8223b4ae4bf533f7b476b"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "037c8daa2a80af06a0b11aea5b6a5c4c2601f5e9", "filename": ".azure-pipelines/steps/install-windows-build-deps.yml", "status": "modified", "additions": 25, "deletions": 32, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/.azure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/.azure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml?ref=a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "patch": "@@ -1,21 +1,20 @@\n steps:\n-# FIXME: are these still needed?\n-# - bash: |\n-#     set -x\n-#     git submodule\n-#     export SUBMODULES_EXCLUDES=$(git submodule | grep -Eow 'src/[^ ]+' | sed 's/\\(.*\\)/--exclude=\\1\\/\\.git/')\n-#     echo \"##vso[task.setvariable variable=SUBMODULES_EXCLUDES;]$SUBMODULES_EXCLUDES\"\n-\n-# FIXME: needs a comment to justify its existence\n+# We've had issues with the default drive in use running out of space during a\n+# build, and it looks like the `C:` drive has more space than the default `D:`\n+# drive. We should probably confirm this with the azure pipelines team at some\n+# point, but this seems to fix our \"disk space full\" problems.\n - script: |\n-    REM echo hack as drive D is too small\n-    IF NOT \"%DISABLE_DISK_SPACE_HACK%\"==\"1\" (\n-      mkdir c:\\MORE_SPACE\n-      mklink /J build c:\\MORE_SPACE\n-    )\n+    mkdir c:\\MORE_SPACE\n+    mklink /J build c:\\MORE_SPACE\n   displayName: \"Ensure build happens on C:/ instead of D:/\"\n   condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n \n+# Download and install MSYS2, needed primarily for the test suite (run-make) but\n+# also used by the MinGW toolchain for assembling things.\n+#\n+# FIXME: we should probe the default azure image and see if we can use the MSYS2\n+# toolchain there. (if there's even one there). For now though this gets the job\n+# done.\n - script: |\n     set MSYS_PATH=%CD%\\citools\\msys64\n     choco install msys2 --params=\"/InstallDir:%MSYS_PATH% /NoPath\" -y\n@@ -37,23 +36,11 @@ steps:\n # If we need to download a custom MinGW, do so here and set the path\n # appropriately.\n #\n-# Note that this *also* means that we're not using what is typically\n-# /mingw32/bin/python2.7.exe, which is a \"correct\" python interpreter where\n-# /usr/bin/python2.7.exe is not. To ensure we use the right interpreter we\n-# move `C:\\Python27` ahead in PATH and then also make sure the `python2.7.exe`\n-# file exists in there (which it doesn't by default).\n-- script: |\n-    powershell -Command \"iwr -outf %MINGW_ARCHIVE% %MINGW_URL%/%MINGW_ARCHIVE%\"\n-    7z x -y %MINGW_ARCHIVE% > nul\n-    echo ##vso[task.prependpath]%CD%\\%MINGW_DIR%\\bin\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), ne(variables['MINGW_URL'],''))\n-  displayName: Download custom MinGW\n-\n-# Here we do a pretty heinous thing which is to mangle the MinGW installation\n-# we just had above. Currently, as of this writing, we're using MinGW-w64\n-# builds of gcc, and that's currently at 6.3.0. We use 6.3.0 as it appears to\n-# be the first version which contains a fix for #40546, builds randomly\n-# failing during LLVM due to ar.exe/ranlib.exe failures.\n+# Here we also do a pretty heinous thing which is to mangle the MinGW\n+# installation we just downloaded. Currently, as of this writing, we're using\n+# MinGW-w64 builds of gcc, and that's currently at 6.3.0. We use 6.3.0 as it\n+# appears to be the first version which contains a fix for #40546, builds\n+# randomly failing during LLVM due to ar.exe/ranlib.exe failures.\n #\n # Unfortunately, though, 6.3.0 *also* is the first version of MinGW-w64 builds\n # to contain a regression in gdb (#40184). As a result if we were to use the\n@@ -67,18 +54,24 @@ steps:\n # Note that we don't literally overwrite the gdb.exe binary because it appears\n # to just use gdborig.exe, so that's the binary we deal with instead.\n - script: |\n-    echo ON\n+    powershell -Command \"iwr -outf %MINGW_ARCHIVE% %MINGW_URL%/%MINGW_ARCHIVE%\"\n+    7z x -y %MINGW_ARCHIVE% > nul\n     powershell -Command \"iwr -outf 2017-04-20-%MSYS_BITS%bit-gdborig.exe %MINGW_URL%/2017-04-20-%MSYS_BITS%bit-gdborig.exe\"\n     mv 2017-04-20-%MSYS_BITS%bit-gdborig.exe %MINGW_DIR%\\bin\\gdborig.exe\n+    echo ##vso[task.prependpath]%CD%\\%MINGW_DIR%\\bin\n   condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), ne(variables['MINGW_URL'],''))\n-  displayName: Override with 6.3.0 gdb with 6.2.0 gdb\n+  displayName: Download custom MinGW\n \n # Otherwise pull in the MinGW installed on appveyor\n - script: |\n     echo ##vso[task.prependpath]%MSYS_PATH%\\mingw%MSYS_BITS%\\bin\n   condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['MINGW_URL'],''))\n   displayName: Add MinGW to path\n \n+# Make sure we use the native python interpreter instead of some msys equivalent\n+# one way or another. The msys interpreters seem to have weird path conversions\n+# baked in which break LLVM's build system one way or another, so let's use the\n+# native version which keeps everything as native as possible.\n - script: |\n     copy C:\\Python27amd64\\python.exe C:\\Python27amd64\\python2.7.exe\n     echo ##vso[task.prependpath]C:\\Python27amd64"}, {"sha": "47a4c183085127f2288d567d5c000cde8ecbfa15", "filename": ".azure-pipelines/steps/run.yml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/.azure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/.azure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Frun.yml?ref=a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "patch": "@@ -114,6 +114,8 @@ steps:\n     AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)\n   displayName: Run build\n \n+# If we're a deploy builder, use the `aws` command to publish everything to our\n+# bucket.\n - bash: |\n     set -e\n     if [ \"$AGENT_OS\" = \"Linux\" ]; then"}, {"sha": "3dfd3381576170b00edc3c1d851b993eb84a16e3", "filename": "src/ci/init_repo.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/src%2Fci%2Finit_repo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a8ac80b7bcb46d199c196ec0313ca7fd70aee857/src%2Fci%2Finit_repo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Finit_repo.sh?ref=a8ac80b7bcb46d199c196ec0313ca7fd70aee857", "patch": "@@ -47,7 +47,6 @@ function fetch_github_commit_archive {\n }\n \n included=\"src/llvm-project src/llvm-emscripten src/doc/book src/doc/rust-by-example\"\n-included=\"${included} src/tools/rustfmt\"\n modules=\"$(git config --file .gitmodules --get-regexp '\\.path$' | cut -d' ' -f2)\"\n modules=($modules)\n use_git=\"\""}]}