{"sha": "fb6ec38352b56250045f7450af4eb2af1a019dcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNmVjMzgzNTJiNTYyNTAwNDVmNzQ1MGFmNGViMmFmMWEwMTlkY2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-17T13:11:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-17T13:11:41Z"}, "message": "auto merge of #10998 : thestinger/rust/iter, r=alexcrichton", "tree": {"sha": "1f157ebe8c90d727988db5d1068a4415392198d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f157ebe8c90d727988db5d1068a4415392198d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb6ec38352b56250045f7450af4eb2af1a019dcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6ec38352b56250045f7450af4eb2af1a019dcd", "html_url": "https://github.com/rust-lang/rust/commit/fb6ec38352b56250045f7450af4eb2af1a019dcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb6ec38352b56250045f7450af4eb2af1a019dcd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "793eb1d38d6549e26fbf3014604c5c81e4b18c4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/793eb1d38d6549e26fbf3014604c5c81e4b18c4f", "html_url": "https://github.com/rust-lang/rust/commit/793eb1d38d6549e26fbf3014604c5c81e4b18c4f"}, {"sha": "664c9af1e968ed5734425574e9d122014679a739", "url": "https://api.github.com/repos/rust-lang/rust/commits/664c9af1e968ed5734425574e9d122014679a739", "html_url": "https://github.com/rust-lang/rust/commit/664c9af1e968ed5734425574e9d122014679a739"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "65be214c14ed5cc3f7c770fdc74cb155a6192830", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb6ec38352b56250045f7450af4eb2af1a019dcd/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb6ec38352b56250045f7450af4eb2af1a019dcd/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=fb6ec38352b56250045f7450af4eb2af1a019dcd", "patch": "@@ -2673,11 +2673,9 @@ impl<T> DoubleEndedIterator<T> for MoveIterator<T> {\n #[unsafe_destructor]\n impl<T> Drop for MoveIterator<T> {\n     fn drop(&mut self) {\n+        // destroy the remaining elements\n+        for _x in *self {}\n         unsafe {\n-            // destroy the remaining elements\n-            for x in self.iter {\n-                ptr::read_ptr(x);\n-            }\n             if owns_managed::<T>() {\n                 local_free(self.allocation as *u8 as *c_char)\n             } else {"}]}