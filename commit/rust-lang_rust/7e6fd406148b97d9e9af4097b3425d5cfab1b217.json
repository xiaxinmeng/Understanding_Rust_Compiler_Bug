{"sha": "7e6fd406148b97d9e9af4097b3425d5cfab1b217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNmZkNDA2MTQ4Yjk3ZDllOWFmNDA5N2IzNDI1ZDVjZmFiMWIyMTc=", "commit": {"author": {"name": "JohnTitor", "email": "huyuumi.dev@gmail.com", "date": "2021-03-29T18:00:25Z"}, "committer": {"name": "JohnTitor", "email": "huyuumi.dev@gmail.com", "date": "2021-03-29T18:00:25Z"}, "message": "Do not emit a suggestion that causes the E0632 error", "tree": {"sha": "73f13f73335aa8b8a4de6ac2db720b77c7009a37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73f13f73335aa8b8a4de6ac2db720b77c7009a37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e6fd406148b97d9e9af4097b3425d5cfab1b217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e6fd406148b97d9e9af4097b3425d5cfab1b217", "html_url": "https://github.com/rust-lang/rust/commit/7e6fd406148b97d9e9af4097b3425d5cfab1b217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e6fd406148b97d9e9af4097b3425d5cfab1b217/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7750402c5eaf9ed0a73cb34c8483df245c36ac7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7750402c5eaf9ed0a73cb34c8483df245c36ac7b", "html_url": "https://github.com/rust-lang/rust/commit/7750402c5eaf9ed0a73cb34c8483df245c36ac7b"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "d9a1193aac4bafc0f02516e3480ea48a2f1dd3c1", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7e6fd406148b97d9e9af4097b3425d5cfab1b217/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e6fd406148b97d9e9af4097b3425d5cfab1b217/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=7e6fd406148b97d9e9af4097b3425d5cfab1b217", "patch": "@@ -287,6 +287,7 @@ pub struct InferenceDiagnosticsData {\n pub struct InferenceDiagnosticsParentData {\n     pub prefix: &'static str,\n     pub name: String,\n+    pub def_id: DefId,\n }\n \n pub enum UnderspecifiedArgKind {\n@@ -328,6 +329,7 @@ impl InferenceDiagnosticsParentData {\n         Some(InferenceDiagnosticsParentData {\n             prefix: tcx.def_kind(parent_def_id).descr(parent_def_id),\n             name: parent_name,\n+            def_id: parent_def_id,\n         })\n     }\n }\n@@ -754,12 +756,30 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             if let (UnderspecifiedArgKind::Const { .. }, Some(parent_data)) =\n                 (&arg_data.kind, &arg_data.parent)\n             {\n-                err.span_suggestion_verbose(\n-                    span,\n-                    \"consider specifying the const argument\",\n-                    format!(\"{}::<{}>\", parent_data.name, arg_data.name),\n-                    Applicability::MaybeIncorrect,\n-                );\n+                let has_impl_trait =\n+                    self.tcx.generics_of(parent_data.def_id).params.iter().any(|param| {\n+                        matches!(\n+                            param.kind,\n+                            ty::GenericParamDefKind::Type {\n+                                synthetic: Some(\n+                                    hir::SyntheticTyParamKind::ImplTrait\n+                                        | hir::SyntheticTyParamKind::FromAttr,\n+                                ),\n+                                ..\n+                            }\n+                        )\n+                    });\n+\n+                // (#83606): Do not emit a suggestion if the parent has an `impl Trait`\n+                // as an argument otherwise it will cause the E0282 error.\n+                if !has_impl_trait {\n+                    err.span_suggestion_verbose(\n+                        span,\n+                        \"consider specifying the const argument\",\n+                        format!(\"{}::<{}>\", parent_data.name, arg_data.name),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                }\n             }\n \n             err.span_label("}, {"sha": "be56a3020cc33b911451b5aab5502272a0cc04a7", "filename": "src/test/ui/inference/issue-83606.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7e6fd406148b97d9e9af4097b3425d5cfab1b217/src%2Ftest%2Fui%2Finference%2Fissue-83606.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e6fd406148b97d9e9af4097b3425d5cfab1b217/src%2Ftest%2Fui%2Finference%2Fissue-83606.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-83606.rs?ref=7e6fd406148b97d9e9af4097b3425d5cfab1b217", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for #83606.\n+\n+fn foo<const N: usize>(_: impl std::fmt::Display) -> [usize; N] {\n+    [0; N]\n+}\n+\n+fn main() {\n+    let _ = foo(\"foo\"); //<- Do not suggest `foo::<N>(\"foo\");`!\n+    //~^ ERROR: type annotations needed for `[usize; _]`\n+}"}, {"sha": "65f3336b9358a3f205d20c617cbd9859aaefb945", "filename": "src/test/ui/inference/issue-83606.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e6fd406148b97d9e9af4097b3425d5cfab1b217/src%2Ftest%2Fui%2Finference%2Fissue-83606.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e6fd406148b97d9e9af4097b3425d5cfab1b217/src%2Ftest%2Fui%2Finference%2Fissue-83606.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-83606.stderr?ref=7e6fd406148b97d9e9af4097b3425d5cfab1b217", "patch": "@@ -0,0 +1,11 @@\n+error[E0282]: type annotations needed for `[usize; _]`\n+  --> $DIR/issue-83606.rs:8:13\n+   |\n+LL |     let _ = foo(\"foo\"); //<- Do not suggest `foo::<N>(\"foo\");`!\n+   |         -   ^^^ cannot infer the value of const parameter `N` declared on the function `foo`\n+   |         |\n+   |         consider giving this pattern the explicit type `[usize; _]`, where the type parameter `N` is specified\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}