{"sha": "4d7f866eec99d37ef9c3c548ae8916c4f5634717", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkN2Y4NjZlZWM5OWQzN2VmOWMzYzU0OGFlODkxNmM0ZjU2MzQ3MTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-08T22:05:12Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-08T22:05:12Z"}, "message": "rustc: Declare upcall_cmp_type", "tree": {"sha": "ddf3cb827ccec055b131dd64761934a0ab422ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddf3cb827ccec055b131dd64761934a0ab422ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d7f866eec99d37ef9c3c548ae8916c4f5634717", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d7f866eec99d37ef9c3c548ae8916c4f5634717", "html_url": "https://github.com/rust-lang/rust/commit/4d7f866eec99d37ef9c3c548ae8916c4f5634717", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d7f866eec99d37ef9c3c548ae8916c4f5634717/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42daeab7df3e0f883e43573389b4e3e3f31c644b", "url": "https://api.github.com/repos/rust-lang/rust/commits/42daeab7df3e0f883e43573389b4e3e3f31c644b", "html_url": "https://github.com/rust-lang/rust/commit/42daeab7df3e0f883e43573389b4e3e3f31c644b"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "9dd4e6e7decb2fde4643a2a967f96352db189bef", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4d7f866eec99d37ef9c3c548ae8916c4f5634717/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d7f866eec99d37ef9c3c548ae8916c4f5634717/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=4d7f866eec99d37ef9c3c548ae8916c4f5634717", "patch": "@@ -5,6 +5,7 @@ import middle::trans_common::T_f32;\n import middle::trans_common::T_f64;\n import middle::trans_common::T_fn;\n import middle::trans_common::T_bool;\n+import middle::trans_common::T_i1;\n import middle::trans_common::T_i8;\n import middle::trans_common::T_i32;\n import middle::trans_common::T_int;\n@@ -65,22 +66,26 @@ type upcalls =\n      ivec_resize: ValueRef,\n      ivec_spill: ValueRef,\n      ivec_resize_shared: ValueRef,\n-     ivec_spill_shared: ValueRef};\n+     ivec_spill_shared: ValueRef,\n+     cmp_type: ValueRef};\n \n fn declare_upcalls(tn: type_names, tydesc_type: TypeRef,\n                    taskptr_type: TypeRef, llmod: ModuleRef) -> @upcalls {\n-    fn decl(tn: type_names, tydesc_type: TypeRef, taskptr_type: TypeRef,\n-            llmod: ModuleRef, name: str, tys: TypeRef[], rv: TypeRef) ->\n-       ValueRef {\n-        let arg_tys: TypeRef[] = ~[taskptr_type];\n+    fn decl(tn: type_names, llmod: ModuleRef, name: str, tys: TypeRef[],\n+          rv: TypeRef) -> ValueRef {\n+        let arg_tys: TypeRef[] = ~[];\n         for t: TypeRef  in tys { arg_tys += ~[t]; }\n         let fn_ty = T_fn(arg_tys, rv);\n         ret trans::decl_cdecl_fn(llmod, \"upcall_\" + name, fn_ty);\n     }\n-    let dv = bind decl(tn, tydesc_type, taskptr_type, llmod, _, _, T_void());\n-    let d = bind decl(tn, tydesc_type, taskptr_type, llmod, _, _, _);\n-    // FIXME: Sigh:.. remove this when I fix the typechecker pushdown.\n-    // --pcwalton\n+    fn decl_with_taskptr(taskptr_type: TypeRef, tn: type_names,\n+                         llmod: ModuleRef, name: str, tys: TypeRef[],\n+                         rv: TypeRef) -> ValueRef {\n+        ret decl(tn, llmod, name, ~[taskptr_type] + tys, rv);\n+    }\n+    let dv = bind decl_with_taskptr(taskptr_type, tn, llmod, _, _, T_void());\n+    let d = bind decl_with_taskptr(taskptr_type, tn, llmod, _, _, _);\n+    let dr = bind decl(tn, llmod, _, _, _);\n \n     let empty_vec: TypeRef[] = ~[];\n     ret @{grow_task: dv(\"grow_task\", ~[T_size_t()]),\n@@ -149,7 +154,12 @@ fn declare_upcalls(tn: type_names, tydesc_type: TypeRef,\n                 T_void()),\n           ivec_spill_shared:\n               d(\"ivec_spill_shared\", ~[T_ptr(T_opaque_ivec()), T_int()],\n-                T_void())};\n+                T_void()),\n+          cmp_type:\n+              dr(\"cmp_type\", ~[T_ptr(T_i1()), taskptr_type,\n+                 T_ptr(tydesc_type), T_ptr(T_ptr(tydesc_type)),\n+                 T_ptr(T_i8()), T_ptr(T_i8()), T_int()],\n+                 T_void())};\n }\n //\n // Local Variables:"}]}