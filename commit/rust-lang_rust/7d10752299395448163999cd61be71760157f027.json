{"sha": "7d10752299395448163999cd61be71760157f027", "node_id": "C_kwDOAAsO6NoAKDdkMTA3NTIyOTkzOTU0NDgxNjM5OTljZDYxYmU3MTc2MDE1N2YwMjc", "commit": {"author": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2022-01-17T22:12:32Z"}, "committer": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2022-01-17T22:12:32Z"}, "message": "Add a test for multi-single-line comments as well", "tree": {"sha": "413c510c6223c5f0c0eb27a55768d4ad66586563", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/413c510c6223c5f0c0eb27a55768d4ad66586563"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d10752299395448163999cd61be71760157f027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d10752299395448163999cd61be71760157f027", "html_url": "https://github.com/rust-lang/rust/commit/7d10752299395448163999cd61be71760157f027", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d10752299395448163999cd61be71760157f027/comments", "author": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c866573cb4f8ec4801cf58da86f298cad2906e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c866573cb4f8ec4801cf58da86f298cad2906e6", "html_url": "https://github.com/rust-lang/rust/commit/1c866573cb4f8ec4801cf58da86f298cad2906e6"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "887319e924eb808d7e7d90b232e0134b31f7c165", "filename": "crates/ide_db/src/helpers/insert_use/tests.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7d10752299395448163999cd61be71760157f027/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d10752299395448163999cd61be71760157f027/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs?ref=7d10752299395448163999cd61be71760157f027", "patch": "@@ -401,6 +401,21 @@ use foo::bar::Baz;\"#,\n     );\n }\n \n+#[test]\n+fn inserts_after_multiple_single_line_comments() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        \"// Represents a possible license header and/or general module comments\n+// Second single-line comment\n+// Third single-line comment\",\n+        r#\"// Represents a possible license header and/or general module comments\n+// Second single-line comment\n+// Third single-line comment\n+\n+use foo::bar::Baz;\"#,\n+    );\n+}\n+\n #[test]\n fn inserts_before_single_line_item_comments() {\n     check_none("}]}