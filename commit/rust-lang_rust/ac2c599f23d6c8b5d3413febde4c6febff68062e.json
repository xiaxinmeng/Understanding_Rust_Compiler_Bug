{"sha": "ac2c599f23d6c8b5d3413febde4c6febff68062e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMmM1OTlmMjNkNmM4YjVkMzQxM2ZlYmRlNGM2ZmViZmY2ODA2MmU=", "commit": {"author": {"name": "Florian Warzecha", "email": "liketechnik@disroot.org", "date": "2020-10-23T15:54:48Z"}, "committer": {"name": "Florian Warzecha", "email": "liketechnik@disroot.org", "date": "2020-10-23T15:54:48Z"}, "message": "fix validation for rustc_allow_const_fn_unstable targets\n\nThe validation was introduced in 3a63bf02998f7b5e040a4b87e049d03ddd144f74\nwithout strict validation of functions, e. g. all function types were\nallowed.\nNow the validation only allows `const fn`s.", "tree": {"sha": "1427f2565aaee12ec3031602e51e33af1faa96f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1427f2565aaee12ec3031602e51e33af1faa96f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac2c599f23d6c8b5d3413febde4c6febff68062e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmbauVGD14yLN3Z9qS+jH2X+RDGAFAl+S/TsACgkQS+jH2X+R\nDGDrjxAAm61jXLasSSiWbEYKLeGvf8UiiCQNnP1/R8z5UyAe52qcVmuDkarME976\nfGp9glKukrIgixoOxkyRKnkpgRyi1vfXwzhcQ80/Ms/i2cvrS5e+clt+hKQSlpSN\nLdOEJcNXAqpmbMjiKT/4KwPg4zrp5eeYAZtSb5jASg4Khw2vfiZzqWbcemqD/mHh\nbdbAzPF4ynLr1Mhk64/Q3RCQtKMFz8HbfhzVZ5qficBaLn/0uUL1zxerZU7f15eF\n3M672oJ3nNRWOr0nBqBvy1C7jkW8T56SdXZ0G6YhbzKi59b5BhVaXu4csuEocrgP\ncoLaHey7WGF75IGuPesEO7t9FJhDuOq44OPXnxBkW0LYON46CUNOAzM2lGoBOMwZ\ncj6LfAn5DtXAXKZQVauH4vx6SB200JX4ox2ZOisyvEK+O1QKbLyqdVucTPd9/6ND\n88ZsPinDXidwTFPApS/lhpQabn+by1rQbR15vRznhrzq6q90AKCqr0Vo2N2n51+S\n6+mAnvYoW6ps6AtifI66cNlto0NlSHWZyJTyo3r4WfLTgbrtoWT3GJm867PeCEnP\nltILeqIttgiqlm+/OIUt4NMS+Fwb2sMI1vHz7auUhPifYa3mw3BspKamK9+ZhaAB\nWNMEeB+kXJVhiivYu4xEj8JawNr5Ksav7qgTRCJHWMP3LviE/rM=\n=dh2L\n-----END PGP SIGNATURE-----", "payload": "tree 1427f2565aaee12ec3031602e51e33af1faa96f5\nparent 13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf\nauthor Florian Warzecha <liketechnik@disroot.org> 1603468488 +0200\ncommitter Florian Warzecha <liketechnik@disroot.org> 1603468488 +0200\n\nfix validation for rustc_allow_const_fn_unstable targets\n\nThe validation was introduced in 3a63bf02998f7b5e040a4b87e049d03ddd144f74\nwithout strict validation of functions, e. g. all function types were\nallowed.\nNow the validation only allows `const fn`s.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2c599f23d6c8b5d3413febde4c6febff68062e", "html_url": "https://github.com/rust-lang/rust/commit/ac2c599f23d6c8b5d3413febde4c6febff68062e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac2c599f23d6c8b5d3413febde4c6febff68062e/comments", "author": {"login": "liketechnik", "id": 24209689, "node_id": "MDQ6VXNlcjI0MjA5Njg5", "avatar_url": "https://avatars.githubusercontent.com/u/24209689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketechnik", "html_url": "https://github.com/liketechnik", "followers_url": "https://api.github.com/users/liketechnik/followers", "following_url": "https://api.github.com/users/liketechnik/following{/other_user}", "gists_url": "https://api.github.com/users/liketechnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketechnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketechnik/subscriptions", "organizations_url": "https://api.github.com/users/liketechnik/orgs", "repos_url": "https://api.github.com/users/liketechnik/repos", "events_url": "https://api.github.com/users/liketechnik/events{/privacy}", "received_events_url": "https://api.github.com/users/liketechnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liketechnik", "id": 24209689, "node_id": "MDQ6VXNlcjI0MjA5Njg5", "avatar_url": "https://avatars.githubusercontent.com/u/24209689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketechnik", "html_url": "https://github.com/liketechnik", "followers_url": "https://api.github.com/users/liketechnik/followers", "following_url": "https://api.github.com/users/liketechnik/following{/other_user}", "gists_url": "https://api.github.com/users/liketechnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketechnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketechnik/subscriptions", "organizations_url": "https://api.github.com/users/liketechnik/orgs", "repos_url": "https://api.github.com/users/liketechnik/repos", "events_url": "https://api.github.com/users/liketechnik/events{/privacy}", "received_events_url": "https://api.github.com/users/liketechnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "html_url": "https://github.com/rust-lang/rust/commit/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "920c69cb619b5c8decb52f92af68d3427f8413a6", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac2c599f23d6c8b5d3413febde4c6febff68062e/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2c599f23d6c8b5d3413febde4c6febff68062e/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=ac2c599f23d6c8b5d3413febde4c6febff68062e", "patch": "@@ -88,7 +88,7 @@ impl CheckAttrVisitor<'tcx> {\n             } else if self.tcx.sess.check_name(attr, sym::allow_internal_unstable) {\n                 self.check_allow_internal_unstable(&attr, span, target, &attrs)\n             } else if self.tcx.sess.check_name(attr, sym::rustc_allow_const_fn_unstable) {\n-                self.check_rustc_allow_const_fn_unstable(&attr, span, target)\n+                self.check_rustc_allow_const_fn_unstable(hir_id, &attr, span, target)\n             } else {\n                 // lint-only checks\n                 if self.tcx.sess.check_name(attr, sym::cold) {\n@@ -798,13 +798,15 @@ impl CheckAttrVisitor<'tcx> {\n     /// (Allows proc_macro functions)\n     fn check_rustc_allow_const_fn_unstable(\n         &self,\n+        hir_id: HirId,\n         attr: &Attribute,\n         span: &Span,\n         target: Target,\n     ) -> bool {\n         if let Target::Fn | Target::Method(_) = target {\n-            // FIXME Check that this isn't just a function, but a const fn\n-            return true;\n+            if self.tcx.is_const_fn_raw(self.tcx.hir().local_def_id(hir_id)) {\n+                return true;\n+            }\n         }\n         self.tcx\n             .sess"}]}