{"sha": "ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMmRhNWIxZGFjODc4OTY3NzJiNGFlNDA4N2I0ZjljODNkYzhhYzk=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-03-02T19:09:31Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-03-04T13:27:08Z"}, "message": "Remove commented out code", "tree": {"sha": "2bcfcf9947081459c3b13b1a713eb9206aea306c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bcfcf9947081459c3b13b1a713eb9206aea306c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "html_url": "https://github.com/rust-lang/rust/commit/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d8d880c59bee2f6aa21800b8b147aff47d6b0b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8d880c59bee2f6aa21800b8b147aff47d6b0b8", "html_url": "https://github.com/rust-lang/rust/commit/3d8d880c59bee2f6aa21800b8b147aff47d6b0b8"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "792d021327bfd4f278d5f6a0a4cb6e983a8e4ae2", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "patch": "@@ -456,15 +456,6 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 }\n             })?;\n \n-            /*\n-            if let ExprOrPatId::Expr(expr) = id {\n-                match typable {\n-                    TypableDef::Function(func) => self.write_assoc_fn_resolution(expr, func),\n-                    _ => {}\n-                };\n-            }\n-            */\n-\n             resolved = Resolution::Def(item.into());\n         }\n "}]}