{"sha": "9adb462e6c859cf2adf5948f9e32d706200b7b54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZGI0NjJlNmM4NTljZjJhZGY1OTQ4ZjllMzJkNzA2MjAwYjdiNTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-02-28T13:20:15Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-02-28T13:20:15Z"}, "message": "Erase late bound regions to avoid ICE", "tree": {"sha": "b47f4d86bfd024d18042413db6a5dfabb3a727a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b47f4d86bfd024d18042413db6a5dfabb3a727a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9adb462e6c859cf2adf5948f9e32d706200b7b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9adb462e6c859cf2adf5948f9e32d706200b7b54", "html_url": "https://github.com/rust-lang/rust/commit/9adb462e6c859cf2adf5948f9e32d706200b7b54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9adb462e6c859cf2adf5948f9e32d706200b7b54/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e2801c44eadc5cd05532a19fe1093ef6f041abe", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e2801c44eadc5cd05532a19fe1093ef6f041abe", "html_url": "https://github.com/rust-lang/rust/commit/6e2801c44eadc5cd05532a19fe1093ef6f041abe"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "9f15993e4718cdb3ea02e8b86ed50447e79e3350", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9adb462e6c859cf2adf5948f9e32d706200b7b54/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9adb462e6c859cf2adf5948f9e32d706200b7b54/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=9adb462e6c859cf2adf5948f9e32d706200b7b54", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::lang_items::LangItem;\n use rustc_hir::{ExprKind, ItemKind, Node};\n use rustc_infer::infer;\n use rustc_middle::lint::in_external_macro;\n-use rustc_middle::ty::{self, Ty};\n+use rustc_middle::ty::{self, Binder, Ty};\n use rustc_span::symbol::kw;\n \n use std::iter;\n@@ -487,6 +487,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let found = self.resolve_vars_with_obligations(found);\n         if let hir::FnRetTy::Return(ty) = fn_decl.output {\n             let ty = AstConv::ast_ty_to_ty(self, ty);\n+            let ty = self.tcx.erase_late_bound_regions(Binder::bind(ty));\n             let ty = self.normalize_associated_types_in(expr.span, ty);\n             if self.can_coerce(found, ty) {\n                 err.multipart_suggestion("}, {"sha": "db0d08ddb915b1a9be64f3038b5aff9e1f4850b4", "filename": "src/test/ui/return/issue-82612-return-mutable-reference.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9adb462e6c859cf2adf5948f9e32d706200b7b54/src%2Ftest%2Fui%2Freturn%2Fissue-82612-return-mutable-reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9adb462e6c859cf2adf5948f9e32d706200b7b54/src%2Ftest%2Fui%2Freturn%2Fissue-82612-return-mutable-reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-82612-return-mutable-reference.rs?ref=9adb462e6c859cf2adf5948f9e32d706200b7b54", "patch": "@@ -0,0 +1,24 @@\n+// Regression test for #82612.\n+\n+use std::marker::PhantomData;\n+\n+pub trait SparseSetIndex {\n+    fn sparse_set_index(&self) -> usize;\n+}\n+pub struct SparseArray<I, V = I> {\n+    values: Vec<Option<V>>,\n+    marker: PhantomData<I>,\n+}\n+\n+impl<I: SparseSetIndex, V> SparseArray<I, V> {\n+    pub fn get_or_insert_with(&mut self, index: I, func: impl FnOnce() -> V) -> &mut V {\n+        let index = index.sparse_set_index();\n+        if index < self.values.len() {\n+            let value = unsafe { self.values.get_unchecked_mut(index) };\n+            value.get_or_insert_with(func) //~ ERROR mismatched types\n+        }\n+        unsafe { self.values.get_unchecked_mut(index).as_mut().unwrap() }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "a8045e043ad891c000f3230b9dbeb19d5c78a97e", "filename": "src/test/ui/return/issue-82612-return-mutable-reference.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9adb462e6c859cf2adf5948f9e32d706200b7b54/src%2Ftest%2Fui%2Freturn%2Fissue-82612-return-mutable-reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9adb462e6c859cf2adf5948f9e32d706200b7b54/src%2Ftest%2Fui%2Freturn%2Fissue-82612-return-mutable-reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-82612-return-mutable-reference.stderr?ref=9adb462e6c859cf2adf5948f9e32d706200b7b54", "patch": "@@ -0,0 +1,28 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-82612-return-mutable-reference.rs:18:13\n+   |\n+LL | /         if index < self.values.len() {\n+LL | |             let value = unsafe { self.values.get_unchecked_mut(index) };\n+LL | |             value.get_or_insert_with(func)\n+   | |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found `&mut V`\n+LL | |         }\n+   | |_________- expected this to be `()`\n+   |\n+   = note:      expected unit type `()`\n+           found mutable reference `&mut V`\n+help: consider using a semicolon here\n+   |\n+LL |             value.get_or_insert_with(func);\n+   |                                           ^\n+help: consider using a semicolon here\n+   |\n+LL |         };\n+   |          ^\n+help: you might have meant to return this value\n+   |\n+LL |             return value.get_or_insert_with(func);\n+   |             ^^^^^^                               ^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}