{"sha": "e70632215e8cb6272599b1d07bfc0712f8a0d70a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MDYzMjIxNWU4Y2I2MjcyNTk5YjFkMDdiZmMwNzEyZjhhMGQ3MGE=", "commit": {"author": {"name": "Donald Robertson", "email": "donaldarobertson89@gmail.com", "date": "2018-06-06T19:38:13Z"}, "committer": {"name": "Donald Robertson", "email": "donaldarobertson89@gmail.com", "date": "2018-06-06T19:38:13Z"}, "message": "Combining if statements per lint warnings on build", "tree": {"sha": "9e103cb8df1dc52dfe4c68d76ba450c4db4b649f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e103cb8df1dc52dfe4c68d76ba450c4db4b649f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e70632215e8cb6272599b1d07bfc0712f8a0d70a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e70632215e8cb6272599b1d07bfc0712f8a0d70a", "html_url": "https://github.com/rust-lang/rust/commit/e70632215e8cb6272599b1d07bfc0712f8a0d70a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e70632215e8cb6272599b1d07bfc0712f8a0d70a/comments", "author": null, "committer": null, "parents": [{"sha": "9c73f7ff18d413cb014acba7b1786044b4e00c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c73f7ff18d413cb014acba7b1786044b4e00c70", "html_url": "https://github.com/rust-lang/rust/commit/9c73f7ff18d413cb014acba7b1786044b4e00c70"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "aafc612b512d4ebedb7a4e2694b69ed9a5b8d986", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e70632215e8cb6272599b1d07bfc0712f8a0d70a/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70632215e8cb6272599b1d07bfc0712f8a0d70a/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=e70632215e8cb6272599b1d07bfc0712f8a0d70a", "patch": "@@ -997,11 +997,9 @@ fn lint_expect_fun_call(cx: &LateContext, expr: &hir::Expr, method_span: Span, n\n     fn extract_format_args(arg: &hir::Expr) -> Option<&hir::HirVec<hir::Expr>> {\n         if let hir::ExprAddrOf(_, ref addr_of) = arg.node {\n             if let hir::ExprCall(ref inner_fun, ref inner_args) = addr_of.node {\n-                if is_expn_of(inner_fun.span, \"format\").is_some() {\n-                    if inner_args.len() == 1 {\n-                        if let hir::ExprCall(_, ref format_args) = inner_args[0].node {\n-                            return Some(format_args);\n-                        }\n+                if is_expn_of(inner_fun.span, \"format\").is_some() && inner_args.len() == 1 {\n+                    if let hir::ExprCall(_, ref format_args) = inner_args[0].node {\n+                        return Some(format_args);\n                     }\n                 }\n             }"}]}