{"sha": "b9b4f549a45ccd6d5b5806153154c86e71e34bde", "node_id": "C_kwDOAAsO6NoAKGI5YjRmNTQ5YTQ1Y2NkNmQ1YjU4MDYxNTMxNTRjODZlNzFlMzRiZGU", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-11-28T22:10:37Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-11-28T22:10:37Z"}, "message": "Add a suggestion if `macro_rules` is misspelled", "tree": {"sha": "8d8b903cc89081dd9e387e28e02e06fa169be0e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d8b903cc89081dd9e387e28e02e06fa169be0e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9b4f549a45ccd6d5b5806153154c86e71e34bde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b4f549a45ccd6d5b5806153154c86e71e34bde", "html_url": "https://github.com/rust-lang/rust/commit/b9b4f549a45ccd6d5b5806153154c86e71e34bde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9b4f549a45ccd6d5b5806153154c86e71e34bde/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fd3a5c7c175f228afaf5fc6ff00c177b83d8055", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd3a5c7c175f228afaf5fc6ff00c177b83d8055", "html_url": "https://github.com/rust-lang/rust/commit/5fd3a5c7c175f228afaf5fc6ff00c177b83d8055"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "aa572eaf162cf0cb448f52baf69aaa7ff619f95b", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b9b4f549a45ccd6d5b5806153154c86e71e34bde/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b4f549a45ccd6d5b5806153154c86e71e34bde/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=b9b4f549a45ccd6d5b5806153154c86e71e34bde", "patch": "@@ -15,6 +15,7 @@ use rustc_ast::{MacArgs, MacCall, MacDelimiter};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n use rustc_span::edition::{Edition, LATEST_STABLE_EDITION};\n+use rustc_span::lev_distance::lev_distance;\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n \n@@ -407,10 +408,30 @@ impl<'a> Parser<'a> {\n     fn parse_item_macro(&mut self, vis: &Visibility) -> PResult<'a, MacCall> {\n         let path = self.parse_path(PathStyle::Mod)?; // `foo::bar`\n         self.expect(&token::Not)?; // `!`\n-        let args = self.parse_mac_args()?; // `( .. )` or `[ .. ]` (followed by `;`), or `{ .. }`.\n-        self.eat_semi_for_macro_if_needed(&args);\n-        self.complain_if_pub_macro(vis, false);\n-        Ok(MacCall { path, args, prior_type_ascription: self.last_type_ascription })\n+        match self.parse_mac_args() {\n+            // `( .. )` or `[ .. ]` (followed by `;`), or `{ .. }`.\n+            Ok(args) => {\n+                self.eat_semi_for_macro_if_needed(&args);\n+                self.complain_if_pub_macro(vis, false);\n+                Ok(MacCall { path, args, prior_type_ascription: self.last_type_ascription })\n+            }\n+\n+            Err(mut err) => {\n+                // Maybe the user misspelled `macro_rules` (issue #91227)\n+                if self.token.is_ident()\n+                    && path.segments.len() == 1\n+                    && lev_distance(\"macro_rules\", &path.segments[0].ident.to_string()) <= 3\n+                {\n+                    err.span_suggestion(\n+                        path.span,\n+                        \"perhaps you meant to define a macro\",\n+                        \"macro_rules\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n+                Err(err)\n+            }\n+        }\n     }\n \n     /// Recover if we parsed attributes and expected an item but there was none."}, {"sha": "62be913d85f05ade39c94663b3288d058d67acac", "filename": "src/test/ui/parser/misspelled-macro-rules.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9b4f549a45ccd6d5b5806153154c86e71e34bde/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b9b4f549a45ccd6d5b5806153154c86e71e34bde/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.fixed?ref=b9b4f549a45ccd6d5b5806153154c86e71e34bde", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #91227.\n+\n+// run-rustfix\n+\n+#![allow(unused_macros)]\n+\n+macro_rules! thing {\n+//~^ ERROR: expected one of\n+//~| HELP: perhaps you meant to define a macro\n+    () => {}\n+}\n+\n+fn main() {}"}, {"sha": "4290e6e5e4cb912be2b815fdf0f5043411df3033", "filename": "src/test/ui/parser/misspelled-macro-rules.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9b4f549a45ccd6d5b5806153154c86e71e34bde/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b4f549a45ccd6d5b5806153154c86e71e34bde/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.rs?ref=b9b4f549a45ccd6d5b5806153154c86e71e34bde", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #91227.\n+\n+// run-rustfix\n+\n+#![allow(unused_macros)]\n+\n+marco_rules! thing {\n+//~^ ERROR: expected one of\n+//~| HELP: perhaps you meant to define a macro\n+    () => {}\n+}\n+\n+fn main() {}"}, {"sha": "56df712381920741c48021d05f6c6948a0adfc8e", "filename": "src/test/ui/parser/misspelled-macro-rules.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b9b4f549a45ccd6d5b5806153154c86e71e34bde/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9b4f549a45ccd6d5b5806153154c86e71e34bde/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmisspelled-macro-rules.stderr?ref=b9b4f549a45ccd6d5b5806153154c86e71e34bde", "patch": "@@ -0,0 +1,10 @@\n+error: expected one of `(`, `[`, or `{`, found `thing`\n+  --> $DIR/misspelled-macro-rules.rs:7:14\n+   |\n+LL | marco_rules! thing {\n+   | -----------  ^^^^^ expected one of `(`, `[`, or `{`\n+   | |\n+   | help: perhaps you meant to define a macro: `macro_rules`\n+\n+error: aborting due to previous error\n+"}]}