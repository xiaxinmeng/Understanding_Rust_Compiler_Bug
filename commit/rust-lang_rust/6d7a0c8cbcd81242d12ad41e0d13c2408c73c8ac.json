{"sha": "6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkN2EwYzhjYmNkODEyNDJkMTJhZDQxZTBkMTNjMjQwOGM3M2M4YWM=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-31T19:07:44Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-01T14:54:22Z"}, "message": "std: Use `do` blocks instead of `for` with .iter_bytes()", "tree": {"sha": "c30348ec7927bc28f61f981b087b7798dd97a8bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c30348ec7927bc28f61f981b087b7798dd97a8bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac", "html_url": "https://github.com/rust-lang/rust/commit/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac/comments", "author": null, "committer": null, "parents": [{"sha": "18d124b9b5dcb9915e5e1489eed81ed6a8b90c39", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d124b9b5dcb9915e5e1489eed81ed6a8b90c39", "html_url": "https://github.com/rust-lang/rust/commit/18d124b9b5dcb9915e5e1489eed81ed6a8b90c39"}], "stats": {"total": 82, "additions": 49, "deletions": 33}, "files": [{"sha": "5d4b9b4e3f0ba89b965b2c18753a8c5b48680682", "filename": "src/libstd/hash.rs", "status": "modified", "additions": 45, "deletions": 30, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac/src%2Flibstd%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac/src%2Flibstd%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhash.rs?ref=6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac", "patch": "@@ -85,38 +85,44 @@ impl<A:IterBytes> Hash for A {\n     #[inline]\n     fn hash_keyed(&self, k0: u64, k1: u64) -> u64 {\n         let mut s = State::new(k0, k1);\n-        for self.iter_bytes(true) |bytes| {\n+        do self.iter_bytes(true) |bytes| {\n             s.input(bytes);\n-        }\n+            true\n+        };\n         s.result_u64()\n     }\n }\n \n fn hash_keyed_2<A: IterBytes,\n                 B: IterBytes>(a: &A, b: &B, k0: u64, k1: u64) -> u64 {\n     let mut s = State::new(k0, k1);\n-    for a.iter_bytes(true) |bytes| {\n+    do a.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for b.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do b.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n+        true\n+    };\n     s.result_u64()\n }\n \n fn hash_keyed_3<A: IterBytes,\n                 B: IterBytes,\n                 C: IterBytes>(a: &A, b: &B, c: &C, k0: u64, k1: u64) -> u64 {\n     let mut s = State::new(k0, k1);\n-    for a.iter_bytes(true) |bytes| {\n+    do a.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for b.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do b.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for c.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do c.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n+        true\n+    };\n     s.result_u64()\n }\n \n@@ -132,18 +138,22 @@ fn hash_keyed_4<A: IterBytes,\n                 k1: u64)\n                 -> u64 {\n     let mut s = State::new(k0, k1);\n-    for a.iter_bytes(true) |bytes| {\n+    do a.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for b.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do b.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for c.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do c.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for d.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do d.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n+        true\n+    };\n     s.result_u64()\n }\n \n@@ -161,21 +171,26 @@ fn hash_keyed_5<A: IterBytes,\n                 k1: u64)\n                 -> u64 {\n     let mut s = State::new(k0, k1);\n-    for a.iter_bytes(true) |bytes| {\n+    do a.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for b.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do b.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for c.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do c.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for d.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do d.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n-    for e.iter_bytes(true) |bytes| {\n+        true\n+    };\n+    do e.iter_bytes(true) |bytes| {\n         s.input(bytes);\n-    }\n+        true\n+    };\n     s.result_u64()\n }\n "}, {"sha": "5ad7969c8d21facf3de7600b100d390dc1deb470", "filename": "src/libstd/to_bytes.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac/src%2Flibstd%2Fto_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac/src%2Flibstd%2Fto_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_bytes.rs?ref=6d7a0c8cbcd81242d12ad41e0d13c2408c73c8ac", "patch": "@@ -353,9 +353,10 @@ pub trait ToBytes {\n impl<A:IterBytes> ToBytes for A {\n     fn to_bytes(&self, lsb0: bool) -> ~[u8] {\n         do io::with_bytes_writer |wr| {\n-            for self.iter_bytes(lsb0) |bytes| {\n-                wr.write(bytes)\n-            }\n+            do self.iter_bytes(lsb0) |bytes| {\n+                wr.write(bytes);\n+                true\n+            };\n         }\n     }\n }"}]}