{"sha": "d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZjFiNWZjN2NkZWVkY2U5OTg3NGY3Y2YyMTExYWIwOWQ4YjM0Mjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-04T12:00:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-04T12:00:30Z"}, "message": "Merge #8719\n\n8719: Fix block comment intra doc link injection ranges r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Tobias Wirth <lukastw97@gmail.com>", "tree": {"sha": "fa313d4e4134087a545744532e2215b3abbdc7c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa313d4e4134087a545744532e2215b3abbdc7c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgkTdeCRBK7hj4Ov3rIwAAwjsIACmg6cWUZ1LCOcBWUzGYS16p\n4EBgv6XdEFYtMJDqcG1i7PmGGT/LRTPbC7Vuwbj8lXyUFQK/ntzGMuE/NQi24ESb\nlw/vBHZ8IAM+HrQ/V2dJnPU9+k6XLq5vg/mIejfjQSy79Stsz2r9ijH9c7YW9BBP\nQC4vsWx8CaTFs3GzocGwKZ2hme9lEW4NAbpJ2ioIWBHOIStX9NFB49rB6mYmV5/i\nwUIEFVG8RVHkHqIdu8um67YUmSyn+5+RLSUXeKb6W8UbI53IERqXT4c1Nq/bdLOw\nIna4Iu1sgEkjSJM/Bn04GFODoOWTWzqqSUmY1goxUb9x0hGqDDmKY3Hdf6McE20=\n=LMnj\n-----END PGP SIGNATURE-----\n", "payload": "tree fa313d4e4134087a545744532e2215b3abbdc7c9\nparent 6d812efcd9e632a47ba85086c0a9dc72d13ff732\nparent 5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620129630 +0000\ncommitter GitHub <noreply@github.com> 1620129630 +0000\n\nMerge #8719\n\n8719: Fix block comment intra doc link injection ranges r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Tobias Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "html_url": "https://github.com/rust-lang/rust/commit/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d812efcd9e632a47ba85086c0a9dc72d13ff732", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d812efcd9e632a47ba85086c0a9dc72d13ff732", "html_url": "https://github.com/rust-lang/rust/commit/6d812efcd9e632a47ba85086c0a9dc72d13ff732"}, {"sha": "5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "html_url": "https://github.com/rust-lang/rust/commit/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "0171d8a92a15d3e8237d1709bfae7205f79b4c67", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "patch": "@@ -484,10 +484,10 @@ impl AttrsWithOwner {\n         let mut buf = String::new();\n         let mut mapping = Vec::new();\n         for (doc, idx) in docs {\n-            // str::lines doesn't yield anything for the empty string\n             if !doc.is_empty() {\n-                for line in doc.split('\\n') {\n-                    let line = line.trim_end();\n+                let mut base_offset = 0;\n+                for raw_line in doc.split('\\n') {\n+                    let line = raw_line.trim_end();\n                     let line_len = line.len();\n                     let (offset, line) = match line.char_indices().nth(indent) {\n                         Some((offset, _)) => (offset, &line[offset..]),\n@@ -498,9 +498,13 @@ impl AttrsWithOwner {\n                     mapping.push((\n                         TextRange::new(buf_offset.try_into().ok()?, buf.len().try_into().ok()?),\n                         idx,\n-                        TextRange::new(offset.try_into().ok()?, line_len.try_into().ok()?),\n+                        TextRange::at(\n+                            (base_offset + offset).try_into().ok()?,\n+                            line_len.try_into().ok()?,\n+                        ),\n                     ));\n                     buf.push('\\n');\n+                    base_offset += raw_line.len() + 1;\n                 }\n             } else {\n                 buf.push('\\n');"}, {"sha": "8d83ba2065dd4cac8e1a0215a9eb692464472838", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "patch": "@@ -142,6 +142,7 @@\n ```rust\n </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span><span class=\"comment documentation\">\n ```\n+</span><span class=\"function documentation injected intra_doc_link\">[`block_comments2`]</span><span class=\"comment documentation\"> tests these with indentation\n  */</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">block_comments</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n@@ -150,5 +151,6 @@\n     ```rust\n </span><span class=\"comment documentation\"> </span><span class=\"none injected\">   </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span><span class=\"comment documentation\">\n     ```\n+    </span><span class=\"function documentation injected intra_doc_link\">[`block_comments`]</span><span class=\"comment documentation\"> tests these without indentation\n */</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">block_comments2</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "b6e952b08882a8124d096b551c66d28a27ddd253", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=d9f1b5fc7cdeedce99874f7cf2111ab09d8b3429", "patch": "@@ -618,6 +618,7 @@ It is beyond me why you'd use these when you got ///\n ```rust\n let _ = example(&[1, 2, 3]);\n ```\n+[`block_comments2`] tests these with indentation\n  */\n pub fn block_comments() {}\n \n@@ -626,6 +627,7 @@ pub fn block_comments() {}\n     ```rust\n     let _ = example(&[1, 2, 3]);\n     ```\n+    [`block_comments`] tests these without indentation\n */\n pub fn block_comments2() {}\n \"#"}]}