{"sha": "0f099ead8893fa9551e385b030a4239ea1338451", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMDk5ZWFkODg5M2ZhOTU1MWUzODViMDMwYTQyMzllYTEzMzg0NTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-25T18:56:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-25T19:09:33Z"}, "message": "Fix panic in NoSuchField diagnostic", "tree": {"sha": "f9920ebf659c7589d6ad4c89aecb7f9d88f0161c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9920ebf659c7589d6ad4c89aecb7f9d88f0161c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f099ead8893fa9551e385b030a4239ea1338451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f099ead8893fa9551e385b030a4239ea1338451", "html_url": "https://github.com/rust-lang/rust/commit/0f099ead8893fa9551e385b030a4239ea1338451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f099ead8893fa9551e385b030a4239ea1338451/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95b989ec3059eca140d9bfffee1bc52e30f9d17b", "url": "https://api.github.com/repos/rust-lang/rust/commits/95b989ec3059eca140d9bfffee1bc52e30f9d17b", "html_url": "https://github.com/rust-lang/rust/commit/95b989ec3059eca140d9bfffee1bc52e30f9d17b"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "bd4ef69a079a252c3fc3caf35f1af7a46367006f", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f099ead8893fa9551e385b030a4239ea1338451/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f099ead8893fa9551e385b030a4239ea1338451/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=0f099ead8893fa9551e385b030a4239ea1338451", "patch": "@@ -667,7 +667,7 @@ impl Expectation {\n }\n \n mod diagnostics {\n-    use hir_def::{expr::ExprId, src::HasSource, FunctionId, Lookup};\n+    use hir_def::{expr::ExprId, FunctionId};\n     use hir_expand::diagnostics::DiagnosticSink;\n \n     use crate::{db::HirDatabase, diagnostics::NoSuchField};\n@@ -686,10 +686,9 @@ mod diagnostics {\n         ) {\n             match self {\n                 InferenceDiagnostic::NoSuchField { expr, field } => {\n-                    let source = owner.lookup(db.upcast()).source(db.upcast());\n                     let (_, source_map) = db.body_with_source_map(owner.into());\n                     let field = source_map.field_syntax(*expr, *field);\n-                    sink.push(NoSuchField { file: source.file_id, field: field.value })\n+                    sink.push(NoSuchField { file: field.file_id, field: field.value })\n                 }\n             }\n         }"}]}