{"sha": "e0c8ba19299bcf6609d4e72d6afb140e1f225458", "node_id": "C_kwDOAAsO6NoAKGUwYzhiYTE5Mjk5YmNmNjYwOWQ0ZTcyZDZhZmIxNDBlMWYyMjU0NTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-10T11:32:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-10T11:32:00Z"}, "message": "Rollup merge of #108946 - bmoxb:bool-to-float-docs, r=cuviper\n\nDocument the resulting values produced when using `From<bool>` on floats\n\nHave the documentation of the implementation of `From<bool>` on `f32` and `f64` indicate the output values (`0.0` for `false` and `1.0` for `true`).\n\ncloses #108939", "tree": {"sha": "6583aedd598eff50f64141f335a39515a30bc0da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6583aedd598eff50f64141f335a39515a30bc0da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0c8ba19299bcf6609d4e72d6afb140e1f225458", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCxUwCRBK7hj4Ov3rIwAAk+8IACCp7a4KUslKNyZG4ZhfnU1p\nOVy8j+7L22O6JQt64xTqFF+9TbCLAVzwV1FHRK2W+qvKCmCagExgZJqetpe+mL/U\n3i/Hj33HrqkyEFIYast+ngn2ewWXxSHhgZh2FOv0JsnGjn9sHpBdgNELYHHvQDST\ntZv0QyTGlNAK3IMdr14Vgjj26uPOTYs/PQlbZ/GXL6x+rBCPZKci9g9E3/l5Q4D+\nCCkEN6+Z4eGzo9e3R5lZAN2dTMqrdVoHsM+IvPUhfDSXQXv6+9YA3ItkU7TFCYzh\nwXdLrBmBfLVoE4JCeAchuqJzDEwsKtZu0DtGSckKdYTg5xcMfgFs1DSFCQ/fwfY=\n=pmf2\n-----END PGP SIGNATURE-----\n", "payload": "tree 6583aedd598eff50f64141f335a39515a30bc0da\nparent afd8558d62f28de101c58f4314ea2ba2c1aa60ec\nparent b439189236a8956eaf9cd37bd601f3df074716f2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678447920 +0100\ncommitter GitHub <noreply@github.com> 1678447920 +0100\n\nRollup merge of #108946 - bmoxb:bool-to-float-docs, r=cuviper\n\nDocument the resulting values produced when using `From<bool>` on floats\n\nHave the documentation of the implementation of `From<bool>` on `f32` and `f64` indicate the output values (`0.0` for `false` and `1.0` for `true`).\n\ncloses #108939\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c8ba19299bcf6609d4e72d6afb140e1f225458", "html_url": "https://github.com/rust-lang/rust/commit/e0c8ba19299bcf6609d4e72d6afb140e1f225458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0c8ba19299bcf6609d4e72d6afb140e1f225458/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afd8558d62f28de101c58f4314ea2ba2c1aa60ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/afd8558d62f28de101c58f4314ea2ba2c1aa60ec", "html_url": "https://github.com/rust-lang/rust/commit/afd8558d62f28de101c58f4314ea2ba2c1aa60ec"}, {"sha": "b439189236a8956eaf9cd37bd601f3df074716f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b439189236a8956eaf9cd37bd601f3df074716f2", "html_url": "https://github.com/rust-lang/rust/commit/b439189236a8956eaf9cd37bd601f3df074716f2"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "a74a56bc5b2094ba8886009651f0f1711bd09c6a", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0c8ba19299bcf6609d4e72d6afb140e1f225458/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c8ba19299bcf6609d4e72d6afb140e1f225458/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=e0c8ba19299bcf6609d4e72d6afb140e1f225458", "patch": "@@ -172,7 +172,18 @@ impl_from! { f32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\"\n #[stable(feature = \"float_from_bool\", since = \"1.68.0\")]\n #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n impl const From<bool> for f32 {\n-    /// Converts `bool` to `f32` losslessly.\n+    /// Converts `bool` to `f32` losslessly. The resulting value is positive\n+    /// `0.0` for `false` and `1.0` for `true` values.\n+    ///\n+    /// # Examples\n+    /// ```\n+    /// let x: f32 = false.into();\n+    /// assert_eq!(x, 0.0);\n+    /// assert!(x.is_sign_positive());\n+    ///\n+    /// let y: f32 = true.into();\n+    /// assert_eq!(y, 1.0);\n+    /// ```\n     #[inline]\n     fn from(small: bool) -> Self {\n         small as u8 as Self\n@@ -181,7 +192,18 @@ impl const From<bool> for f32 {\n #[stable(feature = \"float_from_bool\", since = \"1.68.0\")]\n #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n impl const From<bool> for f64 {\n-    /// Converts `bool` to `f64` losslessly.\n+    /// Converts `bool` to `f64` losslessly. The resulting value is positive\n+    /// `0.0` for `false` and `1.0` for `true` values.\n+    ///\n+    /// # Examples\n+    /// ```\n+    /// let x: f64 = false.into();\n+    /// assert_eq!(x, 0.0);\n+    /// assert!(x.is_sign_positive());\n+    ///\n+    /// let y: f64 = true.into();\n+    /// assert_eq!(y, 1.0);\n+    /// ```\n     #[inline]\n     fn from(small: bool) -> Self {\n         small as u8 as Self"}]}