{"sha": "348a25044b6f263a61cd41cd3767c3d8d1e8da74", "node_id": "C_kwDOAAsO6NoAKDM0OGEyNTA0NGI2ZjI2M2E2MWNkNDFjZDM3NjdjM2Q4ZDFlOGRhNzQ", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-11-22T10:40:56Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-11-22T10:40:56Z"}, "message": "Intra-doc links apparently don't like pointers?", "tree": {"sha": "8b0712551b58f1e6b420793df36c78a5e5b3d1be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b0712551b58f1e6b420793df36c78a5e5b3d1be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/348a25044b6f263a61cd41cd3767c3d8d1e8da74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/348a25044b6f263a61cd41cd3767c3d8d1e8da74", "html_url": "https://github.com/rust-lang/rust/commit/348a25044b6f263a61cd41cd3767c3d8d1e8da74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/348a25044b6f263a61cd41cd3767c3d8d1e8da74/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "875e01e6166d4b5dea370023564703968a3cd92a", "url": "https://api.github.com/repos/rust-lang/rust/commits/875e01e6166d4b5dea370023564703968a3cd92a", "html_url": "https://github.com/rust-lang/rust/commit/875e01e6166d4b5dea370023564703968a3cd92a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3c716672113e5a405fe0bf8e4cec9973fc397630", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/348a25044b6f263a61cd41cd3767c3d8d1e8da74/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348a25044b6f263a61cd41cd3767c3d8d1e8da74/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=348a25044b6f263a61cd41cd3767c3d8d1e8da74", "patch": "@@ -51,7 +51,7 @@ impl<T: ?Sized> *const T {\n     /// Casts a pointer to its raw bits.\n     ///\n     /// This is equivalent to `as usize`, but is more specific to enhance readability.\n-    /// The inverse method is [`Self::from_bits`].\n+    /// The inverse method is [`from_bits`](#method.from_bits).\n     ///\n     /// In particular, `*p as usize` and `p as usize` will both compile for\n     /// pointers to numeric types but do very different things, so using this\n@@ -78,7 +78,7 @@ impl<T: ?Sized> *const T {\n     /// Creates a pointer from its raw bits.\n     ///\n     /// This is equivalent to `as *const T`, but is more specific to enhance readability.\n-    /// The inverse method is [`Self::to_bits`].\n+    /// The inverse method is [`to_bits`](#method.to_bits).\n     ///\n     /// # Examples\n     ///"}, {"sha": "5d4e37641ee84fc719f5abcca5ccfbd9da601fdd", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/348a25044b6f263a61cd41cd3767c3d8d1e8da74/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348a25044b6f263a61cd41cd3767c3d8d1e8da74/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=348a25044b6f263a61cd41cd3767c3d8d1e8da74", "patch": "@@ -50,7 +50,7 @@ impl<T: ?Sized> *mut T {\n     /// Casts a pointer to its raw bits.\n     ///\n     /// This is equivalent to `as usize`, but is more specific to enhance readability.\n-    /// The inverse method is [`Self::from_bits`].\n+    /// The inverse method is [`from_bits`](#method.from_bits-1).\n     ///\n     /// In particular, `*p as usize` and `p as usize` will both compile for\n     /// pointers to numeric types but do very different things, so using this\n@@ -78,7 +78,7 @@ impl<T: ?Sized> *mut T {\n     /// Creates a pointer from its raw bits.\n     ///\n     /// This is equivalent to `as *mut T`, but is more specific to enhance readability.\n-    /// The inverse method is [`Self::to_bits`].\n+    /// The inverse method is [`to_bits`](#method.to_bits-1).\n     ///\n     /// # Examples\n     ///"}]}