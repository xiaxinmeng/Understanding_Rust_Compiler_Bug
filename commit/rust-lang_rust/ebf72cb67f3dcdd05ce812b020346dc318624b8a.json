{"sha": "ebf72cb67f3dcdd05ce812b020346dc318624b8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZjcyY2I2N2YzZGNkZDA1Y2U4MTJiMDIwMzQ2ZGMzMTg2MjRiOGE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-29T21:02:15Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T15:12:48Z"}, "message": "Use `util::sugg` in `TRANSMUTE_PTR_TO_REF`", "tree": {"sha": "1107d800b738d65e5afe9a66ab43d3d8b4cae12e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1107d800b738d65e5afe9a66ab43d3d8b4cae12e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebf72cb67f3dcdd05ce812b020346dc318624b8a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXdohwAAoJEF5CfHlMukXotk0QAJOWZspLJqqtGJ95P8EWXrUT\nlAgqAJHcFHR6kyYat0pBijSNpCS1PAgSYuNn3o3QpXtv4FmVekMFq8fZg+X8S1Nr\nY2+nDbJf+ac1+QAevlaQn1RaXETKDk7cbs0h/sm1aOFAmiL/IyIjzMhub2Uath45\nkCZzUUwfnaf9A9oDq3TNwTZvNe6dzhaUj2oab5RnGW+7C7yecNk96Su9ajoW2cbl\nQRKXAEH2CW53uWG8r0Ev0+xAA+pHLo5WBpmd7U/FcVCI0/thkFA97k+5m+W30IcK\nDYYkH6syUkCARxbwR5EnaXE75LsbFyHBpCTRt0SxPIrEPtO+zjhL7sLSO2ei2Q6T\n9oszIcSKpLEKdYrff5RJkfuKQx+HsbrLNanM62W1I79ALv/KlpXa86T/oU7V/Dc6\n40vFlnfmCECB8Z55rbDN5jP5G17tI+pbWUZ145F8mODCo9VGWdAks3IgAXCbKL8k\nUu9h9YHFOY2iXzRpu2XneAJnEoy16xOf6xkLoKY0xHqWvDw4hClk2Oixp7M++5Zr\nbipMSxSi2YR33Ou85+2MTQVDiI9x3u7i62zZGBFmMWsB09Wn/cymEXI9MiqELqpn\nmqtpuJbT2IfabsjY6QbLekcQO5QcBIsGF7APWYv0dd6BEJ93GQPN7rtmEcD6nC47\nmJ/AFoV1NtF2mD/XFy2S\n=qoG/\n-----END PGP SIGNATURE-----", "payload": "tree 1107d800b738d65e5afe9a66ab43d3d8b4cae12e\nparent 169b63a84abf1598a83038fcdedceba40255288a\nauthor mcarton <cartonmartin+git@gmail.com> 1467234135 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1467385968 +0200\n\nUse `util::sugg` in `TRANSMUTE_PTR_TO_REF`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf72cb67f3dcdd05ce812b020346dc318624b8a", "html_url": "https://github.com/rust-lang/rust/commit/ebf72cb67f3dcdd05ce812b020346dc318624b8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebf72cb67f3dcdd05ce812b020346dc318624b8a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "169b63a84abf1598a83038fcdedceba40255288a", "url": "https://api.github.com/repos/rust-lang/rust/commits/169b63a84abf1598a83038fcdedceba40255288a", "html_url": "https://github.com/rust-lang/rust/commit/169b63a84abf1598a83038fcdedceba40255288a"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "12d2184693a4fb354034e06540f14792fe4bd144", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ebf72cb67f3dcdd05ce812b020346dc318624b8a/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebf72cb67f3dcdd05ce812b020346dc318624b8a/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=ebf72cb67f3dcdd05ce812b020346dc318624b8a", "patch": "@@ -3,6 +3,7 @@ use rustc::ty::TypeVariants::{TyRawPtr, TyRef};\n use rustc::ty;\n use rustc::hir::*;\n use utils::{match_def_path, paths, snippet_opt, span_lint, span_lint_and_then};\n+use utils::sugg;\n \n /// **What it does:** This lint checks for transmutes that can't ever be correct on any architecture\n ///\n@@ -148,28 +149,21 @@ impl LateLintPass for Transmute {\n                                     from_ty,\n                                     to_ty),\n                             |db| {\n-                                if let Some(arg) = snippet_opt(cx, args[0].span) {\n-                                    let (deref, cast) = if to_rty.mutbl == Mutability::MutMutable {\n-                                        (\"&mut *\", \"*mut\")\n-                                    } else {\n-                                        (\"&*\", \"*const\")\n-                                    };\n+                                let arg = &sugg::Sugg::hir(cx, &args[0], \"..\");\n+                                let (deref, cast) = if to_rty.mutbl == Mutability::MutMutable {\n+                                    (\"&mut *\", \"*mut\")\n+                                } else {\n+                                    (\"&*\", \"*const\")\n+                                };\n \n \n-                                    let sugg = if from_pty.ty == to_rty.ty {\n-                                        // Put things in parentheses if they are more complex\n-                                        match args[0].node {\n-                                            ExprPath(..) | ExprCall(..) | ExprMethodCall(..) | ExprBlock(..) => {\n-                                                format!(\"{}{}\", deref, arg)\n-                                            }\n-                                            _ => format!(\"{}({})\", deref, arg)\n-                                        }\n-                                    } else {\n-                                        format!(\"{}({} as {} {})\", deref, arg, cast, to_rty.ty)\n-                                    };\n+                                let sugg = if from_pty.ty == to_rty.ty {\n+                                    sugg::make_unop(deref, arg).to_string()\n+                                } else {\n+                                    format!(\"{}({} as {} {})\", deref, arg, cast, to_rty.ty)\n+                                };\n \n-                                    db.span_suggestion(e.span, \"try\", sugg);\n-                                }\n+                                db.span_suggestion(e.span, \"try\", sugg);\n                             },\n                         ),\n                         _ => return,"}, {"sha": "0dbd58b13089345458fcb1747bff38c235777c17", "filename": "tests/compile-fail/transmute.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebf72cb67f3dcdd05ce812b020346dc318624b8a/tests%2Fcompile-fail%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebf72cb67f3dcdd05ce812b020346dc318624b8a/tests%2Fcompile-fail%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftransmute.rs?ref=ebf72cb67f3dcdd05ce812b020346dc318624b8a", "patch": "@@ -62,6 +62,7 @@ unsafe fn _ptr_to_ref<T, U>(p: *const T, m: *mut T, o: *const U, om: *mut U) {\n     //~^ ERROR transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n     //~| HELP try\n     //~| SUGGESTION = &mut *(p as *mut T);\n+    let _ = &mut *(p as *mut T);\n \n     let _: &T = std::mem::transmute(o);\n     //~^ ERROR transmute from a pointer type (`*const U`) to a reference type (`&T`)"}]}