{"sha": "50f359c8a189c55e6db5842cb7ec16e801912e68", "node_id": "C_kwDOAAsO6NoAKDUwZjM1OWM4YTE4OWM1NWU2ZGI1ODQyY2I3ZWMxNmU4MDE5MTJlNjg", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-07-07T19:34:38Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-07-07T21:15:58Z"}, "message": "Split tests to have faster CI", "tree": {"sha": "47857dc1a67d2e75e349df0430bc176d1488b806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47857dc1a67d2e75e349df0430bc176d1488b806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50f359c8a189c55e6db5842cb7ec16e801912e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50f359c8a189c55e6db5842cb7ec16e801912e68", "html_url": "https://github.com/rust-lang/rust/commit/50f359c8a189c55e6db5842cb7ec16e801912e68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50f359c8a189c55e6db5842cb7ec16e801912e68/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d687bd8294464634724ed1d99bf714188c1a5fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d687bd8294464634724ed1d99bf714188c1a5fc", "html_url": "https://github.com/rust-lang/rust/commit/0d687bd8294464634724ed1d99bf714188c1a5fc"}], "stats": {"total": 89, "additions": 76, "deletions": 13}, "files": [{"sha": "22f67a04e0b848ad0fa51b83653268a515ae6ac0", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/50f359c8a189c55e6db5842cb7ec16e801912e68/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/50f359c8a189c55e6db5842cb7ec16e801912e68/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=50f359c8a189c55e6db5842cb7ec16e801912e68", "patch": "@@ -23,8 +23,11 @@ jobs:\n           \"--mini-tests\",\n           \"--std-tests\",\n           \"--test-libcore\",\n-          \"--extended-tests\",\n-          \"--test-successful-rustc\",\n+          \"--extended-rand-tests\",\n+          \"--extended-regex-example-tests\",\n+          \"--extended-regex-tests\",\n+          \"--test-successful-rustc --nb-parts 2 --current-part 0\",\n+          \"--test-successful-rustc --nb-parts 2 --current-part 1\",\n           \"--test-failing-rustc\",\n         ]\n "}, {"sha": "dea9fe412e9a5fa5870a51063ad4e8572beb7707", "filename": "test.sh", "status": "modified", "additions": 71, "deletions": 11, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/50f359c8a189c55e6db5842cb7ec16e801912e68/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/50f359c8a189c55e6db5842cb7ec16e801912e68/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=50f359c8a189c55e6db5842cb7ec16e801912e68", "patch": "@@ -19,6 +19,8 @@ gcc_master_branch=1\n channel=\"debug\"\n funcs=()\n build_only=0\n+nb_parts=0\n+current_part=0\n \n while [[ $# -gt 0 ]]; do\n     case $1 in\n@@ -77,6 +79,19 @@ while [[ $# -gt 0 ]]; do\n             funcs+=(extended_sysroot_tests)\n             shift\n             ;;\n+        \"--extended-rand-tests\")\n+            funcs+=(extended_rand_tests)\n+            shift\n+            ;;\n+        \"--extended-regex-example-tests\")\n+            funcs+=(extended_regex_example_tests)\n+            shift\n+            ;;\n+        \"--extended-regex-tests\")\n+            funcs+=(extended_regex_tests)\n+            shift\n+            ;;\n+\n         \"--mini-tests\")\n             funcs+=(mini_tests)\n             shift\n@@ -90,6 +105,16 @@ while [[ $# -gt 0 ]]; do\n             build_only=1\n             shift\n             ;;\n+        \"--nb-parts\")\n+            shift\n+            nb_parts=$1\n+            shift\n+            ;;\n+        \"--current-part\")\n+            shift\n+            current_part=$1\n+            shift\n+            ;;\n         *)\n             echo \"Unknown option $1\"\n             exit 1\n@@ -200,7 +225,7 @@ function test_libcore() {\n #echo \"[BENCH RUN] mod_bench\"\n #hyperfine --runs ${RUN_RUNS:-10} ./target/out/mod_bench{,_inline} ./target/out/mod_bench_llvm_*\n \n-function extended_sysroot_tests() {\n+function extended_rand_tests() {\n     if (( $gcc_master_branch == 0 )); then\n         return\n     fi\n@@ -210,17 +235,12 @@ function extended_sysroot_tests() {\n     echo \"[TEST] rust-random/rand\"\n     ../cargo.sh test --workspace\n     popd\n+}\n \n-    #pushd simple-raytracer\n-    #echo \"[BENCH COMPILE] ebobby/simple-raytracer\"\n-    #hyperfine --runs \"${RUN_RUNS:-10}\" --warmup 1 --prepare \"cargo clean\" \\\n-    #\"RUSTC=rustc RUSTFLAGS='' cargo build\" \\\n-    #\"../cargo.sh build\"\n-\n-    #echo \"[BENCH RUN] ebobby/simple-raytracer\"\n-    #cp ./target/debug/main ./raytracer_cg_gcc\n-    #hyperfine --runs \"${RUN_RUNS:-10}\" ./raytracer_cg_llvm ./raytracer_cg_gcc\n-    #popd\n+function extended_regex_example_tests() {\n+    if (( $gcc_master_branch == 0 )); then\n+        return\n+    fi\n \n     pushd regex\n     echo \"[TEST] rust-lang/regex example shootout-regex-dna\"\n@@ -232,12 +252,38 @@ function extended_sysroot_tests() {\n         | ../cargo.sh run --example shootout-regex-dna \\\n         | grep -v \"Spawned thread\" > res.txt\n     diff -u res.txt examples/regexdna-output.txt\n+    popd\n+}\n+\n+function extended_regex_tests() {\n+    if (( $gcc_master_branch == 0 )); then\n+        return\n+    fi\n \n+    pushd regex\n     echo \"[TEST] rust-lang/regex tests\"\n+    export CG_RUSTFLAGS=\"--cap-lints warn\" # newer aho_corasick versions throw a deprecation warning\n     ../cargo.sh test --tests -- --exclude-should-panic --test-threads 1 -Zunstable-options -q\n     popd\n }\n \n+function extended_sysroot_tests() {\n+    #pushd simple-raytracer\n+    #echo \"[BENCH COMPILE] ebobby/simple-raytracer\"\n+    #hyperfine --runs \"${RUN_RUNS:-10}\" --warmup 1 --prepare \"cargo clean\" \\\n+    #\"RUSTC=rustc RUSTFLAGS='' cargo build\" \\\n+    #\"../cargo.sh build\"\n+\n+    #echo \"[BENCH RUN] ebobby/simple-raytracer\"\n+    #cp ./target/debug/main ./raytracer_cg_gcc\n+    #hyperfine --runs \"${RUN_RUNS:-10}\" ./raytracer_cg_llvm ./raytracer_cg_gcc\n+    #popd\n+\n+    extended_rand_tests\n+    extended_regex_example_tests\n+    extended_regex_tests\n+}\n+\n function test_rustc() {\n     echo\n     echo \"[TEST] rust-lang/rust\"\n@@ -297,6 +343,20 @@ EOF\n         xargs -a ../failing-ui-tests.txt -d'\\n' git checkout --\n     fi\n \n+    if [ $nb_parts -gt 0 ]; then\n+        echo \"Splitting ui_test into $nb_parts parts (and running part $current_part)\"\n+        find src/test/ui -type f -name '*.rs' -not -path \"*/auxiliary/*\" > ui_tests\n+        count=$((`wc -l < ui_tests` / $nb_parts))\n+        # We increment the number of tests by one because if this is an odd number, we would skip\n+        # one test.\n+        count=$((count + 1))\n+        split -d -l $count -a 1 ui_tests ui_tests.split\n+        # Removing all tests.\n+        find src/test/ui -type f -name '*.rs' -not -path \"*/auxiliary/*\" -exec rm {} \\;\n+        # Putting back only the ones we want to test.\n+        xargs -a \"ui_tests.split$current_part\" -d'\\n' git checkout --\n+    fi\n+\n     echo \"[TEST] rustc test suite\"\n     COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 src/test/ui/ --rustc-args \"$RUSTC_ARGS\"\n }"}]}