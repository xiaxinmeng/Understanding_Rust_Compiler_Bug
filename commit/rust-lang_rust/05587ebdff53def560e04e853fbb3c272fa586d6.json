{"sha": "05587ebdff53def560e04e853fbb3c272fa586d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NTg3ZWJkZmY1M2RlZjU2MGUwNGU4NTNmYmIzYzI3MmZhNTg2ZDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-27T01:48:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-27T02:01:30Z"}, "message": "rustc: Ignore the return value of native functions that return nil. stage1 can build libstd now, though it leaks.", "tree": {"sha": "e7137bf6ac7405636b93d0775b25c5f5aaaba638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7137bf6ac7405636b93d0775b25c5f5aaaba638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05587ebdff53def560e04e853fbb3c272fa586d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05587ebdff53def560e04e853fbb3c272fa586d6", "html_url": "https://github.com/rust-lang/rust/commit/05587ebdff53def560e04e853fbb3c272fa586d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05587ebdff53def560e04e853fbb3c272fa586d6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "532a65485dc2f6a18a81c513c3abfbb34cb88e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/532a65485dc2f6a18a81c513c3abfbb34cb88e65", "html_url": "https://github.com/rust-lang/rust/commit/532a65485dc2f6a18a81c513c3abfbb34cb88e65"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "f789a216c17ac18dc41dafb41b255f8f76edd67d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/05587ebdff53def560e04e853fbb3c272fa586d6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05587ebdff53def560e04e853fbb3c272fa586d6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=05587ebdff53def560e04e853fbb3c272fa586d6", "patch": "@@ -6557,6 +6557,11 @@ fn decl_native_fn_and_pair(@crate_ctxt ccx,\n         ty.ty_fn_args(ccx.tcx, fn_type),\n         ty.ty_fn_ret(ccx.tcx, fn_type), num_ty_param);\n \n+    // FIXME: If the returned type is not nil, then we assume it's 32 bits\n+    // wide. This is obviously wildly unsafe. We should have a better FFI\n+    // that allows types of different sizes to be returned.\n+    auto rty_is_nil = ty.type_is_nil(ccx.tcx, ty.ty_fn_ret(ccx.tcx, fn_type));\n+\n     let vec[ValueRef] call_args = vec();\n     auto arg_n = 3u;\n     auto pass_task;\n@@ -6635,7 +6640,11 @@ fn decl_native_fn_and_pair(@crate_ctxt ccx,\n         rptr = bcx.build.BitCast(fcx.llretptr, T_ptr(T_i32()));\n     }\n \n-    bcx.build.Store(r, rptr);\n+    // We don't store the return value if it's nil, to avoid stomping on a nil\n+    // pointer. This is the only concession made to non-i32 return values. See\n+    // the FIXME above.\n+    if (!rty_is_nil) { bcx.build.Store(r, rptr); }\n+\n     bcx.build.RetVoid();\n \n     // Tie up the llallocas -> lltop edge."}]}