{"sha": "8cebb1f64498508e1fc940d885ad05d7a2fb4089", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZWJiMWY2NDQ5ODUwOGUxZmM5NDBkODg1YWQwNWQ3YTJmYjQwODk=", "commit": {"author": {"name": "Chase Southwood", "email": "chase.southwood@gmail.com", "date": "2015-01-04T06:09:18Z"}, "committer": {"name": "Chase Southwood", "email": "chase.southwood@gmail.com", "date": "2015-01-04T06:39:42Z"}, "message": "Rename `raw_pointer_deriving` lint to `raw_pointer_derive`\n\nDue to the `#[deriving]` -> `#[derive]` switch.", "tree": {"sha": "7844be1b3476cd4818dfcb3f1fc864796fc0d7f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7844be1b3476cd4818dfcb3f1fc864796fc0d7f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cebb1f64498508e1fc940d885ad05d7a2fb4089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cebb1f64498508e1fc940d885ad05d7a2fb4089", "html_url": "https://github.com/rust-lang/rust/commit/8cebb1f64498508e1fc940d885ad05d7a2fb4089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cebb1f64498508e1fc940d885ad05d7a2fb4089/comments", "author": {"login": "csouth3", "id": 6758080, "node_id": "MDQ6VXNlcjY3NTgwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6758080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csouth3", "html_url": "https://github.com/csouth3", "followers_url": "https://api.github.com/users/csouth3/followers", "following_url": "https://api.github.com/users/csouth3/following{/other_user}", "gists_url": "https://api.github.com/users/csouth3/gists{/gist_id}", "starred_url": "https://api.github.com/users/csouth3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csouth3/subscriptions", "organizations_url": "https://api.github.com/users/csouth3/orgs", "repos_url": "https://api.github.com/users/csouth3/repos", "events_url": "https://api.github.com/users/csouth3/events{/privacy}", "received_events_url": "https://api.github.com/users/csouth3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csouth3", "id": 6758080, "node_id": "MDQ6VXNlcjY3NTgwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6758080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csouth3", "html_url": "https://github.com/csouth3", "followers_url": "https://api.github.com/users/csouth3/followers", "following_url": "https://api.github.com/users/csouth3/following{/other_user}", "gists_url": "https://api.github.com/users/csouth3/gists{/gist_id}", "starred_url": "https://api.github.com/users/csouth3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csouth3/subscriptions", "organizations_url": "https://api.github.com/users/csouth3/orgs", "repos_url": "https://api.github.com/users/csouth3/repos", "events_url": "https://api.github.com/users/csouth3/events{/privacy}", "received_events_url": "https://api.github.com/users/csouth3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6c786671d692d7b13c2e5c68a53001327b4b125", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6c786671d692d7b13c2e5c68a53001327b4b125", "html_url": "https://github.com/rust-lang/rust/commit/c6c786671d692d7b13c2e5c68a53001327b4b125"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "e44e3154d3df1e252c7c5d8e2840ac9fc36db1f6", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8cebb1f64498508e1fc940d885ad05d7a2fb4089/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cebb1f64498508e1fc940d885ad05d7a2fb4089/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=8cebb1f64498508e1fc940d885ad05d7a2fb4089", "patch": "@@ -550,20 +550,20 @@ impl LintPass for BoxPointers {\n }\n \n declare_lint! {\n-    RAW_POINTER_DERIVING,\n+    RAW_POINTER_DERIVE,\n     Warn,\n     \"uses of #[derive] with raw pointers are rarely correct\"\n }\n \n-struct RawPtrDerivingVisitor<'a, 'tcx: 'a> {\n+struct RawPtrDeriveVisitor<'a, 'tcx: 'a> {\n     cx: &'a Context<'a, 'tcx>\n }\n \n-impl<'a, 'tcx, 'v> Visitor<'v> for RawPtrDerivingVisitor<'a, 'tcx> {\n+impl<'a, 'tcx, 'v> Visitor<'v> for RawPtrDeriveVisitor<'a, 'tcx> {\n     fn visit_ty(&mut self, ty: &ast::Ty) {\n         static MSG: &'static str = \"use of `#[derive]` with a raw pointer\";\n         if let ast::TyPtr(..) = ty.node {\n-            self.cx.span_lint(RAW_POINTER_DERIVING, ty.span, MSG);\n+            self.cx.span_lint(RAW_POINTER_DERIVE, ty.span, MSG);\n         }\n         visit::walk_ty(self, ty);\n     }\n@@ -572,21 +572,21 @@ impl<'a, 'tcx, 'v> Visitor<'v> for RawPtrDerivingVisitor<'a, 'tcx> {\n     fn visit_block(&mut self, _: &ast::Block) {}\n }\n \n-pub struct RawPointerDeriving {\n+pub struct RawPointerDerive {\n     checked_raw_pointers: NodeSet,\n }\n \n-impl RawPointerDeriving {\n-    pub fn new() -> RawPointerDeriving {\n-        RawPointerDeriving {\n+impl RawPointerDerive {\n+    pub fn new() -> RawPointerDerive {\n+        RawPointerDerive {\n             checked_raw_pointers: NodeSet::new(),\n         }\n     }\n }\n \n-impl LintPass for RawPointerDeriving {\n+impl LintPass for RawPointerDerive {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(RAW_POINTER_DERIVING)\n+        lint_array!(RAW_POINTER_DERIVE)\n     }\n \n     fn check_item(&mut self, cx: &Context, item: &ast::Item) {\n@@ -611,7 +611,7 @@ impl LintPass for RawPointerDeriving {\n         if !self.checked_raw_pointers.insert(item.id) { return }\n         match item.node {\n             ast::ItemStruct(..) | ast::ItemEnum(..) => {\n-                let mut visitor = RawPtrDerivingVisitor { cx: cx };\n+                let mut visitor = RawPtrDeriveVisitor { cx: cx };\n                 visit::walk_item(&mut visitor, &*item);\n             }\n             _ => {}"}, {"sha": "9cf4ae9d467b0a09d298456b466f56445cb61218", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cebb1f64498508e1fc940d885ad05d7a2fb4089/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cebb1f64498508e1fc940d885ad05d7a2fb4089/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=8cebb1f64498508e1fc940d885ad05d7a2fb4089", "patch": "@@ -208,7 +208,7 @@ impl LintStore {\n \n         add_builtin_with_new!(sess,\n                               TypeLimits,\n-                              RawPointerDeriving,\n+                              RawPointerDerive,\n                               MissingDoc,\n         );\n \n@@ -247,6 +247,7 @@ impl LintStore {\n         self.register_renamed(\"unknown_crate_type\", \"unknown_crate_types\");\n         self.register_renamed(\"variant_size_difference\", \"variant_size_differences\");\n         self.register_renamed(\"transmute_fat_ptr\", \"fat_ptr_transmutes\");\n+        self.register_renamed(\"raw_pointer_deriving\", \"raw_pointer_derive\");\n \n     }\n "}, {"sha": "3198e782df8931a370c282e3c497aeb5679f5f68", "filename": "src/test/compile-fail/lint-raw-ptr-derive.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8cebb1f64498508e1fc940d885ad05d7a2fb4089/src%2Ftest%2Fcompile-fail%2Flint-raw-ptr-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cebb1f64498508e1fc940d885ad05d7a2fb4089/src%2Ftest%2Fcompile-fail%2Flint-raw-ptr-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-raw-ptr-derive.rs?ref=8cebb1f64498508e1fc940d885ad05d7a2fb4089", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![allow(dead_code)]\n-#![deny(raw_pointer_deriving)]\n+#![deny(raw_pointer_derive)]\n \n #[derive(Clone)]\n struct Foo {", "previous_filename": "src/test/compile-fail/lint-raw-ptr-deriving.rs"}]}