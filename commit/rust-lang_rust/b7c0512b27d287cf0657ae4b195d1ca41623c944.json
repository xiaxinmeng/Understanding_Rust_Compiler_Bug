{"sha": "b7c0512b27d287cf0657ae4b195d1ca41623c944", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YzA1MTJiMjdkMjg3Y2YwNjU3YWU0YjE5NWQxY2E0MTYyM2M5NDQ=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-05-28T22:13:57Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-06T20:35:08Z"}, "message": "refactor so tt_fold only requires an ident->ident fn", "tree": {"sha": "cc64cd2707d3048cb386134746a307cf3ffa752d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc64cd2707d3048cb386134746a307cf3ffa752d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7c0512b27d287cf0657ae4b195d1ca41623c944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c0512b27d287cf0657ae4b195d1ca41623c944", "html_url": "https://github.com/rust-lang/rust/commit/b7c0512b27d287cf0657ae4b195d1ca41623c944", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7c0512b27d287cf0657ae4b195d1ca41623c944/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93337f0daab1958bd7f7614cf54d3f69f2ab64ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/93337f0daab1958bd7f7614cf54d3f69f2ab64ce", "html_url": "https://github.com/rust-lang/rust/commit/93337f0daab1958bd7f7614cf54d3f69f2ab64ce"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "750ec0be9847f36e828639fc5117b2789689b362", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b7c0512b27d287cf0657ae4b195d1ca41623c944/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c0512b27d287cf0657ae4b195d1ca41623c944/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=b7c0512b27d287cf0657ae4b195d1ca41623c944", "patch": "@@ -118,35 +118,37 @@ fn fold_mac_(m: &mac, fld: @ast_fold) -> mac {\n         node: match m.node {\n             mac_invoc_tt(ref p,ref tts) =>\n             mac_invoc_tt(fld.fold_path(p),\n-                         fold_tts(*tts,fld))\n+                         fold_tts(*tts,|id|{fld.fold_ident(id)}))\n         },\n         span: fld.new_span(m.span)\n     }\n }\n \n-fn fold_tts(tts : &[token_tree], fld: @ast_fold) -> ~[token_tree] {\n+// build a new vector of tts by appling the given function to\n+// all of the identifiers in the token trees.\n+pub fn fold_tts(tts : &[token_tree], f: @fn(ident)->ident) -> ~[token_tree] {\n     do tts.map |tt| {\n         match *tt {\n             tt_tok(span, ref tok) =>\n-            tt_tok(span,maybe_fold_ident(tok,fld)),\n+            tt_tok(span,maybe_fold_ident(tok,f)),\n             tt_delim(ref tts) =>\n-            tt_delim(@mut fold_tts(**tts, fld)),\n+            tt_delim(@mut fold_tts(**tts, f)),\n             tt_seq(span, ref pattern, ref sep, is_optional) =>\n             tt_seq(span,\n-                   @mut fold_tts(**pattern, fld),\n-                   sep.map(|tok|maybe_fold_ident(tok,fld)),\n+                   @mut fold_tts(**pattern, f),\n+                   sep.map(|tok|maybe_fold_ident(tok,f)),\n                    is_optional),\n             tt_nonterminal(sp,ref ident) =>\n-            tt_nonterminal(sp,fld.fold_ident(*ident))\n+            tt_nonterminal(sp,f(*ident))\n         }\n     }\n }\n \n // apply ident folder if it's an ident, otherwise leave it alone\n-fn maybe_fold_ident(t: &token::Token, fld: @ast_fold) -> token::Token {\n+fn maybe_fold_ident(t : &token::Token, f: @fn(ident)->ident) -> token::Token {\n     match *t {\n         token::IDENT(id,followed_by_colons) =>\n-        token::IDENT(fld.fold_ident(id),followed_by_colons),\n+        token::IDENT(f(id),followed_by_colons),\n         _ => (*t).clone()\n     }\n }"}]}