{"sha": "5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYjFjZjE2MTk3YThjYzM4ZDE4ZTgxMzM4ZjRjMTQ4ZTE0ZWUzNmY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-04T08:57:17Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-11-07T18:06:48Z"}, "message": "rustc_metadata: Rename `schema` to `rmeta`\n\nAnd change `rmeta.rs` to `rmeta/mod.rs`", "tree": {"sha": "de092fba8c25682f25d6c44db8697bb55bad496b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de092fba8c25682f25d6c44db8697bb55bad496b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "html_url": "https://github.com/rust-lang/rust/commit/5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b75147451ffe8654963b3399df40d40c6ed0ff2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b75147451ffe8654963b3399df40d40c6ed0ff2", "html_url": "https://github.com/rust-lang/rust/commit/2b75147451ffe8654963b3399df40d40c6ed0ff2"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "05e3ee3322e59d031b96bb805fcde3a50c2cbbcd", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -2,7 +2,7 @@\n \n use crate::cstore::{self, CStore, MetadataBlob};\n use crate::locator::{self, CratePaths};\n-use crate::schema::{CrateRoot, CrateDep};\n+use crate::rmeta::{CrateRoot, CrateDep};\n use rustc_data_structures::sync::{Lock, Once, AtomicCell};\n \n use rustc::hir::def_id::CrateNum;"}, {"sha": "c6c8ee575a98abdda0849974ef1cb4227c89eb45", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -1,7 +1,7 @@\n // The crate store - a central repo for information collected about external\n // crates and libraries\n \n-use crate::schema;\n+use crate::rmeta;\n use rustc::dep_graph::DepNodeIndex;\n use rustc::hir::def_id::{CrateNum, DefIndex};\n use rustc::hir::map::definitions::DefPathTable;\n@@ -17,7 +17,7 @@ use syntax_expand::base::SyntaxExtension;\n use syntax_pos;\n use proc_macro::bridge::client::ProcMacro;\n \n-pub use crate::schema::{provide, provide_extern};\n+pub use crate::rmeta::{provide, provide_extern};\n \n // A map from external crate numbers (as decoded from some crate file) to\n // local crate numbers (as generated during this session). Each external\n@@ -49,7 +49,7 @@ crate struct CrateMetadata {\n     /// lifetime is only used behind `Lazy`, and therefore acts like an\n     /// universal (`for<'tcx>`), that is paired up with whichever `TyCtxt`\n     /// is being used to decode those values.\n-    crate root: schema::CrateRoot<'static>,\n+    crate root: rmeta::CrateRoot<'static>,\n     /// For each definition in this crate, we encode a key. When the\n     /// crate is loaded, we read all the keys and put them in this\n     /// hashmap, which gives the reverse mapping. This allows us to\n@@ -59,7 +59,7 @@ crate struct CrateMetadata {\n     /// Trait impl data.\n     /// FIXME: Used only from queries and can use query cache,\n     /// so pre-decoding can probably be avoided.\n-    crate trait_impls: FxHashMap<(u32, DefIndex), schema::Lazy<[DefIndex]>>,\n+    crate trait_impls: FxHashMap<(u32, DefIndex), rmeta::Lazy<[DefIndex]>>,\n     /// Proc macro descriptions for this crate, if it's a proc macro crate.\n     crate raw_proc_macros: Option<&'static [ProcMacro]>,\n     /// Source maps for code from the crate."}, {"sha": "ac9d78e9a515c199f5f3477a99e9a48d329b2b82", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -30,7 +30,7 @@ mod dependency_format;\n mod foreign_modules;\n mod link_args;\n mod native_libs;\n-mod schema;\n+mod rmeta;\n \n pub mod creader;\n pub mod cstore;"}, {"sha": "88d7595b063da20985a6fd004e96fb73552cafb9", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -214,7 +214,7 @@\n \n use crate::cstore::MetadataBlob;\n use crate::creader::Library;\n-use crate::schema::{METADATA_HEADER, rustc_version};\n+use crate::rmeta::{METADATA_HEADER, rustc_version};\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::svh::Svh;"}, {"sha": "40ec04537b0e66b6d17bdf246d4a42f81bea5722", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -1,8 +1,8 @@\n // Decoding metadata from a single crate's metadata\n \n use crate::cstore::{self, CrateMetadata, MetadataBlob};\n-use crate::schema::*;\n-use crate::schema::table::{FixedSizeEncoding, PerDefTable};\n+use crate::rmeta::*;\n+use crate::rmeta::table::{FixedSizeEncoding, PerDefTable};\n \n use rustc_index::vec::IndexVec;\n use rustc_data_structures::sync::Lrc;", "previous_filename": "src/librustc_metadata/schema/decoder.rs"}, {"sha": "6eacfc28de2dbfe7e129b381569a9f6ca3c88248", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -2,7 +2,7 @@ use crate::cstore::{self, LoadedMacro};\n use crate::link_args;\n use crate::native_libs;\n use crate::foreign_modules;\n-use crate::schema::{self, encoder};\n+use crate::rmeta::{self, encoder};\n \n use rustc::ty::query::QueryConfig;\n use rustc::middle::cstore::{CrateSource, CrateStore, DepKind, EncodedMetadata, NativeLibraryKind};\n@@ -528,6 +528,6 @@ impl CrateStore for cstore::CStore {\n \n     fn metadata_encoding_version(&self) -> &[u8]\n     {\n-        schema::METADATA_HEADER\n+        rmeta::METADATA_HEADER\n     }\n }", "previous_filename": "src/librustc_metadata/schema/decoder/cstore_impl.rs"}, {"sha": "afc81649e37195e8e33b2fcd7bcd7e2f8380b512", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -1,5 +1,5 @@\n-use crate::schema::*;\n-use crate::schema::table::{FixedSizeEncoding, PerDefTable};\n+use crate::rmeta::*;\n+use crate::rmeta::table::{FixedSizeEncoding, PerDefTable};\n \n use rustc::middle::cstore::{LinkagePreference, NativeLibrary,\n                             EncodedMetadata, ForeignModule};", "previous_filename": "src/librustc_metadata/schema/encoder.rs"}, {"sha": "4eabeac6d986911b364ad1b41607f303212d9945", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "previous_filename": "src/librustc_metadata/schema.rs"}, {"sha": "613d92c6d7b0b9c34aa4dc995bf9f5d0e19eacc8", "filename": "src/librustc_metadata/rmeta/table.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb1cf16197a8cc38d18e81338f4c148e14ee36f/src%2Flibrustc_metadata%2Frmeta%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Ftable.rs?ref=5eb1cf16197a8cc38d18e81338f4c148e14ee36f", "patch": "@@ -1,4 +1,4 @@\n-use crate::schema::*;\n+use crate::rmeta::*;\n \n use rustc::hir::def_id::{DefId, DefIndex};\n use rustc_serialize::{Encodable, opaque::Encoder};", "previous_filename": "src/librustc_metadata/schema/table.rs"}]}