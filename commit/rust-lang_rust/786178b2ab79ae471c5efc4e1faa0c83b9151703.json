{"sha": "786178b2ab79ae471c5efc4e1faa0c83b9151703", "node_id": "C_kwDOAAsO6NoAKDc4NjE3OGIyYWI3OWFlNDcxYzVlZmM0ZTFmYWEwYzgzYjkxNTE3MDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-27T09:47:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-27T09:47:42Z"}, "message": "Auto merge of #111934 - scottmcm:stabilize-hash-one, r=Amanieu\n\nStabilize `BuildHasher::hash_one`\n\nFCP completed in https://github.com/rust-lang/rust/issues/86161#issuecomment-1561125732", "tree": {"sha": "760bce6ca3b66f3d5d71a5d7107701213c3c5208", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/760bce6ca3b66f3d5d71a5d7107701213c3c5208"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/786178b2ab79ae471c5efc4e1faa0c83b9151703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/786178b2ab79ae471c5efc4e1faa0c83b9151703", "html_url": "https://github.com/rust-lang/rust/commit/786178b2ab79ae471c5efc4e1faa0c83b9151703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/786178b2ab79ae471c5efc4e1faa0c83b9151703/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a525c7ddba5997b132efa46515e0ce90c173f480", "url": "https://api.github.com/repos/rust-lang/rust/commits/a525c7ddba5997b132efa46515e0ce90c173f480", "html_url": "https://github.com/rust-lang/rust/commit/a525c7ddba5997b132efa46515e0ce90c173f480"}, {"sha": "ba5a3968b8ecd578247f94c6a62bfa8652cc2ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba5a3968b8ecd578247f94c6a62bfa8652cc2ef8", "html_url": "https://github.com/rust-lang/rust/commit/ba5a3968b8ecd578247f94c6a62bfa8652cc2ef8"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "47661a3d38429ee549daa9e07154e00291304e36", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/786178b2ab79ae471c5efc4e1faa0c83b9151703/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786178b2ab79ae471c5efc4e1faa0c83b9151703/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=786178b2ab79ae471c5efc4e1faa0c83b9151703", "patch": "@@ -2662,7 +2662,6 @@ impl<T: Clone, A: Allocator + Clone> Clone for Vec<T, A> {\n /// as required by the `core::borrow::Borrow` implementation.\n ///\n /// ```\n-/// #![feature(build_hasher_simple_hash_one)]\n /// use std::hash::BuildHasher;\n ///\n /// let b = std::collections::hash_map::RandomState::new();"}, {"sha": "70f4bf2a7ed8e61a42f403a9f252c62082593b23", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/786178b2ab79ae471c5efc4e1faa0c83b9151703/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786178b2ab79ae471c5efc4e1faa0c83b9151703/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=786178b2ab79ae471c5efc4e1faa0c83b9151703", "patch": "@@ -291,7 +291,6 @@ impl<'a, T, const N: usize> TryFrom<&'a mut [T]> for &'a mut [T; N] {\n /// as required by the `Borrow` implementation.\n ///\n /// ```\n-/// #![feature(build_hasher_simple_hash_one)]\n /// use std::hash::BuildHasher;\n ///\n /// let b = std::collections::hash_map::RandomState::new();"}, {"sha": "ca7c0772de86e0beb5b7ffa74fdff25ac840ce65", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786178b2ab79ae471c5efc4e1faa0c83b9151703/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786178b2ab79ae471c5efc4e1faa0c83b9151703/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=786178b2ab79ae471c5efc4e1faa0c83b9151703", "patch": "@@ -674,8 +674,6 @@ pub trait BuildHasher {\n     /// # Example\n     ///\n     /// ```\n-    /// #![feature(build_hasher_simple_hash_one)]\n-    ///\n     /// use std::cmp::{max, min};\n     /// use std::hash::{BuildHasher, Hash, Hasher};\n     /// struct OrderAmbivalentPair<T: Ord>(T, T);\n@@ -697,7 +695,7 @@ pub trait BuildHasher {\n     ///     bh.hash_one(&OrderAmbivalentPair(2, 10))\n     /// );\n     /// ```\n-    #[unstable(feature = \"build_hasher_simple_hash_one\", issue = \"86161\")]\n+    #[stable(feature = \"build_hasher_simple_hash_one\", since = \"CURRENT_RUSTC_VERSION\")]\n     fn hash_one<T: Hash>(&self, x: T) -> u64\n     where\n         Self: Sized,"}]}