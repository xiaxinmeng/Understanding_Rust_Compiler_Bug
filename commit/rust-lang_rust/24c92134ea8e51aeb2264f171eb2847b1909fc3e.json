{"sha": "24c92134ea8e51aeb2264f171eb2847b1909fc3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YzkyMTM0ZWE4ZTUxYWViMjI2NGYxNzFlYjI4NDdiMTkwOWZjM2U=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-10T16:41:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-10T16:41:48Z"}, "message": "rollup merge of #22065: bluss/range-size-hint\n\nWhen self.start > self.end, these iterators simply return None,\nso we adjust the size_hint to just return zero in this case.\n\nCertain optimizations can be implemented in and outside libstd if we\nknow we can trust the size_hint for all inputs to for example\nRange<usize>.\n\nThis corrects the ExactSizeIterator implementations, which IMO were\nunsound and incorrect previously, since they allowed a range like (2..1)\nto return a size_hint of -1us in when debug assertions are turned off.", "tree": {"sha": "c3c76e20735e73f0dd5da4540e2b81514dbbf1e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3c76e20735e73f0dd5da4540e2b81514dbbf1e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24c92134ea8e51aeb2264f171eb2847b1909fc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24c92134ea8e51aeb2264f171eb2847b1909fc3e", "html_url": "https://github.com/rust-lang/rust/commit/24c92134ea8e51aeb2264f171eb2847b1909fc3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24c92134ea8e51aeb2264f171eb2847b1909fc3e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e6bea6e074afb8c84c939a83b884585345ecf4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e6bea6e074afb8c84c939a83b884585345ecf4f", "html_url": "https://github.com/rust-lang/rust/commit/6e6bea6e074afb8c84c939a83b884585345ecf4f"}, {"sha": "4f61e160326676cdcce94b9d5bca7d88c5f40ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f61e160326676cdcce94b9d5bca7d88c5f40ee9", "html_url": "https://github.com/rust-lang/rust/commit/4f61e160326676cdcce94b9d5bca7d88c5f40ee9"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "18d68836f296afc241e48b766b53fcbf70db8a61", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/24c92134ea8e51aeb2264f171eb2847b1909fc3e/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c92134ea8e51aeb2264f171eb2847b1909fc3e/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=24c92134ea8e51aeb2264f171eb2847b1909fc3e", "patch": "@@ -2646,13 +2646,7 @@ impl<A: Int> Iterator for RangeStepInclusive<A> {\n macro_rules! range_exact_iter_impl {\n     ($($t:ty)*) => ($(\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-        impl ExactSizeIterator for ::ops::Range<$t> {\n-            #[inline]\n-            fn len(&self) -> usize {\n-                debug_assert!(self.end >= self.start);\n-                (self.end - self.start) as usize\n-            }\n-        }\n+        impl ExactSizeIterator for ::ops::Range<$t> { }\n     )*)\n }\n \n@@ -2673,9 +2667,12 @@ impl<A: Int> Iterator for ::ops::Range<A> {\n \n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        debug_assert!(self.end >= self.start);\n-        let hint = (self.end - self.start).to_uint();\n-        (hint.unwrap_or(0), hint)\n+        if self.start >= self.end {\n+            (0, Some(0))\n+        } else {\n+            let length = (self.end - self.start).to_uint();\n+            (length.unwrap_or(0), length)\n+        }\n     }\n }\n "}, {"sha": "3f8e330b332b8806570069fa615d0fea9487fd5f", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24c92134ea8e51aeb2264f171eb2847b1909fc3e/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c92134ea8e51aeb2264f171eb2847b1909fc3e/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=24c92134ea8e51aeb2264f171eb2847b1909fc3e", "patch": "@@ -756,6 +756,7 @@ fn test_range() {\n     // this test is only meaningful when sizeof uint < sizeof u64\n     assert_eq!((uint::MAX - 1..uint::MAX).size_hint(), (1, Some(1)));\n     assert_eq!((-10..-1).size_hint(), (9, Some(9)));\n+    assert_eq!((-1..-10).size_hint(), (0, Some(0)));\n }\n \n #[test]"}]}