{"sha": "7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkOTlkNmQxMGIwMjQ2MDMyZDYxM2ViOWQ5YzZiNWJmZmU2YzJiYTY=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-02-22T21:39:15Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-02-22T21:39:15Z"}, "message": "Update for review comments.", "tree": {"sha": "aa5133904deb0187732b8e3677ef8ea5709c30ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa5133904deb0187732b8e3677ef8ea5709c30ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6", "html_url": "https://github.com/rust-lang/rust/commit/7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87ac39c8000bec014154d28704177a72a64f7410", "url": "https://api.github.com/repos/rust-lang/rust/commits/87ac39c8000bec014154d28704177a72a64f7410", "html_url": "https://github.com/rust-lang/rust/commit/87ac39c8000bec014154d28704177a72a64f7410"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "ec23d4fe0dbd37993d5d9ddb630df1d2eaf57b6c", "filename": "src/doc/rustc/src/tests/index.md", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6/src%2Fdoc%2Frustc%2Fsrc%2Ftests%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6/src%2Fdoc%2Frustc%2Fsrc%2Ftests%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Ftests%2Findex.md?ref=7d99d6d10b0246032d613eb9d9c6b5bffe6c2ba6", "patch": "@@ -26,8 +26,9 @@ crate. The `--test` flag will make the following changes:\n * Links the executable with [`libtest`], the test harness that is part of the\n   standard library, which handles running the tests.\n * Synthesizes a [`main` function] which will process command-line arguments\n-  and run the tests. If the crate already has a `main` function, it will be\n-  replaced.\n+  and run the tests. This new `main` function will replace any existing `main`\n+  function as the entry point of the executable, though the existing `main`\n+  will still be compiled.\n * Enables the [`test` cfg option], which allows your code to use conditional\n   compilation to detect if it is being built as a test.\n * Enables building of functions annotated with the [`test`][attribute-test]\n@@ -83,11 +84,11 @@ behavior.\n \n ### Filters\n \n-Bare arguments (those without a `-` prefix) are treated as filters which will\n-only run tests whose name matches one of those strings. The filter will match\n-any substring found in the full path of the test function. For example, if the\n-test function `it_works` is located in the module `utils::paths::tests`, then\n-any of the filters `works`, `path`, `utils::`, or\n+Positional arguments (those without a `-` prefix) are treated as filters which\n+will only run tests whose name matches one of those strings. The filter will\n+match any substring found in the full path of the test function. For example,\n+if the test function `it_works` is located in the module\n+`utils::paths::tests`, then any of the filters `works`, `path`, `utils::`, or\n `utils::paths::tests::it_works` will match that test.\n \n See [Selection options](#selection-options) for more options to control which\n@@ -230,7 +231,7 @@ Controls the format of the output. Valid options:\n \n #### `--logfile` _PATH_\n \n-Writes the results to the tests to the given file.\n+Writes the results of the tests to the given file.\n \n #### `--report-time` _FORMAT_\n \n@@ -244,7 +245,7 @@ docs](../../unstable-book/compiler-flags/report-time.html) for more information.\n Some CLI options are added in an \"unstable\" state, where they are intended for\n experimentation and testing to determine if the option works correctly, has\n the right design, and is useful. The option may not work correctly, break, or\n-change at at any time. To signal that you acknowledge that you are using an\n+change at any time. To signal that you acknowledge that you are using an\n unstable option, they require passing the `-Z unstable-options` command-line\n flag.\n "}]}