{"sha": "791e8001d1368a34fc938ed0e39f600c1b4079e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MWU4MDAxZDEzNjhhMzRmYzkzOGVkMGUzOWY2MDBjMWI0MDc5ZTE=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-04-15T21:17:44Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-04-15T21:59:29Z"}, "message": "Add regression test", "tree": {"sha": "fb48a6e22661626556f0ab747aed4b76ed691856", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb48a6e22661626556f0ab747aed4b76ed691856"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/791e8001d1368a34fc938ed0e39f600c1b4079e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/791e8001d1368a34fc938ed0e39f600c1b4079e1", "html_url": "https://github.com/rust-lang/rust/commit/791e8001d1368a34fc938ed0e39f600c1b4079e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/791e8001d1368a34fc938ed0e39f600c1b4079e1/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2899b58832fec1fd3570e65e231920d2a2e937ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/2899b58832fec1fd3570e65e231920d2a2e937ae", "html_url": "https://github.com/rust-lang/rust/commit/2899b58832fec1fd3570e65e231920d2a2e937ae"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "e1a60557a20c760b2442cca68cfbadbae8b4360a", "filename": "src/test/ui/cast/issue-84213.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/791e8001d1368a34fc938ed0e39f600c1b4079e1/src%2Ftest%2Fui%2Fcast%2Fissue-84213.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/791e8001d1368a34fc938ed0e39f600c1b4079e1/src%2Ftest%2Fui%2Fcast%2Fissue-84213.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-84213.fixed?ref=791e8001d1368a34fc938ed0e39f600c1b4079e1", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+struct Something {\n+    pub field: u32,\n+}\n+\n+fn main() {\n+    let mut something = Something { field: 1337 };\n+\n+    let _pointer_to_something = &something as *const Something;\n+    //~^ ERROR: non-primitive cast\n+\n+    let _mut_pointer_to_something = &mut something as *mut Something;\n+    //~^ ERROR: non-primitive cast\n+}"}, {"sha": "3df264bdffb6ac968e8be89ad4f7ae7dc862eecd", "filename": "src/test/ui/cast/issue-84213.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/791e8001d1368a34fc938ed0e39f600c1b4079e1/src%2Ftest%2Fui%2Fcast%2Fissue-84213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/791e8001d1368a34fc938ed0e39f600c1b4079e1/src%2Ftest%2Fui%2Fcast%2Fissue-84213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-84213.rs?ref=791e8001d1368a34fc938ed0e39f600c1b4079e1", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+struct Something {\n+    pub field: u32,\n+}\n+\n+fn main() {\n+    let mut something = Something { field: 1337 };\n+\n+    let _pointer_to_something = something as *const Something;\n+    //~^ ERROR: non-primitive cast\n+\n+    let _mut_pointer_to_something = something as *mut Something;\n+    //~^ ERROR: non-primitive cast\n+}"}, {"sha": "a76aac580131ee92f74baea872791a78ab9e90d1", "filename": "src/test/ui/cast/issue-84213.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/791e8001d1368a34fc938ed0e39f600c1b4079e1/src%2Ftest%2Fui%2Fcast%2Fissue-84213.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/791e8001d1368a34fc938ed0e39f600c1b4079e1/src%2Ftest%2Fui%2Fcast%2Fissue-84213.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fissue-84213.stderr?ref=791e8001d1368a34fc938ed0e39f600c1b4079e1", "patch": "@@ -0,0 +1,25 @@\n+error[E0605]: non-primitive cast: `Something` as `*const Something`\n+  --> $DIR/issue-84213.rs:10:33\n+   |\n+LL |     let _pointer_to_something = something as *const Something;\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid cast\n+   |\n+help: borrow the value for the cast to be valid\n+   |\n+LL |     let _pointer_to_something = &something as *const Something;\n+   |                                 ^\n+\n+error[E0605]: non-primitive cast: `Something` as `*mut Something`\n+  --> $DIR/issue-84213.rs:13:37\n+   |\n+LL |     let _mut_pointer_to_something = something as *mut Something;\n+   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid cast\n+   |\n+help: borrow the value for the cast to be valid\n+   |\n+LL |     let _mut_pointer_to_something = &mut something as *mut Something;\n+   |                                     ^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0605`."}]}