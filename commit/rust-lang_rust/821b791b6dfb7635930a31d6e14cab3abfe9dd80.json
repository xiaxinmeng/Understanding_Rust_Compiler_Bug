{"sha": "821b791b6dfb7635930a31d6e14cab3abfe9dd80", "node_id": "C_kwDOAAsO6NoAKDgyMWI3OTFiNmRmYjc2MzU5MzBhMzFkNmUxNGNhYjNhYmZlOWRkODA", "commit": {"author": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2022-01-30T10:23:36Z"}, "committer": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2022-02-21T06:34:35Z"}, "message": "Validate `let` expressions\n\nEmit an error if they're found in an invalid position.", "tree": {"sha": "616e3fcd292da1392ef1389148fdc45f1c1e01c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/616e3fcd292da1392ef1389148fdc45f1c1e01c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/821b791b6dfb7635930a31d6e14cab3abfe9dd80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/821b791b6dfb7635930a31d6e14cab3abfe9dd80", "html_url": "https://github.com/rust-lang/rust/commit/821b791b6dfb7635930a31d6e14cab3abfe9dd80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/821b791b6dfb7635930a31d6e14cab3abfe9dd80/comments", "author": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1b7169b483ff49ea420ec1ed3822d739589df58", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b7169b483ff49ea420ec1ed3822d739589df58", "html_url": "https://github.com/rust-lang/rust/commit/a1b7169b483ff49ea420ec1ed3822d739589df58"}], "stats": {"total": 261, "additions": 261, "deletions": 0}, "files": [{"sha": "3ea5844c9515be3a7053f1f2734fa65e77d1c872", "filename": "crates/syntax/src/validation.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/821b791b6dfb7635930a31d6e14cab3abfe9dd80/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821b791b6dfb7635930a31d6e14cab3abfe9dd80/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation.rs?ref=821b791b6dfb7635930a31d6e14cab3abfe9dd80", "patch": "@@ -38,6 +38,7 @@ pub(crate) fn validate(root: &SyntaxNode) -> Vec<SyntaxError> {\n                 ast::PtrType(it) => validate_trait_object_ptr_ty(it, &mut errors),\n                 ast::FnPtrType(it) => validate_trait_object_fn_ptr_ret_ty(it, &mut errors),\n                 ast::MacroRules(it) => validate_macro_rules(it, &mut errors),\n+                ast::LetExpr(it) => validate_let_expr(it, &mut errors),\n                 _ => (),\n             }\n         }\n@@ -343,3 +344,33 @@ fn validate_const(const_: ast::Const, errors: &mut Vec<SyntaxError>) {\n         errors.push(SyntaxError::new(\"const globals cannot be mutable\", mut_token.text_range()));\n     }\n }\n+\n+fn validate_let_expr(let_: ast::LetExpr, errors: &mut Vec<SyntaxError>) {\n+    let mut token = let_.syntax().clone();\n+    loop {\n+        token = match token.parent() {\n+            Some(it) => it,\n+            None => break,\n+        };\n+\n+        if ast::ParenExpr::can_cast(token.kind()) {\n+            continue;\n+        } else if let Some(it) = ast::BinExpr::cast(token.clone()) {\n+            if it.op_kind() == Some(ast::BinaryOp::LogicOp(ast::LogicOp::And)) {\n+                continue;\n+            }\n+        } else if ast::IfExpr::can_cast(token.kind())\n+            || ast::WhileExpr::can_cast(token.kind())\n+            || ast::MatchGuard::can_cast(token.kind())\n+        {\n+            // It must be part of the condition since the expressions are inside a block.\n+            return;\n+        }\n+\n+        break;\n+    }\n+    errors.push(SyntaxError::new(\n+        \"`let` expressions are not supported here\",\n+        let_.syntax().text_range(),\n+    ));\n+}"}, {"sha": "5b37b597832049c6f1658c0634761acd7ae9b2dd", "filename": "crates/syntax/test_data/parser/validation/invalid_let_expr.rast", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/rust-lang/rust/blob/821b791b6dfb7635930a31d6e14cab3abfe9dd80/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/821b791b6dfb7635930a31d6e14cab3abfe9dd80/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rast?ref=821b791b6dfb7635930a31d6e14cab3abfe9dd80", "patch": "@@ -0,0 +1,216 @@\n+SOURCE_FILE@0..282\r\n+  FN@0..281\r\n+    FN_KW@0..2 \"fn\"\r\n+    WHITESPACE@2..3 \" \"\r\n+    NAME@3..6\r\n+      IDENT@3..6 \"foo\"\r\n+    PARAM_LIST@6..8\r\n+      L_PAREN@6..7 \"(\"\r\n+      R_PAREN@7..8 \")\"\r\n+    WHITESPACE@8..9 \" \"\r\n+    BLOCK_EXPR@9..281\r\n+      STMT_LIST@9..281\r\n+        L_CURLY@9..10 \"{\"\r\n+        WHITESPACE@10..15 \"\\n    \"\r\n+        CONST@15..42\r\n+          CONST_KW@15..20 \"const\"\r\n+          WHITESPACE@20..21 \" \"\r\n+          UNDERSCORE@21..22 \"_\"\r\n+          COLON@22..23 \":\"\r\n+          WHITESPACE@23..24 \" \"\r\n+          TUPLE_TYPE@24..26\r\n+            L_PAREN@24..25 \"(\"\r\n+            R_PAREN@25..26 \")\"\r\n+          WHITESPACE@26..27 \" \"\r\n+          EQ@27..28 \"=\"\r\n+          WHITESPACE@28..29 \" \"\r\n+          LET_EXPR@29..41\r\n+            LET_KW@29..32 \"let\"\r\n+            WHITESPACE@32..33 \" \"\r\n+            WILDCARD_PAT@33..34\r\n+              UNDERSCORE@33..34 \"_\"\r\n+            WHITESPACE@34..35 \" \"\r\n+            EQ@35..36 \"=\"\r\n+            WHITESPACE@36..37 \" \"\r\n+            PATH_EXPR@37..41\r\n+              PATH@37..41\r\n+                PATH_SEGMENT@37..41\r\n+                  NAME_REF@37..41\r\n+                    IDENT@37..41 \"None\"\r\n+          SEMICOLON@41..42 \";\"\r\n+        WHITESPACE@42..48 \"\\n\\n    \"\r\n+        LET_STMT@48..83\r\n+          LET_KW@48..51 \"let\"\r\n+          WHITESPACE@51..52 \" \"\r\n+          WILDCARD_PAT@52..53\r\n+            UNDERSCORE@52..53 \"_\"\r\n+          WHITESPACE@53..54 \" \"\r\n+          EQ@54..55 \"=\"\r\n+          WHITESPACE@55..56 \" \"\r\n+          IF_EXPR@56..82\r\n+            IF_KW@56..58 \"if\"\r\n+            WHITESPACE@58..59 \" \"\r\n+            LITERAL@59..63\r\n+              TRUE_KW@59..63 \"true\"\r\n+            WHITESPACE@63..64 \" \"\r\n+            BLOCK_EXPR@64..82\r\n+              STMT_LIST@64..82\r\n+                L_CURLY@64..65 \"{\"\r\n+                WHITESPACE@65..66 \" \"\r\n+                PAREN_EXPR@66..80\r\n+                  L_PAREN@66..67 \"(\"\r\n+                  LET_EXPR@67..79\r\n+                    LET_KW@67..70 \"let\"\r\n+                    WHITESPACE@70..71 \" \"\r\n+                    WILDCARD_PAT@71..72\r\n+                      UNDERSCORE@71..72 \"_\"\r\n+                    WHITESPACE@72..73 \" \"\r\n+                    EQ@73..74 \"=\"\r\n+                    WHITESPACE@74..75 \" \"\r\n+                    PATH_EXPR@75..79\r\n+                      PATH@75..79\r\n+                        PATH_SEGMENT@75..79\r\n+                          NAME_REF@75..79\r\n+                            IDENT@75..79 \"None\"\r\n+                  R_PAREN@79..80 \")\"\r\n+                WHITESPACE@80..81 \" \"\r\n+                R_CURLY@81..82 \"}\"\r\n+          SEMICOLON@82..83 \";\"\r\n+        WHITESPACE@83..89 \"\\n\\n    \"\r\n+        IF_EXPR@89..279\r\n+          IF_KW@89..91 \"if\"\r\n+          WHITESPACE@91..92 \" \"\r\n+          BIN_EXPR@92..114\r\n+            LITERAL@92..96\r\n+              TRUE_KW@92..96 \"true\"\r\n+            WHITESPACE@96..97 \" \"\r\n+            AMP2@97..99 \"&&\"\r\n+            WHITESPACE@99..100 \" \"\r\n+            PAREN_EXPR@100..114\r\n+              L_PAREN@100..101 \"(\"\r\n+              LET_EXPR@101..113\r\n+                LET_KW@101..104 \"let\"\r\n+                WHITESPACE@104..105 \" \"\r\n+                WILDCARD_PAT@105..106\r\n+                  UNDERSCORE@105..106 \"_\"\r\n+                WHITESPACE@106..107 \" \"\r\n+                EQ@107..108 \"=\"\r\n+                WHITESPACE@108..109 \" \"\r\n+                PATH_EXPR@109..113\r\n+                  PATH@109..113\r\n+                    PATH_SEGMENT@109..113\r\n+                      NAME_REF@109..113\r\n+                        IDENT@109..113 \"None\"\r\n+              R_PAREN@113..114 \")\"\r\n+          WHITESPACE@114..115 \" \"\r\n+          BLOCK_EXPR@115..279\r\n+            STMT_LIST@115..279\r\n+              L_CURLY@115..116 \"{\"\r\n+              WHITESPACE@116..125 \"\\n        \"\r\n+              EXPR_STMT@125..140\r\n+                PAREN_EXPR@125..139\r\n+                  L_PAREN@125..126 \"(\"\r\n+                  LET_EXPR@126..138\r\n+                    LET_KW@126..129 \"let\"\r\n+                    WHITESPACE@129..130 \" \"\r\n+                    WILDCARD_PAT@130..131\r\n+                      UNDERSCORE@130..131 \"_\"\r\n+                    WHITESPACE@131..132 \" \"\r\n+                    EQ@132..133 \"=\"\r\n+                    WHITESPACE@133..134 \" \"\r\n+                    PATH_EXPR@134..138\r\n+                      PATH@134..138\r\n+                        PATH_SEGMENT@134..138\r\n+                          NAME_REF@134..138\r\n+                            IDENT@134..138 \"None\"\r\n+                  R_PAREN@138..139 \")\"\r\n+                SEMICOLON@139..140 \";\"\r\n+              WHITESPACE@140..149 \"\\n        \"\r\n+              WHILE_EXPR@149..273\r\n+                WHILE_KW@149..154 \"while\"\r\n+                WHITESPACE@154..155 \" \"\r\n+                LET_EXPR@155..167\r\n+                  LET_KW@155..158 \"let\"\r\n+                  WHITESPACE@158..159 \" \"\r\n+                  WILDCARD_PAT@159..160\r\n+                    UNDERSCORE@159..160 \"_\"\r\n+                  WHITESPACE@160..161 \" \"\r\n+                  EQ@161..162 \"=\"\r\n+                  WHITESPACE@162..163 \" \"\r\n+                  PATH_EXPR@163..167\r\n+                    PATH@163..167\r\n+                      PATH_SEGMENT@163..167\r\n+                        NAME_REF@163..167\r\n+                          IDENT@163..167 \"None\"\r\n+                WHITESPACE@167..168 \" \"\r\n+                BLOCK_EXPR@168..273\r\n+                  STMT_LIST@168..273\r\n+                    L_CURLY@168..169 \"{\"\r\n+                    WHITESPACE@169..182 \"\\n            \"\r\n+                    MATCH_EXPR@182..263\r\n+                      MATCH_KW@182..187 \"match\"\r\n+                      WHITESPACE@187..188 \" \"\r\n+                      PATH_EXPR@188..192\r\n+                        PATH@188..192\r\n+                          PATH_SEGMENT@188..192\r\n+                            NAME_REF@188..192\r\n+                              IDENT@188..192 \"None\"\r\n+                      WHITESPACE@192..193 \" \"\r\n+                      MATCH_ARM_LIST@193..263\r\n+                        L_CURLY@193..194 \"{\"\r\n+                        WHITESPACE@194..211 \"\\n                \"\r\n+                        MATCH_ARM@211..249\r\n+                          WILDCARD_PAT@211..212\r\n+                            UNDERSCORE@211..212 \"_\"\r\n+                          WHITESPACE@212..213 \" \"\r\n+                          MATCH_GUARD@213..228\r\n+                            IF_KW@213..215 \"if\"\r\n+                            WHITESPACE@215..216 \" \"\r\n+                            LET_EXPR@216..228\r\n+                              LET_KW@216..219 \"let\"\r\n+                              WHITESPACE@219..220 \" \"\r\n+                              WILDCARD_PAT@220..221\r\n+                                UNDERSCORE@220..221 \"_\"\r\n+                              WHITESPACE@221..222 \" \"\r\n+                              EQ@222..223 \"=\"\r\n+                              WHITESPACE@223..224 \" \"\r\n+                              PATH_EXPR@224..228\r\n+                                PATH@224..228\r\n+                                  PATH_SEGMENT@224..228\r\n+                                    NAME_REF@224..228\r\n+                                      IDENT@224..228 \"None\"\r\n+                          WHITESPACE@228..229 \" \"\r\n+                          FAT_ARROW@229..231 \"=>\"\r\n+                          WHITESPACE@231..232 \" \"\r\n+                          BLOCK_EXPR@232..249\r\n+                            STMT_LIST@232..249\r\n+                              L_CURLY@232..233 \"{\"\r\n+                              WHITESPACE@233..234 \" \"\r\n+                              LET_STMT@234..247\r\n+                                LET_KW@234..237 \"let\"\r\n+                                WHITESPACE@237..238 \" \"\r\n+                                WILDCARD_PAT@238..239\r\n+                                  UNDERSCORE@238..239 \"_\"\r\n+                                WHITESPACE@239..240 \" \"\r\n+                                EQ@240..241 \"=\"\r\n+                                WHITESPACE@241..242 \" \"\r\n+                                PATH_EXPR@242..246\r\n+                                  PATH@242..246\r\n+                                    PATH_SEGMENT@242..246\r\n+                                      NAME_REF@242..246\r\n+                                        IDENT@242..246 \"None\"\r\n+                                SEMICOLON@246..247 \";\"\r\n+                              WHITESPACE@247..248 \" \"\r\n+                              R_CURLY@248..249 \"}\"\r\n+                        WHITESPACE@249..262 \"\\n            \"\r\n+                        R_CURLY@262..263 \"}\"\r\n+                    WHITESPACE@263..272 \"\\n        \"\r\n+                    R_CURLY@272..273 \"}\"\r\n+              WHITESPACE@273..278 \"\\n    \"\r\n+              R_CURLY@278..279 \"}\"\r\n+        WHITESPACE@279..280 \"\\n\"\r\n+        R_CURLY@280..281 \"}\"\r\n+  WHITESPACE@281..282 \"\\n\"\r\n+error 29..41: `let` expressions are not supported here\r\n+error 67..79: `let` expressions are not supported here\r\n+error 126..138: `let` expressions are not supported here\r"}, {"sha": "1515ae5334d25625e17b3c119f744466fbe58392", "filename": "crates/syntax/test_data/parser/validation/invalid_let_expr.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/821b791b6dfb7635930a31d6e14cab3abfe9dd80/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821b791b6dfb7635930a31d6e14cab3abfe9dd80/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rs?ref=821b791b6dfb7635930a31d6e14cab3abfe9dd80", "patch": "@@ -0,0 +1,14 @@\n+fn foo() {\n+    const _: () = let _ = None;\n+\n+    let _ = if true { (let _ = None) };\n+\n+    if true && (let _ = None) {\n+        (let _ = None);\n+        while let _ = None {\n+            match None {\n+                _ if let _ = None => { let _ = None; }\n+            }\n+        }\n+    }\n+}"}]}