{"sha": "521b2eaf7b12072fffc47d18799b5a148a7f3c9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMWIyZWFmN2IxMjA3MmZmZmM0N2QxODc5OWI1YTE0OGE3ZjNjOWI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2016-12-25T16:44:19Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2016-12-25T16:44:19Z"}, "message": "clear discriminant drop flag at the bottom of a ladder\n\nFixes #38437.", "tree": {"sha": "39fade5b6f9f1961a23df39f3efce9f31e5dbfc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39fade5b6f9f1961a23df39f3efce9f31e5dbfc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/521b2eaf7b12072fffc47d18799b5a148a7f3c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/521b2eaf7b12072fffc47d18799b5a148a7f3c9b", "html_url": "https://github.com/rust-lang/rust/commit/521b2eaf7b12072fffc47d18799b5a148a7f3c9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/521b2eaf7b12072fffc47d18799b5a148a7f3c9b/comments", "author": null, "committer": null, "parents": [{"sha": "e60aa62ffe7462d48cb44ab33f2551b466745e83", "url": "https://api.github.com/repos/rust-lang/rust/commits/e60aa62ffe7462d48cb44ab33f2551b466745e83", "html_url": "https://github.com/rust-lang/rust/commit/e60aa62ffe7462d48cb44ab33f2551b466745e83"}], "stats": {"total": 131, "additions": 93, "deletions": 38}, "files": [{"sha": "88e5bae483d73deddeaf807d8162f13e5c5faf24", "filename": "src/librustc_borrowck/borrowck/mir/elaborate_drops.rs", "status": "modified", "additions": 39, "deletions": 38, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/521b2eaf7b12072fffc47d18799b5a148a7f3c9b/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521b2eaf7b12072fffc47d18799b5a148a7f3c9b/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Felaborate_drops.rs?ref=521b2eaf7b12072fffc47d18799b5a148a7f3c9b", "patch": "@@ -481,54 +481,55 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n                            is_cleanup: bool)\n                            -> Vec<BasicBlock>\n     {\n-        let mut succ = succ;\n         let mut unwind_succ = if is_cleanup {\n             None\n         } else {\n             c.unwind\n         };\n-        let mut update_drop_flag = true;\n+\n+        let mut succ = self.new_block(\n+            c, c.is_cleanup, TerminatorKind::Goto { target: succ }\n+        );\n+\n+        // Always clear the \"master\" drop flag at the bottom of the\n+        // ladder. This is needed because the \"master\" drop flag\n+        // protects the ADT's discriminant, which is invalidated\n+        // after the ADT is dropped.\n+        self.set_drop_flag(\n+            Location { block: succ, statement_index: 0 },\n+            c.path,\n+            DropFlagState::Absent\n+        );\n \n         fields.iter().rev().enumerate().map(|(i, &(ref lv, path))| {\n-            let drop_block = match path {\n-                Some(path) => {\n-                    debug!(\"drop_ladder: for std field {} ({:?})\", i, lv);\n-\n-                    self.elaborated_drop_block(&DropCtxt {\n-                        source_info: c.source_info,\n-                        is_cleanup: is_cleanup,\n-                        init_data: c.init_data,\n-                        lvalue: lv,\n-                        path: path,\n-                        succ: succ,\n-                        unwind: unwind_succ,\n-                    })\n-                }\n-                None => {\n-                    debug!(\"drop_ladder: for rest field {} ({:?})\", i, lv);\n-\n-                    let blk = self.complete_drop(&DropCtxt {\n-                        source_info: c.source_info,\n-                        is_cleanup: is_cleanup,\n-                        init_data: c.init_data,\n-                        lvalue: lv,\n-                        path: c.path,\n-                        succ: succ,\n-                        unwind: unwind_succ,\n-                    }, update_drop_flag);\n-\n-                    // the drop flag has been updated - updating\n-                    // it again would clobber it.\n-                    update_drop_flag = false;\n-\n-                    blk\n-                }\n+            succ = if let Some(path) = path {\n+                debug!(\"drop_ladder: for std field {} ({:?})\", i, lv);\n+\n+                self.elaborated_drop_block(&DropCtxt {\n+                    source_info: c.source_info,\n+                    is_cleanup: is_cleanup,\n+                    init_data: c.init_data,\n+                    lvalue: lv,\n+                    path: path,\n+                    succ: succ,\n+                    unwind: unwind_succ,\n+                })\n+            } else {\n+                debug!(\"drop_ladder: for rest field {} ({:?})\", i, lv);\n+\n+                self.complete_drop(&DropCtxt {\n+                    source_info: c.source_info,\n+                    is_cleanup: is_cleanup,\n+                    init_data: c.init_data,\n+                    lvalue: lv,\n+                    path: c.path,\n+                    succ: succ,\n+                    unwind: unwind_succ,\n+                }, false)\n             };\n \n-            succ = drop_block;\n             unwind_succ = unwind_ladder.as_ref().map(|p| p[i]);\n-\n-            drop_block\n+            succ\n         }).collect()\n     }\n "}, {"sha": "a6e7df1c0102c434fec6307d099a5d865ad7697a", "filename": "src/test/run-pass/issue-38437.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/521b2eaf7b12072fffc47d18799b5a148a7f3c9b/src%2Ftest%2Frun-pass%2Fissue-38437.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521b2eaf7b12072fffc47d18799b5a148a7f3c9b/src%2Ftest%2Frun-pass%2Fissue-38437.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-38437.rs?ref=521b2eaf7b12072fffc47d18799b5a148a7f3c9b", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that drop elaboration clears the \"master\" discriminant\n+// drop flag even if it protects no fields.\n+\n+struct Good(usize);\n+impl Drop for Good {\n+    #[inline(never)]\n+    fn drop(&mut self) {\n+        println!(\"dropping Good({})\", self.0);\n+    }\n+}\n+\n+struct Void;\n+impl Drop for Void {\n+    #[inline(never)]\n+    fn drop(&mut self) {\n+        panic!(\"Suddenly, a Void appears.\");\n+    }\n+}\n+\n+enum E {\n+    Never(Void),\n+    Fine(Good)\n+}\n+\n+fn main() {\n+    let mut go = true;\n+\n+    loop {\n+        let next;\n+        match go {\n+            true => next = E::Fine(Good(123)),\n+            false => return,\n+        }\n+\n+        match next {\n+            E::Never(_) => return,\n+            E::Fine(_good) => go = false,\n+        }\n+\n+        // `next` is dropped and StorageDead'd here. We must reset the\n+        // discriminant's drop flag to avoid random variants being\n+        // dropped.\n+    }\n+}"}]}