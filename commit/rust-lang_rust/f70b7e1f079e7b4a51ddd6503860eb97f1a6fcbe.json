{"sha": "f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MGI3ZTFmMDc5ZTdiNGE1MWRkZDY1MDM4NjBlYjk3ZjFhNmZjYmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-06T11:12:58Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-06T12:28:31Z"}, "message": "rename config", "tree": {"sha": "5f9eb02484391d9780c06a3d0ecb52ef5b4bdbce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f9eb02484391d9780c06a3d0ecb52ef5b4bdbce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "html_url": "https://github.com/rust-lang/rust/commit/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34203256bf8f8ea12b233e0fb49b42bd8c423281", "url": "https://api.github.com/repos/rust-lang/rust/commits/34203256bf8f8ea12b233e0fb49b42bd8c423281", "html_url": "https://github.com/rust-lang/rust/commit/34203256bf8f8ea12b233e0fb49b42bd8c423281"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "a16cc292e56e9ee4f89c39865976e57357b45b45", "filename": "crates/ra_lsp_server/src/config.rs", "status": "renamed", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs?ref=f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "patch": "@@ -3,7 +3,7 @@ use serde::{Deserialize, Deserializer};\n /// Client provided initialization options\n #[derive(Deserialize, Clone, Copy, Debug, PartialEq, Eq)]\n #[serde(rename_all = \"camelCase\", default)]\n-pub struct InitializationOptions {\n+pub struct ServerConfig {\n     /// Whether the client supports our custom highlighting publishing decorations.\n     /// This is different to the highlightingOn setting, which is whether the user\n     /// wants our custom highlighting to be used.\n@@ -21,13 +21,9 @@ pub struct InitializationOptions {\n     pub lru_capacity: Option<usize>,\n }\n \n-impl Default for InitializationOptions {\n-    fn default() -> InitializationOptions {\n-        InitializationOptions {\n-            publish_decorations: false,\n-            show_workspace_loaded: true,\n-            lru_capacity: None,\n-        }\n+impl Default for ServerConfig {\n+    fn default() -> ServerConfig {\n+        ServerConfig { publish_decorations: false, show_workspace_loaded: true, lru_capacity: None }\n     }\n }\n \n@@ -56,7 +52,7 @@ mod test {\n     #[test]\n     fn deserialize_init_options_defaults() {\n         // check that null == default for both fields\n-        let default = InitializationOptions::default();\n+        let default = ServerConfig::default();\n         assert_eq!(default, serde_json::from_str(r#\"{}\"#).unwrap());\n         assert_eq!(\n             default,", "previous_filename": "crates/ra_lsp_server/src/init.rs"}, {"sha": "795f863838c6c223d8a80537b7a3c60671efc8a7", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "patch": "@@ -5,11 +5,10 @@ mod main_loop;\n mod markdown;\n mod project_model;\n pub mod req;\n-pub mod init;\n+pub mod config;\n mod world;\n \n pub type Result<T> = std::result::Result<T, Box<dyn std::error::Error + Send + Sync>>;\n pub use crate::{\n-    caps::server_capabilities, init::InitializationOptions, main_loop::main_loop,\n-    main_loop::LspError,\n+    caps::server_capabilities, config::ServerConfig, main_loop::main_loop, main_loop::LspError,\n };"}, {"sha": "1a2ab1bc2f1596fcd6bd99b94fb15e31a6b7bb81", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "patch": "@@ -2,7 +2,7 @@ use flexi_logger::{Duplicate, Logger};\n use gen_lsp_server::{run_server, stdio_transport};\n use serde::Deserialize;\n \n-use ra_lsp_server::{InitializationOptions, Result};\n+use ra_lsp_server::{Result, ServerConfig};\n use ra_prof;\n \n fn main() -> Result<()> {\n@@ -48,7 +48,7 @@ fn main_inner() -> Result<()> {\n \n         let opts = params\n             .initialization_options\n-            .and_then(|v| InitializationOptions::deserialize(v).ok())\n+            .and_then(|v| ServerConfig::deserialize(v).ok())\n             .unwrap_or_default();\n \n         ra_lsp_server::main_loop(workspace_roots, params.capabilities, opts, r, s)"}, {"sha": "8ab5018288dfb25e7387360261324a1978d41501", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=f70b7e1f079e7b4a51ddd6503860eb97f1a6fcbe", "patch": "@@ -23,7 +23,7 @@ use crate::{\n     project_model::workspace_loader,\n     req,\n     world::{Options, WorldSnapshot, WorldState},\n-    InitializationOptions, Result,\n+    Result, ServerConfig,\n };\n \n const THREADPOOL_SIZE: usize = 8;\n@@ -52,7 +52,7 @@ impl Error for LspError {}\n pub fn main_loop(\n     ws_roots: Vec<PathBuf>,\n     client_caps: ClientCapabilities,\n-    options: InitializationOptions,\n+    config: ServerConfig,\n     msg_receiver: &Receiver<RawMessage>,\n     msg_sender: &Sender<RawMessage>,\n ) -> Result<()> {\n@@ -81,10 +81,10 @@ pub fn main_loop(\n     let mut state = WorldState::new(\n         ws_roots,\n         workspaces,\n-        options.lru_capacity,\n+        config.lru_capacity,\n         Options {\n-            publish_decorations: options.publish_decorations,\n-            show_workspace_loaded: options.show_workspace_loaded,\n+            publish_decorations: config.publish_decorations,\n+            show_workspace_loaded: config.show_workspace_loaded,\n             supports_location_link: client_caps\n                 .text_document\n                 .and_then(|it| it.definition)"}]}