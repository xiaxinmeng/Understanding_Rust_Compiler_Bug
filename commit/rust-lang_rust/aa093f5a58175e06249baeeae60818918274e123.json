{"sha": "aa093f5a58175e06249baeeae60818918274e123", "node_id": "C_kwDOAAsO6NoAKGFhMDkzZjVhNTgxNzVlMDYyNDliYWVlYWU2MDgxODkxODI3NGUxMjM", "commit": {"author": {"name": "Noah Santschi-Cooney", "email": "noah@santschi-cooney.ch", "date": "2022-09-26T13:09:54Z"}, "committer": {"name": "Noah Santschi-Cooney", "email": "noah@santschi-cooney.ch", "date": "2022-09-26T16:31:38Z"}, "message": "Fix PackageInformation having the crate name instead of package name", "tree": {"sha": "f9512ac99af854727d4f212fe67fdc5716894011", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9512ac99af854727d4f212fe67fdc5716894011"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa093f5a58175e06249baeeae60818918274e123", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEJUVx5rSk/j42f7nJOyIoJHLIrkgFAmMx0+oACgkQOyIoJHLI\nrkj7ig/9F7eRZn+FAA7EDmazLnEPqki6ehbkj32jXhMA3bQvXI33/xMLAkUWsqOC\n8J1EDIz1w+tyk0cXicP5JEMl38PIlXxGV7yWOQ6CBgx8gTRnlFXUu89W8f5HqX0S\ng7bKFS+VFFv700THnd18UMUjC8CZacWINjCFqPgpaDy0NG8HGt4QWKMWFDPploNJ\nutt/xx3SOZCEQo1p2tL7ZI5LV3CAMENjl2Zc+GRVrjZbaEsWZEnSrmSEEkumJQo5\n3j5hnHYyxDFheJT8KuVQL+150Pgvv2DhzAs9js9ttUNGlI6J8BLrMiqDsz/zJUbV\ndKttDFkxxjGV6O6Vc9cj0RvGxxF1xykHd/67+8wiwxTTQIxdMJJb1Dgzr5/azsPI\nL621B0e05aKyZCS5vkgQSGKCD4wIUKdsWIOHCn8iNkMpV5LsYN1HBJyNttxzD5T+\nR4WnrflakQQp68z8tQ3JWXtQcw85aI+UTfucPIikDt5s7PMMBumNEka59/qafp/p\n2u06hLlsABNu5m0WKcM+DeOxDHw8+KxwuF2Vg5AjJcOuq71VjGlvzZeEX5Xy5r52\nFrx8Jp9DYsi5g6NJGjL+QasFXt9I0nfndcgzSF2+L/eTwnw+rE4DNsWwhha6IJMz\n4run6Io/6Pdvg5nWaQa44+kqUF5/52IDNpc/QPNE8/vub+EONGU=\n=gFuN\n-----END PGP SIGNATURE-----", "payload": "tree f9512ac99af854727d4f212fe67fdc5716894011\nparent 1a24003eb6bc8377e76cd9f70bf6700bc842e99b\nauthor Noah Santschi-Cooney <noah@santschi-cooney.ch> 1664197794 +0100\ncommitter Noah Santschi-Cooney <noah@santschi-cooney.ch> 1664209898 +0100\n\nFix PackageInformation having the crate name instead of package name\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa093f5a58175e06249baeeae60818918274e123", "html_url": "https://github.com/rust-lang/rust/commit/aa093f5a58175e06249baeeae60818918274e123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa093f5a58175e06249baeeae60818918274e123/comments", "author": {"login": "Strum355", "id": 18282288, "node_id": "MDQ6VXNlcjE4MjgyMjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18282288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Strum355", "html_url": "https://github.com/Strum355", "followers_url": "https://api.github.com/users/Strum355/followers", "following_url": "https://api.github.com/users/Strum355/following{/other_user}", "gists_url": "https://api.github.com/users/Strum355/gists{/gist_id}", "starred_url": "https://api.github.com/users/Strum355/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Strum355/subscriptions", "organizations_url": "https://api.github.com/users/Strum355/orgs", "repos_url": "https://api.github.com/users/Strum355/repos", "events_url": "https://api.github.com/users/Strum355/events{/privacy}", "received_events_url": "https://api.github.com/users/Strum355/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Strum355", "id": 18282288, "node_id": "MDQ6VXNlcjE4MjgyMjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18282288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Strum355", "html_url": "https://github.com/Strum355", "followers_url": "https://api.github.com/users/Strum355/followers", "following_url": "https://api.github.com/users/Strum355/following{/other_user}", "gists_url": "https://api.github.com/users/Strum355/gists{/gist_id}", "starred_url": "https://api.github.com/users/Strum355/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Strum355/subscriptions", "organizations_url": "https://api.github.com/users/Strum355/orgs", "repos_url": "https://api.github.com/users/Strum355/repos", "events_url": "https://api.github.com/users/Strum355/events{/privacy}", "received_events_url": "https://api.github.com/users/Strum355/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a24003eb6bc8377e76cd9f70bf6700bc842e99b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a24003eb6bc8377e76cd9f70bf6700bc842e99b", "html_url": "https://github.com/rust-lang/rust/commit/1a24003eb6bc8377e76cd9f70bf6700bc842e99b"}], "stats": {"total": 64, "additions": 40, "deletions": 24}, "files": [{"sha": "5b7828a26996eaaacd6df0f758834f2ed8c8673d", "filename": "crates/base-db/src/fixture.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa093f5a58175e06249baeeae60818918274e123/crates%2Fbase-db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa093f5a58175e06249baeeae60818918274e123/crates%2Fbase-db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Ffixture.rs?ref=aa093f5a58175e06249baeeae60818918274e123", "patch": "@@ -196,7 +196,7 @@ impl ChangeFixture {\n                 Env::default(),\n                 Ok(Vec::new()),\n                 false,\n-                CrateOrigin::CratesIo { repo: None },\n+                CrateOrigin::CratesIo { repo: None, name: None },\n             );\n         } else {\n             for (from, to, prelude) in crate_deps {\n@@ -270,7 +270,7 @@ impl ChangeFixture {\n                 Env::default(),\n                 Ok(proc_macro),\n                 true,\n-                CrateOrigin::CratesIo { repo: None },\n+                CrateOrigin::CratesIo { repo: None, name: None },\n             );\n \n             for krate in all_crates {\n@@ -398,7 +398,7 @@ fn parse_crate(crate_str: String) -> (String, CrateOrigin, Option<String>) {\n         let (version, origin) = match b.split_once(':') {\n             Some((\"CratesIo\", data)) => match data.split_once(',') {\n                 Some((version, url)) => {\n-                    (version, CrateOrigin::CratesIo { repo: Some(url.to_owned()) })\n+                    (version, CrateOrigin::CratesIo { repo: Some(url.to_owned()), name: None })\n                 }\n                 _ => panic!(\"Bad crates.io parameter: {}\", data),\n             },\n@@ -409,7 +409,7 @@ fn parse_crate(crate_str: String) -> (String, CrateOrigin, Option<String>) {\n         let crate_origin = match &*crate_str {\n             \"std\" => CrateOrigin::Lang(LangCrateOrigin::Std),\n             \"core\" => CrateOrigin::Lang(LangCrateOrigin::Core),\n-            _ => CrateOrigin::CratesIo { repo: None },\n+            _ => CrateOrigin::CratesIo { repo: None, name: None },\n         };\n         (crate_str, crate_origin, None)\n     }"}, {"sha": "9ceaebb91e160338e47b19ff3ea867afb122bae3", "filename": "crates/base-db/src/input.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/aa093f5a58175e06249baeeae60818918274e123/crates%2Fbase-db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa093f5a58175e06249baeeae60818918274e123/crates%2Fbase-db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Finput.rs?ref=aa093f5a58175e06249baeeae60818918274e123", "patch": "@@ -136,7 +136,10 @@ impl ops::Deref for CrateName {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum CrateOrigin {\n     /// Crates that are from crates.io official registry,\n-    CratesIo { repo: Option<String> },\n+    CratesIo {\n+        repo: Option<String>,\n+        name: Option<String>,\n+    },\n     /// Crates that are provided by the language, like std, core, proc-macro, ...\n     Lang(LangCrateOrigin),\n }\n@@ -648,7 +651,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -660,7 +663,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate3 = graph.add_crate_root(\n             FileId(3u32),\n@@ -672,7 +675,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep(crate1, Dependency::new(CrateName::new(\"crate2\").unwrap(), crate2))\n@@ -698,7 +701,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -710,7 +713,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep(crate1, Dependency::new(CrateName::new(\"crate2\").unwrap(), crate2))\n@@ -733,7 +736,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -745,7 +748,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate3 = graph.add_crate_root(\n             FileId(3u32),\n@@ -757,7 +760,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep(crate1, Dependency::new(CrateName::new(\"crate2\").unwrap(), crate2))\n@@ -780,7 +783,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -792,7 +795,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep("}, {"sha": "7820b67142fe1449e43d5393a4637103a3bedb5f", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa093f5a58175e06249baeeae60818918274e123/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa093f5a58175e06249baeeae60818918274e123/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=aa093f5a58175e06249baeeae60818918274e123", "patch": "@@ -236,7 +236,7 @@ impl Analysis {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         change.change_file(file_id, Some(Arc::new(text)));\n         change.set_crate_graph(crate_graph);"}, {"sha": "852a8fd837616ab3c0a2fb4c1bdf75e99774fe8d", "filename": "crates/ide/src/moniker.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aa093f5a58175e06249baeeae60818918274e123/crates%2Fide%2Fsrc%2Fmoniker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa093f5a58175e06249baeeae60818918274e123/crates%2Fide%2Fsrc%2Fmoniker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmoniker.rs?ref=aa093f5a58175e06249baeeae60818918274e123", "patch": "@@ -253,10 +253,14 @@ pub(crate) fn def_to_moniker(\n         },\n         kind: if krate == from_crate { MonikerKind::Export } else { MonikerKind::Import },\n         package_information: {\n-            let name = krate.display_name(db)?.to_string();\n-            let (repo, version) = match krate.origin(db) {\n-                CrateOrigin::CratesIo { repo } => (repo?, krate.version(db)?),\n+            let (name, repo, version) = match krate.origin(db) {\n+                CrateOrigin::CratesIo { repo, name } => (\n+                    name.unwrap_or(krate.display_name(db)?.canonical_name().to_string()),\n+                    repo?,\n+                    krate.version(db)?,\n+                ),\n                 CrateOrigin::Lang(lang) => (\n+                    krate.display_name(db)?.canonical_name().to_string(),\n                     \"https://github.com/rust-lang/rust/\".to_string(),\n                     match lang {\n                         LangCrateOrigin::Other => {"}, {"sha": "d9d3cab45614f819bdec26a81063aa7dc4a107a3", "filename": "crates/project-model/src/workspace.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/aa093f5a58175e06249baeeae60818918274e123/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa093f5a58175e06249baeeae60818918274e123/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fworkspace.rs?ref=aa093f5a58175e06249baeeae60818918274e123", "patch": "@@ -518,9 +518,15 @@ fn project_json_to_crate_graph(\n                     proc_macro,\n                     krate.is_proc_macro,\n                     if krate.display_name.is_some() {\n-                        CrateOrigin::CratesIo { repo: krate.repository.clone() }\n+                        CrateOrigin::CratesIo {\n+                            repo: krate.repository.clone(),\n+                            name: krate\n+                                .display_name\n+                                .clone()\n+                                .map(|n| n.canonical_name().to_string()),\n+                        }\n                     } else {\n-                        CrateOrigin::CratesIo { repo: None }\n+                        CrateOrigin::CratesIo { repo: None, name: None }\n                     },\n                 ),\n             )\n@@ -740,14 +746,17 @@ fn detached_files_to_crate_graph(\n         let detached_file_crate = crate_graph.add_crate_root(\n             file_id,\n             Edition::CURRENT,\n-            display_name,\n+            display_name.clone(),\n             None,\n             cfg_options.clone(),\n             cfg_options.clone(),\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo {\n+                repo: None,\n+                name: display_name.map(|n| n.canonical_name().to_string()),\n+            },\n         );\n \n         public_deps.add(detached_file_crate, &mut crate_graph);\n@@ -923,7 +932,7 @@ fn add_target_crate_root(\n         env,\n         proc_macro,\n         is_proc_macro,\n-        CrateOrigin::CratesIo { repo: pkg.repository.clone() },\n+        CrateOrigin::CratesIo { repo: pkg.repository.clone(), name: Some(pkg.name.clone()) },\n     )\n }\n "}]}