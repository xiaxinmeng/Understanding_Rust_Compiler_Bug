{"sha": "852a111133c86b24b190d6f9b5e19f8864e954a2", "node_id": "C_kwDOAAsO6NoAKDg1MmExMTExMzNjODZiMjRiMTkwZDZmOWI1ZTE5Zjg4NjRlOTU0YTI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-26T18:42:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-26T18:42:26Z"}, "message": "interpret: do not prune requires_caller_location stack frames quite so early", "tree": {"sha": "553f9343a38f822f525be7983034a541f9205300", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/553f9343a38f822f525be7983034a541f9205300"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/852a111133c86b24b190d6f9b5e19f8864e954a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/852a111133c86b24b190d6f9b5e19f8864e954a2", "html_url": "https://github.com/rust-lang/rust/commit/852a111133c86b24b190d6f9b5e19f8864e954a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/852a111133c86b24b190d6f9b5e19f8864e954a2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aabd8a4a6e1871f14e804302bd60dfcbffd5761", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aabd8a4a6e1871f14e804302bd60dfcbffd5761", "html_url": "https://github.com/rust-lang/rust/commit/1aabd8a4a6e1871f14e804302bd60dfcbffd5761"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "eb81f43c3fe8cbafa2b3b9fa1f70e40594b88904", "filename": "compiler/rustc_const_eval/src/const_eval/error.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/852a111133c86b24b190d6f9b5e19f8864e954a2/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852a111133c86b24b190d6f9b5e19f8864e954a2/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Ferror.rs?ref=852a111133c86b24b190d6f9b5e19f8864e954a2", "patch": "@@ -82,12 +82,12 @@ impl<'tcx> ConstEvalErr<'tcx> {\n         'tcx: 'mir,\n     {\n         error.print_backtrace();\n-        let stacktrace = ecx.generate_stacktrace();\n-        ConstEvalErr {\n-            error: error.into_kind(),\n-            stacktrace,\n-            span: span.unwrap_or_else(|| ecx.cur_span()),\n-        }\n+        let mut stacktrace = ecx.generate_stacktrace();\n+        // Filter out `requires_caller_location` frames.\n+        stacktrace.retain(|frame| !frame.instance.def.requires_caller_location(*ecx.tcx));\n+        // If `span` is missing, use topmost remaining frame, or else the \"root\" span from `ecx.tcx`.\n+        let span = span.or_else(|| stacktrace.first().map(|f| f.span)).unwrap_or(ecx.tcx.span);\n+        ConstEvalErr { error: error.into_kind(), stacktrace, span }\n     }\n \n     pub fn struct_error("}, {"sha": "09a2977af04033b6e2559c38f7d0a575e9077d75", "filename": "compiler/rustc_const_eval/src/const_eval/eval_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/852a111133c86b24b190d6f9b5e19f8864e954a2/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852a111133c86b24b190d6f9b5e19f8864e954a2/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=852a111133c86b24b190d6f9b5e19f8864e954a2", "patch": "@@ -337,7 +337,7 @@ pub fn eval_to_allocation_raw_provider<'tcx>(\n                     }\n                 };\n \n-                Err(err.report_as_error(ecx.tcx.at(ecx.cur_span()), &msg))\n+                Err(err.report_as_error(ecx.tcx.at(err.span), &msg))\n             } else {\n                 let hir_id = tcx.hir().local_def_id_to_hir_id(def.as_local().unwrap().did);\n                 Err(err.report_as_lint("}, {"sha": "66c736245017c5397775201dd6829d2285074a29", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/852a111133c86b24b190d6f9b5e19f8864e954a2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852a111133c86b24b190d6f9b5e19f8864e954a2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=852a111133c86b24b190d6f9b5e19f8864e954a2", "patch": "@@ -428,11 +428,9 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n     #[inline(always)]\n     pub fn cur_span(&self) -> Span {\n-        self.stack()\n-            .iter()\n-            .rev()\n-            .find(|frame| !frame.instance.def.requires_caller_location(*self.tcx))\n-            .map_or(self.tcx.span, |f| f.current_span())\n+        // This deliberately does *not* honor `requires_caller_location` since it is used for much\n+        // more than just panics.\n+        self.stack().last().map_or(self.tcx.span, |f| f.current_span())\n     }\n \n     #[inline(always)]\n@@ -939,12 +937,9 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     #[must_use]\n     pub fn generate_stacktrace(&self) -> Vec<FrameInfo<'tcx>> {\n         let mut frames = Vec::new();\n-        for frame in self\n-            .stack()\n-            .iter()\n-            .rev()\n-            .skip_while(|frame| frame.instance.def.requires_caller_location(*self.tcx))\n-        {\n+        // This deliberately does *not* honor `requires_caller_location` since it is used for much\n+        // more than just panics.\n+        for frame in self.stack().iter().rev() {\n             let lint_root = frame.current_source_info().and_then(|source_info| {\n                 match &frame.body.source_scopes[source_info.scope].local_data {\n                     mir::ClearCrossCrate::Set(data) => Some(data.lint_root),"}]}