{"sha": "27ef0eeaa42651f9467b152d833ebff7eb268b7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZWYwZWVhYTQyNjUxZjk0NjdiMTUyZDgzM2ViZmY3ZWIyNjhiN2Q=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-12-05T16:40:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:27:59Z"}, "message": "Track HirId when visiting attributes.", "tree": {"sha": "b5b3f340ef317fceadf85fa089642841d390b5a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5b3f340ef317fceadf85fa089642841d390b5a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27ef0eeaa42651f9467b152d833ebff7eb268b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27ef0eeaa42651f9467b152d833ebff7eb268b7d", "html_url": "https://github.com/rust-lang/rust/commit/27ef0eeaa42651f9467b152d833ebff7eb268b7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27ef0eeaa42651f9467b152d833ebff7eb268b7d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b5d2de97e8b6327bdcf862209064787e02edb2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b5d2de97e8b6327bdcf862209064787e02edb2e", "html_url": "https://github.com/rust-lang/rust/commit/6b5d2de97e8b6327bdcf862209064787e02edb2e"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "b83c008d7174eb68e507dbc34625add8ae1917f7", "filename": "compiler/rustc_hir/src/intravisit.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fintravisit.rs?ref=27ef0eeaa42651f9467b152d833ebff7eb268b7d", "patch": "@@ -458,7 +458,7 @@ pub trait Visitor<'v>: Sized {\n     fn visit_assoc_type_binding(&mut self, type_binding: &'v TypeBinding<'v>) {\n         walk_assoc_type_binding(self, type_binding)\n     }\n-    fn visit_attribute(&mut self, _attr: &'v Attribute) {}\n+    fn visit_attribute(&mut self, _id: HirId, _attr: &'v Attribute) {}\n     fn visit_macro_def(&mut self, macro_def: &'v MacroDef<'v>) {\n         walk_macro_def(self, macro_def)\n     }\n@@ -477,8 +477,10 @@ pub trait Visitor<'v>: Sized {\n pub fn walk_crate<'v, V: Visitor<'v>>(visitor: &mut V, krate: &'v Crate<'v>) {\n     visitor.visit_mod(&krate.item.module, krate.item.span, CRATE_HIR_ID);\n     walk_list!(visitor, visit_macro_def, krate.exported_macros);\n-    for attr in krate.attrs.iter().flat_map(|l| *l) {\n-        visitor.visit_attribute(attr)\n+    for (id, attrs) in krate.attrs.iter_enumerated() {\n+        for a in *attrs {\n+            visitor.visit_attribute(id, a)\n+        }\n     }\n }\n "}, {"sha": "9f85aa4e82653575ce982bfc816abc8d883cbfe4", "filename": "compiler/rustc_incremental/src/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs?ref=27ef0eeaa42651f9467b152d833ebff7eb268b7d", "patch": "@@ -554,7 +554,7 @@ impl intravisit::Visitor<'tcx> for FindAllAttrs<'_, 'tcx> {\n         intravisit::NestedVisitorMap::All(self.tcx.hir())\n     }\n \n-    fn visit_attribute(&mut self, attr: &'tcx Attribute) {\n+    fn visit_attribute(&mut self, _: hir::HirId, attr: &'tcx Attribute) {\n         if self.is_active_attr(attr) {\n             self.found_attrs.push(attr);\n         }"}, {"sha": "9a64737f3a25db86c8976752d7103971c9157b4f", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=27ef0eeaa42651f9467b152d833ebff7eb268b7d", "patch": "@@ -16,7 +16,6 @@\n \n use crate::{passes::LateLintPassObject, LateContext, LateLintPass, LintStore};\n use rustc_ast as ast;\n-use rustc_ast::walk_list;\n use rustc_data_structures::sync::{join, par_iter, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{LocalDefId, LOCAL_CRATE};\n@@ -333,8 +332,10 @@ impl<'tcx, T: LateLintPass<'tcx>> hir_visit::Visitor<'tcx> for LateContextAndPas\n         hir_visit::walk_path(self, p);\n     }\n \n-    fn visit_attribute(&mut self, attr: &'tcx ast::Attribute) {\n-        lint_callback!(self, check_attribute, attr);\n+    fn visit_attribute(&mut self, hir_id: hir::HirId, attr: &'tcx ast::Attribute) {\n+        self.with_lint_attrs(hir_id, |cx| {\n+            lint_callback!(cx, check_attribute, attr);\n+        })\n     }\n }\n \n@@ -395,7 +396,9 @@ fn late_lint_mod_pass<'tcx, T: LateLintPass<'tcx>>(\n \n     // Visit the crate attributes\n     if hir_id == hir::CRATE_HIR_ID {\n-        walk_list!(cx, visit_attribute, tcx.hir().attrs(hir::CRATE_HIR_ID));\n+        for attr in tcx.hir().attrs(hir::CRATE_HIR_ID).iter() {\n+            cx.visit_attribute(hir_id, attr)\n+        }\n     }\n }\n "}, {"sha": "ccbfc6b16616082434e9f0f3d9f097e839e05b03", "filename": "compiler/rustc_passes/src/hir_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fhir_stats.rs?ref=27ef0eeaa42651f9467b152d833ebff7eb268b7d", "patch": "@@ -241,7 +241,7 @@ impl<'v> hir_visit::Visitor<'v> for StatCollector<'v> {\n         hir_visit::walk_assoc_type_binding(self, type_binding)\n     }\n \n-    fn visit_attribute(&mut self, attr: &'v ast::Attribute) {\n+    fn visit_attribute(&mut self, _: hir::HirId, attr: &'v ast::Attribute) {\n         self.record(\"Attribute\", Id::Attr(attr.id), attr);\n     }\n "}, {"sha": "3dfe317a4bd175fd1ee7c05e561e59161e07b9e5", "filename": "compiler/rustc_passes/src/lib_features.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ef0eeaa42651f9467b152d833ebff7eb268b7d/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs?ref=27ef0eeaa42651f9467b152d833ebff7eb268b7d", "patch": "@@ -120,7 +120,7 @@ impl Visitor<'tcx> for LibFeatureCollector<'tcx> {\n         NestedVisitorMap::All(self.tcx.hir())\n     }\n \n-    fn visit_attribute(&mut self, attr: &'tcx Attribute) {\n+    fn visit_attribute(&mut self, _: rustc_hir::HirId, attr: &'tcx Attribute) {\n         if let Some((feature, stable, span)) = self.extract(attr) {\n             self.collect_feature(feature, stable, span);\n         }\n@@ -131,7 +131,7 @@ fn collect(tcx: TyCtxt<'_>) -> LibFeatures {\n     let mut collector = LibFeatureCollector::new(tcx);\n     let krate = tcx.hir().krate();\n     for attr in krate.non_exported_macro_attrs {\n-        collector.visit_attribute(attr);\n+        collector.visit_attribute(rustc_hir::CRATE_HIR_ID, attr);\n     }\n     intravisit::walk_crate(&mut collector, krate);\n     collector.lib_features"}]}