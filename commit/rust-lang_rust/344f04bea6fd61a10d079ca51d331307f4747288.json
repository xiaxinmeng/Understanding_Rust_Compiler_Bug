{"sha": "344f04bea6fd61a10d079ca51d331307f4747288", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NGYwNGJlYTZmZDYxYTEwZDA3OWNhNTFkMzMxMzA3ZjQ3NDcyODg=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-05-05T13:57:09Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-05-05T14:12:39Z"}, "message": "Fix stack overflow in `redundant_pattern_matching`", "tree": {"sha": "b173f71b850028851413ca9f06deb81bde85cf6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b173f71b850028851413ca9f06deb81bde85cf6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/344f04bea6fd61a10d079ca51d331307f4747288", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmCSp9cACgkQHKDfKvWd\naKVy9w//ZvbsSU1Zh8VcT0IrmFP/kcAtuhucsj4ttukrCPviZrLkIZLQvjrIv1Vn\n4yl5K9vSTaLz3IXEK197+C8gknUuj03SxErEVS76MxM/sqBf2aDang7Fl+cRCFoq\nSRAlivxQTVH5GQwomBjcRl+k6dJXjKJO9TsuUhAMIco9anX39RjiHnzL9AomCNPP\nEWJ1IpA6FjSW6m0iVEaJ0FBQkNlFdivn+8k9Vxoq3Matl7L7N0yco9IignDDSe83\nqUpHTiNa5qR0YK25pDu/KUc7c9CGFDttN54Zmg6nGL30dZd+s/AbalW8er6rrA9m\nM4WJ1fBl6qk4HotZw0liIuZOtY+YXotn2Eecu7sbKve73JIBV30UvaUjEFFT1OGn\nAlGExtjFzyoXVukGE2hjgi/lPNfmYOTmKV+TQzMWdl1tBYIxh0nCG4C4/NmOZSRA\nfUzYJuQneJ/3FHn/EYrwj9VDkvwM6f7Rs5q3ev4t0DWPo6qNDlOwju9TIraBH/0w\n3cX27d9gS/FB/oBn31fT6cefxGm7u0Z0fLpYVF9Fhdc32ezBuumf3NXoa8PER5Uu\nV/pvlzRV4ksnEcVurfLR39I7V8Q6xJcbjoAcVY+wiGFLsbplmBn00mbIV15ALtiL\nk3tEuFNy4mIuiN5d4pwLGmhnXZjKXd30iGqrqXI7hfwqgLcS/BY=\n=L92e\n-----END PGP SIGNATURE-----", "payload": "tree b173f71b850028851413ca9f06deb81bde85cf6a\nparent 7e538e3522797ed8fb9d4cbf6a01602fa76cae65\nauthor Cameron Steffen <cam.steffen94@gmail.com> 1620223029 -0500\ncommitter flip1995 <philipp.krones@embecosm.com> 1620223959 +0200\n\nFix stack overflow in `redundant_pattern_matching`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/344f04bea6fd61a10d079ca51d331307f4747288", "html_url": "https://github.com/rust-lang/rust/commit/344f04bea6fd61a10d079ca51d331307f4747288", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/344f04bea6fd61a10d079ca51d331307f4747288/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e538e3522797ed8fb9d4cbf6a01602fa76cae65", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e538e3522797ed8fb9d4cbf6a01602fa76cae65", "html_url": "https://github.com/rust-lang/rust/commit/7e538e3522797ed8fb9d4cbf6a01602fa76cae65"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "a70e8b26087efc1aa5bb2e0d346fe6eeb3789701", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/344f04bea6fd61a10d079ca51d331307f4747288/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/344f04bea6fd61a10d079ca51d331307f4747288/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=344f04bea6fd61a10d079ca51d331307f4747288", "patch": "@@ -1712,6 +1712,7 @@ mod redundant_pattern_match {\n     use clippy_utils::{is_lang_ctor, is_qpath_def_path, is_trait_method, paths};\n     use if_chain::if_chain;\n     use rustc_ast::ast::LitKind;\n+    use rustc_data_structures::fx::FxHashSet;\n     use rustc_errors::Applicability;\n     use rustc_hir::LangItem::{OptionNone, OptionSome, PollPending, PollReady, ResultErr, ResultOk};\n     use rustc_hir::{\n@@ -1739,6 +1740,13 @@ mod redundant_pattern_match {\n     /// deallocate memory. For these types, and composites containing them, changing the drop order\n     /// won't result in any observable side effects.\n     fn type_needs_ordered_drop(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n+        type_needs_ordered_drop_inner(cx, ty, &mut FxHashSet::default())\n+    }\n+\n+    fn type_needs_ordered_drop_inner(cx: &LateContext<'tcx>, ty: Ty<'tcx>, seen: &mut FxHashSet<Ty<'tcx>>) -> bool {\n+        if !seen.insert(ty) {\n+            return false;\n+        }\n         if !ty.needs_drop(cx.tcx, cx.param_env) {\n             false\n         } else if !cx\n@@ -1750,12 +1758,12 @@ mod redundant_pattern_match {\n             // This type doesn't implement drop, so no side effects here.\n             // Check if any component type has any.\n             match ty.kind() {\n-                ty::Tuple(_) => ty.tuple_fields().any(|ty| type_needs_ordered_drop(cx, ty)),\n-                ty::Array(ty, _) => type_needs_ordered_drop(cx, ty),\n+                ty::Tuple(_) => ty.tuple_fields().any(|ty| type_needs_ordered_drop_inner(cx, ty, seen)),\n+                ty::Array(ty, _) => type_needs_ordered_drop_inner(cx, ty, seen),\n                 ty::Adt(adt, subs) => adt\n                     .all_fields()\n                     .map(|f| f.ty(cx.tcx, subs))\n-                    .any(|ty| type_needs_ordered_drop(cx, ty)),\n+                    .any(|ty| type_needs_ordered_drop_inner(cx, ty, seen)),\n                 _ => true,\n             }\n         }\n@@ -1772,7 +1780,7 @@ mod redundant_pattern_match {\n         {\n             // Check all of the generic arguments.\n             if let ty::Adt(_, subs) = ty.kind() {\n-                subs.types().any(|ty| type_needs_ordered_drop(cx, ty))\n+                subs.types().any(|ty| type_needs_ordered_drop_inner(cx, ty, seen))\n             } else {\n                 true\n             }"}]}