{"sha": "28bf19021981bd41a365aaa684c71afd2cf079d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YmYxOTAyMTk4MWJkNDFhMzY1YWFhNjg0YzcxYWZkMmNmMDc5ZDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-14T19:54:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-14T19:54:18Z"}, "message": "Revert \"Make [] and ~[] both construct ivecs\"\n\nThis reverts commit 60e1cead9bab129b1937a11c71ab2ab2fd751792.\n\nThe check-fast driver can't work with this commit. Need to wait until main\ntaks ivecs", "tree": {"sha": "cf618860da73842720e70a5e190c2b73d6d9d607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf618860da73842720e70a5e190c2b73d6d9d607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28bf19021981bd41a365aaa684c71afd2cf079d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28bf19021981bd41a365aaa684c71afd2cf079d7", "html_url": "https://github.com/rust-lang/rust/commit/28bf19021981bd41a365aaa684c71afd2cf079d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28bf19021981bd41a365aaa684c71afd2cf079d7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dbf0965a181484477f3daad6da45b8d9d9d0d95", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dbf0965a181484477f3daad6da45b8d9d9d0d95", "html_url": "https://github.com/rust-lang/rust/commit/1dbf0965a181484477f3daad6da45b8d9d9d0d95"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "39843072c2af85d7afad47fba5910a1ad1785dc8", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28bf19021981bd41a365aaa684c71afd2cf079d7/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28bf19021981bd41a365aaa684c71afd2cf079d7/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=28bf19021981bd41a365aaa684c71afd2cf079d7", "patch": "@@ -803,7 +803,7 @@ fn parse_bottom_expr(p: &parser) -> @ast::expr {\n         let es =\n             parse_seq_to_end(token::RBRACKET, some(token::COMMA), parse_expr,\n                              p);\n-        ex = ast::expr_vec(es, mut, ast::sk_unique);\n+        ex = ast::expr_vec(es, mut, ast::sk_rc);\n     } else if (p.peek() == token::POUND_LT) {\n         p.bump();\n         let ty = parse_ty(p);"}]}