{"sha": "019f48673ac7342b40161cebd9eadeacb4649458", "node_id": "C_kwDOAAsO6NoAKDAxOWY0ODY3M2FjNzM0MmI0MDE2MWNlYmQ5ZWFkZWFjYjQ2NDk0NTg", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-04-02T11:04:04Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-04-02T11:14:42Z"}, "message": "fix: Paper over GAT panic\n\nTIL that Chalk expects the arguments to a generic associated type to\ncome *before* the ones for the parent trait, not *after* as we have been\ndoing with all other nested generics. Fixing this requires a larger\nrefactoring, so for now this just papers over the problem by completely\nignoring parameters of associated types.\n\nFixes #11769.", "tree": {"sha": "e92a90a62c2376bc95761d9636852b0e8d792b42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e92a90a62c2376bc95761d9636852b0e8d792b42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/019f48673ac7342b40161cebd9eadeacb4649458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/019f48673ac7342b40161cebd9eadeacb4649458", "html_url": "https://github.com/rust-lang/rust/commit/019f48673ac7342b40161cebd9eadeacb4649458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/019f48673ac7342b40161cebd9eadeacb4649458/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63c4d6b20dd9445bea135473a6bf203644cfdd65", "url": "https://api.github.com/repos/rust-lang/rust/commits/63c4d6b20dd9445bea135473a6bf203644cfdd65", "html_url": "https://github.com/rust-lang/rust/commit/63c4d6b20dd9445bea135473a6bf203644cfdd65"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "65eb2da5afc51f6155b267fe870ba760b512abb0", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/019f48673ac7342b40161cebd9eadeacb4649458/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019f48673ac7342b40161cebd9eadeacb4649458/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=019f48673ac7342b40161cebd9eadeacb4649458", "patch": "@@ -1497,3 +1497,22 @@ fn regression_11688_3() {\n         \"#,\n     );\n }\n+\n+#[test]\n+fn gat_crash() {\n+    cov_mark::check!(ignore_gats);\n+    check_no_mismatches(\n+        r#\"\n+trait ATrait {}\n+\n+trait Crash {\n+    type Member<const N: usize>: ATrait;\n+    fn new<const N: usize>() -> Self::Member<N>;\n+}\n+\n+fn test<T: Crash>() {\n+    T::new();\n+}\n+\"#,\n+    );\n+}"}, {"sha": "c4a11c86d4aa9a5d94e4d833fe67bc2c28919a61", "filename": "crates/hir_ty/src/utils.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/019f48673ac7342b40161cebd9eadeacb4649458/crates%2Fhir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019f48673ac7342b40161cebd9eadeacb4649458/crates%2Fhir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Futils.rs?ref=019f48673ac7342b40161cebd9eadeacb4649458", "patch": "@@ -175,6 +175,15 @@ pub(super) fn associated_type_by_name_including_super_traits(\n \n pub(crate) fn generics(db: &dyn DefDatabase, def: GenericDefId) -> Generics {\n     let parent_generics = parent_generic_def(db, def).map(|def| Box::new(generics(db, def)));\n+    if parent_generics.is_some() && matches!(def, GenericDefId::TypeAliasId(_)) {\n+        // XXX: treat generic associated types as not existing to avoid crashes (#)\n+        //\n+        // Chalk expects the inner associated type's parameters to come\n+        // *before*, not after the trait's generics as we've always done it.\n+        // Adapting to this requires a larger refactoring\n+        cov_mark::hit!(ignore_gats);\n+        return Generics { def, params: Interned::new(Default::default()), parent_generics };\n+    }\n     Generics { def, params: db.generic_params(def), parent_generics }\n }\n "}]}