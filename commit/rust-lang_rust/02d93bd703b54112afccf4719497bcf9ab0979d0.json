{"sha": "02d93bd703b54112afccf4719497bcf9ab0979d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDkzYmQ3MDNiNTQxMTJhZmNjZjQ3MTk0OTdiY2Y5YWIwOTc5ZDA=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-12-06T16:02:48Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-12-12T03:35:51Z"}, "message": "more private", "tree": {"sha": "41f2cac96506a5a2918aecfd007a9e023c3edd6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41f2cac96506a5a2918aecfd007a9e023c3edd6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d93bd703b54112afccf4719497bcf9ab0979d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d93bd703b54112afccf4719497bcf9ab0979d0", "html_url": "https://github.com/rust-lang/rust/commit/02d93bd703b54112afccf4719497bcf9ab0979d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d93bd703b54112afccf4719497bcf9ab0979d0/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ecf86291e1d89e8fe43e49c756bec196fb86a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/78ecf86291e1d89e8fe43e49c756bec196fb86a6", "html_url": "https://github.com/rust-lang/rust/commit/78ecf86291e1d89e8fe43e49c756bec196fb86a6"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "11012ef2fc7ee78065b3253ad4e5d74b23ce113e", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/02d93bd703b54112afccf4719497bcf9ab0979d0/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d93bd703b54112afccf4719497bcf9ab0979d0/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=02d93bd703b54112afccf4719497bcf9ab0979d0", "patch": "@@ -40,13 +40,11 @@ use crate::dataflow::{do_dataflow, DebugFormatted};\n use crate::dataflow::EverInitializedPlaces;\n use crate::dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n \n-use self::borrow_set::{BorrowData, BorrowSet};\n use self::flows::Flows;\n use self::location::LocationTable;\n use self::prefixes::PrefixSet;\n use self::MutateMode::{JustWrite, WriteAndRead};\n use self::diagnostics::AccessKind;\n-use self::region_infer::RegionInferenceContext;\n \n use self::path_utils::*;\n \n@@ -61,15 +59,20 @@ mod facts;\n mod invalidation;\n mod renumber;\n mod member_constraints;\n-\n-crate mod constraints;\n-crate mod universal_regions;\n-crate mod type_check;\n-crate mod region_infer;\n-crate mod borrow_set;\n-crate mod place_ext;\n-crate mod places_conflict;\n-crate mod nll;\n+mod constraints;\n+mod universal_regions;\n+mod type_check;\n+mod region_infer;\n+mod borrow_set;\n+mod place_ext;\n+mod places_conflict;\n+mod nll;\n+\n+crate use region_infer::RegionInferenceContext;\n+crate use borrow_set::{BorrowSet, BorrowData};\n+crate use places_conflict::{places_conflict, PlaceConflictBias};\n+crate use place_ext::PlaceExt;\n+crate use nll::ToRegionVid;\n \n // FIXME(eddyb) perhaps move this somewhere more centrally.\n #[derive(Debug)]"}, {"sha": "5433b7f5f74f7bff208b948e4c5e48fecbd0a3ee", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/02d93bd703b54112afccf4719497bcf9ab0979d0/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d93bd703b54112afccf4719497bcf9ab0979d0/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=02d93bd703b54112afccf4719497bcf9ab0979d0", "patch": "@@ -6,15 +6,11 @@ use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::{Idx, IndexVec};\n \n-use crate::dataflow::{BitDenotation, BottomValue, GenKillSet};\n-\n use crate::borrow_check::{\n-    borrow_set::{BorrowSet, BorrowData},\n-    place_ext::PlaceExt,\n-    region_infer::RegionInferenceContext,\n-    nll::ToRegionVid,\n+    ToRegionVid, BorrowSet, BorrowData, RegionInferenceContext, PlaceExt, PlaceConflictBias,\n     places_conflict,\n };\n+use crate::dataflow::{BitDenotation, BottomValue, GenKillSet};\n \n use std::rc::Rc;\n \n@@ -223,13 +219,13 @@ impl<'a, 'tcx> Borrows<'a, 'tcx> {\n             // locations.\n             let definitely_conflicting_borrows = other_borrows_of_local\n                 .filter(|&&i| {\n-                    places_conflict::places_conflict(\n+                    places_conflict(\n                         self.tcx,\n                         self.param_env,\n                         self.body,\n                         &self.borrow_set.borrows[i].borrowed_place,\n                         place,\n-                        places_conflict::PlaceConflictBias::NoOverlap)\n+                        PlaceConflictBias::NoOverlap)\n                 });\n \n             trans.kill_all(definitely_conflicting_borrows);"}]}