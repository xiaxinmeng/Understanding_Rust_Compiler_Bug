{"sha": "946bed89da398187c77e9ef7d7b4c69e64deaba5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NmJlZDg5ZGEzOTgxODdjNzdlOWVmN2Q3YjRjNjllNjRkZWFiYTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-31T13:26:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-08T17:31:46Z"}, "message": "remove test-miri flag from bootstrap", "tree": {"sha": "9b16053e937a00d0fafa5d5fd24a660cc6008217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b16053e937a00d0fafa5d5fd24a660cc6008217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/946bed89da398187c77e9ef7d7b4c69e64deaba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/946bed89da398187c77e9ef7d7b4c69e64deaba5", "html_url": "https://github.com/rust-lang/rust/commit/946bed89da398187c77e9ef7d7b4c69e64deaba5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/946bed89da398187c77e9ef7d7b4c69e64deaba5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78b658004cce335b19743cd5406dd3c5ecfe824b", "url": "https://api.github.com/repos/rust-lang/rust/commits/78b658004cce335b19743cd5406dd3c5ecfe824b", "html_url": "https://github.com/rust-lang/rust/commit/78b658004cce335b19743cd5406dd3c5ecfe824b"}], "stats": {"total": 20, "additions": 2, "deletions": 18}, "files": [{"sha": "e54c9360baeceeac8163e0ec67db44a4f487ffa6", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=946bed89da398187c77e9ef7d7b4c69e64deaba5", "patch": "@@ -543,15 +543,6 @@ impl<'a> Builder<'a> {\n             parent: Cell::new(None),\n         };\n \n-        if kind == Kind::Dist {\n-            assert!(\n-                !builder.config.test_miri,\n-                \"Do not distribute with miri enabled.\\n\\\n-                The distributed libraries would include all MIR (increasing binary size).\n-                The distributed MIR would include validation statements.\"\n-            );\n-        }\n-\n         builder\n     }\n "}, {"sha": "a5bfafdfdb4dcf5b45e91b75dd25827b9fdab22f", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=946bed89da398187c77e9ef7d7b4c69e64deaba5", "patch": "@@ -128,7 +128,6 @@ pub struct Config {\n     pub low_priority: bool,\n     pub channel: String,\n     pub verbose_tests: bool,\n-    pub test_miri: bool,\n     pub save_toolstates: Option<PathBuf>,\n     pub print_step_timings: bool,\n     pub missing_tools: bool,\n@@ -315,7 +314,6 @@ struct Rust {\n     debug: Option<bool>,\n     dist_src: Option<bool>,\n     verbose_tests: Option<bool>,\n-    test_miri: Option<bool>,\n     incremental: Option<bool>,\n     save_toolstates: Option<String>,\n     codegen_backends: Option<Vec<String>>,\n@@ -375,7 +373,6 @@ impl Config {\n         config.codegen_tests = true;\n         config.ignore_git = false;\n         config.rust_dist_src = true;\n-        config.test_miri = false;\n         config.rust_codegen_backends = vec![INTERNER.intern_str(\"llvm\")];\n         config.rust_codegen_backends_dir = \"codegen-backends\".to_owned();\n         config.deny_warnings = true;\n@@ -557,7 +554,6 @@ impl Config {\n             set(&mut config.channel, rust.channel.clone());\n             set(&mut config.rust_dist_src, rust.dist_src);\n             set(&mut config.verbose_tests, rust.verbose_tests);\n-            set(&mut config.test_miri, rust.test_miri);\n             // in the case \"false\" is set explicitly, do not overwrite the command line args\n             if let Some(true) = rust.incremental {\n                 config.incremental = true;"}, {"sha": "346f0cb2039c08ccbd8d17826cc7af7c24f84a75", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=946bed89da398187c77e9ef7d7b4c69e64deaba5", "patch": "@@ -36,7 +36,6 @@ def v(*args):\n o(\"compiler-docs\", \"build.compiler-docs\", \"build compiler documentation\")\n o(\"optimize-tests\", \"rust.optimize-tests\", \"build tests with optimizations\")\n o(\"parallel-compiler\", \"rust.parallel-compiler\", \"build a multi-threaded rustc\")\n-o(\"test-miri\", \"rust.test-miri\", \"run miri's test suite\")\n o(\"verbose-tests\", \"rust.verbose-tests\", \"enable verbose output when running tests\")\n o(\"ccache\", \"llvm.ccache\", \"invoke gcc/clang via ccache to reuse object files between builds\")\n o(\"sccache\", None, \"invoke gcc/clang via sccache to reuse object files between builds\")"}, {"sha": "79d8b867cb61e98a1fb848bab69dcfb5cf205e1e", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=946bed89da398187c77e9ef7d7b4c69e64deaba5", "patch": "@@ -366,8 +366,7 @@ impl Step for Miri {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        let test_miri = run.builder.config.test_miri;\n-        run.path(\"src/tools/miri\").default_condition(test_miri)\n+        run.path(\"src/tools/miri\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "687856cca6b62cc2b860afb59964d8c0d8d95e00", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=946bed89da398187c77e9ef7d7b4c69e64deaba5", "patch": "@@ -254,7 +254,7 @@ jobs:\n       x86_64-msvc-tools:\n         MSYS_BITS: 64\n         SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstates.json windows\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstates.json --enable-test-miri\n+        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstates.json\n \n       # 32/64-bit MinGW builds.\n       #"}, {"sha": "f11ae7a34cb91fcd45c4f6af30f5e6e9f0c1c6eb", "filename": "src/ci/docker/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/946bed89da398187c77e9ef7d7b4c69e64deaba5/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile?ref=946bed89da398187c77e9ef7d7b4c69e64deaba5", "patch": "@@ -23,6 +23,5 @@ COPY x86_64-gnu-tools/repo.sh /tmp/\n \n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\\n-  --enable-test-miri \\\n   --save-toolstates=/tmp/toolstates.json\n ENV SCRIPT /tmp/checktools.sh ../x.py /tmp/toolstates.json linux"}]}