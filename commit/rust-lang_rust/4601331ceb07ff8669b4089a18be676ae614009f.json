{"sha": "4601331ceb07ff8669b4089a18be676ae614009f", "node_id": "C_kwDOAAsO6NoAKDQ2MDEzMzFjZWIwN2ZmODY2OWI0MDg5YTE4YmU2NzZhZTYxNDAwOWY", "commit": {"author": {"name": "alibektas", "email": "bektasali@protonmail.com", "date": "2023-04-16T21:41:08Z"}, "committer": {"name": "alibektas", "email": "bektasali@protonmail.com", "date": "2023-04-21T17:46:57Z"}, "message": "Simple fix for make::impl_trait", "tree": {"sha": "b42b34f4cdcfb29805fc4ab38224f9f3e28dabc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b42b34f4cdcfb29805fc4ab38224f9f3e28dabc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4601331ceb07ff8669b4089a18be676ae614009f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4601331ceb07ff8669b4089a18be676ae614009f", "html_url": "https://github.com/rust-lang/rust/commit/4601331ceb07ff8669b4089a18be676ae614009f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4601331ceb07ff8669b4089a18be676ae614009f/comments", "author": {"login": "alibektas", "id": 20956650, "node_id": "MDQ6VXNlcjIwOTU2NjUw", "avatar_url": "https://avatars.githubusercontent.com/u/20956650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alibektas", "html_url": "https://github.com/alibektas", "followers_url": "https://api.github.com/users/alibektas/followers", "following_url": "https://api.github.com/users/alibektas/following{/other_user}", "gists_url": "https://api.github.com/users/alibektas/gists{/gist_id}", "starred_url": "https://api.github.com/users/alibektas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alibektas/subscriptions", "organizations_url": "https://api.github.com/users/alibektas/orgs", "repos_url": "https://api.github.com/users/alibektas/repos", "events_url": "https://api.github.com/users/alibektas/events{/privacy}", "received_events_url": "https://api.github.com/users/alibektas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alibektas", "id": 20956650, "node_id": "MDQ6VXNlcjIwOTU2NjUw", "avatar_url": "https://avatars.githubusercontent.com/u/20956650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alibektas", "html_url": "https://github.com/alibektas", "followers_url": "https://api.github.com/users/alibektas/followers", "following_url": "https://api.github.com/users/alibektas/following{/other_user}", "gists_url": "https://api.github.com/users/alibektas/gists{/gist_id}", "starred_url": "https://api.github.com/users/alibektas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alibektas/subscriptions", "organizations_url": "https://api.github.com/users/alibektas/orgs", "repos_url": "https://api.github.com/users/alibektas/repos", "events_url": "https://api.github.com/users/alibektas/events{/privacy}", "received_events_url": "https://api.github.com/users/alibektas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6464392c15fa8788215d669c4c0b1e46bcadeea", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6464392c15fa8788215d669c4c0b1e46bcadeea", "html_url": "https://github.com/rust-lang/rust/commit/a6464392c15fa8788215d669c4c0b1e46bcadeea"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "c56ddb516096a73806896a3f3ae52ed145d19ee3", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4601331ceb07ff8669b4089a18be676ae614009f/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4601331ceb07ff8669b4089a18be676ae614009f/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=4601331ceb07ff8669b4089a18be676ae614009f", "patch": "@@ -184,8 +184,11 @@ pub fn impl_trait(\n     ty: ast::Path,\n     ty_params: Option<ast::GenericParamList>,\n ) -> ast::Impl {\n-    let ty_params = ty_params.map_or_else(String::new, |params| params.to_string());\n-    ast_from_text(&format!(\"impl{ty_params} {trait_} for {ty}{ty_params} {{}}\"))\n+    // TODO : If this function is now correct we can also change `impl_` accordingly`\n+    let ty_params_str = ty_params.as_ref().map_or_else(String::new, |params| params.to_string());\n+    let ty_genargs_str =\n+        ty_params.map_or_else(String::new, |params| params.to_generic_args().to_string());\n+    ast_from_text(&format!(\"impl{ty_params_str} {trait_} for {ty}{ty_genargs_str} {{}}\"))\n }\n \n pub fn path_segment(name_ref: ast::NameRef) -> ast::PathSegment {"}]}