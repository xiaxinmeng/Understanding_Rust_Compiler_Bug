{"sha": "26bd186726124e76714b98d1e28afe477bd99353", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YmQxODY3MjYxMjRlNzY3MTRiOThkMWUyOGFmZTQ3N2JkOTkzNTM=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-19T23:53:41Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-19T23:53:41Z"}, "message": "Don't create a new inference context for checking pattern ranges.\n\nUgly fix -- it would be better to refactor and consolidate the various\n\"make sure these types are the same\" fns scattered around typeck.", "tree": {"sha": "12b016954d4db611966d2955653de9224a28b72e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12b016954d4db611966d2955653de9224a28b72e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26bd186726124e76714b98d1e28afe477bd99353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26bd186726124e76714b98d1e28afe477bd99353", "html_url": "https://github.com/rust-lang/rust/commit/26bd186726124e76714b98d1e28afe477bd99353", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26bd186726124e76714b98d1e28afe477bd99353/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e281439a0d9fd67f3ad08976d0b60535112b303", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e281439a0d9fd67f3ad08976d0b60535112b303", "html_url": "https://github.com/rust-lang/rust/commit/3e281439a0d9fd67f3ad08976d0b60535112b303"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "3d2dca700c2ea992be7f0f2e32f006193f49626e", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/26bd186726124e76714b98d1e28afe477bd99353/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bd186726124e76714b98d1e28afe477bd99353/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=26bd186726124e76714b98d1e28afe477bd99353", "patch": "@@ -203,6 +203,23 @@ fn require_same_types(\n     }\n }\n \n+fn require_same_types_in_infcx(\n+    infcx: infer::infer_ctxt,\n+    span: span,\n+    t1: ty::t,\n+    t2: ty::t,\n+    msg: fn() -> str) -> bool {\n+\n+    alt infer::compare_tys_in_infcx(infcx, t1, t2) {\n+      result::ok(()) { true }\n+      result::err(terr) {\n+        infcx.tcx.sess.span_err(span, msg() + \": \" +\n+            ty::type_err_to_str(infcx.tcx, terr));\n+        false\n+      }\n+    }\n+}\n+\n fn arg_is_argv_ty(_tcx: ty::ctxt, a: ty::arg) -> bool {\n     alt ty::get(a.ty).struct {\n       ty::ty_vec(mt) {"}, {"sha": "e56e99aa543f8b026137e0408a1a018ab2cec601", "filename": "src/rustc/middle/typeck/check/alt.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/26bd186726124e76714b98d1e28afe477bd99353/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bd186726124e76714b98d1e28afe477bd99353/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Falt.rs?ref=26bd186726124e76714b98d1e28afe477bd99353", "patch": "@@ -137,9 +137,12 @@ fn check_pat(pcx: pat_ctxt, pat: @ast::pat, expected: ty::t) {\n         check_expr_with(fcx, end, expected);\n         let b_ty =\n             fcx.infcx.resolve_type_vars_if_possible(fcx.expr_ty(begin));\n-        if !require_same_types(\n-            tcx, pat.span, b_ty,\n-            fcx.infcx.resolve_type_vars_if_possible(fcx.expr_ty(end)),\n+        let e_ty =\n+            fcx.infcx.resolve_type_vars_if_possible(fcx.expr_ty(end));\n+        #debug[\"pat_range beginning type: %?\", b_ty];\n+        #debug[\"pat_range ending type: %?\", e_ty];\n+        if !require_same_types_in_infcx(\n+            fcx.infcx, pat.span, b_ty, e_ty,\n             {|| \"mismatched types in range\" }) {\n             // no-op\n         } else if !ty::type_is_numeric(b_ty) {"}, {"sha": "03dac5cb9ae748ad89388d1e15422ecc022eee2b", "filename": "src/rustc/middle/typeck/infer.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26bd186726124e76714b98d1e28afe477bd99353/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bd186726124e76714b98d1e28afe477bd99353/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Finfer.rs?ref=26bd186726124e76714b98d1e28afe477bd99353", "patch": "@@ -172,6 +172,7 @@ export resolve_deep_var;\n export methods; // for infer_ctxt\n export unify_methods; // for infer_ctxt\n export compare_tys;\n+export compare_tys_in_infcx;\n export fixup_err, fixup_err_to_str;\n export assignment;\n export root, to_str;\n@@ -381,6 +382,10 @@ fn compare_tys(tcx: ty::ctxt, a: ty::t, b: ty::t) -> ures {\n     mk_eqty(infcx, a, b)\n }\n \n+fn compare_tys_in_infcx(infcx: infer_ctxt, a: ty::t, b: ty::t) -> ures {\n+    mk_eqty(infcx, a, b)\n+}\n+\n // See comment on the type `resolve_state` below\n fn resolve_shallow(cx: infer_ctxt, a: ty::t,\n                    force_vars: force_level) -> fres<ty::t> {"}]}