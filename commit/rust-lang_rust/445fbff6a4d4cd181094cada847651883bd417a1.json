{"sha": "445fbff6a4d4cd181094cada847651883bd417a1", "node_id": "C_kwDOAAsO6NoAKDQ0NWZiZmY2YTRkNGNkMTgxMDk0Y2FkYTg0NzY1MTg4M2JkNDE3YTE", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-02-01T04:12:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-01T04:12:58Z"}, "message": "Rollup merge of #93492 - Mark-Simulacrum:shorter-failure-output, r=ehuss\n\nHide failed command unless in verbose mode\n\nThis is particularly intended for invoking compiletest; the command line there\nis long (3,350 characters on my system) and takes up a lot of screen real estate\nfor little benefit to the majority of those running bootstrap. This moves\nprinting it to verbose mode (-v must be passed) which means that it's still\npossible to access when needed for debugging.\n\nThe main downside is that CI logs will by-default become less usable for\ndebugging (particularly) spurious failures, but it is pretty rare for us to\nreally need the information there -- it's usually fairly obvious what is being\nrun with a little investigation.\n\nr? `@ehuss` as you've done some of the spurious failure investigations, so can\n(hopefully) confirm my intuition that this won't seriously hinder them.", "tree": {"sha": "3c34bd4aa9d1691b3718b56f06221edac313826a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c34bd4aa9d1691b3718b56f06221edac313826a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/445fbff6a4d4cd181094cada847651883bd417a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+LNKCRBK7hj4Ov3rIwAAPsEIAAuALF5OWnrlLtjPHhqjwNz8\ncVujTv5bs1s4or2s1aj3a+eb/KmMaX+wUNMVNUKK7xpigx4wChj3QrbL3ltMWJMw\nPY15cFC3hfA0i0nuRxbGM5MRl8ttPgbqImf/Mnv5lBVxpj3V4hBv+lKPSbgH+Qfb\nW+hzbygfj4S4D6LcoIr6jeUQr5WMVzYhWbzHG7p/1e+7+LlUsiVcIJOioYaGS+zj\nqZS6tfY88Pzb2aYSRVkCiLc47Wuani3DggsYtMtHRjFSpu8uQMiT+gbqqbwFwqkk\nEAow6fXbd15nafvPOKpWwfxEAsqtYMfjwm3DHyyFEk+IWNcN3xYQH95wi2WFZH0=\n=KmsU\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c34bd4aa9d1691b3718b56f06221edac313826a\nparent 3aa2e4584b16084b157ca7a9914b0dac44d021d0\nparent 9bf6a5de7705e83c110179580e996dcf74a5928f\nauthor Eric Huss <eric@huss.org> 1643688778 -0800\ncommitter GitHub <noreply@github.com> 1643688778 -0800\n\nRollup merge of #93492 - Mark-Simulacrum:shorter-failure-output, r=ehuss\n\nHide failed command unless in verbose mode\n\nThis is particularly intended for invoking compiletest; the command line there\nis long (3,350 characters on my system) and takes up a lot of screen real estate\nfor little benefit to the majority of those running bootstrap. This moves\nprinting it to verbose mode (-v must be passed) which means that it's still\npossible to access when needed for debugging.\n\nThe main downside is that CI logs will by-default become less usable for\ndebugging (particularly) spurious failures, but it is pretty rare for us to\nreally need the information there -- it's usually fairly obvious what is being\nrun with a little investigation.\n\nr? `@ehuss` as you've done some of the spurious failure investigations, so can\n(hopefully) confirm my intuition that this won't seriously hinder them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/445fbff6a4d4cd181094cada847651883bd417a1", "html_url": "https://github.com/rust-lang/rust/commit/445fbff6a4d4cd181094cada847651883bd417a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/445fbff6a4d4cd181094cada847651883bd417a1/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aa2e4584b16084b157ca7a9914b0dac44d021d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aa2e4584b16084b157ca7a9914b0dac44d021d0", "html_url": "https://github.com/rust-lang/rust/commit/3aa2e4584b16084b157ca7a9914b0dac44d021d0"}, {"sha": "9bf6a5de7705e83c110179580e996dcf74a5928f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bf6a5de7705e83c110179580e996dcf74a5928f", "html_url": "https://github.com/rust-lang/rust/commit/9bf6a5de7705e83c110179580e996dcf74a5928f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e5f84d417bf0b24f558889ec45cf5b0746677f7a", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/445fbff6a4d4cd181094cada847651883bd417a1/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445fbff6a4d4cd181094cada847651883bd417a1/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=445fbff6a4d4cd181094cada847651883bd417a1", "patch": "@@ -851,7 +851,7 @@ impl Build {\n             return;\n         }\n         self.verbose(&format!(\"running: {:?}\", cmd));\n-        run(cmd)\n+        run(cmd, self.is_verbose())\n     }\n \n     /// Runs a command, printing out nice contextual information if it fails.\n@@ -871,7 +871,7 @@ impl Build {\n             return true;\n         }\n         self.verbose(&format!(\"running: {:?}\", cmd));\n-        try_run(cmd)\n+        try_run(cmd, self.is_verbose())\n     }\n \n     /// Runs a command, printing out nice contextual information if it fails."}, {"sha": "24aded547315e9828dd8a0a8e92b5457aaf9914e", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/445fbff6a4d4cd181094cada847651883bd417a1/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445fbff6a4d4cd181094cada847651883bd417a1/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=445fbff6a4d4cd181094cada847651883bd417a1", "patch": "@@ -55,18 +55,18 @@ pub fn restore_library_path() {\n     }\n }\n \n-pub fn run(cmd: &mut Command) {\n-    if !try_run(cmd) {\n+pub fn run(cmd: &mut Command, print_cmd_on_fail: bool) {\n+    if !try_run(cmd, print_cmd_on_fail) {\n         std::process::exit(1);\n     }\n }\n \n-pub fn try_run(cmd: &mut Command) -> bool {\n+pub fn try_run(cmd: &mut Command, print_cmd_on_fail: bool) -> bool {\n     let status = match cmd.status() {\n         Ok(status) => status,\n         Err(e) => fail(&format!(\"failed to execute command: {:?}\\nerror: {}\", cmd, e)),\n     };\n-    if !status.success() {\n+    if !status.success() && print_cmd_on_fail {\n         println!(\n             \"\\n\\ncommand did not execute successfully: {:?}\\n\\\n              expected success, got: {}\\n\\n\","}]}