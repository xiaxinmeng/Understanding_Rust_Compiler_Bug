{"sha": "f0e5a314b029216c4f9446aa6ba34c4b842db23e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTVhMzE0YjAyOTIxNmM0Zjk0NDZhYTZiYTM0YzRiODQyZGIyM2U=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-24T21:31:43Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-24T21:31:43Z"}, "message": "Dedupe PATH_FIRST in ATOM_EXPR_FIRST", "tree": {"sha": "edf3873fae46cf4df262ecfa209b136179d2c590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edf3873fae46cf4df262ecfa209b136179d2c590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e5a314b029216c4f9446aa6ba34c4b842db23e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e5a314b029216c4f9446aa6ba34c4b842db23e", "html_url": "https://github.com/rust-lang/rust/commit/f0e5a314b029216c4f9446aa6ba34c4b842db23e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e5a314b029216c4f9446aa6ba34c4b842db23e/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4899e7be76c5c8309222c8afe1c0f74dc59a4345", "url": "https://api.github.com/repos/rust-lang/rust/commits/4899e7be76c5c8309222c8afe1c0f74dc59a4345", "html_url": "https://github.com/rust-lang/rust/commit/4899e7be76c5c8309222c8afe1c0f74dc59a4345"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "5072d2c4939b73bfd425ae3d18a83a5827612d34", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f0e5a314b029216c4f9446aa6ba34c4b842db23e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e5a314b029216c4f9446aa6ba34c4b842db23e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=f0e5a314b029216c4f9446aa6ba34c4b842db23e", "patch": "@@ -1,4 +1,5 @@\n use super::*;\n+use crate::grammar::paths::PATH_FIRST;\n \n // test expr_literals\n // fn foo() {\n@@ -36,23 +37,17 @@ pub(crate) fn literal(p: &mut Parser) -> Option<CompletedMarker> {\n }\n \n // E.g. for after the break in `if break {}`, this should not match\n-pub(super) const ATOM_EXPR_FIRST: TokenSet = LITERAL_FIRST.union(token_set![\n+pub(super) const ATOM_EXPR_FIRST: TokenSet = LITERAL_FIRST.union(PATH_FIRST).union(token_set![\n     L_PAREN,\n     L_CURLY,\n     L_BRACK,\n-    L_ANGLE, // Universal function call syntax\n     PIPE,\n     MOVE_KW,\n     IF_KW,\n     WHILE_KW,\n     MATCH_KW,\n     UNSAFE_KW,\n     RETURN_KW,\n-    IDENT,\n-    SELF_KW,\n-    SUPER_KW,\n-    CRATE_KW,\n-    COLONCOLON,\n     BREAK_KW,\n     CONTINUE_KW,\n     LIFETIME,"}]}