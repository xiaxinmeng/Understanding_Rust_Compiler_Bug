{"sha": "1946a1842e3e12be48d1e9e6f874c3924d58b8fc", "node_id": "C_kwDOAAsO6NoAKDE5NDZhMTg0MmUzZTEyYmU0OGQxZTllNmY4NzRjMzkyNGQ1OGI4ZmM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-26T12:20:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-26T12:20:31Z"}, "message": "explicitly mention that both components of wide prts are compared", "tree": {"sha": "05f0de83c12fa2dc46cd92a5a5f62bb45d4a3a0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05f0de83c12fa2dc46cd92a5a5f62bb45d4a3a0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1946a1842e3e12be48d1e9e6f874c3924d58b8fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1946a1842e3e12be48d1e9e6f874c3924d58b8fc", "html_url": "https://github.com/rust-lang/rust/commit/1946a1842e3e12be48d1e9e6f874c3924d58b8fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1946a1842e3e12be48d1e9e6f874c3924d58b8fc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99a74afa5fdc2318e7245e6657a3f21695526356", "url": "https://api.github.com/repos/rust-lang/rust/commits/99a74afa5fdc2318e7245e6657a3f21695526356", "html_url": "https://github.com/rust-lang/rust/commit/99a74afa5fdc2318e7245e6657a3f21695526356"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "3a70981d2e1388f188bb87ae08352bfde46b3762", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1946a1842e3e12be48d1e9e6f874c3924d58b8fc/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1946a1842e3e12be48d1e9e6f874c3924d58b8fc/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=1946a1842e3e12be48d1e9e6f874c3924d58b8fc", "patch": "@@ -1733,6 +1733,7 @@ pub(crate) unsafe fn align_offset<T: Sized>(p: *const T, a: usize) -> usize {\n /// by their address rather than comparing the values they point to\n /// (which is what the `PartialEq for &T` implementation does).\n ///\n+/// When comparing wide pointers, both the address and the metadata are tested for equality.\n /// However, note that comparing trait object pointers (`*const dyn Trait`) is unrealiable: pointers\n /// to values of the same underlying type can compare inequal (because vtables are duplicated in\n /// multiple codegen units), and pointers to values of *different* underlying type can compare equal"}]}