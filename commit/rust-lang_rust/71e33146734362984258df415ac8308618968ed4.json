{"sha": "71e33146734362984258df415ac8308618968ed4", "node_id": "C_kwDOAAsO6NoAKDcxZTMzMTQ2NzM0MzYyOTg0MjU4ZGY0MTVhYzgzMDg2MTg5NjhlZDQ", "commit": {"author": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-10T18:12:28Z"}, "committer": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-10T18:16:13Z"}, "message": "rustc_pass_by_value remove dependency on rustc_diagnostic_item", "tree": {"sha": "59ffac5b8466ddcb666240e1cc4cfa461962c00c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59ffac5b8466ddcb666240e1cc4cfa461962c00c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71e33146734362984258df415ac8308618968ed4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYxDoXUzfgu5d8FXXuroRW98MWYoFAmHcd+4ACgkQuroRW98M\nWYpf8g/+MsX5zciSGPqWmyHW1PitiGu4dPP6zQSfNE7rDbtNzxPvqnsLLbHCAYyL\n+FE2n990ZD7TfNLZm7AikrNB8woGEFXIppuIroGS6UF9/M/b64rGNOZsQJae+eec\nZQr8m9fh34hkN9eboDDPT9StXOlDe+6I6P9pd4Y0t4eqdamVAGuoGWj5AAA76Mve\n2P1lugvdOkAHD9kVBLMuFZ2xQJU9wv8uAun6ILGKsEcodqcu7xvuzpuYWRLOqKz1\nZ9QGfOKBNlbo1YnwTTzTRkI9L15/agmcL2xEgmR1xPcXM3YTgeOtn2NtrchKjyJW\nOKDa05HgIFzQfBmvXNBMeB/T9AGERFmo6wbkcNviPqpWYQuROxys2gvt4Me7KsP0\npTsgCesyzN2jN8L+ydlVITdgNoCGK1QuEi7/BiZUSk9Hz572XLtuuwK7BM6Birte\ntRSNSGH0oxiOA2OPX+ebjP6w7wk19cY2YTwUQL9+xEZpAhkF60ZSjyda91Uj1ooc\nPPiHB8FgwaooJ5Ao89/L3lTQpJe+WQ/Md6dxHl5msBK48KiHADxB6ANdb6YtV2gP\nO7dw+qOVAcJX0kY2iTWDE74LjDCR/iOomXVft27qKYyFGmaDsiyzM9M+hsoyb3Df\nydIcoyVhFQAy2IrgyyujrPlvVPmHvkFZmz/3d80qcLU8QqAvjKM=\n=tLXn\n-----END PGP SIGNATURE-----", "payload": "tree 59ffac5b8466ddcb666240e1cc4cfa461962c00c\nparent 91ed6892f7ec60fb76eeaaa024919f293a58d733\nauthor Mahdi Dibaiee <mdibaiee@pm.me> 1641838348 +0000\ncommitter Mahdi Dibaiee <mdibaiee@pm.me> 1641838573 +0000\n\nrustc_pass_by_value remove dependency on rustc_diagnostic_item\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71e33146734362984258df415ac8308618968ed4", "html_url": "https://github.com/rust-lang/rust/commit/71e33146734362984258df415ac8308618968ed4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71e33146734362984258df415ac8308618968ed4/comments", "author": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91ed6892f7ec60fb76eeaaa024919f293a58d733", "url": "https://api.github.com/repos/rust-lang/rust/commits/91ed6892f7ec60fb76eeaaa024919f293a58d733", "html_url": "https://github.com/rust-lang/rust/commit/91ed6892f7ec60fb76eeaaa024919f293a58d733"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "c689f34d9e3b4ea22ff023d076360a2fa8617bf9", "filename": "compiler/rustc_lint/src/pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/71e33146734362984258df415ac8308618968ed4/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71e33146734362984258df415ac8308618968ed4/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs?ref=71e33146734362984258df415ac8308618968ed4", "patch": "@@ -11,7 +11,6 @@ declare_tool_lint! {\n     /// The `rustc_pass_by_value` lint marks a type with `#[rustc_pass_by_value]` requiring it to always be passed by value.\n     /// This is usually used for types that are thin wrappers around references, so there is no benefit to an extra\n     /// layer of indirection. (Example: `Ty` which is a reference to a `TyS`)\n-    /// This lint relies on `#[rustc_diagnostic_item]` being available for the target.\n     pub rustc::PASS_BY_VALUE,\n     Warn,\n     \"pass by reference of a type flagged as `#[rustc_pass_by_value]`\",\n@@ -52,16 +51,14 @@ fn path_for_pass_by_value(cx: &LateContext<'_>, ty: &hir::Ty<'_>) -> Option<Stri\n     if let TyKind::Path(QPath::Resolved(_, path)) = &ty.kind {\n         match path.res {\n             Res::Def(_, def_id) if has_pass_by_value_attr(cx, def_id) => {\n-                if let Some(name) = cx.tcx.get_diagnostic_name(def_id) {\n-                    return Some(format!(\"{}{}\", name, gen_args(path.segments.last().unwrap())));\n-                }\n+                let name = cx.tcx.item_name(def_id).to_ident_string();\n+                return Some(format!(\"{}{}\", name, gen_args(path.segments.last().unwrap())));\n             }\n             Res::SelfTy(None, Some((did, _))) => {\n                 if let ty::Adt(adt, substs) = cx.tcx.type_of(did).kind() {\n                     if has_pass_by_value_attr(cx, adt.did) {\n-                        if let Some(name) = cx.tcx.get_diagnostic_name(adt.did) {\n-                            return Some(format!(\"{}<{}>\", name, substs[0]));\n-                        }\n+                        let name = cx.tcx.item_name(adt.did).to_ident_string();\n+                        return Some(format!(\"{}<{}>\", name, substs[0]));\n                     }\n                 }\n             }"}, {"sha": "293464c07ef78f368ac825004b26d23596322518", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.rs?ref=71e33146734362984258df415ac8308618968ed4", "patch": "@@ -62,7 +62,6 @@ impl Foo {\n     //~^^ ERROR passing `TyCtxt<'_>` by reference\n }\n \n-#[rustc_diagnostic_item = \"CustomEnum\"]\n #[rustc_pass_by_value]\n enum CustomEnum {\n     A,\n@@ -77,13 +76,11 @@ impl CustomEnum {\n     }\n }\n \n-#[rustc_diagnostic_item = \"CustomStruct\"]\n #[rustc_pass_by_value]\n struct CustomStruct {\n     s: u8,\n }\n \n-#[rustc_diagnostic_item = \"CustomAlias\"]\n #[rustc_pass_by_value]\n type CustomAlias<'a> = &'a CustomStruct; //~ ERROR passing `CustomStruct` by reference\n "}, {"sha": "dbb9180ed7d2f6c71d293be7109fd8bba63ec36e", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.stderr?ref=71e33146734362984258df415ac8308618968ed4", "patch": "@@ -77,25 +77,25 @@ LL |     fn ty_multi_ref_assoc(ty_multi: &&Ty<'_>, ty_ctxt_multi: &&&&TyCtxt<'_>\n    |                                                                 ^^^^^^^^^^^ help: try passing by value: `TyCtxt<'_>`\n \n error: passing `CustomEnum` by reference\n-  --> $DIR/rustc_pass_by_value.rs:75:20\n+  --> $DIR/rustc_pass_by_value.rs:74:20\n    |\n LL |         reference: &CustomEnum,\n    |                    ^^^^^^^^^^^ help: try passing by value: `CustomEnum`\n \n error: passing `CustomStruct` by reference\n-  --> $DIR/rustc_pass_by_value.rs:88:24\n+  --> $DIR/rustc_pass_by_value.rs:85:24\n    |\n LL | type CustomAlias<'a> = &'a CustomStruct;\n    |                        ^^^^^^^^^^^^^^^^ help: try passing by value: `CustomStruct`\n \n error: passing `CustomStruct` by reference\n-  --> $DIR/rustc_pass_by_value.rs:93:20\n+  --> $DIR/rustc_pass_by_value.rs:90:20\n    |\n LL |         reference: &CustomStruct,\n    |                    ^^^^^^^^^^^^^ help: try passing by value: `CustomStruct`\n \n error: passing `CustomAlias<>` by reference\n-  --> $DIR/rustc_pass_by_value.rs:99:20\n+  --> $DIR/rustc_pass_by_value.rs:96:20\n    |\n LL |         reference: &CustomAlias,\n    |                    ^^^^^^^^^^^^ help: try passing by value: `CustomAlias<>`"}, {"sha": "a4529f9856368a8d87cc30e7aa83eede4e106668", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value_self.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.rs?ref=71e33146734362984258df415ac8308618968ed4", "patch": "@@ -8,7 +8,6 @@\n #![deny(rustc::pass_by_value)]\n #![allow(unused)]\n \n-#[rustc_diagnostic_item = \"TyCtxt\"]\n #[rustc_pass_by_value]\n struct TyCtxt<'tcx> {\n     inner: &'tcx (),\n@@ -23,7 +22,6 @@ struct TyS<'tcx> {\n     inner: &'tcx (),\n }\n \n-#[rustc_diagnostic_item = \"Ty\"]\n #[rustc_pass_by_value]\n type Ty<'tcx> = &'tcx TyS<'tcx>;\n "}, {"sha": "ca47babd13d8a893e117b0ec24511cd8061652ae", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value_self.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/71e33146734362984258df415ac8308618968ed4/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.stderr?ref=71e33146734362984258df415ac8308618968ed4", "patch": "@@ -1,5 +1,5 @@\n error: passing `TyCtxt<'tcx>` by reference\n-  --> $DIR/rustc_pass_by_value_self.rs:19:15\n+  --> $DIR/rustc_pass_by_value_self.rs:18:15\n    |\n LL |     fn by_ref(&self) {}\n    |               ^^^^^ help: try passing by value: `TyCtxt<'tcx>`\n@@ -11,7 +11,7 @@ LL | #![deny(rustc::pass_by_value)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: passing `Ty<'tcx>` by reference\n-  --> $DIR/rustc_pass_by_value_self.rs:32:21\n+  --> $DIR/rustc_pass_by_value_self.rs:30:21\n    |\n LL |     fn by_ref(self: &Ty<'tcx>) {}\n    |                     ^^^^^^^^^ help: try passing by value: `Ty<'tcx>`"}]}