{"sha": "a8f7ec2c48326d6c018d79d444ac00012624e279", "node_id": "C_kwDOAAsO6NoAKGE4ZjdlYzJjNDgzMjZkNmMwMThkNzlkNDQ0YWMwMDAxMjYyNGUyNzk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-01-06T06:08:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-06T06:08:57Z"}, "message": "Rollup merge of #106499 - lyming2007:issue-105946-fix, r=estebank\n\nfix [type error] for error E0029 and E0277\n\ncheck explicitly for the type references error\nif ty.references_error() is true change the error to be err.delay_as_bug() and prevent the error E0029 and E0277 from emitting out this fix #105946", "tree": {"sha": "a28469a22dc788f13458876a47105a4f7051015c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a28469a22dc788f13458876a47105a4f7051015c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8f7ec2c48326d6c018d79d444ac00012624e279", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjt7r5CRBK7hj4Ov3rIwAA620IAKH2eON60bpnWAjsErWG62eb\nGK6+q9i/wDNLqNxZf89/+dahid/goEIwr1Rbh/nDVfA385fEU5Rn5qRAr1AxkXDc\n+/XhvB+ZuSvt62X8EftMdRpvi8+0N9o+uRczs6cCP7ZINobGJFAvG0rNc20TSiiT\nXvrPOofh/wwSMP9Ze4McLEU+QckmXKyEbUs2IxMlb/HQnyNR8zoxISUEq3NnCYki\ngKLkpeN2986hhJoecXLkE3t7oSovRB75E0prATKBv1miF3e32xA6TNmUkwogr4l3\nAW16Zw3C2kYAnaPVGb/LumxZTVi5v/FIEnKc1+cZbrJ04Vpw1unF3/KKdJE46xU=\n=molE\n-----END PGP SIGNATURE-----\n", "payload": "tree a28469a22dc788f13458876a47105a4f7051015c\nparent 4b094c5933b6aad94db93b65e1f6e35564270258\nparent 10dbcf063033eb842a80ff386e268f8448ccf1ed\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1672985337 +0530\ncommitter GitHub <noreply@github.com> 1672985337 +0530\n\nRollup merge of #106499 - lyming2007:issue-105946-fix, r=estebank\n\nfix [type error] for error E0029 and E0277\n\ncheck explicitly for the type references error\nif ty.references_error() is true change the error to be err.delay_as_bug() and prevent the error E0029 and E0277 from emitting out this fix #105946\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f7ec2c48326d6c018d79d444ac00012624e279", "html_url": "https://github.com/rust-lang/rust/commit/a8f7ec2c48326d6c018d79d444ac00012624e279", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8f7ec2c48326d6c018d79d444ac00012624e279/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b094c5933b6aad94db93b65e1f6e35564270258", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b094c5933b6aad94db93b65e1f6e35564270258", "html_url": "https://github.com/rust-lang/rust/commit/4b094c5933b6aad94db93b65e1f6e35564270258"}, {"sha": "10dbcf063033eb842a80ff386e268f8448ccf1ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/10dbcf063033eb842a80ff386e268f8448ccf1ed", "html_url": "https://github.com/rust-lang/rust/commit/10dbcf063033eb842a80ff386e268f8448ccf1ed"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "e0304fa2d3b98b017f04ca6927c86e06d40639d7", "filename": "compiler/rustc_hir_typeck/src/pat.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8f7ec2c48326d6c018d79d444ac00012624e279/compiler%2Frustc_hir_typeck%2Fsrc%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f7ec2c48326d6c018d79d444ac00012624e279/compiler%2Frustc_hir_typeck%2Fsrc%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fpat.rs?ref=a8f7ec2c48326d6c018d79d444ac00012624e279", "patch": "@@ -553,6 +553,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             (lhs, Some((true, rhs_ty, rhs_sp))) => one_side_err(rhs_sp, rhs_ty, lhs),\n             _ => span_bug!(span, \"Impossible, verified above.\"),\n         }\n+        if (lhs, rhs).references_error() {\n+            err.downgrade_to_delayed_bug();\n+        }\n         if self.tcx.sess.teach(&err.get_code().unwrap()) {\n             err.note(\n                 \"In a match expression, only numbers and characters can be matched \\"}, {"sha": "1d39cf60e2616c61afeee225c167c1f6ebe0ecb6", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8f7ec2c48326d6c018d79d444ac00012624e279/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f7ec2c48326d6c018d79d444ac00012624e279/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=a8f7ec2c48326d6c018d79d444ac00012624e279", "patch": "@@ -1407,7 +1407,6 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n \n         self.note_obligation_cause(&mut err, &obligation);\n         self.point_at_returns_when_relevant(&mut err, &obligation);\n-\n         err.emit();\n     }\n }"}, {"sha": "aa98ab801587b3b98d220bdbbef7f6b3db10d999", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a8f7ec2c48326d6c018d79d444ac00012624e279/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f7ec2c48326d6c018d79d444ac00012624e279/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=a8f7ec2c48326d6c018d79d444ac00012624e279", "patch": "@@ -248,7 +248,7 @@ pub trait TypeErrCtxtExt<'tcx> {\n \n     fn point_at_returns_when_relevant(\n         &self,\n-        err: &mut Diagnostic,\n+        err: &mut DiagnosticBuilder<'tcx, ErrorGuaranteed>,\n         obligation: &PredicateObligation<'tcx>,\n     );\n \n@@ -1685,7 +1685,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n \n     fn point_at_returns_when_relevant(\n         &self,\n-        err: &mut Diagnostic,\n+        err: &mut DiagnosticBuilder<'tcx, ErrorGuaranteed>,\n         obligation: &PredicateObligation<'tcx>,\n     ) {\n         match obligation.cause.code().peel_derives() {\n@@ -1707,7 +1707,15 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             for expr in &visitor.returns {\n                 if let Some(returned_ty) = typeck_results.node_type_opt(expr.hir_id) {\n                     let ty = self.resolve_vars_if_possible(returned_ty);\n-                    err.span_label(expr.span, &format!(\"this returned value is of type `{}`\", ty));\n+                    if ty.references_error() {\n+                        // don't print out the [type error] here\n+                        err.delay_as_bug();\n+                    } else {\n+                        err.span_label(\n+                            expr.span,\n+                            &format!(\"this returned value is of type `{}`\", ty),\n+                        );\n+                    }\n                 }\n             }\n         }"}, {"sha": "bf01751d5f6eeefb65e3e87765304c878d549783", "filename": "src/test/ui/typeck/issue-105946.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a8f7ec2c48326d6c018d79d444ac00012624e279/src%2Ftest%2Fui%2Ftypeck%2Fissue-105946.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f7ec2c48326d6c018d79d444ac00012624e279/src%2Ftest%2Fui%2Ftypeck%2Fissue-105946.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-105946.rs?ref=a8f7ec2c48326d6c018d79d444ac00012624e279", "patch": "@@ -0,0 +1,12 @@\n+fn digit() -> str {\n+  return {};\n+  //~^ ERROR: mismatched types [E0308]\n+}\n+fn main() {\n+    let [_y..] = [box 1, box 2];\n+    //~^ ERROR: cannot find value `_y` in this scope [E0425]\n+    //~| ERROR: `X..` patterns in slices are experimental [E0658]\n+    //~| ERROR: box expression syntax is experimental; you can call `Box::new` instead [E0658]\n+    //~| ERROR: box expression syntax is experimental; you can call `Box::new` instead [E0658]\n+    //~| ERROR: pattern requires 1 element but array has 2 [E0527]\n+}"}, {"sha": "d803de4df47276ebdd70a8f345d7eb0f075b51cd", "filename": "src/test/ui/typeck/issue-105946.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/a8f7ec2c48326d6c018d79d444ac00012624e279/src%2Ftest%2Fui%2Ftypeck%2Fissue-105946.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8f7ec2c48326d6c018d79d444ac00012624e279/src%2Ftest%2Fui%2Ftypeck%2Fissue-105946.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-105946.stderr?ref=a8f7ec2c48326d6c018d79d444ac00012624e279", "patch": "@@ -0,0 +1,49 @@\n+error[E0425]: cannot find value `_y` in this scope\n+  --> $DIR/issue-105946.rs:6:10\n+   |\n+LL |     let [_y..] = [box 1, box 2];\n+   |          ^^ not found in this scope\n+\n+error[E0658]: `X..` patterns in slices are experimental\n+  --> $DIR/issue-105946.rs:6:10\n+   |\n+LL |     let [_y..] = [box 1, box 2];\n+   |          ^^^^\n+   |\n+   = note: see issue #67264 <https://github.com/rust-lang/rust/issues/67264> for more information\n+   = help: add `#![feature(half_open_range_patterns_in_slices)]` to the crate attributes to enable\n+\n+error[E0658]: box expression syntax is experimental; you can call `Box::new` instead\n+  --> $DIR/issue-105946.rs:6:19\n+   |\n+LL |     let [_y..] = [box 1, box 2];\n+   |                   ^^^^^\n+   |\n+   = note: see issue #49733 <https://github.com/rust-lang/rust/issues/49733> for more information\n+   = help: add `#![feature(box_syntax)]` to the crate attributes to enable\n+\n+error[E0658]: box expression syntax is experimental; you can call `Box::new` instead\n+  --> $DIR/issue-105946.rs:6:26\n+   |\n+LL |     let [_y..] = [box 1, box 2];\n+   |                          ^^^^^\n+   |\n+   = note: see issue #49733 <https://github.com/rust-lang/rust/issues/49733> for more information\n+   = help: add `#![feature(box_syntax)]` to the crate attributes to enable\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-105946.rs:2:10\n+   |\n+LL |   return {};\n+   |          ^^ expected `str`, found `()`\n+\n+error[E0527]: pattern requires 1 element but array has 2\n+  --> $DIR/issue-105946.rs:6:9\n+   |\n+LL |     let [_y..] = [box 1, box 2];\n+   |         ^^^^^^ expected 2 elements\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors have detailed explanations: E0308, E0425, E0527, E0658.\n+For more information about an error, try `rustc --explain E0308`."}]}