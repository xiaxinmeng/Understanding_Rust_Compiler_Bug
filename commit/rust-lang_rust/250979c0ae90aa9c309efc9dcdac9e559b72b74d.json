{"sha": "250979c0ae90aa9c309efc9dcdac9e559b72b74d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MDk3OWMwYWU5MGFhOWMzMDllZmM5ZGNkYWM5ZTU1OWI3MmI3NGQ=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-09-11T14:31:48Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-24T12:59:07Z"}, "message": "Implement vtable shim generation.", "tree": {"sha": "d4a1e0e19011d49ef8be2930466fc0d2bec18be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4a1e0e19011d49ef8be2930466fc0d2bec18be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/250979c0ae90aa9c309efc9dcdac9e559b72b74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/250979c0ae90aa9c309efc9dcdac9e559b72b74d", "html_url": "https://github.com/rust-lang/rust/commit/250979c0ae90aa9c309efc9dcdac9e559b72b74d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/250979c0ae90aa9c309efc9dcdac9e559b72b74d/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fb085511e61c3d97f020c9d8d28e567f7cb1694", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb085511e61c3d97f020c9d8d28e567f7cb1694", "html_url": "https://github.com/rust-lang/rust/commit/1fb085511e61c3d97f020c9d8d28e567f7cb1694"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "4618c44cdde2aa7608a422b41fece880ef28f08b", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/250979c0ae90aa9c309efc9dcdac9e559b72b74d/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250979c0ae90aa9c309efc9dcdac9e559b72b74d/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=250979c0ae90aa9c309efc9dcdac9e559b72b74d", "patch": "@@ -43,8 +43,14 @@ fn make_shim<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let mut result = match instance {\n         ty::InstanceDef::Item(..) =>\n             bug!(\"item {:?} passed to make_shim\", instance),\n-        ty::InstanceDef::VtableShim(..) => {\n-            unimplemented!(\"make_shim({:?})\", instance);\n+        ty::InstanceDef::VtableShim(def_id) => {\n+            build_call_shim(\n+                tcx,\n+                def_id,\n+                Adjustment::DerefMove,\n+                CallKind::Direct(def_id),\n+                None,\n+            )\n         }\n         ty::InstanceDef::FnPtrShim(def_id, ty) => {\n             let trait_ = tcx.trait_of_item(def_id).unwrap();\n@@ -131,6 +137,7 @@ fn make_shim<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n enum Adjustment {\n     Identity,\n     Deref,\n+    DerefMove,\n     RefMut,\n }\n \n@@ -704,6 +711,14 @@ fn build_call_shim<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let rcvr = match rcvr_adjustment {\n         Adjustment::Identity => Operand::Move(rcvr_l),\n         Adjustment::Deref => Operand::Copy(rcvr_l.deref()),\n+        Adjustment::DerefMove => {\n+            // fn(Self, ...) -> fn(*mut Self, ...)\n+            let arg_ty = local_decls[rcvr_arg].ty;\n+            assert!(arg_ty.is_self());\n+            local_decls[rcvr_arg].ty = tcx.mk_mut_ptr(arg_ty);\n+\n+            Operand::Copy(rcvr_l.deref())\n+        }\n         Adjustment::RefMut => {\n             // let rcvr = &mut rcvr;\n             let ref_rcvr = local_decls.push(temp_decl("}]}