{"sha": "e30dd07139aa5bda7d690b20e9336edae3f42e4f", "node_id": "C_kwDOAAsO6NoAKGUzMGRkMDcxMzlhYTViZGE3ZDY5MGIyMGU5MzM2ZWRhZTNmNDJlNGY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-18T01:51:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-18T02:31:38Z"}, "message": "libc test: also call isatty on an actual file", "tree": {"sha": "6b563204fcdf34a09580871f2bd9ee34ffeecab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b563204fcdf34a09580871f2bd9ee34ffeecab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e30dd07139aa5bda7d690b20e9336edae3f42e4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e30dd07139aa5bda7d690b20e9336edae3f42e4f", "html_url": "https://github.com/rust-lang/rust/commit/e30dd07139aa5bda7d690b20e9336edae3f42e4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e30dd07139aa5bda7d690b20e9336edae3f42e4f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "896f558f2b8e0bd29cc08f5af5e0edfe07783042", "url": "https://api.github.com/repos/rust-lang/rust/commits/896f558f2b8e0bd29cc08f5af5e0edfe07783042", "html_url": "https://github.com/rust-lang/rust/commit/896f558f2b8e0bd29cc08f5af5e0edfe07783042"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "ea3848a9749a74b80cb48499e5c0a14969894608", "filename": "tests/pass/libc.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e30dd07139aa5bda7d690b20e9336edae3f42e4f/tests%2Fpass%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30dd07139aa5bda7d690b20e9336edae3f42e4f/tests%2Fpass%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Flibc.rs?ref=e30dd07139aa5bda7d690b20e9336edae3f42e4f", "patch": "@@ -1,11 +1,12 @@\n //@ignore-windows: No libc on Windows\n //@compile-flags: -Zmiri-disable-isolation\n-\n #![feature(rustc_private)]\n \n+use std::fs::{remove_file, File};\n+use std::os::unix::io::AsRawFd;\n+\n extern crate libc;\n \n-#[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n fn tmp() -> std::path::PathBuf {\n     std::env::var(\"MIRI_TEMP\")\n         .map(std::path::PathBuf::from)\n@@ -15,9 +16,7 @@ fn tmp() -> std::path::PathBuf {\n #[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n fn test_posix_fadvise() {\n     use std::convert::TryInto;\n-    use std::fs::{remove_file, File};\n     use std::io::Write;\n-    use std::os::unix::io::AsRawFd;\n \n     let path = tmp().join(\"miri_test_libc_posix_fadvise.txt\");\n     // Cleanup before test\n@@ -44,9 +43,7 @@ fn test_posix_fadvise() {\n \n #[cfg(any(target_os = \"linux\"))]\n fn test_sync_file_range() {\n-    use std::fs::{remove_file, File};\n     use std::io::Write;\n-    use std::os::unix::io::AsRawFd;\n \n     let path = tmp().join(\"miri_test_libc_sync_file_range.txt\");\n     // Cleanup before test.\n@@ -319,6 +316,19 @@ fn test_isatty() {\n         libc::isatty(libc::STDIN_FILENO);\n         libc::isatty(libc::STDOUT_FILENO);\n         libc::isatty(libc::STDERR_FILENO);\n+\n+        // But when we open a file, it is definitely not a TTY.\n+        let path = tmp().join(\"notatty.txt\");\n+        // Cleanup before test.\n+        remove_file(&path).ok();\n+        let file = File::create(&path).unwrap();\n+\n+        assert_eq!(libc::isatty(file.as_raw_fd()), 0);\n+        assert_eq!(std::io::Error::last_os_error().raw_os_error().unwrap(), libc::ENOTTY);\n+\n+        // Cleanup after test.\n+        drop(file);\n+        remove_file(&path).unwrap();\n     }\n }\n "}]}