{"sha": "92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "node_id": "C_kwDOAAsO6NoAKDkyZDY4MDU4OWMxZTdjOWEyMWE3ZTMxY2U5OGI3YTdmMDliY2M2NWY", "commit": {"author": {"name": "Milan Landaverde", "email": "milanlandaverde@gmail.com", "date": "2021-05-21T18:47:17Z"}, "committer": {"name": "Milan", "email": "milanlandaverde@gmail.com", "date": "2021-10-10T18:01:09Z"}, "message": "cross-platform doctests", "tree": {"sha": "aa8dea22b613ee609bf3e647d297628f228c72aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa8dea22b613ee609bf3e647d297628f228c72aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "html_url": "https://github.com/rust-lang/rust/commit/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/comments", "author": {"login": "mdaverde", "id": 1067001, "node_id": "MDQ6VXNlcjEwNjcwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1067001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdaverde", "html_url": "https://github.com/mdaverde", "followers_url": "https://api.github.com/users/mdaverde/followers", "following_url": "https://api.github.com/users/mdaverde/following{/other_user}", "gists_url": "https://api.github.com/users/mdaverde/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdaverde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdaverde/subscriptions", "organizations_url": "https://api.github.com/users/mdaverde/orgs", "repos_url": "https://api.github.com/users/mdaverde/repos", "events_url": "https://api.github.com/users/mdaverde/events{/privacy}", "received_events_url": "https://api.github.com/users/mdaverde/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdaverde", "id": 1067001, "node_id": "MDQ6VXNlcjEwNjcwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1067001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdaverde", "html_url": "https://github.com/mdaverde", "followers_url": "https://api.github.com/users/mdaverde/followers", "following_url": "https://api.github.com/users/mdaverde/following{/other_user}", "gists_url": "https://api.github.com/users/mdaverde/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdaverde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdaverde/subscriptions", "organizations_url": "https://api.github.com/users/mdaverde/orgs", "repos_url": "https://api.github.com/users/mdaverde/repos", "events_url": "https://api.github.com/users/mdaverde/events{/privacy}", "received_events_url": "https://api.github.com/users/mdaverde/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68a8d987069227c7aab32b088e163195af142e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68a8d987069227c7aab32b088e163195af142e4", "html_url": "https://github.com/rust-lang/rust/commit/d68a8d987069227c7aab32b088e163195af142e4"}], "stats": {"total": 62, "additions": 49, "deletions": 13}, "files": [{"sha": "fd8d1d7acf8c4f70b1b6d30562ea7f1dfb543337", "filename": "library/std/src/os/unix/net/addr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs?ref=92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "patch": "@@ -214,6 +214,7 @@ impl SocketAddr {\n     ///     Ok(())\n     /// }\n     /// ```\n+    #[doc(cfg(any(target_os = \"android\", target_os = \"linux\")))]\n     #[cfg(any(doc, target_os = \"android\", target_os = \"linux\",))]\n     #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n     pub fn as_abstract_namespace(&self) -> Option<&[u8]> {\n@@ -271,6 +272,7 @@ impl SocketAddr {\n     ///     Ok(())\n     /// }\n     /// ```\n+    #[doc(cfg(any(target_os = \"android\", target_os = \"linux\")))]\n     #[cfg(any(doc, target_os = \"android\", target_os = \"linux\",))]\n     #[unstable(feature = \"unix_socket_abstract\", issue = \"85410\")]\n     pub fn from_abstract_namespace(namespace: &[u8]) -> io::Result<SocketAddr> {"}, {"sha": "87be4d3f57a84ac10b4485d7b6b40bd9b6129f2e", "filename": "library/std/src/os/unix/net/datagram.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs?ref=92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "patch": "@@ -118,11 +118,13 @@ impl UnixDatagram {\n     ///\n     /// ```no_run\n     /// #![feature(unix_socket_abstract)]\n-    /// use std::os::unix::net::{UnixDatagram, SocketAddr};\n+    /// use std::os::unix::net::{UnixDatagram};\n     ///\n     /// fn main() -> std::io::Result<()> {\n-    ///     let addr = SocketAddr::from_abstract_namespace(b\"hidden\")?; // Linux only\n-    ///     let sock = match UnixDatagram::bind_addr(&addr) {\n+    ///     let sock1 = UnixDatagram::bind(\"path/to/socket\")?;\n+    ///     let addr = sock1.local_addr()?;\n+    ///\n+    ///     let sock2 = match UnixDatagram::bind_addr(&addr) {\n     ///         Ok(sock) => sock,\n     ///         Err(err) => {\n     ///             println!(\"Couldn't bind: {:?}\", err);\n@@ -231,10 +233,12 @@ impl UnixDatagram {\n     ///\n     /// ```no_run\n     /// #![feature(unix_socket_abstract)]\n-    /// use std::os::unix::net::{UnixDatagram, SocketAddr};\n+    /// use std::os::unix::net::{UnixDatagram};\n     ///\n     /// fn main() -> std::io::Result<()> {\n-    ///     let addr = SocketAddr::from_abstract_namespace(b\"hidden\")?; // Linux only\n+    ///     let bound = UnixDatagram::bind(\"/path/to/socket\")?;\n+    ///     let addr = bound.local_addr()?;\n+    ///\n     ///     let sock = UnixDatagram::unbound()?;\n     ///     match sock.connect_addr(&addr) {\n     ///         Ok(sock) => sock,\n@@ -549,10 +553,12 @@ impl UnixDatagram {\n     ///\n     /// ```no_run\n     /// #![feature(unix_socket_abstract)]\n-    /// use std::os::unix::net::{UnixDatagram, SocketAddr};\n+    /// use std::os::unix::net::{UnixDatagram};\n     ///\n     /// fn main() -> std::io::Result<()> {\n-    ///     let addr = SocketAddr::from_abstract_namespace(b\"hidden\")?;\n+    ///     let bound = UnixDatagram::bind(\"/path/to/socket\")?;\n+    ///     let addr = bound.local_addr()?;\n+    ///\n     ///     let sock = UnixDatagram::unbound()?;\n     ///     sock.send_to_addr(b\"bacon egg and cheese\", &addr).expect(\"send_to_addr function failed\");\n     ///     Ok(())"}, {"sha": "7fba7543ec297037807b32b202f30c50c4f21dd2", "filename": "library/std/src/os/unix/net/listener.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs?ref=92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "patch": "@@ -89,11 +89,13 @@ impl UnixListener {\n     ///\n     /// ```no_run\n     /// #![feature(unix_socket_abstract)]\n-    /// use std::os::unix::net::{UnixListener, SocketAddr};\n+    /// use std::os::unix::net::{UnixListener};\n     ///\n     /// fn main() -> std::io::Result<()> {\n-    ///     let addr = SocketAddr::from_abstract_namespace(b\"namespace\")?; // Linux only\n-    ///     let listener = match UnixListener::bind_addr(&addr) {\n+    ///     let listener1 = UnixListener::bind(\"path/to/socket\")?;\n+    ///     let addr = listener1.local_addr()?;\n+    ///\n+    ///     let listener2 = match UnixListener::bind_addr(&addr) {\n     ///         Ok(sock) => sock,\n     ///         Err(err) => {\n     ///             println!(\"Couldn't bind: {:?}\", err);"}, {"sha": "e3eef7c7614878bdf02d01086d39bef07073253b", "filename": "library/std/src/os/unix/net/stream.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs?ref=92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "patch": "@@ -114,11 +114,13 @@ impl UnixStream {\n     ///\n     /// ```no_run\n     /// #![feature(unix_socket_abstract)]\n-    /// use std::os::unix::net::{UnixStream, SocketAddr};\n+    /// use std::os::unix::net::{UnixListener, UnixStream};\n     ///\n     /// fn main() -> std::io::Result<()> {\n-    ///     let addr = SocketAddr::from_abstract_namespace(b\"hidden\")?; // Linux only\n-    ///     match UnixStream::connect_addr(&addr) {\n+    ///     let listener = UnixListener::bind(\"/path/to/the/socket\")?;\n+    ///     let addr = listener.local_addr()?;\n+    ///\n+    ///     let sock = match UnixStream::connect_addr(&addr) {\n     ///         Ok(sock) => sock,\n     ///         Err(e) => {\n     ///             println!(\"Couldn't connect: {:?}\", e);"}, {"sha": "7ad4a02611e0726a05f889affb57cbd2230ee5e6", "filename": "library/std/src/os/unix/net/tests.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Ftests.rs?ref=92d680589c1e7c9a21a7e31ce98b7a7f09bcc65f", "patch": "@@ -303,6 +303,30 @@ fn test_unnamed_unix_datagram() {\n     assert_eq!(msg, &buf[..]);\n }\n \n+#[test]\n+fn test_unix_datagram_connect_to_recv_addr() {\n+    let dir = tmpdir();\n+    let path1 = dir.path().join(\"sock1\");\n+    let path2 = dir.path().join(\"sock2\");\n+\n+    let sock1 = or_panic!(UnixDatagram::bind(&path1));\n+    let sock2 = or_panic!(UnixDatagram::bind(&path2));\n+\n+    let msg = b\"hello world\";\n+    let sock1_addr = or_panic!(sock1.local_addr());\n+    or_panic!(sock2.send_to_addr(msg, &sock1_addr));\n+    let mut buf = [0; 11];\n+    let (_, addr) = or_panic!(sock1.recv_from(&mut buf));\n+\n+    let new_msg = b\"hello back\";\n+    let mut new_buf = [0; 10];\n+    or_panic!(sock2.connect_addr(&addr));\n+    or_panic!(sock2.send(new_msg)); // set by connect_addr\n+    let usize = or_panic!(sock2.recv(&mut new_buf));\n+    assert_eq!(usize, 10);\n+    assert_eq!(new_msg, &new_buf[..]);\n+}\n+\n #[test]\n fn test_connect_unix_datagram() {\n     let dir = tmpdir();"}]}