{"sha": "826a8930e648b88484b15b9b568ebd5464c25dec", "node_id": "C_kwDOAAsO6NoAKDgyNmE4OTMwZTY0OGI4ODQ4NGIxNWI5YjU2OGViZDU0NjRjMjVkZWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-13T23:45:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-13T23:45:29Z"}, "message": "Auto merge of #9467 - pyhrr0:macro_expansion, r=giraffate\n\nFix `almost_complete_letter_range` false positive.\n\nchangelog: Fix [`almost_complete_letter_range`] false positive in an external macro", "tree": {"sha": "2acbd585f52d9c7a6559e75b728f5ccc97d24a96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2acbd585f52d9c7a6559e75b728f5ccc97d24a96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/826a8930e648b88484b15b9b568ebd5464c25dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/826a8930e648b88484b15b9b568ebd5464c25dec", "html_url": "https://github.com/rust-lang/rust/commit/826a8930e648b88484b15b9b568ebd5464c25dec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/826a8930e648b88484b15b9b568ebd5464c25dec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6466258f7f197d09119fb9211dc08e6558620144", "url": "https://api.github.com/repos/rust-lang/rust/commits/6466258f7f197d09119fb9211dc08e6558620144", "html_url": "https://github.com/rust-lang/rust/commit/6466258f7f197d09119fb9211dc08e6558620144"}, {"sha": "69c7d2cca29f6810744714bbd2c15cbe166c0741", "url": "https://api.github.com/repos/rust-lang/rust/commits/69c7d2cca29f6810744714bbd2c15cbe166c0741", "html_url": "https://github.com/rust-lang/rust/commit/69c7d2cca29f6810744714bbd2c15cbe166c0741"}], "stats": {"total": 74, "additions": 61, "deletions": 13}, "files": [{"sha": "073e4af1318e35044fb1d228ab6ae4e4e5ee7063", "filename": "clippy_lints/src/almost_complete_letter_range.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/826a8930e648b88484b15b9b568ebd5464c25dec/clippy_lints%2Fsrc%2Falmost_complete_letter_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/826a8930e648b88484b15b9b568ebd5464c25dec/clippy_lints%2Fsrc%2Falmost_complete_letter_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Falmost_complete_letter_range.rs?ref=826a8930e648b88484b15b9b568ebd5464c25dec", "patch": "@@ -4,6 +4,7 @@ use clippy_utils::{meets_msrv, msrvs};\n use rustc_ast::ast::{Expr, ExprKind, LitKind, Pat, PatKind, RangeEnd, RangeLimits};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n@@ -79,6 +80,7 @@ fn check_range(cx: &EarlyContext<'_>, span: Span, start: &Expr, end: &Expr, sugg\n             (LitKind::Byte(b'a') | LitKind::Char('a'), LitKind::Byte(b'z') | LitKind::Char('z'))\n             | (LitKind::Byte(b'A') | LitKind::Char('A'), LitKind::Byte(b'Z') | LitKind::Char('Z'))\n         )\n+        && !in_external_macro(cx.sess(), span)\n     {\n         span_lint_and_then(\n             cx,"}, {"sha": "079b7c000dce1e7f953418a356fe2f538d44ad61", "filename": "tests/ui/almost_complete_letter_range.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Falmost_complete_letter_range.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Falmost_complete_letter_range.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.fixed?ref=826a8930e648b88484b15b9b568ebd5464c25dec", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n // edition:2018\n+// aux-build:macro_rules.rs\n \n #![feature(custom_inner_attributes)]\n #![feature(exclusive_range_pattern)]\n@@ -8,12 +9,21 @@\n #![allow(ellipsis_inclusive_range_patterns)]\n #![allow(clippy::needless_parens_on_range_literals)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n macro_rules! a {\n     () => {\n         'a'\n     };\n }\n \n+macro_rules! b {\n+    () => {\n+        let _ = 'a'..='z';\n+    };\n+}\n+\n fn main() {\n     #[rustfmt::skip]\n     {\n@@ -47,6 +57,9 @@ fn main() {\n         'B'..'Z' => 4,\n         _ => 5,\n     };\n+\n+    almost_complete_letter_range!();\n+    b!();\n }\n \n fn _under_msrv() {"}, {"sha": "a66900a976efa92d549a8a194c78d3e376a98cdb", "filename": "tests/ui/almost_complete_letter_range.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Falmost_complete_letter_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Falmost_complete_letter_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.rs?ref=826a8930e648b88484b15b9b568ebd5464c25dec", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n // edition:2018\n+// aux-build:macro_rules.rs\n \n #![feature(custom_inner_attributes)]\n #![feature(exclusive_range_pattern)]\n@@ -8,12 +9,21 @@\n #![allow(ellipsis_inclusive_range_patterns)]\n #![allow(clippy::needless_parens_on_range_literals)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n macro_rules! a {\n     () => {\n         'a'\n     };\n }\n \n+macro_rules! b {\n+    () => {\n+        let _ = 'a'..'z';\n+    };\n+}\n+\n fn main() {\n     #[rustfmt::skip]\n     {\n@@ -47,6 +57,9 @@ fn main() {\n         'B'..'Z' => 4,\n         _ => 5,\n     };\n+\n+    almost_complete_letter_range!();\n+    b!();\n }\n \n fn _under_msrv() {"}, {"sha": "3de44c72c1b9d35ad50773e16b143200162da5dd", "filename": "tests/ui/almost_complete_letter_range.stderr", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Falmost_complete_letter_range.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Falmost_complete_letter_range.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.stderr?ref=826a8930e648b88484b15b9b568ebd5464c25dec", "patch": "@@ -1,5 +1,5 @@\n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:20:17\n+  --> $DIR/almost_complete_letter_range.rs:30:17\n    |\n LL |         let _ = ('a') ..'z';\n    |                 ^^^^^^--^^^\n@@ -9,92 +9,105 @@ LL |         let _ = ('a') ..'z';\n    = note: `-D clippy::almost-complete-letter-range` implied by `-D warnings`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:21:17\n+  --> $DIR/almost_complete_letter_range.rs:31:17\n    |\n LL |         let _ = 'A' .. ('Z');\n    |                 ^^^^--^^^^^^\n    |                     |\n    |                     help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:27:13\n+  --> $DIR/almost_complete_letter_range.rs:37:13\n    |\n LL |     let _ = (b'a')..(b'z');\n    |             ^^^^^^--^^^^^^\n    |                   |\n    |                   help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:28:13\n+  --> $DIR/almost_complete_letter_range.rs:38:13\n    |\n LL |     let _ = b'A'..b'Z';\n    |             ^^^^--^^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:33:13\n+  --> $DIR/almost_complete_letter_range.rs:43:13\n    |\n LL |     let _ = a!()..'z';\n    |             ^^^^--^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:36:9\n+  --> $DIR/almost_complete_letter_range.rs:46:9\n    |\n LL |         b'a'..b'z' if true => 1,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:37:9\n+  --> $DIR/almost_complete_letter_range.rs:47:9\n    |\n LL |         b'A'..b'Z' if true => 2,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:44:9\n+  --> $DIR/almost_complete_letter_range.rs:54:9\n    |\n LL |         'a'..'z' if true => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:45:9\n+  --> $DIR/almost_complete_letter_range.rs:55:9\n    |\n LL |         'A'..'Z' if true => 2,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:55:9\n+  --> $DIR/almost_complete_letter_range.rs:23:17\n+   |\n+LL |         let _ = 'a'..'z';\n+   |                 ^^^--^^^\n+   |                    |\n+   |                    help: use an inclusive range: `..=`\n+...\n+LL |     b!();\n+   |     ---- in this macro invocation\n+   |\n+   = note: this error originates in the macro `b` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: almost complete ascii letter range\n+  --> $DIR/almost_complete_letter_range.rs:68:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `...`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:62:13\n+  --> $DIR/almost_complete_letter_range.rs:75:13\n    |\n LL |     let _ = 'a'..'z';\n    |             ^^^--^^^\n    |                |\n    |                help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:64:9\n+  --> $DIR/almost_complete_letter_range.rs:77:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 13 previous errors\n "}, {"sha": "ef3ca9aea380c0bfba020deffb65b601f56a90b4", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/826a8930e648b88484b15b9b568ebd5464c25dec/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=826a8930e648b88484b15b9b568ebd5464c25dec", "patch": "@@ -140,3 +140,10 @@ macro_rules! manual_rem_euclid {\n macro_rules! equatable_if_let {\n     ($a:ident) => {{ if let 2 = $a {} }};\n }\n+\n+#[macro_export]\n+macro_rules! almost_complete_letter_range {\n+    () => {\n+        let _ = 'a'..'z';\n+    };\n+}"}]}