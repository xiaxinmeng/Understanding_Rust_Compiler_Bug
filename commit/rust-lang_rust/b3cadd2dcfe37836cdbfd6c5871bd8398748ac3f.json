{"sha": "b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "node_id": "C_kwDOAAsO6NoAKGIzY2FkZDJkY2ZlMzc4MzZjZGJmZDZjNTg3MWJkODM5ODc0OGFjM2Y", "commit": {"author": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2022-09-24T12:54:47Z"}, "committer": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2023-02-09T03:28:00Z"}, "message": "Allow multiple instrumentation attributes\n\nFour because that's the new reasonable maximum for XRay instrumentation\nattributes in the following commit.", "tree": {"sha": "1dd9bdfe431429a803d51fd44cc9e7b392f53533", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dd9bdfe431429a803d51fd44cc9e7b392f53533"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "html_url": "https://github.com/rust-lang/rust/commit/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f/comments", "author": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d748f085473a12fc6fdde3874a8f0f276c1657c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d748f085473a12fc6fdde3874a8f0f276c1657c6", "html_url": "https://github.com/rust-lang/rust/commit/d748f085473a12fc6fdde3874a8f0f276c1657c6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0494bd7a19be9fa8c47f1250a6fd15d40e69d65b", "filename": "compiler/rustc_codegen_llvm/src/attributes.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fattributes.rs?ref=b3cadd2dcfe37836cdbfd6c5871bd8398748ac3f", "patch": "@@ -118,7 +118,8 @@ pub fn frame_pointer_type_attr<'ll>(cx: &CodegenCx<'ll, '_>) -> Option<&'ll Attr\n \n /// Tell LLVM what instrument function to insert.\n #[inline]\n-fn instrument_function_attr<'ll>(cx: &CodegenCx<'ll, '_>) -> Option<&'ll Attribute> {\n+fn instrument_function_attr<'ll>(cx: &CodegenCx<'ll, '_>) -> SmallVec<[&'ll Attribute; 4]> {\n+    let mut attrs = SmallVec::new();\n     if cx.sess().opts.unstable_opts.instrument_mcount {\n         // Similar to `clang -pg` behavior. Handled by the\n         // `post-inline-ee-instrument` LLVM pass.\n@@ -127,14 +128,13 @@ fn instrument_function_attr<'ll>(cx: &CodegenCx<'ll, '_>) -> Option<&'ll Attribu\n         // See test/CodeGen/mcount.c in clang.\n         let mcount_name = cx.sess().target.mcount.as_ref();\n \n-        Some(llvm::CreateAttrStringValue(\n+        attrs.push(llvm::CreateAttrStringValue(\n             cx.llcx,\n             \"instrument-function-entry-inlined\",\n             &mcount_name,\n-        ))\n-    } else {\n-        None\n+        ));\n     }\n+    attrs\n }\n \n fn nojumptables_attr<'ll>(cx: &CodegenCx<'ll, '_>) -> Option<&'ll Attribute> {"}]}