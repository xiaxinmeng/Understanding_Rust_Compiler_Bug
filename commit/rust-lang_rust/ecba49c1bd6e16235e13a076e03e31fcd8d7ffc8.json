{"sha": "ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYmE0OWMxYmQ2ZTE2MjM1ZTEzYTA3NmUwM2UzMWZjZDhkN2ZmYzg=", "commit": {"author": {"name": "Yenlin Chen", "email": "3822365+hencrice@users.noreply.github.com", "date": "2020-12-23T19:10:59Z"}, "committer": {"name": "Yenlin Chen", "email": "3822365+hencrice@users.noreply.github.com", "date": "2020-12-23T19:10:59Z"}, "message": "Fixed formatting", "tree": {"sha": "9be3101d3ecb383f1b22d1c7ef62333de44f8474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9be3101d3ecb383f1b22d1c7ef62333de44f8474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8", "html_url": "https://github.com/rust-lang/rust/commit/ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8/comments", "author": {"login": "hencrice", "id": 3822365, "node_id": "MDQ6VXNlcjM4MjIzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hencrice", "html_url": "https://github.com/hencrice", "followers_url": "https://api.github.com/users/hencrice/followers", "following_url": "https://api.github.com/users/hencrice/following{/other_user}", "gists_url": "https://api.github.com/users/hencrice/gists{/gist_id}", "starred_url": "https://api.github.com/users/hencrice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hencrice/subscriptions", "organizations_url": "https://api.github.com/users/hencrice/orgs", "repos_url": "https://api.github.com/users/hencrice/repos", "events_url": "https://api.github.com/users/hencrice/events{/privacy}", "received_events_url": "https://api.github.com/users/hencrice/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hencrice", "id": 3822365, "node_id": "MDQ6VXNlcjM4MjIzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hencrice", "html_url": "https://github.com/hencrice", "followers_url": "https://api.github.com/users/hencrice/followers", "following_url": "https://api.github.com/users/hencrice/following{/other_user}", "gists_url": "https://api.github.com/users/hencrice/gists{/gist_id}", "starred_url": "https://api.github.com/users/hencrice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hencrice/subscriptions", "organizations_url": "https://api.github.com/users/hencrice/orgs", "repos_url": "https://api.github.com/users/hencrice/repos", "events_url": "https://api.github.com/users/hencrice/events{/privacy}", "received_events_url": "https://api.github.com/users/hencrice/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f459b0fea5723010bf1654d8073389fd0a0263d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f459b0fea5723010bf1654d8073389fd0a0263d1", "html_url": "https://github.com/rust-lang/rust/commit/f459b0fea5723010bf1654d8073389fd0a0263d1"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "34ec16d9f2916d24df3d03c120434756814fca3c", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=ecba49c1bd6e16235e13a076e03e31fcd8d7ffc8", "patch": "@@ -413,9 +413,7 @@ fn use_verbose(ty: &&TyS<'tcx>) -> bool {\n         ty::Int(_) | ty::Uint(_) | ty::Bool | ty::Char | ty::Float(_) => false,\n         // Unit type\n         ty::Tuple(g_args) if g_args.is_empty() => false,\n-        ty::Tuple(g_args) => g_args.iter().any(|g_arg| {\n-            use_verbose(&g_arg.expect_ty())\n-        }),\n+        ty::Tuple(g_args) => g_args.iter().any(|g_arg| use_verbose(&g_arg.expect_ty())),\n         ty::Array(ty, _) => use_verbose(ty),\n         ty::FnDef(..) => false,\n         _ => true,"}]}