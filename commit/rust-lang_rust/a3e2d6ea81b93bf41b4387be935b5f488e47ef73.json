{"sha": "a3e2d6ea81b93bf41b4387be935b5f488e47ef73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZTJkNmVhODFiOTNiZjQxYjQzODdiZTkzNWI1ZjQ4OGU0N2VmNzM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2013-04-03T00:31:42Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2013-04-03T00:31:42Z"}, "message": "Remove excess trailing whitespace.", "tree": {"sha": "f55d1a65682f0b28912ba9e6ed34806c79ccd656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f55d1a65682f0b28912ba9e6ed34806c79ccd656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3e2d6ea81b93bf41b4387be935b5f488e47ef73", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3e2d6ea81b93bf41b4387be935b5f488e47ef73", "html_url": "https://github.com/rust-lang/rust/commit/a3e2d6ea81b93bf41b4387be935b5f488e47ef73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3e2d6ea81b93bf41b4387be935b5f488e47ef73/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "948ff6056f9f4c2fe312da98456d3d6b7d1ce699", "url": "https://api.github.com/repos/rust-lang/rust/commits/948ff6056f9f4c2fe312da98456d3d6b7d1ce699", "html_url": "https://github.com/rust-lang/rust/commit/948ff6056f9f4c2fe312da98456d3d6b7d1ce699"}], "stats": {"total": 122, "additions": 61, "deletions": 61}, "files": [{"sha": "c49117fe23d4810e4582118e8892750b581f1d92", "filename": "src/libcore/io.rs", "status": "modified", "additions": 61, "deletions": 61, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/a3e2d6ea81b93bf41b4387be935b5f488e47ef73/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3e2d6ea81b93bf41b4387be935b5f488e47ef73/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=a3e2d6ea81b93bf41b4387be935b5f488e47ef73", "patch": "@@ -96,10 +96,10 @@ impl Reader for @Reader {\n /**\n * The `ReaderUtil` trait is a home for many of the utility functions\n * a particular Reader should implement.\n-* \n+*\n * The default `Reader` trait is focused entirely on bytes. `ReaderUtil` is based\n * on higher-level concepts like 'chars' and 'lines.'\n-* \n+*\n * # Examples:\n *\n * None right now.\n@@ -117,7 +117,7 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads up until a specific character or EOF.\n-    * \n+    *\n     * The `include` parameter specifies if the character should be included\n     * in the returned string.\n     *\n@@ -129,7 +129,7 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads up until the first '\\n' or EOF.\n-    * \n+    *\n     * The '\\n' is not included in the result.\n     *\n     * # Examples\n@@ -140,9 +140,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads `n` chars.\n-    * \n+    *\n     * Assumes that those chars are UTF-8 encoded.\n-    * \n+    *\n     * The '\\n' is not included in the result.\n     *\n     * # Examples\n@@ -209,7 +209,7 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads all of the lines in the stream.\n-    * \n+    *\n     * Returns a vector of those lines.\n     *\n     * # Examples\n@@ -220,9 +220,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads `n` little-endian unsigned integer bytes.\n-    * \n+    *\n     * `n` must be between 1 and 8, inclusive.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -231,9 +231,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads `n` little-endian signed integer bytes.\n-    * \n+    *\n     * `n` must be between 1 and 8, inclusive.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -242,9 +242,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads `n` big-endian unsigned integer bytes.\n-    * \n+    *\n     * `n` must be between 1 and 8, inclusive.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -253,9 +253,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads `n` big-endian signed integer bytes.\n-    * \n+    *\n     * `n` must be between 1 and 8, inclusive.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -264,9 +264,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian unsigned integer.\n-    * \n+    *\n     * The number of bytes returned is system-dependant.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -275,9 +275,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian integer.\n-    * \n+    *\n     * The number of bytes returned is system-dependant.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -286,9 +286,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian unsigned integer.\n-    * \n+    *\n     * The number of bytes returned is system-dependant.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -297,9 +297,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian integer.\n-    * \n+    *\n     * The number of bytes returned is system-dependant.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -308,9 +308,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `u64`.\n-    * \n+    *\n     * `u64`s are 8 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -319,9 +319,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `u32`.\n-    * \n+    *\n     * `u32`s are 4 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -330,9 +330,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `u16`.\n-    * \n+    *\n     * `u16`s are 2 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -341,9 +341,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `i64`.\n-    * \n+    *\n     * `i64`s are 8 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -352,9 +352,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `i32`.\n-    * \n+    *\n     * `i32`s are 4 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -363,9 +363,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `i16`.\n-    * \n+    *\n     * `i16`s are 2 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -374,9 +374,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `f64`.\n-    * \n+    *\n     * `f64`s are 8 byte, IEEE754 double-precision floating point numbers.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -385,9 +385,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a big-endian `f32`.\n-    * \n+    *\n     * `f32`s are 4 byte, IEEE754 single-precision floating point numbers.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -396,9 +396,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `u64`.\n-    * \n+    *\n     * `u64`s are 8 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -407,9 +407,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `u32`.\n-    * \n+    *\n     * `u32`s are 4 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -418,9 +418,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `u16`.\n-    * \n+    *\n     * `u16`s are 2 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -429,9 +429,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `i64`.\n-    * \n+    *\n     * `i64`s are 8 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -440,9 +440,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `i32`.\n-    * \n+    *\n     * `i32`s are 4 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -451,9 +451,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `i16`.\n-    * \n+    *\n     * `i16`s are 2 bytes long.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -462,9 +462,9 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `f64`.\n-    * \n+    *\n     * `f64`s are 8 byte, IEEE754 double-precision floating point numbers.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n@@ -473,31 +473,31 @@ pub trait ReaderUtil {\n \n     /**\n     * Reads a little-endian `f32`.\n-    * \n+    *\n     * `f32`s are 4 byte, IEEE754 single-precision floating point numbers.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n     */\n     fn read_le_f32(&self) -> f32;\n \n     /**\n-    * Read a u8. \n-    * \n+    * Read a u8.\n+    *\n     * `u8`s are 1 byte.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now.\n     */\n     fn read_u8(&self) -> u8;\n \n     /**\n-    * Read an i8. \n-    * \n+    * Read an i8.\n+    *\n     * `i8`s are 1 byte.\n-    * \n+    *\n     * # Examples\n     *\n     * None right now."}]}