{"sha": "05b7e61977a0f7cc1b4bddab0275b5cc7deae660", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YjdlNjE5NzdhMGY3Y2MxYjRiZGRhYjAyNzViNWNjN2RlYWU2NjA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-09T12:10:42Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-09T12:10:42Z"}, "message": "remove outdated sysroot management", "tree": {"sha": "d842749003e6dcf2f8488f492a09db967e4f2ae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d842749003e6dcf2f8488f492a09db967e4f2ae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05b7e61977a0f7cc1b4bddab0275b5cc7deae660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05b7e61977a0f7cc1b4bddab0275b5cc7deae660", "html_url": "https://github.com/rust-lang/rust/commit/05b7e61977a0f7cc1b4bddab0275b5cc7deae660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05b7e61977a0f7cc1b4bddab0275b5cc7deae660/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f30cabf0bb01131080032ae9858c065b64ac8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/09f30cabf0bb01131080032ae9858c065b64ac8b", "html_url": "https://github.com/rust-lang/rust/commit/09f30cabf0bb01131080032ae9858c065b64ac8b"}], "stats": {"total": 35, "additions": 5, "deletions": 30}, "files": [{"sha": "ae9b2efa67500b0292cd8d304acaf7f820a956c0", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 5, "deletions": 30, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/05b7e61977a0f7cc1b4bddab0275b5cc7deae660/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05b7e61977a0f7cc1b4bddab0275b5cc7deae660/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=05b7e61977a0f7cc1b4bddab0275b5cc7deae660", "patch": "@@ -421,38 +421,13 @@ fn in_cargo_miri() {\n }\n \n fn inside_cargo_rustc() {\n-    let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n-    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-    let sys_root = if let Ok(sysroot) = ::std::env::var(\"MIRI_SYSROOT\") {\n-        sysroot\n-    } else if let (Some(home), Some(toolchain)) = (home, toolchain) {\n-        format!(\"{}/toolchains/{}\", home, toolchain)\n-    } else {\n-        option_env!(\"RUST_SYSROOT\")\n-            .map(|s| s.to_owned())\n-            .or_else(|| {\n-                Command::new(\"rustc\")\n-                    .arg(\"--print\")\n-                    .arg(\"sysroot\")\n-                    .output()\n-                    .ok()\n-                    .and_then(|out| String::from_utf8(out.stdout).ok())\n-                    .map(|s| s.trim().to_owned())\n-            })\n-            .expect(\"need to specify `RUST_SYSROOT` env var during miri compilation, or use rustup or multirust\")\n-    };\n+    let sysroot = std::env::var(\"MIRI_SYSROOT\").expect(\"The wrapper should have set MIRI_SYSROOT\");\n \n-    // This conditional check for the `--sysroot` flag is there so that users can call `cargo-miri`\n-    // directly without having to pass `--sysroot` or anything.\n-    let rustc_args = std::env::args().skip(2);\n-    let mut args: Vec<String> = if std::env::args().any(|s| s == \"--sysroot\") {\n-        rustc_args.collect()\n-    } else {\n-        rustc_args\n+    let rustc_args = std::env::args().skip(2); // skip `cargo rustc`\n+    let mut args: Vec<String> = rustc_args\n             .chain(Some(\"--sysroot\".to_owned()))\n-            .chain(Some(sys_root))\n-            .collect()\n-    };\n+            .chain(Some(sysroot))\n+            .collect();\n     args.splice(0..0, miri::miri_default_args().iter().map(ToString::to_string));\n \n     // See if we can find the `cargo-miri` markers. Those only get added to the binary we want to"}]}