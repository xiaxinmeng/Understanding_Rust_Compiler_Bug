{"sha": "97157240065f60b121c308d139692f0232c12a32", "node_id": "C_kwDOAAsO6NoAKDk3MTU3MjQwMDY1ZjYwYjEyMWMzMDhkMTM5NjkyZjAyMzJjMTJhMzI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-28T22:45:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-28T22:45:15Z"}, "message": "Rollup merge of #90131 - camsteffen:fmt-args-span-fix, r=cjgillot\n\nFix a format_args span to be expansion\n\nI found this while exploring solutions for rust-lang/rust-clippy#7843.\n\nr? `@m-ou-se`", "tree": {"sha": "2bc69a30530a82ac972f413fa06c4f92c87f8d41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bc69a30530a82ac972f413fa06c4f92c87f8d41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97157240065f60b121c308d139692f0232c12a32", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhpAZ7CRBK7hj4Ov3rIwAAxScIABVJyYHvfDKaJTQmiWIPpWbx\njXlsVxoDNWMQwMU+bZMZLme94QsVimUPgGE6IZBR+eB0j5t4GR5+SkNsnnogkmLF\n7v2vxbd8wiNuru44RxHCNqro0Oi1eZVT39n7/CNctEd1Yl0JUrMojcrtwa0QiXJF\nUFGa+QHd4ISp0Iu4llG/cRNI8vb5FwaJaZMY2X2av0k3fXbUdz0sYo6pQypQGe28\nsCFIWmVgpyVLDCVx3x0OdkZwArspEV4c+6P+madpRvCVKRFdbbw6dUoANu0vBrh/\nUi1IXaD7C7bSTA8qGcjbXKgCS51VweSPWC7MK4+jQ8nYcM7sEbXdh3tu3j8BpcI=\n=YNeF\n-----END PGP SIGNATURE-----\n", "payload": "tree 2bc69a30530a82ac972f413fa06c4f92c87f8d41\nparent db9d361a4731ca0bb48533fab6297a8fea75696f\nparent 4cfb7add771367757ee2dd26da4e29d333c93cb6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638139515 +0100\ncommitter GitHub <noreply@github.com> 1638139515 +0100\n\nRollup merge of #90131 - camsteffen:fmt-args-span-fix, r=cjgillot\n\nFix a format_args span to be expansion\n\nI found this while exploring solutions for rust-lang/rust-clippy#7843.\n\nr? `@m-ou-se`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97157240065f60b121c308d139692f0232c12a32", "html_url": "https://github.com/rust-lang/rust/commit/97157240065f60b121c308d139692f0232c12a32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97157240065f60b121c308d139692f0232c12a32/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db9d361a4731ca0bb48533fab6297a8fea75696f", "url": "https://api.github.com/repos/rust-lang/rust/commits/db9d361a4731ca0bb48533fab6297a8fea75696f", "html_url": "https://github.com/rust-lang/rust/commit/db9d361a4731ca0bb48533fab6297a8fea75696f"}, {"sha": "4cfb7add771367757ee2dd26da4e29d333c93cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfb7add771367757ee2dd26da4e29d333c93cb6", "html_url": "https://github.com/rust-lang/rust/commit/4cfb7add771367757ee2dd26da4e29d333c93cb6"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "70e125d6887878bbb1967d8af115d2482e4b8760", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -769,7 +769,10 @@ impl<'a, 'b> Context<'a, 'b> {\n             for arg_ty in self.arg_unique_types[i].iter() {\n                 args.push(Context::format_arg(self.ecx, self.macsp, e.span, arg_ty, i));\n             }\n-            heads.push(self.ecx.expr_addr_of(e.span, e));\n+            // use the arg span for `&arg` so that borrowck errors\n+            // point to the specific expression passed to the macro\n+            // (the span is otherwise unavailable in MIR)\n+            heads.push(self.ecx.expr_addr_of(e.span.with_ctxt(self.macsp.ctxt()), e));\n         }\n         for pos in self.count_args {\n             let index = match pos {"}, {"sha": "d2c7473c036b8769fbcfacccf3792b38cc637cef", "filename": "src/test/ui/borrowck/borrowck-and-init.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-and-init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-and-init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-and-init.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,6 +3,8 @@ error[E0381]: borrow of possibly-uninitialized variable: `i`\n    |\n LL |     println!(\"{}\", i);\n    |                    ^ use of possibly-uninitialized `i`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "b134f5cc2d8e3d950e53c3ee966ae0d5aa458eeb", "filename": "src/test/ui/borrowck/borrowck-break-uninit-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-break-uninit-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-break-uninit-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-break-uninit-2.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,6 +3,8 @@ error[E0381]: borrow of possibly-uninitialized variable: `x`\n    |\n LL |     println!(\"{}\", x);\n    |                    ^ use of possibly-uninitialized `x`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "652d7d3076fbda4494248b7573e58784e2ad3d8c", "filename": "src/test/ui/borrowck/borrowck-break-uninit.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-break-uninit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-break-uninit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-break-uninit.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,6 +3,8 @@ error[E0381]: borrow of possibly-uninitialized variable: `x`\n    |\n LL |     println!(\"{}\", x);\n    |                    ^ use of possibly-uninitialized `x`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "6c757759f71344514af75d2a2b486bcc0324978f", "filename": "src/test/ui/borrowck/borrowck-or-init.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-or-init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-or-init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-or-init.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,6 +3,8 @@ error[E0381]: borrow of possibly-uninitialized variable: `i`\n    |\n LL |     println!(\"{}\", i);\n    |                    ^ use of possibly-uninitialized `i`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "fc144a066bb2777fe14784b24128c3d880fef2b0", "filename": "src/test/ui/borrowck/borrowck-while-break.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-while-break.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-while-break.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-while-break.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,6 +3,8 @@ error[E0381]: borrow of possibly-uninitialized variable: `v`\n    |\n LL |     println!(\"{}\", v);\n    |                    ^ use of possibly-uninitialized `v`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "e29cf7a1a7519bb8abde2c717b71416354e0b235", "filename": "src/test/ui/borrowck/issue-24267-flow-exit.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fissue-24267-flow-exit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fborrowck%2Fissue-24267-flow-exit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-24267-flow-exit.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,12 +3,16 @@ error[E0381]: borrow of possibly-uninitialized variable: `x`\n    |\n LL |     println!(\"{}\", x);\n    |                    ^ use of possibly-uninitialized `x`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0381]: borrow of possibly-uninitialized variable: `x`\n   --> $DIR/issue-24267-flow-exit.rs:18:20\n    |\n LL |     println!(\"{}\", x);\n    |                    ^ use of possibly-uninitialized `x`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f6c219018321141366399327174683f57402511e", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/arrays.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Farrays.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Farrays.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Farrays.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -81,6 +81,8 @@ LL |     println!(\"{}\", arr[3]);\n ...\n LL |     c();\n    |     - mutable borrow later used here\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0502]: cannot borrow `arr` as immutable because it is also borrowed as mutable\n   --> $DIR/arrays.rs:73:24"}, {"sha": "29228d85324ef3f39476fb7cd1b558786064d838", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/box.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fbox.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fbox.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fbox.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -25,6 +25,8 @@ LL |     println!(\"{}\", e.0.0.m.x);\n LL |\n LL |     c();\n    |     - mutable borrow later used here\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0506]: cannot assign to `e.0.0.m.x` because it is borrowed\n   --> $DIR/box.rs:55:5"}, {"sha": "5acf3797ab53feb51128c32fc6248509ea116d60", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/repr_packed.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Frepr_packed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Frepr_packed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Frepr_packed.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -8,6 +8,7 @@ LL |         println!(\"{}\", foo.x);\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>\n    = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)\n+   = note: this warning originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n warning: 1 warning emitted\n "}, {"sha": "4f9fdbd368a88e1e8e3ac2cd93f19687c00f0605", "filename": "src/test/ui/closures/2229_closure_analysis/diagnostics/simple-struct-min-capture.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fsimple-struct-min-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fsimple-struct-min-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fdiagnostics%2Fsimple-struct-min-capture.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -13,6 +13,8 @@ LL |     println!(\"{:?}\", p);\n LL |\n LL |     c();\n    |     - mutable borrow later used here\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "ceb91142ac82699eb6dc1be7aecc37a19a659acc", "filename": "src/test/ui/codemap_tests/tab_3.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -14,6 +14,7 @@ note: this function takes ownership of the receiver `self`, which moves `some_ve\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n    |                  ^^^^\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "9dc40030a6ff8b1a2a3530d411c327604508145b", "filename": "src/test/ui/consts/const-eval/conditional_array_execution.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconditional_array_execution.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -28,6 +28,7 @@ LL |     println!(\"{}\", FOO);\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+   = note: this warning originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error; 2 warnings emitted\n "}, {"sha": "32ab7c74b891f894f708b50e0af77b4e00c733f3", "filename": "src/test/ui/consts/const-eval/issue-43197.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -39,6 +39,7 @@ LL |     println!(\"{} {}\", X, Y);\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+   = note: this warning originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0080]: evaluation of constant value failed\n   --> $DIR/issue-43197.rs:16:26\n@@ -54,6 +55,7 @@ LL |     println!(\"{} {}\", X, Y);\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+   = note: this warning originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors; 4 warnings emitted\n "}, {"sha": "67cd1f64d94aad1130f672fe48a3c3e320035938", "filename": "src/test/ui/generator/yield-while-ref-reborrowed.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-ref-reborrowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-ref-reborrowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyield-while-ref-reborrowed.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -10,6 +10,8 @@ LL |     println!(\"{}\", x);\n    |                    ^ second borrow occurs here\n LL |     Pin::new(&mut b).resume(());\n    |              ------ first borrow later used here\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "4a1debf37a079547bdbdaff4a3a64c71de359a22", "filename": "src/test/ui/issues/issue-42796.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fissues%2Fissue-42796.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fissues%2Fissue-42796.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-42796.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -8,6 +8,8 @@ LL |     let mut s_copy = s;\n ...\n LL |     println!(\"{}\", s);\n    |                    ^ value borrowed here after move\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "32e8588b3c0749dc3a9aeecd6ba43e2c54b11596", "filename": "src/test/ui/issues/issue-47646.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fissues%2Fissue-47646.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fissues%2Fissue-47646.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47646.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -12,6 +12,8 @@ LL |             println!(\"{:?}\", heap);\n ...\n LL |     };\n    |      - ... and the mutable borrow might be used here, when that temporary is dropped and runs the destructor for type `(Option<PeekMut<'_, i32>>, ())`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "90411353f08250496680c6466b0f8b594167663b", "filename": "src/test/ui/limits/issue-55878.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Flimits%2Fissue-55878.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Flimits%2Fissue-55878.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flimits%2Fissue-55878.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -18,6 +18,7 @@ LL |     println!(\"Size: {}\", std::mem::size_of::<[u8; u64::MAX as usize]>());\n    = note: `#[deny(const_err)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ff6c02f2110f647daf0c1ecf6b6f446cf16bf974", "filename": "src/test/ui/liveness/liveness-move-in-while.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-in-while.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -28,6 +28,8 @@ LL |         println!(\"{}\", y);\n    |                        ^ value borrowed here after move\n LL |         while true { while true { while true { x = y; x.clone(); } } }\n    |                                                    - value moved here, in previous iteration of loop\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error; 3 warnings emitted\n "}, {"sha": "df54af9f0f2ce2e038bd2c420ea62fefce0920de", "filename": "src/test/ui/liveness/liveness-use-after-move.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-move.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -8,6 +8,8 @@ LL |     let y = x;\n LL | \n LL |     println!(\"{}\", *x);\n    |                    ^^ value borrowed here after move\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "becede1ceb6b3edd0b0f3eadad2c6ca2f7a7fe5e", "filename": "src/test/ui/liveness/liveness-use-after-send.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-send.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -7,6 +7,8 @@ LL |     send(ch, message);\n    |              ------- value moved here\n LL |     println!(\"{}\", message);\n    |                    ^^^^^^^ value borrowed here after move\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "20d5c66a3f20581c789238f26c733a54c859c8d5", "filename": "src/test/ui/loops/loop-proper-liveness.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Floops%2Floop-proper-liveness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Floops%2Floop-proper-liveness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floop-proper-liveness.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -3,6 +3,8 @@ error[E0381]: borrow of possibly-uninitialized variable: `x`\n    |\n LL |     println!(\"{:?}\", x);\n    |                      ^ use of possibly-uninitialized `x`\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "ac921c18e07d577ace08f15b684ff4269e709750", "filename": "src/test/ui/moves/moves-based-on-type-capture-clause-bad.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-capture-clause-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-capture-clause-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-capture-clause-bad.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -10,6 +10,8 @@ LL |         println!(\"{}\", x);\n LL |     });\n LL |     println!(\"{}\", x);\n    |                    ^ value borrowed here after move\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "d6822d94ca8c96ec0529461bee12948d6bec2fb2", "filename": "src/test/ui/try-block/try-block-maybe-bad-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -21,6 +21,8 @@ LL |             ::std::mem::drop(x);\n LL |         };\n LL |         println!(\"{}\", x);\n    |                        ^ value borrowed here after move\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0506]: cannot assign to `i` because it is borrowed\n   --> $DIR/try-block-maybe-bad-lifetime.rs:40:9"}, {"sha": "361a6e2d8c2786658f49be72d2f1e800aed5cc39", "filename": "src/test/ui/use/use-after-move-based-on-type.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-based-on-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-based-on-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-based-on-type.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -7,6 +7,8 @@ LL |     let _y = x;\n    |              - value moved here\n LL |     println!(\"{}\", x);\n    |                    ^ value borrowed here after move\n+   |\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "377a8074458912c55e789f70828f813b7afa3e69", "filename": "src/test/ui/walk-struct-literal-with.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97157240065f60b121c308d139692f0232c12a32/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwalk-struct-literal-with.stderr?ref=97157240065f60b121c308d139692f0232c12a32", "patch": "@@ -13,6 +13,7 @@ note: this function takes ownership of the receiver `self`, which moves `start`\n    |\n LL |     fn make_string_bar(mut self) -> Mine{\n    |                            ^^^^\n+   = note: this error originates in the macro `$crate::format_args_nl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}]}