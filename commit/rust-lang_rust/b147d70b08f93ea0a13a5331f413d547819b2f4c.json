{"sha": "b147d70b08f93ea0a13a5331f413d547819b2f4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNDdkNzBiMDhmOTNlYTBhMTNhNTMzMWY0MTNkNTQ3ODE5YjJmNGM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-25T03:25:18Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-28T06:42:53Z"}, "message": "std: cleanup imports in result::tests", "tree": {"sha": "e1b73e270aed76ec281a873a65ee6feadea80921", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1b73e270aed76ec281a873a65ee6feadea80921"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b147d70b08f93ea0a13a5331f413d547819b2f4c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b147d70b08f93ea0a13a5331f413d547819b2f4c", "html_url": "https://github.com/rust-lang/rust/commit/b147d70b08f93ea0a13a5331f413d547819b2f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b147d70b08f93ea0a13a5331f413d547819b2f4c/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3478589b99b296b1c0014478826f03f848b536bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3478589b99b296b1c0014478826f03f848b536bf", "html_url": "https://github.com/rust-lang/rust/commit/3478589b99b296b1c0014478826f03f848b536bf"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "c045c191488f5af56e7ba9053f3ab90877f92e07", "filename": "src/libstd/result.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b147d70b08f93ea0a13a5331f413d547819b2f4c/src%2Flibstd%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b147d70b08f93ea0a13a5331f413d547819b2f4c/src%2Flibstd%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fresult.rs?ref=b147d70b08f93ea0a13a5331f413d547819b2f4c", "patch": "@@ -15,7 +15,6 @@\n use clone::Clone;\n use cmp::Eq;\n use either;\n-use either::Either;\n use iterator::IteratorUtil;\n use option::{None, Option, Some};\n use vec;\n@@ -39,7 +38,7 @@ impl<T, E> Result<T, E> {\n      * result variants are converted to `either::Left`.\n      */\n     #[inline]\n-    pub fn to_either(self)-> Either<E, T>{\n+    pub fn to_either(self)-> either::Either<E, T>{\n         match self {\n             Ok(t) => either::Right(t),\n             Err(e) => either::Left(e),\n@@ -341,17 +340,16 @@ pub fn iter_vec2<S,T,U>(ss: &[S], ts: &[T],\n \n #[cfg(test)]\n mod tests {\n-    use result::{Err, Ok, Result};\n-    use result;\n+    use super::*;\n     use either;\n \n-    pub fn op1() -> result::Result<int, ~str> { result::Ok(666) }\n+    pub fn op1() -> Result<int, ~str> { Ok(666) }\n \n-    pub fn op2(i: int) -> result::Result<uint, ~str> {\n-        result::Ok(i as uint + 1u)\n+    pub fn op2(i: int) -> Result<uint, ~str> {\n+        Ok(i as uint + 1u)\n     }\n \n-    pub fn op3() -> result::Result<int, ~str> { result::Err(~\"sadface\") }\n+    pub fn op3() -> Result<int, ~str> { Err(~\"sadface\") }\n \n     #[test]\n     pub fn chain_success() {"}]}