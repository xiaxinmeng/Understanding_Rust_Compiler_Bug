{"sha": "eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "node_id": "C_kwDOAAsO6NoAKGVjY2ZhMTY0NWI1YmYwOWJjZDQ5YjU2YjM0MmM5ZTZhOTI1NTczYzA", "commit": {"author": {"name": "Mirko Rainer", "email": "mirkorainer@outlook.com", "date": "2021-10-12T15:52:31Z"}, "committer": {"name": "Mirko Rainer", "email": "mirkorainer@outlook.com", "date": "2021-10-12T15:52:31Z"}, "message": "Saw a FIXME comment and decided to fix it.\nThis renames `descend_into_macros` to  `descend_into_macros_single` and `descend_into_macros_many` into `descend_into_macros`.\n However, this does not touch a function in `SemanticsImpl` of same name.", "tree": {"sha": "354e92e8e3ab8d600b49b604f8718aa789d01a5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/354e92e8e3ab8d600b49b604f8718aa789d01a5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "html_url": "https://github.com/rust-lang/rust/commit/eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/comments", "author": {"login": "mirkoRainer", "id": 52899592, "node_id": "MDQ6VXNlcjUyODk5NTky", "avatar_url": "https://avatars.githubusercontent.com/u/52899592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mirkoRainer", "html_url": "https://github.com/mirkoRainer", "followers_url": "https://api.github.com/users/mirkoRainer/followers", "following_url": "https://api.github.com/users/mirkoRainer/following{/other_user}", "gists_url": "https://api.github.com/users/mirkoRainer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mirkoRainer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mirkoRainer/subscriptions", "organizations_url": "https://api.github.com/users/mirkoRainer/orgs", "repos_url": "https://api.github.com/users/mirkoRainer/repos", "events_url": "https://api.github.com/users/mirkoRainer/events{/privacy}", "received_events_url": "https://api.github.com/users/mirkoRainer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mirkoRainer", "id": 52899592, "node_id": "MDQ6VXNlcjUyODk5NTky", "avatar_url": "https://avatars.githubusercontent.com/u/52899592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mirkoRainer", "html_url": "https://github.com/mirkoRainer", "followers_url": "https://api.github.com/users/mirkoRainer/followers", "following_url": "https://api.github.com/users/mirkoRainer/following{/other_user}", "gists_url": "https://api.github.com/users/mirkoRainer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mirkoRainer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mirkoRainer/subscriptions", "organizations_url": "https://api.github.com/users/mirkoRainer/orgs", "repos_url": "https://api.github.com/users/mirkoRainer/repos", "events_url": "https://api.github.com/users/mirkoRainer/events{/privacy}", "received_events_url": "https://api.github.com/users/mirkoRainer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64b1c72af2d61495a784d6e97142284761c06437", "url": "https://api.github.com/repos/rust-lang/rust/commits/64b1c72af2d61495a784d6e97142284761c06437", "html_url": "https://github.com/rust-lang/rust/commit/64b1c72af2d61495a784d6e97142284761c06437"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "b6e5ee75313d33adcecbce894c2fa06860decad4", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -175,13 +175,11 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.speculative_expand_attr(actual_macro_call, speculative_args, token_to_map)\n     }\n \n-    // FIXME: Rename to descend_into_macros_single\n-    pub fn descend_into_macros(&self, token: SyntaxToken) -> SyntaxToken {\n+    pub fn descend_into_macros_single(&self, token: SyntaxToken) -> SyntaxToken {\n         self.imp.descend_into_macros(token).pop().unwrap()\n     }\n \n-    // FIXME: Rename to descend_into_macros\n-    pub fn descend_into_macros_many(&self, token: SyntaxToken) -> SmallVec<[SyntaxToken; 1]> {\n+    pub fn descend_into_macros(&self, token: SyntaxToken) -> SmallVec<[SyntaxToken; 1]> {\n         self.imp.descend_into_macros(token)\n     }\n "}, {"sha": "7268478191cece0e960f37708979386288cb537f", "filename": "crates/ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -90,7 +90,7 @@ pub(crate) fn outgoing_calls(db: &RootDatabase, position: FilePosition) -> Optio\n     })?;\n     let mut calls = CallLocations::default();\n \n-    sema.descend_into_macros_many(token)\n+    sema.descend_into_macros(token)\n         .into_iter()\n         .filter_map(|it| it.ancestors().nth(1).and_then(ast::Item::cast))\n         .filter_map(|item| match item {"}, {"sha": "41557ca1d9d9d53e4c68444032cdb8de18c8ede4", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -124,7 +124,7 @@ pub(crate) fn external_docs(\n         kind if kind.is_trivia() => 0,\n         _ => 1,\n     })?;\n-    let token = sema.descend_into_macros(token);\n+    let token = sema.descend_into_macros_single(token);\n \n     let node = token.parent()?;\n     let definition = match_ast! {\n@@ -254,7 +254,7 @@ impl DocCommentToken {\n         let original_start = doc_token.text_range().start();\n         let relative_comment_offset = offset - original_start - prefix_len;\n \n-        sema.descend_into_macros_many(doc_token).into_iter().find_map(|t| {\n+        sema.descend_into_macros(doc_token).into_iter().find_map(|t| {\n             let (node, descended_prefix_len) = match_ast! {\n                 match t {\n                     ast::Comment(comment) => (t.parent()?, TextSize::try_from(comment.prefix().len()).ok()?),"}, {"sha": "5f34ba8391979831b227cbf2021182ddd10e26b8", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -32,7 +32,7 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n         _ => 0,\n     })?;\n \n-    let descended = sema.descend_into_macros(tok.clone());\n+    let descended = sema.descend_into_macros_single(tok.clone());\n     if let Some(attr) = descended.ancestors().find_map(ast::Attr::cast) {\n         if let Some((path, tt)) = attr.as_simple_call() {\n             if path == \"derive\" {"}, {"sha": "ae4dfd47bd0efab6577a55b3c31aee73e04c4a9b", "filename": "crates/ide/src/extend_selection.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fextend_selection.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -142,8 +142,8 @@ fn extend_tokens_from_range(\n \n     // compute original mapped token range\n     let extended = {\n-        let fst_expanded = sema.descend_into_macros(first_token.clone());\n-        let lst_expanded = sema.descend_into_macros(last_token.clone());\n+        let fst_expanded = sema.descend_into_macros_single(first_token.clone());\n+        let lst_expanded = sema.descend_into_macros_single(last_token.clone());\n         let mut lca =\n             algo::least_common_ancestor(&fst_expanded.parent()?, &lst_expanded.parent()?)?;\n         lca = shallowest_node(&lca);\n@@ -155,7 +155,7 @@ fn extend_tokens_from_range(\n \n     // Compute parent node range\n     let validate = |token: &SyntaxToken| -> bool {\n-        let expanded = sema.descend_into_macros(token.clone());\n+        let expanded = sema.descend_into_macros_single(token.clone());\n         let parent = match expanded.parent() {\n             Some(it) => it,\n             None => return false,"}, {"sha": "7aef463032bf32c9700349066e9187080461e558", "filename": "crates/ide/src/goto_declaration.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_declaration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_declaration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_declaration.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -19,7 +19,7 @@ pub(crate) fn goto_declaration(\n     let original_token = file\n         .token_at_offset(position.offset)\n         .find(|it| matches!(it.kind(), IDENT | T![self] | T![super] | T![crate]))?;\n-    let token = sema.descend_into_macros(original_token.clone());\n+    let token = sema.descend_into_macros_single(original_token.clone());\n     let parent = token.parent()?;\n     let def = match_ast! {\n         match parent {"}, {"sha": "1599878119cc0bff454f1613464e12bb08295ad8", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -43,7 +43,7 @@ pub(crate) fn goto_definition(\n         });\n     }\n     let navs = sema\n-        .descend_into_macros_many(original_token.clone())\n+        .descend_into_macros(original_token.clone())\n         .into_iter()\n         .filter_map(|token| {\n             let parent = token.parent()?;"}, {"sha": "9b0e42d8cffd50480a2799da506e7254bee80b8f", "filename": "crates/ide/src/goto_implementation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_implementation.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -35,7 +35,7 @@ pub(crate) fn goto_implementation(\n         })?;\n     let range = original_token.text_range();\n     let navs =\n-        sema.descend_into_macros_many(original_token)\n+        sema.descend_into_macros(original_token)\n             .into_iter()\n             .filter_map(|token| token.parent().and_then(ast::NameLike::cast))\n             .filter_map(|node| {"}, {"sha": "3acf3b0367d63a2ba847c933b95699515faffe63", "filename": "crates/ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -27,7 +27,7 @@ pub(crate) fn goto_type_definition(\n             kind if kind.is_trivia() => 0,\n             _ => 1,\n         })?;\n-    let token: SyntaxToken = sema.descend_into_macros(token);\n+    let token: SyntaxToken = sema.descend_into_macros_single(token);\n \n     let (ty, node) = sema.token_ancestors_with_macros(token).find_map(|node| {\n         let ty = match_ast! {"}, {"sha": "f2c29a66ba4ed75ff09f607f5c9d07beb74ba0c7", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -116,7 +116,7 @@ pub(crate) fn hover(\n         });\n     }\n \n-    let descended = sema.descend_into_macros_many(original_token.clone());\n+    let descended = sema.descend_into_macros(original_token.clone());\n \n     // FIXME: Definition should include known lints and the like instead of having this special case here\n     if let Some(res) = descended.iter().find_map(|token| {"}, {"sha": "3c04208281c6f285ef8931037339d2fa55a419eb", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -233,7 +233,7 @@ fn find_related_tests(\n             // create flattened vec of tokens\n             let tokens = refs.iter().flat_map(|(range, _)| {\n                 match file.token_at_offset(range.start()).next() {\n-                    Some(token) => sema.descend_into_macros_many(token),\n+                    Some(token) => sema.descend_into_macros(token),\n                     None => Default::default(),\n                 }\n             });"}, {"sha": "bb1799c9449438ffaed19f236dcb742a288763ea", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -162,7 +162,7 @@ impl StaticIndex<'_> {\n }\n \n fn get_definition(sema: &Semantics<RootDatabase>, token: SyntaxToken) -> Option<Definition> {\n-    for token in sema.descend_into_macros_many(token) {\n+    for token in sema.descend_into_macros(token) {\n         let def = Definition::from_token(&sema, &token);\n         if let [x] = def.as_slice() {\n             return Some(*x);"}, {"sha": "6b246ff709e1d62b4f1ac73882905f20f7a95b9b", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -303,7 +303,7 @@ fn traverse(\n                 Some(it) => it,\n                 _ => continue,\n             };\n-            let token = sema.descend_into_macros(token);\n+            let token = sema.descend_into_macros_single(token);\n             match token.parent() {\n                 Some(parent) => {\n                     // We only care Name and Name_ref"}, {"sha": "0c26670f2edeb652b2e1cee358830487d3b41e87", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -623,7 +623,7 @@ impl FunctionBody {\n                         .children_with_tokens()\n                         .flat_map(SyntaxElement::into_token)\n                         .filter(|it| it.kind() == SyntaxKind::IDENT)\n-                        .flat_map(|t| sema.descend_into_macros_many(t))\n+                        .flat_map(|t| sema.descend_into_macros(t))\n                         .for_each(|t| cb(t.parent().and_then(ast::NameRef::cast)));\n                 }\n             }"}, {"sha": "b75277f628ea463aa4eaa55d078717405e7ddf50", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -138,7 +138,7 @@ impl<'a> CompletionContext<'a> {\n \n         let original_token =\n             original_file.syntax().token_at_offset(position.offset).left_biased()?;\n-        let token = sema.descend_into_macros(original_token.clone());\n+        let token = sema.descend_into_macros_single(original_token.clone());\n         let scope = sema.scope_at_offset(&token, position.offset);\n         let krate = scope.krate();\n         let mut locals = vec![];"}, {"sha": "9e15702c5fb8a4ccd12b918fc9b31e36edba1912", "filename": "crates/ide_db/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide_db%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eccfa1645b5bf09bcd49b56b342c9e6a925573c0/crates%2Fide_db%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fcall_info.rs?ref=eccfa1645b5bf09bcd49b56b342c9e6a925573c0", "patch": "@@ -52,7 +52,7 @@ pub fn call_info(db: &RootDatabase, position: FilePosition) -> Option<CallInfo>\n         // if the cursor is sandwiched between two space tokens and the call is unclosed\n         // this prevents us from leaving the CallExpression\n         .and_then(|tok| algo::skip_trivia_token(tok, Direction::Prev))?;\n-    let token = sema.descend_into_macros(token);\n+    let token = sema.descend_into_macros_single(token);\n \n     let (callable, active_parameter) = call_info_impl(&sema, token)?;\n "}]}