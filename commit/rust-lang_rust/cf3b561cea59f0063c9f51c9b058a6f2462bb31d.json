{"sha": "cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmM2I1NjFjZWE1OWYwMDYzYzlmNTFjOWIwNThhNmYyNDYyYmIzMWQ=", "commit": {"author": {"name": "ben", "email": "benlewisj@gmail.com", "date": "2019-10-04T21:49:24Z"}, "committer": {"name": "ben", "email": "benlewisj@gmail.com", "date": "2019-10-08T16:10:00Z"}, "message": "Gate use of raw and function pointers in const generics behind\nconst_compare_raw_pointers.", "tree": {"sha": "65be02b97990a9f635a4d76be9f1f1718c60fbd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65be02b97990a9f635a4d76be9f1f1718c60fbd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "html_url": "https://github.com/rust-lang/rust/commit/cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/comments", "author": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a59eb6d55483e68f790c048efcfc8cdec26db32c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a59eb6d55483e68f790c048efcfc8cdec26db32c", "html_url": "https://github.com/rust-lang/rust/commit/a59eb6d55483e68f790c048efcfc8cdec26db32c"}], "stats": {"total": 138, "additions": 131, "deletions": 7}, "files": [{"sha": "84fb8461c6a179213e52006bbe76918c0507a1e2", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -1508,9 +1508,29 @@ pub fn checked_type_of(tcx: TyCtxt<'_>, def_id: DefId, fail: bool) -> Option<Ty<\n         }\n \n         Node::GenericParam(param) => match &param.kind {\n-            hir::GenericParamKind::Type { default: Some(ref ty), .. } |\n-            hir::GenericParamKind::Const { ref ty, .. } => {\n-                icx.to_ty(ty)\n+            hir::GenericParamKind::Type { default: Some(ref ty), .. } => icx.to_ty(ty),\n+            hir::GenericParamKind::Const { ty: ref hir_ty, .. } => {\n+                let ty = icx.to_ty(hir_ty);\n+                if !tcx.features().const_compare_raw_pointers {\n+                    let err = match ty.peel_refs().kind {\n+                        ty::FnPtr(_) => Some(\"function pointers\"),\n+                        ty::RawPtr(_) => Some(\"raw pointers\"),\n+                        _ => None,\n+                    };\n+                    if let Some(unsupported_type) = err {\n+                        feature_gate::emit_feature_err(\n+                            &tcx.sess.parse_sess,\n+                            sym::const_compare_raw_pointers,\n+                            hir_ty.span,\n+                            feature_gate::GateIssue::Language,\n+                            &format!(\n+                                \"use of {} as const generic arguments are unstable\",\n+                                unsupported_type\n+                            ),\n+                        );\n+                    };\n+                }\n+                ty\n             }\n             x => {\n                 if !fail {"}, {"sha": "84615386d29959a07024cd5fd0e7610edeb9af17", "filename": "src/test/ui/const-generics/fn-const-param-call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.rs?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![feature(const_generics)]\n+#![feature(const_generics, const_compare_raw_pointers)]\n //~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n fn function() -> u32 {"}, {"sha": "c677d70374931774c8fb2a303966cc29b7a7abc2", "filename": "src/test/ui/const-generics/fn-const-param-call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-call.stderr?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -1,7 +1,7 @@\n warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n   --> $DIR/fn-const-param-call.rs:3:12\n    |\n-LL | #![feature(const_generics)]\n+LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default"}, {"sha": "78fb10e8cb9043296f86848767796cdf3261e227", "filename": "src/test/ui/const-generics/fn-const-param-infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.rs?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -1,4 +1,4 @@\n-#![feature(const_generics)]\n+#![feature(const_generics, const_compare_raw_pointers)]\n //~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n struct Checked<const F: fn(usize) -> bool>;"}, {"sha": "408786f98e1c7db6acc7b5dbd3dff596687a1472", "filename": "src/test/ui/const-generics/fn-const-param-infer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-const-param-infer.stderr?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -1,7 +1,7 @@\n warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n   --> $DIR/fn-const-param-infer.rs:1:12\n    |\n-LL | #![feature(const_generics)]\n+LL | #![feature(const_generics, const_compare_raw_pointers)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default"}, {"sha": "672092a37793496db45b05ddde1ad8e81dfd6f01", "filename": "src/test/ui/const-generics/raw-ptr-const-param-deref.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.rs?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+#![feature(const_generics, const_compare_raw_pointers)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+const A: u32 = 3;\n+\n+struct Const<const P: *const u32>;\n+\n+impl<const P: *const u32> Const<{P}> {\n+    fn get() -> u32 {\n+        unsafe {\n+            *P\n+        }\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(Const::<{&A as *const _}>::get(), 3)\n+}\n\\ No newline at end of file"}, {"sha": "73221596c8e8797755a2669687e573ee321853d3", "filename": "src/test/ui/const-generics/raw-ptr-const-param-deref.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param-deref.stderr?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -0,0 +1,8 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/raw-ptr-const-param-deref.rs:2:12\n+   |\n+LL | #![feature(const_generics, const_compare_raw_pointers)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+"}, {"sha": "435b6c874f4f0153302fdaac9c81bdb9f1e1990d", "filename": "src/test/ui/const-generics/raw-ptr-const-param.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.rs?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_generics, const_compare_raw_pointers)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+struct Const<const P: *const u32>;\n+\n+fn main() {\n+    let _: Const<{15 as *const _}> = Const::<{10 as *const _}>; //~ mismatched types\n+    let _: Const<{10 as *const _}> = Const::<{10 as *const _}>;\n+}\n\\ No newline at end of file"}, {"sha": "e432afd9e9d69b7728f9c1c999b04f022182b2bb", "filename": "src/test/ui/const-generics/raw-ptr-const-param.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -0,0 +1,20 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/raw-ptr-const-param.rs:1:12\n+   |\n+LL | #![feature(const_generics, const_compare_raw_pointers)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0308]: mismatched types\n+  --> $DIR/raw-ptr-const-param.rs:7:38\n+   |\n+LL |     let _: Const<{15 as *const _}> = Const::<{10 as *const _}>;\n+   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Scalar(0x000000000000000f) : *const u32`, found `Scalar(0x000000000000000a) : *const u32`\n+   |\n+   = note: expected type `Const<>`\n+              found type `Const<>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "db5290bdf3be252f86b9033ec42df9210eedfed3", "filename": "src/test/ui/feature-gates/feature-gate-const_generics-ptr.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.rs?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -0,0 +1,9 @@\n+struct ConstFn<const F: fn()>;\n+//~^ ERROR const generics are unstable\n+//~^^ ERROR use of function pointers as const generic arguments are unstable\n+\n+struct ConstPtr<const P: *const u32>;\n+//~^ ERROR const generics are unstable\n+//~^^ ERROR use of raw pointers as const generic arguments are unstable\n+\n+fn main() {}"}, {"sha": "0afaf4f8e49e62b6a0370c73aa542775cc0f2c6d", "filename": "src/test/ui/feature-gates/feature-gate-const_generics-ptr.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf3b561cea59f0063c9f51c9b058a6f2462bb31d/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr?ref=cf3b561cea59f0063c9f51c9b058a6f2462bb31d", "patch": "@@ -0,0 +1,39 @@\n+error[E0658]: const generics are unstable\n+  --> $DIR/feature-gate-const_generics-ptr.rs:1:22\n+   |\n+LL | struct ConstFn<const F: fn()>;\n+   |                      ^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+\n+error[E0658]: const generics are unstable\n+  --> $DIR/feature-gate-const_generics-ptr.rs:5:23\n+   |\n+LL | struct ConstPtr<const P: *const u32>;\n+   |                       ^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+\n+error[E0658]: use of function pointers as const generic arguments are unstable\n+  --> $DIR/feature-gate-const_generics-ptr.rs:1:25\n+   |\n+LL | struct ConstFn<const F: fn()>;\n+   |                         ^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53020\n+   = help: add `#![feature(const_compare_raw_pointers)]` to the crate attributes to enable\n+\n+error[E0658]: use of raw pointers as const generic arguments are unstable\n+  --> $DIR/feature-gate-const_generics-ptr.rs:5:26\n+   |\n+LL | struct ConstPtr<const P: *const u32>;\n+   |                          ^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/53020\n+   = help: add `#![feature(const_compare_raw_pointers)]` to the crate attributes to enable\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}