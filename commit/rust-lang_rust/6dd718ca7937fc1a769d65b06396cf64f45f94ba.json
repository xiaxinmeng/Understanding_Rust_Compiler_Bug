{"sha": "6dd718ca7937fc1a769d65b06396cf64f45f94ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZDcxOGNhNzkzN2ZjMWE3NjlkNjViMDYzOTZjZjY0ZjQ1Zjk0YmE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-14T21:30:59Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-14T21:32:10Z"}, "message": "Use heuristics for capitalization warning in suggestions", "tree": {"sha": "08b198ddeab20cb3d535877236d48a8a83f7deed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08b198ddeab20cb3d535877236d48a8a83f7deed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dd718ca7937fc1a769d65b06396cf64f45f94ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dd718ca7937fc1a769d65b06396cf64f45f94ba", "html_url": "https://github.com/rust-lang/rust/commit/6dd718ca7937fc1a769d65b06396cf64f45f94ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dd718ca7937fc1a769d65b06396cf64f45f94ba/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "html_url": "https://github.com/rust-lang/rust/commit/4bb771615e194e64d0fc9cd97c1cdcc4972a1771"}], "stats": {"total": 61, "additions": 37, "deletions": 24}, "files": [{"sha": "d02201d5321c79747a8abcb5a47b2d923bf66053", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -13,7 +13,7 @@ use syntax_pos::{SourceFile, Span, MultiSpan};\n \n use crate::{\n     Level, CodeSuggestion, Diagnostic, SubDiagnostic,\n-    SuggestionStyle, SourceMapperDyn, DiagnosticId,\n+    SuggestionStyle, SourceMapper, SourceMapperDyn, DiagnosticId,\n };\n use crate::Level::Error;\n use crate::snippet::{Annotation, AnnotationType, Line, MultilineAnnotation, StyledString, Style};\n@@ -239,11 +239,11 @@ pub trait Emitter {\n                     format!(\n                         \"help: {}{}: `{}`\",\n                         sugg.msg,\n-                        if self.source_map().as_ref().map(|sm| substitution.to_lowercase() == sm\n-                            .span_to_snippet(sugg.substitutions[0].parts[0].span)\n-                            .unwrap()\n-                            .to_lowercase()).unwrap_or(false)\n-                        {\n+                        if self.source_map().map(|sm| is_case_difference(\n+                            &**sm,\n+                            substitution,\n+                            sugg.substitutions[0].parts[0].span,\n+                        )).unwrap_or(false) {\n                             \" (notice the capitalization)\"\n                         } else {\n                             \"\"\n@@ -2058,3 +2058,18 @@ impl<'a> Drop for WritableDst<'a> {\n         }\n     }\n }\n+\n+/// Whether the original and suggested code are visually similar enough to warrant extra wording.\n+pub fn is_case_difference(sm: &dyn SourceMapper, suggested: &str, sp: Span) -> bool {\n+    // FIXME: this should probably be extended to also account for `FO0` \u2192 `FOO` and unicode.\n+    let found = sm.span_to_snippet(sp).unwrap();\n+    let ascii_confusables = &['c', 'f', 'i', 'k', 'o', 's', 'u', 'v', 'w', 'x', 'y', 'z'];\n+    // There are ASCII chars that are confusable (above) and differ in capitalization:\n+    let confusable = found.chars().zip(suggested.chars()).any(|(f, s)| {\n+        (ascii_confusables.contains(&f) || ascii_confusables.contains(&s)) && f != s\n+    });\n+    confusable && found.to_lowercase() == suggested.to_lowercase()\n+            // FIXME: We sometimes suggest the same thing we already have, which is a\n+            //        bug, but be defensive against that here.\n+            && found != suggested\n+}"}, {"sha": "63df052a225041095d263a75ae11e51d45dd33f9", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -13,7 +13,7 @@ pub use emitter::ColorConfig;\n \n use Level::*;\n \n-use emitter::{Emitter, EmitterWriter};\n+use emitter::{Emitter, EmitterWriter, is_case_difference};\n use registry::Registry;\n \n use rustc_data_structures::sync::{self, Lrc, Lock};\n@@ -239,8 +239,7 @@ impl CodeSuggestion {\n                 prev_hi = cm.lookup_char_pos(part.span.hi());\n                 prev_line = fm.get_line(prev_hi.line - 1);\n             }\n-            let only_capitalization = buf.clone().to_lowercase()\n-                == cm.span_to_snippet(bounding_span).unwrap().to_lowercase();\n+            let only_capitalization = is_case_difference(cm, &buf, bounding_span);\n             // if the replacement already ends with a newline, don't print the next line\n             if !buf.ends_with('\\n') {\n                 push_trailing(&mut buf, prev_line.as_ref(), &prev_hi, None);\n@@ -250,7 +249,6 @@ impl CodeSuggestion {\n                 buf.pop();\n             }\n             (buf, substitution.parts, only_capitalization)\n-            \n         }).collect()\n     }\n }"}, {"sha": "65133eb1e1873e537bf01b5c55eb8d0c3d545d3e", "filename": "src/test/ui/hygiene/extern-prelude-from-opaque-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -5,7 +5,7 @@ LL |     use my_core;\n    |         ^^^^^^^\n    |         |\n    |         no `my_core` in the root\n-   |         help: a similar name exists in the module (notice the capitalization): `my_core`\n+   |         help: a similar name exists in the module: `my_core`\n \n error[E0432]: unresolved import `my_core`\n   --> $DIR/extern-prelude-from-opaque-fail.rs:7:13"}, {"sha": "1cc973d32c2d3c88d016e2e0dff9490a8255c8e2", "filename": "src/test/ui/lint/lint-group-nonstandard-style.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -41,7 +41,7 @@ error: static variable `bad` should have an upper case name\n   --> $DIR/lint-group-nonstandard-style.rs:14:16\n    |\n LL |         static bad: isize = 1;\n-   |                ^^^ help: convert the identifier to upper case (notice the capitalization): `BAD`\n+   |                ^^^ help: convert the identifier to upper case: `BAD`\n    |\n note: lint level defined here\n   --> $DIR/lint-group-nonstandard-style.rs:10:14"}, {"sha": "40e5a736a8e567470dacadabfb05eba695e86f5e", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -2,7 +2,7 @@ error: constant in pattern `a` should have an upper case name\n   --> $DIR/lint-lowercase-static-const-pattern.rs:11:13\n    |\n LL |         (0, a) => 0,\n-   |             ^ help: convert the identifier to upper case (notice the capitalization): `A`\n+   |             ^ help: convert the identifier to upper case: `A`\n    |\n note: lint level defined here\n   --> $DIR/lint-lowercase-static-const-pattern.rs:4:9\n@@ -14,7 +14,7 @@ error: constant in pattern `aha` should have an upper case name\n   --> $DIR/lint-lowercase-static-const-pattern.rs:26:13\n    |\n LL |         (0, aha) => 0,\n-   |             ^^^ help: convert the identifier to upper case (notice the capitalization): `AHA`\n+   |             ^^^ help: convert the identifier to upper case: `AHA`\n \n error: constant in pattern `not_okay` should have an upper case name\n   --> $DIR/lint-lowercase-static-const-pattern.rs:40:13"}, {"sha": "177f8c8fe9b63d9fc0d1ebef802e65e6962722c6", "filename": "src/test/ui/lint/lint-non-camel-case-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -38,7 +38,7 @@ error: variant `bar` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:22:5\n    |\n LL |     bar\n-   |     ^^^ help: convert the identifier to upper camel case (notice the capitalization): `Bar`\n+   |     ^^^ help: convert the identifier to upper camel case: `Bar`\n \n error: trait `foo6` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:25:7\n@@ -50,7 +50,7 @@ error: type parameter `ty` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:29:6\n    |\n LL | fn f<ty>(_: ty) {}\n-   |      ^^ help: convert the identifier to upper camel case (notice the capitalization): `Ty`\n+   |      ^^ help: convert the identifier to upper camel case: `Ty`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "244522acf1f80031b920c5fb53d3764a923b03ba", "filename": "src/test/ui/lint/lint-non-snake-case-functions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -26,7 +26,7 @@ error: method `render_HTML` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:17:8\n    |\n LL |     fn render_HTML() {}\n-   |        ^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `render_html`\n+   |        ^^^^^^^^^^^ help: convert the identifier to snake case: `render_html`\n \n error: trait method `ABC` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:22:8"}, {"sha": "ceb83d08f27779d61a971ec786b74c31516a62c6", "filename": "src/test/ui/lint/lint-non-uppercase-statics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -14,7 +14,7 @@ error: static variable `bar` should have an upper case name\n   --> $DIR/lint-non-uppercase-statics.rs:6:12\n    |\n LL | static mut bar: isize = 1;\n-   |            ^^^ help: convert the identifier to upper case (notice the capitalization): `BAR`\n+   |            ^^^ help: convert the identifier to upper case: `BAR`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f614d5d71f88cdc0afcfa02e7082e02cf10873b6", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -39,7 +39,7 @@ error: variable `Test` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:18:9\n    |\n LL |     let Test: usize = 0;\n-   |         ^^^^ help: convert the identifier to snake case (notice the capitalization): `test`\n+   |         ^^^^ help: convert the identifier to snake case: `test`\n \n error: variable `Foo` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:22:9"}, {"sha": "d9a28e63dce8bda73e8653b06778158d4601ba10", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -8,7 +8,7 @@ LL |         handle: Handle\n    |                 ^^^^^^\n    |                 |\n    |                 did you mean `Handle { /* fields */ }`?\n-   |                 help: a local variable with a similar name exists (notice the capitalization): `handle`\n+   |                 help: a local variable with a similar name exists: `handle`\n \n error: aborting due to previous error\n "}, {"sha": "a94ea1e79bc5199afe75779d024cf0f59551ff8d", "filename": "src/test/ui/test-attrs/inaccessible-test-modules.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -5,7 +5,7 @@ LL | use main as x;\n    |     ----^^^^^\n    |     |\n    |     no `main` in the root\n-   |     help: a similar name exists in the module (notice the capitalization): `main`\n+   |     help: a similar name exists in the module: `main`\n \n error[E0432]: unresolved import `test`\n   --> $DIR/inaccessible-test-modules.rs:6:5\n@@ -14,7 +14,7 @@ LL | use test as y;\n    |     ----^^^^^\n    |     |\n    |     no `test` in the root\n-   |     help: a similar name exists in the module (notice the capitalization): `test`\n+   |     help: a similar name exists in the module: `test`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4a06cd777d49e18b4f962cb0c9657a293ba236a7", "filename": "src/test/ui/traits/trait-impl-for-module.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-for-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-for-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-for-module.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -2,7 +2,7 @@ error[E0573]: expected type, found module `a`\n   --> $DIR/trait-impl-for-module.rs:7:12\n    |\n LL | impl A for a {\n-   |            ^ help: a trait with a similar name exists (notice the capitalization): `A`\n+   |            ^ help: a trait with a similar name exists: `A`\n \n error: aborting due to previous error\n "}, {"sha": "56de63da4f979144e2a6aa9869423fc08b2bef65", "filename": "src/test/ui/utf8_idents.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Futf8_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6dd718ca7937fc1a769d65b06396cf64f45f94ba/src%2Ftest%2Fui%2Futf8_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Futf8_idents.stderr?ref=6dd718ca7937fc1a769d65b06396cf64f45f94ba", "patch": "@@ -38,7 +38,7 @@ warning: type parameter `\u03b3` should have an upper camel case name\n   --> $DIR/utf8_idents.rs:3:5\n    |\n LL |     \u03b3\n-   |     ^ help: convert the identifier to upper camel case (notice the capitalization): `\u0393`\n+   |     ^ help: convert the identifier to upper camel case: `\u0393`\n    |\n    = note: `#[warn(non_camel_case_types)]` on by default\n "}]}