{"sha": "ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjOGJiNDU2MjQxZWY3NWY0OWEyMjMyN2Q1YWNmYTZlMTgzMmE5Yjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-17T21:49:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-17T21:49:51Z"}, "message": "Auto merge of #38279 - KalitaAlexey:issue-8521, r=jseyfried\n\nmacros: allow a `path` fragment to be parsed as a type parameter bound\n\nAllow a `path` fragment to be parsed as a type parameter bound.\nFixes #8521.", "tree": {"sha": "f46461d02c2df43a49c66c83bed541103adc2875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f46461d02c2df43a49c66c83bed541103adc2875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "html_url": "https://github.com/rust-lang/rust/commit/ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a008cccaabc8b3fe65ccf5868b9d16319c9ac58", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a008cccaabc8b3fe65ccf5868b9d16319c9ac58", "html_url": "https://github.com/rust-lang/rust/commit/4a008cccaabc8b3fe65ccf5868b9d16319c9ac58"}, {"sha": "12a6cf1123890fcc7ee4934422e4d344c5857923", "url": "https://api.github.com/repos/rust-lang/rust/commits/12a6cf1123890fcc7ee4934422e4d344c5857923", "html_url": "https://github.com/rust-lang/rust/commit/12a6cf1123890fcc7ee4934422e4d344c5857923"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "a1d4ad9d629c9f973cfaafc84187c63deac0eff2", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "patch": "@@ -4174,7 +4174,7 @@ impl<'a> Parser<'a> {\n                     }));\n                     self.bump();\n                 }\n-                token::ModSep | token::Ident(..) => {\n+                _ if self.token.is_path_start() || self.token.is_keyword(keywords::For) => {\n                     let poly_trait_ref = self.parse_poly_trait_ref()?;\n                     let modifier = if ate_question {\n                         TraitBoundModifier::Maybe"}, {"sha": "ce362c4bcd1e1d9aa36a2449b893cf225f7584ee", "filename": "src/test/run-pass/issue-8521.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Ftest%2Frun-pass%2Fissue-8521.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Ftest%2Frun-pass%2Fissue-8521.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8521.rs?ref=ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo1 {}\n+\n+trait A {}\n+\n+macro_rules! foo1(($t:path) => {\n+    impl<T: $t> Foo1 for T {}\n+});\n+\n+foo1!(A);\n+\n+trait Foo2 {}\n+\n+trait B<T> {}\n+\n+#[allow(unused)]\n+struct C {}\n+\n+macro_rules! foo2(($t:path) => {\n+    impl<T: $t> Foo2 for T {}\n+});\n+\n+foo2!(B<C>);\n+\n+fn main() {}"}, {"sha": "781ea30ed8bc33750aed3d829bdde1f696ac200b", "filename": "src/test/ui/macros/macro_path_as_generic_bound.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.rs?ref=ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {}\n+\n+macro_rules! foo(($t:path) => {\n+    impl<T: $t> Foo for T {}\n+});\n+\n+foo!(m::m2::A);\n+\n+fn main() {}"}, {"sha": "96635032105a8d6791bab9cd79d2f78a1c82e195", "filename": "src/test/ui/macros/macro_path_as_generic_bound.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec8bb456241ef75f49a22327d5acfa6e1832a9b7/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr?ref=ec8bb456241ef75f49a22327d5acfa6e1832a9b7", "patch": "@@ -0,0 +1,11 @@\n+error[E0433]: failed to resolve. Use of undeclared type or module `m`\n+  --> $DIR/macro_path_as_generic_bound.rs:17:6\n+   |\n+17 | foo!(m::m2::A);\n+   | -----^^^^^^^^--\n+   | |    |\n+   | |    Use of undeclared type or module `m`\n+   | in this macro invocation\n+\n+error: cannot continue compilation due to previous error\n+"}]}