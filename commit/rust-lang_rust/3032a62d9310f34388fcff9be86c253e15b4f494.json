{"sha": "3032a62d9310f34388fcff9be86c253e15b4f494", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMzJhNjJkOTMxMGYzNDM4OGZjZmY5YmU4NmMyNTNlMTViNGY0OTQ=", "commit": {"author": {"name": "Miguel Raz Guzm\u00e1n Macedo", "email": "miguelraz@ciencias.unam.mx", "date": "2021-06-07T17:56:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-07T17:56:15Z"}, "message": "add helloworld to README (#134)\n\n* add helloworld to README", "tree": {"sha": "a79c2c646c5993334d23e2bff71a49e78c31dbeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a79c2c646c5993334d23e2bff71a49e78c31dbeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3032a62d9310f34388fcff9be86c253e15b4f494", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvl2/CRBK7hj4Ov3rIwAAT7oIAExcoKHy8f9/s5+t2zeQpmeK\n+UWTVAa5AeKpAOvPJ59QGVJCd7TWbnOAyTb60LllY65RVZ2d8/xiWO8zCAewTugb\nVFptjetdGRzyBuo0/NGFb+THN/EkQG0nmmSoRPfyEo62/c+TTwbxGHghl8wpXxBg\n4DVQ3dlYVgB7REXcrK25WSmqq8DegmuOpOzmp3sts9v+j4GXfGOcdiHOrhBkM3Uj\nd0frCHz9gP/TTRKMlXN6iTORq+JXXY3UzzlecxYuEi/IWc3OnQdBGp69G3izSz3c\nGv973Q/F0QGytvkJVVsF9iA1pcFgsO2l/DSrmDDnlyjg3tqpTIk9TQuGdcOgO7c=\n=Kb2M\n-----END PGP SIGNATURE-----\n", "payload": "tree a79c2c646c5993334d23e2bff71a49e78c31dbeb\nparent 4311c0660edfb8c124b4e04873d8291bcf0fb7c0\nauthor Miguel Raz Guzm\u00e1n Macedo <miguelraz@ciencias.unam.mx> 1623088575 -0500\ncommitter GitHub <noreply@github.com> 1623088575 -0700\n\nadd helloworld to README (#134)\n\n* add helloworld to README"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3032a62d9310f34388fcff9be86c253e15b4f494", "html_url": "https://github.com/rust-lang/rust/commit/3032a62d9310f34388fcff9be86c253e15b4f494", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3032a62d9310f34388fcff9be86c253e15b4f494/comments", "author": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4311c0660edfb8c124b4e04873d8291bcf0fb7c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4311c0660edfb8c124b4e04873d8291bcf0fb7c0", "html_url": "https://github.com/rust-lang/rust/commit/4311c0660edfb8c124b4e04873d8291bcf0fb7c0"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "c6a48c467b704c72575d581cf378de89a54810f1", "filename": "README.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3032a62d9310f34388fcff9be86c253e15b4f494/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/3032a62d9310f34388fcff9be86c253e15b4f494/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=3032a62d9310f34388fcff9be86c253e15b4f494", "patch": "@@ -12,6 +12,40 @@ We can also be found on [Zulip][zulip-project-portable-simd].\n \n If you are interested in support for a specific architecture, you may want [stdarch] instead.\n \n+## Hello World\n+\n+Now we're gonna dip our toes into this world with a small SIMD \"Hello, World!\" example. Make sure your compiler is up to date and using `nightly`. We can do that by running \n+\n+```bash\n+rustup update -- nightly\n+```\n+\n+or by setting up `rustup default nightly` or else with `cargo +nihgtly {build,test, run}`. After updating, run \n+```bash\n+cargo new hellosimd\n+```\n+to create a new crate. Edit `hellosimd/Cargo.toml` to be \n+```toml\n+[package]\n+name = \"hellosimd\"\n+version = \"0.1.0\"\n+edition = \"2018\"\n+[dependencies]\n+core_simd = { git = \"https://github.com/rust-lang/stdsimd\" }\n+```\n+\n+and finally write this in `src/main.rs`:\n+```rust\n+use core_simd::*;\n+fn main() {\n+    let a = f32x4::splat(10.0);\n+    let b = f32x4::from_array([1.0, 2.0, 3.0, 4.0]);\n+    println!(\"{:?}\", a + b);\n+}\n+```\n+\n+Explanation: We import all the bindings from the crate with the first line. Then, we construct our SIMD vectors with methods like `splat` or `from_array`. Finally, we can use operators on them like `+` and the appropriate SIMD instructions will be carried out. When we run `cargo run` you should get `[11.0, 12.0, 13.0, 14.0]`.\n+\n ## Code Organization\n \n Currently the crate is organized so that each element type is a file, and then the 64-bit, 128-bit, 256-bit, and 512-bit vectors using those types are contained in said file."}]}