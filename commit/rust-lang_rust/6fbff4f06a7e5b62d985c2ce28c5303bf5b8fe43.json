{"sha": "6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYmZmNGYwNmE3ZTViNjJkOTg1YzJjZTI4YzUzMDNiZjViOGZlNDM=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-13T09:41:43Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-13T09:41:43Z"}, "message": "Ensure that attributes are spelled properly.", "tree": {"sha": "329560f4099b8b74404702637b2470a429cdce7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/329560f4099b8b74404702637b2470a429cdce7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "html_url": "https://github.com/rust-lang/rust/commit/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3c3de8abe63f738113874267dad3b92a1965ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c3de8abe63f738113874267dad3b92a1965ecd", "html_url": "https://github.com/rust-lang/rust/commit/d3c3de8abe63f738113874267dad3b92a1965ecd"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "30e922d7f4dc0714f8ddd12eeabcdb2c2bbaf438", "filename": "src/doc/book/variable-bindings.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Fdoc%2Fbook%2Fvariable-bindings.md", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Fdoc%2Fbook%2Fvariable-bindings.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fvariable-bindings.md?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -125,7 +125,7 @@ warning, but it will still print \"Hello, world!\":\n \n ```text\n    Compiling hello_world v0.0.1 (file:///home/you/projects/hello_world)\n-src/main.rs:2:9: 2:10 warning: unused variable: `x`, #[warn(unused_variable)]\n+src/main.rs:2:9: 2:10 warning: unused variable: `x`, #[warn(unused_variables)]\n    on by default\n src/main.rs:2     let x: i32;\n                       ^"}, {"sha": "460eab998c6fb473e5515ec4a444a31be66cd3e1", "filename": "src/test/run-pass-fulldeps/quote-unused-sp-no-warning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-unused-sp-no-warning.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -12,7 +12,7 @@\n // ignore-pretty: does not work well with `--test`\n \n #![feature(quote, rustc_private)]\n-#![deny(unused_variable)]\n+#![deny(unused_variables)]\n \n extern crate syntax;\n "}, {"sha": "5eb7a243acf0c242e7e43b91495eb3fe64a80f1a", "filename": "src/test/run-pass/enum-variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fenum-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fenum-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-variants.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -11,7 +11,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n enum Animal {\n     Dog (String, f64),"}, {"sha": "ad6c10611aaa053df61538e5f9e12a7e35f14415", "filename": "src/test/run-pass/fn-type-infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Ffn-type-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Ffn-type-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-type-infer.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -10,7 +10,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n pub fn main() {\n     // We should be able to type infer inside of ||s."}, {"sha": "75fd9fcb7b6d835e369504deecdc55a28e8afde0", "filename": "src/test/run-pass/generic-tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -11,7 +11,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n #![allow(unknown_features)]\n #![feature(box_syntax)]\n "}, {"sha": "ebf390cfe4fc32c530fdae15419a04e834696f28", "filename": "src/test/run-pass/issue-12660.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-12660.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-12660.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12660.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -16,7 +16,7 @@ extern crate issue12660aux;\n \n use issue12660aux::{my_fn, MyStruct};\n \n-#[allow(path_statement)]\n+#[allow(path_statements)]\n fn main() {\n     my_fn(MyStruct);\n     MyStruct;"}, {"sha": "b65a3a9ab70841b05991fd5503c2e213fd6c247d", "filename": "src/test/run-pass/issue-1451.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-1451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-1451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-1451.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -10,7 +10,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n struct T { f: extern \"Rust\" fn() }\n struct S { f: extern \"Rust\" fn() }"}, {"sha": "5d094af2149e13082526f363ba750a60589bfc92", "filename": "src/test/run-pass/issue-3878.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-3878.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-3878.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3878.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -10,7 +10,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(path_statement)]\n+#![allow(path_statements)]\n #![allow(unknown_features)]\n #![feature(box_syntax)]\n "}, {"sha": "9fb826712adc0363a780980728e283067b60e35b", "filename": "src/test/run-pass/issue-4734.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-4734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-4734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4734.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -12,7 +12,7 @@\n // `e` is a type which requires a destructor.\n \n \n-#![allow(path_statement)]\n+#![allow(path_statements)]\n \n struct A { n: isize }\n struct B;"}, {"sha": "5324ddb49e79f7e2f9c0983b48b16116da527fae", "filename": "src/test/run-pass/issue-7911.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7911.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -13,7 +13,7 @@\n // (Closes #7911) Test that we can use the same self expression\n // with different mutability in macro in two methods\n \n-#![allow(unused_variable)] // unused foobar_immut + foobar_mut\n+#![allow(unused_variables)] // unused foobar_immut + foobar_mut\n trait FooBar {\n     fn dummy(&self) { }\n }"}, {"sha": "dfa080550469abde09071ab991ffd5a075f5d82c", "filename": "src/test/run-pass/liveness-assign-imm-local-after-loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-loop.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -12,7 +12,7 @@\n \n #![allow(dead_assignment)]\n #![allow(unreachable_code)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n fn test(_cond: bool) {\n     let v: isize;"}, {"sha": "ce55c76120235fc8e61fb5612b204ca8d33a7ccf", "filename": "src/test/run-pass/long-while.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Flong-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Flong-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flong-while.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -10,7 +10,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n pub fn main() {\n     let mut i: isize = 0;"}, {"sha": "24185ffa4128fe457bf0fd71c63a1e33ca45bd6f", "filename": "src/test/run-pass/match-phi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fmatch-phi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fmatch-phi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-phi.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -11,7 +11,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n enum thing { a, b, c, }\n "}, {"sha": "4c3017c066e81b313521fc8da64cba10c9461be1", "filename": "src/test/run-pass/output-slot-variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -11,7 +11,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n #![allow(unknown_features)]\n #![feature(box_syntax)]\n "}, {"sha": "fc42fbc714c099cfbb5d27e1e1aeac7b5042b07a", "filename": "src/test/run-pass/regions-fn-subtyping.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fregions-fn-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fregions-fn-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-fn-subtyping.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -13,7 +13,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n #![allow(unknown_features)]\n \n // FIXME (#22405): Replace `Box::new` with `box` here when/if possible."}, {"sha": "bcdadb1d90d385eb4c3e0a1dc158d7e113d0f28f", "filename": "src/test/run-pass/traits-default-method-mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Ftraits-default-method-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Ftraits-default-method-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits-default-method-mut.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -11,7 +11,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n trait Foo {\n     fn foo(&self, mut v: isize) { v = 1; }"}, {"sha": "2acaff262690bb1771a3086114a39aa54944b640", "filename": "src/test/run-pass/typestate-cfg-nesting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -11,7 +11,7 @@\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n fn f() {\n     let x = 10; let mut y = 11;"}, {"sha": "c2813771b7c34499cfb15d82461d5d6e7c6bb8b0", "filename": "src/test/run-pass/unique-move-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funique-move-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funique-move-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-move-drop.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n \n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n #![allow(unknown_features)]\n #![feature(box_syntax)]\n "}, {"sha": "67eceba020c803a03a98bf297e04c3e3fff3c78a", "filename": "src/test/run-pass/unit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funit.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -10,7 +10,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n #![allow(dead_assignment)]\n \n fn f(u: ()) { return u; }"}, {"sha": "189c5cdb9b747f7aaf7c64c28f72a176455efd69", "filename": "src/test/run-pass/unreachable-code-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -10,7 +10,7 @@\n \n \n #![allow(unreachable_code)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n fn id(x: bool) -> bool { x }\n "}, {"sha": "5cb5e8c4f99cd9271053911f1750dec46f28e016", "filename": "src/test/run-pass/unreachable-code.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n \n-#![allow(path_statement)]\n+#![allow(path_statements)]\n #![allow(unreachable_code)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n fn id(x: bool) -> bool { x }\n "}, {"sha": "e4b9d14fb4b30aab6d2b5c45e85f0e2204dc5257", "filename": "src/test/run-pass/unused-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funused-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Funused-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funused-move.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -14,7 +14,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(path_statement)]\n+#![allow(path_statements)]\n #![allow(unknown_features)]\n #![feature(box_syntax)]\n "}, {"sha": "6e9e7bc24d6a028031f5f266ce4847f08cb44398", "filename": "src/test/run-pass/while-loop-constraints-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fwhile-loop-constraints-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43/src%2Ftest%2Frun-pass%2Fwhile-loop-constraints-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwhile-loop-constraints-2.rs?ref=6fbff4f06a7e5b62d985c2ce28c5303bf5b8fe43", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![allow(dead_assignment)]\n-#![allow(unused_variable)]\n+#![allow(unused_variables)]\n \n pub fn main() {\n     let mut y: isize = 42;"}]}