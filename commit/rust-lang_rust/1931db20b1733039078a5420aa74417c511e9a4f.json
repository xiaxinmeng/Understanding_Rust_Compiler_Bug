{"sha": "1931db20b1733039078a5420aa74417c511e9a4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MzFkYjIwYjE3MzMwMzkwNzhhNTQyMGFhNzQ0MTdjNTExZTlhNGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T12:42:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T12:42:40Z"}, "message": "Auto merge of #6988 - mikerite:fix-6984, r=camsteffen\n\nFix hidden variant suggestion on single variant\n\nFixes #6984\n\nchangelog: Fix hidden variant suggestion on `match_wildcard_for_single_variants`", "tree": {"sha": "396c0722538bb7a2d847e509356d72787a703b56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/396c0722538bb7a2d847e509356d72787a703b56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1931db20b1733039078a5420aa74417c511e9a4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1931db20b1733039078a5420aa74417c511e9a4f", "html_url": "https://github.com/rust-lang/rust/commit/1931db20b1733039078a5420aa74417c511e9a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1931db20b1733039078a5420aa74417c511e9a4f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72eb60a28b4cc9767987919d54fffb23f76afaee", "url": "https://api.github.com/repos/rust-lang/rust/commits/72eb60a28b4cc9767987919d54fffb23f76afaee", "html_url": "https://github.com/rust-lang/rust/commit/72eb60a28b4cc9767987919d54fffb23f76afaee"}, {"sha": "8abab5561caf0243799fba29a53e175948977ec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8abab5561caf0243799fba29a53e175948977ec2", "html_url": "https://github.com/rust-lang/rust/commit/8abab5561caf0243799fba29a53e175948977ec2"}], "stats": {"total": 77, "additions": 54, "deletions": 23}, "files": [{"sha": "b93e6b5b2e8eaa9ccf6208d887808316c27485cb", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -21,7 +21,6 @@\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n extern crate rustc_ast;\n extern crate rustc_ast_pretty;\n-extern crate rustc_attr;\n extern crate rustc_data_structures;\n extern crate rustc_driver;\n extern crate rustc_errors;"}, {"sha": "dc19805b50abdbec8ae3e04ca9b5f1426c6b4505", "filename": "clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -1,9 +1,9 @@\n+use clippy_utils::attrs::is_doc_hidden;\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::meets_msrv;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n-use rustc_ast::ast::{Attribute, FieldDef, Item, ItemKind, Variant, VariantData, VisibilityKind};\n-use rustc_attr as attr;\n+use rustc_ast::ast::{FieldDef, Item, ItemKind, Variant, VariantData, VisibilityKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_semver::RustcVersion;\n@@ -102,15 +102,7 @@ fn check_manual_non_exhaustive_enum(cx: &EarlyContext<'_>, item: &Item, variants\n     fn is_non_exhaustive_marker(variant: &Variant) -> bool {\n         matches!(variant.data, VariantData::Unit(_))\n             && variant.ident.as_str().starts_with('_')\n-            && variant.attrs.iter().any(|a| is_doc_hidden(a))\n-    }\n-\n-    fn is_doc_hidden(attr: &Attribute) -> bool {\n-        attr.has_name(sym::doc)\n-            && match attr.meta_item_list() {\n-                Some(l) => attr::list_contains_name(&l, sym::hidden),\n-                None => false,\n-            }\n+            && is_doc_hidden(&variant.attrs)\n     }\n \n     let mut markers = variants.iter().filter(|v| is_non_exhaustive_marker(v));"}, {"sha": "b13db4cd45c4b7007b91933e8691bf000c9b1bec", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -983,6 +983,11 @@ impl CommonPrefixSearcher<'a> {\n     }\n }\n \n+fn is_doc_hidden(cx: &LateContext<'_>, variant_def: &VariantDef) -> bool {\n+    let attrs = cx.tcx.get_attrs(variant_def.def_id);\n+    clippy_utils::attrs::is_doc_hidden(attrs)\n+}\n+\n #[allow(clippy::too_many_lines)]\n fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>]) {\n     let ty = cx.typeck_results().expr_ty(ex).peel_refs();\n@@ -1102,7 +1107,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n \n     match missing_variants.as_slice() {\n         [] => (),\n-        [x] if !adt_def.is_variant_list_non_exhaustive() => span_lint_and_sugg(\n+        [x] if !adt_def.is_variant_list_non_exhaustive() && !is_doc_hidden(cx, x) => span_lint_and_sugg(\n             cx,\n             MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n             wildcard_span,"}, {"sha": "d731a9fe223aba88f8746c4807ea8f86f3cca8ef", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -5,10 +5,10 @@\n // [`missing_doc`]: https://github.com/rust-lang/rust/blob/cf9cf7c923eb01146971429044f216a3ca905e06/compiler/rustc_lint/src/builtin.rs#L415\n //\n \n+use clippy_utils::attrs::is_doc_hidden;\n use clippy_utils::diagnostics::span_lint;\n use if_chain::if_chain;\n use rustc_ast::ast::{self, MetaItem, MetaItemKind};\n-use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::ty;\n@@ -111,14 +111,7 @@ impl_lint_pass!(MissingDoc => [MISSING_DOCS_IN_PRIVATE_ITEMS]);\n \n impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n     fn enter_lint_attrs(&mut self, _: &LateContext<'tcx>, attrs: &'tcx [ast::Attribute]) {\n-        let doc_hidden = self.doc_hidden()\n-            || attrs.iter().any(|attr| {\n-                attr.has_name(sym::doc)\n-                    && match attr.meta_item_list() {\n-                        None => false,\n-                        Some(l) => attr::list_contains_name(&l[..], sym::hidden),\n-                    }\n-            });\n+        let doc_hidden = self.doc_hidden() || is_doc_hidden(attrs);\n         self.doc_hidden_stack.push(doc_hidden);\n     }\n "}, {"sha": "7ec8452bf4c67a5bee04738155ff324bdb08231b", "filename": "clippy_utils/src/attrs.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/clippy_utils%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/clippy_utils%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fattrs.rs?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast::{ast, attr};\n use rustc_errors::Applicability;\n use rustc_session::Session;\n use rustc_span::sym;\n@@ -148,3 +148,13 @@ pub fn get_unique_inner_attr(sess: &Session, attrs: &[ast::Attribute], name: &'s\n pub fn is_proc_macro(sess: &Session, attrs: &[ast::Attribute]) -> bool {\n     attrs.iter().any(|attr| sess.is_proc_macro_attr(attr))\n }\n+\n+/// Return true if the attributes contain `#[doc(hidden)]`\n+pub fn is_doc_hidden(attrs: &[ast::Attribute]) -> bool {\n+    #[allow(clippy::filter_map)]\n+    attrs\n+        .iter()\n+        .filter(|attr| attr.has_name(sym::doc))\n+        .flat_map(ast::Attribute::meta_item_list)\n+        .any(|l| attr::list_contains_name(&l, sym::hidden))\n+}"}, {"sha": "31b743f7a18d73f53457e986d5572269a2746385", "filename": "tests/ui/match_wildcard_for_single_variants.fixed", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -108,4 +108,20 @@ fn main() {\n         Bar::B => (),\n         _ => (),\n     };\n+\n+    //#6984\n+    {\n+        #![allow(clippy::manual_non_exhaustive)]\n+        pub enum Enum {\n+            A,\n+            B,\n+            #[doc(hidden)]\n+            __Private,\n+        }\n+        match Enum::A {\n+            Enum::A => (),\n+            Enum::B => (),\n+            _ => (),\n+        }\n+    }\n }"}, {"sha": "d19e6ab7eb2e1ee8aa588f075550da007be81a22", "filename": "tests/ui/match_wildcard_for_single_variants.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1931db20b1733039078a5420aa74417c511e9a4f/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931db20b1733039078a5420aa74417c511e9a4f/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs?ref=1931db20b1733039078a5420aa74417c511e9a4f", "patch": "@@ -108,4 +108,20 @@ fn main() {\n         Bar::B => (),\n         _ => (),\n     };\n+\n+    //#6984\n+    {\n+        #![allow(clippy::manual_non_exhaustive)]\n+        pub enum Enum {\n+            A,\n+            B,\n+            #[doc(hidden)]\n+            __Private,\n+        }\n+        match Enum::A {\n+            Enum::A => (),\n+            Enum::B => (),\n+            _ => (),\n+        }\n+    }\n }"}]}