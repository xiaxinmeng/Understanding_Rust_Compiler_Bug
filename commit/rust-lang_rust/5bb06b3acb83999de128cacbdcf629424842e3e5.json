{"sha": "5bb06b3acb83999de128cacbdcf629424842e3e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYjA2YjNhY2I4Mzk5OWRlMTI4Y2FjYmRjZjYyOTQyNDg0MmUzZTU=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-07-29T14:56:25Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-07-29T14:56:25Z"}, "message": "code review fixes", "tree": {"sha": "603da3f29e0c8deb700404feb1369432cc1b82db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/603da3f29e0c8deb700404feb1369432cc1b82db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bb06b3acb83999de128cacbdcf629424842e3e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb06b3acb83999de128cacbdcf629424842e3e5", "html_url": "https://github.com/rust-lang/rust/commit/5bb06b3acb83999de128cacbdcf629424842e3e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bb06b3acb83999de128cacbdcf629424842e3e5/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f8b099846f3bb5cd5f17698b6e653e0271f057e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8b099846f3bb5cd5f17698b6e653e0271f057e", "html_url": "https://github.com/rust-lang/rust/commit/9f8b099846f3bb5cd5f17698b6e653e0271f057e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "97b89552cff391e0f19acb2097965f943929d4f9", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bb06b3acb83999de128cacbdcf629424842e3e5/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bb06b3acb83999de128cacbdcf629424842e3e5/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=5bb06b3acb83999de128cacbdcf629424842e3e5", "patch": "@@ -697,7 +697,7 @@ pub fn const_eval_raw_provider<'tcx>(\n                 // promoting runtime code is only allowed to error if it references broken constants\n                 // any other kind of error will be reported to the user as a deny-by-default lint\n                 _ => if let Some(p) = cid.promoted {\n-                    use crate::interpret::InvalidProgramInfo::*;\n+                    use crate::interpret::InvalidProgramInfo::ReferencedConstant;\n                     let span = tcx.promoted_mir(def_id)[p].span;\n                     if let InterpError::InvalidProgram(ReferencedConstant) = err.error {\n                         err.report_as_error("}]}