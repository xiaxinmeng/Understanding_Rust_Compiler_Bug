{"sha": "fd3b6ca508ed99004a11291ef1d2c64104102a41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkM2I2Y2E1MDhlZDk5MDA0YTExMjkxZWYxZDJjNjQxMDQxMDJhNDE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-04T05:56:31Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-04T05:56:31Z"}, "message": "Fix doctest (fixup \u0096#25900)", "tree": {"sha": "793e5ae3048db402432ab0b5a611c9bc0d301279", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/793e5ae3048db402432ab0b5a611c9bc0d301279"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd3b6ca508ed99004a11291ef1d2c64104102a41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3b6ca508ed99004a11291ef1d2c64104102a41", "html_url": "https://github.com/rust-lang/rust/commit/fd3b6ca508ed99004a11291ef1d2c64104102a41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd3b6ca508ed99004a11291ef1d2c64104102a41/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ef76142439d7ec65acc0e4e2fe56e7fa6476507", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef76142439d7ec65acc0e4e2fe56e7fa6476507", "html_url": "https://github.com/rust-lang/rust/commit/5ef76142439d7ec65acc0e4e2fe56e7fa6476507"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "d56ecb360cfed3ccd675813feaee24f0b7547518", "filename": "src/doc/reference.md", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fd3b6ca508ed99004a11291ef1d2c64104102a41/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/fd3b6ca508ed99004a11291ef1d2c64104102a41/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=fd3b6ca508ed99004a11291ef1d2c64104102a41", "patch": "@@ -3699,28 +3699,29 @@ Coercion is allowed between the following types:\n * `&mut T` to `*mut T`.\n \n * `&T` to `&U` if `T` implements `Deref<Target = U>`. For example:\n-    ```\n-    use std::ops::Deref;\n \n-    struct CharContainer {\n-        value: char\n-    }\n+```rust\n+use std::ops::Deref;\n \n-    impl Deref for CharContainer {\n-        type Target = char;\n+struct CharContainer {\n+    value: char\n+}\n \n-        fn deref<'a>(&'a self) -> &'a char {\n-            &self.value\n-        }\n+impl Deref for CharContainer {\n+    type Target = char;\n+\n+    fn deref<'a>(&'a self) -> &'a char {\n+        &self.value\n     }\n+}\n \n-    fn foo(arg: &char) {}\n+fn foo(arg: &char) {}\n \n-    fn main() {\n-        let x = &mut CharContainer { value: 'y' };\n-        foo(x); //&mut CharContainer is coerced to &char.\n-    }\n-    ```\n+fn main() {\n+    let x = &mut CharContainer { value: 'y' };\n+    foo(x); //&mut CharContainer is coerced to &char.\n+}\n+```\n * `&mut T` to `&mut U` if `T` implements `DerefMut<Target = U>`.\n \n * TyCtor(`T`) to TyCtor(coerce_inner(`T`)), where TyCtor(`T`) is one of"}]}