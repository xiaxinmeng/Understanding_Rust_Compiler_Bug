{"sha": "33cacde04b31d4fd71eae7432b92564aade43366", "node_id": "C_kwDOAAsO6NoAKDMzY2FjZGUwNGIzMWQ0ZmQ3MWVhZTc0MzJiOTI1NjRhYWRlNDMzNjY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-12T09:26:19Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-12T09:26:19Z"}, "message": "Fix active parameter analysis", "tree": {"sha": "26f7a79830775209217b4e107acc414f4a6577b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26f7a79830775209217b4e107acc414f4a6577b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33cacde04b31d4fd71eae7432b92564aade43366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33cacde04b31d4fd71eae7432b92564aade43366", "html_url": "https://github.com/rust-lang/rust/commit/33cacde04b31d4fd71eae7432b92564aade43366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33cacde04b31d4fd71eae7432b92564aade43366/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1be24e0899c7469919f9a2e07d362ad19a374598", "url": "https://api.github.com/repos/rust-lang/rust/commits/1be24e0899c7469919f9a2e07d362ad19a374598", "html_url": "https://github.com/rust-lang/rust/commit/1be24e0899c7469919f9a2e07d362ad19a374598"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "036fc98629a27bc90c22e4098373f4e1610702c4", "filename": "crates/ide-completion/src/context/analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33cacde04b31d4fd71eae7432b92564aade43366/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cacde04b31d4fd71eae7432b92564aade43366/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs?ref=33cacde04b31d4fd71eae7432b92564aade43366", "patch": "@@ -380,7 +380,7 @@ fn expected_type_and_name(\n                         sema,\n                        token.clone(),\n                     ).map(|ap| {\n-                        let name = ap.ident().map(NameOrNameRef::Name);\n+                        let name = dbg!(ap.ident().map(NameOrNameRef::Name));\n \n                         let ty = strip_refs(ap.ty);\n                         (Some(ty), name)"}, {"sha": "1dda6892cec41d9bfb0dc6da3e24450a2ee51ec0", "filename": "crates/ide-db/src/active_parameter.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/33cacde04b31d4fd71eae7432b92564aade43366/crates%2Fide-db%2Fsrc%2Factive_parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cacde04b31d4fd71eae7432b92564aade43366/crates%2Fide-db%2Fsrc%2Factive_parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Factive_parameter.rs?ref=33cacde04b31d4fd71eae7432b92564aade43366", "patch": "@@ -3,8 +3,9 @@\n use either::Either;\n use hir::{Semantics, Type};\n use syntax::{\n+    algo::non_trivia_sibling,\n     ast::{self, HasArgList, HasName},\n-    AstNode, SyntaxToken,\n+    AstNode, Direction, SyntaxToken, TextRange,\n };\n \n use crate::RootDatabase;\n@@ -66,11 +67,24 @@ pub fn callable_for_node(\n         ast::CallableExpr::MethodCall(call) => sema.resolve_method_call_as_callable(call),\n     }?;\n     let active_param = if let Some(arg_list) = calling_node.arg_list() {\n-        let param = arg_list\n+        let account_for_ws = |arg: &ast::Expr| {\n+            let node = arg.syntax().clone();\n+            let left = non_trivia_sibling(node.clone().into(), Direction::Prev)\n+                .and_then(|it| it.into_token())?\n+                .text_range();\n+            let right = non_trivia_sibling(node.into(), Direction::Next)\n+                .and_then(|it| it.into_token())?\n+                .text_range();\n+            Some(TextRange::new(left.end(), right.start()))\n+        };\n+        arg_list\n             .args()\n-            .take_while(|arg| arg.syntax().text_range().end() <= token.text_range().start())\n-            .count();\n-        Some(param)\n+            .position(|arg| {\n+                account_for_ws(&arg)\n+                    .unwrap_or(arg.syntax().text_range())\n+                    .contains(token.text_range().start())\n+            })\n+            .or(Some(0))\n     } else {\n         None\n     };"}]}