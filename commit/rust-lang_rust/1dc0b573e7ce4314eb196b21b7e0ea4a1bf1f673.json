{"sha": "1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYzBiNTczZTdjZTQzMTRlYjE5NmIyMWI3ZTBlYTRhMWJmMWY2NzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-22T12:34:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-22T12:34:56Z"}, "message": "Auto merge of #45198 - oli-obk:fmt_args, r=sfackler\n\nPrevent fmt::Arguments from being shared across threads\n\nFixes #45197\n\nThis is a **breaking change**! Without doing this it's very easy to create race conditions.\n\nThere's probably a way to do this without breaking valid use cases, but it would require quite an overhaul of the formatting machinery.", "tree": {"sha": "fd4f109ad215812a8693738ebbc4ea373ab867f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd4f109ad215812a8693738ebbc4ea373ab867f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "html_url": "https://github.com/rust-lang/rust/commit/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3755fe95556e5db39ebe5963d9171f3d3ea9511a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3755fe95556e5db39ebe5963d9171f3d3ea9511a", "html_url": "https://github.com/rust-lang/rust/commit/3755fe95556e5db39ebe5963d9171f3d3ea9511a"}, {"sha": "dc7de37d995e5922ce3b016c5cc01f5fcd326570", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc7de37d995e5922ce3b016c5cc01f5fcd326570", "html_url": "https://github.com/rust-lang/rust/commit/dc7de37d995e5922ce3b016c5cc01f5fcd326570"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "897222747f5e64c65afa44b7af2936f647988fc2", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "patch": "@@ -261,6 +261,14 @@ pub struct Formatter<'a> {\n \n struct Void {\n     _priv: (),\n+    /// Erases all oibits, because `Void` erases the type of the object that\n+    /// will be used to produce formatted output. Since we do not know what\n+    /// oibits the real types have (and they can have any or none), we need to\n+    /// take the most conservative approach and forbid all oibits.\n+    ///\n+    /// It was added after #45197 showed that one could share a `!Sync`\n+    /// object across threads by passing it into `format_args!`.\n+    _oibit_remover: PhantomData<*mut Fn()>,\n }\n \n /// This struct represents the generic \"argument\" which is taken by the Xprintf"}, {"sha": "bb4f9dfffc754e26abf73b7a400eda238242ac59", "filename": "src/test/ui/fmt/send-sync.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/src%2Ftest%2Fui%2Ffmt%2Fsend-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/src%2Ftest%2Fui%2Ffmt%2Fsend-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fsend-sync.rs?ref=1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn send<T: Send>(_: T) {}\n+fn sync<T: Sync>(_: T) {}\n+\n+fn main() {\n+    // `Cell` is not `Sync`, so `&Cell` is neither `Sync` nor `Send`,\n+    // `std::fmt::Arguments` used to forget this...\n+    let c = std::cell::Cell::new(42);\n+    send(format_args!(\"{:?}\", c));\n+    sync(format_args!(\"{:?}\", c));\n+}"}, {"sha": "1ec53d220e963c0f436fb97e638285051ec0958a", "filename": "src/test/ui/fmt/send-sync.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/src%2Ftest%2Fui%2Ffmt%2Fsend-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673/src%2Ftest%2Fui%2Ffmt%2Fsend-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fsend-sync.stderr?ref=1dc0b573e7ce4314eb196b21b7e0ea4a1bf1f673", "patch": "@@ -0,0 +1,34 @@\n+error[E0277]: the trait bound `*mut std::ops::Fn() + 'static: std::marker::Sync` is not satisfied in `[std::fmt::ArgumentV1<'_>]`\n+  --> $DIR/send-sync.rs:18:5\n+   |\n+18 |     send(format_args!(\"{:?}\", c));\n+   |     ^^^^ `*mut std::ops::Fn() + 'static` cannot be shared between threads safely\n+   |\n+   = help: within `[std::fmt::ArgumentV1<'_>]`, the trait `std::marker::Sync` is not implemented for `*mut std::ops::Fn() + 'static`\n+   = note: required because it appears within the type `std::marker::PhantomData<*mut std::ops::Fn() + 'static>`\n+   = note: required because it appears within the type `core::fmt::Void`\n+   = note: required because it appears within the type `&core::fmt::Void`\n+   = note: required because it appears within the type `std::fmt::ArgumentV1<'_>`\n+   = note: required because it appears within the type `[std::fmt::ArgumentV1<'_>]`\n+   = note: required because of the requirements on the impl of `std::marker::Send` for `&[std::fmt::ArgumentV1<'_>]`\n+   = note: required because it appears within the type `std::fmt::Arguments<'_>`\n+   = note: required by `send`\n+\n+error[E0277]: the trait bound `*mut std::ops::Fn() + 'static: std::marker::Sync` is not satisfied in `std::fmt::Arguments<'_>`\n+  --> $DIR/send-sync.rs:19:5\n+   |\n+19 |     sync(format_args!(\"{:?}\", c));\n+   |     ^^^^ `*mut std::ops::Fn() + 'static` cannot be shared between threads safely\n+   |\n+   = help: within `std::fmt::Arguments<'_>`, the trait `std::marker::Sync` is not implemented for `*mut std::ops::Fn() + 'static`\n+   = note: required because it appears within the type `std::marker::PhantomData<*mut std::ops::Fn() + 'static>`\n+   = note: required because it appears within the type `core::fmt::Void`\n+   = note: required because it appears within the type `&core::fmt::Void`\n+   = note: required because it appears within the type `std::fmt::ArgumentV1<'_>`\n+   = note: required because it appears within the type `[std::fmt::ArgumentV1<'_>]`\n+   = note: required because it appears within the type `&[std::fmt::ArgumentV1<'_>]`\n+   = note: required because it appears within the type `std::fmt::Arguments<'_>`\n+   = note: required by `sync`\n+\n+error: aborting due to 2 previous errors\n+"}]}