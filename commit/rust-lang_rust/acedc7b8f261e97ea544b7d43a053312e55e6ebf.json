{"sha": "acedc7b8f261e97ea544b7d43a053312e55e6ebf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZWRjN2I4ZjI2MWU5N2VhNTQ0YjdkNDNhMDUzMzEyZTU1ZTZlYmY=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T16:03:08Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:24Z"}, "message": "Move transmute_int_to_float to its own module", "tree": {"sha": "f949ce466fe9b52ced1e820d1f9cd4cfedc53b1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f949ce466fe9b52ced1e820d1f9cd4cfedc53b1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acedc7b8f261e97ea544b7d43a053312e55e6ebf", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAgACgkQHKDfKvWd\naKWahhAApjNxnTa9FPvaSmrXXW/xHOtOSQPzm+HpqYv5xmjpFTqE9i7lD01ACuSa\n5pPSfW85Cnc/eLmsnG6Q6GRPyzWD5wGAZFPaWKY+EDDDr4MVQ4bi6toE6v5kRw7b\nJVWTDCFJGbUuuN4DuYcUeJHCWc05fEJuH0EQ8ZTm37sbvY6aXNGYTpu/8emH5lE7\nHU9upSqOTZSk82pHfm0danowIZlOI8N+vgMp8CBfsEPdwWT5pC5QEM4DMGudOwQJ\nkGClMhXJmIzMETVP5i2lZI5nczQHxxTSonRDH0xPleti1ZfhDRj02IfLn+KcwHez\nJi9mL7vUv5T9BGL799TMqmyRX+AAmZ45Q/XSaCgQbUqJnfFoyzqQotCnqr8yl0kq\nEZ7hh1ODlGwqeoBnBXNzZnHqkAaB2R60z/tL4VV5NPaA1b1BjBcsBs6bg/6vcZDT\nJewd4WPHoRQ3GVuzDplTbv48GTY+zc6R0QjCOxT5TPjfk0IZKAOvGPsX5tm8DYF3\n7wjYQfXItPIr8YKiLOKO4WaVzbk66KIUE+wHwRipYcCO5gdX4L8Pm6GCaOXE1+Wu\nLfucVEiWKRBp+Z5v8eFQgtbh21do7Kl43HCgNJrLUFN1tqjli9MFh747vXSCr1G9\np2+nRq30cCNoW7E/DlUQ3/0f86ZeafF3Sa7yC5Bq5GH6MfcbhG4=\n=cSYU\n-----END PGP SIGNATURE-----", "payload": "tree f949ce466fe9b52ced1e820d1f9cd4cfedc53b1e\nparent d04ea41d1fbf8c60115bf0746fd9756ff17183c2\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612972988 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678024 +0100\n\nMove transmute_int_to_float to its own module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acedc7b8f261e97ea544b7d43a053312e55e6ebf", "html_url": "https://github.com/rust-lang/rust/commit/acedc7b8f261e97ea544b7d43a053312e55e6ebf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acedc7b8f261e97ea544b7d43a053312e55e6ebf/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "html_url": "https://github.com/rust-lang/rust/commit/d04ea41d1fbf8c60115bf0746fd9756ff17183c2"}], "stats": {"total": 76, "additions": 53, "deletions": 23}, "files": [{"sha": "6e1207abd524caadaac65536a98d9c0e4aeee4ec", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/acedc7b8f261e97ea544b7d43a053312e55e6ebf/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acedc7b8f261e97ea544b7d43a053312e55e6ebf/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=acedc7b8f261e97ea544b7d43a053312e55e6ebf", "patch": "@@ -1,6 +1,7 @@\n mod crosspointer_transmute;\n mod transmute_int_to_bool;\n mod transmute_int_to_char;\n+mod transmute_int_to_float;\n mod transmute_ptr_to_ptr;\n mod transmute_ptr_to_ref;\n mod transmute_ref_to_ref;\n@@ -385,31 +386,12 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 if triggered {\n                     return;\n                 }\n+                let triggered = transmute_int_to_float::check(cx, e, from_ty, to_ty, args, const_context);\n+                if triggered {\n+                    return;\n+                }\n \n                 match (&from_ty.kind(), &to_ty.kind()) {\n-                    (ty::Int(_) | ty::Uint(_), ty::Float(_)) if !const_context => span_lint_and_then(\n-                        cx,\n-                        TRANSMUTE_INT_TO_FLOAT,\n-                        e.span,\n-                        &format!(\"transmute from a `{}` to a `{}`\", from_ty, to_ty),\n-                        |diag| {\n-                            let arg = sugg::Sugg::hir(cx, &args[0], \"..\");\n-                            let arg = if let ty::Int(int_ty) = from_ty.kind() {\n-                                arg.as_ty(format!(\n-                                    \"u{}\",\n-                                    int_ty.bit_width().map_or_else(|| \"size\".to_string(), |v| v.to_string())\n-                                ))\n-                            } else {\n-                                arg\n-                            };\n-                            diag.span_suggestion(\n-                                e.span,\n-                                \"consider using\",\n-                                format!(\"{}::from_bits({})\", to_ty, arg.to_string()),\n-                                Applicability::Unspecified,\n-                            );\n-                        },\n-                    ),\n                     (ty::Float(float_ty), ty::Int(_) | ty::Uint(_)) if !const_context => span_lint_and_then(\n                         cx,\n                         TRANSMUTE_FLOAT_TO_INT,"}, {"sha": "564a27df562d647bdddf2f23f6c4abaafe64d7a4", "filename": "clippy_lints/src/transmute/transmute_int_to_float.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/acedc7b8f261e97ea544b7d43a053312e55e6ebf/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acedc7b8f261e97ea544b7d43a053312e55e6ebf/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_float.rs?ref=acedc7b8f261e97ea544b7d43a053312e55e6ebf", "patch": "@@ -0,0 +1,48 @@\n+use super::TRANSMUTE_INT_TO_FLOAT;\n+use crate::utils::{span_lint_and_then, sugg};\n+use rustc_errors::Applicability;\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+use rustc_middle::ty::Ty;\n+\n+/// Checks for `transmute_int_to_float` lint.\n+/// Returns `true` if it's triggered, otherwise returns `false`.\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    e: &'tcx Expr<'_>,\n+    from_ty: Ty<'tcx>,\n+    to_ty: Ty<'tcx>,\n+    args: &'tcx [Expr<'_>],\n+    const_context: bool,\n+) -> bool {\n+    match (&from_ty.kind(), &to_ty.kind()) {\n+        (ty::Int(_) | ty::Uint(_), ty::Float(_)) if !const_context => {\n+            span_lint_and_then(\n+                cx,\n+                TRANSMUTE_INT_TO_FLOAT,\n+                e.span,\n+                &format!(\"transmute from a `{}` to a `{}`\", from_ty, to_ty),\n+                |diag| {\n+                    let arg = sugg::Sugg::hir(cx, &args[0], \"..\");\n+                    let arg = if let ty::Int(int_ty) = from_ty.kind() {\n+                        arg.as_ty(format!(\n+                            \"u{}\",\n+                            int_ty.bit_width().map_or_else(|| \"size\".to_string(), |v| v.to_string())\n+                        ))\n+                    } else {\n+                        arg\n+                    };\n+                    diag.span_suggestion(\n+                        e.span,\n+                        \"consider using\",\n+                        format!(\"{}::from_bits({})\", to_ty, arg.to_string()),\n+                        Applicability::Unspecified,\n+                    );\n+                },\n+            );\n+            true\n+        },\n+        _ => false,\n+    }\n+}"}]}