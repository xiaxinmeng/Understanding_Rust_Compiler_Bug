{"sha": "503de8e229473802b92ecd120430c12f6c8b49eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwM2RlOGUyMjk0NzM4MDJiOTJlY2QxMjA0MzBjMTJmNmM4YjQ5ZWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-03T11:21:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-03T11:21:48Z"}, "message": "Add function to test completion edit", "tree": {"sha": "f3ed7492299741f22df0de4d791ec49362c67533", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3ed7492299741f22df0de4d791ec49362c67533"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503de8e229473802b92ecd120430c12f6c8b49eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503de8e229473802b92ecd120430c12f6c8b49eb", "html_url": "https://github.com/rust-lang/rust/commit/503de8e229473802b92ecd120430c12f6c8b49eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503de8e229473802b92ecd120430c12f6c8b49eb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57576ac420989070e695bac195d516a410191ad9", "url": "https://api.github.com/repos/rust-lang/rust/commits/57576ac420989070e695bac195d516a410191ad9", "html_url": "https://github.com/rust-lang/rust/commit/57576ac420989070e695bac195d516a410191ad9"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "34d061f5af07e3a4839bde174b3f385ad065702d", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/503de8e229473802b92ecd120430c12f6c8b49eb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503de8e229473802b92ecd120430c12f6c8b49eb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=503de8e229473802b92ecd120430c12f6c8b49eb", "patch": "@@ -176,7 +176,10 @@ fn complete_return(\n mod tests {\n     use expect::{expect, Expect};\n \n-    use crate::completion::{test_utils::completion_list, CompletionKind};\n+    use crate::completion::{\n+        test_utils::{check_edit, completion_list},\n+        CompletionKind,\n+    };\n \n     fn check(ra_fixture: &str, expect: Expect) {\n         let actual = completion_list(ra_fixture, CompletionKind::Keyword);\n@@ -312,6 +315,11 @@ mod tests {\n                 kw while\n             \"#]],\n         );\n+        check_edit(\n+            \"else\",\n+            r#\"fn quux() { if true { () } <|> }\"#,\n+            r#\"fn quux() { if true { () } else {$0} }\"#,\n+        );\n     }\n \n     #[test]"}, {"sha": "9c036eac7ffad0fa27517ea633d3f59b9f301c1a", "filename": "crates/ra_ide/src/completion/test_utils.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/503de8e229473802b92ecd120430c12f6c8b49eb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503de8e229473802b92ecd120430c12f6c8b49eb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs?ref=503de8e229473802b92ecd120430c12f6c8b49eb", "patch": "@@ -1,8 +1,10 @@\n //! Runs completion for testing purposes.\n \n use hir::Semantics;\n+use itertools::Itertools;\n use ra_syntax::{AstNode, NodeOrToken, SyntaxElement};\n use stdx::format_to;\n+use test_utils::assert_eq_text;\n \n use crate::{\n     completion::{completion_item::CompletionKind, CompletionConfig},\n@@ -54,6 +56,17 @@ pub(crate) fn completion_list_with_options(\n         .collect()\n }\n \n+pub(crate) fn check_edit(what: &str, ra_fixture_before: &str, ra_fixture_after: &str) {\n+    let (analysis, position) = analysis_and_position(ra_fixture_before);\n+    let completions: Vec<CompletionItem> =\n+        analysis.completions(&CompletionConfig::default(), position).unwrap().unwrap().into();\n+    let (completion,) =\n+        completions.into_iter().filter(|it| it.label() == what).collect_tuple().unwrap();\n+    let mut actual = analysis.file_text(position.file_id).unwrap().to_string();\n+    completion.text_edit().apply(&mut actual);\n+    assert_eq_text!(ra_fixture_after, &actual)\n+}\n+\n pub(crate) fn check_pattern_is_applicable(code: &str, check: fn(SyntaxElement) -> bool) {\n     let (analysis, pos) = analysis_and_position(code);\n     analysis"}]}