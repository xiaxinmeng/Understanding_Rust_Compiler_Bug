{"sha": "ecfdadcef9070951adf10e116ef768e7846b7e5c", "node_id": "C_kwDOAAsO6NoAKGVjZmRhZGNlZjkwNzA5NTFhZGYxMGUxMTZlZjc2OGU3ODQ2YjdlNWM", "commit": {"author": {"name": "the8472", "email": "the8472@users.noreply.github.com", "date": "2021-09-21T20:54:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-21T20:54:03Z"}, "message": "Rollup merge of #89113 - BoxyUwU:incr-comp-thir-act, r=lcnr\n\ndont `.ensure()` the `thir_abstract_const` query call in `mir_build`\n\nmight fix an ICE seen in #89022 (note: this PR does not close that issue) about attempting to read stolen thir. I couldn't repro the ICE but this `.ensure` seems sus anyway.\n\nr? `@lcnr`", "tree": {"sha": "bc7905d39044ab3b07d3ebba843c4f769adcaaed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc7905d39044ab3b07d3ebba843c4f769adcaaed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecfdadcef9070951adf10e116ef768e7846b7e5c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhSkZrCRBK7hj4Ov3rIwAAzlsIAC8eJBXOFEmBN2pVYUzGZNIK\ne/xuBCB59/gLMAWKWatdnwnbbwqqz1TE3+u/JFEqCvRYNXJIAbUyEBnH3GZEkUs+\nukhTPPMlKrW00pbml5OwIXVNxT23DsFbWKVN0Bz6kc0p1LvbH9OlA6BPndb7vd7b\nw3NVjVrZlZQiEeZM4MvGKewlPV05XCkTJjrbkMOdUykwa97xcwgYZGJhbylX6cdU\nAAlfk0UkTKntqEy9sIf+rcAr9ABj222fKywwHcfEUzPJAbmf+G3bMvaymVe88dgz\n3NnNuFJhyZSjAnUaXMJkuPN0NTChCcecKpP75B+8lzgfl3NuGW6LieHwJaBEdGA=\n=yRC3\n-----END PGP SIGNATURE-----\n", "payload": "tree bc7905d39044ab3b07d3ebba843c4f769adcaaed\nparent a8633ebcac7087444b6fcca67a0e55f969756e3c\nparent 5fdb9e4cf43899eaab1121a77e19b20fac1835cb\nauthor the8472 <the8472@users.noreply.github.com> 1632257643 +0200\ncommitter GitHub <noreply@github.com> 1632257643 +0200\n\nRollup merge of #89113 - BoxyUwU:incr-comp-thir-act, r=lcnr\n\ndont `.ensure()` the `thir_abstract_const` query call in `mir_build`\n\nmight fix an ICE seen in #89022 (note: this PR does not close that issue) about attempting to read stolen thir. I couldn't repro the ICE but this `.ensure` seems sus anyway.\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecfdadcef9070951adf10e116ef768e7846b7e5c", "html_url": "https://github.com/rust-lang/rust/commit/ecfdadcef9070951adf10e116ef768e7846b7e5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecfdadcef9070951adf10e116ef768e7846b7e5c/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8633ebcac7087444b6fcca67a0e55f969756e3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8633ebcac7087444b6fcca67a0e55f969756e3c", "html_url": "https://github.com/rust-lang/rust/commit/a8633ebcac7087444b6fcca67a0e55f969756e3c"}, {"sha": "5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "html_url": "https://github.com/rust-lang/rust/commit/5fdb9e4cf43899eaab1121a77e19b20fac1835cb"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "4108ad50470b711f217ecdcfe9d07b24672e10cc", "filename": "compiler/rustc_mir_build/src/build/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ecfdadcef9070951adf10e116ef768e7846b7e5c/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecfdadcef9070951adf10e116ef768e7846b7e5c/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs?ref=ecfdadcef9070951adf10e116ef768e7846b7e5c", "patch": "@@ -44,15 +44,18 @@ fn mir_build(tcx: TyCtxt<'_>, def: ty::WithOptConstParam<LocalDefId>) -> Body<'_\n     let body_owner_kind = tcx.hir().body_owner_kind(id);\n     let typeck_results = tcx.typeck_opt_const_arg(def);\n \n-    // Ensure unsafeck is ran before we steal the THIR.\n+    // Ensure unsafeck and abstract const building is ran before we steal the THIR.\n+    // We can't use `ensure()` for `thir_abstract_const` as it doesn't compute the query\n+    // if inputs are green. This can cause ICEs when calling `thir_abstract_const` after\n+    // THIR has been stolen if we haven't computed this query yet.\n     match def {\n         ty::WithOptConstParam { did, const_param_did: Some(const_param_did) } => {\n             tcx.ensure().thir_check_unsafety_for_const_arg((did, const_param_did));\n-            tcx.ensure().thir_abstract_const_of_const_arg((did, const_param_did));\n+            drop(tcx.thir_abstract_const_of_const_arg((did, const_param_did)));\n         }\n         ty::WithOptConstParam { did, const_param_did: None } => {\n             tcx.ensure().thir_check_unsafety(did);\n-            tcx.ensure().thir_abstract_const(did);\n+            drop(tcx.thir_abstract_const(did));\n         }\n     }\n "}]}