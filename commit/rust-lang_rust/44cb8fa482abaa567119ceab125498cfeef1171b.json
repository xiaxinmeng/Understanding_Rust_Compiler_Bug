{"sha": "44cb8fa482abaa567119ceab125498cfeef1171b", "node_id": "C_kwDOAAsO6NoAKDQ0Y2I4ZmE0ODJhYmFhNTY3MTE5Y2VhYjEyNTQ5OGNmZWVmMTE3MWI", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-08-06T21:36:33Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-02T16:46:07Z"}, "message": "Check lint expectations and emit lint if unfulfilled (RFC-2383)", "tree": {"sha": "a5c38e9375af1afd0545e8b7f74f236f87bb2677", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5c38e9375af1afd0545e8b7f74f236f87bb2677"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44cb8fa482abaa567119ceab125498cfeef1171b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmIfn08ACgkQ/Ny/Ka9k\n1gE9RQ//QzaO+7nz+1EnQgEEl2Yuckb2I6Vp+T5JqEjBXMh9pljTJly7AgWdhbPy\nodUBSXZc5XuZk2Os+OoLsjDOAbznJHEY3Lz0RNjekqKbZqZmjBdPmp5E1qW7BnLL\nPCGyAgAjIyQHkx9Xef1MLhcqafL4+0hSuMYrFp7iEK7lcpswh9Z4pC/5I6zkpFiG\n6KaP9Aap4jxWr0OEe7DzyGtpBoGe3vXtIHm2qT3twSJd5pXjQuP9PdmSH5HQ0Khe\nkp+L6qcxZ7t9u7b58ebJAwf+ms3wnDlxGUWRjawYY3q41duJ96G2i1lcJoE8czyi\nkA3sfo7GK53vnEz+QpDQpznCm/zRpfwppAhPeAqPsWr/gOY3zmOQDfUDU8FggLAx\ncd2uA3PQs5pk/VXZf25m6LsPWpc4t23yA+DEZJ74Xm36cHkds0dXA74gizsN8PBo\ncMnoO0+JiaVY/EXuF/E+hXdnPXGCvQR9aNprJ2PrMf062sfhA12kmtH+QLcBUmAG\nEwA7BlDfeytZGfnH0EYmMf+JKWxWNUPwqabLovtaS3OrhYwwU4qpZ6BMD9cQQQhb\nwjZ/c+kyryJTTklsAx/goEb7cGGu80BgVkuRxbUjBid3C5nPFhdxs5jCWZBtUJpF\nEcmzFxY+q2+3GNv+OOIcIrHuxjc0nvaWLJd3gy5Ljpgz8qT3yPo=\n=Jg5U\n-----END PGP SIGNATURE-----", "payload": "tree a5c38e9375af1afd0545e8b7f74f236f87bb2677\nparent 2ca9037b6154227306d9b40a87d79e691f1c9126\nauthor xFrednet <xFrednet@gmail.com> 1628285793 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1646239567 +0100\n\nCheck lint expectations and emit lint if unfulfilled (RFC-2383)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44cb8fa482abaa567119ceab125498cfeef1171b", "html_url": "https://github.com/rust-lang/rust/commit/44cb8fa482abaa567119ceab125498cfeef1171b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44cb8fa482abaa567119ceab125498cfeef1171b/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ca9037b6154227306d9b40a87d79e691f1c9126", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca9037b6154227306d9b40a87d79e691f1c9126", "html_url": "https://github.com/rust-lang/rust/commit/2ca9037b6154227306d9b40a87d79e691f1c9126"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "a0c8b3501cd560d9fa3f933aef9eee58c663b53a", "filename": "compiler/rustc_lint/src/expect.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/44cb8fa482abaa567119ceab125498cfeef1171b/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cb8fa482abaa567119ceab125498cfeef1171b/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs?ref=44cb8fa482abaa567119ceab125498cfeef1171b", "patch": "@@ -0,0 +1,48 @@\n+use crate::builtin;\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_middle::lint::struct_lint_level;\n+use rustc_middle::{lint::LintExpectation, ty::TyCtxt};\n+use rustc_session::lint::LintExpectationId;\n+use rustc_span::symbol::sym;\n+use rustc_span::MultiSpan;\n+\n+pub fn check_expectations(tcx: TyCtxt<'_>) {\n+    if !tcx.sess.features_untracked().enabled(sym::lint_reasons) {\n+        return;\n+    }\n+\n+    let fulfilled_expectations = tcx.sess.diagnostic().steal_fulfilled_expectation_ids();\n+    let lint_expectations: &FxHashMap<LintExpectationId, LintExpectation> =\n+        &tcx.lint_levels(()).lint_expectations;\n+\n+    for (id, expectation) in lint_expectations {\n+        if fulfilled_expectations.contains(id) {\n+            continue;\n+        }\n+\n+        emit_unfulfilled_expectation_lint(tcx, expectation);\n+    }\n+}\n+\n+fn emit_unfulfilled_expectation_lint(tcx: TyCtxt<'_>, expectation: &LintExpectation) {\n+    // FIXME  The current implementation doesn't cover cases where the\n+    // `unfulfilled_lint_expectations` is actually expected by another lint\n+    // expectation. This can be added here as we have the lint level of this\n+    // expectation, and we can also mark the lint expectation it would fulfill\n+    // as such. This is currently not implemented to get some early feedback\n+    // before diving deeper into this.\n+    struct_lint_level(\n+        tcx.sess,\n+        builtin::UNFULFILLED_LINT_EXPECTATIONS,\n+        expectation.emission_level,\n+        expectation.emission_level_source,\n+        Some(MultiSpan::from_span(expectation.emission_span)),\n+        |diag| {\n+            let mut diag = diag.build(\"this lint expectation is unfulfilled\");\n+            if let Some(rationale) = expectation.reason {\n+                diag.note(&rationale.as_str());\n+            }\n+            diag.emit();\n+        },\n+    );\n+}"}, {"sha": "0ac636b878e0d0bb1ad90568f4b11ae8e4cac54b", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/44cb8fa482abaa567119ceab125498cfeef1171b/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cb8fa482abaa567119ceab125498cfeef1171b/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=44cb8fa482abaa567119ceab125498cfeef1171b", "patch": "@@ -503,4 +503,7 @@ pub fn check_crate<'tcx, T: LateLintPass<'tcx>>(\n             });\n         },\n     );\n+\n+    // This check has to be run after all lints are done processing for this crate\n+    tcx.sess.time(\"check_lint_expectations\", || crate::expect::check_expectations(tcx));\n }"}, {"sha": "2dc6e9807227e536eb3c4a955f868915a15e1ce0", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/44cb8fa482abaa567119ceab125498cfeef1171b/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cb8fa482abaa567119ceab125498cfeef1171b/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=44cb8fa482abaa567119ceab125498cfeef1171b", "patch": "@@ -52,6 +52,7 @@ mod context;\n mod early;\n mod enum_intrinsics_non_enums;\n pub mod hidden_unicode_codepoints;\n+mod expect;\n mod internal;\n mod late;\n mod levels;"}]}