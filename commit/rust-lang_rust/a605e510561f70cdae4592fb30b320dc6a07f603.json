{"sha": "a605e510561f70cdae4592fb30b320dc6a07f603", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MDVlNTEwNTYxZjcwY2RhZTQ1OTJmYjMwYjMyMGRjNmEwN2Y2MDM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-07T22:39:38Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-07T22:57:37Z"}, "message": "fix clippy::needless_return: remove unneeded return statements", "tree": {"sha": "5f4659c86b525c4507fdba5d06dd01e40f3b528c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f4659c86b525c4507fdba5d06dd01e40f3b528c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a605e510561f70cdae4592fb30b320dc6a07f603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a605e510561f70cdae4592fb30b320dc6a07f603", "html_url": "https://github.com/rust-lang/rust/commit/a605e510561f70cdae4592fb30b320dc6a07f603", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a605e510561f70cdae4592fb30b320dc6a07f603/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff692ab14fec0549c3c58029d056175782c6d9c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff692ab14fec0549c3c58029d056175782c6d9c8", "html_url": "https://github.com/rust-lang/rust/commit/ff692ab14fec0549c3c58029d056175782c6d9c8"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "7ca27bf0dc15e90eb0852ef98a0c62bab1e2ba5e", "filename": "library/test/src/helpers/concurrency.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/library%2Ftest%2Fsrc%2Fhelpers%2Fconcurrency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/library%2Ftest%2Fsrc%2Fhelpers%2Fconcurrency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fhelpers%2Fconcurrency.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -4,7 +4,7 @@ use std::env;\n \n #[allow(deprecated)]\n pub fn get_concurrency() -> usize {\n-    return match env::var(\"RUST_TEST_THREADS\") {\n+    match env::var(\"RUST_TEST_THREADS\") {\n         Ok(s) => {\n             let opt_n: Option<usize> = s.parse().ok();\n             match opt_n {\n@@ -13,7 +13,7 @@ pub fn get_concurrency() -> usize {\n             }\n         }\n         Err(..) => num_cpus(),\n-    };\n+    }\n }\n \n cfg_if::cfg_if! {"}, {"sha": "9d6b15ec4af8cc34f0e4a727ccdef0bc9bdf8729", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -960,15 +960,15 @@ fn pointer_type_metadata(\n fn param_type_metadata(cx: &CodegenCx<'ll, 'tcx>, t: Ty<'tcx>) -> &'ll DIType {\n     debug!(\"param_type_metadata: {:?}\", t);\n     let name = format!(\"{:?}\", t);\n-    return unsafe {\n+    unsafe {\n         llvm::LLVMRustDIBuilderCreateBasicType(\n             DIB(cx),\n             name.as_ptr().cast(),\n             name.len(),\n             Size::ZERO.bits(),\n             DW_ATE_unsigned,\n         )\n-    };\n+    }\n }\n \n pub fn compile_unit_metadata("}, {"sha": "2d4c1e5d050baa160271b2c135b243289b3c1912", "filename": "src/librustc_infer/infer/region_constraints/leak_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -288,9 +288,9 @@ impl<'me, 'tcx> LeakCheck<'me, 'tcx> {\n     ) -> TypeError<'tcx> {\n         debug!(\"error: placeholder={:?}, other_region={:?}\", placeholder, other_region);\n         if self.overly_polymorphic {\n-            return TypeError::RegionsOverlyPolymorphic(placeholder.name, other_region);\n+            TypeError::RegionsOverlyPolymorphic(placeholder.name, other_region)\n         } else {\n-            return TypeError::RegionsInsufficientlyPolymorphic(placeholder.name, other_region);\n+            TypeError::RegionsInsufficientlyPolymorphic(placeholder.name, other_region)\n         }\n     }\n }"}, {"sha": "d285449c69024574f53666e2dd04bb3b474b0d68", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -1074,7 +1074,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n             }\n             // If `ty` is a `repr(transparent)` newtype, and the non-zero-sized type is a generic\n             // argument, which after substitution, is `()`, then this branch can be hit.\n-            FfiResult::FfiUnsafe { ty, .. } if is_return_type && ty.is_unit() => return,\n+            FfiResult::FfiUnsafe { ty, .. } if is_return_type && ty.is_unit() => {}\n             FfiResult::FfiUnsafe { ty, reason, help } => {\n                 self.emit_ffi_unsafe_type_lint(ty, sp, &reason, help.as_deref());\n             }"}, {"sha": "ba74ffaa8d620f8536dda39b468ab48584061992", "filename": "src/librustc_mir/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -868,7 +868,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 }\n             }\n         }\n-        return normal_ret;\n+        normal_ret\n     }\n \n     /// Finds the span of arguments of a closure (within `maybe_closure_span`)"}, {"sha": "02896d7de357ff40524e740a303f75264bec4232", "filename": "src/librustc_mir/transform/simplify_try.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_try.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -361,7 +361,7 @@ fn optimization_applies<'tcx>(\n     }\n \n     trace!(\"SUCCESS: optimization applies!\");\n-    return true;\n+    true\n }\n \n impl<'tcx> MirPass<'tcx> for SimplifyArmIdentity {"}, {"sha": "fe5370b9644fc8585cae52d04b9f9654f37cf43b", "filename": "src/librustc_span/hygiene.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_span%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_span%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fhygiene.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -1030,7 +1030,7 @@ pub fn decode_expn_id<\n         drop(expns);\n         expn_id\n     });\n-    return Ok(expn_id);\n+    Ok(expn_id)\n }\n \n // Decodes `SyntaxContext`, using the provided `HygieneDecodeContext`\n@@ -1103,7 +1103,7 @@ pub fn decode_syntax_context<\n         assert_eq!(dummy.dollar_crate_name, kw::Invalid);\n     });\n \n-    return Ok(new_ctxt);\n+    Ok(new_ctxt)\n }\n \n pub fn num_syntax_ctxts() -> usize {"}, {"sha": "4c8be8eb610103d620c97e941f1b8befca09217e", "filename": "src/librustc_traits/chalk/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_traits%2Fchalk%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_traits%2Fchalk%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk%2Fdb.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -174,7 +174,7 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n                 phantom_data: adt_def.is_phantom_data(),\n             },\n         });\n-        return struct_datum;\n+        struct_datum\n     }\n \n     fn fn_def_datum("}, {"sha": "8a6fe620af7a319758cf4d3c26960f2f908e2388", "filename": "src/librustc_typeck/mem_categorization.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_typeck%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605e510561f70cdae4592fb30b320dc6a07f603/src%2Flibrustc_typeck%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fmem_categorization.rs?ref=a605e510561f70cdae4592fb30b320dc6a07f603", "patch": "@@ -583,7 +583,7 @@ impl<'a, 'tcx> MemCategorizationContext<'a, 'tcx> {\n                 self.tcx()\n                     .sess\n                     .delay_span_bug(span, \"struct or tuple struct pattern not applied to an ADT\");\n-                return Err(());\n+                Err(())\n             }\n         }\n     }\n@@ -596,7 +596,7 @@ impl<'a, 'tcx> MemCategorizationContext<'a, 'tcx> {\n             ty::Tuple(substs) => Ok(substs.len()),\n             _ => {\n                 self.tcx().sess.delay_span_bug(span, \"tuple pattern not applied to a tuple\");\n-                return Err(());\n+                Err(())\n             }\n         }\n     }"}]}