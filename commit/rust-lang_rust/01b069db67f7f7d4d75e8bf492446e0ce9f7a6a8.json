{"sha": "01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYjA2OWRiNjdmN2Y3ZDRkNzVlOGJmNDkyNDQ2ZTBjZTlmN2E2YTg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-24T09:56:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-24T09:56:43Z"}, "message": "Rollup merge of #74703 - tmandry:issue-74047, r=oli-obk\n\nFix ICE while building MIR with type errors\n\nSee https://github.com/rust-lang/rust/issues/74047#issuecomment-663290913 for background. Replacing a binding with `PatKind::Wild` (introduced in #51789 and later refactored in #67439) caused an ICE downstream while building MIR.\n\nI noticed that taking this code out no longer triggers the ICEs it was added to prevent. I'm not sure what else changed, or if this change is _correct_, but it does seem to be passing ui tests at least.\n\nr? @oli-obk\ncc @estebank\n\nFixes #74047.", "tree": {"sha": "3539d0414fb1dd51e6525cfd37351142b4caf4ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3539d0414fb1dd51e6525cfd37351142b4caf4ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGrBcCRBK7hj4Ov3rIwAAdHIIAKbhdHySVg5pJk7r5FmhVrV/\nwWq8f/QdwlyR9NZ3zao+TdTs19iRSpAyxsLd6M/VrN6VtKDPX1Guol1oMxLg3Sd9\nh2Z9lVsn6S6pK0Qfdi8+tuGAjcUNR+KRi+8cyuz+AkRFlSdqIMncwJz1iczEdS7I\nBXlgBR2vxkMvr4cufDcFrK2W7u3Idg6KJDtPs6Qk81/PzCZ3G+1ezAXqRdnBlsBq\nttHKT4hCjhgWPnv6+R9CgcBkzzrLbhVAw38GIQ/Zc4PKGC5gVF2PaDqQJzv2CvJw\nWiyxwYIg1jq09aCVjHaRC/HQcF/FfRWTVS6n3J/pjuXrJYU3XRPUwnRw2lFOqAE=\n=uKrQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3539d0414fb1dd51e6525cfd37351142b4caf4ef\nparent 2406c932d718a4f2b84e4c76484caf90c9c45268\nparent 62e75a1f221947b4f5f8adba5992b68e6a0d3f42\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1595584603 +0900\ncommitter GitHub <noreply@github.com> 1595584603 +0900\n\nRollup merge of #74703 - tmandry:issue-74047, r=oli-obk\n\nFix ICE while building MIR with type errors\n\nSee https://github.com/rust-lang/rust/issues/74047#issuecomment-663290913 for background. Replacing a binding with `PatKind::Wild` (introduced in #51789 and later refactored in #67439) caused an ICE downstream while building MIR.\n\nI noticed that taking this code out no longer triggers the ICEs it was added to prevent. I'm not sure what else changed, or if this change is _correct_, but it does seem to be passing ui tests at least.\n\nr? @oli-obk\ncc @estebank\n\nFixes #74047.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "html_url": "https://github.com/rust-lang/rust/commit/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2406c932d718a4f2b84e4c76484caf90c9c45268", "url": "https://api.github.com/repos/rust-lang/rust/commits/2406c932d718a4f2b84e4c76484caf90c9c45268", "html_url": "https://github.com/rust-lang/rust/commit/2406c932d718a4f2b84e4c76484caf90c9c45268"}, {"sha": "62e75a1f221947b4f5f8adba5992b68e6a0d3f42", "url": "https://api.github.com/repos/rust-lang/rust/commits/62e75a1f221947b4f5f8adba5992b68e6a0d3f42", "html_url": "https://github.com/rust-lang/rust/commit/62e75a1f221947b4f5f8adba5992b68e6a0d3f42"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "a5c87bc963f49bd84232eccadbd88c8789c6be01", "filename": "src/librustc_mir_build/hair/pattern/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs?ref=01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "patch": "@@ -509,11 +509,6 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n     fn lower_pattern_unadjusted(&mut self, pat: &'tcx hir::Pat<'tcx>) -> Pat<'tcx> {\n         let mut ty = self.typeck_results.node_type(pat.hir_id);\n \n-        if let ty::Error(_) = ty.kind {\n-            // Avoid ICEs (e.g., #50577 and #50585).\n-            return Pat { span: pat.span, ty, kind: Box::new(PatKind::Wild) };\n-        }\n-\n         let kind = match pat.kind {\n             hir::PatKind::Wild => PatKind::Wild,\n "}, {"sha": "2e4f3e675c3b1bcd6b50bd44c70dbf64044faf2e", "filename": "src/test/ui/issue-74047.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/src%2Ftest%2Fui%2Fissue-74047.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/src%2Ftest%2Fui%2Fissue-74047.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-74047.rs?ref=01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "patch": "@@ -0,0 +1,17 @@\n+// edition:2018\n+\n+use std::convert::{TryFrom, TryInto};\n+use std::io;\n+\n+pub struct MyStream;\n+pub struct OtherStream;\n+\n+pub async fn connect() -> io::Result<MyStream> {\n+    let stream: MyStream = OtherStream.try_into()?;\n+    Ok(stream)\n+}\n+\n+impl TryFrom<OtherStream> for MyStream {}\n+//~^ ERROR: missing\n+\n+fn main() {}"}, {"sha": "6f477c77cedbd406f3125d8e09bf8532c20ffc4d", "filename": "src/test/ui/issue-74047.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/src%2Ftest%2Fui%2Fissue-74047.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8/src%2Ftest%2Fui%2Fissue-74047.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-74047.stderr?ref=01b069db67f7f7d4d75e8bf492446e0ce9f7a6a8", "patch": "@@ -0,0 +1,12 @@\n+error[E0046]: not all trait items implemented, missing: `Error`, `try_from`\n+  --> $DIR/issue-74047.rs:14:1\n+   |\n+LL | impl TryFrom<OtherStream> for MyStream {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `Error`, `try_from` in implementation\n+   |\n+   = help: implement the missing item: `type Error = Type;`\n+   = help: implement the missing item: `fn try_from(_: T) -> std::result::Result<Self, <Self as std::convert::TryFrom<T>>::Error> { todo!() }`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0046`."}]}