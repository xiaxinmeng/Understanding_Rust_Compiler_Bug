{"sha": "64d43be6471b682037fb1dce13cdb3ea14ddc983", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZDQzYmU2NDcxYjY4MjAzN2ZiMWRjZTEzY2RiM2VhMTRkZGM5ODM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-17T00:04:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-17T00:58:32Z"}, "message": "Sort tests before running them. Issue #428", "tree": {"sha": "da91d6a809160493303834f77dc70df53750ac17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da91d6a809160493303834f77dc70df53750ac17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64d43be6471b682037fb1dce13cdb3ea14ddc983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64d43be6471b682037fb1dce13cdb3ea14ddc983", "html_url": "https://github.com/rust-lang/rust/commit/64d43be6471b682037fb1dce13cdb3ea14ddc983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64d43be6471b682037fb1dce13cdb3ea14ddc983/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f010f79a6164beab6a3cf920d325b2fb854e1b49", "url": "https://api.github.com/repos/rust-lang/rust/commits/f010f79a6164beab6a3cf920d325b2fb854e1b49", "html_url": "https://github.com/rust-lang/rust/commit/f010f79a6164beab6a3cf920d325b2fb854e1b49"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "57ff0c308a2a4fd5db652b29b34e0a5a0456880c", "filename": "src/lib/test.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64d43be6471b682037fb1dce13cdb3ea14ddc983/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64d43be6471b682037fb1dce13cdb3ea14ddc983/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=64d43be6471b682037fb1dce13cdb3ea14ddc983", "patch": "@@ -3,6 +3,8 @@\n // simplest interface possible for representing and running tests\n // while providing a base that other test frameworks may build off of.\n \n+import sort = sort::ivector;\n+\n export test_name;\n export test_fn;\n export test_desc;\n@@ -165,6 +167,7 @@ fn run_tests(&test_opts opts, &test_desc[] tests) -> bool {\n fn filter_tests(&test_opts opts, &test_desc[] tests) -> test_desc[] {\n     auto filtered = tests;\n \n+    // Remove tests that don't match the test filter\n     filtered = if (option::is_none(opts.filter)) {\n         filtered\n     } else {\n@@ -183,6 +186,7 @@ fn filter_tests(&test_opts opts, &test_desc[] tests) -> test_desc[] {\n         ivec::filter_map(filter, filtered)\n     };\n \n+    // Maybe pull out the ignored test and unignore them\n     filtered = if (!opts.run_ignored) {\n         filtered\n     } else {\n@@ -199,6 +203,14 @@ fn filter_tests(&test_opts opts, &test_desc[] tests) -> test_desc[] {\n         ivec::filter_map(filter, filtered)\n     };\n \n+    // Sort the tests alphabetically\n+    filtered = {\n+        fn lteq(&test_desc t1, &test_desc t2) -> bool {\n+            str::lteq(t1.name, t2.name)\n+        }\n+        sort::merge_sort(lteq, filtered)\n+    };\n+\n     ret filtered;\n }\n "}, {"sha": "8ef20ece2db480c8053dd1634339c592e4d57918", "filename": "src/test/stdtest/test.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/64d43be6471b682037fb1dce13cdb3ea14ddc983/src%2Ftest%2Fstdtest%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64d43be6471b682037fb1dce13cdb3ea14ddc983/src%2Ftest%2Fstdtest%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftest.rs?ref=64d43be6471b682037fb1dce13cdb3ea14ddc983", "patch": "@@ -66,6 +66,51 @@ fn filter_for_ignored_option() {\n     assert filtered.(0).ignore == false;\n }\n \n+#[test]\n+fn sort_tests() {\n+    auto opts = rec(filter = option::none,\n+                    run_ignored = false);\n+\n+    auto names = ~[\"sha1::test\",\n+                   \"int::test_to_str\",\n+                   \"int::test_pow\",\n+                   \"test::do_not_run_ignored_tests\",\n+                   \"test::ignored_tests_result_in_ignored\",\n+                   \"test::first_free_arg_should_be_a_filter\",\n+                   \"test::parse_ignored_flag\",\n+                   \"test::filter_for_ignored_option\",\n+                   \"test::sort_tests\"];\n+    auto tests = {\n+        auto testfn = fn() {};\n+        auto tests = ~[];\n+        for (str name in names) {\n+            auto test = rec(name = name,\n+                            fn = testfn,\n+                            ignore = false);\n+            tests += ~[test];\n+        }\n+        tests\n+    };\n+    auto filtered = test::filter_tests(opts, tests);\n+\n+    auto expected = ~[\"int::test_pow\",\n+                      \"int::test_to_str\",\n+                      \"sha1::test\",\n+                      \"test::do_not_run_ignored_tests\",\n+                      \"test::filter_for_ignored_option\",\n+                      \"test::first_free_arg_should_be_a_filter\",\n+                      \"test::ignored_tests_result_in_ignored\",\n+                      \"test::parse_ignored_flag\",\n+                      \"test::sort_tests\"];\n+\n+    auto pairs = ivec::zip(expected, filtered);\n+\n+    for (tup(str, test::test_desc) p in pairs) {\n+        log_err #fmt(\"e: %s a: %s\", p._0, p._1.name);\n+        assert p._0 == p._1.name;\n+    }\n+}\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}]}