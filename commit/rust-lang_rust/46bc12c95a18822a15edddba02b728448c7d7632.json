{"sha": "46bc12c95a18822a15edddba02b728448c7d7632", "node_id": "C_kwDOAAsO6NoAKDQ2YmMxMmM5NWExODgyMmExNWVkZGRiYTAyYjcyODQ0OGM3ZDc2MzI", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-09T20:39:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-09T20:39:02Z"}, "message": "Rollup merge of #103307 - b4den:master, r=estebank\n\nAdd context to compiler error message\n\nChanged `creates a temporary which is freed while still in use` to `creates a temporary value which is freed while still in use`.", "tree": {"sha": "bd5f9f23d0dd40885354ff893ef5613b4674ac2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd5f9f23d0dd40885354ff893ef5613b4674ac2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46bc12c95a18822a15edddba02b728448c7d7632", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjbA/mCRBK7hj4Ov3rIwAAQXEIACCX1qLOR6ZxHmlfDEQ3AAa2\nSiazLPyADW84jINR4U6XEPHtlZpqXz340ATxtyJC2dldEFDbsBpWb8KdcGwwdfSL\naoT1mpyKGJfipzUSovHzocH4qC6g9PcKOmBlnmbremNXNHTg8povUQO2GRbVvb0E\nAb9Jqmf0Kstvy+rMrHRc9FIz6C9HicYObku94z4iQLIGU8Gqe4RcpA0WcVByRQvH\nIQrTHBSa6e2Kyi7A1rLsgE01YXCv76CyRsVmEGYulSfBbiNzwqICCkM9wBxJvKmh\n0fxArbv4K1OBhvRy05DXfpbVj554E/e+Mv66GF+MkcXwzUKUnloqGxNSNmyC82M=\n=UEGA\n-----END PGP SIGNATURE-----\n", "payload": "tree bd5f9f23d0dd40885354ff893ef5613b4674ac2d\nparent 2206267c3151c014389c4ca25b98a64c9e874bca\nparent 6cb65646b83cc7d79d0b88453cc20ce1a475d693\nauthor Manish Goregaokar <manishsmail@gmail.com> 1668026342 -0500\ncommitter GitHub <noreply@github.com> 1668026342 -0500\n\nRollup merge of #103307 - b4den:master, r=estebank\n\nAdd context to compiler error message\n\nChanged `creates a temporary which is freed while still in use` to `creates a temporary value which is freed while still in use`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46bc12c95a18822a15edddba02b728448c7d7632", "html_url": "https://github.com/rust-lang/rust/commit/46bc12c95a18822a15edddba02b728448c7d7632", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46bc12c95a18822a15edddba02b728448c7d7632/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2206267c3151c014389c4ca25b98a64c9e874bca", "url": "https://api.github.com/repos/rust-lang/rust/commits/2206267c3151c014389c4ca25b98a64c9e874bca", "html_url": "https://github.com/rust-lang/rust/commit/2206267c3151c014389c4ca25b98a64c9e874bca"}, {"sha": "6cb65646b83cc7d79d0b88453cc20ce1a475d693", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb65646b83cc7d79d0b88453cc20ce1a475d693", "html_url": "https://github.com/rust-lang/rust/commit/6cb65646b83cc7d79d0b88453cc20ce1a475d693"}], "stats": {"total": 256, "additions": 128, "deletions": 128}, "files": [{"sha": "86cae5d09b5aa3941dc8b81e9ed772530e5cd5ea", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -1557,7 +1557,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         }\n \n         let mut err = self.temporary_value_borrowed_for_too_long(proper_span);\n-        err.span_label(proper_span, \"creates a temporary which is freed while still in use\");\n+        err.span_label(proper_span, \"creates a temporary value which is freed while still in use\");\n         err.span_label(drop_span, \"temporary value is freed at the end of this statement\");\n \n         match explanation {"}, {"sha": "f0258640e2aec4c508b421cdd87d031e34adfa9a", "filename": "library/core/src/pin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/library%2Fcore%2Fsrc%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/library%2Fcore%2Fsrc%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpin.rs?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -1059,7 +1059,7 @@ impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P> where P: DispatchFromDyn<U> {}\n /// 8  | let x: Pin<&mut Foo> = {\n ///    |     - borrow later stored here\n /// 9  |     let x: Pin<&mut Foo> = pin!(Foo { /* \u2026 */ });\n-///    |                            ^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+///    |                            ^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n /// 10 |     x\n /// 11 | }; // <- Foo is dropped\n ///    | - temporary value is freed at the end of this statement"}, {"sha": "4eeec09b910401ddd05ad34e618c59a3661fd60b", "filename": "src/test/ui/borrowck/borrowck-borrowed-uniq-rvalue-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let x = defer(&vec![\"Goodbye\", \"world!\"]);\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                    |\n-   |                    creates a temporary which is freed while still in use\n+   |                    creates a temporary value which is freed while still in use\n LL |     x.x[0];\n    |     ------ borrow later used here\n    |"}, {"sha": "c62d5f903c8d81d4e32c8cc377f036ab50740294", "filename": "src/test/ui/borrowck/borrowck-borrowed-uniq-rvalue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     buggy_map.insert(42, &*Box::new(1));\n    |                            ^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                            |\n-   |                            creates a temporary which is freed while still in use\n+   |                            creates a temporary value which is freed while still in use\n ...\n LL |     buggy_map.insert(43, &*tmp);\n    |     --------------------------- borrow later used here"}, {"sha": "2720b09b0fc5f384d7ff612ffa801149dac8da2c", "filename": "src/test/ui/borrowck/issue-11493.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-11493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-11493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-11493.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let y = x.as_ref().unwrap_or(&id(5));\n    |                                   ^^^^^ - temporary value is freed at the end of this statement\n    |                                   |\n-   |                                   creates a temporary which is freed while still in use\n+   |                                   creates a temporary value which is freed while still in use\n LL |     let _ = &y;\n    |             -- borrow later used here\n    |"}, {"sha": "3ae7e64d202b69496ea961c93a6f0c409c5f0c33", "filename": "src/test/ui/borrowck/issue-17545.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-17545.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-17545.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-17545.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -5,7 +5,7 @@ LL |   pub fn foo<'a, F: Fn(&'a ())>(bar: F) {\n    |              -- lifetime `'a` defined here\n LL | /     bar.call((\n LL | |         &id(()),\n-   | |          ^^^^^^ creates a temporary which is freed while still in use\n+   | |          ^^^^^^ creates a temporary value which is freed while still in use\n LL | |     ));\n    | |      -- temporary value is freed at the end of this statement\n    | |______|"}, {"sha": "8fc963a85664e8a88a6407c57974a016cc939cc6", "filename": "src/test/ui/borrowck/issue-36082.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.fixed?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -10,7 +10,7 @@ fn main() {\n     let val: &_ = binding.0;\n     //~^ ERROR temporary value dropped while borrowed [E0716]\n     //~| NOTE temporary value is freed at the end of this statement\n-    //~| NOTE creates a temporary which is freed while still in use\n+    //~| NOTE creates a temporary value which is freed while still in use\n     //~| HELP consider using a `let` binding to create a longer lived value\n     println!(\"{}\", val);\n     //~^ borrow later used here"}, {"sha": "20f66b4d45de4af3cc1bd50b146e76b15c891642", "filename": "src/test/ui/borrowck/issue-36082.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.rs?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -9,7 +9,7 @@ fn main() {\n     let val: &_ = x.borrow().0;\n     //~^ ERROR temporary value dropped while borrowed [E0716]\n     //~| NOTE temporary value is freed at the end of this statement\n-    //~| NOTE creates a temporary which is freed while still in use\n+    //~| NOTE creates a temporary value which is freed while still in use\n     //~| HELP consider using a `let` binding to create a longer lived value\n     println!(\"{}\", val);\n     //~^ borrow later used here"}, {"sha": "a6357f8182fc2aa7a15f6281a76df591089e7c8c", "filename": "src/test/ui/borrowck/issue-36082.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-36082.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let val: &_ = x.borrow().0;\n    |                   ^^^^^^^^^^  - temporary value is freed at the end of this statement\n    |                   |\n-   |                   creates a temporary which is freed while still in use\n+   |                   creates a temporary value which is freed while still in use\n ...\n LL |     println!(\"{}\", val);\n    |                    --- borrow later used here"}, {"sha": "425cd75141cec4a06241359376d919bfbf7df6db", "filename": "src/test/ui/cleanup-rvalue-scopes-cf.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fcleanup-rvalue-scopes-cf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fcleanup-rvalue-scopes-cf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcleanup-rvalue-scopes-cf.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let x1 = arg(&AddFlags(1));\n    |                   ^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                   |\n-   |                   creates a temporary which is freed while still in use\n+   |                   creates a temporary value which is freed while still in use\n ...\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |      -- borrow later used here\n@@ -21,7 +21,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let x2 = AddFlags(1).get();\n    |              ^^^^^^^^^^^      - temporary value is freed at the end of this statement\n    |              |\n-   |              creates a temporary which is freed while still in use\n+   |              creates a temporary value which is freed while still in use\n ...\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |          -- borrow later used here\n@@ -38,7 +38,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let x3 = &*arg(&AddFlags(1));\n    |                     ^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                     |\n-   |                     creates a temporary which is freed while still in use\n+   |                     creates a temporary value which is freed while still in use\n ...\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |              -- borrow later used here\n@@ -55,7 +55,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let ref x4 = *arg(&AddFlags(1));\n    |                        ^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                        |\n-   |                        creates a temporary which is freed while still in use\n+   |                        creates a temporary value which is freed while still in use\n ...\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |                  -- borrow later used here\n@@ -72,7 +72,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let &ref x5 = arg(&AddFlags(1));\n    |                        ^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                        |\n-   |                        creates a temporary which is freed while still in use\n+   |                        creates a temporary value which is freed while still in use\n ...\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |                      -- borrow later used here\n@@ -89,7 +89,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let x6 = AddFlags(1).get();\n    |              ^^^^^^^^^^^      - temporary value is freed at the end of this statement\n    |              |\n-   |              creates a temporary which is freed while still in use\n+   |              creates a temporary value which is freed while still in use\n ...\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |                          -- borrow later used here\n@@ -106,7 +106,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let StackBox { f: x7 } = StackBox { f: AddFlags(1).get() };\n    |                                            ^^^^^^^^^^^        - temporary value is freed at the end of this statement\n    |                                            |\n-   |                                            creates a temporary which is freed while still in use\n+   |                                            creates a temporary value which is freed while still in use\n LL |\n LL |     (x1, x2, x3, x4, x5, x6, x7);\n    |                              -- borrow later used here"}, {"sha": "ed6a6ee6e0fd9298f810658e6146d86f4c2a0617", "filename": "src/test/ui/consts/const-eval/const-eval-intrinsic-promotion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-intrinsic-promotion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-intrinsic-promotion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-intrinsic-promotion.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let x: &'static usize =\n    |            -------------- type annotation requires that borrow lasts for `'static`\n LL |         &std::intrinsics::size_of::<i32>();\n-   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n LL | }\n    | - temporary value is freed at the end of this statement\n "}, {"sha": "2e697b219c5a4b7e53ad465a7c68478eaf160b1e", "filename": "src/test/ui/consts/const-eval/dont_promote_unstable_const_fn.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -10,7 +10,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn.rs:17:28\n    |\n LL |     let _: &'static u32 = &foo();\n-   |            ------------    ^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL | }\n@@ -20,7 +20,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn.rs:21:28\n    |\n LL |     let _: &'static u32 = &meh();\n-   |            ------------    ^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -31,7 +31,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn.rs:22:26\n    |\n LL |     let x: &'static _ = &std::time::Duration::from_millis(42).subsec_millis();\n-   |            ----------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "aa742d784e0350bcf612ed844eeb8dff0930df5c", "filename": "src/test/ui/consts/const-eval/dont_promote_unstable_const_fn_cross_crate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn_cross_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn_cross_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fdont_promote_unstable_const_fn_cross_crate.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn_cross_crate.rs:8:28\n    |\n LL |     let _: &'static u32 = &foo();\n-   |            ------------    ^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |     let _x: &'static u32 = &foo();\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/dont_promote_unstable_const_fn_cross_crate.rs:9:29\n    |\n LL |     let _x: &'static u32 = &foo();\n-   |             ------------    ^^^^^ creates a temporary which is freed while still in use\n+   |             ------------    ^^^^^ creates a temporary value which is freed while still in use\n    |             |\n    |             type annotation requires that borrow lasts for `'static`\n LL | }"}, {"sha": "2d4e7c83d3e4e8a34c44929c1f56a7786ce948d1", "filename": "src/test/ui/consts/const-eval/promoted_const_fn_fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_const_fn_fail.rs:17:27\n    |\n LL |     let x: &'static u8 = &(bar() + 1);\n-   |            -----------    ^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -----------    ^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ..."}, {"sha": "9ebae3a18a32f15e3d81f92725a0bb94ee3a1f6f", "filename": "src/test/ui/consts/const-eval/promoted_const_fn_fail_deny_const_err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_const_fn_fail_deny_const_err.rs:18:27\n    |\n LL |     let x: &'static u8 = &(bar() + 1);\n-   |            -----------    ^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -----------    ^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ..."}, {"sha": "01fcf2ec213424c8eaf38d1ea376e3b09e442d25", "filename": "src/test/ui/consts/const-eval/promoted_raw_ptr_ops.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_raw_ptr_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_raw_ptr_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_raw_ptr_ops.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:2:29\n    |\n LL |     let x: &'static bool = &(42 as *const i32 == 43 as *const i32);\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:4:30\n    |\n LL |     let y: &'static usize = &(&1 as *const i32 as usize + 1);\n-   |            --------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            --------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:6:28\n    |\n LL |     let z: &'static i32 = &(unsafe { *(42 as *const i32) });\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -35,7 +35,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted_raw_ptr_ops.rs:8:29\n    |\n LL |     let a: &'static bool = &(main as fn() == main as fn());\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "434a957f64840780855d05b058692836b41f3e70", "filename": "src/test/ui/consts/const-eval/transmute-const-promotion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ftransmute-const-promotion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ftransmute-const-promotion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ftransmute-const-promotion.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/transmute-const-promotion.rs:4:37\n    |\n LL |     let x: &'static u32 = unsafe { &mem::transmute(3.0f32) };\n-   |            ------------             ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------             ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "42f17de200344598613ef63e0c8c2226d822a94d", "filename": "src/test/ui/consts/const-eval/union_promotion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion_promotion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion_promotion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Funion_promotion.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -7,7 +7,7 @@ LL |       let x: &'static bool = &unsafe {\n    | |            type annotation requires that borrow lasts for `'static`\n LL | |         Foo { a: &1 }.b == Foo { a: &2 }.b\n LL | |     };\n-   | |_____^ creates a temporary which is freed while still in use\n+   | |_____^ creates a temporary value which is freed while still in use\n LL |   }\n    |   - temporary value is freed at the end of this statement\n "}, {"sha": "5dd757e3f5ee1fb049958d7cb5ffa8d97212bb2d", "filename": "src/test/ui/consts/const-int-conversion.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-conversion.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:2:28\n    |\n LL |     let x: &'static i32 = &(5_i32.reverse_bits());\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:4:28\n    |\n LL |     let y: &'static i32 = &(i32::from_be_bytes([0x12, 0x34, 0x56, 0x78]));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:6:28\n    |\n LL |     let z: &'static i32 = &(i32::from_le_bytes([0x12, 0x34, 0x56, 0x78]));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -35,7 +35,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:8:28\n    |\n LL |     let a: &'static i32 = &(i32::from_be(i32::from_ne_bytes([0x80, 0, 0, 0])));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -46,7 +46,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:10:29\n    |\n LL |     let b: &'static [u8] = &(0x12_34_56_78_i32.to_be_bytes());\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -57,7 +57,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:12:29\n    |\n LL |     let c: &'static [u8] = &(0x12_34_56_78_i32.to_le_bytes());\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -68,7 +68,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-conversion.rs:14:29\n    |\n LL |     let d: &'static [u8] = &(i32::MIN.to_be().to_ne_bytes());\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "7d3689e6ec7d7ac188b3fcd47a882ca40519316e", "filename": "src/test/ui/consts/const-int-overflowing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-overflowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-overflowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-overflowing.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-overflowing.rs:2:36\n    |\n LL |     let x: &'static (i32, bool) = &(5_i32.overflowing_add(3));\n-   |            --------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            --------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-overflowing.rs:4:36\n    |\n LL |     let y: &'static (i32, bool) = &(5_i32.overflowing_sub(3));\n-   |            --------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            --------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-overflowing.rs:6:36\n    |\n LL |     let z: &'static (i32, bool) = &(5_i32.overflowing_mul(3));\n-   |            --------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            --------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "039da1c31c57571ad97b3734499e3d63d45ac870", "filename": "src/test/ui/consts/const-int-rotate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-rotate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-rotate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-rotate.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-rotate.rs:2:28\n    |\n LL |     let x: &'static i32 = &(5_i32.rotate_left(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-rotate.rs:4:28\n    |\n LL |     let y: &'static i32 = &(5_i32.rotate_right(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "fc23d9d2b2942f6bc4eb7b136314ee61bca53b43", "filename": "src/test/ui/consts/const-int-sign.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-sign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-sign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-sign.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-sign.rs:2:29\n    |\n LL |     let x: &'static bool = &(5_i32.is_negative());\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-sign.rs:4:29\n    |\n LL |     let y: &'static bool = &(5_i32.is_positive());\n-   |            -------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "1342fadc4055b2bcc24d109aaf8a473c8e34ea1c", "filename": "src/test/ui/consts/const-int-wrapping.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-wrapping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-int-wrapping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-wrapping.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-wrapping.rs:2:28\n    |\n LL |     let x: &'static i32 = &(5_i32.wrapping_add(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-wrapping.rs:4:28\n    |\n LL |     let y: &'static i32 = &(5_i32.wrapping_sub(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-wrapping.rs:6:28\n    |\n LL |     let z: &'static i32 = &(5_i32.wrapping_mul(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -35,7 +35,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-wrapping.rs:8:28\n    |\n LL |     let a: &'static i32 = &(5_i32.wrapping_shl(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -46,7 +46,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-int-wrapping.rs:10:28\n    |\n LL |     let b: &'static i32 = &(5_i32.wrapping_shr(3));\n-   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "78c58b5ab092b98df4f0b0be9b901473084fdba7", "filename": "src/test/ui/consts/const-mut-refs/mut_ref_in_final.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fmut_ref_in_final.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fmut_ref_in_final.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fmut_ref_in_final.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -11,7 +11,7 @@ LL | const B3: Option<&mut i32> = Some(&mut 42);\n    |                              ----------^^-\n    |                              |         | |\n    |                              |         | temporary value is freed at the end of this statement\n-   |                              |         creates a temporary which is freed while still in use\n+   |                              |         creates a temporary value which is freed while still in use\n    |                              using this value as a constant requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -21,7 +21,7 @@ LL | const B4: Option<&mut i32> = helper(&mut 42);\n    |                              ------------^^-\n    |                              |           | |\n    |                              |           | temporary value is freed at the end of this statement\n-   |                              |           creates a temporary which is freed while still in use\n+   |                              |           creates a temporary value which is freed while still in use\n    |                              using this value as a constant requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -31,7 +31,7 @@ LL | const FOO: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));\n    |                                  -------------------------------^^--\n    |                                  |                              |  |\n    |                                  |                              |  temporary value is freed at the end of this statement\n-   |                                  |                              creates a temporary which is freed while still in use\n+   |                                  |                              creates a temporary value which is freed while still in use\n    |                                  using this value as a constant requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -41,7 +41,7 @@ LL | static FOO2: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));\n    |                                    -------------------------------^^--\n    |                                    |                              |  |\n    |                                    |                              |  temporary value is freed at the end of this statement\n-   |                                    |                              creates a temporary which is freed while still in use\n+   |                                    |                              creates a temporary value which is freed while still in use\n    |                                    using this value as a static requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -51,7 +51,7 @@ LL | static mut FOO3: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));\n    |                                        -------------------------------^^--\n    |                                        |                              |  |\n    |                                        |                              |  temporary value is freed at the end of this statement\n-   |                                        |                              creates a temporary which is freed while still in use\n+   |                                        |                              creates a temporary value which is freed while still in use\n    |                                        using this value as a static requires that borrow lasts for `'static`\n \n error: aborting due to 6 previous errors"}, {"sha": "dbcb0c86052ee3fdeb4536d1f2432258a8076ff5", "filename": "src/test/ui/consts/const-ptr-nonnull.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-nonnull.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-nonnull.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-nonnull.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-ptr-nonnull.rs:4:37\n    |\n LL |     let x: &'static NonNull<u32> = &(NonNull::dangling());\n-   |            ---------------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ---------------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-ptr-nonnull.rs:9:37\n    |\n LL |     let x: &'static NonNull<u32> = &(non_null.cast());\n-   |            ---------------------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ---------------------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "83448c3e8d8766e3ab7884055cfffcd7c17452b4", "filename": "src/test/ui/consts/const-ptr-unique.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-unique.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-unique.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-unique.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/const-ptr-unique.rs:8:33\n    |\n LL |     let x: &'static *mut u32 = &(unique.as_ptr());\n-   |            -----------------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            -----------------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |"}, {"sha": "db2ffb91b988b0d65c37e96d81b401ec400fc467", "filename": "src/test/ui/consts/control-flow/interior-mutability.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Finterior-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Finterior-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Finterior-mutability.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/interior-mutability.rs:40:26\n    |\n LL |     let x: &'static _ = &X;\n-   |            ----------    ^ creates a temporary which is freed while still in use\n+   |            ----------    ^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/interior-mutability.rs:41:26\n    |\n LL |     let y: &'static _ = &Y;\n-   |            ----------    ^ creates a temporary which is freed while still in use\n+   |            ----------    ^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |     let z: &'static _ = &Z;\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/interior-mutability.rs:42:26\n    |\n LL |     let z: &'static _ = &Z;\n-   |            ----------    ^ creates a temporary which is freed while still in use\n+   |            ----------    ^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL | }"}, {"sha": "55fe55759df54005fce3412078898677a5104a70", "filename": "src/test/ui/consts/issue-54224.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fissue-54224.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fissue-54224.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-54224.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -5,7 +5,7 @@ LL | const FOO: Option<&[[u8; 3]]> = Some(&[*b\"foo\"]);\n    |                                 ------^^^^^^^^^-\n    |                                 |     |        |\n    |                                 |     |        temporary value is freed at the end of this statement\n-   |                                 |     creates a temporary which is freed while still in use\n+   |                                 |     creates a temporary value which is freed while still in use\n    |                                 using this value as a constant requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -15,7 +15,7 @@ LL | pub const Z: Cow<'static, [ [u8; 3] ]> = Cow::Borrowed(&[*b\"ABC\"]);\n    |                                          ---------------^^^^^^^^^-\n    |                                          |              |        |\n    |                                          |              |        temporary value is freed at the end of this statement\n-   |                                          |              creates a temporary which is freed while still in use\n+   |                                          |              creates a temporary value which is freed while still in use\n    |                                          using this value as a constant requires that borrow lasts for `'static`\n \n error: aborting due to 2 previous errors"}, {"sha": "0b8dc0ce0e903c75322bc3c0926883887392b14d", "filename": "src/test/ui/consts/min_const_fn/promotion.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fpromotion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fpromotion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fpromotion.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promotion.rs:11:27\n    |\n LL |     let x: &'static () = &foo1();\n-   |            -----------    ^^^^^^ creates a temporary which is freed while still in use\n+   |            -----------    ^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promotion.rs:12:28\n    |\n LL |     let y: &'static i32 = &foo2(42);\n-   |            ------------    ^^^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promotion.rs:13:28\n    |\n LL |     let z: &'static i32 = &foo3();\n-   |            ------------    ^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -35,7 +35,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promotion.rs:14:34\n    |\n LL |     let a: &'static Cell<i32> = &foo4();\n-   |            ------------------    ^^^^^^ creates a temporary which is freed while still in use\n+   |            ------------------    ^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -46,7 +46,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promotion.rs:15:42\n    |\n LL |     let a: &'static Option<Cell<i32>> = &foo5();\n-   |            --------------------------    ^^^^^^ creates a temporary which is freed while still in use\n+   |            --------------------------    ^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |     let a: &'static Option<Cell<i32>> = &foo6();\n@@ -57,7 +57,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promotion.rs:16:42\n    |\n LL |     let a: &'static Option<Cell<i32>> = &foo6();\n-   |            --------------------------    ^^^^^^ creates a temporary which is freed while still in use\n+   |            --------------------------    ^^^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL | }"}, {"sha": "b93358e8dcceaa1ef17b1ae58a4d492e1118f3e6", "filename": "src/test/ui/consts/promote-not.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -5,14 +5,14 @@ LL | static mut TEST1: Option<&mut [i32]> = Some(&mut [1, 2, 3]);\n    |                                        ----------^^^^^^^^^-\n    |                                        |         |        |\n    |                                        |         |        temporary value is freed at the end of this statement\n-   |                                        |         creates a temporary which is freed while still in use\n+   |                                        |         creates a temporary value which is freed while still in use\n    |                                        using this value as a static requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:11:18\n    |\n LL |     let x = &mut [1,2,3];\n-   |                  ^^^^^^^ creates a temporary which is freed while still in use\n+   |                  ^^^^^^^ creates a temporary value which is freed while still in use\n LL |     x\n    |     - using this value as a static requires that borrow lasts for `'static`\n LL | };\n@@ -22,7 +22,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:20:32\n    |\n LL |         let _x: &'static () = &foo();\n-   |                 -----------    ^^^^^ creates a temporary which is freed while still in use\n+   |                 -----------    ^^^^^ creates a temporary value which is freed while still in use\n    |                 |\n    |                 type annotation requires that borrow lasts for `'static`\n LL |     }\n@@ -32,7 +32,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:28:29\n    |\n LL |     let _x: &'static i32 = &unsafe { U { x: 0 }.x };\n-   |             ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |             ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |             |\n    |             type annotation requires that borrow lasts for `'static`\n LL | }\n@@ -42,7 +42,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:33:29\n    |\n LL |     let _x: &'static i32 = &unsafe { U { x: 0 }.x };\n-   |             ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |             ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |             |\n    |             type annotation requires that borrow lasts for `'static`\n LL | };\n@@ -52,7 +52,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:39:29\n    |\n LL |     let _val: &'static _ = &(Cell::new(1), 2).1;\n-   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n LL | };\n@@ -62,7 +62,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:46:29\n    |\n LL |     let _val: &'static _ = &(Cell::new(1), 2).0;\n-   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -73,7 +73,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:47:29\n    |\n LL |     let _val: &'static _ = &(Cell::new(1), 2).1;\n-   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -84,7 +84,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:50:29\n    |\n LL |     let _val: &'static _ = &(1/0);\n-   |               ----------    ^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -95,7 +95,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:51:29\n    |\n LL |     let _val: &'static _ = &(1/(1-1));\n-   |               ----------    ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -106,7 +106,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:52:29\n    |\n LL |     let _val: &'static _ = &(1%0);\n-   |               ----------    ^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -117,7 +117,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:53:29\n    |\n LL |     let _val: &'static _ = &(1%(1-1));\n-   |               ----------    ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -128,7 +128,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:54:29\n    |\n LL |     let _val: &'static _ = &([1,2,3][4]+1);\n-   |               ----------    ^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -139,7 +139,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:57:29\n    |\n LL |     let _val: &'static _ = &TEST_DROP;\n-   |               ----------    ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -150,7 +150,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:59:29\n    |\n LL |     let _val: &'static _ = &&TEST_DROP;\n-   |               ----------    ^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -161,7 +161,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:59:30\n    |\n LL |     let _val: &'static _ = &&TEST_DROP;\n-   |               ----------     ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------     ^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -172,7 +172,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:62:29\n    |\n LL |     let _val: &'static _ = &(&TEST_DROP,);\n-   |               ----------    ^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -183,7 +183,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:62:31\n    |\n LL |     let _val: &'static _ = &(&TEST_DROP,);\n-   |               ----------      ^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------      ^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -194,7 +194,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promote-not.rs:65:29\n    |\n LL |     let _val: &'static _ = &[&TEST_DROP; 1];\n-   |               ----------    ^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               ----------    ^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n ...\n@@ -207,7 +207,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let _val: &'static _ = &[&TEST_DROP; 1];\n    |               ----------      ^^^^^^^^^    - temporary value is freed at the end of this statement\n    |               |               |\n-   |               |               creates a temporary which is freed while still in use\n+   |               |               creates a temporary value which is freed while still in use\n    |               type annotation requires that borrow lasts for `'static`\n \n error: aborting due to 20 previous errors"}, {"sha": "975a235a6495b6f3a587bd2306e3086c5f7fb901", "filename": "src/test/ui/consts/promote_const_let.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fpromote_const_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fpromote_const_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote_const_let.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -19,7 +19,7 @@ LL |       let x: &'static u32 = &{\n LL | |         let y = 42;\n LL | |         y\n LL | |     };\n-   | |_____^ creates a temporary which is freed while still in use\n+   | |_____^ creates a temporary value which is freed while still in use\n LL |   }\n    |   - temporary value is freed at the end of this statement\n "}, {"sha": "4802834173fc54ee4482d877257875dede3dabc6", "filename": "src/test/ui/consts/promoted-const-drop.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fpromoted-const-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fpromoted-const-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted-const-drop.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted-const-drop.rs:13:26\n    |\n LL |     let _: &'static A = &A();\n-   |            ----------    ^^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |     let _: &'static [A] = &[C];\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/promoted-const-drop.rs:14:28\n    |\n LL |     let _: &'static [A] = &[C];\n-   |            ------------    ^^^ creates a temporary which is freed while still in use\n+   |            ------------    ^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL | }"}, {"sha": "d847cf88f505fe393ed228aa99b748134a859814", "filename": "src/test/ui/consts/qualif-union.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fqualif-union.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fconsts%2Fqualif-union.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fqualif-union.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/qualif-union.rs:28:26\n    |\n LL |     let _: &'static _ = &C1;\n-   |            ----------    ^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -13,7 +13,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/qualif-union.rs:29:26\n    |\n LL |     let _: &'static _ = &C2;\n-   |            ----------    ^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -24,7 +24,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/qualif-union.rs:30:26\n    |\n LL |     let _: &'static _ = &C3;\n-   |            ----------    ^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n ...\n@@ -35,7 +35,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/qualif-union.rs:31:26\n    |\n LL |     let _: &'static _ = &C4;\n-   |            ----------    ^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL |     let _: &'static _ = &C5;\n@@ -46,7 +46,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/qualif-union.rs:32:26\n    |\n LL |     let _: &'static _ = &C5;\n-   |            ----------    ^^ creates a temporary which is freed while still in use\n+   |            ----------    ^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n LL | }"}, {"sha": "0b1f34aeb96bd52172833446ece6a7cc0c11c3b3", "filename": "src/test/ui/generator/auto-trait-regions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fgenerator%2Fauto-trait-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fgenerator%2Fauto-trait-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fauto-trait-regions.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |         let a = A(&mut true, &mut true, No);\n    |                        ^^^^                - temporary value is freed at the end of this statement\n    |                        |\n-   |                        creates a temporary which is freed while still in use\n+   |                        creates a temporary value which is freed while still in use\n ...\n LL |         assert_foo(a);\n    |                    - borrow later used here\n@@ -17,7 +17,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |         let a = A(&mut true, &mut true, No);\n    |                                   ^^^^     - temporary value is freed at the end of this statement\n    |                                   |\n-   |                                   creates a temporary which is freed while still in use\n+   |                                   creates a temporary value which is freed while still in use\n ...\n LL |         assert_foo(a);\n    |                    - borrow later used here"}, {"sha": "1c9abc4e837c518aa888649f2b5b57b0265631fa", "filename": "src/test/ui/generic-associated-types/bugs/hrtb-implied-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fhrtb-implied-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fhrtb-implied-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fhrtb-implied-1.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/hrtb-implied-1.rs:31:22\n    |\n LL |     let slice = &mut ();\n-   |                      ^^ creates a temporary which is freed while still in use\n+   |                      ^^ creates a temporary value which is freed while still in use\n ...\n LL |     print_items::<WindowsMut<'_>>(windows);\n    |     -------------------------------------- argument requires that borrow lasts for `'static`"}, {"sha": "c2c7df7a333a4a3461ca29a6273be3e7bf8511ac", "filename": "src/test/ui/issues/issue-47184.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fissues%2Fissue-47184.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fissues%2Fissue-47184.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47184.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let _vec: Vec<&'static String> = vec![&String::new()];\n    |               --------------------         ^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |               |                            |\n-   |               |                            creates a temporary which is freed while still in use\n+   |               |                            creates a temporary value which is freed while still in use\n    |               type annotation requires that borrow lasts for `'static`\n \n error: aborting due to previous error"}, {"sha": "b25dbd1cb8b124eea9068fdf80ab28be1d94e615", "filename": "src/test/ui/issues/issue-52049.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fissues%2Fissue-52049.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fissues%2Fissue-52049.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52049.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     foo(&unpromotable(5u32));\n    |     -----^^^^^^^^^^^^^^^^^^-\n    |     |    |\n-   |     |    creates a temporary which is freed while still in use\n+   |     |    creates a temporary value which is freed while still in use\n    |     argument requires that borrow lasts for `'static`\n LL | }\n    | - temporary value is freed at the end of this statement"}, {"sha": "987b051b11106e39441633aba255207af62543ce", "filename": "src/test/ui/lifetimes/borrowck-let-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let mut x = vec![1].iter();\n    |                 ^^^^^^^       - temporary value is freed at the end of this statement\n    |                 |\n-   |                 creates a temporary which is freed while still in use\n+   |                 creates a temporary value which is freed while still in use\n LL |\n LL |     x.use_mut();\n    |     ----------- borrow later used here"}, {"sha": "89781d96fab2624fbceac3df99b8e614a7b31893", "filename": "src/test/ui/nll/borrowed-temporary-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowed-temporary-error.rs:8:10\n    |\n LL |         &(v,)\n-   |          ^^^^ creates a temporary which is freed while still in use\n+   |          ^^^^ creates a temporary value which is freed while still in use\n LL |\n LL |     });\n    |       - temporary value is freed at the end of this statement"}, {"sha": "bb45575fa64c3ae6f1e50494d378029224b5b731", "filename": "src/test/ui/nll/issue-57265-return-type-wf-check.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57265-return-type-wf-check.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let (_, z) = foo(&\"hello\".to_string());\n    |                  -----^^^^^^^^^^^^^^^^^^^-- temporary value is freed at the end of this statement\n    |                  |    |\n-   |                  |    creates a temporary which is freed while still in use\n+   |                  |    creates a temporary value which is freed while still in use\n    |                  argument requires that borrow lasts for `'static`\n \n error: aborting due to previous error"}, {"sha": "de6f8f80fe25248bcac3e425fcd37b9e639fa7fb", "filename": "src/test/ui/nll/user-annotations/patterns.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -76,7 +76,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let _: Vec<&'static String> = vec![&String::new()];\n    |            --------------------         ^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |            |                            |\n-   |            |                            creates a temporary which is freed while still in use\n+   |            |                            creates a temporary value which is freed while still in use\n    |            type annotation requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -85,7 +85,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let (_, a): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |                 -------------------------          ^^^^^^^^^^^^^      - temporary value is freed at the end of this statement\n    |                 |                                  |\n-   |                 |                                  creates a temporary which is freed while still in use\n+   |                 |                                  creates a temporary value which is freed while still in use\n    |                 type annotation requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -94,7 +94,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let (_a, b): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |                  -------------------------          ^^^^^^^^^^^^^      - temporary value is freed at the end of this statement\n    |                  |                                  |\n-   |                  |                                  creates a temporary which is freed while still in use\n+   |                  |                                  creates a temporary value which is freed while still in use\n    |                  type annotation requires that borrow lasts for `'static`\n \n error[E0597]: `x` does not live long enough"}, {"sha": "fc1be052fb79189139557a6322acc0429a465af2", "filename": "src/test/ui/pin-macro/lifetime_errors_on_promotion_misusage.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpin-macro%2Flifetime_errors_on_promotion_misusage.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let phantom_pinned = identity(pin!(PhantomPinned));\n    |                                   ^^^^^^^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\n    |                                   |\n-   |                                   creates a temporary which is freed while still in use\n+   |                                   creates a temporary value which is freed while still in use\n LL |\n LL |     stuff(phantom_pinned)\n    |           -------------- borrow later used here\n@@ -18,7 +18,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     let phantom_pinned = {\n    |         -------------- borrow later stored here\n LL |         let phantom_pinned = pin!(PhantomPinned);\n-   |                              ^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |                              ^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n ...\n LL |     };\n    |     - temporary value is freed at the end of this statement"}, {"sha": "8ef7e22536bf94a4847261ad3fe6bf476fbf88de", "filename": "src/test/ui/regions/regions-free-region-ordering-caller1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-caller1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-caller1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-caller1.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -5,7 +5,7 @@ LL | fn call1<'a>(x: &'a usize) {\n    |          -- lifetime `'a` defined here\n ...\n LL |     let z: &'a & usize = &(&y);\n-   |            -----------    ^^^^ creates a temporary which is freed while still in use\n+   |            -----------    ^^^^ creates a temporary value which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'a`\n ..."}, {"sha": "c32bbe0ee1fb4af53e72fa75e5e34a6bd580dd60", "filename": "src/test/ui/regions/regions-var-type-out-of-scope.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fregions%2Fregions-var-type-out-of-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fregions%2Fregions-var-type-out-of-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-var-type-out-of-scope.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -4,7 +4,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |         x = &id(3);\n    |              ^^^^^- temporary value is freed at the end of this statement\n    |              |\n-   |              creates a temporary which is freed while still in use\n+   |              creates a temporary value which is freed while still in use\n LL |         assert_eq!(*x, 3);\n    |         ----------------- borrow later used here\n    |"}, {"sha": "18abfb5c3fbecb2c589e7bde35cc77e7b7008895", "filename": "src/test/ui/span/borrowck-let-suggestion-suffixes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.rs?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -18,7 +18,7 @@ fn f() {\n \n     v3.push(&id('x'));           // statement 6\n     //~^ ERROR temporary value dropped while borrowed\n-    //~| NOTE creates a temporary which is freed while still in use\n+    //~| NOTE creates a temporary value which is freed while still in use\n     //~| NOTE temporary value is freed at the end of this statement\n     //~| HELP consider using a `let` binding to create a longer lived value\n \n@@ -28,7 +28,7 @@ fn f() {\n \n         v4.push(&id('y'));\n         //~^ ERROR temporary value dropped while borrowed\n-        //~| NOTE creates a temporary which is freed while still in use\n+        //~| NOTE creates a temporary value which is freed while still in use\n         //~| NOTE temporary value is freed at the end of this statement\n         //~| NOTE consider using a `let` binding to create a longer lived value\n         v4.use_ref();\n@@ -39,7 +39,7 @@ fn f() {\n \n     v5.push(&id('z'));\n     //~^ ERROR temporary value dropped while borrowed\n-    //~| NOTE creates a temporary which is freed while still in use\n+    //~| NOTE creates a temporary value which is freed while still in use\n     //~| NOTE temporary value is freed at the end of this statement\n     //~| HELP consider using a `let` binding to create a longer lived value\n "}, {"sha": "2dc29a78d204d15a35b4e55818b8e29f76c8e6d3", "filename": "src/test/ui/span/borrowck-let-suggestion-suffixes.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -16,7 +16,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     v3.push(&id('x'));           // statement 6\n    |              ^^^^^^^ - temporary value is freed at the end of this statement\n    |              |\n-   |              creates a temporary which is freed while still in use\n+   |              creates a temporary value which is freed while still in use\n ...\n LL |     (v1, v2, v3, /* v4 is above. */ v5).use_ref();\n    |              -- borrow later used here\n@@ -33,7 +33,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |         v4.push(&id('y'));\n    |                  ^^^^^^^ - temporary value is freed at the end of this statement\n    |                  |\n-   |                  creates a temporary which is freed while still in use\n+   |                  creates a temporary value which is freed while still in use\n ...\n LL |         v4.use_ref();\n    |         ------------ borrow later used here\n@@ -46,7 +46,7 @@ error[E0716]: temporary value dropped while borrowed\n LL |     v5.push(&id('z'));\n    |              ^^^^^^^ - temporary value is freed at the end of this statement\n    |              |\n-   |              creates a temporary which is freed while still in use\n+   |              creates a temporary value which is freed while still in use\n ...\n LL |     (v1, v2, v3, /* v4 is above. */ v5).use_ref();\n    |                                     -- borrow later used here"}, {"sha": "25e344fedfb25e1e0eea58c3a6e78341caacd55f", "filename": "src/test/ui/span/borrowck-ref-into-rvalue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/borrowck-ref-into-rvalue.rs:4:11\n    |\n LL |     match Some(\"Hello\".to_string()) {\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n ...\n LL |     }\n    |     - temporary value is freed at the end of this statement"}, {"sha": "d9cce2254dd95b802c955bb7d98fe366b7ea792f", "filename": "src/test/ui/span/issue-15480.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/issue-15480.rs:6:10\n    |\n LL |         &id(3)\n-   |          ^^^^^ creates a temporary which is freed while still in use\n+   |          ^^^^^ creates a temporary value which is freed while still in use\n LL |     ];\n    |      - temporary value is freed at the end of this statement\n ..."}, {"sha": "81e858fa0ce017d764d458eb5566757e7eda8d01", "filename": "src/test/ui/span/regions-close-over-borrowed-ref-in-obj.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/regions-close-over-borrowed-ref-in-obj.rs:12:27\n    |\n LL |         let ss: &isize = &id(1);\n-   |                           ^^^^^ creates a temporary which is freed while still in use\n+   |                           ^^^^^ creates a temporary value which is freed while still in use\n ...\n LL |     }\n    |     - temporary value is freed at the end of this statement"}, {"sha": "b70bf69d688a5960acce607161fec561b4b5b00d", "filename": "src/test/ui/span/slice-borrow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/slice-borrow.rs:6:28\n    |\n LL |         let x: &[isize] = &vec![1, 2, 3, 4, 5];\n-   |                            ^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |                            ^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n ...\n LL |     }\n    |     - temporary value is freed at the end of this statement"}, {"sha": "cedcb7367949f51cfc1578233826a05731b367e6", "filename": "src/test/ui/static/static-drop-scope.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatic%2Fstatic-drop-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatic%2Fstatic-drop-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-drop-scope.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -13,7 +13,7 @@ LL | static PROMOTION_FAIL_S: Option<&'static WithDtor> = Some(&WithDtor);\n    |                                                      ------^^^^^^^^-\n    |                                                      |     |       |\n    |                                                      |     |       temporary value is freed at the end of this statement\n-   |                                                      |     creates a temporary which is freed while still in use\n+   |                                                      |     creates a temporary value which is freed while still in use\n    |                                                      using this value as a static requires that borrow lasts for `'static`\n \n error[E0493]: destructor of `WithDtor` cannot be evaluated at compile-time\n@@ -31,7 +31,7 @@ LL | const PROMOTION_FAIL_C: Option<&'static WithDtor> = Some(&WithDtor);\n    |                                                     ------^^^^^^^^-\n    |                                                     |     |       |\n    |                                                     |     |       temporary value is freed at the end of this statement\n-   |                                                     |     creates a temporary which is freed while still in use\n+   |                                                     |     creates a temporary value which is freed while still in use\n    |                                                     using this value as a constant requires that borrow lasts for `'static`\n \n error[E0493]: destructor of `(WithDtor, i32)` cannot be evaluated at compile-time"}, {"sha": "133d8ec2e1e519bf4d6f58cc55b7a59a369b9c92", "filename": "src/test/ui/static/static-reference-to-fn-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatic%2Fstatic-reference-to-fn-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatic%2Fstatic-reference-to-fn-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-reference-to-fn-2.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -6,7 +6,7 @@ LL | fn state1(self_: &mut StateMachineIter) -> Option<&'static str> {\n LL |     self_.statefn = &id(state2 as StateMachineFunc);\n    |     -----------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value is freed at the end of this statement\n    |     |                |\n-   |     |                creates a temporary which is freed while still in use\n+   |     |                creates a temporary value which is freed while still in use\n    |     assignment requires that borrow lasts for `'1`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -17,7 +17,7 @@ LL | fn state2(self_: &mut StateMachineIter) -> Option<(&'static str)> {\n LL |     self_.statefn = &id(state3 as StateMachineFunc);\n    |     -----------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value is freed at the end of this statement\n    |     |                |\n-   |     |                creates a temporary which is freed while still in use\n+   |     |                creates a temporary value which is freed while still in use\n    |     assignment requires that borrow lasts for `'1`\n \n error[E0716]: temporary value dropped while borrowed\n@@ -28,7 +28,7 @@ LL | fn state3(self_: &mut StateMachineIter) -> Option<(&'static str)> {\n LL |     self_.statefn = &id(finished as StateMachineFunc);\n    |     -----------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value is freed at the end of this statement\n    |     |                |\n-   |     |                creates a temporary which is freed while still in use\n+   |     |                creates a temporary value which is freed while still in use\n    |     assignment requires that borrow lasts for `'1`\n \n error[E0515]: cannot return value referencing temporary value"}, {"sha": "1a607e3c014a3134006f59b3e899adfd4733f974", "filename": "src/test/ui/static/static-region-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatic%2Fstatic-region-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatic%2Fstatic-region-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-region-bound.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/static-region-bound.rs:10:14\n    |\n LL |     let x = &id(3);\n-   |              ^^^^^ creates a temporary which is freed while still in use\n+   |              ^^^^^ creates a temporary value which is freed while still in use\n LL |     f(x);\n    |     ---- argument requires that borrow lasts for `'static`\n LL | }"}, {"sha": "2d29dec888e8d32f40f110e71278cd85aa231701", "filename": "src/test/ui/statics/issue-44373.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatics%2Fissue-44373.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46bc12c95a18822a15edddba02b728448c7d7632/src%2Ftest%2Fui%2Fstatics%2Fissue-44373.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatics%2Fissue-44373.stderr?ref=46bc12c95a18822a15edddba02b728448c7d7632", "patch": "@@ -2,7 +2,7 @@ error[E0716]: temporary value dropped while borrowed\n   --> $DIR/issue-44373.rs:4:42\n    |\n LL |     let _val: &'static [&'static u32] = &[&FOO];\n-   |               -----------------------    ^^^^^^ creates a temporary which is freed while still in use\n+   |               -----------------------    ^^^^^^ creates a temporary value which is freed while still in use\n    |               |\n    |               type annotation requires that borrow lasts for `'static`\n LL | }"}]}