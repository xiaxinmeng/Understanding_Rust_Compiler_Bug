{"sha": "828ffab627350c6250786e0e4960bc3d3aa0b761", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOGZmYWI2MjczNTBjNjI1MDc4NmUwZTQ5NjBiYzNkM2FhMGI3NjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-07T20:26:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-07T20:26:41Z"}, "message": "auto merge of #13726 : michaelwoerister/rust/lldb-autotests, r=alexcrichton\n\nThis pull request contains preparations for adding LLDB autotests:\r\n+ the debuginfo tests are split into debuginfo-gdb and debuginfo-lldb\r\n  + the `compiletest` tool is updated to support the debuginfo-lldb mode\r\n  + tests.mk is modified to provide debuginfo-gdb and debuginfo-lldb make targets\r\n  + GDB test cases are moved from `src/test/debug-info` to `src/test/debuginfo-gdb`\r\n+ configure will now look for LLDB and set the appropriate CFG variables\r\n+ the `lldb_batchmode.py` script is added to `src/etc`. It emulates GDB's batch mode\r\n\r\nThe LLDB autotests themselves are not part of this PR. Those will probable require some manual work on the test bots to make them work for the first time. Better to get these unproblematic preliminaries out of the way in a separate step.", "tree": {"sha": "915ec4eda2c13743d85044050a2eb0e0ad7f8d04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/915ec4eda2c13743d85044050a2eb0e0ad7f8d04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/828ffab627350c6250786e0e4960bc3d3aa0b761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/828ffab627350c6250786e0e4960bc3d3aa0b761", "html_url": "https://github.com/rust-lang/rust/commit/828ffab627350c6250786e0e4960bc3d3aa0b761", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/828ffab627350c6250786e0e4960bc3d3aa0b761/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87115fd001440652291c509a77bda74fa511dab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/87115fd001440652291c509a77bda74fa511dab0", "html_url": "https://github.com/rust-lang/rust/commit/87115fd001440652291c509a77bda74fa511dab0"}, {"sha": "55a8bd56e5a89f98aa9d4ed998cb8c686d447805", "url": "https://api.github.com/repos/rust-lang/rust/commits/55a8bd56e5a89f98aa9d4ed998cb8c686d447805", "html_url": "https://github.com/rust-lang/rust/commit/55a8bd56e5a89f98aa9d4ed998cb8c686d447805"}], "stats": {"total": 7133, "additions": 3749, "deletions": 3384}, "files": [{"sha": "d189c8cb6cd609622b12dbc129bcf8d66699d72e", "filename": "configure", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/configure", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -466,6 +466,26 @@ probe CFG_PDFLATEX         pdflatex\n probe CFG_XELATEX          xelatex\n probe CFG_LUALATEX         lualatex\n probe CFG_GDB              gdb\n+probe CFG_LLDB             lldb\n+\n+if [ ! -z \"$CFG_LLDB\" ]\n+then\n+    # If CFG_LLDB_PYTHON_DIR is not already set from the outside and valid, try to read it from\n+    # LLDB via the -P commandline options.\n+    if [ -z \"$CFG_LLDB_PYTHON_DIR\" ] || [ ! -d \"$CFG_LLDB_PYTHON_DIR\" ]\n+    then\n+        CFG_LLDB_PYTHON_DIR=$($CFG_LLDB -P)\n+\n+        # If CFG_LLDB_PYTHON_DIR is not a valid directory, set it to something more readable\n+        if [ ! -d \"$CFG_LLDB_PYTHON_DIR\" ]\n+        then\n+            CFG_LLDB_PYTHON_DIR=\"LLDB_PYTHON_DIRECTORY_NOT_FOUND\"\n+        fi\n+\n+        putvar CFG_LLDB_PYTHON_DIR\n+    fi\n+fi\n+\n if [ \"$CFG_OSTYPE\" = \"unknown-linux-gnu\" ]\n then\n     probe CFG_PAXCTL           paxctl /sbin/paxctl\n@@ -807,7 +827,8 @@ do\n     make_dir $h/test/bench\n     make_dir $h/test/perf\n     make_dir $h/test/pretty\n-    make_dir $h/test/debug-info\n+    make_dir $h/test/debuginfo-gdb\n+    make_dir $h/test/debuginfo-lldb\n     make_dir $h/test/codegen\n     make_dir $h/test/doc-tutorial\n     make_dir $h/test/doc-guide-ffi"}, {"sha": "012ec0e862de5746ecb7e04ca6e4668f93b54c88", "filename": "mk/tests.mk", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -293,7 +293,8 @@ check-stage$(1)-T-$(2)-H-$(3)-exec:     \t\t\t\t\\\n         check-stage$(1)-T-$(2)-H-$(3)-crates-exec                       \\\n         check-stage$(1)-T-$(2)-H-$(3)-doc-crates-exec                   \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-bench-exec\t\t\t\\\n-\tcheck-stage$(1)-T-$(2)-H-$(3)-debuginfo-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-debuginfo-gdb-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-debuginfo-lldb-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-codegen-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-doc-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-pretty-exec\n@@ -460,7 +461,8 @@ CFAIL_RC := $(wildcard $(S)src/test/compile-fail/*.rc)\n CFAIL_RS := $(wildcard $(S)src/test/compile-fail/*.rs)\n BENCH_RS := $(wildcard $(S)src/test/bench/*.rs)\n PRETTY_RS := $(wildcard $(S)src/test/pretty/*.rs)\n-DEBUGINFO_RS := $(wildcard $(S)src/test/debug-info/*.rs)\n+DEBUGINFO_GDB_RS := $(wildcard $(S)src/test/debuginfo/*.rs)\n+DEBUGINFO_LLDB_RS := $(wildcard $(S)src/test/debuginfo/*.rs)\n CODEGEN_RS := $(wildcard $(S)src/test/codegen/*.rs)\n CODEGEN_CC := $(wildcard $(S)src/test/codegen/*.cc)\n \n@@ -476,7 +478,8 @@ CFAIL_TESTS := $(CFAIL_RC) $(CFAIL_RS)\n BENCH_TESTS := $(BENCH_RS)\n PERF_TESTS := $(PERF_RS)\n PRETTY_TESTS := $(PRETTY_RS)\n-DEBUGINFO_TESTS := $(DEBUGINFO_RS)\n+DEBUGINFO_GDB_TESTS := $(DEBUGINFO_GDB_RS)\n+DEBUGINFO_LLDB_TESTS := $(DEBUGINFO_LLDB_RS)\n CODEGEN_TESTS := $(CODEGEN_RS) $(CODEGEN_CC)\n \n CTEST_SRC_BASE_rpass = run-pass\n@@ -514,10 +517,15 @@ CTEST_BUILD_BASE_perf = perf\n CTEST_MODE_perf = run-pass\n CTEST_RUNTOOL_perf = $(CTEST_PERF_RUNTOOL)\n \n-CTEST_SRC_BASE_debuginfo = debug-info\n-CTEST_BUILD_BASE_debuginfo = debug-info\n-CTEST_MODE_debuginfo = debug-info\n-CTEST_RUNTOOL_debuginfo = $(CTEST_RUNTOOL)\n+CTEST_SRC_BASE_debuginfo-gdb = debuginfo\n+CTEST_BUILD_BASE_debuginfo-gdb = debuginfo-gdb\n+CTEST_MODE_debuginfo-gdb = debuginfo-gdb\n+CTEST_RUNTOOL_debuginfo-gdb = $(CTEST_RUNTOOL)\n+\n+CTEST_SRC_BASE_debuginfo-lldb = debuginfo\n+CTEST_BUILD_BASE_debuginfo-lldb = debuginfo-lldb\n+CTEST_MODE_debuginfo-lldb = debuginfo-lldb\n+CTEST_RUNTOOL_debuginfo-lldb = $(CTEST_RUNTOOL)\n \n CTEST_SRC_BASE_codegen = codegen\n CTEST_BUILD_BASE_codegen = codegen\n@@ -529,15 +537,22 @@ CTEST_RUNTOOL_codegen = $(CTEST_RUNTOOL)\n # during attempts to run those tests.\n \n ifeq ($(CFG_GDB),)\n-CTEST_DISABLE_debuginfo = \"no gdb found\"\n+CTEST_DISABLE_debuginfo-gdb = \"no gdb found\"\n+endif\n+\n+ifeq ($(CFG_LLDB),)\n+CTEST_DISABLE_debuginfo-lldb = \"no lldb found\"\n endif\n \n+# Completely disable LLDB tests for now\n+CTEST_DISABLE_debuginfo-lldb = \"LLDB tests are not enabled yet\"\n+\n ifeq ($(CFG_CLANG),)\n CTEST_DISABLE_codegen = \"no clang found\"\n endif\n \n ifeq ($(CFG_OSTYPE),apple-darwin)\n-CTEST_DISABLE_debuginfo = \"gdb on darwing needs root\"\n+CTEST_DISABLE_debuginfo-gdb = \"gdb on darwing needs root\"\n endif\n \n # CTEST_DISABLE_NONSELFHOST_$(TEST_GROUP), if set, will cause that\n@@ -587,6 +602,7 @@ CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n         --adb-path=$(CFG_ADB)                          \\\n         --adb-test-dir=$(CFG_ADB_TEST_DIR)                  \\\n         --host-rustcflags \"$(RUSTC_FLAGS_$(3)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(3))\" \\\n+        --lldb-python-dir=$(CFG_LLDB_PYTHON_DIR) \\\n         --target-rustcflags \"$(RUSTC_FLAGS_$(2)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(2))\" \\\n         $$(CTEST_TESTARGS)\n \n@@ -597,7 +613,8 @@ CTEST_DEPS_rfail_$(1)-T-$(2)-H-$(3) = $$(RFAIL_TESTS)\n CTEST_DEPS_cfail_$(1)-T-$(2)-H-$(3) = $$(CFAIL_TESTS)\n CTEST_DEPS_bench_$(1)-T-$(2)-H-$(3) = $$(BENCH_TESTS)\n CTEST_DEPS_perf_$(1)-T-$(2)-H-$(3) = $$(PERF_TESTS)\n-CTEST_DEPS_debuginfo_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_TESTS)\n+CTEST_DEPS_debuginfo-gdb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_GDB_TESTS)\n+CTEST_DEPS_debuginfo-lldb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_LLDB_TESTS)\n CTEST_DEPS_codegen_$(1)-T-$(2)-H-$(3) = $$(CODEGEN_TESTS)\n \n endef\n@@ -661,7 +678,7 @@ endif\n \n endef\n \n-CTEST_NAMES = rpass rpass-full cfail-full rfail cfail bench perf debuginfo codegen\n+CTEST_NAMES = rpass rpass-full cfail-full rfail cfail bench perf debuginfo-gdb debuginfo-lldb codegen\n \n $(foreach host,$(CFG_HOST), \\\n  $(eval $(foreach target,$(CFG_TARGET), \\\n@@ -810,7 +827,8 @@ TEST_GROUPS = \\\n \tbench \\\n \tperf \\\n \trmake \\\n-\tdebuginfo \\\n+\tdebuginfo-gdb \\\n+\tdebuginfo-lldb \\\n \tcodegen \\\n \tdoc \\\n \t$(foreach docname,$(DOCS),doc-$(docname)) \\"}, {"sha": "ef8b48a053564fdfc15558a2d2fdf38abf90e5bc", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -14,7 +14,8 @@ pub enum mode {\n     mode_run_fail,\n     mode_run_pass,\n     mode_pretty,\n-    mode_debug_info,\n+    mode_debug_info_gdb,\n+    mode_debug_info_lldb,\n     mode_codegen\n }\n \n@@ -101,6 +102,9 @@ pub struct config {\n     // status whether android device available or not\n     pub adb_device_status: bool,\n \n+    // the path containing LLDB's Python module\n+    pub lldb_python_dir: Option<~str>,\n+\n     // Explain what's going on\n     pub verbose: bool\n "}, {"sha": "f484ea5a8f1fdc237750944becf7af1f073e6f7a", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -28,14 +28,8 @@ use std::os;\n use std::io;\n use std::io::fs;\n use getopts::{optopt, optflag, reqopt};\n-use common::config;\n-use common::mode_run_pass;\n-use common::mode_run_fail;\n-use common::mode_compile_fail;\n-use common::mode_pretty;\n-use common::mode_debug_info;\n-use common::mode_codegen;\n-use common::mode;\n+use common::{config, mode_run_pass, mode_run_fail, mode_compile_fail, mode_pretty,\n+             mode_debug_info_gdb, mode_debug_info_lldb, mode_codegen, mode};\n use util::logv;\n \n pub mod procsrv;\n@@ -87,6 +81,7 @@ pub fn parse_config(args: Vec<~str> ) -> config {\n           optopt(\"\", \"host\", \"the host to build for\", \"HOST\"),\n           optopt(\"\", \"adb-path\", \"path to the android debugger\", \"PATH\"),\n           optopt(\"\", \"adb-test-dir\", \"path to tests for the android debugger\", \"PATH\"),\n+          optopt(\"\", \"lldb-python-dir\", \"directory containing LLDB's python module\", \"PATH\"),\n           optopt(\"\", \"test-shard\", \"run shard A, of B shards, worth of the testsuite\", \"A.B\"),\n           optflag(\"h\", \"help\", \"show this message\"));\n \n@@ -154,6 +149,7 @@ pub fn parse_config(args: Vec<~str> ) -> config {\n             \"arm-linux-androideabi\" == opt_str2(matches.opt_str(\"target\")) &&\n             \"(none)\" != opt_str2(matches.opt_str(\"adb-test-dir\")) &&\n             !opt_str2(matches.opt_str(\"adb-test-dir\")).is_empty(),\n+        lldb_python_dir: matches.opt_str(\"lldb-python-dir\"),\n         test_shard: test::opt_shard(matches.opt_str(\"test-shard\")),\n         verbose: matches.opt_present(\"verbose\")\n     }\n@@ -204,13 +200,14 @@ pub fn opt_str2(maybestr: Option<~str>) -> ~str {\n \n pub fn str_mode(s: ~str) -> mode {\n     match s.as_slice() {\n-      \"compile-fail\" => mode_compile_fail,\n-      \"run-fail\" => mode_run_fail,\n-      \"run-pass\" => mode_run_pass,\n-      \"pretty\" => mode_pretty,\n-      \"debug-info\" => mode_debug_info,\n-      \"codegen\" => mode_codegen,\n-      _ => fail!(\"invalid mode\")\n+        \"compile-fail\" => mode_compile_fail,\n+        \"run-fail\" => mode_run_fail,\n+        \"run-pass\" => mode_run_pass,\n+        \"pretty\" => mode_pretty,\n+        \"debuginfo-gdb\" => mode_debug_info_gdb,\n+        \"debuginfo-lldb\" => mode_debug_info_lldb,\n+        \"codegen\" => mode_codegen,\n+        s => fail!(\"invalid mode: \" + s)\n     }\n }\n \n@@ -220,15 +217,16 @@ pub fn mode_str(mode: mode) -> ~str {\n       mode_run_fail => \"run-fail\".to_owned(),\n       mode_run_pass => \"run-pass\".to_owned(),\n       mode_pretty => \"pretty\".to_owned(),\n-      mode_debug_info => \"debug-info\".to_owned(),\n+      mode_debug_info_gdb => \"debuginfo-gdb\".to_owned(),\n+      mode_debug_info_lldb => \"debuginfo-lldb\".to_owned(),\n       mode_codegen => \"codegen\".to_owned(),\n     }\n }\n \n pub fn run_tests(config: &config) {\n     if config.target == \"arm-linux-androideabi\".to_owned() {\n         match config.mode{\n-            mode_debug_info => {\n+            mode_debug_info_gdb => {\n                 println!(\"arm-linux-androideabi debug-info \\\n                          test uses tcp 5039 port. please reserve it\");\n             }"}, {"sha": "3d954a33a00292e41cf3ce34407baf412cba082a", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -26,8 +26,6 @@ pub struct TestProps {\n     pub aux_builds: Vec<~str> ,\n     // Environment settings to use during execution\n     pub exec_env: Vec<(~str,~str)> ,\n-    // Commands to be given to the debugger, when testing debug info\n-    pub debugger_cmds: Vec<~str> ,\n     // Lines to check if they appear in the expected debugger output\n     pub check_lines: Vec<~str> ,\n     // Flag to force a crate to be built with the host architecture\n@@ -46,7 +44,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n     let mut compile_flags = None;\n     let mut run_flags = None;\n     let mut pp_exact = None;\n-    let mut debugger_cmds = Vec::new();\n     let mut check_lines = Vec::new();\n     let mut force_host = false;\n     let mut check_stdout = false;\n@@ -91,11 +88,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n             None => {}\n         }\n \n-        match parse_debugger_cmd(ln) {\n-            Some(dc) => debugger_cmds.push(dc),\n-            None => ()\n-        };\n-\n         match parse_check_line(ln) {\n             Some(cl) => check_lines.push(cl),\n             None => ()\n@@ -111,7 +103,6 @@ pub fn load_props(testfile: &Path) -> TestProps {\n         pp_exact: pp_exact,\n         aux_builds: aux_builds,\n         exec_env: exec_env,\n-        debugger_cmds: debugger_cmds,\n         check_lines: check_lines,\n         force_host: force_host,\n         check_stdout: check_stdout,\n@@ -173,10 +164,6 @@ fn parse_run_flags(line: &str) -> Option<~str> {\n     parse_name_value_directive(line, \"run-flags\".to_owned())\n }\n \n-fn parse_debugger_cmd(line: &str) -> Option<~str> {\n-    parse_name_value_directive(line, \"debugger\".to_owned())\n-}\n-\n fn parse_check_line(line: &str) -> Option<~str> {\n     parse_name_value_directive(line, \"check\".to_owned())\n }\n@@ -226,7 +213,7 @@ fn parse_name_directive(line: &str, directive: &str) -> bool {\n     line.contains(directive)\n }\n \n-fn parse_name_value_directive(line: &str,\n+pub fn parse_name_value_directive(line: &str,\n                               directive: ~str) -> Option<~str> {\n     let keycolon = directive + \":\";\n     match line.find_str(keycolon) {"}, {"sha": "858e7334cff06b744e11d3428e2f4d6ea6c460f2", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 198, "deletions": 38, "changes": 236, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -8,14 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use common::config;\n-use common::mode_compile_fail;\n-use common::mode_pretty;\n-use common::mode_run_fail;\n-use common::mode_run_pass;\n+use common::{config, mode_compile_fail, mode_pretty, mode_run_fail, mode_run_pass};\n use errors;\n use header::TestProps;\n-use header::load_props;\n+use header;\n use procsrv;\n use util::logv;\n #[cfg(target_os = \"win32\")]\n@@ -59,14 +55,15 @@ pub fn run_metrics(config: config, testfile: ~str, mm: &mut MetricMap) {\n     }\n     let testfile = Path::new(testfile);\n     debug!(\"running {}\", testfile.display());\n-    let props = load_props(&testfile);\n+    let props = header::load_props(&testfile);\n     debug!(\"loaded props\");\n     match config.mode {\n       mode_compile_fail => run_cfail_test(&config, &props, &testfile),\n       mode_run_fail => run_rfail_test(&config, &props, &testfile),\n       mode_run_pass => run_rpass_test(&config, &props, &testfile),\n       mode_pretty => run_pretty_test(&config, &props, &testfile),\n-      mode_debug_info => run_debuginfo_test(&config, &props, &testfile),\n+      mode_debug_info_gdb => run_debuginfo_gdb_test(&config, &props, &testfile),\n+      mode_debug_info_lldb => run_debuginfo_lldb_test(&config, &props, &testfile),\n       mode_codegen => run_codegen_test(&config, &props, &testfile, mm)\n     }\n }\n@@ -259,26 +256,27 @@ actual:\\n\\\n     }\n }\n \n-fn run_debuginfo_test(config: &config, props: &TestProps, testfile: &Path) {\n+fn run_debuginfo_gdb_test(config: &config, props: &TestProps, testfile: &Path) {\n     let mut config = config {\n         target_rustcflags: cleanup_debug_info_options(&config.target_rustcflags),\n         host_rustcflags: cleanup_debug_info_options(&config.host_rustcflags),\n         .. config.clone()\n     };\n \n     let config = &mut config;\n-    let check_lines = &props.check_lines;\n-    let mut cmds = props.debugger_cmds.connect(\"\\n\");\n+    let DebuggerCommands { commands, check_lines, .. } = parse_debugger_commands(testfile, \"gdb\");\n+    let mut cmds = commands.connect(\"\\n\");\n \n     // compile test file (it shoud have 'compile-flags:-g' in the header)\n-    let mut proc_res = compile_test(config, props, testfile);\n-    if !proc_res.status.success() {\n-        fatal_ProcRes(\"compilation failed!\".to_owned(), &proc_res);\n+    let compiler_run_result = compile_test(config, props, testfile);\n+    if !compiler_run_result.status.success() {\n+        fatal_ProcRes(\"compilation failed!\".to_owned(), &compiler_run_result);\n     }\n \n     let exe_file = make_exe_name(config, testfile);\n \n     let mut proc_args;\n+    let debugger_run_result;\n     match config.target.as_slice() {\n         \"arm-linux-androideabi\" => {\n \n@@ -363,10 +361,12 @@ fn run_debuginfo_test(config: &config, props: &TestProps, testfile: &Path) {\n                 cmdline\n             };\n \n-            proc_res = ProcRes {status: status,\n-                               stdout: out,\n-                               stderr: err,\n-                               cmdline: cmdline};\n+            debugger_run_result = ProcRes {\n+                status: status,\n+                stdout: out,\n+                stderr: err,\n+                cmdline: cmdline\n+            };\n             process.signal_kill().unwrap();\n         }\n \n@@ -391,25 +391,199 @@ fn run_debuginfo_test(config: &config, props: &TestProps, testfile: &Path) {\n                 \"-command=\" + debugger_script.as_str().unwrap().to_owned(),\n                 exe_file.as_str().unwrap().to_owned());\n             proc_args = ProcArgs {prog: debugger(), args: debugger_opts};\n-            proc_res = compose_and_run(config, testfile, proc_args, Vec::new(), \"\", None);\n+            debugger_run_result = compose_and_run(config,\n+                                                  testfile,\n+                                                  proc_args,\n+                                                  Vec::new(),\n+                                                  \"\",\n+                                                  None);\n         }\n     }\n \n-    if !proc_res.status.success() {\n+    if !debugger_run_result.status.success() {\n         fatal(\"gdb failed to execute\".to_owned());\n     }\n+\n+    check_debugger_output(&debugger_run_result, check_lines.as_slice());\n+}\n+\n+fn run_debuginfo_lldb_test(config: &config, props: &TestProps, testfile: &Path) {\n+    use std::io::process::{Process, ProcessConfig, ProcessOutput};\n+\n+    if config.lldb_python_dir.is_none() {\n+        fatal(\"Can't run LLDB test because LLDB's python path is not set.\".to_owned());\n+    }\n+\n+    let mut config = config {\n+        target_rustcflags: cleanup_debug_info_options(&config.target_rustcflags),\n+        host_rustcflags: cleanup_debug_info_options(&config.host_rustcflags),\n+        .. config.clone()\n+    };\n+\n+    let config = &mut config;\n+\n+    // compile test file (it shoud have 'compile-flags:-g' in the header)\n+    let compile_result = compile_test(config, props, testfile);\n+    if !compile_result.status.success() {\n+        fatal_ProcRes(\"compilation failed!\".to_owned(), &compile_result);\n+    }\n+\n+    let exe_file = make_exe_name(config, testfile);\n+\n+    // Parse debugger commands etc from test files\n+    let DebuggerCommands {\n+        commands,\n+        check_lines,\n+        breakpoint_lines\n+    } = parse_debugger_commands(testfile, \"lldb\");\n+\n+    // Write debugger script:\n+    // We don't want to hang when calling `quit` while the process is still running\n+    let mut script_str = StrBuf::from_str(\"settings set auto-confirm true\\n\");\n+\n+    // Set breakpoints on every line that contains the string \"#break\"\n+    for line in breakpoint_lines.iter() {\n+        script_str.push_str(format!(\"breakpoint set --line {}\\n\", line));\n+    }\n+\n+    // Append the other commands\n+    for line in commands.iter() {\n+        script_str.push_str(line.as_slice());\n+        script_str.push_str(\"\\n\");\n+    }\n+\n+    // Finally, quit the debugger\n+    script_str.push_str(\"quit\\n\");\n+\n+    // Write the script into a file\n+    debug!(\"script_str = {}\", script_str);\n+    dump_output_file(config, testfile, script_str.into_owned(), \"debugger.script\");\n+    let debugger_script = make_out_name(config, testfile, \"debugger.script\");\n+\n+    // Let LLDB execute the script via lldb_batchmode.py\n+    let debugger_run_result = run_lldb(config, &exe_file, &debugger_script);\n+\n+    if !debugger_run_result.status.success() {\n+        fatal_ProcRes(\"Error while running LLDB\".to_owned(), &debugger_run_result);\n+    }\n+\n+    check_debugger_output(&debugger_run_result, check_lines.as_slice());\n+\n+    fn run_lldb(config: &config, test_executable: &Path, debugger_script: &Path) -> ProcRes {\n+        // Prepare the lldb_batchmode which executes the debugger script\n+        let lldb_batchmode_script = \"./src/etc/lldb_batchmode.py\".to_owned();\n+        let test_executable_str = test_executable.as_str().unwrap().to_owned();\n+        let debugger_script_str = debugger_script.as_str().unwrap().to_owned();\n+        let commandline = format!(\"python {} {} {}\",\n+                                  lldb_batchmode_script.as_slice(),\n+                                  test_executable_str.as_slice(),\n+                                  debugger_script_str.as_slice());\n+\n+        let args = &[lldb_batchmode_script, test_executable_str, debugger_script_str];\n+        let env = &[(\"PYTHONPATH\".to_owned(), config.lldb_python_dir.clone().unwrap())];\n+\n+        let mut opt_process = Process::configure(ProcessConfig {\n+            program: \"python\",\n+            args: args,\n+            env: Some(env),\n+            .. ProcessConfig::new()\n+        });\n+\n+        let (status, out, err) = match opt_process {\n+            Ok(ref mut process) => {\n+                let ProcessOutput { status, output, error } = process.wait_with_output();\n+\n+                (status,\n+                 str::from_utf8(output.as_slice()).unwrap().to_owned(),\n+                 str::from_utf8(error.as_slice()).unwrap().to_owned())\n+            },\n+            Err(e) => {\n+                fatal(format!(\"Failed to setup Python process for LLDB script: {}\", e))\n+            }\n+        };\n+\n+        dump_output(config, test_executable, out, err);\n+        return ProcRes {\n+            status: status,\n+            stdout: out,\n+            stderr: err,\n+            cmdline: commandline\n+        };\n+    }\n+}\n+\n+struct DebuggerCommands\n+{\n+    commands: Vec<~str>,\n+    check_lines: Vec<~str>,\n+    breakpoint_lines: Vec<uint>\n+}\n+\n+fn parse_debugger_commands(file_path: &Path, debugger_prefix: &str) -> DebuggerCommands {\n+    use std::io::{BufferedReader, File};\n+\n+    let command_directive = debugger_prefix + \"-command\";\n+    let check_directive = debugger_prefix + \"-check\";\n+\n+    let mut breakpoint_lines = vec!();\n+    let mut commands = vec!();\n+    let mut check_lines = vec!();\n+    let mut counter = 1;\n+    let mut reader = BufferedReader::new(File::open(file_path).unwrap());\n+    for line in reader.lines() {\n+        match line {\n+            Ok(line) => {\n+                if line.contains(\"#break\") {\n+                    breakpoint_lines.push(counter);\n+                }\n+\n+                header::parse_name_value_directive(line, command_directive.clone())\n+                    .map(|cmd| commands.push(cmd));\n+\n+                header::parse_name_value_directive(line, check_directive.clone())\n+                    .map(|cmd| check_lines.push(cmd));\n+            }\n+            Err(e) => {\n+                fatal(format!(\"Error while parsing debugger commands: {}\", e))\n+            }\n+        }\n+        counter += 1;\n+    }\n+\n+    DebuggerCommands {\n+        commands: commands,\n+        check_lines: check_lines,\n+        breakpoint_lines: breakpoint_lines\n+    }\n+}\n+\n+fn cleanup_debug_info_options(options: &Option<~str>) -> Option<~str> {\n+    if options.is_none() {\n+        return None;\n+    }\n+\n+    // Remove options that are either unwanted (-O) or may lead to duplicates due to RUSTFLAGS.\n+    let options_to_remove = [\"-O\".to_owned(), \"-g\".to_owned(), \"--debuginfo\".to_owned()];\n+    let new_options = split_maybe_args(options).move_iter()\n+                                               .filter(|x| !options_to_remove.contains(x))\n+                                               .collect::<Vec<~str>>()\n+                                               .connect(\" \");\n+    Some(new_options)\n+}\n+\n+fn check_debugger_output(debugger_run_result: &ProcRes, check_lines: &[~str]) {\n     let num_check_lines = check_lines.len();\n     if num_check_lines > 0 {\n         // Allow check lines to leave parts unspecified (e.g., uninitialized\n         // bits in the wrong case of an enum) with the notation \"[...]\".\n         let check_fragments: Vec<Vec<~str>> =\n             check_lines.iter().map(|s| {\n-                s.split_str(\"[...]\").map(|x| x.to_str()).collect()\n+                s.trim().split_str(\"[...]\").map(|x| x.to_str()).collect()\n             }).collect();\n         // check if each line in props.check_lines appears in the\n         // output (in order)\n         let mut i = 0u;\n-        for line in proc_res.stdout.lines() {\n+        for line in debugger_run_result.stdout.lines() {\n             let mut rest = line.trim();\n             let mut first = true;\n             let mut failed = false;\n@@ -440,23 +614,9 @@ fn run_debuginfo_test(config: &config, props: &TestProps, testfile: &Path) {\n         }\n         if i != num_check_lines {\n             fatal_ProcRes(format!(\"line not found in debugger output: {}\",\n-                                  *check_lines.get(i)), &proc_res);\n+                                  check_lines.get(i).unwrap()), debugger_run_result);\n         }\n     }\n-\n-    fn cleanup_debug_info_options(options: &Option<~str>) -> Option<~str> {\n-        if options.is_none() {\n-            return None;\n-        }\n-\n-        // Remove options that are either unwanted (-O) or may lead to duplicates due to RUSTFLAGS.\n-        let options_to_remove = [\"-O\".to_owned(), \"-g\".to_owned(), \"--debuginfo\".to_owned()];\n-        let new_options = split_maybe_args(options).move_iter()\n-                                                   .filter(|x| !options_to_remove.contains(x))\n-                                                   .collect::<Vec<~str>>()\n-                                                   .connect(\" \");\n-        Some(new_options)\n-    }\n }\n \n fn check_error_patterns(props: &TestProps,\n@@ -736,7 +896,7 @@ fn compose_and_run_compiler(\n \n     for rel_ab in props.aux_builds.iter() {\n         let abs_ab = config.aux_base.join(rel_ab.as_slice());\n-        let aux_props = load_props(&abs_ab);\n+        let aux_props = header::load_props(&abs_ab);\n         let crate_type = if aux_props.no_prefer_dynamic {\n             Vec::new()\n         } else {"}, {"sha": "85bfc425b587d2e37022e4a0fd21433eeacf911e", "filename": "src/etc/lldb_batchmode.py", "status": "added", "additions": 184, "deletions": 0, "changes": 184, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fetc%2Flldb_batchmode.py", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Fetc%2Flldb_batchmode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_batchmode.py?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,184 @@\n+# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# This script allows to use LLDB in a way similar to GDB's batch mode. That is, given a text file\n+# containing LLDB commands (one command per line), this script will execute the commands one after\n+# the other.\n+# LLDB also has the -s and -S commandline options which also execute a list of commands from a text\n+# file. However, this command are execute `immediately`: a the command of a `run` or `continue`\n+# command will be executed immediately after the `run` or `continue`, without waiting for the next\n+# breakpoint to be hit. This a command sequence like the following will not yield reliable results:\n+#\n+#   break 11\n+#   run\n+#   print x\n+#\n+# Most of the time the `print` command will be executed while the program is still running will thus\n+# fail. Using this Python script, the above will work as expected.\n+\n+from __future__ import print_function\n+import lldb\n+import os\n+import sys\n+import threading\n+import re\n+import atexit\n+\n+# Terminate the debugger\n+atexit.register(lambda: lldb.SBDebugger.Terminate())\n+\n+# Set this to True for additional output\n+DEBUG_OUTPUT = False\n+\n+def print_debug(s):\n+  \"Print something if DEBUG_OUTPUT is True\"\n+  global DEBUG_OUTPUT\n+  if DEBUG_OUTPUT:\n+    print(\"DEBUG: \" + str(s))\n+\n+\n+def normalize_whitespace(s):\n+  \"Replace newlines, tabs, multiple spaces, etc with exactly one space\"\n+  return re.sub(\"\\s+\", \" \", s)\n+\n+\n+# This callback is registered with every breakpoint and makes sure that the frame containing the\n+# breakpoint location is selected\n+def breakpoint_callback(frame, bp_loc, dict):\n+  \"Called whenever a breakpoint is hit\"\n+  print(\"Hit breakpoint \" + str(bp_loc))\n+\n+  # Select the frame and the thread containing it\n+  frame.thread.process.SetSelectedThread(frame.thread)\n+  frame.thread.SetSelectedFrame(frame.idx)\n+\n+  # Returning True means that we actually want to stop at this breakpoint\n+  return True\n+\n+\n+# This is a list of breakpoints that are not registered with the breakpoint callback. The list is\n+# populated by the breakpoint listener and checked/emptied whenever a command has been executed\n+new_breakpoints = []\n+\n+# This set contains all breakpoint ids that have already been registered with a callback, and is\n+# used to avoid hooking callbacks into breakpoints more than once\n+registered_breakpoints = set()\n+\n+def execute_command(command_interpreter, command):\n+  \"Executes a single CLI command\"\n+  global new_breakpoints\n+  global registered_breakpoints\n+\n+  res = lldb.SBCommandReturnObject()\n+  print(command)\n+  command_interpreter.HandleCommand(command, res)\n+\n+  if res.Succeeded():\n+      if res.HasResult():\n+          print(normalize_whitespace(res.GetOutput()), end = '\\n')\n+\n+      # If the command introduced any breakpoints, make sure to register them with the breakpoint\n+      # callback\n+      while len(new_breakpoints) > 0:\n+        res.Clear()\n+        breakpoint_id = new_breakpoints.pop()\n+\n+        if breakpoint_id in registered_breakpoints:\n+          print_debug(\"breakpoint with id %s is already registered. Ignoring.\" % str(breakpoint_id))\n+        else:\n+          print_debug(\"registering breakpoint callback, id = \" + str(breakpoint_id))\n+          callback_command = \"breakpoint command add -F breakpoint_callback \" + str(breakpoint_id)\n+          command_interpreter.HandleCommand(callback_command, res)\n+          if res.Succeeded():\n+            print_debug(\"successfully registered breakpoint callback, id = \" + str(breakpoint_id))\n+            registered_breakpoints.add(breakpoint_id)\n+          else:\n+            print(\"Error while trying to register breakpoint callback, id = \" + str(breakpoint_id))\n+  else:\n+      print(res.GetError())\n+\n+\n+def start_breakpoint_listener(target):\n+  \"Listens for breakpoints being added and adds new ones to the callback registration list\"\n+  listener = lldb.SBListener(\"breakpoint listener\")\n+\n+  def listen():\n+    event = lldb.SBEvent()\n+    try:\n+      while True:\n+        if listener.WaitForEvent(120, event):\n+          if lldb.SBBreakpoint.EventIsBreakpointEvent(event) and \\\n+             lldb.SBBreakpoint.GetBreakpointEventTypeFromEvent(event) == \\\n+             lldb.eBreakpointEventTypeAdded:\n+            global new_breakpoints\n+            breakpoint = lldb.SBBreakpoint.GetBreakpointFromEvent(event)\n+            print_debug(\"breakpoint added, id = \" + str(breakpoint.id))\n+            new_breakpoints.append(breakpoint.id)\n+    except:\n+      print_debug(\"breakpoint listener shutting down\")\n+\n+  # Start the listener and let it run as a daemon\n+  listener_thread = threading.Thread(target = listen)\n+  listener_thread.daemon = True\n+  listener_thread.start()\n+\n+  # Register the listener with the target\n+  target.GetBroadcaster().AddListener(listener, lldb.SBTarget.eBroadcastBitBreakpointChanged)\n+\n+\n+####################################################################################################\n+# ~main\n+####################################################################################################\n+\n+if len(sys.argv) != 3:\n+  print(\"usage: python lldb_batchmode.py target-path script-path\")\n+  sys.exit(1)\n+\n+target_path = sys.argv[1]\n+script_path = sys.argv[2]\n+\n+\n+# Create a new debugger instance\n+debugger = lldb.SBDebugger.Create()\n+\n+# When we step or continue, don't return from the function until the process\n+# stops. We do this by setting the async mode to false.\n+debugger.SetAsync(False)\n+\n+# Create a target from a file and arch\n+print(\"Creating a target for '%s'\" % target_path)\n+target = debugger.CreateTargetWithFileAndArch(target_path, lldb.LLDB_ARCH_DEFAULT)\n+\n+if not target:\n+  print(\"Could not create debugging target '\" + target_path + \"'. Aborting.\", file=sys.stderr)\n+  sys.exit(1)\n+\n+\n+# Register the breakpoint callback for every breakpoint\n+start_breakpoint_listener(target)\n+\n+command_interpreter = debugger.GetCommandInterpreter()\n+\n+try:\n+  script_file = open(script_path, 'r')\n+\n+  for line in script_file:\n+    command = line.strip()\n+    if command != '':\n+      execute_command(command_interpreter, command)\n+\n+except IOError as e:\n+  print(\"Could not read debugging script '%s'.\" % script_path, file = sys.stderr)\n+  print(e, file = sys.stderr)\n+  print(\"Aborting.\", file = sys.stderr)\n+  sys.exit(1)\n+finally:\n+  script_file.close()\n+"}, {"sha": "bf6d63f2ca92fb631f6317a0293083d7507fbdd1", "filename": "src/test/debug-info/basic-types-globals-metadata.rs", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fbasic-types-globals-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fbasic-types-globals-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fbasic-types-globals-metadata.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,73 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-win32: FIXME #13256\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:whatis 'basic-types-globals-metadata::B'\n-// check:type = bool\n-// debugger:whatis 'basic-types-globals-metadata::I'\n-// check:type = int\n-// debugger:whatis 'basic-types-globals-metadata::C'\n-// check:type = char\n-// debugger:whatis 'basic-types-globals-metadata::I8'\n-// check:type = i8\n-// debugger:whatis 'basic-types-globals-metadata::I16'\n-// check:type = i16\n-// debugger:whatis 'basic-types-globals-metadata::I32'\n-// check:type = i32\n-// debugger:whatis 'basic-types-globals-metadata::I64'\n-// check:type = i64\n-// debugger:whatis 'basic-types-globals-metadata::U'\n-// check:type = uint\n-// debugger:whatis 'basic-types-globals-metadata::U8'\n-// check:type = u8\n-// debugger:whatis 'basic-types-globals-metadata::U16'\n-// check:type = u16\n-// debugger:whatis 'basic-types-globals-metadata::U32'\n-// check:type = u32\n-// debugger:whatis 'basic-types-globals-metadata::U64'\n-// check:type = u64\n-// debugger:whatis 'basic-types-globals-metadata::F32'\n-// check:type = f32\n-// debugger:whatis 'basic-types-globals-metadata::F64'\n-// check:type = f64\n-// debugger:continue\n-\n-#![allow(unused_variable)]\n-#![allow(dead_code)]\n-\n-\n-static B: bool = false;\n-static I: int = -1;\n-static C: char = 'a';\n-static I8: i8 = 68;\n-static I16: i16 = -16;\n-static I32: i32 = -32;\n-static I64: i64 = -64;\n-static U: uint = 1;\n-static U8: u8 = 100;\n-static U16: u16 = 16;\n-static U32: u32 = 32;\n-static U64: u64 = 64;\n-static F32: f32 = 2.5;\n-static F64: f64 = 3.5;\n-\n-fn main() {\n-    _zzz();\n-\n-    let a = (B, I, C, I8, I16, I32, I64, U, U8, U16, U32, U64, F32, F64);\n-}\n-\n-fn _zzz() {()}"}, {"sha": "1580f73461734de4132cf45860f4eeee37ad5789", "filename": "src/test/debug-info/basic-types-mut-globals.rs", "status": "removed", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fbasic-types-mut-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fbasic-types-mut-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fbasic-types-mut-globals.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,129 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Caveats - gdb prints any 8-bit value (meaning rust I8 and u8 values)\n-// as its numerical value along with its associated ASCII char, there\n-// doesn't seem to be any way around this. Also, gdb doesn't know\n-// about UTF-32 character encoding and will print a rust char as only\n-// its numerical value.\n-\n-// ignore-win32: FIXME #13256\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// Check initializers\n-// debugger:print 'basic-types-mut-globals::B'\n-// check:$1 = false\n-// debugger:print 'basic-types-mut-globals::I'\n-// check:$2 = -1\n-// debugger:print 'basic-types-mut-globals::C'\n-// check:$3 = 97\n-// debugger:print/d 'basic-types-mut-globals::I8'\n-// check:$4 = 68\n-// debugger:print 'basic-types-mut-globals::I16'\n-// check:$5 = -16\n-// debugger:print 'basic-types-mut-globals::I32'\n-// check:$6 = -32\n-// debugger:print 'basic-types-mut-globals::I64'\n-// check:$7 = -64\n-// debugger:print 'basic-types-mut-globals::U'\n-// check:$8 = 1\n-// debugger:print/d 'basic-types-mut-globals::U8'\n-// check:$9 = 100\n-// debugger:print 'basic-types-mut-globals::U16'\n-// check:$10 = 16\n-// debugger:print 'basic-types-mut-globals::U32'\n-// check:$11 = 32\n-// debugger:print 'basic-types-mut-globals::U64'\n-// check:$12 = 64\n-// debugger:print 'basic-types-mut-globals::F32'\n-// check:$13 = 2.5\n-// debugger:print 'basic-types-mut-globals::F64'\n-// check:$14 = 3.5\n-// debugger:continue\n-\n-// Check new values\n-// debugger:print 'basic-types-mut-globals'::B\n-// check:$15 = true\n-// debugger:print 'basic-types-mut-globals'::I\n-// check:$16 = 2\n-// debugger:print 'basic-types-mut-globals'::C\n-// check:$17 = 102\n-// debugger:print/d 'basic-types-mut-globals'::I8\n-// check:$18 = 78\n-// debugger:print 'basic-types-mut-globals'::I16\n-// check:$19 = -26\n-// debugger:print 'basic-types-mut-globals'::I32\n-// check:$20 = -12\n-// debugger:print 'basic-types-mut-globals'::I64\n-// check:$21 = -54\n-// debugger:print 'basic-types-mut-globals'::U\n-// check:$22 = 5\n-// debugger:print/d 'basic-types-mut-globals'::U8\n-// check:$23 = 20\n-// debugger:print 'basic-types-mut-globals'::U16\n-// check:$24 = 32\n-// debugger:print 'basic-types-mut-globals'::U32\n-// check:$25 = 16\n-// debugger:print 'basic-types-mut-globals'::U64\n-// check:$26 = 128\n-// debugger:print 'basic-types-mut-globals'::F32\n-// check:$27 = 5.75\n-// debugger:print 'basic-types-mut-globals'::F64\n-// check:$28 = 9.25\n-\n-// debugger:detach\n-// debugger:quit\n-\n-#![allow(unused_variable)]\n-\n-static mut B: bool = false;\n-static mut I: int = -1;\n-static mut C: char = 'a';\n-static mut I8: i8 = 68;\n-static mut I16: i16 = -16;\n-static mut I32: i32 = -32;\n-static mut I64: i64 = -64;\n-static mut U: uint = 1;\n-static mut U8: u8 = 100;\n-static mut U16: u16 = 16;\n-static mut U32: u32 = 32;\n-static mut U64: u64 = 64;\n-static mut F32: f32 = 2.5;\n-static mut F64: f64 = 3.5;\n-\n-fn main() {\n-    _zzz();\n-\n-    unsafe {\n-        B = true;\n-        I = 2;\n-        C = 'f';\n-        I8 = 78;\n-        I16 = -26;\n-        I32 = -12;\n-        I64 = -54;\n-        U = 5;\n-        U8 = 20;\n-        U16 = 32;\n-        U32 = 16;\n-        U64 = 128;\n-        F32 = 5.75;\n-        F64 = 9.25;\n-    }\n-\n-    _zzz();\n-}\n-\n-fn _zzz() {()}"}, {"sha": "fd217912b0a0eab9e29ce8943077f116c4fb7693", "filename": "src/test/debug-info/lexical-scope-in-unconditional-loop.rs", "status": "removed", "additions": 0, "deletions": 127, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Flexical-scope-in-unconditional-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Flexical-scope-in-unconditional-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Flexical-scope-in-unconditional-loop.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,127 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// FIRST ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = 0\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$2 = 1\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 101\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$4 = 101\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = -987\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$6 = 101\n-// debugger:continue\n-\n-\n-// SECOND ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = 1\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$8 = 2\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$9 = 102\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$10 = 102\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$11 = -987\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$12 = 102\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$13 = 2\n-// debugger:continue\n-\n-fn main() {\n-\n-    let mut x = 0;\n-\n-    loop {\n-        if x >= 2 {\n-            break;\n-        }\n-\n-        zzz();\n-        sentinel();\n-\n-        x += 1;\n-        zzz();\n-        sentinel();\n-\n-        // Shadow x\n-        let x = x + 100;\n-        zzz();\n-        sentinel();\n-\n-        // open scope within loop's top level scope\n-        {\n-            zzz();\n-            sentinel();\n-\n-            let x = -987;\n-\n-            zzz();\n-            sentinel();\n-        }\n-\n-        // Check that we get the x before the inner scope again\n-        zzz();\n-        sentinel();\n-    }\n-\n-    zzz();\n-    sentinel();\n-}\n-\n-fn zzz() {()}\n-fn sentinel() {()}"}, {"sha": "a47343467a95b763ed277cd6cc02d88e811c2f8b", "filename": "src/test/debug-info/lexical-scope-in-while.rs", "status": "removed", "additions": 0, "deletions": 123, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Flexical-scope-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Flexical-scope-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Flexical-scope-in-while.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,123 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// FIRST ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = 0\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$2 = 1\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 101\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$4 = 101\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = -987\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$6 = 101\n-// debugger:continue\n-\n-\n-// SECOND ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = 1\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$8 = 2\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$9 = 102\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$10 = 102\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$11 = -987\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$12 = 102\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$13 = 2\n-// debugger:continue\n-\n-fn main() {\n-\n-    let mut x = 0;\n-\n-    while x < 2 {\n-        zzz();\n-        sentinel();\n-\n-        x += 1;\n-        zzz();\n-        sentinel();\n-\n-        // Shadow x\n-        let x = x + 100;\n-        zzz();\n-        sentinel();\n-\n-        // open scope within loop's top level scope\n-        {\n-            zzz();\n-            sentinel();\n-\n-            let x = -987;\n-\n-            zzz();\n-            sentinel();\n-        }\n-\n-        // Check that we get the x before the inner scope again\n-        zzz();\n-        sentinel();\n-    }\n-\n-    zzz();\n-    sentinel();\n-}\n-\n-fn zzz() {()}\n-fn sentinel() {()}"}, {"sha": "6626d75dc0c9869edd4a3a8fd0f893e8cd0c40b8", "filename": "src/test/debug-info/lexical-scopes-in-block-expression.rs", "status": "removed", "additions": 0, "deletions": 377, "changes": 377, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Flexical-scopes-in-block-expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Flexical-scopes-in-block-expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Flexical-scopes-in-block-expression.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,377 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-win32: FIXME #13256\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$1 = 0\n-\n-// STRUCT EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$2 = -1\n-// debugger:print ten\n-// check:$3 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$4 = 11\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$5 = 1\n-// debugger:print ten\n-// check:$6 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$7 = -1\n-// debugger:print ten\n-// check:$8 = 10\n-// debugger:continue\n-\n-// FUNCTION CALL\n-// debugger:finish\n-// debugger:print val\n-// check:$9 = -1\n-// debugger:print ten\n-// check:$10 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$11 = 12\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$12 = 2\n-// debugger:print ten\n-// check:$13 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$14 = -1\n-// debugger:print ten\n-// check:$15 = 10\n-// debugger:continue\n-\n-// TUPLE EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$16 = -1\n-// debugger:print ten\n-// check:$17 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$18 = 13\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$19 = 3\n-// debugger:print ten\n-// check:$20 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$21 = -1\n-// debugger:print ten\n-// check:$22 = 10\n-// debugger:continue\n-\n-// VEC EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$23 = -1\n-// debugger:print ten\n-// check:$24 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$25 = 14\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$26 = 4\n-// debugger:print ten\n-// check:$27 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$28 = -1\n-// debugger:print ten\n-// check:$29 = 10\n-// debugger:continue\n-\n-// REPEAT VEC EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$30 = -1\n-// debugger:print ten\n-// check:$31 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$32 = 15\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$33 = 5\n-// debugger:print ten\n-// check:$34 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$35 = -1\n-// debugger:print ten\n-// check:$36 = 10\n-// debugger:continue\n-\n-// ASSIGNMENT EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$37 = -1\n-// debugger:print ten\n-// check:$38 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$39 = 16\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$40 = 6\n-// debugger:print ten\n-// check:$41 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$42 = -1\n-// debugger:print ten\n-// check:$43 = 10\n-// debugger:continue\n-\n-\n-// ARITHMETIC EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$44 = -1\n-// debugger:print ten\n-// check:$45 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$46 = 17\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$47 = 7\n-// debugger:print ten\n-// check:$48 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$49 = -1\n-// debugger:print ten\n-// check:$50 = 10\n-// debugger:continue\n-\n-// INDEX EXPRESSION\n-// debugger:finish\n-// debugger:print val\n-// check:$51 = -1\n-// debugger:print ten\n-// check:$52 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$53 = 18\n-// debugger:print 'lexical-scopes-in-block-expression::MUT_INT'\n-// check:$54 = 8\n-// debugger:print ten\n-// check:$55 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print val\n-// check:$56 = -1\n-// debugger:print ten\n-// check:$57 = 10\n-// debugger:continue\n-\n-#![allow(unused_variable)]\n-#![allow(dead_assignment)]\n-\n-static mut MUT_INT: int = 0;\n-\n-struct Point {\n-    x: int,\n-    y: int\n-}\n-\n-fn a_function(x: int) -> int {\n-    x + 1\n-}\n-\n-fn main() {\n-\n-    let val = -1;\n-    let ten = 10;\n-\n-    // surrounded by struct expression\n-    let point = Point {\n-        x: {\n-            zzz();\n-            sentinel();\n-\n-            let val = ten + 1;\n-            unsafe {MUT_INT = 1;};\n-\n-            zzz();\n-            sentinel();\n-\n-            val\n-        },\n-        y: 10\n-    };\n-\n-    zzz();\n-    sentinel();\n-\n-    // surrounded by function call\n-    let _ = a_function({\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 2;\n-        unsafe {MUT_INT = 2;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val\n-    });\n-\n-    zzz();\n-    sentinel();\n-\n-\n-    // surrounded by tup\n-    let _ = ({\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 3;\n-        unsafe {MUT_INT = 3;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val\n-    }, 0);\n-\n-    zzz();\n-    sentinel();\n-\n-    // surrounded by vec\n-    let _ = [{\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 4;\n-        unsafe {MUT_INT = 4;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val\n-    }, 0, 0];\n-\n-    zzz();\n-    sentinel();\n-\n-    // surrounded by repeat vec\n-    let _ = [{\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 5;\n-        unsafe {MUT_INT = 5;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val\n-    }, ..10];\n-\n-    zzz();\n-    sentinel();\n-\n-    // assignment expression\n-    let mut var = 0;\n-    var = {\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 6;\n-        unsafe {MUT_INT = 6;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val\n-    };\n-\n-    zzz();\n-    sentinel();\n-\n-    // arithmetic expression\n-    var = 10 + -{\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 7;\n-        unsafe {MUT_INT = 7;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val\n-    } * 5;\n-\n-    zzz();\n-    sentinel();\n-\n-    // index expression\n-    let a_vector = [10, ..20];\n-    let _ = a_vector[{\n-        zzz();\n-        sentinel();\n-\n-        let val = ten + 8;\n-        unsafe {MUT_INT = 8;};\n-\n-        zzz();\n-        sentinel();\n-\n-        val as uint\n-    }];\n-\n-    zzz();\n-    sentinel();\n-}\n-\n-fn zzz() {()}\n-fn sentinel() {()}"}, {"sha": "256a34ff0ab13a64851c36ced103cb8e94dfa815", "filename": "src/test/debug-info/simple-tuple.rs", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fsimple-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fsimple-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fsimple-tuple.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,113 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-win32: FIXME #13256\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-\n-// debugger:print/d 'simple-tuple::NO_PADDING_8'\n-// check:$1 = {-50, 50}\n-// debugger:print 'simple-tuple::NO_PADDING_16'\n-// check:$2 = {-1, 2, 3}\n-// debugger:print 'simple-tuple::NO_PADDING_32'\n-// check:$3 = {4, 5, 6}\n-// debugger:print 'simple-tuple::NO_PADDING_64'\n-// check:$4 = {7, 8, 9}\n-\n-// debugger:print 'simple-tuple::INTERNAL_PADDING_1'\n-// check:$5 = {10, 11}\n-// debugger:print 'simple-tuple::INTERNAL_PADDING_2'\n-// check:$6 = {12, 13, 14, 15}\n-\n-// debugger:print 'simple-tuple::PADDING_AT_END'\n-// check:$7 = {16, 17}\n-\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print/d noPadding8\n-// check:$8 = {-100, 100}\n-// debugger:print noPadding16\n-// check:$9 = {0, 1, 2}\n-// debugger:print noPadding32\n-// check:$10 = {3, 4.5, 5}\n-// debugger:print noPadding64\n-// check:$11 = {6, 7.5, 8}\n-\n-// debugger:print internalPadding1\n-// check:$12 = {9, 10}\n-// debugger:print internalPadding2\n-// check:$13 = {11, 12, 13, 14}\n-\n-// debugger:print paddingAtEnd\n-// check:$14 = {15, 16}\n-\n-// debugger:print/d 'simple-tuple::NO_PADDING_8'\n-// check:$15 = {-127, 127}\n-// debugger:print 'simple-tuple::NO_PADDING_16'\n-// check:$16 = {-10, 10, 9}\n-// debugger:print 'simple-tuple::NO_PADDING_32'\n-// check:$17 = {14, 15, 16}\n-// debugger:print 'simple-tuple::NO_PADDING_64'\n-// check:$18 = {17, 18, 19}\n-\n-// debugger:print 'simple-tuple::INTERNAL_PADDING_1'\n-// check:$19 = {110, 111}\n-// debugger:print 'simple-tuple::INTERNAL_PADDING_2'\n-// check:$20 = {112, 113, 114, 115}\n-\n-// debugger:print 'simple-tuple::PADDING_AT_END'\n-// check:$21 = {116, 117}\n-\n-#![allow(unused_variable)]\n-#![allow(dead_code)]\n-\n-static mut NO_PADDING_8: (i8, u8) = (-50, 50);\n-static mut NO_PADDING_16: (i16, i16, u16) = (-1, 2, 3);\n-\n-static mut NO_PADDING_32: (i32, f32, u32) = (4, 5.0, 6);\n-static mut NO_PADDING_64: (i64, f64, u64) = (7, 8.0, 9);\n-\n-static mut INTERNAL_PADDING_1: (i16, i32) = (10, 11);\n-static mut INTERNAL_PADDING_2: (i16, i32, u32, u64) = (12, 13, 14, 15);\n-\n-static mut PADDING_AT_END: (i32, i16) = (16, 17);\n-\n-fn main() {\n-    let noPadding8: (i8, u8) = (-100, 100);\n-    let noPadding16: (i16, i16, u16) = (0, 1, 2);\n-    let noPadding32: (i32, f32, u32) = (3, 4.5, 5);\n-    let noPadding64: (i64, f64, u64) = (6, 7.5, 8);\n-\n-    let internalPadding1: (i16, i32) = (9, 10);\n-    let internalPadding2: (i16, i32, u32, u64) = (11, 12, 13, 14);\n-\n-    let paddingAtEnd: (i32, i16) = (15, 16);\n-\n-    unsafe {\n-        NO_PADDING_8 = (-127, 127);\n-        NO_PADDING_16 = (-10, 10, 9);\n-\n-        NO_PADDING_32 = (14, 15.0, 16);\n-        NO_PADDING_64 = (17, 18.0, 19);\n-\n-        INTERNAL_PADDING_1 = (110, 111);\n-        INTERNAL_PADDING_2 = (112, 113, 114, 115);\n-\n-        PADDING_AT_END = (116, 117);\n-    }\n-\n-    zzz();\n-}\n-\n-fn zzz() {()}"}, {"sha": "6171facc42bc5fd47b9c9cc318a0be50f426a353", "filename": "src/test/debug-info/vec-slices.rs", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87115fd001440652291c509a77bda74fa511dab0/src%2Ftest%2Fdebug-info%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fvec-slices.rs?ref=87115fd001440652291c509a77bda74fa511dab0", "patch": "@@ -1,87 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-win32: FIXME #13256\n-// ignore-android: FIXME(#10381)\n-\n-// compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print empty.length\n-// check:$1 = 0\n-\n-// debugger:print singleton.length\n-// check:$2 = 1\n-// debugger:print *((int64_t[1]*)(singleton.data_ptr))\n-// check:$3 = {1}\n-\n-// debugger:print multiple.length\n-// check:$4 = 4\n-// debugger:print *((int64_t[4]*)(multiple.data_ptr))\n-// check:$5 = {2, 3, 4, 5}\n-\n-// debugger:print slice_of_slice.length\n-// check:$6 = 2\n-// debugger:print *((int64_t[2]*)(slice_of_slice.data_ptr))\n-// check:$7 = {3, 4}\n-\n-// debugger:print padded_tuple.length\n-// check:$8 = 2\n-// debugger:print padded_tuple.data_ptr[0]\n-// check:$9 = {6, 7}\n-// debugger:print padded_tuple.data_ptr[1]\n-// check:$10 = {8, 9}\n-\n-// debugger:print padded_struct.length\n-// check:$11 = 2\n-// debugger:print padded_struct.data_ptr[0]\n-// check:$12 = {x = 10, y = 11, z = 12}\n-// debugger:print padded_struct.data_ptr[1]\n-// check:$13 = {x = 13, y = 14, z = 15}\n-\n-// debugger:print 'vec-slices::MUT_VECT_SLICE'.length\n-// check:$14 = 2\n-// debugger:print *((int64_t[2]*)('vec-slices::MUT_VECT_SLICE'.data_ptr))\n-// check:$15 = {64, 65}\n-\n-#![allow(unused_variable)]\n-\n-struct AStruct {\n-    x: i16,\n-    y: i32,\n-    z: i16\n-}\n-\n-static VECT_SLICE: &'static [i64] = &[64, 65];\n-static mut MUT_VECT_SLICE: &'static [i64] = &[32];\n-\n-fn main() {\n-    let empty: &[i64] = &[];\n-    let singleton: &[i64] = &[1];\n-    let multiple: &[i64] = &[2, 3, 4, 5];\n-    let slice_of_slice = multiple.slice(1,3);\n-\n-    let padded_tuple: &[(i32, i16)] = &[(6, 7), (8, 9)];\n-\n-    let padded_struct: &[AStruct] = &[\n-        AStruct { x: 10, y: 11, z: 12 },\n-        AStruct { x: 13, y: 14, z: 15 }\n-    ];\n-\n-    unsafe {\n-        MUT_VECT_SLICE = VECT_SLICE;\n-    }\n-\n-    zzz();\n-}\n-\n-fn zzz() {()}"}, {"sha": "1e157f10c12a5f4609286e81788f290ef23a698d", "filename": "src/test/debuginfo/basic-types-globals-metadata.rs", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,73 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-win32: FIXME #13256\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:whatis 'basic-types-globals-metadata::B'\n+// gdb-check:type = bool\n+// gdb-command:whatis 'basic-types-globals-metadata::I'\n+// gdb-check:type = int\n+// gdb-command:whatis 'basic-types-globals-metadata::C'\n+// gdb-check:type = char\n+// gdb-command:whatis 'basic-types-globals-metadata::I8'\n+// gdb-check:type = i8\n+// gdb-command:whatis 'basic-types-globals-metadata::I16'\n+// gdb-check:type = i16\n+// gdb-command:whatis 'basic-types-globals-metadata::I32'\n+// gdb-check:type = i32\n+// gdb-command:whatis 'basic-types-globals-metadata::I64'\n+// gdb-check:type = i64\n+// gdb-command:whatis 'basic-types-globals-metadata::U'\n+// gdb-check:type = uint\n+// gdb-command:whatis 'basic-types-globals-metadata::U8'\n+// gdb-check:type = u8\n+// gdb-command:whatis 'basic-types-globals-metadata::U16'\n+// gdb-check:type = u16\n+// gdb-command:whatis 'basic-types-globals-metadata::U32'\n+// gdb-check:type = u32\n+// gdb-command:whatis 'basic-types-globals-metadata::U64'\n+// gdb-check:type = u64\n+// gdb-command:whatis 'basic-types-globals-metadata::F32'\n+// gdb-check:type = f32\n+// gdb-command:whatis 'basic-types-globals-metadata::F64'\n+// gdb-check:type = f64\n+// gdb-command:continue\n+\n+#![allow(unused_variable)]\n+#![allow(dead_code)]\n+\n+\n+static B: bool = false;\n+static I: int = -1;\n+static C: char = 'a';\n+static I8: i8 = 68;\n+static I16: i16 = -16;\n+static I32: i32 = -32;\n+static I64: i64 = -64;\n+static U: uint = 1;\n+static U8: u8 = 100;\n+static U16: u16 = 16;\n+static U32: u32 = 32;\n+static U64: u64 = 64;\n+static F32: f32 = 2.5;\n+static F64: f64 = 3.5;\n+\n+fn main() {\n+    _zzz();\n+\n+    let a = (B, I, C, I8, I16, I32, I64, U, U8, U16, U32, U64, F32, F64);\n+}\n+\n+fn _zzz() {()}"}, {"sha": "2fc20bedc0747ef6b465233d6a7c3f15fc860334", "filename": "src/test/debuginfo/basic-types-globals.rs", "status": "renamed", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -18,38 +18,38 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print 'basic-types-globals::B'\n-// check:$1 = false\n-// debugger:print 'basic-types-globals::I'\n-// check:$2 = -1\n-// debugger:print 'basic-types-globals::C'\n-// check:$3 = 97\n-// debugger:print/d 'basic-types-globals::I8'\n-// check:$4 = 68\n-// debugger:print 'basic-types-globals::I16'\n-// check:$5 = -16\n-// debugger:print 'basic-types-globals::I32'\n-// check:$6 = -32\n-// debugger:print 'basic-types-globals::I64'\n-// check:$7 = -64\n-// debugger:print 'basic-types-globals::U'\n-// check:$8 = 1\n-// debugger:print/d 'basic-types-globals::U8'\n-// check:$9 = 100\n-// debugger:print 'basic-types-globals::U16'\n-// check:$10 = 16\n-// debugger:print 'basic-types-globals::U32'\n-// check:$11 = 32\n-// debugger:print 'basic-types-globals::U64'\n-// check:$12 = 64\n-// debugger:print 'basic-types-globals::F32'\n-// check:$13 = 2.5\n-// debugger:print 'basic-types-globals::F64'\n-// check:$14 = 3.5\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print 'basic-types-globals::B'\n+// gdb-check:$1 = false\n+// gdb-command:print 'basic-types-globals::I'\n+// gdb-check:$2 = -1\n+// gdb-command:print 'basic-types-globals::C'\n+// gdb-check:$3 = 97\n+// gdb-command:print/d 'basic-types-globals::I8'\n+// gdb-check:$4 = 68\n+// gdb-command:print 'basic-types-globals::I16'\n+// gdb-check:$5 = -16\n+// gdb-command:print 'basic-types-globals::I32'\n+// gdb-check:$6 = -32\n+// gdb-command:print 'basic-types-globals::I64'\n+// gdb-check:$7 = -64\n+// gdb-command:print 'basic-types-globals::U'\n+// gdb-check:$8 = 1\n+// gdb-command:print/d 'basic-types-globals::U8'\n+// gdb-check:$9 = 100\n+// gdb-command:print 'basic-types-globals::U16'\n+// gdb-check:$10 = 16\n+// gdb-command:print 'basic-types-globals::U32'\n+// gdb-check:$11 = 32\n+// gdb-command:print 'basic-types-globals::U64'\n+// gdb-check:$12 = 64\n+// gdb-command:print 'basic-types-globals::F32'\n+// gdb-check:$13 = 2.5\n+// gdb-command:print 'basic-types-globals::F64'\n+// gdb-check:$14 = 3.5\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/basic-types-globals.rs"}, {"sha": "da32518d9936dc3cc86814f759aa5b580185310e", "filename": "src/test/debuginfo/basic-types-metadata.rs", "status": "renamed", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,42 +11,42 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:whatis unit\n-// check:type = ()\n-// debugger:whatis b\n-// check:type = bool\n-// debugger:whatis i\n-// check:type = int\n-// debugger:whatis c\n-// check:type = char\n-// debugger:whatis i8\n-// check:type = i8\n-// debugger:whatis i16\n-// check:type = i16\n-// debugger:whatis i32\n-// check:type = i32\n-// debugger:whatis i64\n-// check:type = i64\n-// debugger:whatis u\n-// check:type = uint\n-// debugger:whatis u8\n-// check:type = u8\n-// debugger:whatis u16\n-// check:type = u16\n-// debugger:whatis u32\n-// check:type = u32\n-// debugger:whatis u64\n-// check:type = u64\n-// debugger:whatis f32\n-// check:type = f32\n-// debugger:whatis f64\n-// check:type = f64\n-// debugger:info functions _yyy\n-// check:[...]![...]_yyy([...])([...]);\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:whatis unit\n+// gdb-check:type = ()\n+// gdb-command:whatis b\n+// gdb-check:type = bool\n+// gdb-command:whatis i\n+// gdb-check:type = int\n+// gdb-command:whatis c\n+// gdb-check:type = char\n+// gdb-command:whatis i8\n+// gdb-check:type = i8\n+// gdb-command:whatis i16\n+// gdb-check:type = i16\n+// gdb-command:whatis i32\n+// gdb-check:type = i32\n+// gdb-command:whatis i64\n+// gdb-check:type = i64\n+// gdb-command:whatis u\n+// gdb-check:type = uint\n+// gdb-command:whatis u8\n+// gdb-check:type = u8\n+// gdb-command:whatis u16\n+// gdb-check:type = u16\n+// gdb-command:whatis u32\n+// gdb-check:type = u32\n+// gdb-command:whatis u64\n+// gdb-check:type = u64\n+// gdb-command:whatis f32\n+// gdb-check:type = f32\n+// gdb-command:whatis f64\n+// gdb-check:type = f64\n+// gdb-command:info functions _yyy\n+// gdb-check:[...]![...]_yyy([...])([...]);\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/basic-types-metadata.rs"}, {"sha": "f1579192b17b2484278ea1f7d3a3b1df22329dfc", "filename": "src/test/debuginfo/basic-types-mut-globals.rs", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,129 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Caveats - gdb prints any 8-bit value (meaning rust I8 and u8 values)\n+// as its numerical value along with its associated ASCII char, there\n+// doesn't seem to be any way around this. Also, gdb doesn't know\n+// about UTF-32 character encoding and will print a rust char as only\n+// its numerical value.\n+\n+// ignore-win32: FIXME #13256\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// Check initializers\n+// gdb-command:print 'basic-types-mut-globals::B'\n+// gdb-check:$1 = false\n+// gdb-command:print 'basic-types-mut-globals::I'\n+// gdb-check:$2 = -1\n+// gdb-command:print 'basic-types-mut-globals::C'\n+// gdb-check:$3 = 97\n+// gdb-command:print/d 'basic-types-mut-globals::I8'\n+// gdb-check:$4 = 68\n+// gdb-command:print 'basic-types-mut-globals::I16'\n+// gdb-check:$5 = -16\n+// gdb-command:print 'basic-types-mut-globals::I32'\n+// gdb-check:$6 = -32\n+// gdb-command:print 'basic-types-mut-globals::I64'\n+// gdb-check:$7 = -64\n+// gdb-command:print 'basic-types-mut-globals::U'\n+// gdb-check:$8 = 1\n+// gdb-command:print/d 'basic-types-mut-globals::U8'\n+// gdb-check:$9 = 100\n+// gdb-command:print 'basic-types-mut-globals::U16'\n+// gdb-check:$10 = 16\n+// gdb-command:print 'basic-types-mut-globals::U32'\n+// gdb-check:$11 = 32\n+// gdb-command:print 'basic-types-mut-globals::U64'\n+// gdb-check:$12 = 64\n+// gdb-command:print 'basic-types-mut-globals::F32'\n+// gdb-check:$13 = 2.5\n+// gdb-command:print 'basic-types-mut-globals::F64'\n+// gdb-check:$14 = 3.5\n+// gdb-command:continue\n+\n+// Check new values\n+// gdb-command:print 'basic-types-mut-globals'::B\n+// gdb-check:$15 = true\n+// gdb-command:print 'basic-types-mut-globals'::I\n+// gdb-check:$16 = 2\n+// gdb-command:print 'basic-types-mut-globals'::C\n+// gdb-check:$17 = 102\n+// gdb-command:print/d 'basic-types-mut-globals'::I8\n+// gdb-check:$18 = 78\n+// gdb-command:print 'basic-types-mut-globals'::I16\n+// gdb-check:$19 = -26\n+// gdb-command:print 'basic-types-mut-globals'::I32\n+// gdb-check:$20 = -12\n+// gdb-command:print 'basic-types-mut-globals'::I64\n+// gdb-check:$21 = -54\n+// gdb-command:print 'basic-types-mut-globals'::U\n+// gdb-check:$22 = 5\n+// gdb-command:print/d 'basic-types-mut-globals'::U8\n+// gdb-check:$23 = 20\n+// gdb-command:print 'basic-types-mut-globals'::U16\n+// gdb-check:$24 = 32\n+// gdb-command:print 'basic-types-mut-globals'::U32\n+// gdb-check:$25 = 16\n+// gdb-command:print 'basic-types-mut-globals'::U64\n+// gdb-check:$26 = 128\n+// gdb-command:print 'basic-types-mut-globals'::F32\n+// gdb-check:$27 = 5.75\n+// gdb-command:print 'basic-types-mut-globals'::F64\n+// gdb-check:$28 = 9.25\n+\n+// gdb-command:detach\n+// gdb-command:quit\n+\n+#![allow(unused_variable)]\n+\n+static mut B: bool = false;\n+static mut I: int = -1;\n+static mut C: char = 'a';\n+static mut I8: i8 = 68;\n+static mut I16: i16 = -16;\n+static mut I32: i32 = -32;\n+static mut I64: i64 = -64;\n+static mut U: uint = 1;\n+static mut U8: u8 = 100;\n+static mut U16: u16 = 16;\n+static mut U32: u32 = 32;\n+static mut U64: u64 = 64;\n+static mut F32: f32 = 2.5;\n+static mut F64: f64 = 3.5;\n+\n+fn main() {\n+    _zzz();\n+\n+    unsafe {\n+        B = true;\n+        I = 2;\n+        C = 'f';\n+        I8 = 78;\n+        I16 = -26;\n+        I32 = -12;\n+        I64 = -54;\n+        U = 5;\n+        U8 = 20;\n+        U16 = 32;\n+        U32 = 16;\n+        U64 = 128;\n+        F32 = 5.75;\n+        F64 = 9.25;\n+    }\n+\n+    _zzz();\n+}\n+\n+fn _zzz() {()}"}, {"sha": "ae554cafb507c4ac4ff3bd61d5fdc8c6ed8af3e0", "filename": "src/test/debuginfo/basic-types.rs", "status": "renamed", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -17,37 +17,37 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print b\n-// check:$1 = false\n-// debugger:print i\n-// check:$2 = -1\n-// debugger:print c\n-// check:$3 = 97\n-// debugger:print/d i8\n-// check:$4 = 68\n-// debugger:print i16\n-// check:$5 = -16\n-// debugger:print i32\n-// check:$6 = -32\n-// debugger:print i64\n-// check:$7 = -64\n-// debugger:print u\n-// check:$8 = 1\n-// debugger:print/d u8\n-// check:$9 = 100\n-// debugger:print u16\n-// check:$10 = 16\n-// debugger:print u32\n-// check:$11 = 32\n-// debugger:print u64\n-// check:$12 = 64\n-// debugger:print f32\n-// check:$13 = 2.5\n-// debugger:print f64\n-// check:$14 = 3.5\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print b\n+// gdb-check:$1 = false\n+// gdb-command:print i\n+// gdb-check:$2 = -1\n+// gdb-command:print c\n+// gdb-check:$3 = 97\n+// gdb-command:print/d i8\n+// gdb-check:$4 = 68\n+// gdb-command:print i16\n+// gdb-check:$5 = -16\n+// gdb-command:print i32\n+// gdb-check:$6 = -32\n+// gdb-command:print i64\n+// gdb-check:$7 = -64\n+// gdb-command:print u\n+// gdb-check:$8 = 1\n+// gdb-command:print/d u8\n+// gdb-check:$9 = 100\n+// gdb-command:print u16\n+// gdb-check:$10 = 16\n+// gdb-command:print u32\n+// gdb-check:$11 = 32\n+// gdb-command:print u64\n+// gdb-check:$12 = 64\n+// gdb-command:print f32\n+// gdb-check:$13 = 2.5\n+// gdb-command:print f64\n+// gdb-check:$14 = 3.5\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/basic-types.rs"}, {"sha": "d511e5ed20f8ec49a22d7c070240c1596a344c03", "filename": "src/test/debuginfo/borrowed-basic.rs", "status": "renamed", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -14,50 +14,50 @@\n // its numerical value.\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print *bool_ref\n-// check:$1 = true\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print *bool_ref\n+// gdb-check:$1 = true\n \n-// debugger:print *int_ref\n-// check:$2 = -1\n+// gdb-command:print *int_ref\n+// gdb-check:$2 = -1\n \n-// debugger:print *char_ref\n-// check:$3 = 97\n+// gdb-command:print *char_ref\n+// gdb-check:$3 = 97\n \n-// debugger:print *i8_ref\n-// check:$4 = 68 'D'\n+// gdb-command:print *i8_ref\n+// gdb-check:$4 = 68 'D'\n \n-// debugger:print *i16_ref\n-// check:$5 = -16\n+// gdb-command:print *i16_ref\n+// gdb-check:$5 = -16\n \n-// debugger:print *i32_ref\n-// check:$6 = -32\n+// gdb-command:print *i32_ref\n+// gdb-check:$6 = -32\n \n-// debugger:print *i64_ref\n-// check:$7 = -64\n+// gdb-command:print *i64_ref\n+// gdb-check:$7 = -64\n \n-// debugger:print *uint_ref\n-// check:$8 = 1\n+// gdb-command:print *uint_ref\n+// gdb-check:$8 = 1\n \n-// debugger:print *u8_ref\n-// check:$9 = 100 'd'\n+// gdb-command:print *u8_ref\n+// gdb-check:$9 = 100 'd'\n \n-// debugger:print *u16_ref\n-// check:$10 = 16\n+// gdb-command:print *u16_ref\n+// gdb-check:$10 = 16\n \n-// debugger:print *u32_ref\n-// check:$11 = 32\n+// gdb-command:print *u32_ref\n+// gdb-check:$11 = 32\n \n-// debugger:print *u64_ref\n-// check:$12 = 64\n+// gdb-command:print *u64_ref\n+// gdb-check:$12 = 64\n \n-// debugger:print *f32_ref\n-// check:$13 = 2.5\n+// gdb-command:print *f32_ref\n+// gdb-check:$13 = 2.5\n \n-// debugger:print *f64_ref\n-// check:$14 = 3.5\n+// gdb-command:print *f64_ref\n+// gdb-check:$14 = 3.5\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/borrowed-basic.rs"}, {"sha": "9ab7e0701cc99c261d7c15abefaaa279ca3d3f9a", "filename": "src/test/debuginfo/borrowed-c-style-enum.rs", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,18 +11,18 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *the_a_ref\n-// check:$1 = TheA\n+// gdb-command:print *the_a_ref\n+// gdb-check:$1 = TheA\n \n-// debugger:print *the_b_ref\n-// check:$2 = TheB\n+// gdb-command:print *the_b_ref\n+// gdb-check:$2 = TheB\n \n-// debugger:print *the_c_ref\n-// check:$3 = TheC\n+// gdb-command:print *the_c_ref\n+// gdb-check:$3 = TheC\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/borrowed-c-style-enum.rs"}, {"sha": "7126aec239177853e7f0597386936cd0436bc943", "filename": "src/test/debuginfo/borrowed-enum.rs", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,18 +11,18 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *the_a_ref\n-// check:$1 = {{TheA, x = 0, y = 8970181431921507452}, {TheA, 0, 2088533116, 2088533116}}\n+// gdb-command:print *the_a_ref\n+// gdb-check:$1 = {{TheA, x = 0, y = 8970181431921507452}, {TheA, 0, 2088533116, 2088533116}}\n \n-// debugger:print *the_b_ref\n-// check:$2 = {{TheB, x = 0, y = 1229782938247303441}, {TheB, 0, 286331153, 286331153}}\n+// gdb-command:print *the_b_ref\n+// gdb-check:$2 = {{TheB, x = 0, y = 1229782938247303441}, {TheB, 0, 286331153, 286331153}}\n \n-// debugger:print *univariant_ref\n-// check:$3 = {4820353753753434}\n+// gdb-command:print *univariant_ref\n+// gdb-check:$3 = {4820353753753434}\n \n #![allow(unused_variable)]\n #![feature(struct_variant)]", "previous_filename": "src/test/debug-info/borrowed-enum.rs"}, {"sha": "85f325859053c0a9f85695a66e32ddc63d150f20", "filename": "src/test/debuginfo/borrowed-managed-basic.rs", "status": "renamed", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-managed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-managed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-managed-basic.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -16,50 +16,50 @@\n // its numerical value.\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print *bool_ref\n-// check:$1 = true\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print *bool_ref\n+// gdb-check:$1 = true\n \n-// debugger:print *int_ref\n-// check:$2 = -1\n+// gdb-command:print *int_ref\n+// gdb-check:$2 = -1\n \n-// debugger:print *char_ref\n-// check:$3 = 97\n+// gdb-command:print *char_ref\n+// gdb-check:$3 = 97\n \n-// debugger:print/d *i8_ref\n-// check:$4 = 68\n+// gdb-command:print/d *i8_ref\n+// gdb-check:$4 = 68\n \n-// debugger:print *i16_ref\n-// check:$5 = -16\n+// gdb-command:print *i16_ref\n+// gdb-check:$5 = -16\n \n-// debugger:print *i32_ref\n-// check:$6 = -32\n+// gdb-command:print *i32_ref\n+// gdb-check:$6 = -32\n \n-// debugger:print *i64_ref\n-// check:$7 = -64\n+// gdb-command:print *i64_ref\n+// gdb-check:$7 = -64\n \n-// debugger:print *uint_ref\n-// check:$8 = 1\n+// gdb-command:print *uint_ref\n+// gdb-check:$8 = 1\n \n-// debugger:print/d *u8_ref\n-// check:$9 = 100\n+// gdb-command:print/d *u8_ref\n+// gdb-check:$9 = 100\n \n-// debugger:print *u16_ref\n-// check:$10 = 16\n+// gdb-command:print *u16_ref\n+// gdb-check:$10 = 16\n \n-// debugger:print *u32_ref\n-// check:$11 = 32\n+// gdb-command:print *u32_ref\n+// gdb-check:$11 = 32\n \n-// debugger:print *u64_ref\n-// check:$12 = 64\n+// gdb-command:print *u64_ref\n+// gdb-check:$12 = 64\n \n-// debugger:print *f32_ref\n-// check:$13 = 2.5\n+// gdb-command:print *f32_ref\n+// gdb-check:$13 = 2.5\n \n-// debugger:print *f64_ref\n-// check:$14 = 3.5\n+// gdb-command:print *f64_ref\n+// gdb-check:$14 = 3.5\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/borrowed-managed-basic.rs"}, {"sha": "8ac0745513dac10974c7c0d18a9802d64e69bfe4", "filename": "src/test/debuginfo/borrowed-struct.rs", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,39 +11,39 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *stack_val_ref\n-// check:$1 = {x = 10, y = 23.5}\n+// gdb-command:print *stack_val_ref\n+// gdb-check:$1 = {x = 10, y = 23.5}\n \n-// debugger:print *stack_val_interior_ref_1\n-// check:$2 = 10\n+// gdb-command:print *stack_val_interior_ref_1\n+// gdb-check:$2 = 10\n \n-// debugger:print *stack_val_interior_ref_2\n-// check:$3 = 23.5\n+// gdb-command:print *stack_val_interior_ref_2\n+// gdb-check:$3 = 23.5\n \n-// debugger:print *ref_to_unnamed\n-// check:$4 = {x = 11, y = 24.5}\n+// gdb-command:print *ref_to_unnamed\n+// gdb-check:$4 = {x = 11, y = 24.5}\n \n-// debugger:print *managed_val_ref\n-// check:$5 = {x = 12, y = 25.5}\n+// gdb-command:print *managed_val_ref\n+// gdb-check:$5 = {x = 12, y = 25.5}\n \n-// debugger:print *managed_val_interior_ref_1\n-// check:$6 = 12\n+// gdb-command:print *managed_val_interior_ref_1\n+// gdb-check:$6 = 12\n \n-// debugger:print *managed_val_interior_ref_2\n-// check:$7 = 25.5\n+// gdb-command:print *managed_val_interior_ref_2\n+// gdb-check:$7 = 25.5\n \n-// debugger:print *unique_val_ref\n-// check:$8 = {x = 13, y = 26.5}\n+// gdb-command:print *unique_val_ref\n+// gdb-check:$8 = {x = 13, y = 26.5}\n \n-// debugger:print *unique_val_interior_ref_1\n-// check:$9 = 13\n+// gdb-command:print *unique_val_interior_ref_1\n+// gdb-check:$9 = 13\n \n-// debugger:print *unique_val_interior_ref_2\n-// check:$10 = 26.5\n+// gdb-command:print *unique_val_interior_ref_2\n+// gdb-check:$10 = 26.5\n \n #![feature(managed_boxes)]\n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/borrowed-struct.rs"}, {"sha": "427981445c1d527e508303a1c472f35988096a1e", "filename": "src/test/debuginfo/borrowed-tuple.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -13,21 +13,21 @@\n #![feature(managed_boxes)]\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *stack_val_ref\n-// check:$1 = {-14, -19}\n+// gdb-command:print *stack_val_ref\n+// gdb-check:$1 = {-14, -19}\n \n-// debugger:print *ref_to_unnamed\n-// check:$2 = {-15, -20}\n+// gdb-command:print *ref_to_unnamed\n+// gdb-check:$2 = {-15, -20}\n \n-// debugger:print *managed_val_ref\n-// check:$3 = {-16, -21}\n+// gdb-command:print *managed_val_ref\n+// gdb-check:$3 = {-16, -21}\n \n-// debugger:print *unique_val_ref\n-// check:$4 = {-17, -22}\n+// gdb-command:print *unique_val_ref\n+// gdb-check:$4 = {-17, -22}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/borrowed-tuple.rs"}, {"sha": "6e8fa62ed26c864c7a88933944a1d34af353866c", "filename": "src/test/debuginfo/borrowed-unique-basic.rs", "status": "renamed", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -14,50 +14,50 @@\n // its numerical value.\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print *bool_ref\n-// check:$1 = true\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print *bool_ref\n+// gdb-check:$1 = true\n \n-// debugger:print *int_ref\n-// check:$2 = -1\n+// gdb-command:print *int_ref\n+// gdb-check:$2 = -1\n \n-// debugger:print *char_ref\n-// check:$3 = 97\n+// gdb-command:print *char_ref\n+// gdb-check:$3 = 97\n \n-// debugger:print/d *i8_ref\n-// check:$4 = 68\n+// gdb-command:print/d *i8_ref\n+// gdb-check:$4 = 68\n \n-// debugger:print *i16_ref\n-// check:$5 = -16\n+// gdb-command:print *i16_ref\n+// gdb-check:$5 = -16\n \n-// debugger:print *i32_ref\n-// check:$6 = -32\n+// gdb-command:print *i32_ref\n+// gdb-check:$6 = -32\n \n-// debugger:print *i64_ref\n-// check:$7 = -64\n+// gdb-command:print *i64_ref\n+// gdb-check:$7 = -64\n \n-// debugger:print *uint_ref\n-// check:$8 = 1\n+// gdb-command:print *uint_ref\n+// gdb-check:$8 = 1\n \n-// debugger:print/d *u8_ref\n-// check:$9 = 100\n+// gdb-command:print/d *u8_ref\n+// gdb-check:$9 = 100\n \n-// debugger:print *u16_ref\n-// check:$10 = 16\n+// gdb-command:print *u16_ref\n+// gdb-check:$10 = 16\n \n-// debugger:print *u32_ref\n-// check:$11 = 32\n+// gdb-command:print *u32_ref\n+// gdb-check:$11 = 32\n \n-// debugger:print *u64_ref\n-// check:$12 = 64\n+// gdb-command:print *u64_ref\n+// gdb-check:$12 = 64\n \n-// debugger:print *f32_ref\n-// check:$13 = 2.5\n+// gdb-command:print *f32_ref\n+// gdb-check:$13 = 2.5\n \n-// debugger:print *f64_ref\n-// check:$14 = 3.5\n+// gdb-command:print *f64_ref\n+// gdb-check:$14 = 3.5\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/borrowed-unique-basic.rs"}, {"sha": "c29d3d88378ed30dce47ac79cd4dbcc7b5c840f8", "filename": "src/test/debuginfo/box.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbox.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,18 +11,18 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print *a\n-// check:$1 = 1\n-// debugger:print *b\n-// check:$2 = {2, 3.5}\n-// debugger:print c->val\n-// check:$3 = 4\n-// debugger:print d->val\n-// check:$4 = false\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print *a\n+// gdb-check:$1 = 1\n+// gdb-command:print *b\n+// gdb-check:$2 = {2, 3.5}\n+// gdb-command:print c->val\n+// gdb-check:$3 = 4\n+// gdb-command:print d->val\n+// gdb-check:$4 = false\n \n #![feature(managed_boxes)]\n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/box.rs"}, {"sha": "1c94885adaf3af3e3f487c4e96a979d689802c17", "filename": "src/test/debuginfo/boxed-struct.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,21 +11,21 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *unique\n-// check:$1 = {x = 99, y = 999, z = 9999, w = 99999}\n+// gdb-command:print *unique\n+// gdb-check:$1 = {x = 99, y = 999, z = 9999, w = 99999}\n \n-// debugger:print managed->val\n-// check:$2 = {x = 88, y = 888, z = 8888, w = 88888}\n+// gdb-command:print managed->val\n+// gdb-check:$2 = {x = 88, y = 888, z = 8888, w = 88888}\n \n-// debugger:print *unique_dtor\n-// check:$3 = {x = 77, y = 777, z = 7777, w = 77777}\n+// gdb-command:print *unique_dtor\n+// gdb-check:$3 = {x = 77, y = 777, z = 7777, w = 77777}\n \n-// debugger:print managed_dtor->val\n-// check:$4 = {x = 33, y = 333, z = 3333, w = 33333}\n+// gdb-command:print managed_dtor->val\n+// gdb-check:$4 = {x = 33, y = 333, z = 3333, w = 33333}\n \n #![feature(managed_boxes)]\n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/boxed-struct.rs"}, {"sha": "873e062352107bd214305c18a230d9e6422fd19a", "filename": "src/test/debuginfo/by-value-non-immediate-argument.rs", "status": "renamed", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,37 +11,37 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print s\n-// check:$1 = {a = 1, b = 2.5}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$2 = {a = 3, b = 4.5}\n-// debugger:print y\n-// check:$3 = 5\n-// debugger:print z\n-// check:$4 = 6.5\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$5 = {7, 8, 9.5, 10.5}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$6 = {11.5, 12.5, 13, 14}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = {{Case1, x = 0, y = 8970181431921507452}, {Case1, 0, 2088533116, 2088533116}}\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print s\n+// gdb-check:$1 = {a = 1, b = 2.5}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = {a = 3, b = 4.5}\n+// gdb-command:print y\n+// gdb-check:$3 = 5\n+// gdb-command:print z\n+// gdb-check:$4 = 6.5\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$5 = {7, 8, 9.5, 10.5}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$6 = {11.5, 12.5, 13, 14}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = {{Case1, x = 0, y = 8970181431921507452}, {Case1, 0, 2088533116, 2088533116}}\n+// gdb-command:continue\n \n #![feature(struct_variant)]\n ", "previous_filename": "src/test/debug-info/by-value-non-immediate-argument.rs"}, {"sha": "b626fbad278627e5145119dbd4066ef4c5f95d29", "filename": "src/test/debuginfo/by-value-self-argument-in-trait-impl.rs", "status": "renamed", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -13,28 +13,28 @@\n #![feature(managed_boxes)]\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n-// debugger:finish\n-// debugger:print self\n-// check:$1 = 1111\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$1 = 1111\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print self\n-// check:$2 = {x = 2222, y = 3333}\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$2 = {x = 2222, y = 3333}\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print self\n-// check:$3 = {4444.5, 5555, 6666, 7777.5}\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$3 = {4444.5, 5555, 6666, 7777.5}\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print self->val\n-// check:$4 = 8888\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self->val\n+// gdb-check:$4 = 8888\n+// gdb-command:continue\n \n trait Trait {\n     fn method(self) -> Self;", "previous_filename": "src/test/debug-info/by-value-self-argument-in-trait-impl.rs"}, {"sha": "3e76bf1987b98b487369f973ffd55589185af11e", "filename": "src/test/debuginfo/c-style-enum-in-composite.rs", "status": "renamed", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,30 +11,30 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print tuple_interior_padding\n-// check:$1 = {0, OneHundred}\n+// gdb-command:print tuple_interior_padding\n+// gdb-check:$1 = {0, OneHundred}\n \n-// debugger:print tuple_padding_at_end\n-// check:$2 = {{1, OneThousand}, 2}\n+// gdb-command:print tuple_padding_at_end\n+// gdb-check:$2 = {{1, OneThousand}, 2}\n \n-// debugger:print tuple_different_enums\n-// check:$3 = {OneThousand, MountainView, OneMillion, Vienna}\n+// gdb-command:print tuple_different_enums\n+// gdb-check:$3 = {OneThousand, MountainView, OneMillion, Vienna}\n \n-// debugger:print padded_struct\n-// check:$4 = {a = 3, b = OneMillion, c = 4, d = Toronto, e = 5}\n+// gdb-command:print padded_struct\n+// gdb-check:$4 = {a = 3, b = OneMillion, c = 4, d = Toronto, e = 5}\n \n-// debugger:print packed_struct\n-// check:$5 = {a = 6, b = OneHundred, c = 7, d = Vienna, e = 8}\n+// gdb-command:print packed_struct\n+// gdb-check:$5 = {a = 6, b = OneHundred, c = 7, d = Vienna, e = 8}\n \n-// debugger:print non_padded_struct\n-// check:$6 = {a = OneMillion, b = MountainView, c = OneThousand, d = Toronto}\n+// gdb-command:print non_padded_struct\n+// gdb-check:$6 = {a = OneMillion, b = MountainView, c = OneThousand, d = Toronto}\n \n-// debugger:print struct_with_drop\n-// check:$7 = {{a = OneHundred, b = Vienna}, 9}\n+// gdb-command:print struct_with_drop\n+// gdb-check:$7 = {{a = OneHundred, b = Vienna}, 9}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/c-style-enum-in-composite.rs"}, {"sha": "19f8398f1a94b594918ba41b06def6bc7a1f0287", "filename": "src/test/debuginfo/c-style-enum.rs", "status": "renamed", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,64 +12,64 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n+// gdb-command:rbreak zzz\n \n-// debugger:print 'c-style-enum::SINGLE_VARIANT'\n-// check:$1 = TheOnlyVariant\n+// gdb-command:print 'c-style-enum::SINGLE_VARIANT'\n+// gdb-check:$1 = TheOnlyVariant\n \n-// debugger:print 'c-style-enum::AUTO_ONE'\n-// check:$2 = One\n+// gdb-command:print 'c-style-enum::AUTO_ONE'\n+// gdb-check:$2 = One\n \n-// debugger:print 'c-style-enum::AUTO_TWO'\n-// check:$3 = One\n+// gdb-command:print 'c-style-enum::AUTO_TWO'\n+// gdb-check:$3 = One\n \n-// debugger:print 'c-style-enum::AUTO_THREE'\n-// check:$4 = One\n+// gdb-command:print 'c-style-enum::AUTO_THREE'\n+// gdb-check:$4 = One\n \n-// debugger:print 'c-style-enum::MANUAL_ONE'\n-// check:$5 = OneHundred\n+// gdb-command:print 'c-style-enum::MANUAL_ONE'\n+// gdb-check:$5 = OneHundred\n \n-// debugger:print 'c-style-enum::MANUAL_TWO'\n-// check:$6 = OneHundred\n+// gdb-command:print 'c-style-enum::MANUAL_TWO'\n+// gdb-check:$6 = OneHundred\n \n-// debugger:print 'c-style-enum::MANUAL_THREE'\n-// check:$7 = OneHundred\n+// gdb-command:print 'c-style-enum::MANUAL_THREE'\n+// gdb-check:$7 = OneHundred\n \n-// debugger:run\n-// debugger:finish\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print auto_one\n-// check:$8 = One\n+// gdb-command:print auto_one\n+// gdb-check:$8 = One\n \n-// debugger:print auto_two\n-// check:$9 = Two\n+// gdb-command:print auto_two\n+// gdb-check:$9 = Two\n \n-// debugger:print auto_three\n-// check:$10 = Three\n+// gdb-command:print auto_three\n+// gdb-check:$10 = Three\n \n-// debugger:print manual_one_hundred\n-// check:$11 = OneHundred\n+// gdb-command:print manual_one_hundred\n+// gdb-check:$11 = OneHundred\n \n-// debugger:print manual_one_thousand\n-// check:$12 = OneThousand\n+// gdb-command:print manual_one_thousand\n+// gdb-check:$12 = OneThousand\n \n-// debugger:print manual_one_million\n-// check:$13 = OneMillion\n+// gdb-command:print manual_one_million\n+// gdb-check:$13 = OneMillion\n \n-// debugger:print single_variant\n-// check:$14 = TheOnlyVariant\n+// gdb-command:print single_variant\n+// gdb-check:$14 = TheOnlyVariant\n \n-// debugger:print 'c-style-enum::AUTO_TWO'\n-// check:$15 = Two\n+// gdb-command:print 'c-style-enum::AUTO_TWO'\n+// gdb-check:$15 = Two\n \n-// debugger:print 'c-style-enum::AUTO_THREE'\n-// check:$16 = Three\n+// gdb-command:print 'c-style-enum::AUTO_THREE'\n+// gdb-check:$16 = Three\n \n-// debugger:print 'c-style-enum::MANUAL_TWO'\n-// check:$17 = OneThousand\n+// gdb-command:print 'c-style-enum::MANUAL_TWO'\n+// gdb-check:$17 = OneThousand\n \n-// debugger:print 'c-style-enum::MANUAL_THREE'\n-// check:$18 = OneMillion\n+// gdb-command:print 'c-style-enum::MANUAL_THREE'\n+// gdb-check:$18 = OneMillion\n \n #![allow(unused_variable)]\n #![allow(dead_code)]", "previous_filename": "src/test/debug-info/c-style-enum.rs"}, {"sha": "7a89b682d1533923c750ad8d79f4819f494f7ce5", "filename": "src/test/debuginfo/closure-in-generic-function.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = 0.5\n-// debugger:print y\n-// check:$2 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *x\n-// check:$3 = 29\n-// debugger:print *y\n-// check:$4 = 110\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = 0.5\n+// gdb-command:print y\n+// gdb-check:$2 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *x\n+// gdb-check:$3 = 29\n+// gdb-command:print *y\n+// gdb-check:$4 = 110\n+// gdb-command:continue\n \n fn some_generic_fun<T1, T2>(a: T1, b: T2) -> (T2, T1) {\n ", "previous_filename": "src/test/debug-info/closure-in-generic-function.rs"}, {"sha": "697703034f6e3735337e2e62d836ee966f401954", "filename": "src/test/debuginfo/destructured-fn-argument.rs", "status": "renamed", "additions": 169, "deletions": 169, "changes": 338, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,175 +11,175 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$1 = 1\n-// debugger:print b\n-// check:$2 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$3 = 2\n-// debugger:print b\n-// check:$4 = 3\n-// debugger:print c\n-// check:$5 = 4\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$6 = 5\n-// debugger:print b\n-// check:$7 = {6, 7}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print h\n-// check:$8 = 8\n-// debugger:print i\n-// check:$9 = {a = 9, b = 10}\n-// debugger:print j\n-// check:$10 = 11\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print k\n-// check:$11 = 12\n-// debugger:print l\n-// check:$12 = 13\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print m\n-// check:$13 = 14\n-// debugger:print n\n-// check:$14 = 16\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print o\n-// check:$15 = 18\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print p\n-// check:$16 = 19\n-// debugger:print q\n-// check:$17 = 20\n-// debugger:print r\n-// check:$18 = {a = 21, b = 22}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print s\n-// check:$19 = 24\n-// debugger:print t\n-// check:$20 = 23\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print u\n-// check:$21 = 25\n-// debugger:print v\n-// check:$22 = 26\n-// debugger:print w\n-// check:$23 = 27\n-// debugger:print x\n-// check:$24 = 28\n-// debugger:print y\n-// check:$25 = 29\n-// debugger:print z\n-// check:$26 = 30\n-// debugger:print ae\n-// check:$27 = 31\n-// debugger:print oe\n-// check:$28 = 32\n-// debugger:print ue\n-// check:$29 = 33\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print aa\n-// check:$30 = {34, 35}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print bb\n-// check:$31 = {36, 37}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print cc\n-// check:$32 = 38\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print dd\n-// check:$33 = {40, 41, 42}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *ee\n-// check:$34 = {43, 44, 45}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *ff\n-// check:$35 = 46\n-// debugger:print gg\n-// check:$36 = {47, 48}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *hh\n-// check:$37 = 50\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print ii\n-// check:$38 = 51\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *jj\n-// check:$39 = 52\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print kk\n-// check:$40 = 53\n-// debugger:print ll\n-// check:$41 = 54\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print mm\n-// check:$42 = 55\n-// debugger:print *nn\n-// check:$43 = 56\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print oo\n-// check:$44 = 57\n-// debugger:print pp\n-// check:$45 = 58\n-// debugger:print qq\n-// check:$46 = 59\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print rr\n-// check:$47 = 60\n-// debugger:print ss\n-// check:$48 = 61\n-// debugger:print tt\n-// check:$49 = 62\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$1 = 1\n+// gdb-command:print b\n+// gdb-check:$2 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$3 = 2\n+// gdb-command:print b\n+// gdb-check:$4 = 3\n+// gdb-command:print c\n+// gdb-check:$5 = 4\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$6 = 5\n+// gdb-command:print b\n+// gdb-check:$7 = {6, 7}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print h\n+// gdb-check:$8 = 8\n+// gdb-command:print i\n+// gdb-check:$9 = {a = 9, b = 10}\n+// gdb-command:print j\n+// gdb-check:$10 = 11\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print k\n+// gdb-check:$11 = 12\n+// gdb-command:print l\n+// gdb-check:$12 = 13\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print m\n+// gdb-check:$13 = 14\n+// gdb-command:print n\n+// gdb-check:$14 = 16\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print o\n+// gdb-check:$15 = 18\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print p\n+// gdb-check:$16 = 19\n+// gdb-command:print q\n+// gdb-check:$17 = 20\n+// gdb-command:print r\n+// gdb-check:$18 = {a = 21, b = 22}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print s\n+// gdb-check:$19 = 24\n+// gdb-command:print t\n+// gdb-check:$20 = 23\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print u\n+// gdb-check:$21 = 25\n+// gdb-command:print v\n+// gdb-check:$22 = 26\n+// gdb-command:print w\n+// gdb-check:$23 = 27\n+// gdb-command:print x\n+// gdb-check:$24 = 28\n+// gdb-command:print y\n+// gdb-check:$25 = 29\n+// gdb-command:print z\n+// gdb-check:$26 = 30\n+// gdb-command:print ae\n+// gdb-check:$27 = 31\n+// gdb-command:print oe\n+// gdb-check:$28 = 32\n+// gdb-command:print ue\n+// gdb-check:$29 = 33\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print aa\n+// gdb-check:$30 = {34, 35}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print bb\n+// gdb-check:$31 = {36, 37}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print cc\n+// gdb-check:$32 = 38\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print dd\n+// gdb-check:$33 = {40, 41, 42}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *ee\n+// gdb-check:$34 = {43, 44, 45}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *ff\n+// gdb-check:$35 = 46\n+// gdb-command:print gg\n+// gdb-check:$36 = {47, 48}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *hh\n+// gdb-check:$37 = 50\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print ii\n+// gdb-check:$38 = 51\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *jj\n+// gdb-check:$39 = 52\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print kk\n+// gdb-check:$40 = 53\n+// gdb-command:print ll\n+// gdb-check:$41 = 54\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print mm\n+// gdb-check:$42 = 55\n+// gdb-command:print *nn\n+// gdb-check:$43 = 56\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print oo\n+// gdb-check:$44 = 57\n+// gdb-command:print pp\n+// gdb-check:$45 = 58\n+// gdb-command:print qq\n+// gdb-check:$46 = 59\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print rr\n+// gdb-check:$47 = 60\n+// gdb-command:print ss\n+// gdb-check:$48 = 61\n+// gdb-command:print tt\n+// gdb-check:$49 = 62\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/destructured-fn-argument.rs"}, {"sha": "c543a11475e06d38a93fc6e04f9aaaf5989ed656", "filename": "src/test/debuginfo/destructured-local.rs", "status": "renamed", "additions": 113, "deletions": 113, "changes": 226, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,119 +11,119 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print a\n-// check:$1 = 1\n-// debugger:print b\n-// check:$2 = false\n-\n-// debugger:print c\n-// check:$3 = 2\n-// debugger:print d\n-// check:$4 = 3\n-// debugger:print e\n-// check:$5 = 4\n-\n-// debugger:print f\n-// check:$6 = 5\n-// debugger:print g\n-// check:$7 = {6, 7}\n-\n-// debugger:print h\n-// check:$8 = 8\n-// debugger:print i\n-// check:$9 = {a = 9, b = 10}\n-// debugger:print j\n-// check:$10 = 11\n-\n-// debugger:print k\n-// check:$11 = 12\n-// debugger:print l\n-// check:$12 = 13\n-\n-// debugger:print m\n-// check:$13 = 14\n-// debugger:print n\n-// check:$14 = 16\n-\n-// debugger:print o\n-// check:$15 = 18\n-\n-// debugger:print p\n-// check:$16 = 19\n-// debugger:print q\n-// check:$17 = 20\n-// debugger:print r\n-// check:$18 = {a = 21, b = 22}\n-\n-// debugger:print s\n-// check:$19 = 24\n-// debugger:print t\n-// check:$20 = 23\n-\n-// debugger:print u\n-// check:$21 = 25\n-// debugger:print v\n-// check:$22 = 26\n-// debugger:print w\n-// check:$23 = 27\n-// debugger:print x\n-// check:$24 = 28\n-// debugger:print y\n-// check:$25 = 29\n-// debugger:print z\n-// check:$26 = 30\n-// debugger:print ae\n-// check:$27 = 31\n-// debugger:print oe\n-// check:$28 = 32\n-// debugger:print ue\n-// check:$29 = 33\n-\n-// debugger:print aa\n-// check:$30 = {34, 35}\n-\n-// debugger:print bb\n-// check:$31 = {36, 37}\n-\n-// debugger:print cc\n-// check:$32 = 38\n-\n-// debugger:print dd\n-// check:$33 = {40, 41, 42}\n-\n-// debugger:print *ee\n-// check:$34 = {43, 44, 45}\n-\n-// debugger:print *ff\n-// check:$35 = 46\n-\n-// debugger:print gg\n-// check:$36 = {47, 48}\n-\n-// debugger:print *hh\n-// check:$37 = 50\n-\n-// debugger:print ii\n-// check:$38 = 51\n-\n-// debugger:print *jj\n-// check:$39 = 52\n-\n-// debugger:print kk\n-// check:$40 = 53\n-\n-// debugger:print ll\n-// check:$41 = 54\n-\n-// debugger:print mm\n-// check:$42 = 55\n-\n-// debugger:print *nn\n-// check:$43 = 56\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print a\n+// gdb-check:$1 = 1\n+// gdb-command:print b\n+// gdb-check:$2 = false\n+\n+// gdb-command:print c\n+// gdb-check:$3 = 2\n+// gdb-command:print d\n+// gdb-check:$4 = 3\n+// gdb-command:print e\n+// gdb-check:$5 = 4\n+\n+// gdb-command:print f\n+// gdb-check:$6 = 5\n+// gdb-command:print g\n+// gdb-check:$7 = {6, 7}\n+\n+// gdb-command:print h\n+// gdb-check:$8 = 8\n+// gdb-command:print i\n+// gdb-check:$9 = {a = 9, b = 10}\n+// gdb-command:print j\n+// gdb-check:$10 = 11\n+\n+// gdb-command:print k\n+// gdb-check:$11 = 12\n+// gdb-command:print l\n+// gdb-check:$12 = 13\n+\n+// gdb-command:print m\n+// gdb-check:$13 = 14\n+// gdb-command:print n\n+// gdb-check:$14 = 16\n+\n+// gdb-command:print o\n+// gdb-check:$15 = 18\n+\n+// gdb-command:print p\n+// gdb-check:$16 = 19\n+// gdb-command:print q\n+// gdb-check:$17 = 20\n+// gdb-command:print r\n+// gdb-check:$18 = {a = 21, b = 22}\n+\n+// gdb-command:print s\n+// gdb-check:$19 = 24\n+// gdb-command:print t\n+// gdb-check:$20 = 23\n+\n+// gdb-command:print u\n+// gdb-check:$21 = 25\n+// gdb-command:print v\n+// gdb-check:$22 = 26\n+// gdb-command:print w\n+// gdb-check:$23 = 27\n+// gdb-command:print x\n+// gdb-check:$24 = 28\n+// gdb-command:print y\n+// gdb-check:$25 = 29\n+// gdb-command:print z\n+// gdb-check:$26 = 30\n+// gdb-command:print ae\n+// gdb-check:$27 = 31\n+// gdb-command:print oe\n+// gdb-check:$28 = 32\n+// gdb-command:print ue\n+// gdb-check:$29 = 33\n+\n+// gdb-command:print aa\n+// gdb-check:$30 = {34, 35}\n+\n+// gdb-command:print bb\n+// gdb-check:$31 = {36, 37}\n+\n+// gdb-command:print cc\n+// gdb-check:$32 = 38\n+\n+// gdb-command:print dd\n+// gdb-check:$33 = {40, 41, 42}\n+\n+// gdb-command:print *ee\n+// gdb-check:$34 = {43, 44, 45}\n+\n+// gdb-command:print *ff\n+// gdb-check:$35 = 46\n+\n+// gdb-command:print gg\n+// gdb-check:$36 = {47, 48}\n+\n+// gdb-command:print *hh\n+// gdb-check:$37 = 50\n+\n+// gdb-command:print ii\n+// gdb-check:$38 = 51\n+\n+// gdb-command:print *jj\n+// gdb-check:$39 = 52\n+\n+// gdb-command:print kk\n+// gdb-check:$40 = 53\n+\n+// gdb-command:print ll\n+// gdb-check:$41 = 54\n+\n+// gdb-command:print mm\n+// gdb-check:$42 = 55\n+\n+// gdb-command:print *nn\n+// gdb-check:$43 = 56\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/destructured-local.rs"}, {"sha": "913038c44be26f0ea1aea82a6b0ed19668cae29a", "filename": "src/test/debuginfo/evec-in-struct.rs", "status": "renamed", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,24 +11,24 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print no_padding1\n-// check:$1 = {x = {0, 1, 2}, y = -3, z = {4.5, 5.5}}\n-// debugger:print no_padding2\n-// check:$2 = {x = {6, 7, 8}, y = {{9, 10}, {11, 12}}}\n+// gdb-command:print no_padding1\n+// gdb-check:$1 = {x = {0, 1, 2}, y = -3, z = {4.5, 5.5}}\n+// gdb-command:print no_padding2\n+// gdb-check:$2 = {x = {6, 7, 8}, y = {{9, 10}, {11, 12}}}\n \n-// debugger:print struct_internal_padding\n-// check:$3 = {x = {13, 14}, y = {15, 16}}\n+// gdb-command:print struct_internal_padding\n+// gdb-check:$3 = {x = {13, 14}, y = {15, 16}}\n \n-// debugger:print single_vec\n-// check:$4 = {x = {17, 18, 19, 20, 21}}\n+// gdb-command:print single_vec\n+// gdb-check:$4 = {x = {17, 18, 19, 20, 21}}\n \n-// debugger:print struct_padded_at_end\n-// check:$5 = {x = {22, 23}, y = {24, 25}}\n+// gdb-command:print struct_padded_at_end\n+// gdb-check:$5 = {x = {22, 23}, y = {24, 25}}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/evec-in-struct.rs"}, {"sha": "d439f49fe69253b0ef64db4d99ebc9ec9217dcd3", "filename": "src/test/debuginfo/function-arg-initialization.rs", "status": "renamed", "additions": 90, "deletions": 90, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -17,118 +17,118 @@\n // Therefore the setup here sets them using line numbers (so be careful when changing this file).\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:break function-arg-initialization.rs:139\n-// debugger:break function-arg-initialization.rs:154\n-// debugger:break function-arg-initialization.rs:158\n-// debugger:break function-arg-initialization.rs:162\n-// debugger:break function-arg-initialization.rs:166\n-// debugger:break function-arg-initialization.rs:170\n-// debugger:break function-arg-initialization.rs:174\n-// debugger:break function-arg-initialization.rs:178\n-// debugger:break function-arg-initialization.rs:182\n-// debugger:break function-arg-initialization.rs:190\n-// debugger:break function-arg-initialization.rs:197\n-\n-\n-// debugger:run\n+// gdb-command:set print pretty off\n+// gdb-command:break function-arg-initialization.rs:139\n+// gdb-command:break function-arg-initialization.rs:154\n+// gdb-command:break function-arg-initialization.rs:158\n+// gdb-command:break function-arg-initialization.rs:162\n+// gdb-command:break function-arg-initialization.rs:166\n+// gdb-command:break function-arg-initialization.rs:170\n+// gdb-command:break function-arg-initialization.rs:174\n+// gdb-command:break function-arg-initialization.rs:178\n+// gdb-command:break function-arg-initialization.rs:182\n+// gdb-command:break function-arg-initialization.rs:190\n+// gdb-command:break function-arg-initialization.rs:197\n+\n+\n+// gdb-command:run\n \n // IMMEDIATE ARGS\n-// debugger:print a\n-// check:$1 = 1\n-// debugger:print b\n-// check:$2 = true\n-// debugger:print c\n-// check:$3 = 2.5\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$1 = 1\n+// gdb-command:print b\n+// gdb-check:$2 = true\n+// gdb-command:print c\n+// gdb-check:$3 = 2.5\n+// gdb-command:continue\n \n // NON IMMEDIATE ARGS\n-// debugger:print a\n-// check:$4 = {a = 3, b = 4, c = 5, d = 6, e = 7, f = 8, g = 9, h = 10}\n-// debugger:print b\n-// check:$5 = {a = 11, b = 12, c = 13, d = 14, e = 15, f = 16, g = 17, h = 18}\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$4 = {a = 3, b = 4, c = 5, d = 6, e = 7, f = 8, g = 9, h = 10}\n+// gdb-command:print b\n+// gdb-check:$5 = {a = 11, b = 12, c = 13, d = 14, e = 15, f = 16, g = 17, h = 18}\n+// gdb-command:continue\n \n // BINDING\n-// debugger:print a\n-// check:$6 = 19\n-// debugger:print b\n-// check:$7 = 20\n-// debugger:print c\n-// check:$8 = 21.5\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$6 = 19\n+// gdb-command:print b\n+// gdb-check:$7 = 20\n+// gdb-command:print c\n+// gdb-check:$8 = 21.5\n+// gdb-command:continue\n \n // ASSIGNMENT\n-// debugger:print a\n-// check:$9 = 22\n-// debugger:print b\n-// check:$10 = 23\n-// debugger:print c\n-// check:$11 = 24.5\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$9 = 22\n+// gdb-command:print b\n+// gdb-check:$10 = 23\n+// gdb-command:print c\n+// gdb-check:$11 = 24.5\n+// gdb-command:continue\n \n // FUNCTION CALL\n-// debugger:print x\n-// check:$12 = 25\n-// debugger:print y\n-// check:$13 = 26\n-// debugger:print z\n-// check:$14 = 27.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$12 = 25\n+// gdb-command:print y\n+// gdb-check:$13 = 26\n+// gdb-command:print z\n+// gdb-check:$14 = 27.5\n+// gdb-command:continue\n \n // EXPR\n-// debugger:print x\n-// check:$15 = 28\n-// debugger:print y\n-// check:$16 = 29\n-// debugger:print z\n-// check:$17 = 30.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$15 = 28\n+// gdb-command:print y\n+// gdb-check:$16 = 29\n+// gdb-command:print z\n+// gdb-check:$17 = 30.5\n+// gdb-command:continue\n \n // RETURN EXPR\n-// debugger:print x\n-// check:$18 = 31\n-// debugger:print y\n-// check:$19 = 32\n-// debugger:print z\n-// check:$20 = 33.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$18 = 31\n+// gdb-command:print y\n+// gdb-check:$19 = 32\n+// gdb-command:print z\n+// gdb-check:$20 = 33.5\n+// gdb-command:continue\n \n // ARITHMETIC EXPR\n-// debugger:print x\n-// check:$21 = 34\n-// debugger:print y\n-// check:$22 = 35\n-// debugger:print z\n-// check:$23 = 36.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$21 = 34\n+// gdb-command:print y\n+// gdb-check:$22 = 35\n+// gdb-command:print z\n+// gdb-check:$23 = 36.5\n+// gdb-command:continue\n \n // IF EXPR\n-// debugger:print x\n-// check:$24 = 37\n-// debugger:print y\n-// check:$25 = 38\n-// debugger:print z\n-// check:$26 = 39.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$24 = 37\n+// gdb-command:print y\n+// gdb-check:$25 = 38\n+// gdb-command:print z\n+// gdb-check:$26 = 39.5\n+// gdb-command:continue\n \n // WHILE EXPR\n-// debugger:print x\n-// check:$27 = 40\n-// debugger:print y\n-// check:$28 = 41\n-// debugger:print z\n-// check:$29 = 42\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$27 = 40\n+// gdb-command:print y\n+// gdb-check:$28 = 41\n+// gdb-command:print z\n+// gdb-check:$29 = 42\n+// gdb-command:continue\n \n // LOOP EXPR\n-// debugger:print x\n-// check:$30 = 43\n-// debugger:print y\n-// check:$31 = 44\n-// debugger:print z\n-// check:$32 = 45\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$30 = 43\n+// gdb-command:print y\n+// gdb-check:$31 = 44\n+// gdb-command:print z\n+// gdb-check:$32 = 45\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/function-arg-initialization.rs"}, {"sha": "e65b9a2519d60259bd3e27e335e9b53cdb6920e9", "filename": "src/test/debuginfo/function-arguments.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print x\n-// check:$1 = 111102\n-// debugger:print y\n-// check:$2 = true\n-\n-// debugger:continue\n-// debugger:finish\n-\n-// debugger:print a\n-// check:$3 = 2000\n-// debugger:print b\n-// check:$4 = 3000\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print x\n+// gdb-check:$1 = 111102\n+// gdb-command:print y\n+// gdb-check:$2 = true\n+\n+// gdb-command:continue\n+// gdb-command:finish\n+\n+// gdb-command:print a\n+// gdb-check:$3 = 2000\n+// gdb-command:print b\n+// gdb-check:$4 = 3000\n \n fn main() {\n ", "previous_filename": "src/test/debug-info/function-arguments.rs"}, {"sha": "a9ccf3cdb161be4c16e5c5204305c84a91c509c5", "filename": "src/test/debuginfo/function-prologue-stepping-no-split-stack.rs", "status": "renamed", "additions": 87, "deletions": 87, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ffunction-prologue-stepping-no-split-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ffunction-prologue-stepping-no-split-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-prologue-stepping-no-split-stack.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -17,115 +17,115 @@\n // function name (and don't have to fall back on using line numbers).\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak immediate_args\n-// debugger:rbreak binding\n-// debugger:rbreak assignment\n-// debugger:rbreak function_call\n-// debugger:rbreak identifier\n-// debugger:rbreak return_expr\n-// debugger:rbreak arithmetic_expr\n-// debugger:rbreak if_expr\n-// debugger:rbreak while_expr\n-// debugger:rbreak loop_expr\n-// debugger:run\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak immediate_args\n+// gdb-command:rbreak binding\n+// gdb-command:rbreak assignment\n+// gdb-command:rbreak function_call\n+// gdb-command:rbreak identifier\n+// gdb-command:rbreak return_expr\n+// gdb-command:rbreak arithmetic_expr\n+// gdb-command:rbreak if_expr\n+// gdb-command:rbreak while_expr\n+// gdb-command:rbreak loop_expr\n+// gdb-command:run\n \n // IMMEDIATE ARGS\n-// debugger:print a\n-// check:$1 = 1\n-// debugger:print b\n-// check:$2 = true\n-// debugger:print c\n-// check:$3 = 2.5\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$1 = 1\n+// gdb-command:print b\n+// gdb-check:$2 = true\n+// gdb-command:print c\n+// gdb-check:$3 = 2.5\n+// gdb-command:continue\n \n // NON IMMEDIATE ARGS\n-// debugger:print a\n-// check:$4 = {a = 3, b = 4, c = 5, d = 6, e = 7, f = 8, g = 9, h = 10}\n-// debugger:print b\n-// check:$5 = {a = 11, b = 12, c = 13, d = 14, e = 15, f = 16, g = 17, h = 18}\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$4 = {a = 3, b = 4, c = 5, d = 6, e = 7, f = 8, g = 9, h = 10}\n+// gdb-command:print b\n+// gdb-check:$5 = {a = 11, b = 12, c = 13, d = 14, e = 15, f = 16, g = 17, h = 18}\n+// gdb-command:continue\n \n // BINDING\n-// debugger:print a\n-// check:$6 = 19\n-// debugger:print b\n-// check:$7 = 20\n-// debugger:print c\n-// check:$8 = 21.5\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$6 = 19\n+// gdb-command:print b\n+// gdb-check:$7 = 20\n+// gdb-command:print c\n+// gdb-check:$8 = 21.5\n+// gdb-command:continue\n \n // ASSIGNMENT\n-// debugger:print a\n-// check:$9 = 22\n-// debugger:print b\n-// check:$10 = 23\n-// debugger:print c\n-// check:$11 = 24.5\n-// debugger:continue\n+// gdb-command:print a\n+// gdb-check:$9 = 22\n+// gdb-command:print b\n+// gdb-check:$10 = 23\n+// gdb-command:print c\n+// gdb-check:$11 = 24.5\n+// gdb-command:continue\n \n // FUNCTION CALL\n-// debugger:print x\n-// check:$12 = 25\n-// debugger:print y\n-// check:$13 = 26\n-// debugger:print z\n-// check:$14 = 27.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$12 = 25\n+// gdb-command:print y\n+// gdb-check:$13 = 26\n+// gdb-command:print z\n+// gdb-check:$14 = 27.5\n+// gdb-command:continue\n \n // EXPR\n-// debugger:print x\n-// check:$15 = 28\n-// debugger:print y\n-// check:$16 = 29\n-// debugger:print z\n-// check:$17 = 30.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$15 = 28\n+// gdb-command:print y\n+// gdb-check:$16 = 29\n+// gdb-command:print z\n+// gdb-check:$17 = 30.5\n+// gdb-command:continue\n \n // RETURN EXPR\n-// debugger:print x\n-// check:$18 = 31\n-// debugger:print y\n-// check:$19 = 32\n-// debugger:print z\n-// check:$20 = 33.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$18 = 31\n+// gdb-command:print y\n+// gdb-check:$19 = 32\n+// gdb-command:print z\n+// gdb-check:$20 = 33.5\n+// gdb-command:continue\n \n // ARITHMETIC EXPR\n-// debugger:print x\n-// check:$21 = 34\n-// debugger:print y\n-// check:$22 = 35\n-// debugger:print z\n-// check:$23 = 36.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$21 = 34\n+// gdb-command:print y\n+// gdb-check:$22 = 35\n+// gdb-command:print z\n+// gdb-check:$23 = 36.5\n+// gdb-command:continue\n \n // IF EXPR\n-// debugger:print x\n-// check:$24 = 37\n-// debugger:print y\n-// check:$25 = 38\n-// debugger:print z\n-// check:$26 = 39.5\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$24 = 37\n+// gdb-command:print y\n+// gdb-check:$25 = 38\n+// gdb-command:print z\n+// gdb-check:$26 = 39.5\n+// gdb-command:continue\n \n // WHILE EXPR\n-// debugger:print x\n-// check:$27 = 40\n-// debugger:print y\n-// check:$28 = 41\n-// debugger:print z\n-// check:$29 = 42\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$27 = 40\n+// gdb-command:print y\n+// gdb-check:$28 = 41\n+// gdb-command:print z\n+// gdb-check:$29 = 42\n+// gdb-command:continue\n \n // LOOP EXPR\n-// debugger:print x\n-// check:$30 = 43\n-// debugger:print y\n-// check:$31 = 44\n-// debugger:print z\n-// check:$32 = 45\n-// debugger:continue\n+// gdb-command:print x\n+// gdb-check:$30 = 43\n+// gdb-command:print y\n+// gdb-check:$31 = 44\n+// gdb-command:print z\n+// gdb-check:$32 = 45\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/function-prologue-stepping-no-split-stack.rs"}, {"sha": "9fe17f9937ab575b1470d6090ef9b70fa03a5154", "filename": "src/test/debuginfo/generic-function.rs", "status": "renamed", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,35 +11,35 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print *t0\n-// check:$1 = 1\n-// debugger:print *t1\n-// check:$2 = 2.5\n-// debugger:print ret\n-// check:$3 = {{1, 2.5}, {2.5, 1}}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *t0\n-// check:$4 = 3.5\n-// debugger:print *t1\n-// check:$5 = 4\n-// debugger:print ret\n-// check:$6 = {{3.5, 4}, {4, 3.5}}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print *t0\n-// check:$7 = 5\n-// debugger:print *t1\n-// check:$8 = {a = 6, b = 7.5}\n-// debugger:print ret\n-// check:$9 = {{5, {a = 6, b = 7.5}}, {{a = 6, b = 7.5}, 5}}\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print *t0\n+// gdb-check:$1 = 1\n+// gdb-command:print *t1\n+// gdb-check:$2 = 2.5\n+// gdb-command:print ret\n+// gdb-check:$3 = {{1, 2.5}, {2.5, 1}}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *t0\n+// gdb-check:$4 = 3.5\n+// gdb-command:print *t1\n+// gdb-check:$5 = 4\n+// gdb-command:print ret\n+// gdb-check:$6 = {{3.5, 4}, {4, 3.5}}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print *t0\n+// gdb-check:$7 = 5\n+// gdb-command:print *t1\n+// gdb-check:$8 = {a = 6, b = 7.5}\n+// gdb-command:print ret\n+// gdb-check:$9 = {{5, {a = 6, b = 7.5}}, {{a = 6, b = 7.5}, 5}}\n+// gdb-command:continue\n \n #[deriving(Clone)]\n struct Struct {", "previous_filename": "src/test/debug-info/generic-function.rs"}, {"sha": "1849ca16138003a77503d3ac99c912a7e96a6968", "filename": "src/test/debuginfo/generic-functions-nested.rs", "status": "renamed", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,36 +11,36 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = -1\n-// debugger:print y\n-// check:$2 = 1\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = -1\n-// debugger:print y\n-// check:$4 = 2.5\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = -2.5\n-// debugger:print y\n-// check:$6 = 1\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = -2.5\n-// debugger:print y\n-// check:$8 = 2.5\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = -1\n+// gdb-command:print y\n+// gdb-check:$2 = 1\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = -1\n+// gdb-command:print y\n+// gdb-check:$4 = 2.5\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = -2.5\n+// gdb-command:print y\n+// gdb-check:$6 = 1\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = -2.5\n+// gdb-command:print y\n+// gdb-check:$8 = 2.5\n+// gdb-command:continue\n \n fn outer<TA: Clone>(a: TA) {\n     inner(a.clone(), 1);", "previous_filename": "src/test/debug-info/generic-functions-nested.rs"}, {"sha": "ad088d9a5eba6ccfa74befd10dd32c7c7b817eeb", "filename": "src/test/debuginfo/generic-method-on-generic-struct.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {x = {8888, -8888}}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print/d arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {x = {8888, -8888}}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print/d arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {x = {8888, -8888}}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {x = {8888, -8888}}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {x = 1234.5}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {x = 1234.5}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {x = 1234.5}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {x = 1234.5}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {x = 1234.5}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10.5\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {x = 1234.5}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10.5\n+// gdb-command:continue\n \n struct Struct<T> {\n     x: T", "previous_filename": "src/test/debug-info/generic-method-on-generic-struct.rs"}, {"sha": "82a9d7089666f59b0ca5a3a23877c2f6dd6fae06", "filename": "src/test/debuginfo/generic-static-method-on-struct-and-enum.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-static-method-on-struct-and-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-static-method-on-struct-and-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-static-method-on-struct-and-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,26 +11,26 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STRUCT\n-// debugger:finish\n-// debugger:print arg1\n-// check:$1 = 1\n-// debugger:print arg2\n-// check:$2 = 2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$1 = 1\n+// gdb-command:print arg2\n+// gdb-check:$2 = 2\n+// gdb-command:continue\n \n // ENUM\n-// debugger:finish\n-// debugger:print arg1\n-// check:$3 = -3\n-// debugger:print arg2\n-// check:$4 = 4.5\n-// debugger:print arg3\n-// check:$5 = 5\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$3 = -3\n+// gdb-command:print arg2\n+// gdb-check:$4 = 4.5\n+// gdb-command:print arg3\n+// gdb-check:$5 = 5\n+// gdb-command:continue\n \n #![feature(struct_variant)]\n ", "previous_filename": "src/test/debug-info/generic-static-method-on-struct-and-enum.rs"}, {"sha": "498d0981e35d0ada080966e2f3f93e764a565fc8", "filename": "src/test/debuginfo/generic-struct-style-enum.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,22 +12,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print union on\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print union on\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print case1\n-// check:$1 = {{Case1, a = 0, b = 31868, c = 31868, d = 31868, e = 31868}, {Case1, a = 0, b = 2088533116, c = 2088533116}, {Case1, a = 0, b = 8970181431921507452}}\n+// gdb-command:print case1\n+// gdb-check:$1 = {{Case1, a = 0, b = 31868, c = 31868, d = 31868, e = 31868}, {Case1, a = 0, b = 2088533116, c = 2088533116}, {Case1, a = 0, b = 8970181431921507452}}\n \n-// debugger:print case2\n-// check:$2 = {{Case2, a = 0, b = 4369, c = 4369, d = 4369, e = 4369}, {Case2, a = 0, b = 286331153, c = 286331153}, {Case2, a = 0, b = 1229782938247303441}}\n+// gdb-command:print case2\n+// gdb-check:$2 = {{Case2, a = 0, b = 4369, c = 4369, d = 4369, e = 4369}, {Case2, a = 0, b = 286331153, c = 286331153}, {Case2, a = 0, b = 1229782938247303441}}\n \n-// debugger:print case3\n-// check:$3 = {{Case3, a = 0, b = 22873, c = 22873, d = 22873, e = 22873}, {Case3, a = 0, b = 1499027801, c = 1499027801}, {Case3, a = 0, b = 6438275382588823897}}\n+// gdb-command:print case3\n+// gdb-check:$3 = {{Case3, a = 0, b = 22873, c = 22873, d = 22873, e = 22873}, {Case3, a = 0, b = 1499027801, c = 1499027801}, {Case3, a = 0, b = 6438275382588823897}}\n \n-// debugger:print univariant\n-// check:$4 = {a = -1}\n+// gdb-command:print univariant\n+// gdb-check:$4 = {a = -1}\n \n #![feature(struct_variant)]\n ", "previous_filename": "src/test/debug-info/generic-struct-style-enum.rs"}, {"sha": "69217f4b8785161ac1d0fa6f6ce524bdad30322a", "filename": "src/test/debuginfo/generic-struct.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,18 +11,18 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print int_int\n-// check:$1 = {key = 0, value = 1}\n-// debugger:print int_float\n-// check:$2 = {key = 2, value = 3.5}\n-// debugger:print float_int\n-// check:$3 = {key = 4.5, value = 5}\n-// debugger:print float_int_float\n-// check:$4 = {key = 6.5, value = {key = 7, value = 8.5}}\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print int_int\n+// gdb-check:$1 = {key = 0, value = 1}\n+// gdb-command:print int_float\n+// gdb-check:$2 = {key = 2, value = 3.5}\n+// gdb-command:print float_int\n+// gdb-check:$3 = {key = 4.5, value = 5}\n+// gdb-command:print float_int_float\n+// gdb-check:$4 = {key = 6.5, value = {key = 7, value = 8.5}}\n \n struct AGenericStruct<TKey, TValue> {\n     key: TKey,", "previous_filename": "src/test/debug-info/generic-struct.rs"}, {"sha": "904b22f5d4967ece4a8b411cfe2691b965d67525", "filename": "src/test/debuginfo/generic-trait-generic-static-default-method.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-trait-generic-static-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-trait-generic-static-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-trait-generic-static-default-method.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // except according to those terms.\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print arg1\n-// check:$1 = 1000\n-// debugger:print *arg2\n-// check:$2 = {1, 2.5}\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print arg1\n-// check:$3 = 2000\n-// debugger:print *arg2\n-// check:$4 = {3.5, {4, 5, 6}}\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$1 = 1000\n+// gdb-command:print *arg2\n+// gdb-check:$2 = {1, 2.5}\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$3 = 2000\n+// gdb-command:print *arg2\n+// gdb-check:$4 = {3.5, {4, 5, 6}}\n+// gdb-command:continue\n \n \n struct Struct {", "previous_filename": "src/test/debug-info/generic-trait-generic-static-default-method.rs"}, {"sha": "16a665ca8c67e8ed89c1c910270687d6207d5239", "filename": "src/test/debuginfo/generic-tuple-style-enum.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,22 +12,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print union on\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print union on\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print case1\n-// check:$1 = {{Case1, 0, 31868, 31868, 31868, 31868}, {Case1, 0, 2088533116, 2088533116}, {Case1, 0, 8970181431921507452}}\n+// gdb-command:print case1\n+// gdb-check:$1 = {{Case1, 0, 31868, 31868, 31868, 31868}, {Case1, 0, 2088533116, 2088533116}, {Case1, 0, 8970181431921507452}}\n \n-// debugger:print case2\n-// check:$2 = {{Case2, 0, 4369, 4369, 4369, 4369}, {Case2, 0, 286331153, 286331153}, {Case2, 0, 1229782938247303441}}\n+// gdb-command:print case2\n+// gdb-check:$2 = {{Case2, 0, 4369, 4369, 4369, 4369}, {Case2, 0, 286331153, 286331153}, {Case2, 0, 1229782938247303441}}\n \n-// debugger:print case3\n-// check:$3 = {{Case3, 0, 22873, 22873, 22873, 22873}, {Case3, 0, 1499027801, 1499027801}, {Case3, 0, 6438275382588823897}}\n+// gdb-command:print case3\n+// gdb-check:$3 = {{Case3, 0, 22873, 22873, 22873, 22873}, {Case3, 0, 1499027801, 1499027801}, {Case3, 0, 6438275382588823897}}\n \n-// debugger:print univariant\n-// check:$4 = {-1}\n+// gdb-command:print univariant\n+// gdb-check:$4 = {-1}\n \n \n // NOTE: This is a copy of the non-generic test case. The `Txx` type parameters have to be", "previous_filename": "src/test/debug-info/generic-tuple-style-enum.rs"}, {"sha": "1d544dd003bad3899a688c05ef448f539993a979", "filename": "src/test/debuginfo/include_string.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Finclude_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Finclude_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Finclude_string.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,16 +11,16 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print string1.length\n-// check:$1 = 48\n-// debugger:print string2.length\n-// check:$2 = 48\n-// debugger:print string3.length\n-// check:$3 = 48\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print string1.length\n+// gdb-check:$1 = 48\n+// gdb-command:print string2.length\n+// gdb-check:$2 = 48\n+// gdb-command:print string3.length\n+// gdb-check:$3 = 48\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/include_string.rs"}, {"sha": "426a40bf8bdabac26d4e32d633f901d117d421e6", "filename": "src/test/debuginfo/issue11600.rs", "status": "renamed", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue11600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue11600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue11600.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -8,30 +8,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// This test was actually never run before because commands were only parsed up to the first\n+// function definition but the test relied on the function being above the commands. Ignore for now.\n+// ignore-test\n+\n fn main() {\n     let args : ~[~str] = ::std::os::args();\n     ::std::io::println(args[0]);\n }\n \n-\n // ignore-android: FIXME(#10381)\n \n // This test case checks whether compile unit names are set correctly, so that the correct default\n // source file can be found.\n \n // compile-flags:-g\n-// debugger:list\n-// check:1[...]fn main() {\n-// check:2[...]let args : ~[~str] = ::std::os::args();\n-// check:3[...]::std::io::println(args[0]);\n-// check:4[...]}\n-\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n+// gdb-command:list\n+// gdb-check:1[...]fn main() {\n+// gdb-check:2[...]let args : ~[~str] = ::std::os::args();\n+// gdb-check:3[...]::std::io::println(args[0]);\n+// gdb-check:4[...]}", "previous_filename": "src/test/debug-info/issue11600.rs"}, {"sha": "3b152cd3c1a8c2e265f928a1e1b79ffe0ac5145e", "filename": "src/test/debuginfo/issue12886.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue12886.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue12886.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue12886.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,11 +11,11 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:break issue12886.rs:29\n-// debugger:run\n-// debugger:next\n-// check:[...]30[...]s\n-// debugger:continue\n+// gdb-command:break issue12886.rs:29\n+// gdb-command:run\n+// gdb-command:next\n+// gdb-check:[...]30[...]s\n+// gdb-command:continue\n \n // IF YOU MODIFY THIS FILE, BE CAREFUL TO ADAPT THE LINE NUMBERS IN THE DEBUGGER COMMANDS\n ", "previous_filename": "src/test/debug-info/issue12886.rs"}, {"sha": "a03b263a692b8389ecd8eed34220cc4cc2872f58", "filename": "src/test/debuginfo/issue13213.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue13213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue13213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue13213.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "previous_filename": "src/test/debug-info/issue13213.rs"}, {"sha": "8308afce08e8b39a8b0167dcd38a913c868f48ae", "filename": "src/test/debuginfo/issue7712.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue7712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fissue7712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue7712.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "previous_filename": "src/test/debug-info/issue7712.rs"}, {"sha": "0f6ac953179f38a0cfa05f2bb21ea4658a1b59db", "filename": "src/test/debuginfo/lexical-scope-in-for-loop.rs", "status": "renamed", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,47 +11,47 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // FIRST ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = 1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = 1\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print x\n-// check:$2 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = -1\n+// gdb-command:continue\n \n // SECOND ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 2\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print x\n-// check:$4 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$4 = -2\n+// gdb-command:continue\n \n // THIRD ITERATION\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = 3\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = 3\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print x\n-// check:$6 = -3\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$6 = -3\n+// gdb-command:continue\n \n // AFTER LOOP\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = 1000000\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = 1000000\n+// gdb-command:continue\n \n fn main() {\n ", "previous_filename": "src/test/debug-info/lexical-scope-in-for-loop.rs"}, {"sha": "ef573735d0d4c356f452404cabf39820aee4dbe2", "filename": "src/test/debuginfo/lexical-scope-in-if.rs", "status": "renamed", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,72 +11,72 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // BEFORE if\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = 999\n-// debugger:print y\n-// check:$2 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = 999\n+// gdb-command:print y\n+// gdb-check:$2 = -1\n+// gdb-command:continue\n \n // AT BEGINNING of 'then' block\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 999\n-// debugger:print y\n-// check:$4 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 999\n+// gdb-command:print y\n+// gdb-check:$4 = -1\n+// gdb-command:continue\n \n // AFTER 1st redeclaration of 'x'\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = 1001\n-// debugger:print y\n-// check:$6 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = 1001\n+// gdb-command:print y\n+// gdb-check:$6 = -1\n+// gdb-command:continue\n \n // AFTER 2st redeclaration of 'x'\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = 1002\n-// debugger:print y\n-// check:$8 = 1003\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = 1002\n+// gdb-command:print y\n+// gdb-check:$8 = 1003\n+// gdb-command:continue\n \n // AFTER 1st if expression\n-// debugger:finish\n-// debugger:print x\n-// check:$9 = 999\n-// debugger:print y\n-// check:$10 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$9 = 999\n+// gdb-command:print y\n+// gdb-check:$10 = -1\n+// gdb-command:continue\n \n // BEGINNING of else branch\n-// debugger:finish\n-// debugger:print x\n-// check:$11 = 999\n-// debugger:print y\n-// check:$12 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$11 = 999\n+// gdb-command:print y\n+// gdb-check:$12 = -1\n+// gdb-command:continue\n \n // BEGINNING of else branch\n-// debugger:finish\n-// debugger:print x\n-// check:$13 = 1004\n-// debugger:print y\n-// check:$14 = 1005\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$13 = 1004\n+// gdb-command:print y\n+// gdb-check:$14 = 1005\n+// gdb-command:continue\n \n // BEGINNING of else branch\n-// debugger:finish\n-// debugger:print x\n-// check:$15 = 999\n-// debugger:print y\n-// check:$16 = -1\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$15 = 999\n+// gdb-command:print y\n+// gdb-check:$16 = -1\n+// gdb-command:continue\n \n fn main() {\n ", "previous_filename": "src/test/debug-info/lexical-scope-in-if.rs"}, {"sha": "5f13c780ba865d6a047dac55d13a6805a71cf67d", "filename": "src/test/debuginfo/lexical-scope-in-match.rs", "status": "renamed", "additions": 62, "deletions": 62, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,68 +11,68 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$1 = 231\n-// debugger:print not_shadowed\n-// check:$2 = 232\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$3 = 233\n-// debugger:print not_shadowed\n-// check:$4 = 232\n-// debugger:print local_to_arm\n-// check:$5 = 234\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$6 = 236\n-// debugger:print not_shadowed\n-// check:$7 = 232\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$8 = 237\n-// debugger:print not_shadowed\n-// check:$9 = 232\n-// debugger:print local_to_arm\n-// check:$10 = 238\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$11 = 239\n-// debugger:print not_shadowed\n-// check:$12 = 232\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$13 = 241\n-// debugger:print not_shadowed\n-// check:$14 = 232\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$15 = 243\n-// debugger:print *local_to_arm\n-// check:$16 = 244\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print shadowed\n-// check:$17 = 231\n-// debugger:print not_shadowed\n-// check:$18 = 232\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$1 = 231\n+// gdb-command:print not_shadowed\n+// gdb-check:$2 = 232\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$3 = 233\n+// gdb-command:print not_shadowed\n+// gdb-check:$4 = 232\n+// gdb-command:print local_to_arm\n+// gdb-check:$5 = 234\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$6 = 236\n+// gdb-command:print not_shadowed\n+// gdb-check:$7 = 232\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$8 = 237\n+// gdb-command:print not_shadowed\n+// gdb-check:$9 = 232\n+// gdb-command:print local_to_arm\n+// gdb-check:$10 = 238\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$11 = 239\n+// gdb-command:print not_shadowed\n+// gdb-check:$12 = 232\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$13 = 241\n+// gdb-command:print not_shadowed\n+// gdb-check:$14 = 232\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$15 = 243\n+// gdb-command:print *local_to_arm\n+// gdb-check:$16 = 244\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print shadowed\n+// gdb-check:$17 = 231\n+// gdb-command:print not_shadowed\n+// gdb-check:$18 = 232\n+// gdb-command:continue\n \n struct Struct {\n     x: int,", "previous_filename": "src/test/debug-info/lexical-scope-in-match.rs"}, {"sha": "ad8f04d1fc795871bd93682b3423b4d003d5d3c7", "filename": "src/test/debuginfo/lexical-scope-in-parameterless-closure.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,7 +11,7 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:--debuginfo=1\n-// debugger:run\n+// gdb-command:run\n \n // Nothing to do here really, just make sure it compiles. See issue #8513.\n fn main() {", "previous_filename": "src/test/debug-info/lexical-scope-in-parameterless-closure.rs"}, {"sha": "c56cdbe0315024bfa466320b829f47704d82945e", "filename": "src/test/debuginfo/lexical-scope-in-stack-closure.rs", "status": "renamed", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,38 +11,38 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$2 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 1000\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$4 = 2.5\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$6 = false\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 1000\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$4 = 2.5\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$6 = false\n+// gdb-command:continue\n \n fn main() {\n ", "previous_filename": "src/test/debug-info/lexical-scope-in-stack-closure.rs"}, {"sha": "12e95c4f9c7430a649990f91ae93a28a1520e256", "filename": "src/test/debuginfo/lexical-scope-in-unconditional-loop.rs", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,127 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// FIRST ITERATION\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = 0\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = 1\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 101\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$4 = 101\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = -987\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$6 = 101\n+// gdb-command:continue\n+\n+\n+// SECOND ITERATION\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = 1\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$8 = 2\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$9 = 102\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$10 = 102\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$11 = -987\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$12 = 102\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$13 = 2\n+// gdb-command:continue\n+\n+fn main() {\n+\n+    let mut x = 0;\n+\n+    loop {\n+        if x >= 2 {\n+            break;\n+        }\n+\n+        zzz();\n+        sentinel();\n+\n+        x += 1;\n+        zzz();\n+        sentinel();\n+\n+        // Shadow x\n+        let x = x + 100;\n+        zzz();\n+        sentinel();\n+\n+        // open scope within loop's top level scope\n+        {\n+            zzz();\n+            sentinel();\n+\n+            let x = -987;\n+\n+            zzz();\n+            sentinel();\n+        }\n+\n+        // Check that we get the x before the inner scope again\n+        zzz();\n+        sentinel();\n+    }\n+\n+    zzz();\n+    sentinel();\n+}\n+\n+fn zzz() {()}\n+fn sentinel() {()}"}, {"sha": "328910b0f1341de46a65c83dfc962c783250a979", "filename": "src/test/debuginfo/lexical-scope-in-unique-closure.rs", "status": "renamed", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,38 +11,38 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$2 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 1000\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$4 = 2.5\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$6 = false\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 1000\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$4 = 2.5\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$6 = false\n+// gdb-command:continue\n \n fn main() {\n ", "previous_filename": "src/test/debug-info/lexical-scope-in-unique-closure.rs"}, {"sha": "1b2a9f75182963090143633c6ff4df0361914f4a", "filename": "src/test/debuginfo/lexical-scope-in-while.rs", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,123 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// FIRST ITERATION\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = 0\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = 1\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 101\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$4 = 101\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = -987\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$6 = 101\n+// gdb-command:continue\n+\n+\n+// SECOND ITERATION\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = 1\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$8 = 2\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$9 = 102\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$10 = 102\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$11 = -987\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$12 = 102\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$13 = 2\n+// gdb-command:continue\n+\n+fn main() {\n+\n+    let mut x = 0;\n+\n+    while x < 2 {\n+        zzz();\n+        sentinel();\n+\n+        x += 1;\n+        zzz();\n+        sentinel();\n+\n+        // Shadow x\n+        let x = x + 100;\n+        zzz();\n+        sentinel();\n+\n+        // open scope within loop's top level scope\n+        {\n+            zzz();\n+            sentinel();\n+\n+            let x = -987;\n+\n+            zzz();\n+            sentinel();\n+        }\n+\n+        // Check that we get the x before the inner scope again\n+        zzz();\n+        sentinel();\n+    }\n+\n+    zzz();\n+    sentinel();\n+}\n+\n+fn zzz() {()}\n+fn sentinel() {()}"}, {"sha": "3fb6f10fe332b3ba0c9a145698c27d66b00e9aee", "filename": "src/test/debuginfo/lexical-scope-with-macro.rs", "status": "renamed", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,59 +11,59 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$1 = 10\n-// debugger:print b\n-// check:$2 = 34\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$3 = 890242\n-// debugger:print b\n-// check:$4 = 34\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$5 = 10\n-// debugger:print b\n-// check:$6 = 34\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$7 = 102\n-// debugger:print b\n-// check:$8 = 34\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$9 = 110\n-// debugger:print b\n-// check:$10 = 34\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$11 = 10\n-// debugger:print b\n-// check:$12 = 34\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print a\n-// check:$13 = 10\n-// debugger:print b\n-// check:$14 = 34\n-// debugger:print c\n-// check:$15 = 400\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$1 = 10\n+// gdb-command:print b\n+// gdb-check:$2 = 34\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$3 = 890242\n+// gdb-command:print b\n+// gdb-check:$4 = 34\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$5 = 10\n+// gdb-command:print b\n+// gdb-check:$6 = 34\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$7 = 102\n+// gdb-command:print b\n+// gdb-check:$8 = 34\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$9 = 110\n+// gdb-command:print b\n+// gdb-check:$10 = 34\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$11 = 10\n+// gdb-command:print b\n+// gdb-check:$12 = 34\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$13 = 10\n+// gdb-command:print b\n+// gdb-check:$14 = 34\n+// gdb-command:print c\n+// gdb-check:$15 = 400\n+// gdb-command:continue\n \n #![feature(macro_rules)]\n ", "previous_filename": "src/test/debug-info/lexical-scope-with-macro.rs"}, {"sha": "41b88dc3e981d6f643a210f1197408daf13039d4", "filename": "src/test/debuginfo/lexical-scopes-in-block-expression.rs", "status": "added", "additions": 377, "deletions": 0, "changes": 377, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,377 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-win32: FIXME #13256\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$1 = 0\n+\n+// STRUCT EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$2 = -1\n+// gdb-command:print ten\n+// gdb-check:$3 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$4 = 11\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$5 = 1\n+// gdb-command:print ten\n+// gdb-check:$6 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$7 = -1\n+// gdb-command:print ten\n+// gdb-check:$8 = 10\n+// gdb-command:continue\n+\n+// FUNCTION CALL\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$9 = -1\n+// gdb-command:print ten\n+// gdb-check:$10 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$11 = 12\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$12 = 2\n+// gdb-command:print ten\n+// gdb-check:$13 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$14 = -1\n+// gdb-command:print ten\n+// gdb-check:$15 = 10\n+// gdb-command:continue\n+\n+// TUPLE EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$16 = -1\n+// gdb-command:print ten\n+// gdb-check:$17 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$18 = 13\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$19 = 3\n+// gdb-command:print ten\n+// gdb-check:$20 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$21 = -1\n+// gdb-command:print ten\n+// gdb-check:$22 = 10\n+// gdb-command:continue\n+\n+// VEC EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$23 = -1\n+// gdb-command:print ten\n+// gdb-check:$24 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$25 = 14\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$26 = 4\n+// gdb-command:print ten\n+// gdb-check:$27 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$28 = -1\n+// gdb-command:print ten\n+// gdb-check:$29 = 10\n+// gdb-command:continue\n+\n+// REPEAT VEC EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$30 = -1\n+// gdb-command:print ten\n+// gdb-check:$31 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$32 = 15\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$33 = 5\n+// gdb-command:print ten\n+// gdb-check:$34 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$35 = -1\n+// gdb-command:print ten\n+// gdb-check:$36 = 10\n+// gdb-command:continue\n+\n+// ASSIGNMENT EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$37 = -1\n+// gdb-command:print ten\n+// gdb-check:$38 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$39 = 16\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$40 = 6\n+// gdb-command:print ten\n+// gdb-check:$41 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$42 = -1\n+// gdb-command:print ten\n+// gdb-check:$43 = 10\n+// gdb-command:continue\n+\n+\n+// ARITHMETIC EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$44 = -1\n+// gdb-command:print ten\n+// gdb-check:$45 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$46 = 17\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$47 = 7\n+// gdb-command:print ten\n+// gdb-check:$48 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$49 = -1\n+// gdb-command:print ten\n+// gdb-check:$50 = 10\n+// gdb-command:continue\n+\n+// INDEX EXPRESSION\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$51 = -1\n+// gdb-command:print ten\n+// gdb-check:$52 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$53 = 18\n+// gdb-command:print 'lexical-scopes-in-block-expression::MUT_INT'\n+// gdb-check:$54 = 8\n+// gdb-command:print ten\n+// gdb-check:$55 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print val\n+// gdb-check:$56 = -1\n+// gdb-command:print ten\n+// gdb-check:$57 = 10\n+// gdb-command:continue\n+\n+#![allow(unused_variable)]\n+#![allow(dead_assignment)]\n+\n+static mut MUT_INT: int = 0;\n+\n+struct Point {\n+    x: int,\n+    y: int\n+}\n+\n+fn a_function(x: int) -> int {\n+    x + 1\n+}\n+\n+fn main() {\n+\n+    let val = -1;\n+    let ten = 10;\n+\n+    // surrounded by struct expression\n+    let point = Point {\n+        x: {\n+            zzz();\n+            sentinel();\n+\n+            let val = ten + 1;\n+            unsafe {MUT_INT = 1;};\n+\n+            zzz();\n+            sentinel();\n+\n+            val\n+        },\n+        y: 10\n+    };\n+\n+    zzz();\n+    sentinel();\n+\n+    // surrounded by function call\n+    let _ = a_function({\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 2;\n+        unsafe {MUT_INT = 2;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val\n+    });\n+\n+    zzz();\n+    sentinel();\n+\n+\n+    // surrounded by tup\n+    let _ = ({\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 3;\n+        unsafe {MUT_INT = 3;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val\n+    }, 0);\n+\n+    zzz();\n+    sentinel();\n+\n+    // surrounded by vec\n+    let _ = [{\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 4;\n+        unsafe {MUT_INT = 4;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val\n+    }, 0, 0];\n+\n+    zzz();\n+    sentinel();\n+\n+    // surrounded by repeat vec\n+    let _ = [{\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 5;\n+        unsafe {MUT_INT = 5;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val\n+    }, ..10];\n+\n+    zzz();\n+    sentinel();\n+\n+    // assignment expression\n+    let mut var = 0;\n+    var = {\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 6;\n+        unsafe {MUT_INT = 6;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val\n+    };\n+\n+    zzz();\n+    sentinel();\n+\n+    // arithmetic expression\n+    var = 10 + -{\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 7;\n+        unsafe {MUT_INT = 7;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val\n+    } * 5;\n+\n+    zzz();\n+    sentinel();\n+\n+    // index expression\n+    let a_vector = [10, ..20];\n+    let _ = a_vector[{\n+        zzz();\n+        sentinel();\n+\n+        let val = ten + 8;\n+        unsafe {MUT_INT = 8;};\n+\n+        zzz();\n+        sentinel();\n+\n+        val as uint\n+    }];\n+\n+    zzz();\n+    sentinel();\n+}\n+\n+fn zzz() {()}\n+fn sentinel() {()}"}, {"sha": "616f312c0784696259c0643de24b6e591c4d60e4", "filename": "src/test/debuginfo/limited-debuginfo.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -13,20 +13,20 @@\n // compile-flags:--debuginfo=1\n \n // Make sure functions have proper names\n-// debugger:info functions\n-// check:[...]void[...]main([...]);\n-// check:[...]void[...]some_function([...]);\n-// check:[...]void[...]some_other_function([...]);\n-// check:[...]void[...]zzz([...]);\n+// gdb-command:info functions\n+// gdb-check:[...]void[...]main([...]);\n+// gdb-check:[...]void[...]some_function([...]);\n+// gdb-check:[...]void[...]some_other_function([...]);\n+// gdb-check:[...]void[...]zzz([...]);\n \n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // Make sure there is no information about locals\n-// debugger:finish\n-// debugger:info locals\n-// check:No locals.\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:info locals\n+// gdb-check:No locals.\n+// gdb-command:continue\n \n \n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/limited-debuginfo.rs"}, {"sha": "7899e0c6a9b539fb6447c9c251d122e1b7742b69", "filename": "src/test/debuginfo/managed-enum.rs", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmanaged-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmanaged-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmanaged-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,18 +11,18 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print the_a->val\n-// check:$1 = {{TheA, x = 0, y = 8970181431921507452}, {TheA, 0, 2088533116, 2088533116}}\n+// gdb-command:print the_a->val\n+// gdb-check:$1 = {{TheA, x = 0, y = 8970181431921507452}, {TheA, 0, 2088533116, 2088533116}}\n \n-// debugger:print the_b->val\n-// check:$2 = {{TheB, x = 0, y = 1229782938247303441}, {TheB, 0, 286331153, 286331153}}\n+// gdb-command:print the_b->val\n+// gdb-check:$2 = {{TheB, x = 0, y = 1229782938247303441}, {TheB, 0, 286331153, 286331153}}\n \n-// debugger:print univariant->val\n-// check:$3 = {-9747455}\n+// gdb-command:print univariant->val\n+// gdb-check:$3 = {-9747455}\n \n #![allow(unused_variable)]\n #![feature(struct_variant, managed_boxes)]", "previous_filename": "src/test/debug-info/managed-enum.rs"}, {"sha": "a2a0d171898d26c33007910e43d5caf9fbe2fb9c", "filename": "src/test/debuginfo/managed-pointer-within-unique-vec.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmanaged-pointer-within-unique-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmanaged-pointer-within-unique-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmanaged-pointer-within-unique-vec.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -13,21 +13,21 @@\n #![feature(managed_boxes)]\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print unique.ptr[0]->val\n-// check:$1 = 10\n+// gdb-command:print unique.ptr[0]->val\n+// gdb-check:$1 = 10\n \n-// debugger:print unique.ptr[1]->val\n-// check:$2 = 11\n+// gdb-command:print unique.ptr[1]->val\n+// gdb-check:$2 = 11\n \n-// debugger:print unique.ptr[2]->val\n-// check:$3 = 12\n+// gdb-command:print unique.ptr[2]->val\n+// gdb-check:$3 = 12\n \n-// debugger:print unique.ptr[3]->val\n-// check:$4 = 13\n+// gdb-command:print unique.ptr[3]->val\n+// gdb-check:$4 = 13\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/managed-pointer-within-unique-vec.rs"}, {"sha": "be2cc696d4fbac6c31c94c97639e31b59430d205", "filename": "src/test/debuginfo/managed-pointer-within-unique.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmanaged-pointer-within-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmanaged-pointer-within-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmanaged-pointer-within-unique.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -13,19 +13,19 @@\n #![feature(managed_boxes)]\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *ordinary_unique\n-// check:$1 = {-1, -2}\n+// gdb-command:print *ordinary_unique\n+// gdb-check:$1 = {-1, -2}\n \n-// debugger:print managed_within_unique->x\n-// check:$2 = -3\n+// gdb-command:print managed_within_unique->x\n+// gdb-check:$2 = -3\n \n-// debugger:print managed_within_unique->y->val\n-// check:$3 = -4\n+// gdb-command:print managed_within_unique->y->val\n+// gdb-check:$3 = -4\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/managed-pointer-within-unique.rs"}, {"sha": "1a5fac18a6973b6405bf19e50e65071536d9dd24", "filename": "src/test/debuginfo/method-on-enum.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {{Variant2, [...]}, {Variant2, 117901063}}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {{Variant2, [...]}, {Variant2, 117901063}}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {{Variant2, [...]}, {Variant2, 117901063}}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {{Variant2, [...]}, {Variant2, 117901063}}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10\n+// gdb-command:continue\n \n #![feature(struct_variant)]\n ", "previous_filename": "src/test/debug-info/method-on-enum.rs"}, {"sha": "2f7b0c845ea80706ebede78e8127eabfa5715290", "filename": "src/test/debuginfo/method-on-generic-struct.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {x = {8888, -8888}}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {x = {8888, -8888}}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {x = {8888, -8888}}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {x = {8888, -8888}}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {x = 1234.5}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {x = 1234.5}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {x = 1234.5}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {x = 1234.5}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {x = 1234.5}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {x = 1234.5}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10\n+// gdb-command:continue\n \n struct Struct<T> {\n     x: T", "previous_filename": "src/test/debug-info/method-on-generic-struct.rs"}, {"sha": "3d7cc96ca171fa43175bc65ef814d4d96e23e8e8", "filename": "src/test/debuginfo/method-on-struct.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {x = 100}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {x = 100}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {x = 100}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {x = 100}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {x = 200}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {x = 200}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {x = 200}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10\n+// gdb-command:continue\n \n struct Struct {\n     x: int", "previous_filename": "src/test/debug-info/method-on-struct.rs"}, {"sha": "a2b73629a6738d0bc89787521d3068122102980b", "filename": "src/test/debuginfo/method-on-trait.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {x = 100}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {x = 100}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {x = 100}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {x = 100}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {x = 200}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {x = 200}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {x = 200}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10\n+// gdb-command:continue\n \n struct Struct {\n     x: int", "previous_filename": "src/test/debug-info/method-on-trait.rs"}, {"sha": "fe7271716bb4fbdf0ba8192f12336e9b950ad4af", "filename": "src/test/debuginfo/method-on-tuple-struct.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {100, -100.5}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {100, -100.5}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {100, -100.5}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {100, -100.5}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {200, -200.5}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {200, -200.5}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {200, -200.5}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {200, -200.5}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {200, -200.5}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {200, -200.5}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10\n+// gdb-command:continue\n \n struct TupleStruct(int, f64);\n ", "previous_filename": "src/test/debug-info/method-on-tuple-struct.rs"}, {"sha": "510718254d9045afd00fd76ce5745114f0f0390f", "filename": "src/test/debuginfo/multiple-functions-equal-var-names.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print abc\n-// check:$1 = 10101\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print abc\n-// check:$2 = 20202\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print abc\n-// check:$3 = 30303\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print abc\n+// gdb-check:$1 = 10101\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print abc\n+// gdb-check:$2 = 20202\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print abc\n+// gdb-check:$3 = 30303\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/multiple-functions-equal-var-names.rs"}, {"sha": "362a8a93dd19b8a4e770beceabb42282502b8483", "filename": "src/test/debuginfo/multiple-functions.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print a\n-// check:$1 = 10101\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print b\n-// check:$2 = 20202\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print c\n-// check:$3 = 30303\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print a\n+// gdb-check:$1 = 10101\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print b\n+// gdb-check:$2 = 20202\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print c\n+// gdb-check:$3 = 30303\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/multiple-functions.rs"}, {"sha": "f967ced38ec11518beb3b60e8d9a36b35bf2b535", "filename": "src/test/debuginfo/name-shadowing-and-scope-nesting.rs", "status": "renamed", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,50 +11,50 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = false\n-// debugger:print y\n-// check:$2 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 10\n-// debugger:print y\n-// check:$4 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = 10.5\n-// debugger:print y\n-// check:$6 = 20\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = true\n-// debugger:print y\n-// check:$8 = 2220\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$9 = 203203.5\n-// debugger:print y\n-// check:$10 = 2220\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$11 = 10.5\n-// debugger:print y\n-// check:$12 = 20\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = false\n+// gdb-command:print y\n+// gdb-check:$2 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 10\n+// gdb-command:print y\n+// gdb-check:$4 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = 10.5\n+// gdb-command:print y\n+// gdb-check:$6 = 20\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = true\n+// gdb-command:print y\n+// gdb-check:$8 = 2220\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$9 = 203203.5\n+// gdb-command:print y\n+// gdb-check:$10 = 2220\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$11 = 10.5\n+// gdb-command:print y\n+// gdb-check:$12 = 20\n+// gdb-command:continue\n \n fn main() {\n     let x = false;", "previous_filename": "src/test/debug-info/name-shadowing-and-scope-nesting.rs"}, {"sha": "67c7eb30da6ed7917b19860cdcb08716a2d189ce", "filename": "src/test/debuginfo/nil-enum.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,15 +11,15 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print first\n-// check:$1 = {<No data fields>}\n+// gdb-command:print first\n+// gdb-check:$1 = {<No data fields>}\n \n-// debugger:print second\n-// check:$2 = {<No data fields>}\n+// gdb-command:print second\n+// gdb-check:$2 = {<No data fields>}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/nil-enum.rs"}, {"sha": "b60c9c4a4b967b375b126dd76dbbe8c7e721ca2a", "filename": "src/test/debuginfo/option-like-enum.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,29 +11,29 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print some\n-// check:$1 = {0x12345678}\n+// gdb-command:print some\n+// gdb-check:$1 = {0x12345678}\n \n-// debugger:print none\n-// check:$2 = {0x0}\n+// gdb-command:print none\n+// gdb-check:$2 = {0x0}\n \n-// debugger:print full\n-// check:$3 = {454545, 0x87654321, 9988}\n+// gdb-command:print full\n+// gdb-check:$3 = {454545, 0x87654321, 9988}\n \n-// debugger:print empty->discr\n-// check:$4 = (int *) 0x0\n+// gdb-command:print empty->discr\n+// gdb-check:$4 = (int *) 0x0\n \n-// debugger:print droid\n-// check:$5 = {id = 675675, range = 10000001, internals = 0x43218765}\n+// gdb-command:print droid\n+// gdb-check:$5 = {id = 675675, range = 10000001, internals = 0x43218765}\n \n-// debugger:print void_droid->internals\n-// check:$6 = (int *) 0x0\n+// gdb-command:print void_droid->internals\n+// gdb-check:$6 = (int *) 0x0\n \n-// debugger:continue\n+// gdb-command:continue\n \n #![feature(struct_variant)]\n ", "previous_filename": "src/test/debug-info/option-like-enum.rs"}, {"sha": "29087b18d5a96be140fb0507a896bcf5f3aabfca", "filename": "src/test/debuginfo/packed-struct-with-destructor.rs", "status": "renamed", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,35 +12,35 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print packed\n-// check:$1 = {x = 123, y = 234, z = 345}\n+// gdb-command:print packed\n+// gdb-check:$1 = {x = 123, y = 234, z = 345}\n \n-// debugger:print packedInPacked\n-// check:$2 = {a = 1111, b = {x = 2222, y = 3333, z = 4444}, c = 5555, d = {x = 6666, y = 7777, z = 8888}}\n+// gdb-command:print packedInPacked\n+// gdb-check:$2 = {a = 1111, b = {x = 2222, y = 3333, z = 4444}, c = 5555, d = {x = 6666, y = 7777, z = 8888}}\n \n-// debugger:print packedInUnpacked\n-// check:$3 = {a = -1111, b = {x = -2222, y = -3333, z = -4444}, c = -5555, d = {x = -6666, y = -7777, z = -8888}}\n+// gdb-command:print packedInUnpacked\n+// gdb-check:$3 = {a = -1111, b = {x = -2222, y = -3333, z = -4444}, c = -5555, d = {x = -6666, y = -7777, z = -8888}}\n \n-// debugger:print unpackedInPacked\n-// check:$4 = {a = 987, b = {x = 876, y = 765, z = 654}, c = {x = 543, y = 432, z = 321}, d = 210}\n+// gdb-command:print unpackedInPacked\n+// gdb-check:$4 = {a = 987, b = {x = 876, y = 765, z = 654}, c = {x = 543, y = 432, z = 321}, d = 210}\n \n \n-// debugger:print packedInPackedWithDrop\n-// check:$5 = {a = 11, b = {x = 22, y = 33, z = 44}, c = 55, d = {x = 66, y = 77, z = 88}}\n+// gdb-command:print packedInPackedWithDrop\n+// gdb-check:$5 = {a = 11, b = {x = 22, y = 33, z = 44}, c = 55, d = {x = 66, y = 77, z = 88}}\n \n-// debugger:print packedInUnpackedWithDrop\n-// check:$6 = {a = -11, b = {x = -22, y = -33, z = -44}, c = -55, d = {x = -66, y = -77, z = -88}}\n+// gdb-command:print packedInUnpackedWithDrop\n+// gdb-check:$6 = {a = -11, b = {x = -22, y = -33, z = -44}, c = -55, d = {x = -66, y = -77, z = -88}}\n \n-// debugger:print unpackedInPackedWithDrop\n-// check:$7 = {a = 98, b = {x = 87, y = 76, z = 65}, c = {x = 54, y = 43, z = 32}, d = 21}\n+// gdb-command:print unpackedInPackedWithDrop\n+// gdb-check:$7 = {a = 98, b = {x = 87, y = 76, z = 65}, c = {x = 54, y = 43, z = 32}, d = 21}\n \n-// debugger:print deeplyNested\n-// check:$8 = {a = {a = 1, b = {x = 2, y = 3, z = 4}, c = 5, d = {x = 6, y = 7, z = 8}}, b = {a = 9, b = {x = 10, y = 11, z = 12}, c = {x = 13, y = 14, z = 15}, d = 16}, c = {a = 17, b = {x = 18, y = 19, z = 20}, c = 21, d = {x = 22, y = 23, z = 24}}, d = {a = 25, b = {x = 26, y = 27, z = 28}, c = 29, d = {x = 30, y = 31, z = 32}}, e = {a = 33, b = {x = 34, y = 35, z = 36}, c = {x = 37, y = 38, z = 39}, d = 40}, f = {a = 41, b = {x = 42, y = 43, z = 44}, c = 45, d = {x = 46, y = 47, z = 48}}}\n+// gdb-command:print deeplyNested\n+// gdb-check:$8 = {a = {a = 1, b = {x = 2, y = 3, z = 4}, c = 5, d = {x = 6, y = 7, z = 8}}, b = {a = 9, b = {x = 10, y = 11, z = 12}, c = {x = 13, y = 14, z = 15}, d = 16}, c = {a = 17, b = {x = 18, y = 19, z = 20}, c = 21, d = {x = 22, y = 23, z = 24}}, d = {a = 25, b = {x = 26, y = 27, z = 28}, c = 29, d = {x = 30, y = 31, z = 32}}, e = {a = 33, b = {x = 34, y = 35, z = 36}, c = {x = 37, y = 38, z = 39}, d = 40}, f = {a = 41, b = {x = 42, y = 43, z = 44}, c = 45, d = {x = 46, y = 47, z = 48}}}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/packed-struct-with-destructor.rs"}, {"sha": "bc8156c73853c62f0087c1e81ede353d88729edb", "filename": "src/test/debuginfo/packed-struct.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,28 +12,28 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print packed\n-// check:$1 = {x = 123, y = 234, z = 345}\n+// gdb-command:print packed\n+// gdb-check:$1 = {x = 123, y = 234, z = 345}\n \n-// debugger:print packedInPacked\n-// check:$2 = {a = 1111, b = {x = 2222, y = 3333, z = 4444}, c = 5555, d = {x = 6666, y = 7777, z = 8888}}\n+// gdb-command:print packedInPacked\n+// gdb-check:$2 = {a = 1111, b = {x = 2222, y = 3333, z = 4444}, c = 5555, d = {x = 6666, y = 7777, z = 8888}}\n \n-// debugger:print packedInUnpacked\n-// check:$3 = {a = -1111, b = {x = -2222, y = -3333, z = -4444}, c = -5555, d = {x = -6666, y = -7777, z = -8888}}\n+// gdb-command:print packedInUnpacked\n+// gdb-check:$3 = {a = -1111, b = {x = -2222, y = -3333, z = -4444}, c = -5555, d = {x = -6666, y = -7777, z = -8888}}\n \n-// debugger:print unpackedInPacked\n-// check:$4 = {a = 987, b = {x = 876, y = 765, z = 654, w = 543}, c = {x = 432, y = 321, z = 210, w = 109}, d = -98}\n+// gdb-command:print unpackedInPacked\n+// gdb-check:$4 = {a = 987, b = {x = 876, y = 765, z = 654, w = 543}, c = {x = 432, y = 321, z = 210, w = 109}, d = -98}\n \n-// debugger:print sizeof(packed)\n-// check:$5 = 14\n+// gdb-command:print sizeof(packed)\n+// gdb-check:$5 = 14\n \n-// debugger:print sizeof(packedInPacked)\n-// check:$6 = 40\n+// gdb-command:print sizeof(packedInPacked)\n+// gdb-check:$6 = 40\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/packed-struct.rs"}, {"sha": "68b6764a5a1501d1e54dd5da2a874f4316450d5a", "filename": "src/test/debuginfo/recursive-enum.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Frecursive-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Frecursive-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frecursive-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,7 +11,7 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:run\n+// gdb-command:run\n \n // Test whether compiling a recursive enum definition crashes debug info generation. The test case\n // is taken from issue #11083.", "previous_filename": "src/test/debug-info/recursive-enum.rs"}, {"sha": "8c2edbea0d477c718d20a641f911607ea7ce57d6", "filename": "src/test/debuginfo/recursive-struct.rs", "status": "renamed", "additions": 84, "deletions": 84, "changes": 168, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -13,94 +13,94 @@\n #![feature(managed_boxes)]\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print stack_unique.value\n-// check:$1 = 0\n-// debugger:print stack_unique.next.val->value\n-// check:$2 = 1\n-\n-// debugger:print unique_unique->value\n-// check:$3 = 2\n-// debugger:print unique_unique->next.val->value\n-// check:$4 = 3\n-\n-// debugger:print box_unique->val.value\n-// check:$5 = 4\n-// debugger:print box_unique->val.next.val->value\n-// check:$6 = 5\n-\n-// debugger:print vec_unique[0].value\n-// check:$7 = 6.5\n-// debugger:print vec_unique[0].next.val->value\n-// check:$8 = 7.5\n-\n-// debugger:print borrowed_unique->value\n-// check:$9 = 8.5\n-// debugger:print borrowed_unique->next.val->value\n-// check:$10 = 9.5\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print stack_unique.value\n+// gdb-check:$1 = 0\n+// gdb-command:print stack_unique.next.val->value\n+// gdb-check:$2 = 1\n+\n+// gdb-command:print unique_unique->value\n+// gdb-check:$3 = 2\n+// gdb-command:print unique_unique->next.val->value\n+// gdb-check:$4 = 3\n+\n+// gdb-command:print box_unique->val.value\n+// gdb-check:$5 = 4\n+// gdb-command:print box_unique->val.next.val->value\n+// gdb-check:$6 = 5\n+\n+// gdb-command:print vec_unique[0].value\n+// gdb-check:$7 = 6.5\n+// gdb-command:print vec_unique[0].next.val->value\n+// gdb-check:$8 = 7.5\n+\n+// gdb-command:print borrowed_unique->value\n+// gdb-check:$9 = 8.5\n+// gdb-command:print borrowed_unique->next.val->value\n+// gdb-check:$10 = 9.5\n \n // MANAGED\n-// debugger:print stack_managed.value\n-// check:$11 = 10\n-// debugger:print stack_managed.next.val->val.value\n-// check:$12 = 11\n-\n-// debugger:print unique_managed->value\n-// check:$13 = 12\n-// debugger:print unique_managed->next.val->val.value\n-// check:$14 = 13\n-\n-// debugger:print box_managed->val.value\n-// check:$15 = 14\n-// debugger:print box_managed->val.next.val->val.value\n-// check:$16 = 15\n-\n-// debugger:print vec_managed[0].value\n-// check:$17 = 16.5\n-// debugger:print vec_managed[0].next.val->val.value\n-// check:$18 = 17.5\n-\n-// debugger:print borrowed_managed->value\n-// check:$19 = 18.5\n-// debugger:print borrowed_managed->next.val->val.value\n-// check:$20 = 19.5\n+// gdb-command:print stack_managed.value\n+// gdb-check:$11 = 10\n+// gdb-command:print stack_managed.next.val->val.value\n+// gdb-check:$12 = 11\n+\n+// gdb-command:print unique_managed->value\n+// gdb-check:$13 = 12\n+// gdb-command:print unique_managed->next.val->val.value\n+// gdb-check:$14 = 13\n+\n+// gdb-command:print box_managed->val.value\n+// gdb-check:$15 = 14\n+// gdb-command:print box_managed->val.next.val->val.value\n+// gdb-check:$16 = 15\n+\n+// gdb-command:print vec_managed[0].value\n+// gdb-check:$17 = 16.5\n+// gdb-command:print vec_managed[0].next.val->val.value\n+// gdb-check:$18 = 17.5\n+\n+// gdb-command:print borrowed_managed->value\n+// gdb-check:$19 = 18.5\n+// gdb-command:print borrowed_managed->next.val->val.value\n+// gdb-check:$20 = 19.5\n \n // LONG CYCLE\n-// debugger:print long_cycle1.value\n-// check:$21 = 20\n-// debugger:print long_cycle1.next->value\n-// check:$22 = 21\n-// debugger:print long_cycle1.next->next->value\n-// check:$23 = 22\n-// debugger:print long_cycle1.next->next->next->value\n-// check:$24 = 23\n-\n-// debugger:print long_cycle2.value\n-// check:$25 = 24\n-// debugger:print long_cycle2.next->value\n-// check:$26 = 25\n-// debugger:print long_cycle2.next->next->value\n-// check:$27 = 26\n-\n-// debugger:print long_cycle3.value\n-// check:$28 = 27\n-// debugger:print long_cycle3.next->value\n-// check:$29 = 28\n-\n-// debugger:print long_cycle4.value\n-// check:$30 = 29.5\n-\n-// debugger:print (*****long_cycle_w_anonymous_types).value\n-// check:$31 = 30\n-\n-// debugger:print (*****((*****long_cycle_w_anonymous_types).next.val)).value\n-// check:$32 = 31\n-\n-// debugger:continue\n+// gdb-command:print long_cycle1.value\n+// gdb-check:$21 = 20\n+// gdb-command:print long_cycle1.next->value\n+// gdb-check:$22 = 21\n+// gdb-command:print long_cycle1.next->next->value\n+// gdb-check:$23 = 22\n+// gdb-command:print long_cycle1.next->next->next->value\n+// gdb-check:$24 = 23\n+\n+// gdb-command:print long_cycle2.value\n+// gdb-check:$25 = 24\n+// gdb-command:print long_cycle2.next->value\n+// gdb-check:$26 = 25\n+// gdb-command:print long_cycle2.next->next->value\n+// gdb-check:$27 = 26\n+\n+// gdb-command:print long_cycle3.value\n+// gdb-check:$28 = 27\n+// gdb-command:print long_cycle3.next->value\n+// gdb-check:$29 = 28\n+\n+// gdb-command:print long_cycle4.value\n+// gdb-check:$30 = 29.5\n+\n+// gdb-command:print (*****long_cycle_w_anonymous_types).value\n+// gdb-check:$31 = 30\n+\n+// gdb-command:print (*****((*****long_cycle_w_anonymous_types).next.val)).value\n+// gdb-check:$32 = 31\n+\n+// gdb-command:continue\n \n #![allow(unused_variable)]\n #![feature(struct_variant)]", "previous_filename": "src/test/debug-info/recursive-struct.rs"}, {"sha": "45cbcf094f4f5ea10b2148089c29c92369600644", "filename": "src/test/debuginfo/self-in-default-method.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {x = 100}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {x = 100}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {x = 100}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {x = 100}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {x = 200}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {x = 200}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {x = 200}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {x = 200}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10\n+// gdb-command:continue\n \n struct Struct {\n     x: int", "previous_filename": "src/test/debug-info/self-in-default-method.rs"}, {"sha": "8ab3fd44203aaf5a3bf75e61b0ba3b1264cbefda", "filename": "src/test/debuginfo/self-in-generic-default-method.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,58 +11,58 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STACK BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$1 = {x = 987}\n-// debugger:print arg1\n-// check:$2 = -1\n-// debugger:print/d arg2\n-// check:$3 = -2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$1 = {x = 987}\n+// gdb-command:print arg1\n+// gdb-check:$2 = -1\n+// gdb-command:print/d arg2\n+// gdb-check:$3 = -2\n+// gdb-command:continue\n \n // STACK BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$4 = {x = 987}\n-// debugger:print arg1\n-// check:$5 = -3\n-// debugger:print arg2\n-// check:$6 = -4\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$4 = {x = 987}\n+// gdb-command:print arg1\n+// gdb-check:$5 = -3\n+// gdb-command:print arg2\n+// gdb-check:$6 = -4\n+// gdb-command:continue\n \n // OWNED BY REF\n-// debugger:finish\n-// debugger:print *self\n-// check:$7 = {x = 879}\n-// debugger:print arg1\n-// check:$8 = -5\n-// debugger:print arg2\n-// check:$9 = -6\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$7 = {x = 879}\n+// gdb-command:print arg1\n+// gdb-check:$8 = -5\n+// gdb-command:print arg2\n+// gdb-check:$9 = -6\n+// gdb-command:continue\n \n // OWNED BY VAL\n-// debugger:finish\n-// debugger:print self\n-// check:$10 = {x = 879}\n-// debugger:print arg1\n-// check:$11 = -7\n-// debugger:print arg2\n-// check:$12 = -8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print self\n+// gdb-check:$10 = {x = 879}\n+// gdb-command:print arg1\n+// gdb-check:$11 = -7\n+// gdb-command:print arg2\n+// gdb-check:$12 = -8\n+// gdb-command:continue\n \n // OWNED MOVED\n-// debugger:finish\n-// debugger:print *self\n-// check:$13 = {x = 879}\n-// debugger:print arg1\n-// check:$14 = -9\n-// debugger:print arg2\n-// check:$15 = -10.5\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print *self\n+// gdb-check:$13 = {x = 879}\n+// gdb-command:print arg1\n+// gdb-check:$14 = -9\n+// gdb-command:print arg2\n+// gdb-check:$15 = -10.5\n+// gdb-command:continue\n \n struct Struct {\n     x: int", "previous_filename": "src/test/debug-info/self-in-generic-default-method.rs"}, {"sha": "129263c0f7649d69649fb55dc8ee33f46c1271e8", "filename": "src/test/debuginfo/shadowed-argument.rs", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,29 +11,29 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = false\n-// debugger:print y\n-// check:$2 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 10\n-// debugger:print y\n-// check:$4 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = 10.5\n-// debugger:print y\n-// check:$6 = 20\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = false\n+// gdb-command:print y\n+// gdb-check:$2 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 10\n+// gdb-command:print y\n+// gdb-check:$4 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = 10.5\n+// gdb-command:print y\n+// gdb-check:$6 = 20\n+// gdb-command:continue\n \n fn a_function(x: bool, y: bool) {\n     zzz();", "previous_filename": "src/test/debug-info/shadowed-argument.rs"}, {"sha": "825ecb9c0ca7f74aac57932f011c857fb2988309", "filename": "src/test/debuginfo/shadowed-variable.rs", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,29 +11,29 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = false\n-// debugger:print y\n-// check:$2 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 10\n-// debugger:print y\n-// check:$4 = true\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = 10.5\n-// debugger:print y\n-// check:$6 = 20\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = false\n+// gdb-command:print y\n+// gdb-check:$2 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 10\n+// gdb-command:print y\n+// gdb-check:$4 = true\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = 10.5\n+// gdb-command:print y\n+// gdb-check:$6 = 20\n+// gdb-command:continue\n \n fn main() {\n     let x = false;", "previous_filename": "src/test/debug-info/shadowed-variable.rs"}, {"sha": "ff9618aa1f1eb08a6fc363e96ba133e525b4a73a", "filename": "src/test/debuginfo/simd.rs", "status": "renamed", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimd.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,34 +11,34 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n-// debugger:finish\n-// debugger:print/d i8x16\n-// check:$1 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}\n-// debugger:print/d i16x8\n-// check:$2 = {16, 17, 18, 19, 20, 21, 22, 23}\n-// debugger:print/d i32x4\n-// check:$3 = {24, 25, 26, 27}\n-// debugger:print/d i64x2\n-// check:$4 = {28, 29}\n+// gdb-command:finish\n+// gdb-command:print/d i8x16\n+// gdb-check:$1 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}\n+// gdb-command:print/d i16x8\n+// gdb-check:$2 = {16, 17, 18, 19, 20, 21, 22, 23}\n+// gdb-command:print/d i32x4\n+// gdb-check:$3 = {24, 25, 26, 27}\n+// gdb-command:print/d i64x2\n+// gdb-check:$4 = {28, 29}\n \n-// debugger:print/d u8x16\n-// check:$5 = {30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45}\n-// debugger:print/d u16x8\n-// check:$6 = {46, 47, 48, 49, 50, 51, 52, 53}\n-// debugger:print/d u32x4\n-// check:$7 = {54, 55, 56, 57}\n-// debugger:print/d u64x2\n-// check:$8 = {58, 59}\n+// gdb-command:print/d u8x16\n+// gdb-check:$5 = {30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45}\n+// gdb-command:print/d u16x8\n+// gdb-check:$6 = {46, 47, 48, 49, 50, 51, 52, 53}\n+// gdb-command:print/d u32x4\n+// gdb-check:$7 = {54, 55, 56, 57}\n+// gdb-command:print/d u64x2\n+// gdb-check:$8 = {58, 59}\n \n-// debugger:print f32x4\n-// check:$9 = {60.5, 61.5, 62.5, 63.5}\n-// debugger:print f64x2\n-// check:$10 = {64.5, 65.5}\n+// gdb-command:print f32x4\n+// gdb-check:$9 = {60.5, 61.5, 62.5, 63.5}\n+// gdb-command:print f64x2\n+// gdb-check:$10 = {64.5, 65.5}\n \n-// debugger:continue\n+// gdb-command:continue\n \n #![allow(experimental)]\n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/simd.rs"}, {"sha": "171e3eae659f1c192026b006eb1092db2b05260c", "filename": "src/test/debuginfo/simple-lexical-scope.rs", "status": "renamed", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,43 +11,43 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$1 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$2 = false\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$3 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$4 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$5 = 10.5\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$6 = 10\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print x\n-// check:$7 = false\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$1 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$2 = false\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$3 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$4 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$5 = 10.5\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$6 = 10\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print x\n+// gdb-check:$7 = false\n+// gdb-command:continue\n \n \n fn main() {", "previous_filename": "src/test/debug-info/simple-lexical-scope.rs"}, {"sha": "c1f0e2c1f9ea78925f22d2d7a92e8534c6c8bb16", "filename": "src/test/debuginfo/simple-struct.rs", "status": "renamed", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,68 +12,68 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n \n-// debugger:print 'simple-struct::NO_PADDING_16'\n-// check:$1 = {x = 1000, y = -1001}\n+// gdb-command:print 'simple-struct::NO_PADDING_16'\n+// gdb-check:$1 = {x = 1000, y = -1001}\n \n-// debugger:print 'simple-struct::NO_PADDING_32'\n-// check:$2 = {x = 1, y = 2, z = 3}\n+// gdb-command:print 'simple-struct::NO_PADDING_32'\n+// gdb-check:$2 = {x = 1, y = 2, z = 3}\n \n-// debugger:print 'simple-struct::NO_PADDING_64'\n-// check:$3 = {x = 4, y = 5, z = 6}\n+// gdb-command:print 'simple-struct::NO_PADDING_64'\n+// gdb-check:$3 = {x = 4, y = 5, z = 6}\n \n-// debugger:print 'simple-struct::NO_PADDING_163264'\n-// check:$4 = {a = 7, b = 8, c = 9, d = 10}\n+// gdb-command:print 'simple-struct::NO_PADDING_163264'\n+// gdb-check:$4 = {a = 7, b = 8, c = 9, d = 10}\n \n-// debugger:print 'simple-struct::INTERNAL_PADDING'\n-// check:$5 = {x = 11, y = 12}\n+// gdb-command:print 'simple-struct::INTERNAL_PADDING'\n+// gdb-check:$5 = {x = 11, y = 12}\n \n-// debugger:print 'simple-struct::PADDING_AT_END'\n-// check:$6 = {x = 13, y = 14}\n+// gdb-command:print 'simple-struct::PADDING_AT_END'\n+// gdb-check:$6 = {x = 13, y = 14}\n \n-// debugger:run\n-// debugger:finish\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print no_padding16\n-// check:$7 = {x = 10000, y = -10001}\n+// gdb-command:print no_padding16\n+// gdb-check:$7 = {x = 10000, y = -10001}\n \n-// debugger:print no_padding32\n-// check:$8 = {x = -10002, y = -10003.5, z = 10004}\n+// gdb-command:print no_padding32\n+// gdb-check:$8 = {x = -10002, y = -10003.5, z = 10004}\n \n-// debugger:print no_padding64\n-// check:$9 = {x = -10005.5, y = 10006, z = 10007}\n+// gdb-command:print no_padding64\n+// gdb-check:$9 = {x = -10005.5, y = 10006, z = 10007}\n \n-// debugger:print no_padding163264\n-// check:$10 = {a = -10008, b = 10009, c = 10010, d = 10011}\n+// gdb-command:print no_padding163264\n+// gdb-check:$10 = {a = -10008, b = 10009, c = 10010, d = 10011}\n \n-// debugger:print internal_padding\n-// check:$11 = {x = 10012, y = -10013}\n+// gdb-command:print internal_padding\n+// gdb-check:$11 = {x = 10012, y = -10013}\n \n-// debugger:print padding_at_end\n-// check:$12 = {x = -10014, y = 10015}\n+// gdb-command:print padding_at_end\n+// gdb-check:$12 = {x = -10014, y = 10015}\n \n-// debugger:print 'simple-struct::NO_PADDING_16'\n-// check:$13 = {x = 100, y = -101}\n+// gdb-command:print 'simple-struct::NO_PADDING_16'\n+// gdb-check:$13 = {x = 100, y = -101}\n \n-// debugger:print 'simple-struct::NO_PADDING_32'\n-// check:$14 = {x = -15, y = -16, z = 17}\n+// gdb-command:print 'simple-struct::NO_PADDING_32'\n+// gdb-check:$14 = {x = -15, y = -16, z = 17}\n \n-// debugger:print 'simple-struct::NO_PADDING_64'\n-// check:$15 = {x = -18, y = 19, z = 20}\n+// gdb-command:print 'simple-struct::NO_PADDING_64'\n+// gdb-check:$15 = {x = -18, y = 19, z = 20}\n \n-// debugger:print 'simple-struct::NO_PADDING_163264'\n-// check:$16 = {a = -21, b = 22, c = 23, d = 24}\n+// gdb-command:print 'simple-struct::NO_PADDING_163264'\n+// gdb-check:$16 = {a = -21, b = 22, c = 23, d = 24}\n \n-// debugger:print 'simple-struct::INTERNAL_PADDING'\n-// check:$17 = {x = 25, y = -26}\n+// gdb-command:print 'simple-struct::INTERNAL_PADDING'\n+// gdb-check:$17 = {x = 25, y = -26}\n \n-// debugger:print 'simple-struct::PADDING_AT_END'\n-// check:$18 = {x = -27, y = 28}\n+// gdb-command:print 'simple-struct::PADDING_AT_END'\n+// gdb-check:$18 = {x = -27, y = 28}\n \n-// debugger:print inheriting\n-// check:$19 = {a = 10019, b = -10020, x = -10016, y = -10017.5, z = 10018}\n+// gdb-command:print inheriting\n+// gdb-check:$19 = {a = 10019, b = -10020, x = -10016, y = -10017.5, z = 10018}\n \n \n #![feature(struct_inherit)];", "previous_filename": "src/test/debug-info/simple-struct.rs"}, {"sha": "9486ab2474eff07d81611bd69d097b564ee69f38", "filename": "src/test/debuginfo/simple-tuple.rs", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,113 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-win32: FIXME #13256\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+\n+// gdb-command:print/d 'simple-tuple::NO_PADDING_8'\n+// gdb-check:$1 = {-50, 50}\n+// gdb-command:print 'simple-tuple::NO_PADDING_16'\n+// gdb-check:$2 = {-1, 2, 3}\n+// gdb-command:print 'simple-tuple::NO_PADDING_32'\n+// gdb-check:$3 = {4, 5, 6}\n+// gdb-command:print 'simple-tuple::NO_PADDING_64'\n+// gdb-check:$4 = {7, 8, 9}\n+\n+// gdb-command:print 'simple-tuple::INTERNAL_PADDING_1'\n+// gdb-check:$5 = {10, 11}\n+// gdb-command:print 'simple-tuple::INTERNAL_PADDING_2'\n+// gdb-check:$6 = {12, 13, 14, 15}\n+\n+// gdb-command:print 'simple-tuple::PADDING_AT_END'\n+// gdb-check:$7 = {16, 17}\n+\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print/d noPadding8\n+// gdb-check:$8 = {-100, 100}\n+// gdb-command:print noPadding16\n+// gdb-check:$9 = {0, 1, 2}\n+// gdb-command:print noPadding32\n+// gdb-check:$10 = {3, 4.5, 5}\n+// gdb-command:print noPadding64\n+// gdb-check:$11 = {6, 7.5, 8}\n+\n+// gdb-command:print internalPadding1\n+// gdb-check:$12 = {9, 10}\n+// gdb-command:print internalPadding2\n+// gdb-check:$13 = {11, 12, 13, 14}\n+\n+// gdb-command:print paddingAtEnd\n+// gdb-check:$14 = {15, 16}\n+\n+// gdb-command:print/d 'simple-tuple::NO_PADDING_8'\n+// gdb-check:$15 = {-127, 127}\n+// gdb-command:print 'simple-tuple::NO_PADDING_16'\n+// gdb-check:$16 = {-10, 10, 9}\n+// gdb-command:print 'simple-tuple::NO_PADDING_32'\n+// gdb-check:$17 = {14, 15, 16}\n+// gdb-command:print 'simple-tuple::NO_PADDING_64'\n+// gdb-check:$18 = {17, 18, 19}\n+\n+// gdb-command:print 'simple-tuple::INTERNAL_PADDING_1'\n+// gdb-check:$19 = {110, 111}\n+// gdb-command:print 'simple-tuple::INTERNAL_PADDING_2'\n+// gdb-check:$20 = {112, 113, 114, 115}\n+\n+// gdb-command:print 'simple-tuple::PADDING_AT_END'\n+// gdb-check:$21 = {116, 117}\n+\n+#![allow(unused_variable)]\n+#![allow(dead_code)]\n+\n+static mut NO_PADDING_8: (i8, u8) = (-50, 50);\n+static mut NO_PADDING_16: (i16, i16, u16) = (-1, 2, 3);\n+\n+static mut NO_PADDING_32: (i32, f32, u32) = (4, 5.0, 6);\n+static mut NO_PADDING_64: (i64, f64, u64) = (7, 8.0, 9);\n+\n+static mut INTERNAL_PADDING_1: (i16, i32) = (10, 11);\n+static mut INTERNAL_PADDING_2: (i16, i32, u32, u64) = (12, 13, 14, 15);\n+\n+static mut PADDING_AT_END: (i32, i16) = (16, 17);\n+\n+fn main() {\n+    let noPadding8: (i8, u8) = (-100, 100);\n+    let noPadding16: (i16, i16, u16) = (0, 1, 2);\n+    let noPadding32: (i32, f32, u32) = (3, 4.5, 5);\n+    let noPadding64: (i64, f64, u64) = (6, 7.5, 8);\n+\n+    let internalPadding1: (i16, i32) = (9, 10);\n+    let internalPadding2: (i16, i32, u32, u64) = (11, 12, 13, 14);\n+\n+    let paddingAtEnd: (i32, i16) = (15, 16);\n+\n+    unsafe {\n+        NO_PADDING_8 = (-127, 127);\n+        NO_PADDING_16 = (-10, 10, 9);\n+\n+        NO_PADDING_32 = (14, 15.0, 16);\n+        NO_PADDING_64 = (17, 18.0, 19);\n+\n+        INTERNAL_PADDING_1 = (110, 111);\n+        INTERNAL_PADDING_2 = (112, 113, 114, 115);\n+\n+        PADDING_AT_END = (116, 117);\n+    }\n+\n+    zzz();\n+}\n+\n+fn zzz() {()}"}, {"sha": "d7d962c07d6ded530ebc93efdbffab04b27338b0", "filename": "src/test/debuginfo/static-method-on-struct-and-enum.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,26 +11,26 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n \n // STRUCT\n-// debugger:finish\n-// debugger:print arg1\n-// check:$1 = 1\n-// debugger:print arg2\n-// check:$2 = 2\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$1 = 1\n+// gdb-command:print arg2\n+// gdb-check:$2 = 2\n+// gdb-command:continue\n \n // ENUM\n-// debugger:finish\n-// debugger:print arg1\n-// check:$3 = -3\n-// debugger:print arg2\n-// check:$4 = 4.5\n-// debugger:print arg3\n-// check:$5 = 5\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$3 = -3\n+// gdb-command:print arg2\n+// gdb-check:$4 = 4.5\n+// gdb-command:print arg3\n+// gdb-check:$5 = 5\n+// gdb-command:continue\n \n #![feature(struct_variant)]\n ", "previous_filename": "src/test/debug-info/static-method-on-struct-and-enum.rs"}, {"sha": "ee971d71cfcf15b078a310bd4ac1ffe7b72ab416", "filename": "src/test/debuginfo/struct-in-enum.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,19 +12,19 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print union on\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print union on\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print case1\n-// check:$1 = {{Case1, 0, {x = 2088533116, y = 2088533116, z = 31868}}, {Case1, 0, 8970181431921507452, 31868}}\n+// gdb-command:print case1\n+// gdb-check:$1 = {{Case1, 0, {x = 2088533116, y = 2088533116, z = 31868}}, {Case1, 0, 8970181431921507452, 31868}}\n \n-// debugger:print case2\n-// check:$2 = {{Case2, 0, {x = 286331153, y = 286331153, z = 4369}}, {Case2, 0, 1229782938247303441, 4369}}\n+// gdb-command:print case2\n+// gdb-check:$2 = {{Case2, 0, {x = 286331153, y = 286331153, z = 4369}}, {Case2, 0, 1229782938247303441, 4369}}\n \n-// debugger:print univariant\n-// check:$3 = {{x = 123, y = 456, z = 789}}\n+// gdb-command:print univariant\n+// gdb-check:$3 = {{x = 123, y = 456, z = 789}}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/struct-in-enum.rs"}, {"sha": "e4c3f471880dfd78122731308aec5fbf2a5951df", "filename": "src/test/debuginfo/struct-in-struct.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,19 +11,19 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print three_simple_structs\n-// check:$1 = {x = {x = 1}, y = {x = 2}, z = {x = 3}}\n+// gdb-command:print three_simple_structs\n+// gdb-check:$1 = {x = {x = 1}, y = {x = 2}, z = {x = 3}}\n \n-// debugger:print internal_padding_parent\n-// check:$2 = {x = {x = 4, y = 5}, y = {x = 6, y = 7}, z = {x = 8, y = 9}}\n+// gdb-command:print internal_padding_parent\n+// gdb-check:$2 = {x = {x = 4, y = 5}, y = {x = 6, y = 7}, z = {x = 8, y = 9}}\n \n-// debugger:print padding_at_end_parent\n-// check:$3 = {x = {x = 10, y = 11}, y = {x = 12, y = 13}, z = {x = 14, y = 15}}\n+// gdb-command:print padding_at_end_parent\n+// gdb-check:$3 = {x = {x = 10, y = 11}, y = {x = 12, y = 13}, z = {x = 14, y = 15}}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/struct-in-struct.rs"}, {"sha": "1a51db1a005bddd5f3eee6597d360b7fbe3fd7b0", "filename": "src/test/debuginfo/struct-style-enum.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,22 +12,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print union on\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print union on\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print case1\n-// check:$1 = {{Case1, a = 0, b = 31868, c = 31868, d = 31868, e = 31868}, {Case1, a = 0, b = 2088533116, c = 2088533116}, {Case1, a = 0, b = 8970181431921507452}}\n+// gdb-command:print case1\n+// gdb-check:$1 = {{Case1, a = 0, b = 31868, c = 31868, d = 31868, e = 31868}, {Case1, a = 0, b = 2088533116, c = 2088533116}, {Case1, a = 0, b = 8970181431921507452}}\n \n-// debugger:print case2\n-// check:$2 = {{Case2, a = 0, b = 4369, c = 4369, d = 4369, e = 4369}, {Case2, a = 0, b = 286331153, c = 286331153}, {Case2, a = 0, b = 1229782938247303441}}\n+// gdb-command:print case2\n+// gdb-check:$2 = {{Case2, a = 0, b = 4369, c = 4369, d = 4369, e = 4369}, {Case2, a = 0, b = 286331153, c = 286331153}, {Case2, a = 0, b = 1229782938247303441}}\n \n-// debugger:print case3\n-// check:$3 = {{Case3, a = 0, b = 22873, c = 22873, d = 22873, e = 22873}, {Case3, a = 0, b = 1499027801, c = 1499027801}, {Case3, a = 0, b = 6438275382588823897}}\n+// gdb-command:print case3\n+// gdb-check:$3 = {{Case3, a = 0, b = 22873, c = 22873, d = 22873, e = 22873}, {Case3, a = 0, b = 1499027801, c = 1499027801}, {Case3, a = 0, b = 6438275382588823897}}\n \n-// debugger:print univariant\n-// check:$4 = {a = -1}\n+// gdb-command:print univariant\n+// gdb-check:$4 = {a = -1}\n \n #![allow(unused_variable)]\n #![feature(struct_variant)]", "previous_filename": "src/test/debug-info/struct-style-enum.rs"}, {"sha": "16fbfc49d08ed625b8abe4be6fcb1b96683a4087", "filename": "src/test/debuginfo/struct-with-destructor.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,20 +11,20 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print simple\n-// check:$1 = {x = 10, y = 20}\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print simple\n+// gdb-check:$1 = {x = 10, y = 20}\n \n-// debugger:print noDestructor\n-// check:$2 = {a = {x = 10, y = 20}, guard = -1}\n+// gdb-command:print noDestructor\n+// gdb-check:$2 = {a = {x = 10, y = 20}, guard = -1}\n \n-// debugger:print withDestructor\n-// check:$3 = {a = {x = 10, y = 20}, guard = -1}\n+// gdb-command:print withDestructor\n+// gdb-check:$3 = {a = {x = 10, y = 20}, guard = -1}\n \n-// debugger:print nested\n-// check:$4 = {a = {a = {x = 7890, y = 9870}}}\n+// gdb-command:print nested\n+// gdb-check:$4 = {a = {a = {x = 7890, y = 9870}}}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/struct-with-destructor.rs"}, {"sha": "ba055272a3fa78f94978f2d0818bb777616cdab8", "filename": "src/test/debuginfo/text-to-include-1.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftext-to-include-1.txt", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftext-to-include-1.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftext-to-include-1.txt?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "previous_filename": "src/test/debug-info/text-to-include-1.txt"}, {"sha": "a2caa5e71416900b9ab3d42e6acace5422a34adf", "filename": "src/test/debuginfo/text-to-include-2.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftext-to-include-2.txt", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftext-to-include-2.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftext-to-include-2.txt?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "previous_filename": "src/test/debug-info/text-to-include-2.txt"}, {"sha": "9933e6c1b0b7d98e17b79e0cc0e650e87574571c", "filename": "src/test/debuginfo/text-to-include-3.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftext-to-include-3.txt", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftext-to-include-3.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftext-to-include-3.txt?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "previous_filename": "src/test/debug-info/text-to-include-3.txt"}, {"sha": "e91cd2f02d4888b5e800de6bb2d1a5f894010d5c", "filename": "src/test/debuginfo/trait-generic-static-default-method.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftrait-generic-static-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftrait-generic-static-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftrait-generic-static-default-method.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // except according to those terms.\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-\n-// debugger:finish\n-// debugger:print arg1\n-// check:$1 = 1000\n-// debugger:print arg2\n-// check:$2 = 0.5\n-// debugger:continue\n-\n-// debugger:finish\n-// debugger:print arg1\n-// check:$3 = 2000\n-// debugger:print *arg2\n-// check:$4 = {1, 2, 3}\n-// debugger:continue\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$1 = 1000\n+// gdb-command:print arg2\n+// gdb-check:$2 = 0.5\n+// gdb-command:continue\n+\n+// gdb-command:finish\n+// gdb-command:print arg1\n+// gdb-check:$3 = 2000\n+// gdb-command:print *arg2\n+// gdb-check:$4 = {1, 2, 3}\n+// gdb-command:continue\n \n \n struct Struct {", "previous_filename": "src/test/debug-info/trait-generic-static-default-method.rs"}, {"sha": "e58ed4cea29a78c5999154c22326d3ab24f02e70", "filename": "src/test/debuginfo/trait-pointers.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftrait-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftrait-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftrait-pointers.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,7 +11,7 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:run\n+// gdb-command:run\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/trait-pointers.rs"}, {"sha": "b38d3547f8c205eec44635d7dc2b9af36b4095eb", "filename": "src/test/debuginfo/tuple-in-struct.rs", "status": "renamed", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,35 +11,35 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print no_padding1\n-// check:$1 = {x = {0, 1}, y = 2, z = {3, 4, 5}}\n-// debugger:print no_padding2\n-// check:$2 = {x = {6, 7}, y = {{8, 9}, 10}}\n-\n-// debugger:print tuple_internal_padding\n-// check:$3 = {x = {11, 12}, y = {13, 14}}\n-// debugger:print struct_internal_padding\n-// check:$4 = {x = {15, 16}, y = {17, 18}}\n-// debugger:print both_internally_padded\n-// check:$5 = {x = {19, 20, 21}, y = {22, 23}}\n-\n-// debugger:print single_tuple\n-// check:$6 = {x = {24, 25, 26}}\n-\n-// debugger:print tuple_padded_at_end\n-// check:$7 = {x = {27, 28}, y = {29, 30}}\n-// debugger:print struct_padded_at_end\n-// check:$8 = {x = {31, 32}, y = {33, 34}}\n-// debugger:print both_padded_at_end\n-// check:$9 = {x = {35, 36, 37}, y = {38, 39}}\n-\n-// debugger:print mixed_padding\n-// check:$10 = {x = {{40, 41, 42}, {43, 44}}, y = {45, 46, 47, 48}}\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print no_padding1\n+// gdb-check:$1 = {x = {0, 1}, y = 2, z = {3, 4, 5}}\n+// gdb-command:print no_padding2\n+// gdb-check:$2 = {x = {6, 7}, y = {{8, 9}, 10}}\n+\n+// gdb-command:print tuple_internal_padding\n+// gdb-check:$3 = {x = {11, 12}, y = {13, 14}}\n+// gdb-command:print struct_internal_padding\n+// gdb-check:$4 = {x = {15, 16}, y = {17, 18}}\n+// gdb-command:print both_internally_padded\n+// gdb-check:$5 = {x = {19, 20, 21}, y = {22, 23}}\n+\n+// gdb-command:print single_tuple\n+// gdb-check:$6 = {x = {24, 25, 26}}\n+\n+// gdb-command:print tuple_padded_at_end\n+// gdb-check:$7 = {x = {27, 28}, y = {29, 30}}\n+// gdb-command:print struct_padded_at_end\n+// gdb-check:$8 = {x = {31, 32}, y = {33, 34}}\n+// gdb-command:print both_padded_at_end\n+// gdb-check:$9 = {x = {35, 36, 37}, y = {38, 39}}\n+\n+// gdb-command:print mixed_padding\n+// gdb-check:$10 = {x = {{40, 41, 42}, {43, 44}}, y = {45, 46, 47, 48}}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/tuple-in-struct.rs"}, {"sha": "3cc8b4e6486d6e7553c1801e06fa5483f335b1d5", "filename": "src/test/debuginfo/tuple-in-tuple.rs", "status": "renamed", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,27 +11,27 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print no_padding1\n-// check:$1 = {{0, 1}, 2, 3}\n-// debugger:print no_padding2\n-// check:$2 = {4, {5, 6}, 7}\n-// debugger:print no_padding3\n-// check:$3 = {8, 9, {10, 11}}\n-\n-// debugger:print internal_padding1\n-// check:$4 = {12, {13, 14}}\n-// debugger:print internal_padding2\n-// check:$5 = {15, {16, 17}}\n-\n-// debugger:print padding_at_end1\n-// check:$6 = {18, {19, 20}}\n-// debugger:print padding_at_end2\n-// check:$7 = {{21, 22}, 23}\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print no_padding1\n+// gdb-check:$1 = {{0, 1}, 2, 3}\n+// gdb-command:print no_padding2\n+// gdb-check:$2 = {4, {5, 6}, 7}\n+// gdb-command:print no_padding3\n+// gdb-check:$3 = {8, 9, {10, 11}}\n+\n+// gdb-command:print internal_padding1\n+// gdb-check:$4 = {12, {13, 14}}\n+// gdb-command:print internal_padding2\n+// gdb-check:$5 = {15, {16, 17}}\n+\n+// gdb-command:print padding_at_end1\n+// gdb-check:$6 = {18, {19, 20}}\n+// gdb-command:print padding_at_end2\n+// gdb-check:$7 = {{21, 22}, 23}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/tuple-in-tuple.rs"}, {"sha": "cea063820b86754f7b11b07ee8a08919fb27d891", "filename": "src/test/debuginfo/tuple-struct.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,28 +11,28 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print no_padding16\n-// check:$1 = {10000, -10001}\n+// gdb-command:print no_padding16\n+// gdb-check:$1 = {10000, -10001}\n \n-// debugger:print no_padding32\n-// check:$2 = {-10002, -10003.5, 10004}\n+// gdb-command:print no_padding32\n+// gdb-check:$2 = {-10002, -10003.5, 10004}\n \n-// debugger:print no_padding64\n-// check:$3 = {-10005.5, 10006, 10007}\n+// gdb-command:print no_padding64\n+// gdb-check:$3 = {-10005.5, 10006, 10007}\n \n-// debugger:print no_padding163264\n-// check:$4 = {-10008, 10009, 10010, 10011}\n+// gdb-command:print no_padding163264\n+// gdb-check:$4 = {-10008, 10009, 10010, 10011}\n \n-// debugger:print internal_padding\n-// check:$5 = {10012, -10013}\n+// gdb-command:print internal_padding\n+// gdb-check:$5 = {10012, -10013}\n \n-// debugger:print padding_at_end\n-// check:$6 = {-10014, 10015}\n+// gdb-command:print padding_at_end\n+// gdb-check:$6 = {-10014, 10015}\n \n \n // This test case mainly makes sure that no field names are generated for tuple structs (as opposed", "previous_filename": "src/test/debug-info/tuple-struct.rs"}, {"sha": "dc922b450051e49d7e2354a9419395c8960bf053", "filename": "src/test/debuginfo/tuple-style-enum.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,22 +12,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print union on\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:set print union on\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print case1\n-// check:$1 = {{Case1, 0, 31868, 31868, 31868, 31868}, {Case1, 0, 2088533116, 2088533116}, {Case1, 0, 8970181431921507452}}\n+// gdb-command:print case1\n+// gdb-check:$1 = {{Case1, 0, 31868, 31868, 31868, 31868}, {Case1, 0, 2088533116, 2088533116}, {Case1, 0, 8970181431921507452}}\n \n-// debugger:print case2\n-// check:$2 = {{Case2, 0, 4369, 4369, 4369, 4369}, {Case2, 0, 286331153, 286331153}, {Case2, 0, 1229782938247303441}}\n+// gdb-command:print case2\n+// gdb-check:$2 = {{Case2, 0, 4369, 4369, 4369, 4369}, {Case2, 0, 286331153, 286331153}, {Case2, 0, 1229782938247303441}}\n \n-// debugger:print case3\n-// check:$3 = {{Case3, 0, 22873, 22873, 22873, 22873}, {Case3, 0, 1499027801, 1499027801}, {Case3, 0, 6438275382588823897}}\n+// gdb-command:print case3\n+// gdb-check:$3 = {{Case3, 0, 22873, 22873, 22873, 22873}, {Case3, 0, 1499027801, 1499027801}, {Case3, 0, 6438275382588823897}}\n \n-// debugger:print univariant\n-// check:$4 = {-1}\n+// gdb-command:print univariant\n+// gdb-check:$4 = {-1}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/tuple-style-enum.rs"}, {"sha": "f85ec6a8da3a223901dd7b302627ccbe5af8fbc5", "filename": "src/test/debuginfo/unique-enum.rs", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funique-enum.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,18 +11,18 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print *the_a\n-// check:$1 = {{TheA, x = 0, y = 8970181431921507452}, {TheA, 0, 2088533116, 2088533116}}\n+// gdb-command:print *the_a\n+// gdb-check:$1 = {{TheA, x = 0, y = 8970181431921507452}, {TheA, 0, 2088533116, 2088533116}}\n \n-// debugger:print *the_b\n-// check:$2 = {{TheB, x = 0, y = 1229782938247303441}, {TheB, 0, 286331153, 286331153}}\n+// gdb-command:print *the_b\n+// gdb-check:$2 = {{TheB, x = 0, y = 1229782938247303441}, {TheB, 0, 286331153, 286331153}}\n \n-// debugger:print *univariant\n-// check:$3 = {123234}\n+// gdb-command:print *univariant\n+// gdb-check:$3 = {123234}\n \n #![allow(unused_variable)]\n #![feature(struct_variant)]", "previous_filename": "src/test/debug-info/unique-enum.rs"}, {"sha": "787c1cdea800e5cab47272b3c53f3dd5a0427b05", "filename": "src/test/debuginfo/var-captured-in-nested-closure.rs", "status": "renamed", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,42 +11,42 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n \n-// debugger:print variable\n-// check:$1 = 1\n-// debugger:print constant\n-// check:$2 = 2\n-// debugger:print a_struct\n-// check:$3 = {a = -3, b = 4.5, c = 5}\n-// debugger:print *struct_ref\n-// check:$4 = {a = -3, b = 4.5, c = 5}\n-// debugger:print *owned\n-// check:$5 = 6\n-// debugger:print managed->val\n-// check:$6 = 7\n-// debugger:print closure_local\n-// check:$7 = 8\n-// debugger:continue\n+// gdb-command:print variable\n+// gdb-check:$1 = 1\n+// gdb-command:print constant\n+// gdb-check:$2 = 2\n+// gdb-command:print a_struct\n+// gdb-check:$3 = {a = -3, b = 4.5, c = 5}\n+// gdb-command:print *struct_ref\n+// gdb-check:$4 = {a = -3, b = 4.5, c = 5}\n+// gdb-command:print *owned\n+// gdb-check:$5 = 6\n+// gdb-command:print managed->val\n+// gdb-check:$6 = 7\n+// gdb-command:print closure_local\n+// gdb-check:$7 = 8\n+// gdb-command:continue\n \n-// debugger:finish\n-// debugger:print variable\n-// check:$8 = 1\n-// debugger:print constant\n-// check:$9 = 2\n-// debugger:print a_struct\n-// check:$10 = {a = -3, b = 4.5, c = 5}\n-// debugger:print *struct_ref\n-// check:$11 = {a = -3, b = 4.5, c = 5}\n-// debugger:print *owned\n-// check:$12 = 6\n-// debugger:print managed->val\n-// check:$13 = 7\n-// debugger:print closure_local\n-// check:$14 = 8\n-// debugger:continue\n+// gdb-command:finish\n+// gdb-command:print variable\n+// gdb-check:$8 = 1\n+// gdb-command:print constant\n+// gdb-check:$9 = 2\n+// gdb-command:print a_struct\n+// gdb-check:$10 = {a = -3, b = 4.5, c = 5}\n+// gdb-command:print *struct_ref\n+// gdb-check:$11 = {a = -3, b = 4.5, c = 5}\n+// gdb-command:print *owned\n+// gdb-check:$12 = 6\n+// gdb-command:print managed->val\n+// gdb-check:$13 = 7\n+// gdb-command:print closure_local\n+// gdb-check:$14 = 8\n+// gdb-command:continue\n \n #![feature(managed_boxes)]\n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/var-captured-in-nested-closure.rs"}, {"sha": "03525a3a034dc1b1f0c397a31538f310f3c70232", "filename": "src/test/debuginfo/var-captured-in-sendable-closure.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,16 +11,16 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print constant\n-// check:$1 = 1\n-// debugger:print a_struct\n-// check:$2 = {a = -2, b = 3.5, c = 4}\n-// debugger:print *owned\n-// check:$3 = 5\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print constant\n+// gdb-check:$1 = 1\n+// gdb-command:print a_struct\n+// gdb-check:$2 = {a = -2, b = 3.5, c = 4}\n+// gdb-command:print *owned\n+// gdb-check:$3 = 5\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/var-captured-in-sendable-closure.rs"}, {"sha": "fc8093304db1435a0be2cd491afaeb4e049311fe", "filename": "src/test/debuginfo/var-captured-in-stack-closure.rs", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -11,22 +11,22 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-\n-// debugger:print variable\n-// check:$1 = 1\n-// debugger:print constant\n-// check:$2 = 2\n-// debugger:print a_struct\n-// check:$3 = {a = -3, b = 4.5, c = 5}\n-// debugger:print *struct_ref\n-// check:$4 = {a = -3, b = 4.5, c = 5}\n-// debugger:print *owned\n-// check:$5 = 6\n-// debugger:print managed->val\n-// check:$6 = 7\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+\n+// gdb-command:print variable\n+// gdb-check:$1 = 1\n+// gdb-command:print constant\n+// gdb-check:$2 = 2\n+// gdb-command:print a_struct\n+// gdb-check:$3 = {a = -3, b = 4.5, c = 5}\n+// gdb-command:print *struct_ref\n+// gdb-check:$4 = {a = -3, b = 4.5, c = 5}\n+// gdb-command:print *owned\n+// gdb-check:$5 = 6\n+// gdb-command:print managed->val\n+// gdb-check:$6 = 7\n \n #![feature(managed_boxes)]\n #![allow(unused_variable)]", "previous_filename": "src/test/debug-info/var-captured-in-stack-closure.rs"}, {"sha": "783b198395339b2fc916defa8abf50f538ad8eb7", "filename": "src/test/debuginfo/vec-slices.rs", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -0,0 +1,87 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-win32: FIXME #13256\n+// ignore-android: FIXME(#10381)\n+\n+// compile-flags:-g\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print empty.length\n+// gdb-check:$1 = 0\n+\n+// gdb-command:print singleton.length\n+// gdb-check:$2 = 1\n+// gdb-command:print *((int64_t[1]*)(singleton.data_ptr))\n+// gdb-check:$3 = {1}\n+\n+// gdb-command:print multiple.length\n+// gdb-check:$4 = 4\n+// gdb-command:print *((int64_t[4]*)(multiple.data_ptr))\n+// gdb-check:$5 = {2, 3, 4, 5}\n+\n+// gdb-command:print slice_of_slice.length\n+// gdb-check:$6 = 2\n+// gdb-command:print *((int64_t[2]*)(slice_of_slice.data_ptr))\n+// gdb-check:$7 = {3, 4}\n+\n+// gdb-command:print padded_tuple.length\n+// gdb-check:$8 = 2\n+// gdb-command:print padded_tuple.data_ptr[0]\n+// gdb-check:$9 = {6, 7}\n+// gdb-command:print padded_tuple.data_ptr[1]\n+// gdb-check:$10 = {8, 9}\n+\n+// gdb-command:print padded_struct.length\n+// gdb-check:$11 = 2\n+// gdb-command:print padded_struct.data_ptr[0]\n+// gdb-check:$12 = {x = 10, y = 11, z = 12}\n+// gdb-command:print padded_struct.data_ptr[1]\n+// gdb-check:$13 = {x = 13, y = 14, z = 15}\n+\n+// gdb-command:print 'vec-slices::MUT_VECT_SLICE'.length\n+// gdb-check:$14 = 2\n+// gdb-command:print *((int64_t[2]*)('vec-slices::MUT_VECT_SLICE'.data_ptr))\n+// gdb-check:$15 = {64, 65}\n+\n+#![allow(unused_variable)]\n+\n+struct AStruct {\n+    x: i16,\n+    y: i32,\n+    z: i16\n+}\n+\n+static VECT_SLICE: &'static [i64] = &[64, 65];\n+static mut MUT_VECT_SLICE: &'static [i64] = &[32];\n+\n+fn main() {\n+    let empty: &[i64] = &[];\n+    let singleton: &[i64] = &[1];\n+    let multiple: &[i64] = &[2, 3, 4, 5];\n+    let slice_of_slice = multiple.slice(1,3);\n+\n+    let padded_tuple: &[(i32, i16)] = &[(6, 7), (8, 9)];\n+\n+    let padded_struct: &[AStruct] = &[\n+        AStruct { x: 10, y: 11, z: 12 },\n+        AStruct { x: 13, y: 14, z: 15 }\n+    ];\n+\n+    unsafe {\n+        MUT_VECT_SLICE = VECT_SLICE;\n+    }\n+\n+    zzz();\n+}\n+\n+fn zzz() {()}"}, {"sha": "11f317469a27c5a072345bc7024c1047c8f4bb10", "filename": "src/test/debuginfo/vec.rs", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828ffab627350c6250786e0e4960bc3d3aa0b761/src%2Ftest%2Fdebuginfo%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec.rs?ref=828ffab627350c6250786e0e4960bc3d3aa0b761", "patch": "@@ -12,14 +12,14 @@\n // ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n-// debugger:set print pretty off\n-// debugger:rbreak zzz\n-// debugger:run\n-// debugger:finish\n-// debugger:print a\n-// check:$1 = {1, 2, 3}\n-// debugger:print vec::VECT\n-// check:$2 = {4, 5, 6}\n+// gdb-command:set print pretty off\n+// gdb-command:rbreak zzz\n+// gdb-command:run\n+// gdb-command:finish\n+// gdb-command:print a\n+// gdb-check:$1 = {1, 2, 3}\n+// gdb-command:print vec::VECT\n+// gdb-check:$2 = {4, 5, 6}\n \n #![allow(unused_variable)]\n ", "previous_filename": "src/test/debug-info/vec.rs"}]}