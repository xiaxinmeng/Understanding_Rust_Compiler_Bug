{"sha": "ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMzIwODRkZGJlMWEyOGMzZTU4YWI4MGFjZGI2MmJiNTIwZWFmNmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T11:27:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T16:26:51Z"}, "message": "use mutable reference", "tree": {"sha": "aae903805a2f8e8f84bc00e51190a0e8eb60d9dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aae903805a2f8e8f84bc00e51190a0e8eb60d9dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f", "html_url": "https://github.com/rust-lang/rust/commit/ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9159b1eef891d35c5153b6e4027a1dd7d158e61b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9159b1eef891d35c5153b6e4027a1dd7d158e61b", "html_url": "https://github.com/rust-lang/rust/commit/9159b1eef891d35c5153b6e4027a1dd7d158e61b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "954cd6a1557ae67b1b0ec522b13e628d8d59aa01", "filename": "tests/run-pass/vec.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f/tests%2Frun-pass%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f/tests%2Frun-pass%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvec.rs?ref=ab32084ddbe1a28c3e58ab80acdb62bb520eaf6f", "patch": "@@ -74,15 +74,15 @@ fn vec_reallocate() -> Vec<u8> {\n fn vec_push_ptr_stable() {\n     let mut v = Vec::with_capacity(10);\n     v.push(0);\n-    let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    let v0 = unsafe { &mut *(&mut v[0] as *mut _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n     v.push(1);\n     let _val = *v0;\n }\n \n fn vec_extend_ptr_stable() {\n     let mut v = Vec::with_capacity(10);\n     v.push(0);\n-    let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    let v0 = unsafe { &mut *(&mut v[0] as *mut _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n     // `slice::Iter` (with `T: Copy`) specialization\n     v.extend(&[1]);\n     let _val = *v0;\n@@ -99,7 +99,7 @@ fn vec_extend_ptr_stable() {\n \n fn vec_truncate_ptr_stable() {\n     let mut v = vec![0; 10];\n-    let v0 = unsafe { &*(&v[0] as *const _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n+    let v0 = unsafe { &mut *(&mut v[0] as *mut _) }; // laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n     v.truncate(5);\n     let _val = *v0;\n }"}]}