{"sha": "c1373b267ba8be93eee9626ea1ac876fa36dac67", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMzczYjI2N2JhOGJlOTNlZWU5NjI2ZWExYWM4NzZmYTM2ZGFjNjc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-05-26T12:15:55Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-05-26T12:15:55Z"}, "message": "Format trait aliases with where clauses", "tree": {"sha": "2315ae996bf97bc681a910216356d3e107da69a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2315ae996bf97bc681a910216356d3e107da69a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1373b267ba8be93eee9626ea1ac876fa36dac67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1373b267ba8be93eee9626ea1ac876fa36dac67", "html_url": "https://github.com/rust-lang/rust/commit/c1373b267ba8be93eee9626ea1ac876fa36dac67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1373b267ba8be93eee9626ea1ac876fa36dac67/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c2ad37e141a62f184f49dc7a6f12840b67b826", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c2ad37e141a62f184f49dc7a6f12840b67b826", "html_url": "https://github.com/rust-lang/rust/commit/95c2ad37e141a62f184f49dc7a6f12840b67b826"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "7640fa32d22ebc4440844bca42c2ca0e0d0ccf96", "filename": "src/items.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/c1373b267ba8be93eee9626ea1ac876fa36dac67/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1373b267ba8be93eee9626ea1ac876fa36dac67/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=c1373b267ba8be93eee9626ea1ac876fa36dac67", "patch": "@@ -1154,6 +1154,45 @@ pub(crate) fn format_trait(\n     }\n }\n \n+pub(crate) struct TraitAliasBounds<'a> {\n+    generic_bounds: &'a ast::GenericBounds,\n+    generics: &'a ast::Generics,\n+}\n+\n+impl<'a> Rewrite for TraitAliasBounds<'a> {\n+    fn rewrite(&self, context: &RewriteContext<'_>, shape: Shape) -> Option<String> {\n+        let generic_bounds_str = self.generic_bounds.rewrite(context, shape)?;\n+\n+        let mut option = WhereClauseOption::new(true, WhereClauseSpace::None);\n+        option.allow_single_line();\n+\n+        let where_str = rewrite_where_clause(\n+            context,\n+            &self.generics.where_clause,\n+            context.config.brace_style(),\n+            shape,\n+            Density::Compressed,\n+            \";\",\n+            None,\n+            self.generics.where_clause.span.lo(),\n+            option,\n+        )?;\n+\n+        let fits_single_line = !generic_bounds_str.contains('\\n')\n+            && !where_str.contains('\\n')\n+            && generic_bounds_str.len() + where_str.len() + 1 <= shape.width;\n+        let space = if generic_bounds_str.is_empty() || where_str.is_empty() {\n+            Cow::from(\"\")\n+        } else if fits_single_line {\n+            Cow::from(\" \")\n+        } else {\n+            shape.indent.to_string_with_newline(&context.config)\n+        };\n+\n+        Some(format!(\"{}{}{}\", generic_bounds_str, space, where_str))\n+    }\n+}\n+\n pub(crate) fn format_trait_alias(\n     context: &RewriteContext<'_>,\n     ident: ast::Ident,\n@@ -1169,7 +1208,11 @@ pub(crate) fn format_trait_alias(\n     let vis_str = format_visibility(context, vis);\n     let lhs = format!(\"{}trait {} =\", vis_str, generics_str);\n     // 1 = \";\"\n-    rewrite_assign_rhs(context, lhs, generic_bounds, shape.sub_width(1)?).map(|s| s + \";\")\n+    let trait_alias_bounds = TraitAliasBounds {\n+        generics,\n+        generic_bounds,\n+    };\n+    rewrite_assign_rhs(context, lhs, &trait_alias_bounds, shape.sub_width(1)?).map(|s| s + \";\")\n }\n \n fn format_unit_struct("}]}