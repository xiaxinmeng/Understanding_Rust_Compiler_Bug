{"sha": "a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "node_id": "C_kwDOAAsO6NoAKGEwZWJiMmVkOGI1OWU4ZWVjOWFkZDZhY2RhMDY3M2RjZjQ2ODU5NmY", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-07-21T07:45:49Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-07-21T07:45:49Z"}, "message": "change `map_bound(|_| x` to `rebind(x`", "tree": {"sha": "c276945c88caf20b706483b2192e6835e6fc8f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c276945c88caf20b706483b2192e6835e6fc8f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "html_url": "https://github.com/rust-lang/rust/commit/a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8464396a19da9cbba15a815eaa7448a2fc3b5fa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8464396a19da9cbba15a815eaa7448a2fc3b5fa8", "html_url": "https://github.com/rust-lang/rust/commit/8464396a19da9cbba15a815eaa7448a2fc3b5fa8"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "12da0b8b3d82fa3d178c88dc1c2a3e70e29c4fa6", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "patch": "@@ -580,7 +580,7 @@ impl<'tcx> Predicate<'tcx> {\n         if let PredicateKind::Trait(TraitPredicate { trait_ref, constness, polarity }) = self.kind().skip_binder()\n             && constness != BoundConstness::NotConst\n         {\n-            self = tcx.mk_predicate(self.kind().map_bound(|_| PredicateKind::Trait(TraitPredicate {\n+            self = tcx.mk_predicate(self.kind().rebind(PredicateKind::Trait(TraitPredicate {\n                 trait_ref,\n                 constness: BoundConstness::NotConst,\n                 polarity,"}, {"sha": "8148e2b78719610b6d5cf4a1d901218b3dacb5e0", "filename": "compiler/rustc_trait_selection/src/traits/relationships.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Frelationships.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Frelationships.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Frelationships.rs?ref=a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "patch": "@@ -31,14 +31,14 @@ pub(crate) fn update<'tcx, T>(\n             obligation\n                 .predicate\n                 .kind()\n-                .map_bound(|_| {\n+                .rebind(\n                     // (*) binder moved here\n                     ty::PredicateKind::Trait(ty::TraitPredicate {\n                         trait_ref,\n                         constness: tpred.constness,\n                         polarity: tpred.polarity,\n                     })\n-                })\n+                )\n                 .to_predicate(infcx.tcx),\n         );\n         // Don't report overflow errors. Otherwise equivalent to may_hold."}, {"sha": "2005fc24ed09b1cbdd35dd315cf325849ef13358", "filename": "compiler/rustc_typeck/src/check/closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0ebb2ed8b59e8eec9add6acda0673dcf468596f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs?ref=a0ebb2ed8b59e8eec9add6acda0673dcf468596f", "patch": "@@ -182,9 +182,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         ty::PredicateKind::Projection(proj_predicate) => self\n                             .deduce_sig_from_projection(\n                                 Some(span.0),\n-                                pred.0.kind().rebind(\n-                                    pred.map_bound(|_| proj_predicate).subst(self.tcx, substs),\n-                                ),\n+                                pred.0\n+                                    .kind()\n+                                    .rebind(pred.rebind(proj_predicate).subst(self.tcx, substs)),\n                             ),\n                         _ => None,\n                     });"}]}