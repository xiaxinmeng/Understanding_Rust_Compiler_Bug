{"sha": "fad1423d1ef12d3036433432d838723ff783a53d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZDE0MjNkMWVmMTJkMzAzNjQzMzQzMmQ4Mzg3MjNmZjc4M2E1M2Q=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-26T10:53:15Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-22T17:27:07Z"}, "message": "Adjust metadata for new fields and enum variants. Yawn.", "tree": {"sha": "eafd1de753c4ea5f149eec0cac98522b9af88ccc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eafd1de753c4ea5f149eec0cac98522b9af88ccc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fad1423d1ef12d3036433432d838723ff783a53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fad1423d1ef12d3036433432d838723ff783a53d", "html_url": "https://github.com/rust-lang/rust/commit/fad1423d1ef12d3036433432d838723ff783a53d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fad1423d1ef12d3036433432d838723ff783a53d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a43b352f71a55ded2b3b17680d59674ee9e4e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a43b352f71a55ded2b3b17680d59674ee9e4e79", "html_url": "https://github.com/rust-lang/rust/commit/2a43b352f71a55ded2b3b17680d59674ee9e4e79"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "5b78265a4151815a9a2f81b769bf9b2f6be7ad4a", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fad1423d1ef12d3036433432d838723ff783a53d/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fad1423d1ef12d3036433432d838723ff783a53d/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=fad1423d1ef12d3036433432d838723ff783a53d", "patch": "@@ -453,7 +453,11 @@ fn parse_ty<'a, 'tcx>(st: &mut PState<'a, 'tcx>, conv: conv_did) -> Ty<'tcx> {\n         return ty::mk_closure(st.tcx, parse_closure_ty(st, |x,y| conv(x,y)));\n       }\n       'F' => {\n-        return ty::mk_bare_fn(st.tcx, parse_bare_fn_ty(st, |x,y| conv(x,y)));\n+          let def_id = parse_def(st, NominalType, |x,y| conv(x,y));\n+          return ty::mk_bare_fn(st.tcx, Some(def_id), parse_bare_fn_ty(st, |x,y| conv(x,y)));\n+      }\n+      'G' => {\n+          return ty::mk_bare_fn(st.tcx, None, parse_bare_fn_ty(st, |x,y| conv(x,y)));\n       }\n       '#' => {\n         let pos = parse_hex(st);"}, {"sha": "7fa23620af4b63e0abbd2b6be7b35738bed31b33", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fad1423d1ef12d3036433432d838723ff783a53d/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fad1423d1ef12d3036433432d838723ff783a53d/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=fad1423d1ef12d3036433432d838723ff783a53d", "patch": "@@ -123,8 +123,13 @@ pub fn enc_ty<'a, 'tcx>(w: &mut SeekableMemWriter, cx: &ctxt<'a, 'tcx>, t: Ty<'t\n             mywrite!(w, \"f\");\n             enc_closure_ty(w, cx, &**f);\n         }\n-        ty::ty_bare_fn(ref f) => {\n+        ty::ty_bare_fn(Some(def_id), ref f) => {\n             mywrite!(w, \"F\");\n+            mywrite!(w, \"{}|\", (cx.ds)(def_id));\n+            enc_bare_fn_ty(w, cx, f);\n+        }\n+        ty::ty_bare_fn(None, ref f) => {\n+            mywrite!(w, \"G\");\n             enc_bare_fn_ty(w, cx, f);\n         }\n         ty::ty_infer(_) => {"}, {"sha": "592b509c0b4c125dc7bdf5f7e19bd30c2f81014b", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fad1423d1ef12d3036433432d838723ff783a53d/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fad1423d1ef12d3036433432d838723ff783a53d/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=fad1423d1ef12d3036433432d838723ff783a53d", "patch": "@@ -1007,14 +1007,21 @@ impl<'a, 'tcx> rbml_writer_helpers<'tcx> for Encoder<'a> {\n \n         self.emit_enum(\"AutoAdjustment\", |this| {\n             match *adj {\n-                ty::AdjustAddEnv(store) => {\n-                    this.emit_enum_variant(\"AutoAddEnv\", 0, 1, |this| {\n-                        this.emit_enum_variant_arg(0, |this| store.encode(this))\n+                ty::AdjustAddEnv(def_id, store) => {\n+                    this.emit_enum_variant(\"AdjustAddEnv\", 0, 2, |this| {\n+                        this.emit_enum_variant_arg(0, |this| def_id.encode(this));\n+                        this.emit_enum_variant_arg(1, |this| store.encode(this))\n+                    })\n+                }\n+\n+                ty::AdjustReifyFnPointer(def_id) => {\n+                    this.emit_enum_variant(\"AdjustReifyFnPointer\", 1, 2, |this| {\n+                        this.emit_enum_variant_arg(0, |this| def_id.encode(this))\n                     })\n                 }\n \n                 ty::AdjustDerefRef(ref auto_deref_ref) => {\n-                    this.emit_enum_variant(\"AutoDerefRef\", 1, 1, |this| {\n+                    this.emit_enum_variant(\"AdjustDerefRef\", 2, 2, |this| {\n                         this.emit_enum_variant_arg(0,\n                             |this| Ok(this.emit_auto_deref_ref(ecx, auto_deref_ref)))\n                     })\n@@ -1648,12 +1655,20 @@ impl<'a, 'tcx> rbml_decoder_decoder_helpers<'tcx> for reader::Decoder<'a> {\n             this.read_enum_variant(&variants, |this, i| {\n                 Ok(match i {\n                     0 => {\n+                        let def_id: ast::DefId =\n+                            this.read_def_id(dcx);\n                         let store: ty::TraitStore =\n                             this.read_enum_variant_arg(0, |this| Decodable::decode(this)).unwrap();\n \n-                        ty::AdjustAddEnv(store.tr(dcx))\n+                        ty::AdjustAddEnv(def_id, store.tr(dcx))\n                     }\n                     1 => {\n+                        let def_id: ast::DefId =\n+                            this.read_def_id(dcx);\n+\n+                        ty::AdjustReifyFnPointer(def_id)\n+                    }\n+                    2 => {\n                         let auto_deref_ref: ty::AutoDerefRef =\n                             this.read_enum_variant_arg(0,\n                                 |this| Ok(this.read_auto_deref_ref(dcx))).unwrap();"}]}