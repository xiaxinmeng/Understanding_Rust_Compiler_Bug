{"sha": "b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "node_id": "C_kwDOAAsO6NoAKGI2NmUxMjM2NzdhYzVmNGZhZGUzYmI2Nzg4OGY4ZjQwZjBiYjI4ZWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-10T14:01:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-10T14:01:43Z"}, "message": "Rollup merge of #105234 - JakobDegen:unneeded-field, r=oli-obk\n\nRemove unneeded field from `SwitchTargets`\n\nThis had a fixme already. The only change in behavior is that the mir dumps now no longer contains labels for the types of the integers on the edges of a switchint:\n\nBefore:\n![image](https://user-images.githubusercontent.com/51179609/205467622-34401a68-dca6-43eb-915e-b9fda1988860.png)\n\nAfter:\n![image](https://user-images.githubusercontent.com/51179609/205467634-b5b2a259-9cb4-4843-845c-592c500f0f9c.png)\n\nI don't think that's a problem though. The information is still available to a user that really cares by checking the type of `_2`, so it honestly feels like a bit of an improvement to me.\n\nr? mir", "tree": {"sha": "623f393adada7b987da150cc2d4e97ab7c25132e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/623f393adada7b987da150cc2d4e97ab7c25132e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjlJFHCRBK7hj4Ov3rIwAAR+4IADwfclY8ZPu/ym+KJDpQRGYU\nwyXqQKYSFndy/5movsEplkI+r/Lf4169Fz3tiQlXuQSLpfOIv2zE7sQrxSlvFM6m\nVDZR5hKGBwB6czliHFe6jcXr1/U79jdXuuRdvKPelwd+SEayvlgcvcdM/cWK1d5Y\nXhP3YJr7FNYCKBkJHt/7rArb7DfsSmtU6l3NRGWGiBvsX3zyyyQl8hTrNEWTLByW\nRY8Jy2vobxBh/F9noBPCMcuvvjldlDOY+ITdONDvkYGlS1JsixMYWYXyOu5tsOn9\n3hphWgYM/0GFJMcefOF9t5AVgzB1mVmqTMwJXQJtuYnoJQVWxHqda3aUKWVgA7Y=\n=M62w\n-----END PGP SIGNATURE-----\n", "payload": "tree 623f393adada7b987da150cc2d4e97ab7c25132e\nparent 7e1857db1eb948353812a3d3a688e4a5cb58defa\nparent 9fb8da8f8ff1a0b2c237c691fee58b6348811b86\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670680903 +0100\ncommitter GitHub <noreply@github.com> 1670680903 +0100\n\nRollup merge of #105234 - JakobDegen:unneeded-field, r=oli-obk\n\nRemove unneeded field from `SwitchTargets`\n\nThis had a fixme already. The only change in behavior is that the mir dumps now no longer contains labels for the types of the integers on the edges of a switchint:\n\nBefore:\n![image](https://user-images.githubusercontent.com/51179609/205467622-34401a68-dca6-43eb-915e-b9fda1988860.png)\n\nAfter:\n![image](https://user-images.githubusercontent.com/51179609/205467634-b5b2a259-9cb4-4843-845c-592c500f0f9c.png)\n\nI don't think that's a problem though. The information is still available to a user that really cares by checking the type of `_2`, so it honestly feels like a bit of an improvement to me.\n\nr? mir\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "html_url": "https://github.com/rust-lang/rust/commit/b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e1857db1eb948353812a3d3a688e4a5cb58defa", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e1857db1eb948353812a3d3a688e4a5cb58defa", "html_url": "https://github.com/rust-lang/rust/commit/7e1857db1eb948353812a3d3a688e4a5cb58defa"}, {"sha": "9fb8da8f8ff1a0b2c237c691fee58b6348811b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb8da8f8ff1a0b2c237c691fee58b6348811b86", "html_url": "https://github.com/rust-lang/rust/commit/9fb8da8f8ff1a0b2c237c691fee58b6348811b86"}], "stats": {"total": 692, "additions": 304, "deletions": 388}, "files": [{"sha": "6fd9290058c36383e1a5c155de33f467701ee93d", "filename": "compiler/rustc_borrowck/src/invalidation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_borrowck%2Fsrc%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_borrowck%2Fsrc%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Finvalidation.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -106,7 +106,7 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n         self.check_activations(location);\n \n         match &terminator.kind {\n-            TerminatorKind::SwitchInt { discr, switch_ty: _, targets: _ } => {\n+            TerminatorKind::SwitchInt { discr, targets: _ } => {\n                 self.consume_operand(location, discr);\n             }\n             TerminatorKind::Drop { place: drop_place, target: _, unwind: _ } => {"}, {"sha": "5289de9b0abf2ffa3d0d2d142904b392070dc2d9", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -644,7 +644,7 @@ impl<'cx, 'tcx> rustc_mir_dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtx\n         self.check_activations(loc, span, flow_state);\n \n         match &term.kind {\n-            TerminatorKind::SwitchInt { discr, switch_ty: _, targets: _ } => {\n+            TerminatorKind::SwitchInt { discr, targets: _ } => {\n                 self.consume_operand(loc, (discr, span), flow_state);\n             }\n             TerminatorKind::Drop { place, target: _, unwind: _ } => {"}, {"sha": "814bc275019ca0109e4e3d265406630f2cf07398", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -1360,25 +1360,10 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                     );\n                 }\n             }\n-            TerminatorKind::SwitchInt { discr, switch_ty, .. } => {\n+            TerminatorKind::SwitchInt { discr, .. } => {\n                 self.check_operand(discr, term_location);\n \n-                let discr_ty = discr.ty(body, tcx);\n-                if let Err(terr) = self.sub_types(\n-                    discr_ty,\n-                    *switch_ty,\n-                    term_location.to_locations(),\n-                    ConstraintCategory::Assignment,\n-                ) {\n-                    span_mirbug!(\n-                        self,\n-                        term,\n-                        \"bad SwitchInt ({:?} on {:?}): {:?}\",\n-                        switch_ty,\n-                        discr_ty,\n-                        terr\n-                    );\n-                }\n+                let switch_ty = discr.ty(body, tcx);\n                 if !switch_ty.is_integral() && !switch_ty.is_char() && !switch_ty.is_bool() {\n                     span_mirbug!(self, term, \"bad SwitchInt discr ty {:?}\", switch_ty);\n                 }"}, {"sha": "06813d7ec953f558a44eec3eb059723167e45131", "filename": "compiler/rustc_codegen_cranelift/src/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -372,8 +372,10 @@ fn codegen_fn_body(fx: &mut FunctionCx<'_, '_, '_>, start_block: Block) {\n                 }\n             }\n \n-            TerminatorKind::SwitchInt { discr, switch_ty, targets } => {\n-                let discr = codegen_operand(fx, discr).load_scalar(fx);\n+            TerminatorKind::SwitchInt { discr, targets } => {\n+                let discr = codegen_operand(fx, discr);\n+                let switch_ty = discr.layout().ty;\n+                let discr = discr.load_scalar(fx);\n \n                 let use_bool_opt = switch_ty.kind() == fx.tcx.types.bool.kind()\n                     || (targets.iter().count() == 1 && targets.iter().next().unwrap().0 == 0);"}, {"sha": "f3f5ddb52d6a4a29117ee3ad4be87ccd99e4c763", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -307,12 +307,10 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         helper: TerminatorCodegenHelper<'tcx>,\n         bx: &mut Bx,\n         discr: &mir::Operand<'tcx>,\n-        switch_ty: Ty<'tcx>,\n         targets: &SwitchTargets,\n     ) {\n         let discr = self.codegen_operand(bx, &discr);\n-        // `switch_ty` is redundant, sanity-check that.\n-        assert_eq!(discr.layout.ty, switch_ty);\n+        let switch_ty = discr.layout.ty;\n         let mut target_iter = targets.iter();\n         if target_iter.len() == 1 {\n             // If there are two targets (one conditional, one fallback), emit `br` instead of\n@@ -1293,8 +1291,8 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 helper.funclet_br(self, bx, target, mergeable_succ())\n             }\n \n-            mir::TerminatorKind::SwitchInt { ref discr, switch_ty, ref targets } => {\n-                self.codegen_switchint_terminator(helper, bx, discr, switch_ty, targets);\n+            mir::TerminatorKind::SwitchInt { ref discr, ref targets } => {\n+                self.codegen_switchint_terminator(helper, bx, discr, targets);\n                 MergingSucc::False\n             }\n "}, {"sha": "0e7ffcdffc97aae54f0b020282f3b61aa9dfa701", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -29,10 +29,9 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n             Goto { target } => self.go_to_block(target),\n \n-            SwitchInt { ref discr, ref targets, switch_ty } => {\n+            SwitchInt { ref discr, ref targets } => {\n                 let discr = self.read_immediate(&self.eval_operand(discr, None)?)?;\n                 trace!(\"SwitchInt({:?})\", *discr);\n-                assert_eq!(discr.layout.ty, switch_ty);\n \n                 // Branch to the `otherwise` case by default, if no match is found.\n                 let mut target_block = targets.otherwise();"}, {"sha": "64318f5f54d5d061c255726f800e9251d631933b", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -686,17 +686,8 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n             TerminatorKind::Goto { target } => {\n                 self.check_edge(location, *target, EdgeKind::Normal);\n             }\n-            TerminatorKind::SwitchInt { targets, switch_ty, discr } => {\n-                let ty = discr.ty(&self.body.local_decls, self.tcx);\n-                if ty != *switch_ty {\n-                    self.fail(\n-                        location,\n-                        format!(\n-                            \"encountered `SwitchInt` terminator with type mismatch: {:?} != {:?}\",\n-                            ty, switch_ty,\n-                        ),\n-                    );\n-                }\n+            TerminatorKind::SwitchInt { targets, discr } => {\n+                let switch_ty = discr.ty(&self.body.local_decls, self.tcx);\n \n                 let target_width = self.tcx.sess.target.pointer_width;\n "}, {"sha": "99e59c770d754152140eaf8b6558fc370b6344dc", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -526,12 +526,6 @@ pub enum TerminatorKind<'tcx> {\n     SwitchInt {\n         /// The discriminant value being tested.\n         discr: Operand<'tcx>,\n-\n-        /// The type of value being tested.\n-        /// This is always the same as the type of `discr`.\n-        /// FIXME: remove this redundant information. Currently, it is relied on by pretty-printing.\n-        switch_ty: Ty<'tcx>,\n-\n         targets: SwitchTargets,\n     },\n "}, {"sha": "013a1bccd3bd1fd85af72a5a31db156e4e0c3416", "filename": "compiler/rustc_middle/src/mir/terminator.rs", "status": "modified", "additions": 10, "deletions": 33, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -1,6 +1,3 @@\n-use crate::mir;\n-use crate::mir::interpret::Scalar;\n-use crate::ty::{self, Ty, TyCtxt};\n use smallvec::{smallvec, SmallVec};\n \n use super::{BasicBlock, InlineAsmOperand, Operand, SourceInfo, TerminatorKind};\n@@ -131,17 +128,8 @@ impl<'tcx> Terminator<'tcx> {\n }\n \n impl<'tcx> TerminatorKind<'tcx> {\n-    pub fn if_(\n-        tcx: TyCtxt<'tcx>,\n-        cond: Operand<'tcx>,\n-        t: BasicBlock,\n-        f: BasicBlock,\n-    ) -> TerminatorKind<'tcx> {\n-        TerminatorKind::SwitchInt {\n-            discr: cond,\n-            switch_ty: tcx.types.bool,\n-            targets: SwitchTargets::static_if(0, f, t),\n-        }\n+    pub fn if_(cond: Operand<'tcx>, t: BasicBlock, f: BasicBlock) -> TerminatorKind<'tcx> {\n+        TerminatorKind::SwitchInt { discr: cond, targets: SwitchTargets::static_if(0, f, t) }\n     }\n \n     pub fn successors(&self) -> Successors<'_> {\n@@ -264,11 +252,9 @@ impl<'tcx> TerminatorKind<'tcx> {\n         }\n     }\n \n-    pub fn as_switch(&self) -> Option<(&Operand<'tcx>, Ty<'tcx>, &SwitchTargets)> {\n+    pub fn as_switch(&self) -> Option<(&Operand<'tcx>, &SwitchTargets)> {\n         match self {\n-            TerminatorKind::SwitchInt { discr, switch_ty, targets } => {\n-                Some((discr, *switch_ty, targets))\n-            }\n+            TerminatorKind::SwitchInt { discr, targets } => Some((discr, targets)),\n             _ => None,\n         }\n     }\n@@ -403,21 +389,12 @@ impl<'tcx> TerminatorKind<'tcx> {\n         match *self {\n             Return | Resume | Abort | Unreachable | GeneratorDrop => vec![],\n             Goto { .. } => vec![\"\".into()],\n-            SwitchInt { ref targets, switch_ty, .. } => ty::tls::with(|tcx| {\n-                let param_env = ty::ParamEnv::empty();\n-                let switch_ty = tcx.lift(switch_ty).unwrap();\n-                let size = tcx.layout_of(param_env.and(switch_ty)).unwrap().size;\n-                targets\n-                    .values\n-                    .iter()\n-                    .map(|&u| {\n-                        mir::ConstantKind::from_scalar(tcx, Scalar::from_uint(u, size), switch_ty)\n-                            .to_string()\n-                            .into()\n-                    })\n-                    .chain(iter::once(\"otherwise\".into()))\n-                    .collect()\n-            }),\n+            SwitchInt { ref targets, .. } => targets\n+                .values\n+                .iter()\n+                .map(|&u| Cow::Owned(u.to_string()))\n+                .chain(iter::once(\"otherwise\".into()))\n+                .collect(),\n             Call { target: Some(_), cleanup: Some(_), .. } => {\n                 vec![\"return\".into(), \"unwind\".into()]\n             }"}, {"sha": "2ee3f551529f986c44525f9857994b4a29cbafba", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -477,11 +477,9 @@ macro_rules! make_mir_visitor {\n \n                     TerminatorKind::SwitchInt {\n                         discr,\n-                        switch_ty,\n                         targets: _\n                     } => {\n                         self.visit_operand(discr, location);\n-                        self.visit_ty($(& $mutability)? *switch_ty, TyContext::Location(location));\n                     }\n \n                     TerminatorKind::Drop {"}, {"sha": "38b1fa91d0a6794ec3cb6dc42ef0330607542825", "filename": "compiler/rustc_mir_build/src/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -183,7 +183,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     LogicalOp::And => (else_block, shortcircuit_block),\n                     LogicalOp::Or => (shortcircuit_block, else_block),\n                 };\n-                let term = TerminatorKind::if_(this.tcx, lhs, blocks.0, blocks.1);\n+                let term = TerminatorKind::if_(lhs, blocks.0, blocks.1);\n                 this.cfg.terminate(block, source_info, term);\n \n                 this.cfg.push_assign_constant("}, {"sha": "e90db2c7d05e7ba294af411f7f76ed6a2c2649a6", "filename": "compiler/rustc_mir_build/src/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -95,7 +95,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n \n                 let then_block = this.cfg.start_new_block();\n                 let else_block = this.cfg.start_new_block();\n-                let term = TerminatorKind::if_(this.tcx, operand, then_block, else_block);\n+                let term = TerminatorKind::if_(operand, then_block, else_block);\n \n                 let source_info = this.source_info(expr_span);\n                 this.cfg.terminate(block, source_info, term);"}, {"sha": "6d5a98342d2936730549754f62fcacdadd06bcae", "filename": "compiler/rustc_mir_build/src/build/matches/test.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -203,7 +203,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     self.source_info(match_start_span),\n                     TerminatorKind::SwitchInt {\n                         discr: Operand::Move(discr),\n-                        switch_ty: discr_ty,\n                         targets: switch_targets,\n                     },\n                 );\n@@ -221,7 +220,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         0 => (second_bb, first_bb),\n                         v => span_bug!(test.span, \"expected boolean value but got {:?}\", v),\n                     };\n-                    TerminatorKind::if_(self.tcx, Operand::Copy(place), true_bb, false_bb)\n+                    TerminatorKind::if_(Operand::Copy(place), true_bb, false_bb)\n                 } else {\n                     // The switch may be inexhaustive so we have a catch all block\n                     debug_assert_eq!(options.len() + 1, target_blocks.len());\n@@ -232,7 +231,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     );\n                     TerminatorKind::SwitchInt {\n                         discr: Operand::Copy(place),\n-                        switch_ty,\n                         targets: switch_targets,\n                     }\n                 };\n@@ -378,7 +376,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         self.cfg.terminate(\n             block,\n             source_info,\n-            TerminatorKind::if_(self.tcx, Operand::Move(result), success_block, fail_block),\n+            TerminatorKind::if_(Operand::Move(result), success_block, fail_block),\n         );\n     }\n \n@@ -482,7 +480,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         self.cfg.terminate(\n             eq_block,\n             source_info,\n-            TerminatorKind::if_(self.tcx, Operand::Move(eq_result), success_block, fail_block),\n+            TerminatorKind::if_(Operand::Move(eq_result), success_block, fail_block),\n         );\n     }\n "}, {"sha": "8610792c0eb5d24be0eced169c40d1d141ec3a4e", "filename": "compiler/rustc_mir_dataflow/src/elaborate_drops.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_dataflow%2Fsrc%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_dataflow%2Fsrc%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Felaborate_drops.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -596,7 +596,6 @@ where\n                 source_info: self.source_info,\n                 kind: TerminatorKind::SwitchInt {\n                     discr: Operand::Move(discr),\n-                    switch_ty: discr_ty,\n                     targets: SwitchTargets::new(\n                         values.iter().copied().zip(blocks.iter().copied()),\n                         *blocks.last().unwrap(),\n@@ -716,7 +715,7 @@ where\n             is_cleanup: unwind.is_cleanup(),\n             terminator: Some(Terminator {\n                 source_info: self.source_info,\n-                kind: TerminatorKind::if_(tcx, move_(can_go), succ, drop_block),\n+                kind: TerminatorKind::if_(move_(can_go), succ, drop_block),\n             }),\n         };\n         let loop_block = self.elaborator.patch().new_block(loop_block);\n@@ -781,7 +780,6 @@ where\n                 source_info: self.source_info,\n                 kind: TerminatorKind::SwitchInt {\n                     discr: move_(elem_size),\n-                    switch_ty: tcx.types.usize,\n                     targets: SwitchTargets::static_if(\n                         0,\n                         self.drop_loop_pair(ety, false, len),\n@@ -1021,7 +1019,7 @@ where\n             DropStyle::Static => on_set,\n             DropStyle::Conditional | DropStyle::Open => {\n                 let flag = self.elaborator.get_drop_flag(self.path).unwrap();\n-                let term = TerminatorKind::if_(self.tcx(), flag, on_set, on_unset);\n+                let term = TerminatorKind::if_(flag, on_set, on_unset);\n                 self.new_block(unwind, term)\n             }\n         }"}, {"sha": "5ff6b9e7e69b4f8257a49d4190a996da6b75e017", "filename": "compiler/rustc_mir_dataflow/src/framework/direction.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fdirection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fdirection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fframework%2Fdirection.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -261,7 +261,7 @@ impl Direction for Backward {\n                     propagate(pred, &tmp);\n                 }\n \n-                mir::TerminatorKind::SwitchInt { targets: _, ref discr, switch_ty: _ } => {\n+                mir::TerminatorKind::SwitchInt { targets: _, ref discr } => {\n                     let mut applier = BackwardSwitchIntEdgeEffectsApplier {\n                         body,\n                         pred,\n@@ -577,7 +577,7 @@ impl Direction for Forward {\n                 }\n             }\n \n-            SwitchInt { ref targets, ref discr, switch_ty: _ } => {\n+            SwitchInt { ref targets, ref discr } => {\n                 let mut applier = ForwardSwitchIntEdgeEffectsApplier {\n                     exit_state,\n                     targets,"}, {"sha": "40eefda4f076326002a270044b1526f9988110c3", "filename": "compiler/rustc_mir_transform/src/const_goto.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_goto.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -82,8 +82,9 @@ impl<'tcx> Visitor<'tcx> for ConstGotoOptimizationFinder<'_, 'tcx> {\n                 }\n \n                 let target_bb_terminator = target_bb.terminator();\n-                let (discr, switch_ty, targets) = target_bb_terminator.kind.as_switch()?;\n+                let (discr, targets) = target_bb_terminator.kind.as_switch()?;\n                 if discr.place() == Some(*place) {\n+                    let switch_ty = place.ty(self.body.local_decls(), self.tcx).ty;\n                     // We now know that the Switch matches on the const place, and it is statementless\n                     // Now find which value in the Switch matches the const value.\n                     let const_value ="}, {"sha": "eba6a2b34e47ddb11379dc589c7090db1611b18d", "filename": "compiler/rustc_mir_transform/src/coverage/tests.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Ftests.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -37,7 +37,7 @@ use rustc_data_structures::graph::WithSuccessors;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::coverage::CoverageKind;\n use rustc_middle::mir::*;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty;\n use rustc_span::{self, BytePos, Pos, Span, DUMMY_SP};\n \n // All `TEMP_BLOCK` targets should be replaced before calling `to_body() -> mir::Body`.\n@@ -47,7 +47,6 @@ struct MockBlocks<'tcx> {\n     blocks: IndexVec<BasicBlock, BasicBlockData<'tcx>>,\n     dummy_place: Place<'tcx>,\n     next_local: usize,\n-    bool_ty: Ty<'tcx>,\n }\n \n impl<'tcx> MockBlocks<'tcx> {\n@@ -56,7 +55,6 @@ impl<'tcx> MockBlocks<'tcx> {\n             blocks: IndexVec::new(),\n             dummy_place: Place { local: RETURN_PLACE, projection: ty::List::empty() },\n             next_local: 0,\n-            bool_ty: TyCtxt::BOOL_TY_FOR_UNIT_TESTING,\n         }\n     }\n \n@@ -157,7 +155,6 @@ impl<'tcx> MockBlocks<'tcx> {\n     fn switchint(&mut self, some_from_block: Option<BasicBlock>) -> BasicBlock {\n         let switchint_kind = TerminatorKind::SwitchInt {\n             discr: Operand::Move(Place::from(self.new_temp())),\n-            switch_ty: self.bool_ty, // just a dummy value\n             targets: SwitchTargets::static_if(0, TEMP_BLOCK, TEMP_BLOCK),\n         };\n         self.add_block_from(some_from_block, switchint_kind)"}, {"sha": "8a7b027ddda7eb91316f612be8995748d6729fdf", "filename": "compiler/rustc_mir_transform/src/early_otherwise_branch.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fearly_otherwise_branch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fearly_otherwise_branch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fearly_otherwise_branch.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -121,7 +121,6 @@ impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n \n             let TerminatorKind::SwitchInt {\n                 discr: parent_op,\n-                switch_ty: parent_ty,\n                 targets: parent_targets\n             } = &bbs[parent].terminator().kind else {\n                 unreachable!()\n@@ -132,6 +131,7 @@ impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n                 Operand::Copy(x) => Operand::Copy(*x),\n                 Operand::Constant(x) => Operand::Constant(x.clone()),\n             };\n+            let parent_ty = parent_op.ty(body.local_decls(), tcx);\n             let statements_before = bbs[parent].statements.len();\n             let parent_end = Location { block: parent, statement_index: statements_before };\n \n@@ -153,7 +153,7 @@ impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n             // create temp to store inequality comparison between the two discriminants, `_t` in\n             // example above\n             let nequal = BinOp::Ne;\n-            let comp_res_type = nequal.ty(tcx, *parent_ty, opt_data.child_ty);\n+            let comp_res_type = nequal.ty(tcx, parent_ty, opt_data.child_ty);\n             let comp_temp = patch.new_temp(comp_res_type, opt_data.child_source.span);\n             patch.add_statement(parent_end, StatementKind::StorageLive(comp_temp));\n \n@@ -181,7 +181,6 @@ impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n                 kind: TerminatorKind::SwitchInt {\n                     // switch on the first discriminant, so we can mark the second one as dead\n                     discr: parent_op,\n-                    switch_ty: opt_data.child_ty,\n                     targets: eq_targets,\n                 },\n             }));\n@@ -193,12 +192,7 @@ impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n             let false_case = eq_bb;\n             patch.patch_terminator(\n                 parent,\n-                TerminatorKind::if_(\n-                    tcx,\n-                    Operand::Move(Place::from(comp_temp)),\n-                    true_case,\n-                    false_case,\n-                ),\n+                TerminatorKind::if_(Operand::Move(Place::from(comp_temp)), true_case, false_case),\n             );\n \n             // generate StorageDead for the second_discriminant_temp not in use anymore\n@@ -319,11 +313,11 @@ fn evaluate_candidate<'tcx>(\n     let bbs = &body.basic_blocks;\n     let TerminatorKind::SwitchInt {\n         targets,\n-        switch_ty: parent_ty,\n-        ..\n+        discr: parent_discr,\n     } = &bbs[parent].terminator().kind else {\n         return None\n     };\n+    let parent_ty = parent_discr.ty(body.local_decls(), tcx);\n     let parent_dest = {\n         let poss = targets.otherwise();\n         // If the fallthrough on the parent is trivially unreachable, we can let the\n@@ -339,12 +333,12 @@ fn evaluate_candidate<'tcx>(\n     let (_, child) = targets.iter().next()?;\n     let child_terminator = &bbs[child].terminator();\n     let TerminatorKind::SwitchInt {\n-        switch_ty: child_ty,\n         targets: child_targets,\n-        ..\n+        discr: child_discr,\n     } = &child_terminator.kind else {\n         return None\n     };\n+    let child_ty = child_discr.ty(body.local_decls(), tcx);\n     if child_ty != parent_ty {\n         return None;\n     }\n@@ -372,7 +366,7 @@ fn evaluate_candidate<'tcx>(\n     Some(OptimizationData {\n         destination,\n         child_place: *child_place,\n-        child_ty: *child_ty,\n+        child_ty,\n         child_source: child_terminator.source_info,\n     })\n }"}, {"sha": "c08593afe9d88ff900b6c116ffcd8183cc0b89d4", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -877,11 +877,7 @@ fn insert_switch<'tcx>(\n     let (assign, discr) = transform.get_discr(body);\n     let switch_targets =\n         SwitchTargets::new(cases.iter().map(|(i, bb)| ((*i) as u128, *bb)), default_block);\n-    let switch = TerminatorKind::SwitchInt {\n-        discr: Operand::Move(discr),\n-        switch_ty: transform.discr_ty,\n-        targets: switch_targets,\n-    };\n+    let switch = TerminatorKind::SwitchInt { discr: Operand::Move(discr), targets: switch_targets };\n \n     let source_info = SourceInfo::outermost(body.span);\n     body.basic_blocks_mut().raw.insert("}, {"sha": "ce05db5b762ac9a48d3b2d15f6b3be72a3a5d526", "filename": "compiler/rustc_mir_transform/src/match_branches.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -55,18 +55,17 @@ impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n                 continue;\n             }\n \n-            let (discr, val, switch_ty, first, second) = match bbs[bb_idx].terminator().kind {\n+            let (discr, val, first, second) = match bbs[bb_idx].terminator().kind {\n                 TerminatorKind::SwitchInt {\n                     discr: ref discr @ (Operand::Copy(_) | Operand::Move(_)),\n-                    switch_ty,\n                     ref targets,\n                     ..\n                 } if targets.iter().len() == 1 => {\n                     let (value, target) = targets.iter().next().unwrap();\n                     if target == targets.otherwise() {\n                         continue;\n                     }\n-                    (discr, value, switch_ty, target, targets.otherwise())\n+                    (discr, value, target, targets.otherwise())\n                 }\n                 // Only optimize switch int statements\n                 _ => continue,\n@@ -105,10 +104,11 @@ impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n             }\n             // Take ownership of items now that we know we can optimize.\n             let discr = discr.clone();\n+            let discr_ty = discr.ty(&body.local_decls, tcx);\n \n             // Introduce a temporary for the discriminant value.\n             let source_info = bbs[bb_idx].terminator().source_info;\n-            let discr_local = body.local_decls.push(LocalDecl::new(switch_ty, source_info.span));\n+            let discr_local = body.local_decls.push(LocalDecl::new(discr_ty, source_info.span));\n \n             // We already checked that first and second are different blocks,\n             // and bb_idx has a different terminator from both of them.\n@@ -130,10 +130,10 @@ impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n                             (*f).clone()\n                         } else {\n                             // Different value between blocks. Make value conditional on switch condition.\n-                            let size = tcx.layout_of(param_env.and(switch_ty)).unwrap().size;\n+                            let size = tcx.layout_of(param_env.and(discr_ty)).unwrap().size;\n                             let const_cmp = Operand::const_from_scalar(\n                                 tcx,\n-                                switch_ty,\n+                                discr_ty,\n                                 rustc_const_eval::interpret::Scalar::from_uint(val, size),\n                                 rustc_span::DUMMY_SP,\n                             );"}, {"sha": "f92a0e826dcdfb6dcf55e264235d07e360a5137f", "filename": "compiler/rustc_mir_transform/src/shim.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -548,7 +548,6 @@ impl<'tcx> CloneShimBuilder<'tcx> {\n                 statements.push(statement);\n                 *kind = TerminatorKind::SwitchInt {\n                     discr: Operand::Move(temp),\n-                    switch_ty: discr_ty,\n                     targets: SwitchTargets::new(cases.into_iter(), unreachable),\n                 };\n             }"}, {"sha": "8164b3052786aa1ea07d979f6607ca8988f6b9ef", "filename": "compiler/rustc_mir_transform/src/simplify_branches.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -24,12 +24,9 @@ impl<'tcx> MirPass<'tcx> for SimplifyConstCondition {\n             let terminator = block.terminator_mut();\n             terminator.kind = match terminator.kind {\n                 TerminatorKind::SwitchInt {\n-                    discr: Operand::Constant(ref c),\n-                    switch_ty,\n-                    ref targets,\n-                    ..\n+                    discr: Operand::Constant(ref c), ref targets, ..\n                 } => {\n-                    let constant = c.literal.try_eval_bits(tcx, param_env, switch_ty);\n+                    let constant = c.literal.try_eval_bits(tcx, param_env, c.ty());\n                     if let Some(constant) = constant {\n                         let target = targets.target_for_value(constant);\n                         TerminatorKind::Goto { target }"}, {"sha": "dcad1518eb63eb0d853037b109b9b7d800b727c8", "filename": "compiler/rustc_mir_transform/src/simplify_comparison_integral.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_comparison_integral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_comparison_integral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_comparison_integral.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -127,11 +127,8 @@ impl<'tcx> MirPass<'tcx> for SimplifyComparisonIntegral {\n             let targets = SwitchTargets::new(iter::once((new_value, bb_cond)), bb_otherwise);\n \n             let terminator = bb.terminator_mut();\n-            terminator.kind = TerminatorKind::SwitchInt {\n-                discr: Operand::Move(opt.to_switch_on),\n-                switch_ty: opt.branch_value_ty,\n-                targets,\n-            };\n+            terminator.kind =\n+                TerminatorKind::SwitchInt { discr: Operand::Move(opt.to_switch_on), targets };\n         }\n \n         for (idx, bb_idx) in storage_deads_to_remove {"}, {"sha": "06deca2fffb4889cc447878136b545a0243de852", "filename": "compiler/rustc_mir_transform/src/unreachable_prop.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/compiler%2Frustc_mir_transform%2Fsrc%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Funreachable_prop.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -76,7 +76,7 @@ where\n     let terminator = match terminator_kind {\n         // This will unconditionally run into an unreachable and is therefore unreachable as well.\n         TerminatorKind::Goto { target } if is_unreachable(*target) => TerminatorKind::Unreachable,\n-        TerminatorKind::SwitchInt { targets, discr, switch_ty } => {\n+        TerminatorKind::SwitchInt { targets, discr } => {\n             let otherwise = targets.otherwise();\n \n             // If all targets are unreachable, we can be unreachable as well.\n@@ -110,11 +110,7 @@ where\n                     return None;\n                 }\n \n-                TerminatorKind::SwitchInt {\n-                    discr: discr.clone(),\n-                    switch_ty: *switch_ty,\n-                    targets: new_targets,\n-                }\n+                TerminatorKind::SwitchInt { discr: discr.clone(), targets: new_targets }\n             } else {\n                 // If the otherwise branch is reachable, we don't want to delete any unreachable branches.\n                 return None;"}, {"sha": "9780332d8bf18813d2658000920e92e91f7e8824", "filename": "src/test/mir-opt/76803_regression.encode.SimplifyBranchSame.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2F76803_regression.encode.SimplifyBranchSame.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2F76803_regression.encode.SimplifyBranchSame.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2F76803_regression.encode.SimplifyBranchSame.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,7 +8,7 @@\n   \n       bb0: {\n           _2 = discriminant(_1);           // scope 0 at $DIR/76803_regression.rs:+1:11: +1:12\n-          switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/76803_regression.rs:+1:5: +1:12\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/76803_regression.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "0af5d82d31540debb60c201f5201332058981578", "filename": "src/test/mir-opt/bool_compare.opt1.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt1.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt1.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbool_compare.opt1.InstCombine.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n -         _2 = Ne(move _3, const true);    // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n +         _2 = Not(move _3);               // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n           StorageDead(_3);                 // scope 0 at $DIR/bool_compare.rs:+1:16: +1:17\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n       }\n   \n       bb1: {"}, {"sha": "f5d1febd991cd5aef3f2964c80372d1966e8fd5b", "filename": "src/test/mir-opt/bool_compare.opt2.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt2.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt2.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbool_compare.opt2.InstCombine.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n -         _2 = Ne(const true, move _3);    // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n +         _2 = Not(move _3);               // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n           StorageDead(_3);                 // scope 0 at $DIR/bool_compare.rs:+1:16: +1:17\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:17\n       }\n   \n       bb1: {"}, {"sha": "e7432adac7d9d366e75830c62b45d8f9ae3ff569", "filename": "src/test/mir-opt/bool_compare.opt3.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt3.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt3.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbool_compare.opt3.InstCombine.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n -         _2 = Eq(move _3, const false);   // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n +         _2 = Not(move _3);               // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n           StorageDead(_3);                 // scope 0 at $DIR/bool_compare.rs:+1:17: +1:18\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n       }\n   \n       bb1: {"}, {"sha": "6b3e27772f71c978b4bd06feb76e83cf5d0226a0", "filename": "src/test/mir-opt/bool_compare.opt4.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt4.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbool_compare.opt4.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbool_compare.opt4.InstCombine.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n -         _2 = Eq(const false, move _3);   // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n +         _2 = Not(move _3);               // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n           StorageDead(_3);                 // scope 0 at $DIR/bool_compare.rs:+1:17: +1:18\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/bool_compare.rs:+1:8: +1:18\n       }\n   \n       bb1: {"}, {"sha": "628a33f1020a5f625d333a536f9c795061a24d79", "filename": "src/test/mir-opt/building/issue_101867.main.built.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fissue_101867.main.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fissue_101867.main.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fissue_101867.main.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -27,7 +27,7 @@ fn main() -> () {\n         StorageLive(_5);                 // scope 1 at $DIR/issue_101867.rs:+2:14: +2:15\n         FakeRead(ForMatchedPlace(None), _1); // scope 1 at $DIR/issue_101867.rs:+2:19: +2:20\n         _6 = discriminant(_1);           // scope 1 at $DIR/issue_101867.rs:+2:19: +2:20\n-        switchInt(move _6) -> [1_isize: bb4, otherwise: bb3]; // scope 1 at $DIR/issue_101867.rs:+2:9: +2:16\n+        switchInt(move _6) -> [1: bb4, otherwise: bb3]; // scope 1 at $DIR/issue_101867.rs:+2:9: +2:16\n     }\n \n     bb1: {"}, {"sha": "de5e4c0f6ed48dc33a50002ebb2bb8edc0b9f33c", "filename": "src/test/mir-opt/building/issue_49232.main.built.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fissue_49232.main.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fissue_49232.main.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fissue_49232.main.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -25,7 +25,7 @@ fn main() -> () {\n         StorageLive(_3);                 // scope 0 at $DIR/issue_49232.rs:+3:19: +3:23\n         _3 = const true;                 // scope 0 at $DIR/issue_49232.rs:+3:19: +3:23\n         FakeRead(ForMatchedPlace(None), _3); // scope 0 at $DIR/issue_49232.rs:+3:19: +3:23\n-        switchInt(_3) -> [false: bb3, otherwise: bb4]; // scope 0 at $DIR/issue_49232.rs:+3:13: +3:23\n+        switchInt(_3) -> [0: bb3, otherwise: bb4]; // scope 0 at $DIR/issue_49232.rs:+3:13: +3:23\n     }\n \n     bb3: {"}, {"sha": "cb36bc64da69597809b68fdb2dac704c6ff7accc", "filename": "src/test/mir-opt/building/match_false_edges.full_tested_match.built.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.full_tested_match.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.full_tested_match.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.full_tested_match.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -28,7 +28,7 @@ fn full_tested_match() -> () {\n         _2 = Option::<i32>::Some(const 42_i32); // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:27\n         FakeRead(ForMatchedPlace(None), _2); // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:27\n         _3 = discriminant(_2);           // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:27\n-        switchInt(move _3) -> [0_isize: bb1, 1_isize: bb2, otherwise: bb4]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:27\n+        switchInt(move _3) -> [0: bb1, 1: bb2, otherwise: bb4]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:27\n     }\n \n     bb1: {\n@@ -60,7 +60,7 @@ fn full_tested_match() -> () {\n     }\n \n     bb6: {\n-        switchInt(move _7) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/match_false_edges.rs:+2:20: +2:27\n+        switchInt(move _7) -> [0: bb8, otherwise: bb7]; // scope 0 at $DIR/match_false_edges.rs:+2:20: +2:27\n     }\n \n     bb7: {"}, {"sha": "7f8755faac6cf78f146d55ec9a291ced6ae387dc", "filename": "src/test/mir-opt/building/match_false_edges.full_tested_match2.built.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.full_tested_match2.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.full_tested_match2.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.full_tested_match2.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -28,7 +28,7 @@ fn full_tested_match2() -> () {\n         _2 = Option::<i32>::Some(const 42_i32); // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:27\n         FakeRead(ForMatchedPlace(None), _2); // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:27\n         _3 = discriminant(_2);           // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:27\n-        switchInt(move _3) -> [0_isize: bb1, 1_isize: bb2, otherwise: bb4]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:27\n+        switchInt(move _3) -> [0: bb1, 1: bb2, otherwise: bb4]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:27\n     }\n \n     bb1: {\n@@ -66,7 +66,7 @@ fn full_tested_match2() -> () {\n     }\n \n     bb6: {\n-        switchInt(move _7) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/match_false_edges.rs:+2:20: +2:27\n+        switchInt(move _7) -> [0: bb8, otherwise: bb7]; // scope 0 at $DIR/match_false_edges.rs:+2:20: +2:27\n     }\n \n     bb7: {"}, {"sha": "e8b93f4371ecbadb05ce0c559300d80d3de25c31", "filename": "src/test/mir-opt/building/match_false_edges.main.built.after.mir", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.main.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.main.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fmatch_false_edges.main.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -39,7 +39,7 @@ fn main() -> () {\n         _2 = Option::<i32>::Some(const 1_i32); // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:26\n         FakeRead(ForMatchedPlace(None), _2); // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:26\n         _4 = discriminant(_2);           // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:26\n-        switchInt(move _4) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:26\n+        switchInt(move _4) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:26\n     }\n \n     bb1: {\n@@ -56,7 +56,7 @@ fn main() -> () {\n \n     bb4: {\n         _3 = discriminant(_2);           // scope 0 at $DIR/match_false_edges.rs:+1:19: +1:26\n-        switchInt(move _3) -> [1_isize: bb6, otherwise: bb5]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:26\n+        switchInt(move _3) -> [1: bb6, otherwise: bb5]; // scope 0 at $DIR/match_false_edges.rs:+1:13: +1:26\n     }\n \n     bb5: {\n@@ -87,7 +87,7 @@ fn main() -> () {\n     }\n \n     bb9: {\n-        switchInt(move _8) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/match_false_edges.rs:+2:21: +2:28\n+        switchInt(move _8) -> [0: bb11, otherwise: bb10]; // scope 0 at $DIR/match_false_edges.rs:+2:21: +2:28\n     }\n \n     bb10: {\n@@ -134,7 +134,7 @@ fn main() -> () {\n     }\n \n     bb15: {\n-        switchInt(move _12) -> [false: bb17, otherwise: bb16]; // scope 0 at $DIR/match_false_edges.rs:+4:20: +4:29\n+        switchInt(move _12) -> [0: bb17, otherwise: bb16]; // scope 0 at $DIR/match_false_edges.rs:+4:20: +4:29\n     }\n \n     bb16: {"}, {"sha": "aa2fd46320e137fa281c34109ea89ed27f5187b7", "filename": "src/test/mir-opt/building/simple_match.match_bool.built.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fsimple_match.match_bool.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fbuilding%2Fsimple_match.match_bool.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fsimple_match.match_bool.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -6,7 +6,7 @@ fn match_bool(_1: bool) -> usize {\n \n     bb0: {\n         FakeRead(ForMatchedPlace(None), _1); // scope 0 at $DIR/simple_match.rs:+1:11: +1:12\n-        switchInt(_1) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/simple_match.rs:+1:5: +1:12\n+        switchInt(_1) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/simple_match.rs:+1:5: +1:12\n     }\n \n     bb1: {"}, {"sha": "a717d1bbd12f2c2ab965969cdebd33d9fdd30efa", "filename": "src/test/mir-opt/const_goto.issue_77355_opt.ConstGoto.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_goto.issue_77355_opt.ConstGoto.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_goto.issue_77355_opt.ConstGoto.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto.issue_77355_opt.ConstGoto.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -11,9 +11,9 @@\n       bb0: {\n -         StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n -         _3 = discriminant(_1);           // scope 0 at $DIR/const_goto.rs:+1:17: +1:20\n--         switchInt(move _3) -> [1_isize: bb2, 2_isize: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         switchInt(move _3) -> [1: bb2, 2: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n +         _2 = discriminant(_1);           // scope 0 at $DIR/const_goto.rs:+1:17: +1:20\n-+         switchInt(move _2) -> [1_isize: bb2, 2_isize: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n++         switchInt(move _2) -> [1: bb2, 2: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n   \n       bb1: {\n@@ -29,7 +29,7 @@\n -     }\n - \n -     bb3: {\n--         switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         switchInt(move _2) -> [0: bb5, otherwise: bb4]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n -     }\n - \n -     bb4: {"}, {"sha": "24be8c9b86845b8147db55dbfe373cf695a6eebb", "filename": "src/test/mir-opt/const_goto_const_eval_fail.f.ConstGoto.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.f.ConstGoto.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.f.ConstGoto.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.f.ConstGoto.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -10,7 +10,7 @@\n           StorageLive(_1);                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:+1:11: +6:6\n           StorageLive(_2);                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:+2:15: +2:16\n           _2 = const A;                    // scope 0 at $DIR/const_goto_const_eval_fail.rs:+2:15: +2:16\n-          switchInt(_2) -> [1_i32: bb2, 2_i32: bb2, 3_i32: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:+2:9: +2:16\n+          switchInt(_2) -> [1: bb2, 2: bb2, 3: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:+2:9: +2:16\n       }\n   \n       bb1: {\n@@ -21,11 +21,11 @@\n       bb2: {\n           _1 = const B;                    // scope 0 at $DIR/const_goto_const_eval_fail.rs:+3:26: +3:27\n -         goto -> bb3;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:+3:26: +3:27\n-+         switchInt(_1) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:+1:5: +6:6\n++         switchInt(_1) -> [0: bb4, otherwise: bb3]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:+1:5: +6:6\n       }\n   \n       bb3: {\n--         switchInt(_1) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:+1:5: +6:6\n+-         switchInt(_1) -> [0: bb5, otherwise: bb4]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:+1:5: +6:6\n -     }\n - \n -     bb4: {"}, {"sha": "f54577259431da796336b9c52d937c479de6e213", "filename": "src/test/mir-opt/const_goto_storage.match_nested_if.ConstGoto.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_goto_storage.match_nested_if.ConstGoto.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_goto_storage.match_nested_if.ConstGoto.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto_storage.match_nested_if.ConstGoto.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -23,10 +23,10 @@\n -         StorageLive(_5);                 // scope 0 at $DIR/const_goto_storage.rs:+2:21: +2:52\n -         StorageLive(_6);                 // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n -         _6 = const true;                 // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n--         switchInt(move _6) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n+-         switchInt(move _6) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n +         StorageLive(_2);                 // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n +         _2 = const true;                 // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n-+         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n++         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_storage.rs:+2:24: +2:28\n       }\n   \n       bb1: {\n@@ -41,7 +41,7 @@\n - \n -     bb3: {\n -         StorageDead(_6);                 // scope 0 at $DIR/const_goto_storage.rs:+2:51: +2:52\n--         switchInt(move _5) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/const_goto_storage.rs:+2:21: +2:52\n+-         switchInt(move _5) -> [0: bb5, otherwise: bb4]; // scope 0 at $DIR/const_goto_storage.rs:+2:21: +2:52\n -     }\n - \n -     bb4: {\n@@ -56,7 +56,7 @@\n - \n -     bb6: {\n -         StorageDead(_5);                 // scope 0 at $DIR/const_goto_storage.rs:+2:75: +2:76\n--         switchInt(move _4) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/const_goto_storage.rs:+2:18: +2:76\n+-         switchInt(move _4) -> [0: bb8, otherwise: bb7]; // scope 0 at $DIR/const_goto_storage.rs:+2:18: +2:76\n -     }\n - \n -     bb7: {\n@@ -70,7 +70,7 @@\n -     }\n - \n -     bb9: {\n--         switchInt(move _3) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/const_goto_storage.rs:+2:15: +6:10\n+-         switchInt(move _3) -> [0: bb11, otherwise: bb10]; // scope 0 at $DIR/const_goto_storage.rs:+2:15: +6:10\n -     }\n - \n -     bb10: {"}, {"sha": "147670f8a915c4681eb853556097617f52ebf063", "filename": "src/test/mir-opt/const_prop/control_flow_simplification.hello.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fcontrol_flow_simplification.hello.ConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -9,8 +9,8 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/control_flow_simplification.rs:+1:8: +1:21\n           _1 = const _;                    // scope 0 at $DIR/control_flow_simplification.rs:+1:8: +1:21\n--         switchInt(move _1) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/control_flow_simplification.rs:+1:8: +1:21\n-+         switchInt(const false) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/control_flow_simplification.rs:+1:8: +1:21\n+-         switchInt(move _1) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/control_flow_simplification.rs:+1:8: +1:21\n++         switchInt(const false) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/control_flow_simplification.rs:+1:8: +1:21\n       }\n   \n       bb1: {"}, {"sha": "b4dccecc67265e74d5191fa6930acf8b1ee8e307", "filename": "src/test/mir-opt/const_prop/discriminant.main.ConstProp.32bit.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.32bit.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -21,13 +21,13 @@\n           ((_3 as Some).0: bool) = const true; // scope 2 at $DIR/discriminant.rs:+1:34: +1:44\n           discriminant(_3) = 1;            // scope 2 at $DIR/discriminant.rs:+1:34: +1:44\n -         _4 = discriminant(_3);           // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n--         switchInt(move _4) -> [1_isize: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n+-         switchInt(move _4) -> [1: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n +         _4 = const 1_isize;              // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n-+         switchInt(const 1_isize) -> [1_isize: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n++         switchInt(const 1_isize) -> [1: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n       }\n   \n       bb1: {\n-          switchInt(((_3 as Some).0: bool)) -> [false: bb3, otherwise: bb2]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n+          switchInt(((_3 as Some).0: bool)) -> [0: bb3, otherwise: bb2]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n       }\n   \n       bb2: {"}, {"sha": "b4dccecc67265e74d5191fa6930acf8b1ee8e307", "filename": "src/test/mir-opt/const_prop/discriminant.main.ConstProp.64bit.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fdiscriminant.main.ConstProp.64bit.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -21,13 +21,13 @@\n           ((_3 as Some).0: bool) = const true; // scope 2 at $DIR/discriminant.rs:+1:34: +1:44\n           discriminant(_3) = 1;            // scope 2 at $DIR/discriminant.rs:+1:34: +1:44\n -         _4 = discriminant(_3);           // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n--         switchInt(move _4) -> [1_isize: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n+-         switchInt(move _4) -> [1: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n +         _4 = const 1_isize;              // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n-+         switchInt(const 1_isize) -> [1_isize: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n++         switchInt(const 1_isize) -> [1: bb1, otherwise: bb3]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n       }\n   \n       bb1: {\n-          switchInt(((_3 as Some).0: bool)) -> [false: bb3, otherwise: bb2]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n+          switchInt(((_3 as Some).0: bool)) -> [0: bb3, otherwise: bb2]; // scope 2 at $DIR/discriminant.rs:+1:21: +1:31\n       }\n   \n       bb2: {"}, {"sha": "ddc1a4493dbbf697a02a4a41f868e8fc83c7e8cb", "filename": "src/test/mir-opt/const_prop/switch_int.main.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fswitch_int.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fswitch_int.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fswitch_int.main.ConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,8 +8,8 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/switch_int.rs:+1:11: +1:12\n           _1 = const 1_i32;                // scope 0 at $DIR/switch_int.rs:+1:11: +1:12\n--         switchInt(_1) -> [1_i32: bb2, otherwise: bb1]; // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n-+         switchInt(const 1_i32) -> [1_i32: bb2, otherwise: bb1]; // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n+-         switchInt(_1) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n++         switchInt(const 1_i32) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "09c47ee6e8309deaa6504a8c0f9d55faefc55223", "filename": "src/test/mir-opt/const_prop/switch_int.main.SimplifyConstCondition-after-const-prop.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fswitch_int.main.SimplifyConstCondition-after-const-prop.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fswitch_int.main.SimplifyConstCondition-after-const-prop.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fswitch_int.main.SimplifyConstCondition-after-const-prop.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,7 +8,7 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/switch_int.rs:+1:11: +1:12\n           _1 = const 1_i32;                // scope 0 at $DIR/switch_int.rs:+1:11: +1:12\n--         switchInt(const 1_i32) -> [1_i32: bb2, otherwise: bb1]; // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n+-         switchInt(const 1_i32) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n +         goto -> bb2;                     // scope 0 at $DIR/switch_int.rs:+1:5: +1:12\n       }\n   "}, {"sha": "c4d389b2d764818426147cf1822148f1d089174d", "filename": "src/test/mir-opt/coverage_graphviz.main.InstrumentCoverage.0.dot", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcoverage_graphviz.main.InstrumentCoverage.0.dot?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -7,7 +7,7 @@ digraph Cov_0_3 {\n     bcb1__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb1</td></tr><tr><td align=\"left\" balign=\"left\">Expression(bcb0 + bcb3) at 10:5-11:17<br align=\"left\"/>    11:12-11:17: @2.Call: _2 = bar() -&gt; [return: bb3, unwind: bb6]</td></tr><tr><td align=\"left\" balign=\"left\">bb1: FalseUnwind<br align=\"left\"/>bb2: Call</td></tr><tr><td align=\"left\" balign=\"left\">bb3: SwitchInt</td></tr></table>>];\n     bcb0__Cov_0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">bcb0</td></tr><tr><td align=\"left\" balign=\"left\"></td></tr><tr><td align=\"left\" balign=\"left\">Counter(bcb0) at 9:1-9:11<br align=\"left\"/>    </td></tr><tr><td align=\"left\" balign=\"left\">bb0: Goto</td></tr></table>>];\n     bcb3__Cov_0_3 -> bcb1__Cov_0_3 [label=<>];\n-    bcb1__Cov_0_3 -> bcb3__Cov_0_3 [label=<false>];\n+    bcb1__Cov_0_3 -> bcb3__Cov_0_3 [label=<0>];\n     bcb1__Cov_0_3 -> bcb2__Cov_0_3 [label=<otherwise>];\n     bcb0__Cov_0_3 -> bcb1__Cov_0_3 [label=<>];\n }"}, {"sha": "fce18fae4362f17224dfcc0ed6213575176167c5", "filename": "src/test/mir-opt/dataflow-const-prop/enum.main.DataflowConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fenum.main.DataflowConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fenum.main.DataflowConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fenum.main.DataflowConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -28,7 +28,7 @@\n           discriminant(_1) = 0;            // scope 0 at $DIR/enum.rs:+1:13: +1:21\n           StorageLive(_2);                 // scope 1 at $DIR/enum.rs:+2:9: +2:10\n           _3 = discriminant(_1);           // scope 1 at $DIR/enum.rs:+2:19: +2:20\n-          switchInt(move _3) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 1 at $DIR/enum.rs:+2:13: +2:20\n+          switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 1 at $DIR/enum.rs:+2:13: +2:20\n       }\n   \n       bb1: {"}, {"sha": "32489b4bd6bfeb57987277e2e1fe14fea90ea0a8", "filename": "src/test/mir-opt/dataflow-const-prop/if.main.DataflowConstProp.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fif.main.DataflowConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fif.main.DataflowConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fif.main.DataflowConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -42,8 +42,8 @@\n +         _4 = const 1_i32;                // scope 1 at $DIR/if.rs:+2:16: +2:17\n +         _3 = const true;                 // scope 1 at $DIR/if.rs:+2:16: +2:22\n           StorageDead(_4);                 // scope 1 at $DIR/if.rs:+2:21: +2:22\n--         switchInt(move _3) -> [false: bb2, otherwise: bb1]; // scope 1 at $DIR/if.rs:+2:16: +2:22\n-+         switchInt(const true) -> [false: bb2, otherwise: bb1]; // scope 1 at $DIR/if.rs:+2:16: +2:22\n+-         switchInt(move _3) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/if.rs:+2:16: +2:22\n++         switchInt(const true) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/if.rs:+2:16: +2:22\n       }\n   \n       bb1: {\n@@ -73,8 +73,8 @@\n +         _9 = const 1_i32;                // scope 3 at $DIR/if.rs:+5:16: +5:17\n +         _8 = const true;                 // scope 3 at $DIR/if.rs:+5:16: +5:22\n           StorageDead(_9);                 // scope 3 at $DIR/if.rs:+5:21: +5:22\n--         switchInt(move _8) -> [false: bb5, otherwise: bb4]; // scope 3 at $DIR/if.rs:+5:16: +5:22\n-+         switchInt(const true) -> [false: bb5, otherwise: bb4]; // scope 3 at $DIR/if.rs:+5:16: +5:22\n+-         switchInt(move _8) -> [0: bb5, otherwise: bb4]; // scope 3 at $DIR/if.rs:+5:16: +5:22\n++         switchInt(const true) -> [0: bb5, otherwise: bb4]; // scope 3 at $DIR/if.rs:+5:16: +5:22\n       }\n   \n       bb4: {"}, {"sha": "5a87884977c39bc3b8aa7f711dc2159561ac4ef8", "filename": "src/test/mir-opt/dataflow-const-prop/issue_81605.f.DataflowConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.f.DataflowConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.f.DataflowConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdataflow-const-prop%2Fissue_81605.f.DataflowConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -10,8 +10,8 @@\n           StorageLive(_1);                 // scope 0 at $DIR/issue_81605.rs:+1:9: +1:33\n           StorageLive(_2);                 // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n           _2 = const true;                 // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n--         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n-+         switchInt(const true) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n+-         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n++         switchInt(const true) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/issue_81605.rs:+1:12: +1:16\n       }\n   \n       bb1: {"}, {"sha": "80f8905adc92d93ae714a7b326a16ec22e6f11cd", "filename": "src/test/mir-opt/dead-store-elimination/cycle.cycle.DeadStoreElimination.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdead-store-elimination%2Fcycle.cycle.DeadStoreElimination.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdead-store-elimination%2Fcycle.cycle.DeadStoreElimination.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdead-store-elimination%2Fcycle.cycle.DeadStoreElimination.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -37,8 +37,8 @@\n       }\n   \n       bb2: {\n--         switchInt(move _5) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/cycle.rs:+3:11: +3:17\n-+         switchInt(move _4) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/cycle.rs:+3:11: +3:17\n+-         switchInt(move _5) -> [0: bb4, otherwise: bb3]; // scope 0 at $DIR/cycle.rs:+3:11: +3:17\n++         switchInt(move _4) -> [0: bb4, otherwise: bb3]; // scope 0 at $DIR/cycle.rs:+3:11: +3:17\n       }\n   \n       bb3: {"}, {"sha": "210d3849e18a106bb1e76987b5934588e335ba34", "filename": "src/test/mir-opt/deaggregator_test_enum_2.test1.Deaggregator.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdeaggregator_test_enum_2.test1.Deaggregator.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdeaggregator_test_enum_2.test1.Deaggregator.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdeaggregator_test_enum_2.test1.Deaggregator.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -12,7 +12,7 @@\n       bb0: {\n           StorageLive(_3);                 // scope 0 at $DIR/deaggregator_test_enum_2.rs:+1:8: +1:9\n           _3 = _1;                         // scope 0 at $DIR/deaggregator_test_enum_2.rs:+1:8: +1:9\n-          switchInt(move _3) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/deaggregator_test_enum_2.rs:+1:8: +1:9\n+          switchInt(move _3) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/deaggregator_test_enum_2.rs:+1:8: +1:9\n       }\n   \n       bb1: {"}, {"sha": "3b1f81175cbfcc49148618d7a177f8522b0e7c8b", "filename": "src/test/mir-opt/deduplicate_blocks.is_line_doc_comment_2.DeduplicateBlocks.diff", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdeduplicate_blocks.is_line_doc_comment_2.DeduplicateBlocks.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdeduplicate_blocks.is_line_doc_comment_2.DeduplicateBlocks.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdeduplicate_blocks.is_line_doc_comment_2.DeduplicateBlocks.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -28,44 +28,44 @@\n           _7 = Len((*_2));                 // scope 0 at $DIR/deduplicate_blocks.rs:+2:9: +2:37\n           _8 = const 4_usize;              // scope 0 at $DIR/deduplicate_blocks.rs:+2:9: +2:37\n           _9 = Ge(move _7, move _8);       // scope 0 at $DIR/deduplicate_blocks.rs:+2:9: +2:37\n-          switchInt(move _9) -> [false: bb6, otherwise: bb2]; // scope 0 at $DIR/deduplicate_blocks.rs:+2:9: +2:37\n+          switchInt(move _9) -> [0: bb6, otherwise: bb2]; // scope 0 at $DIR/deduplicate_blocks.rs:+2:9: +2:37\n       }\n   \n       bb2: {\n-          switchInt((*_2)[0 of 4]) -> [47_u8: bb3, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+          switchInt((*_2)[0 of 4]) -> [47: bb3, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb3: {\n-          switchInt((*_2)[1 of 4]) -> [47_u8: bb4, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+          switchInt((*_2)[1 of 4]) -> [47: bb4, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb4: {\n-          switchInt((*_2)[2 of 4]) -> [47_u8: bb5, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+          switchInt((*_2)[2 of 4]) -> [47: bb5, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb5: {\n--         switchInt((*_2)[3 of 4]) -> [47_u8: bb11, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n-+         switchInt((*_2)[3 of 4]) -> [47_u8: bb10, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+-         switchInt((*_2)[3 of 4]) -> [47: bb11, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n++         switchInt((*_2)[3 of 4]) -> [47: bb10, otherwise: bb6]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb6: {\n           _4 = Len((*_2));                 // scope 0 at $DIR/deduplicate_blocks.rs:+3:9: +3:31\n           _5 = const 3_usize;              // scope 0 at $DIR/deduplicate_blocks.rs:+3:9: +3:31\n           _6 = Ge(move _4, move _5);       // scope 0 at $DIR/deduplicate_blocks.rs:+3:9: +3:31\n-          switchInt(move _6) -> [false: bb10, otherwise: bb7]; // scope 0 at $DIR/deduplicate_blocks.rs:+3:9: +3:31\n+          switchInt(move _6) -> [0: bb10, otherwise: bb7]; // scope 0 at $DIR/deduplicate_blocks.rs:+3:9: +3:31\n       }\n   \n       bb7: {\n-          switchInt((*_2)[0 of 3]) -> [47_u8: bb8, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+          switchInt((*_2)[0 of 3]) -> [47: bb8, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb8: {\n-          switchInt((*_2)[1 of 3]) -> [47_u8: bb9, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+          switchInt((*_2)[1 of 3]) -> [47: bb9, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb9: {\n--         switchInt((*_2)[2 of 3]) -> [47_u8: bb12, 33_u8: bb13, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n-+         switchInt((*_2)[2 of 3]) -> [47_u8: bb11, 33_u8: bb11, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n+-         switchInt((*_2)[2 of 3]) -> [47: bb12, 33: bb13, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n++         switchInt((*_2)[2 of 3]) -> [47: bb11, 33: bb11, otherwise: bb10]; // scope 0 at $DIR/deduplicate_blocks.rs:+1:5: +1:23\n       }\n   \n       bb10: {"}, {"sha": "9597a0c835fddd26907f92f59533943e9eb7b009", "filename": "src/test/mir-opt/deref-patterns/string.foo.PreCodegen.after.mir", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fderef-patterns%2Fstring.foo.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fderef-patterns%2Fstring.foo.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderef-patterns%2Fstring.foo.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -17,7 +17,7 @@ fn foo(_1: Option<String>) -> i32 {\n         _7 = const false;                // scope 0 at $DIR/string.rs:+1:11: +1:12\n         _7 = const true;                 // scope 0 at $DIR/string.rs:+1:11: +1:12\n         _5 = discriminant(_1);           // scope 0 at $DIR/string.rs:+1:11: +1:12\n-        switchInt(move _5) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/string.rs:+1:5: +1:12\n+        switchInt(move _5) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/string.rs:+1:5: +1:12\n     }\n \n     bb1: {\n@@ -47,7 +47,7 @@ fn foo(_1: Option<String>) -> i32 {\n     }\n \n     bb4: {\n-        switchInt(move _4) -> [false: bb1, otherwise: bb5]; // scope 0 at $DIR/string.rs:+2:14: +2:17\n+        switchInt(move _4) -> [0: bb1, otherwise: bb5]; // scope 0 at $DIR/string.rs:+2:14: +2:17\n     }\n \n     bb5: {\n@@ -69,6 +69,6 @@ fn foo(_1: Option<String>) -> i32 {\n     }\n \n     bb9: {\n-        switchInt(_7) -> [false: bb7, otherwise: bb8]; // scope 0 at $DIR/string.rs:+5:1: +5:2\n+        switchInt(_7) -> [0: bb7, otherwise: bb8]; // scope 0 at $DIR/string.rs:+5:1: +5:2\n     }\n }"}, {"sha": "fa3eeedc40fffee479371c748617291fe96cd852", "filename": "src/test/mir-opt/derefer_complex_case.main.Derefer.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_complex_case.main.Derefer.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -62,7 +62,7 @@\n       bb3: {\n           StorageDead(_8);                 // scope 1 at $DIR/derefer_complex_case.rs:+1:25: +1:26\n           _10 = discriminant(_7);          // scope 1 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n-          switchInt(move _10) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 1 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n+          switchInt(move _10) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 1 at $DIR/derefer_complex_case.rs:+1:17: +1:26\n       }\n   \n       bb4: {"}, {"sha": "ab2388d1323a85cb6f0ab499ef9c1915fa0c6fc3", "filename": "src/test/mir-opt/derefer_terminator_test.main.Derefer.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fderefer_terminator_test.main.Derefer.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -54,11 +54,11 @@\n           _6 = &_7;                        // scope 2 at $DIR/derefer_terminator_test.rs:+3:18: +3:21\n           _5 = &_6;                        // scope 2 at $DIR/derefer_terminator_test.rs:+3:17: +3:21\n           _4 = &_5;                        // scope 2 at $DIR/derefer_terminator_test.rs:+3:15: +3:22\n--         switchInt((*(*(*(*_4))))) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n+-         switchInt((*(*(*(*_4))))) -> [0: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n +         _10 = deref_copy (*_4);          // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n +         _11 = deref_copy (*_10);         // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n +         _12 = deref_copy (*_11);         // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n-+         switchInt((*_12)) -> [false: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n++         switchInt((*_12)) -> [0: bb3, otherwise: bb4]; // scope 2 at $DIR/derefer_terminator_test.rs:+3:5: +3:22\n       }\n   \n       bb3: {"}, {"sha": "9c729663265e087f5507fb2b769c4d0acbc81eaf", "filename": "src/test/mir-opt/dest-prop/branch.foo.DestinationPropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdest-prop%2Fbranch.foo.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fdest-prop%2Fbranch.foo.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdest-prop%2Fbranch.foo.DestinationPropagation.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -37,7 +37,7 @@\n       }\n   \n       bb2: {\n-          switchInt(move _3) -> [false: bb4, otherwise: bb3]; // scope 1 at $DIR/branch.rs:+3:16: +3:22\n+          switchInt(move _3) -> [0: bb4, otherwise: bb3]; // scope 1 at $DIR/branch.rs:+3:16: +3:22\n       }\n   \n       bb3: {"}, {"sha": "98a02ee38dd1769b2e6bd0cf5bcac0f74b14b2eb", "filename": "src/test/mir-opt/early_otherwise_branch.opt1.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt1.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt1.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt1.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -31,13 +31,13 @@\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch.rs:+1:16: +1:17\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch.rs:+1:16: +1:17\n           _7 = discriminant((_3.0: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _7) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _7) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageLive(_10);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         _10 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageLive(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         _11 = Ne(_7, move _10);          // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageDead(_10);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n-+         switchInt(move _11) -> [false: bb4, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n++         switchInt(move _11) -> [0: bb4, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n       }\n   \n       bb1: {\n@@ -49,7 +49,7 @@\n   \n       bb2: {\n -         _6 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _6) -> [1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _6) -> [1: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n -     }\n - \n -     bb3: {\n@@ -72,7 +72,7 @@\n + \n +     bb4: {\n +         StorageDead(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n-+         switchInt(_7) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n++         switchInt(_7) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n       }\n   }\n   "}, {"sha": "aa75c44b809a90543004dbd7f49c9ec9d949953c", "filename": "src/test/mir-opt/early_otherwise_branch.opt2.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt2.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt2.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt2.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -32,18 +32,18 @@\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch.rs:+1:16: +1:17\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch.rs:+1:16: +1:17\n           _8 = discriminant((_3.0: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _8) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _8) -> [0: bb1, 1: bb3, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageLive(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         _11 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         _12 = Ne(_8, move _11);          // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageDead(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n-+         switchInt(move _12) -> [false: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n++         switchInt(move _12) -> [0: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n       }\n   \n       bb1: {\n -         _6 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _6) -> [0_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _6) -> [0: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n -     }\n - \n -     bb2: {\n@@ -55,7 +55,7 @@\n   \n -     bb3: {\n -         _7 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _7) -> [1_isize: bb4, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _7) -> [1: bb4, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n -     }\n - \n -     bb4: {\n@@ -86,7 +86,7 @@\n + \n +     bb5: {\n +         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n-+         switchInt(_8) -> [0_isize: bb3, 1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n++         switchInt(_8) -> [0: bb3, 1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n       }\n   }\n   "}, {"sha": "cea6ff7cd05e07bd02d4a2c46194cb30969f9908", "filename": "src/test/mir-opt/early_otherwise_branch.opt3.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt3.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt3.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.opt3.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -31,13 +31,13 @@\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch.rs:+1:16: +1:17\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch.rs:+1:16: +1:17\n           _7 = discriminant((_3.0: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _7) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _7) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageLive(_10);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         _10 = discriminant((_3.1: std::option::Option<bool>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageLive(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         _11 = Ne(_7, move _10);          // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n +         StorageDead(_10);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n-+         switchInt(move _11) -> [false: bb4, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n++         switchInt(move _11) -> [0: bb4, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n       }\n   \n       bb1: {\n@@ -49,7 +49,7 @@\n   \n       bb2: {\n -         _6 = discriminant((_3.1: std::option::Option<bool>)); // scope 0 at $DIR/early_otherwise_branch.rs:+1:11: +1:17\n--         switchInt(move _6) -> [1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n+-         switchInt(move _6) -> [1: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n -     }\n - \n -     bb3: {\n@@ -72,7 +72,7 @@\n + \n +     bb4: {\n +         StorageDead(_11);                // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n-+         switchInt(_7) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n++         switchInt(_7) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch.rs:+1:5: +1:17\n       }\n   }\n   "}, {"sha": "b90d70ce43aa0ca0d884663a1a775d85a3a3edf6", "filename": "src/test/mir-opt/early_otherwise_branch_3_element_tuple.opt1.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_3_element_tuple.opt1.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_3_element_tuple.opt1.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_3_element_tuple.opt1.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -42,13 +42,13 @@\n           StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:19: +1:20\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:19: +1:20\n           _10 = discriminant((_4.0: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:11: +1:20\n--         switchInt(move _10) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n+-         switchInt(move _10) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n +         StorageLive(_14);                // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n +         _14 = discriminant((_4.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n +         StorageLive(_15);                // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n +         _15 = Ne(_10, move _14);         // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n +         StorageDead(_14);                // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n-+         switchInt(move _15) -> [false: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n++         switchInt(move _15) -> [0: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n       }\n   \n       bb1: {\n@@ -61,13 +61,13 @@\n   \n       bb2: {\n -         _9 = discriminant((_4.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:11: +1:20\n--         switchInt(move _9) -> [1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n+-         switchInt(move _9) -> [1: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n -     }\n - \n -     bb3: {\n           _8 = discriminant((_4.2: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:11: +1:20\n--         switchInt(move _8) -> [1_isize: bb4, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n-+         switchInt(move _8) -> [1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n+-         switchInt(move _8) -> [1: bb4, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n++         switchInt(move _8) -> [1: bb3, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n       }\n   \n -     bb4: {\n@@ -94,7 +94,7 @@\n + \n +     bb5: {\n +         StorageDead(_15);                // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n-+         switchInt(_10) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n++         switchInt(_10) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_3_element_tuple.rs:+1:5: +1:20\n       }\n   }\n   "}, {"sha": "9edd1a39f45f9b050f4a50d1d1c5875461e45ffe", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -80,13 +80,13 @@\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:23: +5:24\n           _34 = deref_copy (_4.0: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n           _11 = discriminant((*_34));      // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n-          switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n+          switchInt(move _11) -> [0: bb1, 1: bb3, 2: bb4, 3: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n       }\n   \n       bb1: {\n           _35 = deref_copy (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n           _7 = discriminant((*_35));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n-          switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n+          switchInt(move _7) -> [0: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n       }\n   \n       bb2: {\n@@ -104,19 +104,19 @@\n       bb3: {\n           _36 = deref_copy (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n           _8 = discriminant((*_36));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n-          switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n+          switchInt(move _8) -> [1: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n       }\n   \n       bb4: {\n           _37 = deref_copy (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n           _9 = discriminant((*_37));       // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n-          switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n+          switchInt(move _9) -> [2: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n       }\n   \n       bb5: {\n           _38 = deref_copy (_4.1: &ViewportPercentageLength); // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n           _10 = discriminant((*_38));      // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:14: +5:24\n-          switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n+          switchInt(move _10) -> [3: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:+5:8: +5:24\n       }\n   \n       bb6: {"}, {"sha": "82d8b2fc5a463a740edb395c2c44968a2269f016", "filename": "src/test/mir-opt/early_otherwise_branch_noopt.noopt1.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_noopt.noopt1.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_noopt.noopt1.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_noopt.noopt1.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -38,12 +38,12 @@\n           StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:16: +1:17\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:16: +1:17\n           _8 = discriminant((_3.0: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:11: +1:17\n-          switchInt(move _8) -> [0_isize: bb1, 1_isize: bb4, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:5: +1:17\n+          switchInt(move _8) -> [0: bb1, 1: bb4, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:5: +1:17\n       }\n   \n       bb1: {\n           _6 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:11: +1:17\n-          switchInt(move _6) -> [0_isize: bb2, 1_isize: bb7, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:5: +1:17\n+          switchInt(move _6) -> [0: bb2, 1: bb7, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:5: +1:17\n       }\n   \n       bb2: {\n@@ -57,7 +57,7 @@\n   \n       bb4: {\n           _7 = discriminant((_3.1: std::option::Option<u32>)); // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:11: +1:17\n-          switchInt(move _7) -> [0_isize: bb6, 1_isize: bb5, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:5: +1:17\n+          switchInt(move _7) -> [0: bb6, 1: bb5, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_noopt.rs:+1:5: +1:17\n       }\n   \n       bb5: {"}, {"sha": "a3fa2529b1868cb8a113059fb620c811a71b2633", "filename": "src/test/mir-opt/early_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n   \n       bb0: {\n           _3 = discriminant(_1);           // scope 0 at $DIR/early_otherwise_branch_soundness.rs:+1:11: +1:12\n-          switchInt(move _3) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:+1:5: +1:12\n+          switchInt(move _3) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:+1:5: +1:12\n       }\n   \n       bb1: {\n@@ -24,7 +24,7 @@\n   \n       bb2: {\n           _4 = discriminant((*_2));        // scope 0 at $DIR/early_otherwise_branch_soundness.rs:+3:26: +3:28\n-          switchInt(move _4) -> [1_isize: bb4, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:+3:20: +3:28\n+          switchInt(move _4) -> [1: bb4, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:+3:20: +3:28\n       }\n   \n       bb3: {"}, {"sha": "6d0224b547f4fe2036ac730d6e5b289ac1627328", "filename": "src/test/mir-opt/early_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -12,13 +12,13 @@\n   \n       bb0: {\n           _3 = discriminant((*_1));        // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n-          switchInt(move _3) -> [1_isize: bb1, otherwise: bb3]; // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n+          switchInt(move _3) -> [1: bb1, otherwise: bb3]; // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n       }\n   \n       bb1: {\n           _4 = deref_copy (((*_1) as Some).0: &E<'_>); // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n           _2 = discriminant((*_4));        // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n-          switchInt(move _2) -> [1_isize: bb2, otherwise: bb3]; // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n+          switchInt(move _2) -> [1: bb2, otherwise: bb3]; // scope 1 at $DIR/early_otherwise_branch_soundness.rs:+1:12: +1:31\n       }\n   \n       bb2: {"}, {"sha": "8b542a7c19d63ae1f189275a83713485de931875", "filename": "src/test/mir-opt/equal_true.opt.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fequal_true.opt.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fequal_true.opt.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fequal_true.opt.InstCombine.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n -         _2 = Eq(move _3, const true);    // scope 0 at $DIR/equal_true.rs:+1:8: +1:17\n +         _2 = move _3;                    // scope 0 at $DIR/equal_true.rs:+1:8: +1:17\n           StorageDead(_3);                 // scope 0 at $DIR/equal_true.rs:+1:16: +1:17\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/equal_true.rs:+1:8: +1:17\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/equal_true.rs:+1:8: +1:17\n       }\n   \n       bb1: {"}, {"sha": "ab955049965ada01ad44a6744c897e80d9f3fcdf", "filename": "src/test/mir-opt/exponential_or.match_tuple.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fexponential_or.match_tuple.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fexponential_or.match_tuple.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fexponential_or.match_tuple.SimplifyCfg-initial.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -19,7 +19,7 @@ fn match_tuple(_1: (u32, bool, Option<i32>, u32)) -> u32 {\n \n     bb0: {\n         FakeRead(ForMatchedPlace(None), _1); // scope 0 at $DIR/exponential_or.rs:+1:11: +1:12\n-        switchInt((_1.0: u32)) -> [1_u32: bb2, 4_u32: bb2, otherwise: bb1]; // scope 0 at $DIR/exponential_or.rs:+2:15: +2:20\n+        switchInt((_1.0: u32)) -> [1: bb2, 4: bb2, otherwise: bb1]; // scope 0 at $DIR/exponential_or.rs:+2:15: +2:20\n     }\n \n     bb1: {\n@@ -29,31 +29,31 @@ fn match_tuple(_1: (u32, bool, Option<i32>, u32)) -> u32 {\n \n     bb2: {\n         _2 = discriminant((_1.2: std::option::Option<i32>)); // scope 0 at $DIR/exponential_or.rs:+2:37: +2:55\n-        switchInt(move _2) -> [0_isize: bb4, 1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/exponential_or.rs:+2:37: +2:55\n+        switchInt(move _2) -> [0: bb4, 1: bb3, otherwise: bb1]; // scope 0 at $DIR/exponential_or.rs:+2:37: +2:55\n     }\n \n     bb3: {\n-        switchInt((((_1.2: std::option::Option<i32>) as Some).0: i32)) -> [1_i32: bb4, 8_i32: bb4, otherwise: bb1]; // scope 0 at $DIR/exponential_or.rs:+2:37: +2:55\n+        switchInt((((_1.2: std::option::Option<i32>) as Some).0: i32)) -> [1: bb4, 8: bb4, otherwise: bb1]; // scope 0 at $DIR/exponential_or.rs:+2:37: +2:55\n     }\n \n     bb4: {\n         _5 = Le(const 6_u32, (_1.3: u32)); // scope 0 at $DIR/exponential_or.rs:+2:62: +2:67\n-        switchInt(move _5) -> [false: bb6, otherwise: bb5]; // scope 0 at $DIR/exponential_or.rs:+2:62: +2:67\n+        switchInt(move _5) -> [0: bb6, otherwise: bb5]; // scope 0 at $DIR/exponential_or.rs:+2:62: +2:67\n     }\n \n     bb5: {\n         _6 = Le((_1.3: u32), const 9_u32); // scope 0 at $DIR/exponential_or.rs:+2:62: +2:67\n-        switchInt(move _6) -> [false: bb6, otherwise: bb8]; // scope 0 at $DIR/exponential_or.rs:+2:62: +2:67\n+        switchInt(move _6) -> [0: bb6, otherwise: bb8]; // scope 0 at $DIR/exponential_or.rs:+2:62: +2:67\n     }\n \n     bb6: {\n         _3 = Le(const 13_u32, (_1.3: u32)); // scope 0 at $DIR/exponential_or.rs:+2:70: +2:77\n-        switchInt(move _3) -> [false: bb1, otherwise: bb7]; // scope 0 at $DIR/exponential_or.rs:+2:70: +2:77\n+        switchInt(move _3) -> [0: bb1, otherwise: bb7]; // scope 0 at $DIR/exponential_or.rs:+2:70: +2:77\n     }\n \n     bb7: {\n         _4 = Le((_1.3: u32), const 16_u32); // scope 0 at $DIR/exponential_or.rs:+2:70: +2:77\n-        switchInt(move _4) -> [false: bb1, otherwise: bb8]; // scope 0 at $DIR/exponential_or.rs:+2:70: +2:77\n+        switchInt(move _4) -> [0: bb1, otherwise: bb8]; // scope 0 at $DIR/exponential_or.rs:+2:70: +2:77\n     }\n \n     bb8: {"}, {"sha": "c1c2cde71ab5b38f485885cd7f3a60bc4f13ad37", "filename": "src/test/mir-opt/funky_arms.float_to_exponential_common.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Ffunky_arms.float_to_exponential_common.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Ffunky_arms.float_to_exponential_common.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Ffunky_arms.float_to_exponential_common.ConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -47,7 +47,7 @@\n       bb1: {\n           StorageDead(_5);                 // scope 0 at $DIR/funky_arms.rs:+4:36: +4:37\n           StorageLive(_6);                 // scope 1 at $DIR/funky_arms.rs:+8:9: +8:13\n-          switchInt(_4) -> [false: bb3, otherwise: bb2]; // scope 1 at $DIR/funky_arms.rs:+8:16: +8:32\n+          switchInt(_4) -> [0: bb3, otherwise: bb2]; // scope 1 at $DIR/funky_arms.rs:+8:16: +8:32\n       }\n   \n       bb2: {\n@@ -75,7 +75,7 @@\n       bb5: {\n           StorageDead(_8);                 // scope 3 at $DIR/funky_arms.rs:+13:44: +13:45\n           _9 = discriminant(_7);           // scope 3 at $DIR/funky_arms.rs:+13:12: +13:27\n-          switchInt(move _9) -> [1_isize: bb6, otherwise: bb8]; // scope 3 at $DIR/funky_arms.rs:+13:12: +13:27\n+          switchInt(move _9) -> [1: bb6, otherwise: bb8]; // scope 3 at $DIR/funky_arms.rs:+13:12: +13:27\n       }\n   \n       bb6: {"}, {"sha": "a8e090020c3d31bb70ee083e59d02adc982a4d36", "filename": "src/test/mir-opt/generator_drop_cleanup.main-{closure#0}.generator_drop.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator_drop_cleanup.main-%7Bclosure%230%7D.generator_drop.0.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -29,7 +29,7 @@ fn main::{closure#0}(_1: *mut [generator@$DIR/generator_drop_cleanup.rs:10:15: 1\n \n     bb0: {\n         _8 = discriminant((*_1));        // scope 0 at $DIR/generator_drop_cleanup.rs:+0:15: +3:6\n-        switchInt(move _8) -> [0_u32: bb7, 3_u32: bb10, otherwise: bb11]; // scope 0 at $DIR/generator_drop_cleanup.rs:+0:15: +3:6\n+        switchInt(move _8) -> [0: bb7, 3: bb10, otherwise: bb11]; // scope 0 at $DIR/generator_drop_cleanup.rs:+0:15: +3:6\n     }\n \n     bb1: {"}, {"sha": "b3d3c768a5dd9a22ded6107eec3ec9f87c196c3c", "filename": "src/test/mir-opt/generator_tiny.main-{closure#0}.generator_resume.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator_tiny.main-%7Bclosure%230%7D.generator_resume.0.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -32,7 +32,7 @@ fn main::{closure#0}(_1: Pin<&mut [generator@$DIR/generator_tiny.rs:19:16: 19:24\n \n     bb0: {\n         _11 = discriminant((*(_1.0: &mut [generator@$DIR/generator_tiny.rs:19:16: 19:24]))); // scope 0 at $DIR/generator_tiny.rs:+0:16: +6:6\n-        switchInt(move _11) -> [0_u32: bb1, 3_u32: bb5, otherwise: bb6]; // scope 0 at $DIR/generator_tiny.rs:+0:16: +6:6\n+        switchInt(move _11) -> [0: bb1, 3: bb5, otherwise: bb6]; // scope 0 at $DIR/generator_tiny.rs:+0:16: +6:6\n     }\n \n     bb1: {"}, {"sha": "de4235c9e9e935f7e65cf743d98593365495d122", "filename": "src/test/mir-opt/if_condition_int.dont_opt_bool.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_bool.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_bool.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_bool.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -9,7 +9,7 @@\n       bb0: {\n           StorageLive(_2);                 // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n           _2 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n       }\n   \n       bb1: {"}, {"sha": "754c6579af08fc3c91bc1a645e18e45ebe6090ba", "filename": "src/test/mir-opt/if_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_opt_floats.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -13,7 +13,7 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n           _2 = Eq(move _3, const -42f32);  // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:18\n           StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:17: +1:18\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:18\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:18\n       }\n   \n       bb1: {"}, {"sha": "ff23839e29179fa1bb413e5ac09d2ac5820f2800", "filename": "src/test/mir-opt/if_condition_int.dont_remove_comparison.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_remove_comparison.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_remove_comparison.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.dont_remove_comparison.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -20,10 +20,10 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:13: +1:14\n -         _2 = Eq(move _3, const 17_i8);   // scope 0 at $DIR/if_condition_int.rs:+1:13: +1:20\n -         StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:19: +1:20\n--         switchInt(_2) -> [false: bb2, otherwise: bb1]; // scope 1 at $DIR/if_condition_int.rs:+2:5: +2:12\n+-         switchInt(_2) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/if_condition_int.rs:+2:5: +2:12\n +         _2 = Eq(_3, const 17_i8);        // scope 0 at $DIR/if_condition_int.rs:+1:13: +1:20\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:19: +1:20\n-+         switchInt(move _3) -> [17_i8: bb1, otherwise: bb2]; // scope 1 at $DIR/if_condition_int.rs:+2:5: +2:12\n++         switchInt(move _3) -> [17: bb1, otherwise: bb2]; // scope 1 at $DIR/if_condition_int.rs:+2:5: +2:12\n       }\n   \n       bb1: {"}, {"sha": "5964d76a4b96f24149c2bddbf3081d38f05a1cbe", "filename": "src/test/mir-opt/if_condition_int.opt_char.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_char.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_char.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_char.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -13,10 +13,10 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n -         _2 = Eq(move _3, const 'x');     // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n -         StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:15: +1:16\n--         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n+-         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:15: +1:16\n-+         switchInt(move _3) -> ['x': bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n++         switchInt(move _3) -> [120: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n       }\n   \n       bb1: {"}, {"sha": "98918cc743ce0efb6ad9f3661b30b3f4a21c9178", "filename": "src/test/mir-opt/if_condition_int.opt_i8.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_i8.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_i8.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_i8.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -13,10 +13,10 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n -         _2 = Eq(move _3, const 42_i8);   // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n -         StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:14: +1:15\n--         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n+-         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:14: +1:15\n-+         switchInt(move _3) -> [42_i8: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n++         switchInt(move _3) -> [42: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n       }\n   \n       bb1: {"}, {"sha": "db38140b8d00b576c2bdbe4626894202908cb8d2", "filename": "src/test/mir-opt/if_condition_int.opt_multiple_ifs.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_multiple_ifs.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_multiple_ifs.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_multiple_ifs.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -15,10 +15,10 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n -         _2 = Eq(move _3, const 42_u32);  // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n -         StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:14: +1:15\n--         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n+-         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:14: +1:15\n-+         switchInt(move _3) -> [42_u32: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n++         switchInt(move _3) -> [42: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n       }\n   \n       bb1: {\n@@ -34,10 +34,10 @@\n           _5 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:16\n -         _4 = Ne(move _5, const 21_u32);  // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:22\n -         StorageDead(_5);                 // scope 0 at $DIR/if_condition_int.rs:+3:21: +3:22\n--         switchInt(move _4) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:22\n+-         switchInt(move _4) -> [0: bb4, otherwise: bb3]; // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:22\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:22\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+3:21: +3:22\n-+         switchInt(move _5) -> [21_u32: bb4, otherwise: bb3]; // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:22\n++         switchInt(move _5) -> [21: bb4, otherwise: bb3]; // scope 0 at $DIR/if_condition_int.rs:+3:15: +3:22\n       }\n   \n       bb3: {"}, {"sha": "1a1ac4caafaf0ee363dbd4097aab1cf5137604de", "filename": "src/test/mir-opt/if_condition_int.opt_negative.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_negative.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_negative.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_negative.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -13,10 +13,10 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n -         _2 = Eq(move _3, const -42_i32); // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n -         StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:15: +1:16\n--         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n+-         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:15: +1:16\n-+         switchInt(move _3) -> [-42_i32: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n++         switchInt(move _3) -> [4294967254: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:16\n       }\n   \n       bb1: {"}, {"sha": "fc3f50227dcb93718c1e48496ecc29160c5d905c", "filename": "src/test/mir-opt/if_condition_int.opt_u32.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_u32.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_u32.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fif_condition_int.opt_u32.SimplifyComparisonIntegral.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -13,10 +13,10 @@\n           _3 = _1;                         // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:9\n -         _2 = Eq(move _3, const 42_u32);  // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n -         StorageDead(_3);                 // scope 0 at $DIR/if_condition_int.rs:+1:14: +1:15\n--         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n+-         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n +         nop;                             // scope 0 at $DIR/if_condition_int.rs:+1:14: +1:15\n-+         switchInt(move _3) -> [42_u32: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n++         switchInt(move _3) -> [42: bb1, otherwise: bb2]; // scope 0 at $DIR/if_condition_int.rs:+1:8: +1:15\n       }\n   \n       bb1: {"}, {"sha": "b787a19f4b21c0d9c82050872e791553984abcbc", "filename": "src/test/mir-opt/inline/inline_diverging.g.Inline.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_diverging.g.Inline.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -19,7 +19,7 @@\n           _3 = _1;                         // scope 0 at $DIR/inline_diverging.rs:+1:8: +1:9\n           _2 = Gt(move _3, const 0_i32);   // scope 0 at $DIR/inline_diverging.rs:+1:8: +1:13\n           StorageDead(_3);                 // scope 0 at $DIR/inline_diverging.rs:+1:12: +1:13\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/inline_diverging.rs:+1:8: +1:13\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/inline_diverging.rs:+1:8: +1:13\n       }\n   \n       bb1: {"}, {"sha": "bd21405f14b3fcc663cbefef4caa0fb860c690d1", "filename": "src/test/mir-opt/inline/inline_generator.main.Inline.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_generator.main.Inline.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -72,7 +72,7 @@\n +         _7 = const false;                // scope 0 at $DIR/inline_generator.rs:+1:14: +1:46\n +         _10 = deref_copy (_2.0: &mut [generator@$DIR/inline_generator.rs:15:5: 15:8]); // scope 6 at $DIR/inline_generator.rs:15:5: 15:41\n +         _9 = discriminant((*_10));       // scope 6 at $DIR/inline_generator.rs:15:5: 15:41\n-+         switchInt(move _9) -> [0_u32: bb3, 1_u32: bb8, 3_u32: bb7, otherwise: bb9]; // scope 6 at $DIR/inline_generator.rs:15:5: 15:41\n++         switchInt(move _9) -> [0: bb3, 1: bb8, 3: bb7, otherwise: bb9]; // scope 6 at $DIR/inline_generator.rs:15:5: 15:41\n       }\n   \n -     bb3: {\n@@ -92,7 +92,7 @@\n + \n +     bb3: {\n +         StorageLive(_8);                 // scope 6 at $DIR/inline_generator.rs:15:17: 15:39\n-+         switchInt(move _7) -> [false: bb5, otherwise: bb4]; // scope 6 at $DIR/inline_generator.rs:15:20: 15:21\n++         switchInt(move _7) -> [0: bb5, otherwise: bb4]; // scope 6 at $DIR/inline_generator.rs:15:20: 15:21\n +     }\n + \n +     bb4: {"}, {"sha": "36ddb189e0d3365eabea7fa2a977a89d9cb29fdf", "filename": "src/test/mir-opt/inline/inline_shims.drop.Inline.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.drop.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.drop.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_shims.drop.Inline.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -39,7 +39,7 @@\n +         StorageLive(_6);                 // scope 2 at $DIR/inline_shims.rs:+2:14: +2:40\n +         StorageLive(_7);                 // scope 2 at $DIR/inline_shims.rs:+2:14: +2:40\n +         _6 = discriminant((*_5));        // scope 3 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n-+         switchInt(move _6) -> [0_isize: bb2, otherwise: bb3]; // scope 3 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n++         switchInt(move _6) -> [0: bb2, otherwise: bb3]; // scope 3 at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n       }\n   \n       bb2: {"}, {"sha": "2f6f5f87efcc7a8c911a53a449660f9f0b61c53f", "filename": "src/test/mir-opt/instrument_coverage.main.InstrumentCoverage.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -26,7 +26,7 @@\n       }\n   \n       bb3: {\n-          switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at /the/src/instrument_coverage.rs:+2:12: +2:17\n+          switchInt(move _2) -> [0: bb5, otherwise: bb4]; // scope 0 at /the/src/instrument_coverage.rs:+2:12: +2:17\n       }\n   \n       bb4: {"}, {"sha": "b0d5b291b6cb55c734a24f0f43c19eed94c4b341", "filename": "src/test/mir-opt/issue_38669.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_38669.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_38669.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_38669.main.SimplifyCfg-initial.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -26,7 +26,7 @@ fn main() -> () {\n         StorageLive(_3);                 // scope 1 at $DIR/issue_38669.rs:+3:9: +5:10\n         StorageLive(_4);                 // scope 1 at $DIR/issue_38669.rs:+3:12: +3:24\n         _4 = _1;                         // scope 1 at $DIR/issue_38669.rs:+3:12: +3:24\n-        switchInt(move _4) -> [false: bb4, otherwise: bb3]; // scope 1 at $DIR/issue_38669.rs:+3:12: +3:24\n+        switchInt(move _4) -> [0: bb4, otherwise: bb3]; // scope 1 at $DIR/issue_38669.rs:+3:12: +3:24\n     }\n \n     bb3: {"}, {"sha": "c2ea3ac502f89dc3f89446f4700bea44444d19a4", "filename": "src/test/mir-opt/issue_41110.main.ElaborateDrops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_41110.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_41110.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_41110.main.ElaborateDrops.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -65,6 +65,6 @@ fn main() -> () {\n     }\n \n     bb8 (cleanup): {\n-        switchInt(_5) -> [false: bb6, otherwise: bb7]; // scope 0 at $DIR/issue_41110.rs:+1:27: +1:28\n+        switchInt(_5) -> [0: bb6, otherwise: bb7]; // scope 0 at $DIR/issue_41110.rs:+1:27: +1:28\n     }\n }"}, {"sha": "82989c3f071b43d39f022ca6dadc2e802aa7404e", "filename": "src/test/mir-opt/issue_41110.test.ElaborateDrops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -96,6 +96,6 @@ fn test() -> () {\n     }\n \n     bb14 (cleanup): {\n-        switchInt(_6) -> [false: bb10, otherwise: bb13]; // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n+        switchInt(_6) -> [0: bb10, otherwise: bb13]; // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n     }\n }"}, {"sha": "00504273245b1d2a9acb320e5a5929061fb6a401", "filename": "src/test/mir-opt/issue_41888.main.ElaborateDrops.after.mir", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -33,7 +33,7 @@ fn main() -> () {\n     }\n \n     bb1: {\n-        switchInt(move _2) -> [false: bb7, otherwise: bb2]; // scope 1 at $DIR/issue_41888.rs:+2:8: +2:14\n+        switchInt(move _2) -> [0: bb7, otherwise: bb2]; // scope 1 at $DIR/issue_41888.rs:+2:8: +2:14\n     }\n \n     bb2: {\n@@ -52,7 +52,7 @@ fn main() -> () {\n     bb4: {\n         StorageDead(_3);                 // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n         _5 = discriminant(_1);           // scope 2 at $DIR/issue_41888.rs:+4:16: +4:24\n-        switchInt(move _5) -> [0_isize: bb5, otherwise: bb6]; // scope 2 at $DIR/issue_41888.rs:+4:16: +4:24\n+        switchInt(move _5) -> [0: bb5, otherwise: bb6]; // scope 2 at $DIR/issue_41888.rs:+4:16: +4:24\n     }\n \n     bb5: {\n@@ -134,19 +134,19 @@ fn main() -> () {\n \n     bb19: {\n         _10 = discriminant(_1);          // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n-        switchInt(move _10) -> [0_isize: bb15, otherwise: bb17]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n+        switchInt(move _10) -> [0: bb15, otherwise: bb17]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n     }\n \n     bb20: {\n-        switchInt(_7) -> [false: bb15, otherwise: bb19]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n+        switchInt(_7) -> [0: bb15, otherwise: bb19]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n     }\n \n     bb21 (cleanup): {\n         _11 = discriminant(_1);          // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n-        switchInt(move _11) -> [0_isize: bb16, otherwise: bb18]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n+        switchInt(move _11) -> [0: bb16, otherwise: bb18]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n     }\n \n     bb22 (cleanup): {\n-        switchInt(_7) -> [false: bb12, otherwise: bb21]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n+        switchInt(_7) -> [0: bb12, otherwise: bb21]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n     }\n }"}, {"sha": "adfa3a7733b1d6ed1819c1b7a829d2939c7fade5", "filename": "src/test/mir-opt/issue_62289.test.ElaborateDrops.before.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_62289.test.ElaborateDrops.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_62289.test.ElaborateDrops.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_62289.test.ElaborateDrops.before.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -52,7 +52,7 @@ fn test() -> Option<Box<u32>> {\n     bb2: {\n         StorageDead(_7);                 // scope 0 at $DIR/issue_62289.rs:+1:19: +1:20\n         _8 = discriminant(_6);           // scope 0 at $DIR/issue_62289.rs:+1:15: +1:20\n-        switchInt(move _8) -> [0_isize: bb3, 1_isize: bb5, otherwise: bb4]; // scope 0 at $DIR/issue_62289.rs:+1:15: +1:20\n+        switchInt(move _8) -> [0: bb3, 1: bb5, otherwise: bb4]; // scope 0 at $DIR/issue_62289.rs:+1:15: +1:20\n     }\n \n     bb3: {"}, {"sha": "17b81633991fec12dfa7ead2aa8edb71d8080e89", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -116,7 +116,7 @@\n           StorageDead(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _15 = Not(move _16);             // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_16);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          switchInt(move _15) -> [false: bb5, otherwise: bb4]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          switchInt(move _15) -> [0: bb5, otherwise: bb4]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n   \n       bb4: {"}, {"sha": "3e035c18db862f3adcda96875dce95195dda1ca9", "filename": "src/test/mir-opt/issue_99325.main.built.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_99325.main.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissue_99325.main.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_99325.main.built.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -109,7 +109,7 @@ fn main() -> () {\n         StorageDead(_12);                // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n         _10 = Not(move _11);             // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n         StorageDead(_11);                // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-        switchInt(move _10) -> [false: bb4, otherwise: bb3]; // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+        switchInt(move _10) -> [0: bb4, otherwise: bb3]; // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n     }\n \n     bb3: {\n@@ -218,7 +218,7 @@ fn main() -> () {\n         StorageDead(_33);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n         _31 = Not(move _32);             // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n         StorageDead(_32);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-        switchInt(move _31) -> [false: bb13, otherwise: bb12]; // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+        switchInt(move _31) -> [0: bb13, otherwise: bb12]; // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n     }\n \n     bb12: {"}, {"sha": "e0d6b58f229c4a63be620ad3d46b16ac70629b9e", "filename": "src/test/mir-opt/issues/issue_59352.num_to_digit.PreCodegen.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_59352.num_to_digit.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_59352.num_to_digit.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_59352.num_to_digit.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -47,7 +47,7 @@ fn num_to_digit(_1: char) -> u32 {\n \n     bb2: {\n         _7 = discriminant(_2);           // scope 3 at $SRC_DIR/core/src/option.rs:LL:COL\n-        switchInt(move _7) -> [0_isize: bb6, 1_isize: bb8, otherwise: bb7]; // scope 3 at $SRC_DIR/core/src/option.rs:LL:COL\n+        switchInt(move _7) -> [0: bb6, 1: bb8, otherwise: bb7]; // scope 3 at $SRC_DIR/core/src/option.rs:LL:COL\n     }\n \n     bb3: {\n@@ -66,7 +66,7 @@ fn num_to_digit(_1: char) -> u32 {\n         StorageDead(_4);                 // scope 1 at $SRC_DIR/core/src/char/methods.rs:LL:COL\n         StorageDead(_5);                 // scope 1 at $SRC_DIR/core/src/char/methods.rs:LL:COL\n         StorageDead(_3);                 // scope 0 at $DIR/issue_59352.rs:+2:8: +2:23\n-        switchInt(move _9) -> [1_isize: bb1, otherwise: bb3]; // scope 0 at $DIR/issue_59352.rs:+2:8: +2:23\n+        switchInt(move _9) -> [1: bb1, otherwise: bb3]; // scope 0 at $DIR/issue_59352.rs:+2:8: +2:23\n     }\n \n     bb6: {"}, {"sha": "1c69a6232d60631e30f8b36dc538819916abf6bc", "filename": "src/test/mir-opt/issues/issue_75439.foo.MatchBranchSimplification.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_75439.foo.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_75439.foo.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissues%2Fissue_75439.foo.MatchBranchSimplification.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -32,15 +32,15 @@\n   \n       bb1: {\n           StorageDead(_3);                 // scope 2 at $DIR/issue_75439.rs:+2:52: +2:53\n-          switchInt(_2[0 of 4]) -> [0_u32: bb2, otherwise: bb8]; // scope 3 at $DIR/issue_75439.rs:+4:12: +4:30\n+          switchInt(_2[0 of 4]) -> [0: bb2, otherwise: bb8]; // scope 3 at $DIR/issue_75439.rs:+4:12: +4:30\n       }\n   \n       bb2: {\n-          switchInt(_2[1 of 4]) -> [0_u32: bb3, otherwise: bb8]; // scope 3 at $DIR/issue_75439.rs:+4:12: +4:30\n+          switchInt(_2[1 of 4]) -> [0: bb3, otherwise: bb8]; // scope 3 at $DIR/issue_75439.rs:+4:12: +4:30\n       }\n   \n       bb3: {\n-          switchInt(_2[2 of 4]) -> [0_u32: bb5, 4294901760_u32: bb6, otherwise: bb8]; // scope 3 at $DIR/issue_75439.rs:+4:12: +4:30\n+          switchInt(_2[2 of 4]) -> [0: bb5, 4294901760: bb6, otherwise: bb8]; // scope 3 at $DIR/issue_75439.rs:+4:12: +4:30\n       }\n   \n       bb4: {"}, {"sha": "4ee2dae49b3f34652228d4b6b1379a4249313edf", "filename": "src/test/mir-opt/loop_test.main.SimplifyCfg-promote-consts.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Floop_test.main.SimplifyCfg-promote-consts.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Floop_test.main.SimplifyCfg-promote-consts.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Floop_test.main.SimplifyCfg-promote-consts.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -16,7 +16,7 @@ fn main() -> () {\n         StorageLive(_1);                 // scope 0 at $DIR/loop_test.rs:+4:5: +6:6\n         StorageLive(_2);                 // scope 0 at $DIR/loop_test.rs:+4:8: +4:12\n         _2 = const true;                 // scope 0 at $DIR/loop_test.rs:+4:8: +4:12\n-        switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/loop_test.rs:+4:8: +4:12\n+        switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/loop_test.rs:+4:8: +4:12\n     }\n \n     bb1: {"}, {"sha": "9bc7060e958ebf56c4083692fc647fcc9d746149", "filename": "src/test/mir-opt/lower_array_len.array_bound.NormalizeArrayLen.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len.array_bound.NormalizeArrayLen.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len.array_bound.NormalizeArrayLen.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_array_len.array_bound.NormalizeArrayLen.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -38,7 +38,7 @@\n           _3 = Lt(move _4, move _5);       // scope 0 at $DIR/lower_array_len.rs:+1:8: +1:27\n           StorageDead(_5);                 // scope 0 at $DIR/lower_array_len.rs:+1:26: +1:27\n           StorageDead(_4);                 // scope 0 at $DIR/lower_array_len.rs:+1:26: +1:27\n-          switchInt(move _3) -> [false: bb4, otherwise: bb2]; // scope 0 at $DIR/lower_array_len.rs:+1:8: +1:27\n+          switchInt(move _3) -> [0: bb4, otherwise: bb2]; // scope 0 at $DIR/lower_array_len.rs:+1:8: +1:27\n       }\n   \n       bb2: {"}, {"sha": "cf427cfd1e6dbb7a71c4b57401847c4b37cc500a", "filename": "src/test/mir-opt/lower_array_len.array_bound_mut.NormalizeArrayLen.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len.array_bound_mut.NormalizeArrayLen.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len.array_bound_mut.NormalizeArrayLen.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_array_len.array_bound_mut.NormalizeArrayLen.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -41,7 +41,7 @@\n           _3 = Lt(move _4, move _5);       // scope 0 at $DIR/lower_array_len.rs:+1:8: +1:27\n           StorageDead(_5);                 // scope 0 at $DIR/lower_array_len.rs:+1:26: +1:27\n           StorageDead(_4);                 // scope 0 at $DIR/lower_array_len.rs:+1:26: +1:27\n-          switchInt(move _3) -> [false: bb4, otherwise: bb2]; // scope 0 at $DIR/lower_array_len.rs:+1:8: +1:27\n+          switchInt(move _3) -> [0: bb4, otherwise: bb2]; // scope 0 at $DIR/lower_array_len.rs:+1:8: +1:27\n       }\n   \n       bb2: {"}, {"sha": "701c2ad705af2997fdf4e501f706819260a5bd27", "filename": "src/test/mir-opt/lower_array_len_e2e.array_bound.PreCodegen.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.array_bound.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.array_bound.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.array_bound.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -19,7 +19,7 @@ fn array_bound(_1: usize, _2: &[u8; N]) -> u8 {\n         _3 = Lt(move _4, move _5);       // scope 0 at $DIR/lower_array_len_e2e.rs:+1:8: +1:27\n         StorageDead(_5);                 // scope 0 at $DIR/lower_array_len_e2e.rs:+1:26: +1:27\n         StorageDead(_4);                 // scope 0 at $DIR/lower_array_len_e2e.rs:+1:26: +1:27\n-        switchInt(move _3) -> [false: bb3, otherwise: bb1]; // scope 0 at $DIR/lower_array_len_e2e.rs:+1:8: +1:27\n+        switchInt(move _3) -> [0: bb3, otherwise: bb1]; // scope 0 at $DIR/lower_array_len_e2e.rs:+1:8: +1:27\n     }\n \n     bb1: {"}, {"sha": "0440cfce2893f152437667e746632f89763ecb4b", "filename": "src/test/mir-opt/lower_array_len_e2e.array_bound_mut.PreCodegen.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.array_bound_mut.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.array_bound_mut.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_array_len_e2e.array_bound_mut.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -22,7 +22,7 @@ fn array_bound_mut(_1: usize, _2: &mut [u8; N]) -> u8 {\n         _3 = Lt(move _4, move _5);       // scope 0 at $DIR/lower_array_len_e2e.rs:+1:8: +1:27\n         StorageDead(_5);                 // scope 0 at $DIR/lower_array_len_e2e.rs:+1:26: +1:27\n         StorageDead(_4);                 // scope 0 at $DIR/lower_array_len_e2e.rs:+1:26: +1:27\n-        switchInt(move _3) -> [false: bb3, otherwise: bb1]; // scope 0 at $DIR/lower_array_len_e2e.rs:+1:8: +1:27\n+        switchInt(move _3) -> [0: bb3, otherwise: bb1]; // scope 0 at $DIR/lower_array_len_e2e.rs:+1:8: +1:27\n     }\n \n     bb1: {"}, {"sha": "2b0370cf35800c3f157f81008023abdd6348d4c6", "filename": "src/test/mir-opt/lower_slice_len.bound.LowerSliceLenCalls.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_slice_len.bound.LowerSliceLenCalls.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Flower_slice_len.bound.LowerSliceLenCalls.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_slice_len.bound.LowerSliceLenCalls.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -33,7 +33,7 @@\n           _3 = Lt(move _4, move _5);       // scope 0 at $DIR/lower_slice_len.rs:+1:8: +1:27\n           StorageDead(_5);                 // scope 0 at $DIR/lower_slice_len.rs:+1:26: +1:27\n           StorageDead(_4);                 // scope 0 at $DIR/lower_slice_len.rs:+1:26: +1:27\n-          switchInt(move _3) -> [false: bb4, otherwise: bb2]; // scope 0 at $DIR/lower_slice_len.rs:+1:8: +1:27\n+          switchInt(move _3) -> [0: bb4, otherwise: bb2]; // scope 0 at $DIR/lower_slice_len.rs:+1:8: +1:27\n       }\n   \n       bb2: {"}, {"sha": "84e4d35f908170560e24550e7d6239ecd7cdeae1", "filename": "src/test/mir-opt/match_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatch_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatch_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_arm_scopes.complicated_match.SimplifyCfg-initial.after-ElaborateDrops.after.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -32,26 +32,26 @@\n   \n       bb0: {\n -         FakeRead(ForMatchedPlace(None), _2); // scope 0 at $DIR/match_arm_scopes.rs:+1:11: +1:16\n--         switchInt((_2.0: bool)) -> [false: bb1, otherwise: bb2]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n-+         switchInt((_2.0: bool)) -> [false: bb5, otherwise: bb1]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n+-         switchInt((_2.0: bool)) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n++         switchInt((_2.0: bool)) -> [0: bb5, otherwise: bb1]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n       }\n   \n       bb1: {\n -         falseEdge -> [real: bb8, imaginary: bb3]; // scope 0 at $DIR/match_arm_scopes.rs:+2:9: +2:22\n-+         switchInt((_2.1: bool)) -> [false: bb10, otherwise: bb2]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n++         switchInt((_2.1: bool)) -> [0: bb10, otherwise: bb2]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n       }\n   \n       bb2: {\n--         switchInt((_2.1: bool)) -> [false: bb3, otherwise: bb4]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n-+         switchInt((_2.0: bool)) -> [false: bb3, otherwise: bb17]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n+-         switchInt((_2.1: bool)) -> [0: bb3, otherwise: bb4]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n++         switchInt((_2.0: bool)) -> [0: bb3, otherwise: bb17]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n       }\n   \n       bb3: {\n -         falseEdge -> [real: bb13, imaginary: bb5]; // scope 0 at $DIR/match_arm_scopes.rs:+2:25: +2:38\n -     }\n - \n -     bb4: {\n--         switchInt((_2.0: bool)) -> [false: bb6, otherwise: bb5]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n+-         switchInt((_2.0: bool)) -> [0: bb6, otherwise: bb5]; // scope 0 at $DIR/match_arm_scopes.rs:+1:5: +1:16\n -     }\n - \n -     bb5: {\n@@ -85,8 +85,8 @@\n           StorageLive(_9);                 // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n           StorageLive(_10);                // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n           _10 = _1;                        // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n--         switchInt(move _10) -> [false: bb10, otherwise: bb9]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n-+         switchInt(move _10) -> [false: bb7, otherwise: bb6]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n+-         switchInt(move _10) -> [0: bb10, otherwise: bb9]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n++         switchInt(move _10) -> [0: bb7, otherwise: bb6]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n       }\n   \n -     bb9: {\n@@ -101,8 +101,8 @@\n -     bb10: {\n +     bb7: {\n           _9 = (*_6);                      // scope 0 at $DIR/match_arm_scopes.rs:+2:70: +2:71\n--         switchInt(move _9) -> [false: bb12, otherwise: bb11]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n-+         switchInt(move _9) -> [false: bb9, otherwise: bb8]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n+-         switchInt(move _9) -> [0: bb12, otherwise: bb11]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n++         switchInt(move _9) -> [0: bb9, otherwise: bb8]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n       }\n   \n -     bb11: {\n@@ -142,8 +142,8 @@\n           StorageLive(_12);                // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n           StorageLive(_13);                // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n           _13 = _1;                        // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n--         switchInt(move _13) -> [false: bb15, otherwise: bb14]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n-+         switchInt(move _13) -> [false: bb12, otherwise: bb11]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n+-         switchInt(move _13) -> [0: bb15, otherwise: bb14]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n++         switchInt(move _13) -> [0: bb12, otherwise: bb11]; // scope 0 at $DIR/match_arm_scopes.rs:+2:45: +2:49\n       }\n   \n -     bb14: {\n@@ -158,8 +158,8 @@\n -     bb15: {\n +     bb12: {\n           _12 = (*_6);                     // scope 0 at $DIR/match_arm_scopes.rs:+2:70: +2:71\n--         switchInt(move _12) -> [false: bb17, otherwise: bb16]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n-+         switchInt(move _12) -> [false: bb14, otherwise: bb13]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n+-         switchInt(move _12) -> [0: bb17, otherwise: bb16]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n++         switchInt(move _12) -> [0: bb14, otherwise: bb13]; // scope 0 at $DIR/match_arm_scopes.rs:+2:42: +2:73\n       }\n   \n -     bb16: {"}, {"sha": "d51dbf4258c541ba8eb8bde8b49c1fdd325f335c", "filename": "src/test/mir-opt/match_test.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatch_test.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatch_test.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_test.main.SimplifyCfg-initial.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -28,12 +28,12 @@ fn main() -> () {\n         StorageLive(_3);                 // scope 2 at $DIR/match_test.rs:+6:5: +11:6\n         FakeRead(ForMatchedPlace(None), _1); // scope 2 at $DIR/match_test.rs:+6:11: +6:12\n         _6 = Le(const 0_i32, _1);        // scope 2 at $DIR/match_test.rs:+7:9: +7:14\n-        switchInt(move _6) -> [false: bb4, otherwise: bb1]; // scope 2 at $DIR/match_test.rs:+7:9: +7:14\n+        switchInt(move _6) -> [0: bb4, otherwise: bb1]; // scope 2 at $DIR/match_test.rs:+7:9: +7:14\n     }\n \n     bb1: {\n         _7 = Lt(_1, const 10_i32);       // scope 2 at $DIR/match_test.rs:+7:9: +7:14\n-        switchInt(move _7) -> [false: bb4, otherwise: bb2]; // scope 2 at $DIR/match_test.rs:+7:9: +7:14\n+        switchInt(move _7) -> [0: bb4, otherwise: bb2]; // scope 2 at $DIR/match_test.rs:+7:9: +7:14\n     }\n \n     bb2: {\n@@ -47,20 +47,20 @@ fn main() -> () {\n \n     bb4: {\n         _4 = Le(const 10_i32, _1);       // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n-        switchInt(move _4) -> [false: bb7, otherwise: bb5]; // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n+        switchInt(move _4) -> [0: bb7, otherwise: bb5]; // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n     }\n \n     bb5: {\n         _5 = Le(_1, const 20_i32);       // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n-        switchInt(move _5) -> [false: bb7, otherwise: bb6]; // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n+        switchInt(move _5) -> [0: bb7, otherwise: bb6]; // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n     }\n \n     bb6: {\n         falseEdge -> [real: bb12, imaginary: bb8]; // scope 2 at $DIR/match_test.rs:+8:9: +8:16\n     }\n \n     bb7: {\n-        switchInt(_1) -> [-1_i32: bb8, otherwise: bb3]; // scope 2 at $DIR/match_test.rs:+6:5: +6:12\n+        switchInt(_1) -> [4294967295: bb8, otherwise: bb3]; // scope 2 at $DIR/match_test.rs:+6:5: +6:12\n     }\n \n     bb8: {\n@@ -71,7 +71,7 @@ fn main() -> () {\n         _8 = &shallow _1;                // scope 2 at $DIR/match_test.rs:+6:11: +6:12\n         StorageLive(_9);                 // scope 2 at $DIR/match_test.rs:+7:18: +7:19\n         _9 = _2;                         // scope 2 at $DIR/match_test.rs:+7:18: +7:19\n-        switchInt(move _9) -> [false: bb11, otherwise: bb10]; // scope 2 at $DIR/match_test.rs:+7:18: +7:19\n+        switchInt(move _9) -> [0: bb11, otherwise: bb10]; // scope 2 at $DIR/match_test.rs:+7:18: +7:19\n     }\n \n     bb10: {"}, {"sha": "be91b0bfe6820f1ea61ef4ee00ab1d9ca4109a06", "filename": "src/test/mir-opt/matches_reduce_branches.bar.MatchBranchSimplification.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -33,7 +33,7 @@\n           StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:+3:9: +3:10\n           StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:+4:9: +4:10\n           StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:+6:5: +21:6\n--         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:+6:5: +6:12\n+-         switchInt(_1) -> [7: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:+6:5: +6:12\n -     }\n - \n -     bb1: {"}, {"sha": "aa8092ece663a7e53b8cd3efa017ffc6cf763c8e", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -11,12 +11,12 @@\n       bb0: {\n           StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:+1:17: +1:20\n--         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         switchInt(move _3) -> [0: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n +         StorageLive(_4);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n +         _4 = move _3;                    // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n +         _2 = Eq(_4, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n +         StorageDead(_4);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+         switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n++         switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n   \n       bb1: {\n@@ -30,7 +30,7 @@\n -     }\n - \n -     bb3: {\n--         switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         switchInt(move _2) -> [0: bb5, otherwise: bb4]; // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n -     }\n - \n -     bb4: {"}, {"sha": "193104dd30e7e3e711c46390732435ce5cfd704e", "filename": "src/test/mir-opt/matches_reduce_branches.match_nested_if.MatchBranchSimplification.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -26,7 +26,7 @@\n           StorageLive(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:21: +2:52\n           StorageLive(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:24: +2:28\n           _6 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:24: +2:28\n--         switchInt(move _6) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:24: +2:28\n+-         switchInt(move _6) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:24: +2:28\n -     }\n - \n -     bb1: {\n@@ -45,7 +45,7 @@\n +         _5 = Ne(_7, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:+2:45: +2:50\n +         StorageDead(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:24: +2:28\n           StorageDead(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:51: +2:52\n--         switchInt(move _5) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:21: +2:52\n+-         switchInt(move _5) -> [0: bb5, otherwise: bb4]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:21: +2:52\n -     }\n - \n -     bb4: {\n@@ -64,7 +64,7 @@\n +         _4 = Ne(_8, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:+2:69: +2:74\n +         StorageDead(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:21: +2:52\n           StorageDead(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:+2:75: +2:76\n--         switchInt(move _4) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:18: +2:76\n+-         switchInt(move _4) -> [0: bb8, otherwise: bb7]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:18: +2:76\n -     }\n - \n -     bb7: {\n@@ -78,7 +78,7 @@\n -     }\n - \n -     bb9: {\n--         switchInt(move _3) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:15: +6:10\n+-         switchInt(move _3) -> [0: bb11, otherwise: bb10]; // scope 0 at $DIR/matches_reduce_branches.rs:+2:15: +6:10\n -     }\n - \n -     bb10: {"}, {"sha": "3766d99a43b3b01d2f8f27702da114456e8a324e", "filename": "src/test/mir-opt/matches_u8.exhaustive_match.MatchBranchSimplification.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_u8.exhaustive_match.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_u8.exhaustive_match.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_u8.exhaustive_match.MatchBranchSimplification.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,7 +8,7 @@\n   \n       bb0: {\n           _2 = discriminant(_1);           // scope 0 at $DIR/matches_u8.rs:+1:11: +1:12\n-          switchInt(move _2) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/matches_u8.rs:+1:5: +1:12\n+          switchInt(move _2) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at $DIR/matches_u8.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "b5146cd539f396425714f2d50d210e96e6a8e4b1", "filename": "src/test/mir-opt/matches_u8.exhaustive_match_i8.MatchBranchSimplification.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_u8.exhaustive_match_i8.MatchBranchSimplification.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fmatches_u8.exhaustive_match_i8.MatchBranchSimplification.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_u8.exhaustive_match_i8.MatchBranchSimplification.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,7 +8,7 @@\n   \n       bb0: {\n           _2 = discriminant(_1);           // scope 0 at $DIR/matches_u8.rs:+1:11: +1:12\n-          switchInt(move _2) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/matches_u8.rs:+1:5: +1:12\n+          switchInt(move _2) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at $DIR/matches_u8.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "8e6564a38b0bbbaafe2dfd25125cdb4c2efefaf2", "filename": "src/test/mir-opt/nll/region_subtyping_basic.main.nll.0.32bit.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.32bit.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -62,7 +62,7 @@ fn main() -> () {\n         FakeRead(ForLet(None), _6);      // bb1[4]: scope 2 at $DIR/region_subtyping_basic.rs:+3:9: +3:10\n         StorageLive(_7);                 // bb1[5]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n         _7 = const ConstValue(Scalar(0x01): bool); // bb1[6]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n-        switchInt(move _7) -> [ConstValue(Scalar(0x00): bool): bb4, otherwise: bb2]; // bb1[7]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n+        switchInt(move _7) -> [0: bb4, otherwise: bb2]; // bb1[7]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n     }\n \n     bb2: {"}, {"sha": "74d44c6741a92747b01cf35d5f7d1b52324ff91e", "filename": "src/test/mir-opt/nll/region_subtyping_basic.main.nll.0.64bit.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.64bit.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -62,7 +62,7 @@ fn main() -> () {\n         FakeRead(ForLet(None), _6);      // bb1[4]: scope 2 at $DIR/region_subtyping_basic.rs:+3:9: +3:10\n         StorageLive(_7);                 // bb1[5]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n         _7 = const ConstValue(Scalar(0x01): bool); // bb1[6]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n-        switchInt(move _7) -> [ConstValue(Scalar(0x00): bool): bb4, otherwise: bb2]; // bb1[7]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n+        switchInt(move _7) -> [0: bb4, otherwise: bb2]; // bb1[7]: scope 3 at $DIR/region_subtyping_basic.rs:+4:8: +4:12\n     }\n \n     bb2: {"}, {"sha": "69327b7afac7ec3d59cce6f5f5eb20af5501da9a", "filename": "src/test/mir-opt/no_drop_for_inactive_variant.unwrap.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fno_drop_for_inactive_variant.unwrap.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fno_drop_for_inactive_variant.unwrap.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fno_drop_for_inactive_variant.unwrap.SimplifyCfg-elaborate-drops.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -15,7 +15,7 @@ fn unwrap(_1: Option<T>) -> T {\n \n     bb0: {\n         _2 = discriminant(_1);           // scope 0 at $DIR/no_drop_for_inactive_variant.rs:+1:11: +1:14\n-        switchInt(move _2) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/no_drop_for_inactive_variant.rs:+1:5: +1:14\n+        switchInt(move _2) -> [0: bb1, 1: bb3, otherwise: bb2]; // scope 0 at $DIR/no_drop_for_inactive_variant.rs:+1:5: +1:14\n     }\n \n     bb1: {"}, {"sha": "b558c35ac1eeb8a6331e65622ab69bc4364e4cc3", "filename": "src/test/mir-opt/not_equal_false.opt.InstCombine.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -14,7 +14,7 @@\n -         _2 = Ne(move _3, const false);   // scope 0 at $DIR/not_equal_false.rs:+1:8: +1:18\n +         _2 = move _3;                    // scope 0 at $DIR/not_equal_false.rs:+1:8: +1:18\n           StorageDead(_3);                 // scope 0 at $DIR/not_equal_false.rs:+1:17: +1:18\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:+1:8: +1:18\n+          switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:+1:8: +1:18\n       }\n   \n       bb1: {"}, {"sha": "bb5920b28ca9456e0aae3e953ae2baa5de7d13b5", "filename": "src/test/mir-opt/remove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.match_guard.CleanupNonCodegenStatements.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -16,7 +16,7 @@\n -         FakeRead(ForMatchedPlace(None), _1); // scope 0 at $DIR/remove_fake_borrows.rs:+1:11: +1:12\n +         nop;                             // scope 0 at $DIR/remove_fake_borrows.rs:+1:11: +1:12\n           _3 = discriminant(_1);           // scope 0 at $DIR/remove_fake_borrows.rs:+1:11: +1:12\n-          switchInt(move _3) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/remove_fake_borrows.rs:+1:5: +1:12\n+          switchInt(move _3) -> [1: bb2, otherwise: bb1]; // scope 0 at $DIR/remove_fake_borrows.rs:+1:5: +1:12\n       }\n   \n       bb1: {\n@@ -25,7 +25,7 @@\n       }\n   \n       bb2: {\n-          switchInt((*(*((_1 as Some).0: &&i32)))) -> [0_i32: bb3, otherwise: bb1]; // scope 0 at $DIR/remove_fake_borrows.rs:+1:5: +1:12\n+          switchInt((*(*((_1 as Some).0: &&i32)))) -> [0: bb3, otherwise: bb1]; // scope 0 at $DIR/remove_fake_borrows.rs:+1:5: +1:12\n       }\n   \n       bb3: {\n@@ -43,7 +43,7 @@\n +         nop;                             // scope 0 at $DIR/remove_fake_borrows.rs:+1:11: +1:12\n           StorageLive(_8);                 // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n           _8 = _2;                         // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n-          switchInt(move _8) -> [false: bb6, otherwise: bb5]; // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n+          switchInt(move _8) -> [0: bb6, otherwise: bb5]; // scope 0 at $DIR/remove_fake_borrows.rs:+2:20: +2:21\n       }\n   \n       bb5: {"}, {"sha": "ed1d0b87f603373ada39bd462539ebbf2207f29a", "filename": "src/test/mir-opt/remove_storage_markers.main.RemoveStorageMarkers.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_storage_markers.main.RemoveStorageMarkers.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -63,7 +63,7 @@\n       bb3: {\n -         StorageDead(_8);                 // scope 2 at $DIR/remove_storage_markers.rs:+2:18: +2:19\n           _10 = discriminant(_7);          // scope 2 at $DIR/remove_storage_markers.rs:+2:14: +2:19\n-          switchInt(move _10) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 2 at $DIR/remove_storage_markers.rs:+2:14: +2:19\n+          switchInt(move _10) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 2 at $DIR/remove_storage_markers.rs:+2:14: +2:19\n       }\n   \n       bb4: {"}, {"sha": "19b726e74845392e72cec5427d02ef1543fd047d", "filename": "src/test/mir-opt/retag.array_casts.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fretag.array_casts.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fretag.array_casts.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretag.array_casts.SimplifyCfg-elaborate-drops.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -145,7 +145,7 @@ fn array_casts() -> () {\n         StorageDead(_24);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n         _22 = Not(move _23);             // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n         StorageDead(_23);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-        switchInt(move _22) -> [false: bb4, otherwise: bb3]; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+        switchInt(move _22) -> [0: bb4, otherwise: bb3]; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n     }\n \n     bb3: {"}, {"sha": "6ae16bdb5b88a6b673807d83b9a32fedf2c0b6c6", "filename": "src/test/mir-opt/separate_const_switch.identity.SeparateConstSwitch.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fseparate_const_switch.identity.SeparateConstSwitch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fseparate_const_switch.identity.SeparateConstSwitch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fseparate_const_switch.identity.SeparateConstSwitch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -53,14 +53,14 @@\n           StorageLive(_4);                 // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:9\n           _4 = _1;                         // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:9\n           _10 = discriminant(_4);          // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n--         switchInt(move _10) -> [0_isize: bb7, 1_isize: bb5, otherwise: bb6]; // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n-+         switchInt(move _10) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n+-         switchInt(move _10) -> [0: bb7, 1: bb5, otherwise: bb6]; // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n++         switchInt(move _10) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n       }\n   \n       bb1: {\n -         StorageDead(_4);                 // scope 0 at $DIR/separate_const_switch.rs:+1:9: +1:10\n -         _5 = discriminant(_3);           // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n--         switchInt(move _5) -> [0_isize: bb2, 1_isize: bb4, otherwise: bb3]; // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n+-         switchInt(move _5) -> [0: bb2, 1: bb4, otherwise: bb3]; // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n -     }\n - \n -     bb2: {\n@@ -118,7 +118,7 @@\n -         goto -> bb1;                     // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n +         StorageDead(_4);                 // scope 0 at $DIR/separate_const_switch.rs:+1:9: +1:10\n +         _5 = discriminant(_3);           // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n-+         switchInt(move _5) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n++         switchInt(move _5) -> [0: bb1, 1: bb3, otherwise: bb2]; // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n       }\n   \n -     bb6: {\n@@ -140,7 +140,7 @@\n -         goto -> bb1;                     // scope 5 at $SRC_DIR/core/src/result.rs:LL:COL\n +         StorageDead(_4);                 // scope 0 at $DIR/separate_const_switch.rs:+1:9: +1:10\n +         _5 = discriminant(_3);           // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n-+         switchInt(move _5) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n++         switchInt(move _5) -> [0: bb1, 1: bb3, otherwise: bb2]; // scope 0 at $DIR/separate_const_switch.rs:+1:8: +1:10\n       }\n   \n -     bb8: {"}, {"sha": "8cc0c6a18353c2b8ea33f0c5c25d065a6b1a0ff2", "filename": "src/test/mir-opt/separate_const_switch.too_complex.SeparateConstSwitch.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fseparate_const_switch.too_complex.SeparateConstSwitch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fseparate_const_switch.too_complex.SeparateConstSwitch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fseparate_const_switch.too_complex.SeparateConstSwitch.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -30,7 +30,7 @@\n       bb0: {\n           StorageLive(_2);                 // scope 0 at $DIR/separate_const_switch.rs:+5:11: +10:6\n           _3 = discriminant(_1);           // scope 0 at $DIR/separate_const_switch.rs:+6:15: +6:16\n-          switchInt(move _3) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/separate_const_switch.rs:+6:9: +6:16\n+          switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at $DIR/separate_const_switch.rs:+6:9: +6:16\n       }\n   \n       bb1: {\n@@ -45,7 +45,7 @@\n           StorageDead(_6);                 // scope 0 at $DIR/separate_const_switch.rs:+8:43: +8:44\n -         goto -> bb4;                     // scope 0 at $DIR/separate_const_switch.rs:+8:43: +8:44\n +         _8 = discriminant(_2);           // scope 0 at $DIR/separate_const_switch.rs:+5:11: +10:6\n-+         switchInt(move _8) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 0 at $DIR/separate_const_switch.rs:+5:5: +10:6\n++         switchInt(move _8) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 0 at $DIR/separate_const_switch.rs:+5:5: +10:6\n       }\n   \n       bb2: {\n@@ -67,8 +67,8 @@\n - \n -     bb4: {\n           _8 = discriminant(_2);           // scope 0 at $DIR/separate_const_switch.rs:+5:11: +10:6\n--         switchInt(move _8) -> [0_isize: bb7, 1_isize: bb5, otherwise: bb6]; // scope 0 at $DIR/separate_const_switch.rs:+5:5: +10:6\n-+         switchInt(move _8) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]; // scope 0 at $DIR/separate_const_switch.rs:+5:5: +10:6\n+-         switchInt(move _8) -> [0: bb7, 1: bb5, otherwise: bb6]; // scope 0 at $DIR/separate_const_switch.rs:+5:5: +10:6\n++         switchInt(move _8) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 0 at $DIR/separate_const_switch.rs:+5:5: +10:6\n       }\n   \n -     bb5: {"}, {"sha": "8eb1aa1f3b3d0cf85b697f543aa937b6aad37f9d", "filename": "src/test/mir-opt/simplify_cfg.main.SimplifyCfg-early-opt.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-early-opt.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -25,9 +25,9 @@\n       }\n   \n -     bb3: {\n--         switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:+2:12: +2:17\n+-         switchInt(move _2) -> [0: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:+2:12: +2:17\n +     bb2: {\n-+         switchInt(move _2) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/simplify_cfg.rs:+2:12: +2:17\n++         switchInt(move _2) -> [0: bb4, otherwise: bb3]; // scope 0 at $DIR/simplify_cfg.rs:+2:12: +2:17\n       }\n   \n -     bb4: {"}, {"sha": "1e66b1f703e3fea1d8bd151d44b25e8239460f10", "filename": "src/test/mir-opt/simplify_cfg.main.SimplifyCfg-initial.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg.main.SimplifyCfg-initial.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -26,7 +26,7 @@\n       }\n   \n       bb3: {\n-          switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:+2:12: +2:17\n+          switchInt(move _2) -> [0: bb5, otherwise: bb4]; // scope 0 at $DIR/simplify_cfg.rs:+2:12: +2:17\n       }\n   \n       bb4: {"}, {"sha": "aea0114744352d0b7a2af771f2cdc8db318a670d", "filename": "src/test/mir-opt/simplify_if.main.SimplifyConstCondition-after-const-prop.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_if.main.SimplifyConstCondition-after-const-prop.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_if.main.SimplifyConstCondition-after-const-prop.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_if.main.SimplifyConstCondition-after-const-prop.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -9,7 +9,7 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/simplify_if.rs:+1:8: +1:13\n           _1 = const false;                // scope 0 at $DIR/simplify_if.rs:+1:8: +1:13\n--         switchInt(const false) -> [false: bb3, otherwise: bb1]; // scope 0 at $DIR/simplify_if.rs:+1:8: +1:13\n+-         switchInt(const false) -> [0: bb3, otherwise: bb1]; // scope 0 at $DIR/simplify_if.rs:+1:8: +1:13\n +         goto -> bb3;                     // scope 0 at $DIR/simplify_if.rs:+1:8: +1:13\n       }\n   "}, {"sha": "a2b55229303d39446a364aadbf2e0025cb202825", "filename": "src/test/mir-opt/simplify_locals_fixedpoint.foo.SimplifyLocals.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals_fixedpoint.foo.SimplifyLocals.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -29,12 +29,12 @@\n           StorageDead(_3);                 // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:68: +1:69\n           StorageDead(_2);                 // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:68: +1:69\n           _5 = discriminant((_1.0: std::option::Option<u8>)); // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:12: +1:27\n-          switchInt(move _5) -> [1_isize: bb1, otherwise: bb3]; // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:12: +1:27\n+          switchInt(move _5) -> [1: bb1, otherwise: bb3]; // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:12: +1:27\n       }\n   \n       bb1: {\n           _4 = discriminant((_1.1: std::option::Option<T>)); // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:12: +1:27\n-          switchInt(move _4) -> [0_isize: bb2, otherwise: bb3]; // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:12: +1:27\n+          switchInt(move _4) -> [0: bb2, otherwise: bb3]; // scope 1 at $DIR/simplify_locals_fixedpoint.rs:+1:12: +1:27\n       }\n   \n       bb2: {"}, {"sha": "9ec138dd82f44b43230b458e4f785038b6d45e92", "filename": "src/test/mir-opt/simplify_locals_removes_unused_discriminant_reads.map.SimplifyLocals.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_discriminant_reads.map.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_discriminant_reads.map.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_discriminant_reads.map.SimplifyLocals.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -18,7 +18,7 @@\n -         _5 = const false;                // scope 0 at $DIR/simplify_locals_removes_unused_discriminant_reads.rs:+1:11: +1:12\n -         _5 = const true;                 // scope 0 at $DIR/simplify_locals_removes_unused_discriminant_reads.rs:+1:11: +1:12\n           _2 = discriminant(_1);           // scope 0 at $DIR/simplify_locals_removes_unused_discriminant_reads.rs:+1:11: +1:12\n-          switchInt(move _2) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_locals_removes_unused_discriminant_reads.rs:+1:5: +1:12\n+          switchInt(move _2) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_locals_removes_unused_discriminant_reads.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "f00ac5716a7517c7b29f56dc48688ca8ee37784e", "filename": "src/test/mir-opt/simplify_match.main.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_match.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsimplify_match.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_match.main.ConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -16,8 +16,8 @@\n -         _1 = _2;                         // scope 1 at $DIR/simplify_match.rs:+1:28: +1:29\n +         _1 = const false;                // scope 1 at $DIR/simplify_match.rs:+1:28: +1:29\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_match.rs:+1:30: +1:31\n--         switchInt(_1) -> [false: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_match.rs:+1:5: +1:31\n-+         switchInt(const false) -> [false: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_match.rs:+1:5: +1:31\n+-         switchInt(_1) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_match.rs:+1:5: +1:31\n++         switchInt(const false) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_match.rs:+1:5: +1:31\n       }\n   \n       bb1: {"}, {"sha": "391b00effacfa0577a60e22008770449fab227a6", "filename": "src/test/mir-opt/slice_drop_shim.core.ptr-drop_in_place.[String].AddMovesForPackedDrops.before.mir", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fslice_drop_shim.core.ptr-drop_in_place.%5BString%5D.AddMovesForPackedDrops.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fslice_drop_shim.core.ptr-drop_in_place.%5BString%5D.AddMovesForPackedDrops.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fslice_drop_shim.core.ptr-drop_in_place.%5BString%5D.AddMovesForPackedDrops.before.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -37,7 +37,7 @@ fn std::ptr::drop_in_place(_1: *mut [String]) -> () {\n \n     bb4 (cleanup): {\n         _6 = Eq(_4, _3);                 // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n-        switchInt(move _6) -> [false: bb3, otherwise: bb2]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n+        switchInt(move _6) -> [0: bb3, otherwise: bb2]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n     }\n \n     bb5: {\n@@ -48,7 +48,7 @@ fn std::ptr::drop_in_place(_1: *mut [String]) -> () {\n \n     bb6: {\n         _8 = Eq(_4, _3);                 // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n-        switchInt(move _8) -> [false: bb5, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n+        switchInt(move _8) -> [0: bb5, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n     }\n \n     bb7: {\n@@ -68,7 +68,7 @@ fn std::ptr::drop_in_place(_1: *mut [String]) -> () {\n \n     bb10 (cleanup): {\n         _12 = Eq(_9, _10);               // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n-        switchInt(move _12) -> [false: bb9, otherwise: bb2]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n+        switchInt(move _12) -> [0: bb9, otherwise: bb2]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n     }\n \n     bb11: {\n@@ -79,7 +79,7 @@ fn std::ptr::drop_in_place(_1: *mut [String]) -> () {\n \n     bb12: {\n         _14 = Eq(_9, _10);               // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n-        switchInt(move _14) -> [false: bb11, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n+        switchInt(move _14) -> [0: bb11, otherwise: bb1]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n     }\n \n     bb13: {\n@@ -96,6 +96,6 @@ fn std::ptr::drop_in_place(_1: *mut [String]) -> () {\n     bb15: {\n         _2 = SizeOf(std::string::String); // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n         _3 = Len((*_1));                 // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n-        switchInt(move _2) -> [0_usize: bb8, otherwise: bb14]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n+        switchInt(move _2) -> [0: bb8, otherwise: bb14]; // scope 0 at $SRC_DIR/core/src/ptr/mod.rs:+0:1: +0:56\n     }\n }"}, {"sha": "a5488c1ec7bfee1f31c4ae7fc8d7ab3331b345ab", "filename": "src/test/mir-opt/sroa.enums.ScalarReplacementOfAggregates.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsroa.enums.ScalarReplacementOfAggregates.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fsroa.enums.ScalarReplacementOfAggregates.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsroa.enums.ScalarReplacementOfAggregates.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -21,7 +21,7 @@\n           discriminant(_2) = 1;            // scope 1 at $DIR/sroa.rs:+1:22: +1:29\n           StorageDead(_3);                 // scope 1 at $DIR/sroa.rs:+1:28: +1:29\n           _4 = discriminant(_2);           // scope 1 at $DIR/sroa.rs:+1:12: +1:19\n-          switchInt(move _4) -> [1_isize: bb1, otherwise: bb2]; // scope 1 at $DIR/sroa.rs:+1:12: +1:19\n+          switchInt(move _4) -> [1: bb1, otherwise: bb2]; // scope 1 at $DIR/sroa.rs:+1:12: +1:19\n       }\n   \n       bb1: {"}, {"sha": "b254bfeb7c992500212de9570d51fd6ae98b8dbc", "filename": "src/test/mir-opt/try_identity_e2e.new.PreCodegen.after.mir", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Ftry_identity_e2e.new.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Ftry_identity_e2e.new.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Ftry_identity_e2e.new.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -26,7 +26,7 @@ fn new(_1: Result<T, E>) -> Result<T, E> {\n     bb0: {\n         StorageLive(_2);                 // scope 0 at $DIR/try_identity_e2e.rs:+2:15: +7:10\n         _3 = discriminant(_1);           // scope 0 at $DIR/try_identity_e2e.rs:+3:19: +3:20\n-        switchInt(move _3) -> [0_isize: bb2, 1_isize: bb1, otherwise: bb4]; // scope 0 at $DIR/try_identity_e2e.rs:+3:13: +3:20\n+        switchInt(move _3) -> [0: bb2, 1: bb1, otherwise: bb4]; // scope 0 at $DIR/try_identity_e2e.rs:+3:13: +3:20\n     }\n \n     bb1: {\n@@ -35,7 +35,7 @@ fn new(_1: Result<T, E>) -> Result<T, E> {\n         ((_2 as Break).0: E) = move _5;  // scope 2 at $DIR/try_identity_e2e.rs:+5:27: +5:48\n         discriminant(_2) = 1;            // scope 2 at $DIR/try_identity_e2e.rs:+5:27: +5:48\n         _6 = discriminant(_2);           // scope 0 at $DIR/try_identity_e2e.rs:+2:15: +7:10\n-        switchInt(move _6) -> [0_isize: bb5, 1_isize: bb3, otherwise: bb4]; // scope 0 at $DIR/try_identity_e2e.rs:+2:9: +7:10\n+        switchInt(move _6) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 0 at $DIR/try_identity_e2e.rs:+2:9: +7:10\n     }\n \n     bb2: {\n@@ -44,7 +44,7 @@ fn new(_1: Result<T, E>) -> Result<T, E> {\n         ((_2 as Continue).0: T) = move _4; // scope 1 at $DIR/try_identity_e2e.rs:+4:26: +4:50\n         discriminant(_2) = 0;            // scope 1 at $DIR/try_identity_e2e.rs:+4:26: +4:50\n         _6 = discriminant(_2);           // scope 0 at $DIR/try_identity_e2e.rs:+2:15: +7:10\n-        switchInt(move _6) -> [0_isize: bb5, 1_isize: bb3, otherwise: bb4]; // scope 0 at $DIR/try_identity_e2e.rs:+2:9: +7:10\n+        switchInt(move _6) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 0 at $DIR/try_identity_e2e.rs:+2:9: +7:10\n     }\n \n     bb3: {"}, {"sha": "cdbc0681cb8a363ae2acadeeb236c7718ad3c00a", "filename": "src/test/mir-opt/try_identity_e2e.old.PreCodegen.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Ftry_identity_e2e.old.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Ftry_identity_e2e.old.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Ftry_identity_e2e.old.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -15,7 +15,7 @@ fn old(_1: Result<T, E>) -> Result<T, E> {\n \n     bb0: {\n         _2 = discriminant(_1);           // scope 0 at $DIR/try_identity_e2e.rs:+2:15: +2:16\n-        switchInt(move _2) -> [0_isize: bb3, 1_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/try_identity_e2e.rs:+2:9: +2:16\n+        switchInt(move _2) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at $DIR/try_identity_e2e.rs:+2:9: +2:16\n     }\n \n     bb1: {"}, {"sha": "39ec05277595518ba60e39de7973cdbb8b998c71", "filename": "src/test/mir-opt/uninhabited_enum_branching.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -18,7 +18,7 @@ fn main() -> () {\n         Deinit(_2);                      // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:11: +1:19\n         discriminant(_2) = 2;            // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:11: +1:19\n         _3 = discriminant(_2);           // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:11: +1:19\n-        switchInt(move _3) -> [2_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:5: +1:19\n+        switchInt(move _3) -> [2: bb1, otherwise: bb2]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:5: +1:19\n     }\n \n     bb1: {\n@@ -36,7 +36,7 @@ fn main() -> () {\n         Deinit(_7);                      // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:11: +7:19\n         discriminant(_7) = 0;            // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:11: +7:19\n         _8 = discriminant(_7);           // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:11: +7:19\n-        switchInt(move _8) -> [4_isize: bb5, 5_isize: bb3, otherwise: bb4]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:5: +7:19\n+        switchInt(move _8) -> [4: bb5, 5: bb3, otherwise: bb4]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:5: +7:19\n     }\n \n     bb2: {"}, {"sha": "598413a1d82de896744266987d7f71afe96793b8", "filename": "src/test/mir-opt/uninhabited_enum_branching.main.UninhabitedEnumBranching.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching.main.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching.main.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching.main.UninhabitedEnumBranching.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -19,8 +19,8 @@\n           Deinit(_2);                      // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:11: +1:19\n           discriminant(_2) = 2;            // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:11: +1:19\n           _3 = discriminant(_2);           // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:11: +1:19\n--         switchInt(move _3) -> [0_isize: bb3, 1_isize: bb4, 2_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:5: +1:19\n-+         switchInt(move _3) -> [2_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:5: +1:19\n+-         switchInt(move _3) -> [0: bb3, 1: bb4, 2: bb1, otherwise: bb2]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:5: +1:19\n++         switchInt(move _3) -> [2: bb1, otherwise: bb2]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+1:5: +1:19\n       }\n   \n       bb1: {\n@@ -65,7 +65,7 @@\n           Deinit(_7);                      // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:11: +7:19\n           discriminant(_7) = 0;            // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:11: +7:19\n           _8 = discriminant(_7);           // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:11: +7:19\n-          switchInt(move _8) -> [4_isize: bb8, 5_isize: bb6, otherwise: bb7]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:5: +7:19\n+          switchInt(move _8) -> [4: bb8, 5: bb6, otherwise: bb7]; // scope 0 at $DIR/uninhabited_enum_branching.rs:+7:5: +7:19\n       }\n   \n       bb6: {"}, {"sha": "c8cd6f6c1ea1d69950ee8f65accd39fb1acdaf6f", "filename": "src/test/mir-opt/uninhabited_enum_branching2.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching2.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching2.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching2.main.SimplifyCfg-after-uninhabited-enum-branching.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -32,7 +32,7 @@ fn main() -> () {\n         StorageLive(_4);                 // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:11: +3:22\n         _4 = &(_1.1: Test1);             // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:11: +3:22\n         _5 = discriminant((*_4));        // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:11: +3:22\n-        switchInt(move _5) -> [2_isize: bb3, 3_isize: bb1, otherwise: bb2]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:5: +3:22\n+        switchInt(move _5) -> [2: bb3, 3: bb1, otherwise: bb2]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:5: +3:22\n     }\n \n     bb1: {\n@@ -66,7 +66,7 @@ fn main() -> () {\n         StorageDead(_3);                 // scope 1 at $DIR/uninhabited_enum_branching2.rs:+8:6: +8:7\n         StorageLive(_9);                 // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +15:6\n         _10 = discriminant((_1.1: Test1)); // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:11: +10:21\n-        switchInt(move _10) -> [2_isize: bb7, 3_isize: bb5, otherwise: bb6]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +10:21\n+        switchInt(move _10) -> [2: bb7, 3: bb5, otherwise: bb6]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +10:21\n     }\n \n     bb5: {"}, {"sha": "2aee6d2681d642466be5cab4bb5b8b93da629ea4", "filename": "src/test/mir-opt/uninhabited_enum_branching2.main.UninhabitedEnumBranching.diff", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching2.main.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching2.main.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_enum_branching2.main.UninhabitedEnumBranching.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -33,8 +33,8 @@\n           StorageLive(_4);                 // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:11: +3:22\n           _4 = &(_1.1: Test1);             // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:11: +3:22\n           _5 = discriminant((*_4));        // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:11: +3:22\n--         switchInt(move _5) -> [0_isize: bb3, 1_isize: bb4, 2_isize: bb5, 3_isize: bb1, otherwise: bb2]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:5: +3:22\n-+         switchInt(move _5) -> [2_isize: bb5, 3_isize: bb1, otherwise: bb2]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:5: +3:22\n+-         switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb5, 3: bb1, otherwise: bb2]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:5: +3:22\n++         switchInt(move _5) -> [2: bb5, 3: bb1, otherwise: bb2]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+3:5: +3:22\n       }\n   \n       bb1: {\n@@ -87,8 +87,8 @@\n           StorageDead(_3);                 // scope 1 at $DIR/uninhabited_enum_branching2.rs:+8:6: +8:7\n           StorageLive(_9);                 // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +15:6\n           _10 = discriminant((_1.1: Test1)); // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:11: +10:21\n--         switchInt(move _10) -> [0_isize: bb9, 1_isize: bb10, 2_isize: bb11, 3_isize: bb7, otherwise: bb8]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +10:21\n-+         switchInt(move _10) -> [2_isize: bb11, 3_isize: bb7, otherwise: bb8]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +10:21\n+-         switchInt(move _10) -> [0: bb9, 1: bb10, 2: bb11, 3: bb7, otherwise: bb8]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +10:21\n++         switchInt(move _10) -> [2: bb11, 3: bb7, otherwise: bb8]; // scope 1 at $DIR/uninhabited_enum_branching2.rs:+10:5: +10:21\n       }\n   \n       bb7: {"}, {"sha": "58e085dd041972089317a9e7964b4ea9c64c0107", "filename": "src/test/mir-opt/uninhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.eliminate_fallthrough.UninhabitedEnumBranching.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,8 +8,8 @@\n   \n       bb0: {\n           _2 = discriminant(_1);           // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:11: +1:12\n--         switchInt(move _2) -> [1_isize: bb3, 2_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n-+         switchInt(move _2) -> [1_isize: bb3, 2_isize: bb2, otherwise: bb5]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n+-         switchInt(move _2) -> [1: bb3, 2: bb2, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n++         switchInt(move _2) -> [1: bb3, 2: bb2, otherwise: bb5]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "e765851eb78b7a75d50d871407ce6e196744ec57", "filename": "src/test/mir-opt/uninhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funinhabited_fallthrough_elimination.keep_fallthrough.UninhabitedEnumBranching.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -8,8 +8,8 @@\n   \n       bb0: {\n           _2 = discriminant(_1);           // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:11: +1:12\n--         switchInt(move _2) -> [0_isize: bb2, 1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n-+         switchInt(move _2) -> [1_isize: bb3, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n+-         switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n++         switchInt(move _2) -> [1: bb3, otherwise: bb1]; // scope 0 at $DIR/uninhabited_fallthrough_elimination.rs:+1:5: +1:12\n       }\n   \n       bb1: {"}, {"sha": "848bff1d4920c18695bb801134b4d80c0b90b75c", "filename": "src/test/mir-opt/unreachable.main.UnreachablePropagation.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funreachable.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funreachable.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable.main.UnreachablePropagation.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -27,8 +27,8 @@\n   \n       bb1: {\n           _2 = discriminant(_1);           // scope 1 at $DIR/unreachable.rs:+1:12: +1:20\n--         switchInt(move _2) -> [1_isize: bb2, otherwise: bb6]; // scope 1 at $DIR/unreachable.rs:+1:12: +1:20\n-+         switchInt(move _2) -> [1_isize: bb2, otherwise: bb3]; // scope 1 at $DIR/unreachable.rs:+1:12: +1:20\n+-         switchInt(move _2) -> [1: bb2, otherwise: bb6]; // scope 1 at $DIR/unreachable.rs:+1:12: +1:20\n++         switchInt(move _2) -> [1: bb2, otherwise: bb3]; // scope 1 at $DIR/unreachable.rs:+1:12: +1:20\n       }\n   \n       bb2: {\n@@ -38,7 +38,7 @@\n -         StorageLive(_5);                 // scope 2 at $DIR/unreachable.rs:+4:9: +8:10\n -         StorageLive(_6);                 // scope 2 at $DIR/unreachable.rs:+4:12: +4:16\n -         _6 = const true;                 // scope 2 at $DIR/unreachable.rs:+4:12: +4:16\n--         switchInt(move _6) -> [false: bb4, otherwise: bb3]; // scope 2 at $DIR/unreachable.rs:+4:12: +4:16\n+-         switchInt(move _6) -> [0: bb4, otherwise: bb3]; // scope 2 at $DIR/unreachable.rs:+4:12: +4:16\n +         unreachable;                     // scope 2 at $DIR/unreachable.rs:+4:12: +4:16\n       }\n   "}, {"sha": "fb778470e532323d8958c6dfc3001ec7b5a39bf3", "filename": "src/test/mir-opt/unreachable_diverging.main.UnreachablePropagation.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funreachable_diverging.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Funreachable_diverging.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_diverging.main.UnreachablePropagation.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -29,7 +29,7 @@\n   \n       bb1: {\n           _3 = discriminant(_2);           // scope 2 at $DIR/unreachable_diverging.rs:+2:12: +2:22\n-          switchInt(move _3) -> [1_isize: bb2, otherwise: bb6]; // scope 2 at $DIR/unreachable_diverging.rs:+2:12: +2:22\n+          switchInt(move _3) -> [1: bb2, otherwise: bb6]; // scope 2 at $DIR/unreachable_diverging.rs:+2:12: +2:22\n       }\n   \n       bb2: {\n@@ -38,7 +38,7 @@\n           StorageLive(_5);                 // scope 2 at $DIR/unreachable_diverging.rs:+3:9: +5:10\n           StorageLive(_6);                 // scope 2 at $DIR/unreachable_diverging.rs:+3:12: +3:13\n           _6 = _1;                         // scope 2 at $DIR/unreachable_diverging.rs:+3:12: +3:13\n-          switchInt(move _6) -> [false: bb4, otherwise: bb3]; // scope 2 at $DIR/unreachable_diverging.rs:+3:12: +3:13\n+          switchInt(move _6) -> [0: bb4, otherwise: bb3]; // scope 2 at $DIR/unreachable_diverging.rs:+3:12: +3:13\n       }\n   \n       bb3: {"}, {"sha": "984ef476e10209d4e5f830ccabc9f1af04a989ef", "filename": "src/test/mir-opt/while_let_loops.change_loop_body.ConstProp.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_let_loops.change_loop_body.ConstProp.diff?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -24,13 +24,13 @@\n           Deinit(_3);                      // scope 2 at $DIR/while_let_loops.rs:+2:28: +2:32\n           discriminant(_3) = 0;            // scope 2 at $DIR/while_let_loops.rs:+2:28: +2:32\n -         _4 = discriminant(_3);           // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n--         switchInt(move _4) -> [1_isize: bb1, otherwise: bb3]; // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n+-         switchInt(move _4) -> [1: bb1, otherwise: bb3]; // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n +         _4 = const 0_isize;              // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n-+         switchInt(const 0_isize) -> [1_isize: bb1, otherwise: bb3]; // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n++         switchInt(const 0_isize) -> [1: bb1, otherwise: bb3]; // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n       }\n   \n       bb1: {\n-          switchInt(((_3 as Some).0: u32)) -> [0_u32: bb2, otherwise: bb3]; // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n+          switchInt(((_3 as Some).0: u32)) -> [0: bb2, otherwise: bb3]; // scope 2 at $DIR/while_let_loops.rs:+2:15: +2:25\n       }\n   \n       bb2: {"}, {"sha": "1556c240dc57a4335f848ca05289bff38cb366a6", "filename": "src/test/mir-opt/while_storage.while_loop.PreCodegen.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fwhile_storage.while_loop.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftest%2Fmir-opt%2Fwhile_storage.while_loop.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fwhile_storage.while_loop.PreCodegen.after.mir?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -24,7 +24,7 @@ fn while_loop(_1: bool) -> () {\n \n     bb2: {\n         StorageDead(_3);                 // scope 0 at $DIR/while_storage.rs:+1:21: +1:22\n-        switchInt(move _2) -> [false: bb7, otherwise: bb3]; // scope 0 at $DIR/while_storage.rs:+1:11: +1:22\n+        switchInt(move _2) -> [0: bb7, otherwise: bb3]; // scope 0 at $DIR/while_storage.rs:+1:11: +1:22\n     }\n \n     bb3: {\n@@ -39,7 +39,7 @@ fn while_loop(_1: bool) -> () {\n \n     bb4: {\n         StorageDead(_5);                 // scope 0 at $DIR/while_storage.rs:+2:22: +2:23\n-        switchInt(move _4) -> [false: bb6, otherwise: bb5]; // scope 0 at $DIR/while_storage.rs:+2:12: +2:23\n+        switchInt(move _4) -> [0: bb6, otherwise: bb5]; // scope 0 at $DIR/while_storage.rs:+2:12: +2:23\n     }\n \n     bb5: {"}, {"sha": "e053a9dc8881ab2a0cd2adf7eb52bf71436b8d37", "filename": "src/tools/clippy/clippy_utils/src/qualify_min_const_fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66e123677ac5f4fade3bb67888f8f40f0bb28ec/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fqualify_min_const_fn.rs?ref=b66e123677ac5f4fade3bb67888f8f40f0bb28ec", "patch": "@@ -303,7 +303,6 @@ fn check_terminator<'tcx>(\n \n         TerminatorKind::SwitchInt {\n             discr,\n-            switch_ty: _,\n             targets: _,\n         } => check_operand(tcx, discr, span, body),\n "}]}