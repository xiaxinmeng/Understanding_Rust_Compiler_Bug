{"sha": "6d37e7fc29e491732c729f55f1b1c31528557f37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMzdlN2ZjMjllNDkxNzMyYzcyOWY1NWYxYjFjMzE1Mjg1NTdmMzc=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-13T12:30:28Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-13T12:30:28Z"}, "message": "Reimplement sum type switching.", "tree": {"sha": "78ba4540459a510308fe16cca1c653723e595c24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78ba4540459a510308fe16cca1c653723e595c24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d37e7fc29e491732c729f55f1b1c31528557f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d37e7fc29e491732c729f55f1b1c31528557f37", "html_url": "https://github.com/rust-lang/rust/commit/6d37e7fc29e491732c729f55f1b1c31528557f37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d37e7fc29e491732c729f55f1b1c31528557f37/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80d12601ff20454cd39de2c0d49558b46f1077a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/80d12601ff20454cd39de2c0d49558b46f1077a2", "html_url": "https://github.com/rust-lang/rust/commit/80d12601ff20454cd39de2c0d49558b46f1077a2"}], "stats": {"total": 64, "additions": 37, "deletions": 27}, "files": [{"sha": "339c4b3167566eb0260c4fe9dd103f0f594ada5f", "filename": "src/interpreter.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6d37e7fc29e491732c729f55f1b1c31528557f37/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d37e7fc29e491732c729f55f1b1c31528557f37/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=6d37e7fc29e491732c729f55f1b1c31528557f37", "patch": "@@ -174,6 +174,16 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                     }\n                 }\n \n+                Switch { ref discr, ref targets, .. } => {\n+                    let (adt_ptr, adt_repr) = try!(self.eval_lvalue(discr));\n+                    let discr_repr = match adt_repr {\n+                        Repr::Sum { ref discr, .. } => discr,\n+                        _ => panic!(\"attmpted to switch on non-sum type\"),\n+                    };\n+                    let discr_val = try!(self.memory.read_primval(adt_ptr, &discr_repr));\n+                    current_block = targets[discr_val.to_int() as usize];\n+                }\n+\n                 // Call { ref func, ref args, ref destination, .. } => {\n                 //     use rustc::middle::cstore::CrateStore;\n                 //     let ptr = destination.as_ref().map(|&(ref lv, _)| self.lvalue_to_ptr(lv));\n@@ -203,16 +213,6 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                 //     }\n                 // }\n \n-                // Switch { ref discr, ref targets, .. } => {\n-                //     let discr_val = self.read_lvalue(discr);\n-\n-                //     if let Value::Adt { variant, .. } = discr_val {\n-                //         current_block = targets[variant];\n-                //     } else {\n-                //         panic!(\"Switch on non-Adt value: {:?}\", discr_val);\n-                //     }\n-                // }\n-\n                 Drop { target, .. } => {\n                     // TODO: Handle destructors and dynamic drop.\n                     current_block = target;"}, {"sha": "63d5598ece07d7b57ace296931d06d49d2b0f2fe", "filename": "src/primval.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6d37e7fc29e491732c729f55f1b1c31528557f37/src%2Fprimval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d37e7fc29e491732c729f55f1b1c31528557f37/src%2Fprimval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fprimval.rs?ref=6d37e7fc29e491732c729f55f1b1c31528557f37", "patch": "@@ -22,6 +22,16 @@ impl PrimVal {\n             _ => panic!(\"attempted to make integer primval from non-integer repr\"),\n         }\n     }\n+\n+    pub fn to_int(self) -> i64 {\n+        match self {\n+            PrimVal::I8(n) => n as i64,\n+            PrimVal::I16(n) => n as i64,\n+            PrimVal::I32(n) => n as i64,\n+            PrimVal::I64(n) => n,\n+            _ => panic!(\"attempted to make integer from non-integer primval\"),\n+        }\n+    }\n }\n \n pub fn binary_op(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> PrimVal {"}, {"sha": "328539acca99057c0f3f23dd617c91427566d201", "filename": "test/sums.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6d37e7fc29e491732c729f55f1b1c31528557f37/test%2Fsums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d37e7fc29e491732c729f55f1b1c31528557f37/test%2Fsums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fsums.rs?ref=6d37e7fc29e491732c729f55f1b1c31528557f37", "patch": "@@ -30,20 +30,20 @@ fn return_some() -> Option<i64> {\n     Some(42)\n }\n \n-// #[miri_run]\n-// fn match_opt_none() -> i64 {\n-//     let x = None,\n-//     match x {\n-//         Some(data) => data,\n-//         None => 42,\n-//     }\n-// }\n-\n-// #[miri_run]\n-// fn match_opt_some() -> i64 {\n-//     let x = Some(13);\n-//     match x {\n-//         Some(data) => data,\n-//         None => 42,\n-//     }\n-// }\n+#[miri_run]\n+fn match_opt_none() -> i8 {\n+    let x = None::<i32>;\n+    match x {\n+        Some(_) => 10,\n+        None => 20,\n+    }\n+}\n+\n+#[miri_run]\n+fn match_opt_some() -> i8 {\n+    let x = Some(13);\n+    match x {\n+        Some(_) => 10,\n+        None => 20,\n+    }\n+}"}]}