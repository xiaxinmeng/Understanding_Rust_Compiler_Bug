{"sha": "a46b00eeb5cb78288f04df0ab68b4192c92608c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NmIwMGVlYjVjYjc4Mjg4ZjA0ZGYwYWI2OGI0MTkyYzkyNjA4Yzk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-27T12:32:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-27T12:32:19Z"}, "message": "Rollup merge of #58630 - nnethercote:fix-fold_clobber, r=petrochenkov\n\nMake `visit_clobber` panic-safe.\n\nLocal measurements indicate the performance effect is negligible.\n\nr? @petrochenkov", "tree": {"sha": "40c3ea6f481db7065b962c40dfe5780493415876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40c3ea6f481db7065b962c40dfe5780493415876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a46b00eeb5cb78288f04df0ab68b4192c92608c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcdoNTCRBK7hj4Ov3rIwAAdHIIAIKQyVHfLQ2R0Mop8glF9hkC\nDJHp/SLiAl5TKv17PKlOx3CzzMhtB0Jw27wBNGDREgBypvmLU3j1e6Os4s1/ZvS+\nCgzWJEQTW+m9vzK4uKaTL7AQAK75XVny30wKLHaDI/Z5+FPG6qtPH8+DEKI4XskY\nB7jUGzLa9FapU5x8TD3e7w1kKAZHXiFnh4ckq9NMuxAL/iRABlqJTfvIKRFlOA2W\nBd5EhVTepeHpt9YmZiVhmwar8Fjs8MAlKmOVQAvNdW5XvMRA3mIyyk0dE+bS/qNt\nu2BSb8JpQ8u1oFPFbLDlWLOZhYkYcEwX5YzOv3PI1xndll19Pz66ByfZUgEiagI=\n=n2cL\n-----END PGP SIGNATURE-----\n", "payload": "tree 40c3ea6f481db7065b962c40dfe5780493415876\nparent f6673a4e7ccfd5f5c8de07e24735b1e730aaffb2\nparent eddd07cc8a92dd603e9884789fb58b2d3edd2e16\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1551270739 +0100\ncommitter GitHub <noreply@github.com> 1551270739 +0100\n\nRollup merge of #58630 - nnethercote:fix-fold_clobber, r=petrochenkov\n\nMake `visit_clobber` panic-safe.\n\nLocal measurements indicate the performance effect is negligible.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a46b00eeb5cb78288f04df0ab68b4192c92608c9", "html_url": "https://github.com/rust-lang/rust/commit/a46b00eeb5cb78288f04df0ab68b4192c92608c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a46b00eeb5cb78288f04df0ab68b4192c92608c9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6673a4e7ccfd5f5c8de07e24735b1e730aaffb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6673a4e7ccfd5f5c8de07e24735b1e730aaffb2", "html_url": "https://github.com/rust-lang/rust/commit/f6673a4e7ccfd5f5c8de07e24735b1e730aaffb2"}, {"sha": "eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "html_url": "https://github.com/rust-lang/rust/commit/eddd07cc8a92dd603e9884789fb58b2d3edd2e16"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "bcb96f5786b9eb8ff65f21cb06924f23daf7d2d1", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a46b00eeb5cb78288f04df0ab68b4192c92608c9/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46b00eeb5cb78288f04df0ab68b4192c92608c9/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=a46b00eeb5cb78288f04df0ab68b4192c92608c9", "patch": "@@ -21,6 +21,7 @@ use syntax_pos::Span;\n \n use rustc_data_structures::sync::Lrc;\n use std::ops::DerefMut;\n+use std::{panic, process, ptr};\n \n pub trait ExpectOne<A: Array> {\n     fn expect_one(self, err: &'static str) -> A::Item;\n@@ -305,11 +306,18 @@ pub trait MutVisitor: Sized {\n \n /// Use a map-style function (`FnOnce(T) -> T`) to overwrite a `&mut T`. Useful\n /// when using a `flat_map_*` or `filter_map_*` method within a `visit_`\n-/// method.\n+/// method. Abort the program if the closure panics.\n //\n // No `noop_` prefix because there isn't a corresponding method in `MutVisitor`.\n pub fn visit_clobber<T, F>(t: &mut T, f: F) where F: FnOnce(T) -> T {\n-    unsafe { std::ptr::write(t, f(std::ptr::read(t))); }\n+    unsafe {\n+        // Safe because `t` is used in a read-only fashion by `read()` before\n+        // being overwritten by `write()`.\n+        let old_t = ptr::read(t);\n+        let new_t = panic::catch_unwind(panic::AssertUnwindSafe(|| f(old_t)))\n+            .unwrap_or_else(|_| process::abort());\n+        ptr::write(t, new_t);\n+    }\n }\n \n // No `noop_` prefix because there isn't a corresponding method in `MutVisitor`."}]}