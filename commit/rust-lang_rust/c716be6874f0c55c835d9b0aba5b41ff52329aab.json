{"sha": "c716be6874f0c55c835d9b0aba5b41ff52329aab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MTZiZTY4NzRmMGM1NWM4MzVkOWIwYWJhNWI0MWZmNTIzMjlhYWI=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-17T08:57:46Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-17T09:01:49Z"}, "message": "show up some extra info when t!() fails", "tree": {"sha": "3c397bdcc7d114e03dfe9317eb5be84d2d449776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c397bdcc7d114e03dfe9317eb5be84d2d449776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c716be6874f0c55c835d9b0aba5b41ff52329aab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c716be6874f0c55c835d9b0aba5b41ff52329aab", "html_url": "https://github.com/rust-lang/rust/commit/c716be6874f0c55c835d9b0aba5b41ff52329aab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c716be6874f0c55c835d9b0aba5b41ff52329aab/comments", "author": null, "committer": null, "parents": [{"sha": "237d54ff6c4fb3577e02d4c5af02813c11b63d01", "url": "https://api.github.com/repos/rust-lang/rust/commits/237d54ff6c4fb3577e02d4c5af02813c11b63d01", "html_url": "https://github.com/rust-lang/rust/commit/237d54ff6c4fb3577e02d4c5af02813c11b63d01"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "6fc72fa0b2a37d23f5ad367129bdce7a0d22d6ff", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c716be6874f0c55c835d9b0aba5b41ff52329aab/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c716be6874f0c55c835d9b0aba5b41ff52329aab/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=c716be6874f0c55c835d9b0aba5b41ff52329aab", "patch": "@@ -1126,7 +1126,7 @@ impl Build {\n         }\n \n         let mut paths = Vec::new();\n-        let contents = t!(fs::read(stamp));\n+        let contents = t!(fs::read(stamp), &stamp);\n         // This is the method we use for extracting paths from the stamp file passed to us. See\n         // run_cargo for more information (in compile.rs).\n         for part in contents.split(|b| *b == 0) {"}, {"sha": "bb94fb2b755f53342b76fd3dbd28e0e223510196", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c716be6874f0c55c835d9b0aba5b41ff52329aab/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c716be6874f0c55c835d9b0aba5b41ff52329aab/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=c716be6874f0c55c835d9b0aba5b41ff52329aab", "patch": "@@ -21,6 +21,13 @@ macro_rules! t {\n             Err(e) => panic!(\"{} failed with {}\", stringify!($e), e),\n         }\n     };\n+    // it can show extra info in the second parameter\n+    ($e:expr, $extra:expr) => {\n+        match $e {\n+            Ok(e) => e,\n+            Err(e) => panic!(\"{} failed with {} ({:?})\", stringify!($e), e, $extra),\n+        }\n+    };\n }\n \n // Because Cargo adds the compiler's dylib path to our library search path, llvm-config may"}]}