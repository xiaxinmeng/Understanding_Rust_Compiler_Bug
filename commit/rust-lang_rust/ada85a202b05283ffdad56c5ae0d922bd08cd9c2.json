{"sha": "ada85a202b05283ffdad56c5ae0d922bd08cd9c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYTg1YTIwMmIwNTI4M2ZmZGFkNTZjNWFlMGQ5MjJiZDA4Y2Q5YzI=", "commit": {"author": {"name": "Ryman", "email": "haqkrs@gmail.com", "date": "2014-05-27T20:40:50Z"}, "committer": {"name": "Ryman", "email": "haqkrs@gmail.com", "date": "2014-05-27T20:40:50Z"}, "message": "rust manual: supertraits seperator is wrong", "tree": {"sha": "18ede58caef433f57feac3948a937c89f826c146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18ede58caef433f57feac3948a937c89f826c146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ada85a202b05283ffdad56c5ae0d922bd08cd9c2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ada85a202b05283ffdad56c5ae0d922bd08cd9c2", "html_url": "https://github.com/rust-lang/rust/commit/ada85a202b05283ffdad56c5ae0d922bd08cd9c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ada85a202b05283ffdad56c5ae0d922bd08cd9c2/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5811d2bd966716cea1d7653fa7a7cec64171a532", "url": "https://api.github.com/repos/rust-lang/rust/commits/5811d2bd966716cea1d7653fa7a7cec64171a532", "html_url": "https://github.com/rust-lang/rust/commit/5811d2bd966716cea1d7653fa7a7cec64171a532"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5fd686543db543f4b56fb74629368f34676344b5", "filename": "src/doc/rust.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada85a202b05283ffdad56c5ae0d922bd08cd9c2/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/ada85a202b05283ffdad56c5ae0d922bd08cd9c2/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=ada85a202b05283ffdad56c5ae0d922bd08cd9c2", "patch": "@@ -1435,7 +1435,7 @@ trait Circle : Shape { fn radius() -> f64; }\n ~~~~\n \n the syntax `Circle : Shape` means that types that implement `Circle` must also have an implementation for `Shape`.\n-Multiple supertraits are separated by spaces, `trait Circle : Shape Eq { }`.\n+Multiple supertraits are separated by `+`, `trait Circle : Shape + Eq { }`.\n In an implementation of `Circle` for a given type `T`, methods can refer to `Shape` methods,\n since the typechecker checks that any type with an implementation of `Circle` also has an implementation of `Shape`.\n "}]}