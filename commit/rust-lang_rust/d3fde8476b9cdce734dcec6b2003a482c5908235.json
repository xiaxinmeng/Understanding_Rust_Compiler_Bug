{"sha": "d3fde8476b9cdce734dcec6b2003a482c5908235", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZmRlODQ3NmI5Y2RjZTczNGRjZWM2YjIwMDNhNDgyYzU5MDgyMzU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-05-22T12:55:48Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-05-22T12:58:14Z"}, "message": "syntax: put the correct span on doc-comments inside a module.\n\nThe position of the .bump call (before extracting the span fields) was\ncausing a doc-comment to have the span of the next token, not itself.", "tree": {"sha": "7b526f49487c5cff605b39377b55bfe878d3508a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b526f49487c5cff605b39377b55bfe878d3508a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3fde8476b9cdce734dcec6b2003a482c5908235", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3fde8476b9cdce734dcec6b2003a482c5908235", "html_url": "https://github.com/rust-lang/rust/commit/d3fde8476b9cdce734dcec6b2003a482c5908235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3fde8476b9cdce734dcec6b2003a482c5908235/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37bd466e5898da17f474628461abdd023c4d6a4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/37bd466e5898da17f474628461abdd023c4d6a4d", "html_url": "https://github.com/rust-lang/rust/commit/37bd466e5898da17f474628461abdd023c4d6a4d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ef0004d6ee0417bf56db8aaf01614278c24a5ca1", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3fde8476b9cdce734dcec6b2003a482c5908235/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3fde8476b9cdce734dcec6b2003a482c5908235/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=d3fde8476b9cdce734dcec6b2003a482c5908235", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use ast;\n-use codemap::{spanned, Spanned, mk_sp};\n+use codemap::{spanned, Spanned, mk_sp, Span};\n use parse::common::*; //resolve bug?\n use parse::token;\n use parse::parser::Parser;\n@@ -129,10 +129,10 @@ impl<'a> ParserAttr for Parser<'a> {\n                     self.parse_attribute(true)\n                 }\n                 token::DOC_COMMENT(s) => {\n+                    // we need to get the position of this token before we bump.\n+                    let Span { lo, hi, .. } = self.span;\n                     self.bump();\n-                    ::attr::mk_sugared_doc_attr(self.id_to_interned_str(s),\n-                                                self.span.lo,\n-                                                self.span.hi)\n+                    ::attr::mk_sugared_doc_attr(self.id_to_interned_str(s), lo, hi)\n                 }\n                 _ => {\n                     break;"}]}