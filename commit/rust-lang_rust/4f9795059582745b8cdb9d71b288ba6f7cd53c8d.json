{"sha": "4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "node_id": "C_kwDOAAsO6NoAKDRmOTc5NTA1OTU4Mjc0NWI4Y2RiOWQ3MWIyODhiYTZmN2NkNTNjOGQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-02T10:38:33Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-02T10:39:38Z"}, "message": "fix: Fix uncorrect use of double braces in HirDisplay implementations", "tree": {"sha": "9f6da2f8dd74c0642b54cd2071c0b95a5fe5d075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f6da2f8dd74c0642b54cd2071c0b95a5fe5d075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "html_url": "https://github.com/rust-lang/rust/commit/4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f9795059582745b8cdb9d71b288ba6f7cd53c8d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c88d9344c5b32988bfbfc090f50aba5de1db062", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c88d9344c5b32988bfbfc090f50aba5de1db062", "html_url": "https://github.com/rust-lang/rust/commit/5c88d9344c5b32988bfbfc090f50aba5de1db062"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e26c8440d9e65ec9672f2b540e3eab1c6ab78d5d", "filename": "crates/hir/src/display.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4f9795059582745b8cdb9d71b288ba6f7cd53c8d/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f9795059582745b8cdb9d71b288ba6f7cd53c8d/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=4f9795059582745b8cdb9d71b288ba6f7cd53c8d", "patch": "@@ -203,7 +203,7 @@ impl HirDisplay for Variant {\n                 f.write_char(')')?;\n             }\n             VariantData::Record(fields) => {\n-                f.write_str(\" {{\")?;\n+                f.write_str(\" {\")?;\n                 let mut first = true;\n                 for (_, field) in fields.iter() {\n                     if first {\n@@ -216,7 +216,7 @@ impl HirDisplay for Variant {\n                     write!(f, \"{}: \", field.name)?;\n                     field.type_ref.hir_fmt(f)?;\n                 }\n-                f.write_str(\" }}\")?;\n+                f.write_str(\" }\")?;\n             }\n         }\n         Ok(())\n@@ -370,7 +370,7 @@ fn write_where_clause(def: GenericDefId, f: &mut HirFormatter) -> Result<(), Hir\n         WherePredicateTypeTarget::TypeOrConstParam(id) => {\n             match &params.type_or_consts[*id].name() {\n                 Some(name) => write!(f, \"{}\", name),\n-                None => f.write_str(\"{{unnamed}}\"),\n+                None => f.write_str(\"{unnamed}\"),\n             }\n         }\n     };\n@@ -507,9 +507,9 @@ impl HirDisplay for Module {\n             Some(name) => write!(f, \"mod {}\", name),\n             None if self.is_crate_root(f.db) => match self.krate().display_name(f.db) {\n                 Some(name) => write!(f, \"extern crate {}\", name),\n-                None => f.write_str(\"extern crate {{unknown}}\"),\n+                None => f.write_str(\"extern crate {unknown}\"),\n             },\n-            None => f.write_str(\"mod {{unnamed}}\"),\n+            None => f.write_str(\"mod {unnamed}\"),\n         }\n     }\n }"}]}