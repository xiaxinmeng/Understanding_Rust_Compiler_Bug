{"sha": "9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNTRjNjVjOWQwYjNlOTlmNzVkYmFjZmFlZjUyOTUzYTlhNGQwYTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-19T06:55:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-19T06:55:57Z"}, "message": "Rollup merge of #72331 - oddg:forbid-cast-of-cenum-implementing-drop, r=matthewjasper,nikomatsakis\n\nReport error when casting an C-like enum implementing Drop\n\nFollowing approach described in https://github.com/rust-lang/rust/issues/35941", "tree": {"sha": "2f3de332d2576643bdb52c295c14fc711edae7c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f3de332d2576643bdb52c295c14fc711edae7c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7GF+CRBK7hj4Ov3rIwAAdHIIACJR9Y8Z3y9g5ULn7t9KE/Vd\nJeLO8Q6o+YDGGWQfu3gwjCgYu07nYgZ23DWyk0eZXaltV3zO1Wzq4jZPyIbzrm05\nrpRJTQpMxMwLLrsP+fHdMrk7pyPUuFTmdW0hkbHHH4G2yF4trdqQc5fMk0zizH/c\n0lNs2zvCJ5c3EL2VE+OGcM3jNTQe6f1ezleLRWzD/ws8h/5jqOaVLVP81Adb5auE\n59yuC3cdP2mClgTZ5JmhMhabpy4O+RedtnQBz1v7smGLX2kbPKsOBBKj8zmJa3Nz\n8C96hRW03CRUwovzsiz2oH7K0p67kyv+Mb4efHx6iamitUqGPbBBG5BOTq9b2qI=\n=72fs\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f3de332d2576643bdb52c295c14fc711edae7c6\nparent 27d4737ef9f54613e01594b49217378ac05cca42\nparent f3dfe80ee1d13ec923082487e73c6d5d5833eef0\nauthor Ralf Jung <post@ralfj.de> 1592549757 +0200\ncommitter GitHub <noreply@github.com> 1592549757 +0200\n\nRollup merge of #72331 - oddg:forbid-cast-of-cenum-implementing-drop, r=matthewjasper,nikomatsakis\n\nReport error when casting an C-like enum implementing Drop\n\nFollowing approach described in https://github.com/rust-lang/rust/issues/35941\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "html_url": "https://github.com/rust-lang/rust/commit/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d4737ef9f54613e01594b49217378ac05cca42", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d4737ef9f54613e01594b49217378ac05cca42", "html_url": "https://github.com/rust-lang/rust/commit/27d4737ef9f54613e01594b49217378ac05cca42"}, {"sha": "f3dfe80ee1d13ec923082487e73c6d5d5833eef0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3dfe80ee1d13ec923082487e73c6d5d5833eef0", "html_url": "https://github.com/rust-lang/rust/commit/f3dfe80ee1d13ec923082487e73c6d5d5833eef0"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "5a8f5c1b9fbca8685a1caf87f5c12624ab1fcdcc", "filename": "src/librustc_session/lint/builtin.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint%2Fbuiltin.rs?ref=9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "patch": "@@ -534,6 +534,16 @@ declare_lint! {\n     @feature_gate = sym::unsafe_block_in_unsafe_fn;\n }\n \n+declare_lint! {\n+    pub CENUM_IMPL_DROP_CAST,\n+    Warn,\n+    \"a C-like enum implementing Drop is cast\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reference: \"issue #73333 <https://github.com/rust-lang/rust/issues/73333>\",\n+        edition: None,\n+    };\n+}\n+\n declare_lint_pass! {\n     /// Does nothing as a lint pass, but registers some `Lint`s\n     /// that are used by other parts of the compiler.\n@@ -607,6 +617,7 @@ declare_lint_pass! {\n         ASM_SUB_REGISTER,\n         UNSAFE_OP_IN_UNSAFE_FN,\n         INCOMPLETE_INCLUDE,\n+        CENUM_IMPL_DROP_CAST,\n     ]\n }\n "}, {"sha": "1ea7bf25ef2ed67436f99a84f428ef3c200efe8a", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "patch": "@@ -678,7 +678,10 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n             (FnPtr, Ptr(mt)) => self.check_fptr_ptr_cast(fcx, mt),\n \n             // prim -> prim\n-            (Int(CEnum), Int(_)) => Ok(CastKind::EnumCast),\n+            (Int(CEnum), Int(_)) => {\n+                self.cenum_impl_drop_lint(fcx);\n+                Ok(CastKind::EnumCast)\n+            }\n             (Int(Char) | Int(Bool), Int(_)) => Ok(CastKind::PrimIntCast),\n \n             (Int(_) | Float, Int(_) | Float) => Ok(CastKind::NumericCast),\n@@ -775,11 +778,13 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                 // Coerce to a raw pointer so that we generate AddressOf in MIR.\n                 let array_ptr_type = fcx.tcx.mk_ptr(m_expr);\n                 fcx.try_coerce(self.expr, self.expr_ty, array_ptr_type, AllowTwoPhase::No)\n-                    .unwrap_or_else(|_| bug!(\n+                    .unwrap_or_else(|_| {\n+                        bug!(\n                         \"could not cast from reference to array to pointer to array ({:?} to {:?})\",\n                         self.expr_ty,\n                         array_ptr_type,\n-                    ));\n+                    )\n+                    });\n \n                 // this will report a type mismatch if needed\n                 fcx.demand_eqtype(self.span, ety, m_cast.ty);\n@@ -809,6 +814,25 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n             Err(err) => Err(err),\n         }\n     }\n+\n+    fn cenum_impl_drop_lint(&self, fcx: &FnCtxt<'a, 'tcx>) {\n+        if let ty::Adt(d, _) = self.expr_ty.kind {\n+            if d.has_dtor(fcx.tcx) {\n+                fcx.tcx.struct_span_lint_hir(\n+                    lint::builtin::CENUM_IMPL_DROP_CAST,\n+                    self.expr.hir_id,\n+                    self.span,\n+                    |err| {\n+                        err.build(&format!(\n+                            \"cannot cast enum `{}` into integer `{}` because it implements `Drop`\",\n+                            self.expr_ty, self.cast_ty\n+                        ))\n+                        .emit();\n+                    },\n+                );\n+            }\n+        }\n+    }\n }\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {"}, {"sha": "96e3d967e2c61cf8bbdabc2311d469524288ebe0", "filename": "src/test/ui/cenum_impl_drop_cast.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Ftest%2Fui%2Fcenum_impl_drop_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Ftest%2Fui%2Fcenum_impl_drop_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcenum_impl_drop_cast.rs?ref=9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "patch": "@@ -0,0 +1,18 @@\n+#![deny(cenum_impl_drop_cast)]\n+\n+enum E {\n+    A = 0,\n+}\n+\n+impl Drop for E {\n+    fn drop(&mut self) {\n+        println!(\"Drop\");\n+    }\n+}\n+\n+fn main() {\n+    let e = E::A;\n+    let i = e as u32;\n+    //~^ ERROR cannot cast enum `E` into integer `u32` because it implements `Drop`\n+    //~| WARN this was previously accepted\n+}"}, {"sha": "8d847a0c80b16fbf308f87d89886c684c024e374", "filename": "src/test/ui/cenum_impl_drop_cast.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Ftest%2Fui%2Fcenum_impl_drop_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7/src%2Ftest%2Fui%2Fcenum_impl_drop_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcenum_impl_drop_cast.stderr?ref=9c54c65c9d0b3e99f75dbacfaef52953a9a4d0a7", "patch": "@@ -0,0 +1,16 @@\n+error: cannot cast enum `E` into integer `u32` because it implements `Drop`\n+  --> $DIR/cenum_impl_drop_cast.rs:15:13\n+   |\n+LL |     let i = e as u32;\n+   |             ^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/cenum_impl_drop_cast.rs:1:9\n+   |\n+LL | #![deny(cenum_impl_drop_cast)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #73333 <https://github.com/rust-lang/rust/issues/73333>\n+\n+error: aborting due to previous error\n+"}]}