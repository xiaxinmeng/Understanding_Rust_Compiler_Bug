{"sha": "932f239a9c1671573b653d40f0de3a036fa4c55b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMmYyMzlhOWMxNjcxNTczYjY1M2Q0MGYwZGUzYTAzNmZhNGM1NWI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-21T19:26:31Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-21T19:30:53Z"}, "message": "respect distinct anonymous regions in unsafe::transmute_*", "tree": {"sha": "cc6c3deeabee13a7ca1763241b1f3e9a887c5f22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc6c3deeabee13a7ca1763241b1f3e9a887c5f22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/932f239a9c1671573b653d40f0de3a036fa4c55b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/932f239a9c1671573b653d40f0de3a036fa4c55b", "html_url": "https://github.com/rust-lang/rust/commit/932f239a9c1671573b653d40f0de3a036fa4c55b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/932f239a9c1671573b653d40f0de3a036fa4c55b/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5332769d58c5e8d9fee36a7e1f8faa4f5c1b861", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5332769d58c5e8d9fee36a7e1f8faa4f5c1b861", "html_url": "https://github.com/rust-lang/rust/commit/f5332769d58c5e8d9fee36a7e1f8faa4f5c1b861"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0803c91c03854ff16a1f352f09d8ca9a2cb3f4f6", "filename": "src/libcore/unsafe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/932f239a9c1671573b653d40f0de3a036fa4c55b/src%2Flibcore%2Funsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/932f239a9c1671573b653d40f0de3a036fa4c55b/src%2Flibcore%2Funsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funsafe.rs?ref=932f239a9c1671573b653d40f0de3a036fa4c55b", "patch": "@@ -56,9 +56,9 @@ unsafe fn transmute<L, G>(-thing: L) -> G {\n }\n \n /// Coerce an immutable reference to be mutable.\n-unsafe fn transmute_mut<T>(+ptr: &T) -> &mut T { transmute(ptr) }\n+unsafe fn transmute_mut<T>(+ptr: &a/T) -> &a/mut T { transmute(ptr) }\n /// Coerce a mutable reference to be immutable.\n-unsafe fn transmute_immut<T>(+ptr: &mut T) -> &T { transmute(ptr) }\n+unsafe fn transmute_immut<T>(+ptr: &a/mut T) -> &a/T { transmute(ptr) }\n /// Coerce a borrowed pointer to have an arbitrary associated region.\n unsafe fn transmute_region<T>(+ptr: &a/T) -> &b/T { transmute(ptr) }\n /// Coerce a borrowed mutable pointer to have an arbitrary associated region."}]}