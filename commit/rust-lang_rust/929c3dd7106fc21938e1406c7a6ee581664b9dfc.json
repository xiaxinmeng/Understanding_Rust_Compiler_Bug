{"sha": "929c3dd7106fc21938e1406c7a6ee581664b9dfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyOWMzZGQ3MTA2ZmMyMTkzOGUxNDA2YzdhNmVlNTgxNjY0YjlkZmM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-24T22:18:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-24T22:19:01Z"}, "message": "Workarounds for bug #2280: add some temporaries for borrowing.", "tree": {"sha": "029aae38d673898f40fe4c469a3fb392a7b9b65f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/029aae38d673898f40fe4c469a3fb392a7b9b65f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/929c3dd7106fc21938e1406c7a6ee581664b9dfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/929c3dd7106fc21938e1406c7a6ee581664b9dfc", "html_url": "https://github.com/rust-lang/rust/commit/929c3dd7106fc21938e1406c7a6ee581664b9dfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/929c3dd7106fc21938e1406c7a6ee581664b9dfc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7dbf42214c5dfe39b8fd6896171aaa8feee7582", "html_url": "https://github.com/rust-lang/rust/commit/e7dbf42214c5dfe39b8fd6896171aaa8feee7582"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "5d543d291d8aca4f3b8bf8efea7a958f11cef7db", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=929c3dd7106fc21938e1406c7a6ee581664b9dfc", "patch": "@@ -423,7 +423,10 @@ fn configure(opts: options) -> cargo {\n \n fn for_each_package(c: cargo, b: fn(source, package)) {\n     for c.sources.each_value {|v|\n-        for vec::each(copy v.packages) {|p|\n+        // FIXME (#2280): this temporary shouldn't be\n+        // necessary, but seems to be, for borrowing.\n+        let pks = copy v.packages;\n+        for vec::each(pks) {|p|\n             b(v, p);\n         }\n     }"}, {"sha": "e61a1e9543a0875895d01ba59eddde2b425a0602", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=929c3dd7106fc21938e1406c7a6ee581664b9dfc", "patch": "@@ -5096,7 +5096,10 @@ fn trans_crate(sess: session::session, crate: @ast::crate, tcx: ty::ctxt,\n         io::println(#fmt(\"n_null_glues: %u\", ccx.stats.n_null_glues));\n         io::println(#fmt(\"n_real_glues: %u\", ccx.stats.n_real_glues));\n \n-        for vec::each(copy *ccx.stats.fn_times) {|timing|\n+        // FIXME (#2280): this temporary shouldn't be\n+        // necessary, but seems to be, for borrowing.\n+        let times = copy *ccx.stats.fn_times;\n+        for vec::each(times) {|timing|\n             io::println(#fmt(\"time: %s took %d ms\", timing.ident,\n                              timing.time));\n         }"}, {"sha": "343fd07a1d55245a967009b734dd0747b360c8be", "filename": "src/rustc/middle/tstate/auxiliary.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=929c3dd7106fc21938e1406c7a6ee581664b9dfc", "patch": "@@ -727,7 +727,10 @@ fn find_instances(_fcx: fn_ctxt, subst: subst, c: constraint) ->\n     alt c {\n       cinit(_, _, _) {/* this is dealt with separately */ }\n       cpred(p, descs) {\n-        for vec::each(copy *descs) {|d|\n+        // FIXME (#2280): this temporary shouldn't be\n+        // necessary, but seems to be, for borrowing.\n+        let ds = copy *descs;\n+        for vec::each(ds) {|d|\n             if args_mention(d.node.args, find_in_subst_bool, subst) {\n                 let old_bit_num = d.node.bit_num;\n                 let newv = replace(subst, d);"}, {"sha": "4e69bba7eccdc68330d58613fbe2e329dc5f6017", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/929c3dd7106fc21938e1406c7a6ee581664b9dfc/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=929c3dd7106fc21938e1406c7a6ee581664b9dfc", "patch": "@@ -119,7 +119,10 @@ fn writer(path: str, writech: comm::chan<comm::chan<line>>, size: uint)\n             while prev <= i {\n                 if lines.contains_key(prev) {\n                     #debug(\"WS %u\", prev);\n-                    cout.write(lines.get(prev));\n+                    // FIXME (#2280): this temporary shouldn't be\n+                    // necessary, but seems to be, for borrowing.\n+                    let v : [u8] = lines.get(prev);\n+                    cout.write(v);\n                     done += 1_u;\n                     lines.remove(prev);\n                     prev += 1_u;"}]}