{"sha": "6a360194404c07e09b548626efa4b7c7777510e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMzYwMTk0NDA0YzA3ZTA5YjU0ODYyNmVmYTRiN2M3Nzc3NTEwZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-12T20:31:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-12T20:31:17Z"}, "message": "Auto merge of #46696 - kennytm:rollup, r=kennytm\n\nRollup of 4 pull requests\n\n- Successful merges: #46668, #46672, #46691, #46694\n- Failed merges:", "tree": {"sha": "db2e54eb07f0c295770a5fb47130ca4d6a76064e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db2e54eb07f0c295770a5fb47130ca4d6a76064e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a360194404c07e09b548626efa4b7c7777510e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a360194404c07e09b548626efa4b7c7777510e9", "html_url": "https://github.com/rust-lang/rust/commit/6a360194404c07e09b548626efa4b7c7777510e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a360194404c07e09b548626efa4b7c7777510e9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "707d0708158dabd9b0a12af21a4b51bf1713cb9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/707d0708158dabd9b0a12af21a4b51bf1713cb9e", "html_url": "https://github.com/rust-lang/rust/commit/707d0708158dabd9b0a12af21a4b51bf1713cb9e"}, {"sha": "80d1de97ade003d83c766f5a9428e343015cc4fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/80d1de97ade003d83c766f5a9428e343015cc4fb", "html_url": "https://github.com/rust-lang/rust/commit/80d1de97ade003d83c766f5a9428e343015cc4fb"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "c0a18ca5524206f122761c40ebe5e2f5d35b7950", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a360194404c07e09b548626efa4b7c7777510e9/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6a360194404c07e09b548626efa4b7c7777510e9/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=6a360194404c07e09b548626efa4b7c7777510e9", "patch": "@@ -1,6 +1,7 @@\n language: shell\n sudo: required\n dist: trusty\n+group: deprecated-2017Q4\n services:\n   - docker\n "}, {"sha": "81971157b84927a7728bdef1fc9d36002c6e3b45", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6a360194404c07e09b548626efa4b7c7777510e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/6a360194404c07e09b548626efa4b7c7777510e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=6a360194404c07e09b548626efa4b7c7777510e9", "patch": "@@ -911,24 +911,24 @@\n                         searchWords[j].replace(/_/g, \"\").indexOf(val) > -1)\n                     {\n                         // filter type: ... queries\n-                        if (typePassesFilter(typeFilter, ty) && results[fullId] === undefined) {\n+                        if (typePassesFilter(typeFilter, ty.ty) && results[fullId] === undefined) {\n                             index = searchWords[j].replace(/_/g, \"\").indexOf(val);\n                         }\n                     }\n                     if ((lev = levenshtein(searchWords[j], val)) <= MAX_LEV_DISTANCE) {\n-                        if (typePassesFilter(typeFilter, ty) === false) {\n+                        if (typePassesFilter(typeFilter, ty.ty) === false) {\n                             lev = MAX_LEV_DISTANCE + 1;\n                         } else {\n                             lev += 1;\n                         }\n                     }\n                     if ((in_args = findArg(ty, valGenerics)) <= MAX_LEV_DISTANCE) {\n-                        if (typePassesFilter(typeFilter, ty) === false) {\n+                        if (typePassesFilter(typeFilter, ty.ty) === false) {\n                             in_args = MAX_LEV_DISTANCE + 1;\n                         }\n                     }\n                     if ((returned = checkReturned(ty, valGenerics)) <= MAX_LEV_DISTANCE) {\n-                        if (typePassesFilter(typeFilter, ty) === false) {\n+                        if (typePassesFilter(typeFilter, ty.ty) === false) {\n                             returned = MAX_LEV_DISTANCE + 1;\n                         }\n                     }"}, {"sha": "308182e6a0e7125be62a5da7364386f2bde96ddc", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6a360194404c07e09b548626efa4b7c7777510e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/6a360194404c07e09b548626efa4b7c7777510e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=6a360194404c07e09b548626efa4b7c7777510e9", "patch": "@@ -822,6 +822,7 @@ span.since {\n \t\tmargin-left: -15px;\n \t\tpadding: 0 15px;\n \t\tposition: static;\n+\t\tz-index: 1;\n \t}\n \n \t.sidebar > .location {\n@@ -848,25 +849,34 @@ span.since {\n \t}\n \n \t.sidebar-menu {\n-\t\tposition: absolute;\n+\t\tposition: fixed;\n+\t\tz-index: 10;\n \t\tfont-size: 2rem;\n \t\tcursor: pointer;\n-\t\tmargin-top: 2px;\n+\t\twidth: 45px;\n+\t\tleft: 0;\n+\t\ttext-align: center;\n \t\tdisplay: block;\n+\t\tborder-bottom: 1px solid;\n+\t\tborder-right: 1px solid;\n \t}\n \n \t.sidebar-elems {\n-\t\tbackground-color: #F1F1F1;\n \t\tposition: fixed;\n \t\tz-index: 1;\n \t\tleft: 0;\n \t\ttop: 45px;\n \t\tbottom: 0;\n \t\toverflow-y: auto;\n-\t\tborder-right: 1px solid #000;\n+\t\tborder-right: 1px solid;\n \t\tdisplay: none;\n \t}\n \n+\t.sidebar > .block.version {\n+\t\tborder-bottom: none;\n+\t\tmargin-top: 12px;\n+\t}\n+\n \tnav.sub {\n \t\tmargin: 0 auto;\n \t}"}, {"sha": "c31808cfc0f6d96c1ae93bc3fa127460c4c1a760", "filename": "src/librustdoc/html/static/styles/main.css", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6a360194404c07e09b548626efa4b7c7777510e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/6a360194404c07e09b548626efa4b7c7777510e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css?ref=6a360194404c07e09b548626efa4b7c7777510e9", "patch": "@@ -330,3 +330,16 @@ pre.ignore:hover, .information:hover + pre.ignore {\n .modal-content > .close:hover + .whiter {\n \tbackground-color: #ff1f1f;\n }\n+\n+@media (max-width: 700px) {\n+\t.sidebar-menu {\n+\t\tbackground-color: #F1F1F1;\n+\t\tborder-bottom-color: #e0e0e0;\n+\t\tborder-right-color: #e0e0e0;\n+\t}\n+\n+\t.sidebar-elems {\n+\t\tbackground-color: #F1F1F1;\n+\t\tborder-right-color: #000;\n+\t}\n+}"}, {"sha": "6f51ea67cb1d1e9c3540b4042897a2d540b96b3e", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a360194404c07e09b548626efa4b7c7777510e9/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6a360194404c07e09b548626efa4b7c7777510e9/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=6a360194404c07e09b548626efa4b7c7777510e9", "patch": "@@ -566,8 +566,8 @@ extern \"C\" void LLVMRustAddModuleFlag(LLVMModuleRef M, const char *Name,\n   unwrap(M)->addModuleFlag(Module::Warning, Name, Value);\n }\n \n-extern \"C\" void LLVMRustMetadataAsValue(LLVMContextRef C, LLVMMetadataRef MD) {\n-  wrap(MetadataAsValue::get(*unwrap(C), unwrap(MD)));\n+extern \"C\" LLVMValueRef LLVMRustMetadataAsValue(LLVMContextRef C, LLVMMetadataRef MD) {\n+  return wrap(MetadataAsValue::get(*unwrap(C), unwrap(MD)));\n }\n \n extern \"C\" LLVMRustDIBuilderRef LLVMRustDIBuilderCreate(LLVMModuleRef M) {"}]}