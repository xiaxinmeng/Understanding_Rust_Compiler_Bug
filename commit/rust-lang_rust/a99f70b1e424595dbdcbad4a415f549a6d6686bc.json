{"sha": "a99f70b1e424595dbdcbad4a415f549a6d6686bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OWY3MGIxZTQyNDU5NWRiZGNiYWQ0YTQxNWY1NDlhNmQ2Njg2YmM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-12-11T21:36:03Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-12-15T17:55:41Z"}, "message": "Clarify zero-value behavior of `ctlz`/`cttz` intrinsics.\n\nFixes https://github.com/rust-lang/rust/issues/34381.", "tree": {"sha": "b79454ecab7dbd1f5ad79280feeec4f50204916d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b79454ecab7dbd1f5ad79280feeec4f50204916d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a99f70b1e424595dbdcbad4a415f549a6d6686bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a99f70b1e424595dbdcbad4a415f549a6d6686bc", "html_url": "https://github.com/rust-lang/rust/commit/a99f70b1e424595dbdcbad4a415f549a6d6686bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a99f70b1e424595dbdcbad4a415f549a6d6686bc/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b197e4a45f31849c29bf6de260531a8f85ba1bf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b197e4a45f31849c29bf6de260531a8f85ba1bf5", "html_url": "https://github.com/rust-lang/rust/commit/b197e4a45f31849c29bf6de260531a8f85ba1bf5"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "31a0cc6884184237d0585576eba900f2b7ee8c41", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/a99f70b1e424595dbdcbad4a415f549a6d6686bc/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99f70b1e424595dbdcbad4a415f549a6d6686bc/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=a99f70b1e424595dbdcbad4a415f549a6d6686bc", "patch": "@@ -1156,10 +1156,58 @@ extern \"rust-intrinsic\" {\n     /// Returns the number of bits set in an integer type `T`\n     pub fn ctpop<T>(x: T) -> T;\n \n-    /// Returns the number of leading bits unset in an integer type `T`\n+    /// Returns the number of leading unset bits (zeroes) in an integer type `T`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(core_intrinsics)]\n+    ///\n+    /// use std::intrinsics::ctlz;\n+    ///\n+    /// let x = 0b0001_1100_u8;\n+    /// let num_leading = unsafe { ctlz(x) };\n+    /// assert_eq!(num_leading, 3);\n+    /// ```\n+    ///\n+    /// An `x` with value `0` will return the bit width of `T`.\n+    ///\n+    /// ```\n+    /// #![feature(core_intrinsics)]\n+    ///\n+    /// use std::intrinsics::ctlz;\n+    ///\n+    /// let x = 0u16;\n+    /// let num_leading = unsafe { ctlz(x) };\n+    /// assert_eq!(num_leading, 16);\n+    /// ```\n     pub fn ctlz<T>(x: T) -> T;\n \n-    /// Returns the number of trailing bits unset in an integer type `T`\n+    /// Returns the number of trailing unset bits (zeroes) in an integer type `T`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(core_intrinsics)]\n+    ///\n+    /// use std::intrinsics::cttz;\n+    ///\n+    /// let x = 0b0011_1000_u8;\n+    /// let num_trailing = unsafe { cttz(x) };\n+    /// assert_eq!(num_trailing, 3);\n+    /// ```\n+    ///\n+    /// An `x` with value `0` will return the bit width of `T`:\n+    ///\n+    /// ```\n+    /// #![feature(core_intrinsics)]\n+    ///\n+    /// use std::intrinsics::cttz;\n+    ///\n+    /// let x = 0u16;\n+    /// let num_trailing = unsafe { cttz(x) };\n+    /// assert_eq!(num_trailing, 16);\n+    /// ```\n     pub fn cttz<T>(x: T) -> T;\n \n     /// Reverses the bytes in an integer type `T`."}]}