{"sha": "3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "node_id": "C_kwDOAAsO6NoAKDNkZTc0ZjdlMmJlN2JlOTgzYWFlZjBmZTdiZTA4ZTkwMzBlNGVjYmI", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-08-20T01:43:37Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-08-20T01:43:37Z"}, "message": "Suggest the right help message for as_ref", "tree": {"sha": "f5cab361b82580d702c5fcf67f20e55ea6434b8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5cab361b82580d702c5fcf67f20e55ea6434b8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "html_url": "https://github.com/rust-lang/rust/commit/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1603a70f82240ba2d27f72f964e36614d7620ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1603a70f82240ba2d27f72f964e36614d7620ad3", "html_url": "https://github.com/rust-lang/rust/commit/1603a70f82240ba2d27f72f964e36614d7620ad3"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "529ddf03a8cc3bc5e4bd588dcb50dc70bf337564", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "patch": "@@ -2078,7 +2078,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                             diag.span_suggestion(\n                                 span,\n                                 *msg,\n-                                format!(\"{}.as_ref()\", snippet),\n+                                // HACK: fix issue# 100605, suggesting convert from &Option<T> to Option<&T>, remove the extra `&`\n+                                format!(\"{}.as_ref()\", snippet.trim_start_matches('&')),\n                                 Applicability::MachineApplicable,\n                             );\n                         }"}, {"sha": "917a45c15bbc81a1ee6d19122d9e0bbf57549add", "filename": "src/test/ui/issues/issue-100605.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/src%2Ftest%2Fui%2Fissues%2Fissue-100605.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/src%2Ftest%2Fui%2Fissues%2Fissue-100605.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-100605.rs?ref=3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "patch": "@@ -0,0 +1,9 @@\n+fn takes_option(_arg: Option<&String>) {}\n+\n+fn main() {\n+    takes_option(&None); //~ ERROR 4:18: 4:23: mismatched types [E0308]\n+\n+    let x = String::from(\"x\");\n+    let res = Some(x);\n+    takes_option(&res); //~ ERROR 8:18: 8:22: mismatched types [E0308]\n+}"}, {"sha": "886e3cd6bb794b0393e659de16a81dcf86440111", "filename": "src/test/ui/issues/issue-100605.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/src%2Ftest%2Fui%2Fissues%2Fissue-100605.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3de74f7e2be7be983aaef0fe7be08e9030e4ecbb/src%2Ftest%2Fui%2Fissues%2Fissue-100605.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-100605.stderr?ref=3de74f7e2be7be983aaef0fe7be08e9030e4ecbb", "patch": "@@ -0,0 +1,46 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-100605.rs:4:18\n+   |\n+LL |     takes_option(&None);\n+   |     ------------ ^^^^^ expected enum `Option`, found `&Option<_>`\n+   |     |\n+   |     arguments to this function are incorrect\n+   |\n+   = note:   expected enum `Option<&String>`\n+           found reference `&Option<_>`\n+note: function defined here\n+  --> $DIR/issue-100605.rs:1:4\n+   |\n+LL | fn takes_option(_arg: Option<&String>) {}\n+   |    ^^^^^^^^^^^^ ---------------------\n+help: you can convert from `&Option<T>` to `Option<&T>` using `.as_ref()`\n+   |\n+LL |     takes_option(None.as_ref());\n+   |                  ~~~~~~~~~~~~~\n+help: consider removing the borrow\n+   |\n+LL -     takes_option(&None);\n+LL +     takes_option(None);\n+   |\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-100605.rs:8:18\n+   |\n+LL |     takes_option(&res);\n+   |     ------------ ^^^^\n+   |     |            |\n+   |     |            expected enum `Option`, found `&Option<String>`\n+   |     |            help: you can convert from `&Option<T>` to `Option<&T>` using `.as_ref()`: `res.as_ref()`\n+   |     arguments to this function are incorrect\n+   |\n+   = note:   expected enum `Option<&String>`\n+           found reference `&Option<String>`\n+note: function defined here\n+  --> $DIR/issue-100605.rs:1:4\n+   |\n+LL | fn takes_option(_arg: Option<&String>) {}\n+   |    ^^^^^^^^^^^^ ---------------------\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}