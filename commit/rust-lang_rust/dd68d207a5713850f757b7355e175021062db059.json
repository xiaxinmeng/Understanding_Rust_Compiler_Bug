{"sha": "dd68d207a5713850f757b7355e175021062db059", "node_id": "C_kwDOAAsO6NoAKGRkNjhkMjA3YTU3MTM4NTBmNzU3YjczNTVlMTc1MDIxMDYyZGIwNTk", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-23T20:57:02Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-29T12:37:01Z"}, "message": "Don't display \"Methods from Deref<...>\" if no method is display (the ones which don't have `self` argument)", "tree": {"sha": "86315a590f848dc221d475c72e8fee69dc428f0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86315a590f848dc221d475c72e8fee69dc428f0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd68d207a5713850f757b7355e175021062db059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd68d207a5713850f757b7355e175021062db059", "html_url": "https://github.com/rust-lang/rust/commit/dd68d207a5713850f757b7355e175021062db059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd68d207a5713850f757b7355e175021062db059/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3398877858b28862854097bd33a4b9bbadcd79af", "url": "https://api.github.com/repos/rust-lang/rust/commits/3398877858b28862854097bd33a4b9bbadcd79af", "html_url": "https://github.com/rust-lang/rust/commit/3398877858b28862854097bd33a4b9bbadcd79af"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "ceabc76c2e91ef04fe18e51c87fc900fa1973a36", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dd68d207a5713850f757b7355e175021062db059/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd68d207a5713850f757b7355e175021062db059/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=dd68d207a5713850f757b7355e175021062db059", "patch": "@@ -1075,9 +1075,10 @@ fn render_assoc_items_inner(\n     };\n     let (non_trait, traits): (Vec<_>, _) = v.iter().partition(|i| i.inner_impl().trait_.is_none());\n     if !non_trait.is_empty() {\n+        let mut tmp_buf = Buffer::empty_from(w);\n         let render_mode = match what {\n             AssocItemRender::All => {\n-                w.write_str(\n+                tmp_buf.write_str(\n                     \"<h2 id=\\\"implementations\\\" class=\\\"small-section-header\\\">\\\n                          Implementations<a href=\\\"#implementations\\\" class=\\\"anchor\\\"></a>\\\n                     </h2>\",\n@@ -1091,7 +1092,7 @@ fn render_assoc_items_inner(\n                     cx.deref_id_map.borrow_mut().insert(def_id, id.clone());\n                 }\n                 write!(\n-                    w,\n+                    tmp_buf,\n                     \"<h2 id=\\\"{id}\\\" class=\\\"small-section-header\\\">\\\n                          <span>Methods from {trait_}&lt;Target = {type_}&gt;</span>\\\n                          <a href=\\\"#{id}\\\" class=\\\"anchor\\\"></a>\\\n@@ -1103,9 +1104,10 @@ fn render_assoc_items_inner(\n                 RenderMode::ForDeref { mut_: deref_mut_ }\n             }\n         };\n+        let mut impls_buf = Buffer::empty_from(w);\n         for i in &non_trait {\n             render_impl(\n-                w,\n+                &mut impls_buf,\n                 cx,\n                 i,\n                 containing_item,\n@@ -1122,6 +1124,10 @@ fn render_assoc_items_inner(\n                 },\n             );\n         }\n+        if !impls_buf.is_empty() {\n+            w.push_buffer(tmp_buf);\n+            w.push_buffer(impls_buf);\n+        }\n     }\n \n     if !traits.is_empty() {"}, {"sha": "9833599e1230070335dc3b740f8aa2dcd94ae42b", "filename": "src/test/rustdoc/recursive-deref.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dd68d207a5713850f757b7355e175021062db059/src%2Ftest%2Frustdoc%2Frecursive-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd68d207a5713850f757b7355e175021062db059/src%2Ftest%2Frustdoc%2Frecursive-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frecursive-deref.rs?ref=dd68d207a5713850f757b7355e175021062db059", "patch": "@@ -5,7 +5,12 @@ pub struct A;\n pub struct B;\n pub struct C;\n \n+impl C {\n+    pub fn c(&self) {}\n+}\n+\n // @has recursive_deref/struct.A.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for A'\n+// @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.c\"]' 'pub fn c(&self)'\n impl Deref for A {\n     type Target = B;\n \n@@ -15,6 +20,7 @@ impl Deref for A {\n }\n \n // @has recursive_deref/struct.B.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for B'\n+// @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.c\"]' 'pub fn c(&self)'\n impl Deref for B {\n     type Target = C;\n \n@@ -38,7 +44,13 @@ pub struct E;\n pub struct F;\n pub struct G;\n \n+impl G {\n+    // There is no \"self\" parameter so it shouldn't be listed!\n+    pub fn g() {}\n+}\n+\n // @has recursive_deref/struct.D.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for D'\n+// @!has '-' '//*[@id=\"deref-methods-G\"]'\n impl Deref for D {\n     type Target = E;\n \n@@ -48,6 +60,7 @@ impl Deref for D {\n }\n \n // @has recursive_deref/struct.E.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for E'\n+// @!has '-' '//*[@id=\"deref-methods-G\"]'\n impl Deref for E {\n     type Target = F;\n \n@@ -57,6 +70,7 @@ impl Deref for E {\n }\n \n // @has recursive_deref/struct.F.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for F'\n+// @!has '-' '//*[@id=\"deref-methods-G\"]'\n impl Deref for F {\n     type Target = G;\n \n@@ -78,7 +92,13 @@ impl Deref for G {\n pub struct H;\n pub struct I;\n \n+impl I {\n+    // There is no \"self\" parameter so it shouldn't be listed!\n+    pub fn i() {}\n+}\n+\n // @has recursive_deref/struct.H.html '//h3[@class=\"code-header in-band\"]' 'impl Deref for H'\n+// @!has '-' '//*[@id=\"deref-methods-I\"]'\n impl Deref for H {\n     type Target = I;\n "}]}