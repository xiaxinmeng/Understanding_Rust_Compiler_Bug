{"sha": "10356458a7299066b20c4282368af2f76a17ea52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMzU2NDU4YTcyOTkwNjZiMjBjNDI4MjM2OGFmMmY3NmExN2VhNTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-16T17:08:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-16T17:08:36Z"}, "message": "Auto merge of #24738 - joliv:patch-2, r=steveklabnik\n\nThe \"unit value\" is a value of the \"unit type,\" not the \"unit value type.\" Regardless of correctness, this straight syntax is easier to grok.\r\n\r\nPart of #16676\r\n\r\nSorry if something's off here, it's my first pull request to rust!", "tree": {"sha": "4ecbf0db1c0c4e9f8a9c3b84b7c99ef1595d055d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ecbf0db1c0c4e9f8a9c3b84b7c99ef1595d055d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10356458a7299066b20c4282368af2f76a17ea52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10356458a7299066b20c4282368af2f76a17ea52", "html_url": "https://github.com/rust-lang/rust/commit/10356458a7299066b20c4282368af2f76a17ea52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10356458a7299066b20c4282368af2f76a17ea52/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "520a471bc5da4ef30f60c0494c6889fe22bbbe2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/520a471bc5da4ef30f60c0494c6889fe22bbbe2c", "html_url": "https://github.com/rust-lang/rust/commit/520a471bc5da4ef30f60c0494c6889fe22bbbe2c"}, {"sha": "b87056fa31b4c5926c2a0ad78613cf6387f8fdba", "url": "https://api.github.com/repos/rust-lang/rust/commits/b87056fa31b4c5926c2a0ad78613cf6387f8fdba", "html_url": "https://github.com/rust-lang/rust/commit/b87056fa31b4c5926c2a0ad78613cf6387f8fdba"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "5be61a51bf0a4d6425a0ed281453393cc5209b69", "filename": "src/doc/reference.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/10356458a7299066b20c4282368af2f76a17ea52/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/10356458a7299066b20c4282368af2f76a17ea52/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=10356458a7299066b20c4282368af2f76a17ea52", "patch": "@@ -638,7 +638,7 @@ apply to the crate as a whole.\n ```\n \n A crate that contains a `main` function can be compiled to an executable. If a\n-`main` function is present, its return type must be [`unit`](#primitive-types)\n+`main` function is present, its return type must be [`unit`](#tuple-types)\n and it must take no arguments.\n \n # Items and attributes\n@@ -2873,7 +2873,7 @@ The `+`, `-`, `*`, `/`, `%`, `&`, `|`, `^`, `<<`, and `>>` operators may be\n composed with the `=` operator. The expression `lval OP= val` is equivalent to\n `lval = lval OP val`. For example, `x = x + 1` may be written as `x += 1`.\n \n-Any such expression always has the [`unit`](#primitive-types) type.\n+Any such expression always has the [`unit`](#tuple-types) type.\n \n #### Operator precedence\n \n@@ -3315,6 +3315,9 @@ assert!(b != \"world\");\n assert!(p.0 == 10);\n ```\n \n+For historical reasons and convenience, the tuple type with no elements (`()`)\n+is often called \u2018unit\u2019 or \u2018the unit type\u2019.\n+\n ### Array, and Slice types\n \n Rust has two different types for a list of items:"}]}