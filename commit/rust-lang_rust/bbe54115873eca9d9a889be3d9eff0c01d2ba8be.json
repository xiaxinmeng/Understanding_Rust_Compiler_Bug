{"sha": "bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZTU0MTE1ODczZWNhOWQ5YTg4OWJlM2Q5ZWZmMGMwMWQyYmE4YmU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2017-04-06T02:11:22Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2017-04-06T02:11:22Z"}, "message": "document the implementation a bit more", "tree": {"sha": "a6a42f0e564411ac866da14f3e926d5f6802ad70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a42f0e564411ac866da14f3e926d5f6802ad70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "html_url": "https://github.com/rust-lang/rust/commit/bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/comments", "author": null, "committer": null, "parents": [{"sha": "ecddad6920b7640ff0398a52a808703db3d4e62a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecddad6920b7640ff0398a52a808703db3d4e62a", "html_url": "https://github.com/rust-lang/rust/commit/ecddad6920b7640ff0398a52a808703db3d4e62a"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "d204703b775983ec2b74f60407e796373cf357d7", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "patch": "@@ -1187,7 +1187,8 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                 }\n             }\n \n-            // Create llvm.used variable\n+            // Create the llvm.used variable\n+            // This variable has type [N x i8*] and is stored in the llvm.metadata section\n             if !ccx.used_statics().borrow().is_empty() {\n                 let name = CString::new(\"llvm.used\").unwrap();\n                 let section = CString::new(\"llvm.metadata\").unwrap();"}, {"sha": "daf1a1ba95f9a175991e2877cf2c9e4d2b0d889e", "filename": "src/librustc_trans/consts.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibrustc_trans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibrustc_trans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fconsts.rs?ref=bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "patch": "@@ -277,6 +277,7 @@ pub fn trans_static<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         base::set_link_section(ccx, g, attrs);\n \n         if attr::contains_name(attrs, \"used\") {\n+            // This static will be stored in the llvm.used variable which is an array of i8*\n             let cast = llvm::LLVMConstPointerCast(g, Type::i8p(ccx).to_ref());\n             ccx.used_statics().borrow_mut().push(cast);\n         }"}, {"sha": "afb94f546abe894aeb9e001a8545e2bc51915803", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "patch": "@@ -132,6 +132,8 @@ pub struct LocalCrateContext<'tcx> {\n     /// to constants.)\n     statics_to_rauw: RefCell<Vec<(ValueRef, ValueRef)>>,\n \n+    /// Statics that will be placed in the llvm.used variable\n+    /// See http://llvm.org/docs/LangRef.html#the-llvm-used-global-variable for details\n     used_statics: RefCell<Vec<ValueRef>>,\n \n     lltypes: RefCell<FxHashMap<Ty<'tcx>, Type>>,"}, {"sha": "5f7190012038621f0e3652723fd3927292cf3678", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe54115873eca9d9a889be3d9eff0c01d2ba8be/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=bbe54115873eca9d9a889be3d9eff0c01d2ba8be", "patch": "@@ -344,8 +344,8 @@ declare_features! (\n     // See rust-lang/rfcs#1414. Allows code like `let x: &'static u32 = &42` to work.\n     (active, rvalue_static_promotion, \"1.15.1\", Some(38865)),\n \n-    // Used to preserve symbols\n-    (active, used, \"1.18.0\", None),\n+    // Used to preserve symbols (see llvm.used)\n+    (active, used, \"1.18.0\", Some(40289)),\n );\n \n declare_features! ("}]}