{"sha": "9f3151abe6564ba367a1f82b02bea199ce9283b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMzE1MWFiZTY1NjRiYTM2N2ExZjgyYjAyYmVhMTk5Y2U5MjgzYjg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-15T09:17:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-15T09:17:27Z"}, "message": "Rollup merge of #56718 - RalfJung:use-libbacktrace-printing, r=alexcrichton\n\nUse libbacktrace pretty-printing\n\nr? @alexcrichton", "tree": {"sha": "06e7fa3dc24db1e1b5803f1227e5105b627f4e1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06e7fa3dc24db1e1b5803f1227e5105b627f4e1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f3151abe6564ba367a1f82b02bea199ce9283b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcFMaoCRBK7hj4Ov3rIwAAdHIIAGWo9bGGfK0nZN5HcT7F42LT\nPvsxx/LnwwX8eM7VEKytsO2atrxH6rWgkUQVtyXc2I4QmI+kXiuEuibMzDBFP3fP\nPbKg7+bkOGKjSemhLOWU45Q9ze7pal7TQJojKqbiiCEK8B4ILuYM4mZX0JdQXcex\ngGG7G4tAfC2lMxi6eDn3/jzb5Y7E6z9142CiYs5ZaDJBU6geUMpB20znXp8Hd75c\nn8m8SLyyZe0NRqDi/W2BypHPGhVZNxYvOlW48UzH6XICRgYxc93bTti7rltez3/e\nIj6OSx2Io0Hq2l7HCE3F1Pq+LRGW9MeO5pmUkSR824yNHtbizegQWVLgSAC4Ids=\n=mFCS\n-----END PGP SIGNATURE-----\n", "payload": "tree 06e7fa3dc24db1e1b5803f1227e5105b627f4e1b\nparent 7f04a646c68acb7f964e113d145f9bb28bfbb48a\nparent 8e994a2732d28257ae9245e300e02751a990c9a5\nauthor Pietro Albini <pietro@pietroalbini.org> 1544865447 +0100\ncommitter GitHub <noreply@github.com> 1544865447 +0100\n\nRollup merge of #56718 - RalfJung:use-libbacktrace-printing, r=alexcrichton\n\nUse libbacktrace pretty-printing\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f3151abe6564ba367a1f82b02bea199ce9283b8", "html_url": "https://github.com/rust-lang/rust/commit/9f3151abe6564ba367a1f82b02bea199ce9283b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f3151abe6564ba367a1f82b02bea199ce9283b8/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f04a646c68acb7f964e113d145f9bb28bfbb48a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f04a646c68acb7f964e113d145f9bb28bfbb48a", "html_url": "https://github.com/rust-lang/rust/commit/7f04a646c68acb7f964e113d145f9bb28bfbb48a"}, {"sha": "8e994a2732d28257ae9245e300e02751a990c9a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e994a2732d28257ae9245e300e02751a990c9a5", "html_url": "https://github.com/rust-lang/rust/commit/8e994a2732d28257ae9245e300e02751a990c9a5"}], "stats": {"total": 56, "additions": 10, "deletions": 46}, "files": [{"sha": "be4a1c2f1d3c40292b0d5530e59b38a7dcb4b231", "filename": "Cargo.lock", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f3151abe6564ba367a1f82b02bea199ce9283b8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9f3151abe6564ba367a1f82b02bea199ce9283b8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9f3151abe6564ba367a1f82b02bea199ce9283b8", "patch": "@@ -81,7 +81,7 @@ dependencies = [\n \n [[package]]\n name = \"backtrace\"\n-version = \"0.3.9\"\n+version = \"0.3.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"backtrace-sys 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -728,15 +728,15 @@ name = \"error-chain\"\n version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"error-chain\"\n version = \"0.12.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -751,7 +751,7 @@ name = \"failure\"\n version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure_derive 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -2060,7 +2060,7 @@ name = \"rustc\"\n version = \"0.0.0\"\n dependencies = [\n  \"arena 0.0.0\",\n- \"backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"chalk-engine 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -3380,7 +3380,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum arrayvec 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1e964f9e24d588183fcb43503abda40d288c8657dfc27311516ce2f05675aef\"\n \"checksum assert_cli 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"98589b0e465a6c510d95fceebd365bb79bedece7f6e18a480897f2015f85ec51\"\n \"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n-\"checksum backtrace 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89a47830402e9981c5c41223151efcced65a0510c13097c769cede7efb34782a\"\n+\"checksum backtrace 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"18b65ea1161bfb2dd6da6fade5edd4dbd08fba85012123dd333d2fd1b90b2782\"\n \"checksum backtrace-sys 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c66d56ac8dabd07f6aacdaf633f4b8262f5b3601a810a0dcddffd5c22c69daa0\"\n \"checksum bit-set 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6f1efcc46c18245a69c38fcc5cc650f16d3a59d034f3106e9ed63748f695730a\"\n \"checksum bit-vec 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4440d5cb623bb7390ae27fec0bb6c61111969860f8e3ae198bfa0663645e67cf\""}, {"sha": "8b16aafd314d7d0d53a20c652d85c2214a54a875", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 4, "deletions": 40, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9f3151abe6564ba367a1f82b02bea199ce9283b8/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f3151abe6564ba367a1f82b02bea199ce9283b8/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=9f3151abe6564ba367a1f82b02bea199ce9283b8", "patch": "@@ -183,50 +183,14 @@ pub struct EvalError<'tcx> {\n impl<'tcx> EvalError<'tcx> {\n     pub fn print_backtrace(&mut self) {\n         if let Some(ref mut backtrace) = self.backtrace {\n-            eprintln!(\"{}\", print_backtrace(&mut *backtrace));\n+            print_backtrace(&mut *backtrace);\n         }\n     }\n }\n \n-fn print_backtrace(backtrace: &mut Backtrace) -> String {\n-    use std::fmt::Write;\n-\n+fn print_backtrace(backtrace: &mut Backtrace) {\n     backtrace.resolve();\n-\n-    let mut trace_text = \"\\n\\nAn error occurred in miri:\\n\".to_string();\n-    write!(trace_text, \"backtrace frames: {}\\n\", backtrace.frames().len()).unwrap();\n-    'frames: for (i, frame) in backtrace.frames().iter().enumerate() {\n-        if frame.symbols().is_empty() {\n-            write!(trace_text, \"  {}: no symbols\\n\", i).unwrap();\n-        }\n-        let mut first = true;\n-        for symbol in frame.symbols() {\n-            if first {\n-                write!(trace_text, \"  {}: \", i).unwrap();\n-                first = false;\n-            } else {\n-                let len = i.to_string().len();\n-                write!(trace_text, \"  {}  \", \" \".repeat(len)).unwrap();\n-            }\n-            if let Some(name) = symbol.name() {\n-                write!(trace_text, \"{}\\n\", name).unwrap();\n-            } else {\n-                write!(trace_text, \"<unknown>\\n\").unwrap();\n-            }\n-            write!(trace_text, \"           at \").unwrap();\n-            if let Some(file_path) = symbol.filename() {\n-                write!(trace_text, \"{}\", file_path.display()).unwrap();\n-            } else {\n-                write!(trace_text, \"<unknown_file>\").unwrap();\n-            }\n-            if let Some(line) = symbol.lineno() {\n-                write!(trace_text, \":{}\\n\", line).unwrap();\n-            } else {\n-                write!(trace_text, \"\\n\").unwrap();\n-            }\n-        }\n-    }\n-    trace_text\n+    eprintln!(\"\\n\\nAn error occurred in miri:\\n{:?}\", backtrace);\n }\n \n impl<'tcx> From<EvalErrorKind<'tcx, u64>> for EvalError<'tcx> {\n@@ -238,7 +202,7 @@ impl<'tcx> From<EvalErrorKind<'tcx, u64>> for EvalError<'tcx> {\n \n                 if val == \"immediate\" {\n                     // Print it now\n-                    eprintln!(\"{}\", print_backtrace(&mut backtrace));\n+                    print_backtrace(&mut backtrace);\n                     None\n                 } else {\n                     Some(Box::new(backtrace))"}]}