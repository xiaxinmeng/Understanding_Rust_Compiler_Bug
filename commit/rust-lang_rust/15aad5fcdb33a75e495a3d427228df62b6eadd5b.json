{"sha": "15aad5fcdb33a75e495a3d427228df62b6eadd5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YWFkNWZjZGIzM2E3NWU0OTVhM2Q0MjcyMjhkZjYyYjZlYWRkNWI=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2021-05-14T18:22:41Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2021-05-14T18:22:41Z"}, "message": "bootstrap: build cargo only if requested in tools", "tree": {"sha": "3bed883bf23e036dca3b7b333ba8446265a4b8de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bed883bf23e036dca3b7b333ba8446265a4b8de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15aad5fcdb33a75e495a3d427228df62b6eadd5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15aad5fcdb33a75e495a3d427228df62b6eadd5b", "html_url": "https://github.com/rust-lang/rust/commit/15aad5fcdb33a75e495a3d427228df62b6eadd5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15aad5fcdb33a75e495a3d427228df62b6eadd5b/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75da570d784a798a34ff1e5048cd9a6a2fb23170", "url": "https://api.github.com/repos/rust-lang/rust/commits/75da570d784a798a34ff1e5048cd9a6a2fb23170", "html_url": "https://github.com/rust-lang/rust/commit/75da570d784a798a34ff1e5048cd9a6a2fb23170"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "6fc06896257b2425cd520087e3cd57f50c64246e", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/15aad5fcdb33a75e495a3d427228df62b6eadd5b/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15aad5fcdb33a75e495a3d427228df62b6eadd5b/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=15aad5fcdb33a75e495a3d427228df62b6eadd5b", "patch": "@@ -593,7 +593,14 @@ impl Step for Cargo {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        run.path(\"src/tools/cargo\").default_condition(builder.config.extended)\n+        run.path(\"src/tools/cargo\").default_condition(\n+            builder.config.extended\n+                && builder.config.tools.as_ref().map_or(\n+                    true,\n+                    // If `tools` is set, search list for this tool.\n+                    |tools| tools.iter().any(|tool| tool == \"cargo\"),\n+                ),\n+        )\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}]}