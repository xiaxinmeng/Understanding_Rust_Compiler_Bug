{"sha": "fbb1612846dbd836bef45221793c0ce698bf6cde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYjE2MTI4NDZkYmQ4MzZiZWY0NTIyMTc5M2MwY2U2OThiZjZjZGU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-01T04:15:25Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-09-01T04:15:25Z"}, "message": "Windows line endings", "tree": {"sha": "4d8b195d5bd5a304a7f13ca12a8989d7fc852d36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d8b195d5bd5a304a7f13ca12a8989d7fc852d36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbb1612846dbd836bef45221793c0ce698bf6cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbb1612846dbd836bef45221793c0ce698bf6cde", "html_url": "https://github.com/rust-lang/rust/commit/fbb1612846dbd836bef45221793c0ce698bf6cde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbb1612846dbd836bef45221793c0ce698bf6cde/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abc0530279b45030555a9374a12c0718d82a28fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/abc0530279b45030555a9374a12c0718d82a28fe", "html_url": "https://github.com/rust-lang/rust/commit/abc0530279b45030555a9374a12c0718d82a28fe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cc84e340c74f8bf1b6fdd937bb9f19dbdd534262", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbb1612846dbd836bef45221793c0ce698bf6cde/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb1612846dbd836bef45221793c0ce698bf6cde/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=fbb1612846dbd836bef45221793c0ce698bf6cde", "patch": "@@ -608,7 +608,7 @@ pub fn run(mut krate: clean::Crate,\n // A short, single-line view of `s`.\n fn concise_str(s: &str) -> String {\n     if s.contains('\\n') {\n-        return format!(\"{}...\", &s[..s.find('\\n').unwrap()]);\n+        return format!(\"{}...\", s.lines().next().expect(\"Impossible! We just found a newline\"));\n     }\n     if s.len() > 70 {\n         return format!(\"{} ... {}\", &s[..50], &s[s.len()-20..]);"}]}