{"sha": "976e1ced0037d88bcd0f32d6e831125b7710a73a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NmUxY2VkMDAzN2Q4OGJjZDBmMzJkNmU4MzExMjViNzcxMGE3M2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-11-29T19:18:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-11-29T19:18:36Z"}, "message": "test: Add a test for generic objects. r=test-only", "tree": {"sha": "aa2cc010a7e1f6b1cf45df5e4ce41e19ceb0b7c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa2cc010a7e1f6b1cf45df5e4ce41e19ceb0b7c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/976e1ced0037d88bcd0f32d6e831125b7710a73a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/976e1ced0037d88bcd0f32d6e831125b7710a73a", "html_url": "https://github.com/rust-lang/rust/commit/976e1ced0037d88bcd0f32d6e831125b7710a73a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/976e1ced0037d88bcd0f32d6e831125b7710a73a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e1c9be16f9140e09f26de947fddf806c27a957f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e1c9be16f9140e09f26de947fddf806c27a957f", "html_url": "https://github.com/rust-lang/rust/commit/9e1c9be16f9140e09f26de947fddf806c27a957f"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "7adeb55f8cc5b5603fd86b0a0961e1b335bd6cb6", "filename": "src/test/run-pass/generic-object.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/976e1ced0037d88bcd0f32d6e831125b7710a73a/src%2Ftest%2Frun-pass%2Fgeneric-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976e1ced0037d88bcd0f32d6e831125b7710a73a/src%2Ftest%2Frun-pass%2Fgeneric-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-object.rs?ref=976e1ced0037d88bcd0f32d6e831125b7710a73a", "patch": "@@ -0,0 +1,20 @@\n+trait Foo<T> {\n+    fn get() -> T;\n+}\n+\n+struct S {\n+    x: int\n+}\n+\n+impl S : Foo<int> {\n+    fn get() -> int {\n+        self.x\n+    }\n+}\n+\n+fn main() {\n+    let x = @S { x: 1 };\n+    let y = x as @Foo<int>;\n+    assert y.get() == 1;\n+}\n+"}]}