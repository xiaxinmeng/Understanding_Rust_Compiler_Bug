{"sha": "577aedb8cfa9577e75594e786411b44a604aee1f", "node_id": "C_kwDOAAsO6NoAKDU3N2FlZGI4Y2ZhOTU3N2U3NTU5NGU3ODY0MTFiNDRhNjA0YWVlMWY", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-09-27T17:58:07Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-09-27T17:58:07Z"}, "message": "Implement most proc_macro span handling methods", "tree": {"sha": "42f6261da90d8ad4881957736db08e7b763f7926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42f6261da90d8ad4881957736db08e7b763f7926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/577aedb8cfa9577e75594e786411b44a604aee1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/577aedb8cfa9577e75594e786411b44a604aee1f", "html_url": "https://github.com/rust-lang/rust/commit/577aedb8cfa9577e75594e786411b44a604aee1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/577aedb8cfa9577e75594e786411b44a604aee1f/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d4bb05ffff2ac5e4b5c04b222794f4dcf3905ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4bb05ffff2ac5e4b5c04b222794f4dcf3905ce", "html_url": "https://github.com/rust-lang/rust/commit/5d4bb05ffff2ac5e4b5c04b222794f4dcf3905ce"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "e4101012bd849d0bde4bd49081de77ad15db6cf4", "filename": "crates/proc_macro_srv/src/abis/abi_1_56/rustc_server.rs", "status": "modified", "additions": 24, "deletions": 25, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/577aedb8cfa9577e75594e786411b44a604aee1f/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_56%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/577aedb8cfa9577e75594e786411b44a604aee1f/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_56%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_56%2Frustc_server.rs?ref=577aedb8cfa9577e75594e786411b44a604aee1f", "patch": "@@ -424,19 +424,20 @@ impl server::Group for Rustc {\n         group.delimiter.map(|it| it.id).unwrap_or_else(tt::TokenId::unspecified)\n     }\n \n-    fn set_span(&mut self, _group: &mut Self::Group, _span: Self::Span) {\n-        // FIXME handle span\n+    fn set_span(&mut self, group: &mut Self::Group, span: Self::Span) {\n+        if let Some(delim) = &mut group.delimiter {\n+            delim.id = span;\n+        }\n     }\n \n-    fn span_open(&mut self, _group: &Self::Group) -> Self::Span {\n-        // FIXME handle span\n-        // MySpan(self.span_interner.intern(&MySpanData(group.span_open())))\n-        tt::TokenId::unspecified()\n+    fn span_open(&mut self, group: &Self::Group) -> Self::Span {\n+        // FIXME we only store one `TokenId` for the delimiters\n+        group.delimiter.map(|it| it.id).unwrap_or_else(tt::TokenId::unspecified)\n     }\n \n-    fn span_close(&mut self, _group: &Self::Group) -> Self::Span {\n-        // FIXME handle span\n-        tt::TokenId::unspecified()\n+    fn span_close(&mut self, group: &Self::Group) -> Self::Span {\n+        // FIXME we only store one `TokenId` for the delimiters\n+        group.delimiter.map(|it| it.id).unwrap_or_else(tt::TokenId::unspecified)\n     }\n }\n \n@@ -454,13 +455,11 @@ impl server::Punct for Rustc {\n     fn spacing(&mut self, punct: Self::Punct) -> bridge::Spacing {\n         spacing_to_external(punct.spacing)\n     }\n-    fn span(&mut self, _punct: Self::Punct) -> Self::Span {\n-        // FIXME handle span\n-        tt::TokenId::unspecified()\n+    fn span(&mut self, punct: Self::Punct) -> Self::Span {\n+        punct.id\n     }\n-    fn with_span(&mut self, punct: Self::Punct, _span: Self::Span) -> Self::Punct {\n-        // FIXME handle span\n-        punct\n+    fn with_span(&mut self, punct: Self::Punct, span: Self::Span) -> Self::Punct {\n+        tt::Punct { id: span, ..punct }\n     }\n }\n \n@@ -474,13 +473,13 @@ impl server::Ident for Rustc {\n         )\n     }\n \n-    fn span(&mut self, _ident: Self::Ident) -> Self::Span {\n-        // FIXME handle span\n-        tt::TokenId::unspecified()\n+    fn span(&mut self, ident: Self::Ident) -> Self::Span {\n+        self.ident_interner.get(ident.0).0.id\n     }\n-    fn with_span(&mut self, ident: Self::Ident, _span: Self::Span) -> Self::Ident {\n-        // FIXME handle span\n-        ident\n+    fn with_span(&mut self, ident: Self::Ident, span: Self::Span) -> Self::Ident {\n+        let data = self.ident_interner.get(ident.0);\n+        let new = IdentData(tt::Ident { id: span, ..data.0.clone() });\n+        IdentId(self.ident_interner.intern(&new))\n     }\n }\n \n@@ -500,8 +499,8 @@ impl server::Literal for Rustc {\n         None\n     }\n \n-    fn to_string(&mut self, _literal: &Self::Literal) -> String {\n-        _literal.to_string()\n+    fn to_string(&mut self, literal: &Self::Literal) -> String {\n+        literal.to_string()\n     }\n \n     fn integer(&mut self, n: &str) -> Self::Literal {\n@@ -581,8 +580,8 @@ impl server::Literal for Rustc {\n         literal.id\n     }\n \n-    fn set_span(&mut self, _literal: &mut Self::Literal, _span: Self::Span) {\n-        // FIXME handle span\n+    fn set_span(&mut self, literal: &mut Self::Literal, span: Self::Span) {\n+        literal.id = span;\n     }\n \n     fn subspan("}]}