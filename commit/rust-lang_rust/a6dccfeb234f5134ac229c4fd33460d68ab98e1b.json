{"sha": "a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGNjZmViMjM0ZjUxMzRhYzIyOWM0ZmQzMzQ2MGQ2OGFiOThlMWI=", "commit": {"author": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-10-03T09:18:24Z"}, "committer": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2021-02-22T20:03:57Z"}, "message": "New mir-opt pass to simplify gotos with const values\n\nFixes #77355", "tree": {"sha": "66a47238689a2153ab72066eba274f7030ca30c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66a47238689a2153ab72066eba274f7030ca30c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "html_url": "https://github.com/rust-lang/rust/commit/a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/comments", "author": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15598a83db88ec7a32ea18a44dd6309f32edc07e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15598a83db88ec7a32ea18a44dd6309f32edc07e", "html_url": "https://github.com/rust-lang/rust/commit/15598a83db88ec7a32ea18a44dd6309f32edc07e"}], "stats": {"total": 1026, "additions": 652, "deletions": 374}, "files": [{"sha": "a0381889ace06a3faf8cfc1833e2fd4b213fd647", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -1518,7 +1518,14 @@ pub enum StatementKind<'tcx> {\n }\n \n impl<'tcx> StatementKind<'tcx> {\n-    pub fn as_assign_mut(&mut self) -> Option<&mut Box<(Place<'tcx>, Rvalue<'tcx>)>> {\n+    pub fn as_assign_mut(&mut self) -> Option<&mut (Place<'tcx>, Rvalue<'tcx>)> {\n+        match self {\n+            StatementKind::Assign(x) => Some(x),\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_assign(&self) -> Option<&(Place<'tcx>, Rvalue<'tcx>)> {\n         match self {\n             StatementKind::Assign(x) => Some(x),\n             _ => None,"}, {"sha": "887dbefa9f2da411bddbd8e4940b79dec02f1237", "filename": "compiler/rustc_middle/src/mir/terminator.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -407,6 +407,22 @@ impl<'tcx> TerminatorKind<'tcx> {\n             | TerminatorKind::FalseUnwind { ref mut unwind, .. } => Some(unwind),\n         }\n     }\n+\n+    pub fn as_switch(&self) -> Option<(&Operand<'tcx>, Ty<'tcx>, &SwitchTargets)> {\n+        match self {\n+            TerminatorKind::SwitchInt { discr, switch_ty, targets } => {\n+                Some((discr, switch_ty, targets))\n+            }\n+            _ => None,\n+        }\n+    }\n+\n+    pub fn as_goto(&self) -> Option<BasicBlock> {\n+        match self {\n+            TerminatorKind::Goto { target } => Some(*target),\n+            _ => None,\n+        }\n+    }\n }\n \n impl<'tcx> Debug for TerminatorKind<'tcx> {"}, {"sha": "901ed6809f24f18546c243cb44058c8288091ffb", "filename": "compiler/rustc_mir/src/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Foperand.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -514,6 +514,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     /// Evaluate the operand, returning a place where you can then find the data.\n     /// If you already know the layout, you can save two table lookups\n     /// by passing it in here.\n+    #[inline]\n     pub fn eval_operand(\n         &self,\n         mir_op: &mir::Operand<'tcx>,"}, {"sha": "3eb2e757644c47f8130b0b0037010f68692f7679", "filename": "compiler/rustc_mir/src/transform/const_goto.rs", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,122 @@\n+//! This pass optimizes the following sequence\n+//! ```rust,ignore (example)\n+//! bb2: {\n+//!     _2 = const true;\n+//!     goto -> bb3;\n+//! }\n+//!\n+//! bb3: {\n+//!     switchInt(_2) -> [false: bb4, otherwise: bb5];\n+//! }\n+//! ```\n+//! into\n+//! ```rust,ignore (example)\n+//! bb2: {\n+//!     _2 = const true;\n+//!     goto -> bb5;\n+//! }\n+//! ```\n+\n+use crate::transform::MirPass;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n+use rustc_middle::{mir::visit::Visitor, ty::ParamEnv};\n+\n+use super::simplify::{simplify_cfg, simplify_locals};\n+\n+pub struct ConstGoto;\n+\n+impl<'tcx> MirPass<'tcx> for ConstGoto {\n+    fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        if tcx.sess.opts.debugging_opts.mir_opt_level < 3 {\n+            return;\n+        }\n+        trace!(\"Running ConstGoto on {:?}\", body.source);\n+        let param_env = tcx.param_env_reveal_all_normalized(body.source.def_id());\n+        let mut opt_finder =\n+            ConstGotoOptimizationFinder { tcx, body, optimizations: vec![], param_env };\n+        opt_finder.visit_body(body);\n+        let should_simplify = !opt_finder.optimizations.is_empty();\n+        for opt in opt_finder.optimizations {\n+            let terminator = body.basic_blocks_mut()[opt.bb_with_goto].terminator_mut();\n+            let new_goto = TerminatorKind::Goto { target: opt.target_to_use_in_goto };\n+            debug!(\"SUCCESS: replacing `{:?}` with `{:?}`\", terminator.kind, new_goto);\n+            terminator.kind = new_goto;\n+        }\n+\n+        // if we applied optimizations, we potentially have some cfg to cleanup to\n+        // make it easier for further passes\n+        if should_simplify {\n+            simplify_cfg(body);\n+            simplify_locals(body, tcx);\n+        }\n+    }\n+}\n+\n+impl<'a, 'tcx> Visitor<'tcx> for ConstGotoOptimizationFinder<'a, 'tcx> {\n+    fn visit_terminator(&mut self, terminator: &Terminator<'tcx>, location: Location) {\n+        let _: Option<_> = try {\n+            let target = terminator.kind.as_goto()?;\n+            // We only apply this optimization if the last statement is a const assignment\n+            let last_statement = self.body.basic_blocks()[location.block].statements.last()?;\n+\n+            if let (place, Rvalue::Use(Operand::Constant(_const))) =\n+                last_statement.kind.as_assign()?\n+            {\n+                // We found a constant being assigned to `place`.\n+                // Now check that the target of this Goto switches on this place.\n+                let target_bb = &self.body.basic_blocks()[target];\n+\n+                // FIXME(simonvandel): We are conservative here when we don't allow\n+                // any statements in the target basic block.\n+                // This could probably be relaxed to allow `StorageDead`s which could be\n+                // copied to the predecessor of this block.\n+                if !target_bb.statements.is_empty() {\n+                    None?\n+                }\n+\n+                let target_bb_terminator = target_bb.terminator();\n+                let (discr, switch_ty, targets) = target_bb_terminator.kind.as_switch()?;\n+                if discr.place() == Some(*place) {\n+                    // We now know that the Switch matches on the const place, and it is statementless\n+                    // Now find which value in the Switch matches the const value.\n+                    let const_value =\n+                        _const.literal.try_eval_bits(self.tcx, self.param_env, switch_ty)?;\n+                    let found_value_idx_option = targets\n+                        .iter()\n+                        .enumerate()\n+                        .find(|(_, (value, _))| const_value == *value)\n+                        .map(|(idx, _)| idx);\n+\n+                    let target_to_use_in_goto =\n+                        if let Some(found_value_idx) = found_value_idx_option {\n+                            targets.iter().nth(found_value_idx).unwrap().1\n+                        } else {\n+                            // If we did not find the const value in values, it must be the otherwise case\n+                            targets.otherwise()\n+                        };\n+\n+                    self.optimizations.push(OptimizationToApply {\n+                        bb_with_goto: location.block,\n+                        target_to_use_in_goto,\n+                    });\n+                }\n+            }\n+            Some(())\n+        };\n+\n+        self.super_terminator(terminator, location);\n+    }\n+}\n+\n+struct OptimizationToApply {\n+    bb_with_goto: BasicBlock,\n+    target_to_use_in_goto: BasicBlock,\n+}\n+\n+pub struct ConstGotoOptimizationFinder<'a, 'tcx> {\n+    tcx: TyCtxt<'tcx>,\n+    body: &'a Body<'tcx>,\n+    param_env: ParamEnv<'tcx>,\n+    optimizations: Vec<OptimizationToApply>,\n+}"}, {"sha": "a79f855965adb1c6478ac32f7defb556bc60fca4", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -22,6 +22,7 @@ pub mod check_packed_ref;\n pub mod check_unsafety;\n pub mod cleanup_post_borrowck;\n pub mod const_debuginfo;\n+pub mod const_goto;\n pub mod const_prop;\n pub mod coverage;\n pub mod deaggregator;\n@@ -492,6 +493,7 @@ fn run_optimization_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n \n     // The main optimizations that we do on MIR.\n     let optimizations: &[&dyn MirPass<'tcx>] = &[\n+        &const_goto::ConstGoto,\n         &remove_unneeded_drops::RemoveUnneededDrops,\n         &match_branches::MatchBranchSimplification,\n         // inst combine is after MatchBranchSimplification to clean up Ne(_1, false)"}, {"sha": "0c57d1a689890ba8b475c7bd2c75bd31720b7167", "filename": "compiler/rustc_mir/src/transform/simplify.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -320,28 +320,31 @@ pub struct SimplifyLocals;\n impl<'tcx> MirPass<'tcx> for SimplifyLocals {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         trace!(\"running SimplifyLocals on {:?}\", body.source);\n+        simplify_locals(body, tcx);\n+    }\n+}\n \n-        // First, we're going to get a count of *actual* uses for every `Local`.\n-        let mut used_locals = UsedLocals::new(body);\n+pub fn simplify_locals<'tcx>(body: &mut Body<'tcx>, tcx: TyCtxt<'tcx>) {\n+    // First, we're going to get a count of *actual* uses for every `Local`.\n+    let mut used_locals = UsedLocals::new(body);\n \n-        // Next, we're going to remove any `Local` with zero actual uses. When we remove those\n-        // `Locals`, we're also going to subtract any uses of other `Locals` from the `used_locals`\n-        // count. For example, if we removed `_2 = discriminant(_1)`, then we'll subtract one from\n-        // `use_counts[_1]`. That in turn might make `_1` unused, so we loop until we hit a\n-        // fixedpoint where there are no more unused locals.\n-        remove_unused_definitions(&mut used_locals, body);\n+    // Next, we're going to remove any `Local` with zero actual uses. When we remove those\n+    // `Locals`, we're also going to subtract any uses of other `Locals` from the `used_locals`\n+    // count. For example, if we removed `_2 = discriminant(_1)`, then we'll subtract one from\n+    // `use_counts[_1]`. That in turn might make `_1` unused, so we loop until we hit a\n+    // fixedpoint where there are no more unused locals.\n+    remove_unused_definitions(&mut used_locals, body);\n \n-        // Finally, we'll actually do the work of shrinking `body.local_decls` and remapping the `Local`s.\n-        let map = make_local_map(&mut body.local_decls, &used_locals);\n+    // Finally, we'll actually do the work of shrinking `body.local_decls` and remapping the `Local`s.\n+    let map = make_local_map(&mut body.local_decls, &used_locals);\n \n-        // Only bother running the `LocalUpdater` if we actually found locals to remove.\n-        if map.iter().any(Option::is_none) {\n-            // Update references to all vars and tmps now\n-            let mut updater = LocalUpdater { map, tcx };\n-            updater.visit_body(body);\n+    // Only bother running the `LocalUpdater` if we actually found locals to remove.\n+    if map.iter().any(Option::is_none) {\n+        // Update references to all vars and tmps now\n+        let mut updater = LocalUpdater { map, tcx };\n+        updater.visit_body(body);\n \n-            body.local_decls.shrink_to_fit();\n-        }\n+        body.local_decls.shrink_to_fit();\n     }\n }\n "}, {"sha": "bd76e118fdf71650d42d4915d5ad726245109c66", "filename": "compiler/rustc_mir/src/transform/simplify_comparison_integral.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_comparison_integral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_comparison_integral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify_comparison_integral.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -80,7 +80,7 @@ impl<'tcx> MirPass<'tcx> for SimplifyComparisonIntegral {\n                 // we convert the move in the comparison statement to a copy.\n \n                 // unwrap is safe as we know this statement is an assign\n-                let box (_, rhs) = bb.statements[opt.bin_op_stmt_idx].kind.as_assign_mut().unwrap();\n+                let (_, rhs) = bb.statements[opt.bin_op_stmt_idx].kind.as_assign_mut().unwrap();\n \n                 use Operand::*;\n                 match rhs {"}, {"sha": "ddb9a8034e8bfc60a7c5bbe51433a3e0d6b58c09", "filename": "src/test/mir-opt/const_goto.issue_77355_opt.ConstGoto.diff", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto.issue_77355_opt.ConstGoto.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto.issue_77355_opt.ConstGoto.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto.issue_77355_opt.ConstGoto.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,52 @@\n+- // MIR for `issue_77355_opt` before ConstGoto\n++ // MIR for `issue_77355_opt` after ConstGoto\n+  \n+  fn issue_77355_opt(_1: Foo) -> u64 {\n+      debug num => _1;                     // in scope 0 at $DIR/const_goto.rs:11:20: 11:23\n+      let mut _0: u64;                     // return place in scope 0 at $DIR/const_goto.rs:11:33: 11:36\n+-     let mut _2: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-     let mut _3: isize;                   // in scope 0 at $DIR/const_goto.rs:12:22: 12:28\n++     let mut _2: isize;                   // in scope 0 at $DIR/const_goto.rs:12:22: 12:28\n+  \n+      bb0: {\n+-         StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         _3 = discriminant(_1);           // scope 0 at $DIR/const_goto.rs:12:22: 12:28\n+-         switchInt(move _3) -> [1_isize: bb2, 2_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto.rs:12:22: 12:28\n++         _2 = discriminant(_1);           // scope 0 at $DIR/const_goto.rs:12:22: 12:28\n++         switchInt(move _2) -> [1_isize: bb2, 2_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto.rs:12:22: 12:28\n+      }\n+  \n+      bb1: {\n+-         _2 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n++         _0 = const 42_u64;               // scope 0 at $DIR/const_goto.rs:12:53: 12:55\n++         goto -> bb3;                     // scope 0 at $DIR/const_goto.rs:12:5: 12:57\n+      }\n+  \n+      bb2: {\n+-         _2 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-         goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+-     }\n+- \n+-     bb3: {\n+-         switchInt(move _2) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/const_goto.rs:12:5: 12:57\n+-     }\n+- \n+-     bb4: {\n+          _0 = const 23_u64;               // scope 0 at $DIR/const_goto.rs:12:41: 12:43\n+-         goto -> bb6;                     // scope 0 at $DIR/const_goto.rs:12:5: 12:57\n++         goto -> bb3;                     // scope 0 at $DIR/const_goto.rs:12:5: 12:57\n+      }\n+  \n+-     bb5: {\n+-         _0 = const 42_u64;               // scope 0 at $DIR/const_goto.rs:12:53: 12:55\n+-         goto -> bb6;                     // scope 0 at $DIR/const_goto.rs:12:5: 12:57\n+-     }\n+- \n+-     bb6: {\n+-         StorageDead(_2);                 // scope 0 at $DIR/const_goto.rs:12:56: 12:57\n++     bb3: {\n+          return;                          // scope 0 at $DIR/const_goto.rs:13:2: 13:2\n+      }\n+  }\n+  "}, {"sha": "939902e70e94b5e65e634c845a5ce6ff4f81f3b4", "filename": "src/test/mir-opt/const_goto.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,16 @@\n+pub enum Foo {\n+    A,\n+    B,\n+    C,\n+    D,\n+    E,\n+    F,\n+}\n+\n+// EMIT_MIR const_goto.issue_77355_opt.ConstGoto.diff\n+fn issue_77355_opt(num: Foo) -> u64 {\n+    if matches!(num, Foo::B | Foo::C) { 23 } else { 42 }\n+}\n+fn main() {\n+    issue_77355_opt(Foo::A);\n+}"}, {"sha": "f0103fc42025a6a856dfc23f4ef177e1abb1d4cc", "filename": "src/test/mir-opt/const_goto_const_eval_fail.f.ConstGoto.diff", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.f.ConstGoto.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.f.ConstGoto.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.f.ConstGoto.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,51 @@\n+- // MIR for `f` before ConstGoto\n++ // MIR for `f` after ConstGoto\n+  \n+  fn f() -> u64 {\n+      let mut _0: u64;                     // return place in scope 0 at $DIR/const_goto_const_eval_fail.rs:6:44: 6:47\n+      let mut _1: bool;                    // in scope 0 at $DIR/const_goto_const_eval_fail.rs:7:11: 12:6\n+      let mut _2: i32;                     // in scope 0 at $DIR/const_goto_const_eval_fail.rs:8:15: 8:16\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:7:11: 12:6\n+          StorageLive(_2);                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:8:15: 8:16\n+          _2 = const A;                    // scope 0 at $DIR/const_goto_const_eval_fail.rs:8:15: 8:16\n+          switchInt(_2) -> [1_i32: bb2, 2_i32: bb2, 3_i32: bb2, otherwise: bb1]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:9:13: 9:14\n+      }\n+  \n+      bb1: {\n+          _1 = const true;                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:10:18: 10:22\n+          goto -> bb3;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:8:9: 11:10\n+      }\n+  \n+      bb2: {\n+          _1 = const B;                    // scope 0 at $DIR/const_goto_const_eval_fail.rs:9:26: 9:27\n+-         goto -> bb3;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:8:9: 11:10\n++         switchInt(_1) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:13:9: 13:14\n+      }\n+  \n+      bb3: {\n+-         switchInt(_1) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/const_goto_const_eval_fail.rs:13:9: 13:14\n+-     }\n+- \n+-     bb4: {\n+          _0 = const 2_u64;                // scope 0 at $DIR/const_goto_const_eval_fail.rs:14:17: 14:18\n+-         goto -> bb6;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:7:5: 15:6\n++         goto -> bb5;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:7:5: 15:6\n+      }\n+  \n+-     bb5: {\n++     bb4: {\n+          _0 = const 1_u64;                // scope 0 at $DIR/const_goto_const_eval_fail.rs:13:18: 13:19\n+-         goto -> bb6;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:7:5: 15:6\n++         goto -> bb5;                     // scope 0 at $DIR/const_goto_const_eval_fail.rs:7:5: 15:6\n+      }\n+  \n+-     bb6: {\n++     bb5: {\n+          StorageDead(_2);                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:16:1: 16:2\n+          StorageDead(_1);                 // scope 0 at $DIR/const_goto_const_eval_fail.rs:16:1: 16:2\n+          return;                          // scope 0 at $DIR/const_goto_const_eval_fail.rs:16:2: 16:2\n+      }\n+  }\n+  "}, {"sha": "3b85fe6ab3cd9722ea65d612ffda97e50e86e04b", "filename": "src/test/mir-opt/const_goto_const_eval_fail.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_goto_const_eval_fail.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,16 @@\n+#![feature(min_const_generics)]\n+#![crate_type = \"lib\"]\n+\n+// If const eval fails, then don't crash\n+// EMIT_MIR const_goto_const_eval_fail.f.ConstGoto.diff\n+pub fn f<const A: i32, const B: bool>() -> u64 {\n+    match {\n+        match A {\n+            1 | 2 | 3 => B,\n+            _ => true,\n+        }\n+    } {\n+        false => 1,\n+        true => 2,\n+    }\n+}"}, {"sha": "a52c6ae351b2c1be84c072ff71c57a13ce5ae52e", "filename": "src/test/mir-opt/matches_reduce_branches.bar.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.32bit.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -2,84 +2,84 @@\n + // MIR for `bar` after MatchBranchSimplification\n   \n   fn bar(_1: i32) -> (bool, bool, bool, bool) {\n-      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:12:8: 12:9\n-      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:12:19: 12:43\n-      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n-      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n-      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n-      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n-      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n-+     let mut _11: i32;                    // in scope 0 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n+      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:13:8: 13:9\n+      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:13:19: 13:43\n+      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n+      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:36:6: 36:7\n+      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:36:9: 36:10\n+      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:36:12: 36:13\n+      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:36:15: 36:16\n++     let mut _11: i32;                    // in scope 0 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n       scope 1 {\n-          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n           scope 2 {\n-              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n               scope 3 {\n-                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n-                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:17:9: 17:10\n                   scope 4 {\n-                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:17:9: 17:10\n                   }\n               }\n           }\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n-          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n-          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n--         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n+          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:17:9: 17:10\n+          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n+-         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n -     }\n - \n -     bb1: {\n--         _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:27:13: 27:21\n--         _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:22\n--         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:22\n--         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:30:13: 30:21\n--         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+-         _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:21\n+-         _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:22\n+-         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:30:13: 30:22\n+-         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:31:13: 31:21\n+-         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n -     }\n - \n -     bb2: {\n--         _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n--         _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n-+         StorageLive(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n-+         _11 = _1;                        // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n-+         _2 = Ne(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n-+         _3 = Eq(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n-          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:22\n-          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:21\n--         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+-         _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n+-         _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n++         StorageLive(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n++         _11 = _1;                        // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n++         _2 = Ne(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n++         _3 = Eq(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n+          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:22\n+          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:24:13: 24:21\n+-         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n -     }\n - \n -     bb3: {\n-+         StorageDead(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n-          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:33:6: 33:7\n-          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n-          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n-          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n-          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n-          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n-          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n-          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n-          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n-          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:36:2: 36:2\n++         StorageDead(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n+          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n+          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:6: 36:7\n+          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:36:6: 36:7\n+          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:9: 36:10\n+          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:36:9: 36:10\n+          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:12: 36:13\n+          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:36:12: 36:13\n+          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:36:15: 36:16\n+          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:36:15: 36:16\n+          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:37:2: 37:2\n       }\n   }\n   "}, {"sha": "a52c6ae351b2c1be84c072ff71c57a13ce5ae52e", "filename": "src/test/mir-opt/matches_reduce_branches.bar.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.64bit.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -2,84 +2,84 @@\n + // MIR for `bar` after MatchBranchSimplification\n   \n   fn bar(_1: i32) -> (bool, bool, bool, bool) {\n-      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:12:8: 12:9\n-      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:12:19: 12:43\n-      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n-      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n-      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n-      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n-      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n-+     let mut _11: i32;                    // in scope 0 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n+      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:13:8: 13:9\n+      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:13:19: 13:43\n+      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n+      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:36:6: 36:7\n+      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:36:9: 36:10\n+      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:36:12: 36:13\n+      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:36:15: 36:16\n++     let mut _11: i32;                    // in scope 0 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n       scope 1 {\n-          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n           scope 2 {\n-              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n               scope 3 {\n-                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n-                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:17:9: 17:10\n                   scope 4 {\n-                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:17:9: 17:10\n                   }\n               }\n           }\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n-          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n-          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n--         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n+          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:17:9: 17:10\n+          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n+-         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n -     }\n - \n -     bb1: {\n--         _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:27:13: 27:21\n--         _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:22\n--         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:22\n--         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:30:13: 30:21\n--         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+-         _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:21\n+-         _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:22\n+-         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:30:13: 30:22\n+-         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:31:13: 31:21\n+-         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n -     }\n - \n -     bb2: {\n--         _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n--         _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n-+         StorageLive(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n-+         _11 = _1;                        // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n-+         _2 = Ne(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n-+         _3 = Eq(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n-          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:22\n-          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:21\n--         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+-         _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n+-         _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n++         StorageLive(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n++         _11 = _1;                        // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n++         _2 = Ne(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n++         _3 = Eq(_11, const 7_i32);       // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n+          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:22\n+          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:24:13: 24:21\n+-         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:19:5: 34:6\n -     }\n - \n -     bb3: {\n-+         StorageDead(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n-          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:33:6: 33:7\n-          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n-          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n-          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n-          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n-          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n-          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n-          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n-          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n-          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n-          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n-          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:36:2: 36:2\n++         StorageDead(_11);                // scope 4 at $DIR/matches_reduce_branches.rs:20:9: 20:10\n+          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n+          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:6: 36:7\n+          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:36:6: 36:7\n+          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:9: 36:10\n+          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:36:9: 36:10\n+          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:12: 36:13\n+          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:36:12: 36:13\n+          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:36:15: 36:16\n+          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:36:15: 36:16\n+          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:36:5: 36:17\n+          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:36:16: 36:17\n+          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:37:1: 37:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:37:2: 37:2\n       }\n   }\n   "}, {"sha": "6ee8e6b774832deaa75c58e5a7b393b1609fe8a0", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 13, "deletions": 34, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -2,47 +2,26 @@\n + // MIR for `foo` after MatchBranchSimplification\n   \n   fn foo(_1: Option<()>) -> () {\n-      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:6:8: 6:11\n-      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:6:25: 6:25\n-      let mut _2: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _3: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+     let mut _4: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n+      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:7:8: 7:11\n+      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:7:25: 7:25\n+      let mut _2: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n--         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         StorageLive(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         _4 = move _3;                    // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         _2 = Eq(_4, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+         StorageDead(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         switchInt(move _2) -> [false: bb1, otherwise: bb2]; // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          _2 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+          switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n       }\n   \n       bb1: {\n--         _2 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--         goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--     }\n-- \n--     bb2: {\n--         _2 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--         goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--     }\n-- \n--     bb3: {\n--         switchInt(move _2) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n--     }\n-- \n--     bb4: {\n-          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:9:6: 9:6\n--         goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n-+         goto -> bb2;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:10:6: 10:6\n+          goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:8:5: 10:6\n       }\n   \n--     bb5: {\n-+     bb2: {\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:9:5: 9:6\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:10:2: 10:2\n+      bb2: {\n+          goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      }\n+  \n+      bb3: {\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:11:2: 11:2\n       }\n   }\n   "}, {"sha": "6ee8e6b774832deaa75c58e5a7b393b1609fe8a0", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 13, "deletions": 34, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -2,47 +2,26 @@\n + // MIR for `foo` after MatchBranchSimplification\n   \n   fn foo(_1: Option<()>) -> () {\n-      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:6:8: 6:11\n-      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:6:25: 6:25\n-      let mut _2: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _3: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+     let mut _4: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n+      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:7:8: 7:11\n+      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:7:25: 7:25\n+      let mut _2: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n--         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         StorageLive(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         _4 = move _3;                    // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         _2 = Eq(_4, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+         StorageDead(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n-+         switchInt(move _2) -> [false: bb1, otherwise: bb2]; // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          _2 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+          switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n       }\n   \n       bb1: {\n--         _2 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--         goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--     }\n-- \n--     bb2: {\n--         _2 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--         goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n--     }\n-- \n--     bb3: {\n--         switchInt(move _2) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n--     }\n-- \n--     bb4: {\n-          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:9:6: 9:6\n--         goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n-+         goto -> bb2;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:10:6: 10:6\n+          goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:8:5: 10:6\n       }\n   \n--     bb5: {\n-+     bb2: {\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:9:5: 9:6\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:10:2: 10:2\n+      bb2: {\n+          goto -> bb3;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      }\n+  \n+      bb3: {\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:11:2: 11:2\n       }\n   }\n   "}, {"sha": "8ec09ce8665625c1d3b717e0569b398929381e2c", "filename": "src/test/mir-opt/matches_reduce_branches.foo.PreCodegen.before.32bit.mir", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.PreCodegen.before.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.PreCodegen.before.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.PreCodegen.before.32bit.mir?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,21 @@\n+// MIR for `foo` before PreCodegen\n+\n+fn foo(_1: Option<()>) -> () {\n+    debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:7:8: 7:11\n+    let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:7:25: 7:25\n+    let mut _2: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+\n+    bb0: {\n+        _2 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+        switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+    }\n+\n+    bb1: {\n+        _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:10:6: 10:6\n+        return;                          // scope 0 at $DIR/matches_reduce_branches.rs:8:5: 10:6\n+    }\n+\n+    bb2: {\n+        return;                          // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+    }\n+}"}, {"sha": "8ec09ce8665625c1d3b717e0569b398929381e2c", "filename": "src/test/mir-opt/matches_reduce_branches.foo.PreCodegen.before.64bit.mir", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.PreCodegen.before.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.PreCodegen.before.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.PreCodegen.before.64bit.mir?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -0,0 +1,21 @@\n+// MIR for `foo` before PreCodegen\n+\n+fn foo(_1: Option<()>) -> () {\n+    debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:7:8: 7:11\n+    let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:7:25: 7:25\n+    let mut _2: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+\n+    bb0: {\n+        _2 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+        switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:8:22: 8:26\n+    }\n+\n+    bb1: {\n+        _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:10:6: 10:6\n+        return;                          // scope 0 at $DIR/matches_reduce_branches.rs:8:5: 10:6\n+    }\n+\n+    bb2: {\n+        return;                          // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+    }\n+}"}, {"sha": "410320e643cad2cf98f44cef36aa1fde0da9e820", "filename": "src/test/mir-opt/matches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.32bit.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -2,110 +2,110 @@\n + // MIR for `match_nested_if` after MatchBranchSimplification\n   \n   fn match_nested_if() -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/matches_reduce_branches.rs:38:25: 38:29\n-      let _1: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:39:9: 39:12\n-      let mut _2: ();                      // in scope 0 at $DIR/matches_reduce_branches.rs:39:21: 39:23\n-      let mut _3: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-      let mut _4: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-      let mut _5: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-      let mut _6: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:24: 40:28\n-+     let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-+     let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-+     let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+     let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n+      let mut _0: bool;                    // return place in scope 0 at $DIR/matches_reduce_branches.rs:39:25: 39:29\n+      let _1: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:40:9: 40:12\n+      let mut _2: ();                      // in scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:23\n+      let mut _3: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+      let mut _4: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n+      let mut _5: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n+      let mut _6: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:24: 41:28\n++     let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n++     let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n++     let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++     let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n       scope 1 {\n-          debug val => _1;                 // in scope 1 at $DIR/matches_reduce_branches.rs:39:9: 39:12\n+          debug val => _1;                 // in scope 1 at $DIR/matches_reduce_branches.rs:40:9: 40:12\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:39:9: 39:12\n-          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:39:21: 39:23\n-          StorageLive(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageLive(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-          StorageLive(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-          StorageLive(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:24: 40:28\n-          _6 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:24: 40:28\n--         switchInt(move _6) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n+          StorageLive(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:9: 40:12\n+          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:23\n+          StorageLive(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageLive(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n+          StorageLive(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n+          StorageLive(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:24: 41:28\n+          _6 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:41:24: 41:28\n+-         switchInt(move _6) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n -     }\n - \n -     bb1: {\n--         _5 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:30: 40:34\n--         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n+-         _5 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:41:31: 41:35\n+-         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n -     }\n - \n -     bb2: {\n--         _5 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:40:42: 40:47\n--         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n+-         _5 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:41:45: 41:50\n+-         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n -     }\n - \n -     bb3: {\n-+         StorageLive(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-+         _7 = move _6;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-+         _5 = Ne(_7, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:40:42: 40:47\n-+         StorageDead(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-          StorageDead(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:47: 40:48\n--         switchInt(move _5) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n++         StorageLive(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n++         _7 = move _6;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n++         _5 = Ne(_7, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:41:45: 41:50\n++         StorageDead(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n+          StorageDead(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:51: 41:52\n+-         switchInt(move _5) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n -     }\n - \n -     bb4: {\n--         _4 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:50: 40:54\n--         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n+-         _4 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:41:55: 41:59\n+-         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n -     }\n - \n -     bb5: {\n--         _4 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:40:62: 40:67\n--         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n+-         _4 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:41:69: 41:74\n+-         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n -     }\n - \n -     bb6: {\n-+         StorageLive(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-+         _8 = move _5;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-+         _4 = Ne(_8, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:40:62: 40:67\n-+         StorageDead(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-          StorageDead(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:67: 40:68\n--         switchInt(move _4) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n++         StorageLive(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n++         _8 = move _5;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n++         _4 = Ne(_8, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:41:69: 41:74\n++         StorageDead(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n+          StorageDead(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:75: 41:76\n+-         switchInt(move _4) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb7: {\n--         _3 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:70: 40:74\n--         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n+-         _3 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:42:13: 42:17\n+-         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb8: {\n--         _3 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:40:82: 40:87\n--         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n+-         _3 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:44:13: 44:18\n+-         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb9: {\n-+         StorageLive(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+         _9 = move _4;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+         _3 = Ne(_9, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:40:82: 40:87\n-+         StorageDead(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageDead(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:87: 40:88\n--         switchInt(move _3) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n++         StorageLive(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++         _9 = move _4;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++         _3 = Ne(_9, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:44:13: 44:18\n++         StorageDead(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageDead(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:45:9: 45:10\n+-         switchInt(move _3) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb10: {\n-+         StorageLive(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+         _10 = move _3;                   // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:95: 40:96\n--         _1 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:92: 40:96\n--         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:39:15: 42:6\n++         StorageLive(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++         _10 = move _3;                   // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:48:9: 48:10\n+-         _1 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:47:13: 47:17\n+-         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 50:6\n -     }\n - \n -     bb11: {\n--         StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:95: 40:96\n--         _1 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:41:14: 41:19\n--         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:39:15: 42:6\n+-         StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:48:9: 48:10\n+-         _1 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:49:14: 49:19\n+-         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 50:6\n -     }\n - \n -     bb12: {\n-+         _1 = Ne(_10, const false);       // scope 0 at $DIR/matches_reduce_branches.rs:41:14: 41:19\n-+         StorageDead(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:42:6: 42:7\n-          _0 = _1;                         // scope 1 at $DIR/matches_reduce_branches.rs:43:5: 43:8\n-          StorageDead(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:44:1: 44:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:44:2: 44:2\n++         _1 = Ne(_10, const false);       // scope 0 at $DIR/matches_reduce_branches.rs:49:14: 49:19\n++         StorageDead(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:50:6: 50:7\n+          _0 = _1;                         // scope 1 at $DIR/matches_reduce_branches.rs:51:5: 51:8\n+          StorageDead(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:52:1: 52:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:52:2: 52:2\n       }\n   }\n   "}, {"sha": "410320e643cad2cf98f44cef36aa1fde0da9e820", "filename": "src/test/mir-opt/matches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.match_nested_if.MatchBranchSimplification.64bit.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -2,110 +2,110 @@\n + // MIR for `match_nested_if` after MatchBranchSimplification\n   \n   fn match_nested_if() -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/matches_reduce_branches.rs:38:25: 38:29\n-      let _1: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:39:9: 39:12\n-      let mut _2: ();                      // in scope 0 at $DIR/matches_reduce_branches.rs:39:21: 39:23\n-      let mut _3: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-      let mut _4: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-      let mut _5: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-      let mut _6: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:24: 40:28\n-+     let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-+     let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-+     let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+     let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n+      let mut _0: bool;                    // return place in scope 0 at $DIR/matches_reduce_branches.rs:39:25: 39:29\n+      let _1: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:40:9: 40:12\n+      let mut _2: ();                      // in scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:23\n+      let mut _3: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+      let mut _4: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n+      let mut _5: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n+      let mut _6: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:24: 41:28\n++     let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n++     let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n++     let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++     let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n       scope 1 {\n-          debug val => _1;                 // in scope 1 at $DIR/matches_reduce_branches.rs:39:9: 39:12\n+          debug val => _1;                 // in scope 1 at $DIR/matches_reduce_branches.rs:40:9: 40:12\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:39:9: 39:12\n-          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:39:21: 39:23\n-          StorageLive(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageLive(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-          StorageLive(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-          StorageLive(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:24: 40:28\n-          _6 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:24: 40:28\n--         switchInt(move _6) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n+          StorageLive(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:9: 40:12\n+          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:23\n+          StorageLive(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageLive(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n+          StorageLive(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n+          StorageLive(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:24: 41:28\n+          _6 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:41:24: 41:28\n+-         switchInt(move _6) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n -     }\n - \n -     bb1: {\n--         _5 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:30: 40:34\n--         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n+-         _5 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:41:31: 41:35\n+-         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n -     }\n - \n -     bb2: {\n--         _5 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:40:42: 40:47\n--         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n+-         _5 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:41:45: 41:50\n+-         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n -     }\n - \n -     bb3: {\n-+         StorageLive(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-+         _7 = move _6;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-+         _5 = Ne(_7, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:40:42: 40:47\n-+         StorageDead(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:21: 40:48\n-          StorageDead(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:47: 40:48\n--         switchInt(move _5) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n++         StorageLive(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n++         _7 = move _6;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n++         _5 = Ne(_7, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:41:45: 41:50\n++         StorageDead(_7);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:21: 41:52\n+          StorageDead(_6);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:51: 41:52\n+-         switchInt(move _5) -> [false: bb5, otherwise: bb4]; // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n -     }\n - \n -     bb4: {\n--         _4 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:50: 40:54\n--         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n+-         _4 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:41:55: 41:59\n+-         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n -     }\n - \n -     bb5: {\n--         _4 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:40:62: 40:67\n--         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n+-         _4 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:41:69: 41:74\n+-         goto -> bb6;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n -     }\n - \n -     bb6: {\n-+         StorageLive(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-+         _8 = move _5;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-+         _4 = Ne(_8, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:40:62: 40:67\n-+         StorageDead(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:18: 40:68\n-          StorageDead(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:67: 40:68\n--         switchInt(move _4) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n++         StorageLive(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n++         _8 = move _5;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n++         _4 = Ne(_8, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:41:69: 41:74\n++         StorageDead(_8);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:18: 41:76\n+          StorageDead(_5);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:75: 41:76\n+-         switchInt(move _4) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb7: {\n--         _3 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:70: 40:74\n--         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n+-         _3 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:42:13: 42:17\n+-         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb8: {\n--         _3 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:40:82: 40:87\n--         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n+-         _3 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:44:13: 44:18\n+-         goto -> bb9;                     // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb9: {\n-+         StorageLive(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+         _9 = move _4;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+         _3 = Ne(_9, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:40:82: 40:87\n-+         StorageDead(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageDead(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:87: 40:88\n--         switchInt(move _3) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n++         StorageLive(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++         _9 = move _4;                    // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++         _3 = Ne(_9, const false);        // scope 0 at $DIR/matches_reduce_branches.rs:44:13: 44:18\n++         StorageDead(_9);                 // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageDead(_4);                 // scope 0 at $DIR/matches_reduce_branches.rs:45:9: 45:10\n+-         switchInt(move _3) -> [false: bb11, otherwise: bb10]; // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n -     }\n - \n -     bb10: {\n-+         StorageLive(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-+         _10 = move _3;                   // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:95: 40:96\n--         _1 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:40:92: 40:96\n--         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:39:15: 42:6\n++         StorageLive(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n++         _10 = move _3;                   // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:48:9: 48:10\n+-         _1 = const true;                 // scope 0 at $DIR/matches_reduce_branches.rs:47:13: 47:17\n+-         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 50:6\n -     }\n - \n -     bb11: {\n--         StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:40:95: 40:96\n--         _1 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:41:14: 41:19\n--         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:39:15: 42:6\n+-         StorageDead(_3);                 // scope 0 at $DIR/matches_reduce_branches.rs:48:9: 48:10\n+-         _1 = const false;                // scope 0 at $DIR/matches_reduce_branches.rs:49:14: 49:19\n+-         goto -> bb12;                    // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 50:6\n -     }\n - \n -     bb12: {\n-+         _1 = Ne(_10, const false);       // scope 0 at $DIR/matches_reduce_branches.rs:41:14: 41:19\n-+         StorageDead(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:40:15: 40:88\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:42:6: 42:7\n-          _0 = _1;                         // scope 1 at $DIR/matches_reduce_branches.rs:43:5: 43:8\n-          StorageDead(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:44:1: 44:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:44:2: 44:2\n++         _1 = Ne(_10, const false);       // scope 0 at $DIR/matches_reduce_branches.rs:49:14: 49:19\n++         StorageDead(_10);                // scope 0 at $DIR/matches_reduce_branches.rs:41:15: 45:10\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:50:6: 50:7\n+          _0 = _1;                         // scope 1 at $DIR/matches_reduce_branches.rs:51:5: 51:8\n+          StorageDead(_1);                 // scope 0 at $DIR/matches_reduce_branches.rs:52:1: 52:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:52:2: 52:2\n       }\n   }\n   "}, {"sha": "51be3884d48dd27b7a8f86d586a10bba0de5209b", "filename": "src/test/mir-opt/matches_reduce_branches.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -1,11 +1,12 @@\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n // EMIT_MIR matches_reduce_branches.foo.MatchBranchSimplification.diff\n+// EMIT_MIR matches_reduce_branches.foo.PreCodegen.before.mir\n // EMIT_MIR matches_reduce_branches.bar.MatchBranchSimplification.diff\n // EMIT_MIR matches_reduce_branches.match_nested_if.MatchBranchSimplification.diff\n \n fn foo(bar: Option<()>) {\n     if matches!(bar, None) {\n-      ()\n+        ()\n     }\n }\n \n@@ -37,15 +38,22 @@ fn bar(i: i32) -> (bool, bool, bool, bool) {\n \n fn match_nested_if() -> bool {\n     let val = match () {\n-        () if if if if true {true} else {false} {true} else {false} {true} else {false} => true,\n+        () if if if if true { true } else { false } { true } else { false } {\n+            true\n+        } else {\n+            false\n+        } =>\n+        {\n+            true\n+        }\n         _ => false,\n     };\n     val\n }\n \n fn main() {\n-  let _ = foo(None);\n-  let _ = foo(Some(()));\n-  let _ = bar(0);\n-  let _ = match_nested_if();\n+    let _ = foo(None);\n+    let _ = foo(Some(()));\n+    let _ = bar(0);\n+    let _ = match_nested_if();\n }"}, {"sha": "6fe28c0149e3070de989a3c828fdd76ccc6916b3", "filename": "src/test/mir-opt/not_equal_false.opt.InstCombine.diff", "status": "modified", "additions": 16, "deletions": 32, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -1,50 +1,34 @@\n - // MIR for `opt` before InstCombine\n + // MIR for `opt` after InstCombine\n   \n-  fn opt(_1: Option<()>) -> bool {\n+  fn opt(_1: bool) -> u32 {\n       debug x => _1;                       // in scope 0 at $DIR/not_equal_false.rs:3:8: 3:9\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/not_equal_false.rs:3:26: 3:30\n-      let mut _2: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _3: isize;                   // in scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-      let mut _4: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _5: isize;                   // in scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-      let mut _6: isize;                   // in scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-      let mut _7: isize;                   // in scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-      let mut _8: bool;                    // in scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+      let mut _0: u32;                     // return place in scope 0 at $DIR/not_equal_false.rs:3:20: 3:23\n+      let mut _2: bool;                    // in scope 0 at $DIR/not_equal_false.rs:4:8: 4:18\n+      let mut _3: bool;                    // in scope 0 at $DIR/not_equal_false.rs:4:8: 4:9\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _3 = discriminant(_1);           // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-          StorageLive(_6);                 // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-          _6 = move _3;                    // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-          _2 = Eq(_6, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageDead(_6);                 // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          StorageLive(_2);                 // scope 0 at $DIR/not_equal_false.rs:4:8: 4:18\n+          StorageLive(_3);                 // scope 0 at $DIR/not_equal_false.rs:4:8: 4:9\n+          _3 = _1;                         // scope 0 at $DIR/not_equal_false.rs:4:8: 4:9\n+-         _2 = Ne(move _3, const false);   // scope 0 at $DIR/not_equal_false.rs:4:8: 4:18\n++         _2 = move _3;                    // scope 0 at $DIR/not_equal_false.rs:4:8: 4:18\n+          StorageDead(_3);                 // scope 0 at $DIR/not_equal_false.rs:4:17: 4:18\n+          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:35\n       }\n   \n       bb1: {\n-          _0 = const true;                 // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          _0 = const 0_u32;                // scope 0 at $DIR/not_equal_false.rs:4:21: 4:22\n+          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:35\n       }\n   \n       bb2: {\n-          StorageLive(_4);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _5 = discriminant(_1);           // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-          StorageLive(_7);                 // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-          _7 = move _5;                    // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-          _4 = Eq(_7, const 1_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageDead(_7);                 // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-          StorageLive(_8);                 // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          _8 = move _4;                    // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n--         _0 = Ne(_8, const false);        // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-+         _0 = _8;                         // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          StorageDead(_8);                 // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          _0 = const 1_u32;                // scope 0 at $DIR/not_equal_false.rs:4:32: 4:33\n+          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:35\n       }\n   \n       bb3: {\n-          StorageDead(_4);                 // scope 0 at $DIR/not_equal_false.rs:4:45: 4:46\n-          StorageDead(_2);                 // scope 0 at $DIR/not_equal_false.rs:4:45: 4:46\n+          StorageDead(_2);                 // scope 0 at $DIR/not_equal_false.rs:4:34: 4:35\n           return;                          // scope 0 at $DIR/not_equal_false.rs:5:2: 5:2\n       }\n   }"}, {"sha": "5fbb848dcb58bb3ba35198dbfe5a7eacc8d925d8", "filename": "src/test/mir-opt/not_equal_false.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fnot_equal_false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6dccfeb234f5134ac229c4fd33460d68ab98e1b/src%2Ftest%2Fmir-opt%2Fnot_equal_false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnot_equal_false.rs?ref=a6dccfeb234f5134ac229c4fd33460d68ab98e1b", "patch": "@@ -1,9 +1,9 @@\n // EMIT_MIR not_equal_false.opt.InstCombine.diff\n \n-fn opt(x: Option<()>) -> bool {\n-    matches!(x, None) || matches!(x, Some(_))\n+fn opt(x: bool) -> u32 {\n+    if x != false { 0 } else { 1 }\n }\n \n fn main() {\n-    opt(None);\n+    opt(false);\n }"}]}