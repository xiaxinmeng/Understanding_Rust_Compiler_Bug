{"sha": "7d683f525a6cd807f7bcb1293c71bce613936e79", "node_id": "C_kwDOAAsO6NoAKDdkNjgzZjUyNWE2Y2Q4MDdmN2JjYjEyOTNjNzFiY2U2MTM5MzZlNzk", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-02-18T18:19:30Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-02-19T17:29:56Z"}, "message": "Fix codegen test for MSVC", "tree": {"sha": "2134f97e0ef82316e522480419ab3a96d64d9f73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2134f97e0ef82316e522480419ab3a96d64d9f73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d683f525a6cd807f7bcb1293c71bce613936e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d683f525a6cd807f7bcb1293c71bce613936e79", "html_url": "https://github.com/rust-lang/rust/commit/7d683f525a6cd807f7bcb1293c71bce613936e79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d683f525a6cd807f7bcb1293c71bce613936e79/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3406db94168f4eec9008df82427779370bd609d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3406db94168f4eec9008df82427779370bd609d5", "html_url": "https://github.com/rust-lang/rust/commit/3406db94168f4eec9008df82427779370bd609d5"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "994028271583f09c7e6a6f97fee3a55661ec3027", "filename": "src/test/codegen/drop.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7d683f525a6cd807f7bcb1293c71bce613936e79/src%2Ftest%2Fcodegen%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d683f525a6cd807f7bcb1293c71bce613936e79/src%2Ftest%2Fcodegen%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fdrop.rs?ref=7d683f525a6cd807f7bcb1293c71bce613936e79", "patch": "@@ -23,18 +23,7 @@ pub fn droppy() {\n // FIXME(eddyb) the `void @` forces a match on the instruction, instead of the\n // comment, that's `; call core::ptr::drop_in_place::<drop::SomeUniqueName>`\n // for the `v0` mangling, should switch to matching on that once `legacy` is gone.\n-// CHECK-NOT: call void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK: invoke void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK-NOT: call void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK: invoke void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK-NOT: call void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK: invoke void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK-NOT: call void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK: invoke void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK-NOT: call void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK: invoke void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK-NOT: invoke void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n-// CHECK: call void @{{.*}}drop_in_place{{.*}}SomeUniqueName\n+// CHECK-COUNT-6: {{(call|invoke) void @.*}}drop_in_place{{.*}}SomeUniqueName\n // CHECK-NOT: {{(call|invoke) void @.*}}drop_in_place{{.*}}SomeUniqueName\n // The next line checks for the } that ends the function definition\n // CHECK-LABEL: {{^[}]}}"}, {"sha": "aa00b7936541e5fbfbca919f5a8503952b774629", "filename": "src/test/codegen/unwind-landingpad-cold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d683f525a6cd807f7bcb1293c71bce613936e79/src%2Ftest%2Fcodegen%2Funwind-landingpad-cold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d683f525a6cd807f7bcb1293c71bce613936e79/src%2Ftest%2Fcodegen%2Funwind-landingpad-cold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funwind-landingpad-cold.rs?ref=7d683f525a6cd807f7bcb1293c71bce613936e79", "patch": "@@ -6,7 +6,7 @@\n // get the `cold` attribute.\n \n // CHECK-LABEL: @check_cold\n-// CHECK: invoke void {{.+}}drop_in_place{{.+}} [[ATTRIBUTES:#[0-9]+]]\n+// CHECK: {{(call|invoke) void .+}}drop_in_place{{.+}} [[ATTRIBUTES:#[0-9]+]]\n // CHECK: attributes [[ATTRIBUTES]] = { cold }\n #[no_mangle]\n pub fn check_cold(f: fn(), x: Box<u32>) {"}]}