{"sha": "6fda0fe891fd85f5cde89fe672d5796f15269898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZGEwZmU4OTFmZDg1ZjVjZGU4OWZlNjcyZDU3OTZmMTUyNjk4OTg=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-03-30T15:25:36Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-03-30T15:29:19Z"}, "message": "cmp: Implement all PartialOrd methods for Reverse\n\nWhen making a forwarding wrapper we must in general forward all methods,\nso that we use the type's own `lt` for example instead of the default.\n\nExample important case: f32's partial_cmp does several operations but\nits lt is a primitive.", "tree": {"sha": "be69caf8a2766bfa8b86e4dfa63ae2533887f8ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be69caf8a2766bfa8b86e4dfa63ae2533887f8ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fda0fe891fd85f5cde89fe672d5796f15269898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fda0fe891fd85f5cde89fe672d5796f15269898", "html_url": "https://github.com/rust-lang/rust/commit/6fda0fe891fd85f5cde89fe672d5796f15269898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fda0fe891fd85f5cde89fe672d5796f15269898/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe151194e9a919ab23c2bb356767a5cbfa3811e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe151194e9a919ab23c2bb356767a5cbfa3811e7", "html_url": "https://github.com/rust-lang/rust/commit/fe151194e9a919ab23c2bb356767a5cbfa3811e7"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "74ded948b18e74a8dad5126880f24bea19585372", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6fda0fe891fd85f5cde89fe672d5796f15269898/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fda0fe891fd85f5cde89fe672d5796f15269898/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=6fda0fe891fd85f5cde89fe672d5796f15269898", "patch": "@@ -347,6 +347,15 @@ impl<T: PartialOrd> PartialOrd for Reverse<T> {\n     fn partial_cmp(&self, other: &Reverse<T>) -> Option<Ordering> {\n         other.0.partial_cmp(&self.0)\n     }\n+\n+    #[inline]\n+    fn lt(&self, other: &Self) -> bool { other.0 < self.0 }\n+    #[inline]\n+    fn le(&self, other: &Self) -> bool { other.0 <= self.0 }\n+    #[inline]\n+    fn ge(&self, other: &Self) -> bool { other.0 >= self.0 }\n+    #[inline]\n+    fn gt(&self, other: &Self) -> bool { other.0 > self.0 }\n }\n \n #[unstable(feature = \"reverse_cmp_key\", issue = \"40893\")]"}]}