{"sha": "82ecb0f412be53affb240cd1b356488218d1adca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZWNiMGY0MTJiZTUzYWZmYjI0MGNkMWIzNTY0ODgyMThkMWFkY2E=", "commit": {"author": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2021-08-25T13:49:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-25T13:49:00Z"}, "message": "Rollup merge of #88298 - ijackson:errorkind-reorder, r=dtolnay\n\nErrorkind reorder\n\nI was doing a bit more work in this area and the untidiness of these two orderings bothered me.\n\nThe commit messages have the detailed rationale.  For your convenience, I c&p them here:\n\n```\n    io::ErrorKind: rationalise ordering in main enum\n\n    It is useful to keep some coherent structure to this ordering.  In\n    particular, Other and Uncategorized should be next to each other, at\n    the end.\n\n    Also it seems to make sense to treat UnexpectedEof and OutOfMemory\n    specially, since they are not like the other errors (despite\n    OutOfMemory also being generatable by some OS errors).\n\n    So:\n     * Move Other to the end, just before Uncategorized\n     * Move Unsupported to between Interrupted and UnexpectedEof\n     * Add some comments documenting where to add things\n```\n\n```\n    io::Error: alphabeticise the match in as_str()\n\n    There was no rationale for the previous ordering.\n```\n\nr? kennytm   since that's who rust-highfive picked before, in #88294 which I accidentally closed.", "tree": {"sha": "2afa78961e39f0302c1e5d07d8b928e017655a3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2afa78961e39f0302c1e5d07d8b928e017655a3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82ecb0f412be53affb240cd1b356488218d1adca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJkpMCRBK7hj4Ov3rIwAAb7QIAB/bhf9rPx78iCzrmmjanT01\nuuDoUfGUKuZ4141cy99JYG5joLKAmVAahgBD4uhgBPef+wO0+yhQw3tNX7aa4lbU\n/lDQxJNrt3nZnuRZRQ5wT6nnZ+BQXtRPPY/6jXgeENpv00TIc9dgqBAwdjezaGDG\ncVysxrgNIKhHONWapJJkjJw8qPry8MIWoK2Sw4G+Z1o1XvluSI3PCzx5qQdT9MpU\ntZTM4A2zP4JxvJaJDttwZz0hyFG06g/iEQsVTdRbJHoR+Xk2jKqNqKik+A3pg0/1\nu1Yceq+x02vrkttPjX/pRlcAPFr5+wurqn+B+NnpZofmEK5jcP+hUdPszgCSwsA=\n=E2VH\n-----END PGP SIGNATURE-----\n", "payload": "tree 2afa78961e39f0302c1e5d07d8b928e017655a3e\nparent 0aabf4bb4b74e9c7dd2c6164f362940dd6e5bf44\nparent 7b5c0ecb3d902149fd6caa1d673ad5f7751320f3\nauthor L\u00e9o Lanteri Thauvin <leseulartichaut@gmail.com> 1629899340 +0200\ncommitter GitHub <noreply@github.com> 1629899340 +0200\n\nRollup merge of #88298 - ijackson:errorkind-reorder, r=dtolnay\n\nErrorkind reorder\n\nI was doing a bit more work in this area and the untidiness of these two orderings bothered me.\n\nThe commit messages have the detailed rationale.  For your convenience, I c&p them here:\n\n```\n    io::ErrorKind: rationalise ordering in main enum\n\n    It is useful to keep some coherent structure to this ordering.  In\n    particular, Other and Uncategorized should be next to each other, at\n    the end.\n\n    Also it seems to make sense to treat UnexpectedEof and OutOfMemory\n    specially, since they are not like the other errors (despite\n    OutOfMemory also being generatable by some OS errors).\n\n    So:\n     * Move Other to the end, just before Uncategorized\n     * Move Unsupported to between Interrupted and UnexpectedEof\n     * Add some comments documenting where to add things\n```\n\n```\n    io::Error: alphabeticise the match in as_str()\n\n    There was no rationale for the previous ordering.\n```\n\nr? kennytm   since that's who rust-highfive picked before, in #88294 which I accidentally closed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82ecb0f412be53affb240cd1b356488218d1adca", "html_url": "https://github.com/rust-lang/rust/commit/82ecb0f412be53affb240cd1b356488218d1adca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82ecb0f412be53affb240cd1b356488218d1adca/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aabf4bb4b74e9c7dd2c6164f362940dd6e5bf44", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aabf4bb4b74e9c7dd2c6164f362940dd6e5bf44", "html_url": "https://github.com/rust-lang/rust/commit/0aabf4bb4b74e9c7dd2c6164f362940dd6e5bf44"}, {"sha": "7b5c0ecb3d902149fd6caa1d673ad5f7751320f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b5c0ecb3d902149fd6caa1d673ad5f7751320f3", "html_url": "https://github.com/rust-lang/rust/commit/7b5c0ecb3d902149fd6caa1d673ad5f7751320f3"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "51666c0a3c7f1bf534c653b48916c51c7314bc6c", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/82ecb0f412be53affb240cd1b356488218d1adca/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82ecb0f412be53affb240cd1b356488218d1adca/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=82ecb0f412be53affb240cd1b356488218d1adca", "patch": "@@ -261,19 +261,15 @@ pub enum ErrorKind {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Interrupted,\n \n-    /// A custom error that does not fall under any other I/O error kind.\n-    ///\n-    /// This can be used to construct your own [`Error`]s that do not match any\n-    /// [`ErrorKind`].\n-    ///\n-    /// This [`ErrorKind`] is not used by the standard library.\n+    /// This operation is unsupported on this platform.\n     ///\n-    /// Errors from the standard library that do not fall under any of the I/O\n-    /// error kinds cannot be `match`ed on, and will only match a wildcard (`_`) pattern.\n-    /// New [`ErrorKind`]s might be added in the future for some of those.\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    Other,\n+    /// This means that the operation can never succeed.\n+    #[stable(feature = \"unsupported_error\", since = \"1.53.0\")]\n+    Unsupported,\n \n+    // ErrorKinds which are primarily categorisations for OS error\n+    // codes should be added above.\n+    //\n     /// An error returned when an operation could not be completed because an\n     /// \"end of file\" was reached prematurely.\n     ///\n@@ -283,17 +279,28 @@ pub enum ErrorKind {\n     #[stable(feature = \"read_exact\", since = \"1.6.0\")]\n     UnexpectedEof,\n \n-    /// This operation is unsupported on this platform.\n-    ///\n-    /// This means that the operation can never succeed.\n-    #[stable(feature = \"unsupported_error\", since = \"1.53.0\")]\n-    Unsupported,\n-\n     /// An operation could not be completed, because it failed\n     /// to allocate enough memory.\n     #[stable(feature = \"out_of_memory_error\", since = \"1.54.0\")]\n     OutOfMemory,\n \n+    // \"Unusual\" error kinds which do not correspond simply to (sets\n+    // of) OS error codes, should be added just above this comment.\n+    // `Other` and `Uncategorised` should remain at the end:\n+    //\n+    /// A custom error that does not fall under any other I/O error kind.\n+    ///\n+    /// This can be used to construct your own [`Error`]s that do not match any\n+    /// [`ErrorKind`].\n+    ///\n+    /// This [`ErrorKind`] is not used by the standard library.\n+    ///\n+    /// Errors from the standard library that do not fall under any of the I/O\n+    /// error kinds cannot be `match`ed on, and will only match a wildcard (`_`) pattern.\n+    /// New [`ErrorKind`]s might be added in the future for some of those.\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    Other,\n+\n     /// Any I/O error from the standard library that's not part of this list.\n     ///\n     /// Errors that are `Uncategorized` now may move to a different or a new\n@@ -307,23 +314,24 @@ pub enum ErrorKind {\n impl ErrorKind {\n     pub(crate) fn as_str(&self) -> &'static str {\n         use ErrorKind::*;\n+        // Strictly alphabetical, please.  (Sadly rustfmt cannot do this yet.)\n         match *self {\n             AddrInUse => \"address in use\",\n             AddrNotAvailable => \"address not available\",\n             AlreadyExists => \"entity already exists\",\n             ArgumentListTooLong => \"argument list too long\",\n             BrokenPipe => \"broken pipe\",\n-            ResourceBusy => \"resource busy\",\n             ConnectionAborted => \"connection aborted\",\n             ConnectionRefused => \"connection refused\",\n             ConnectionReset => \"connection reset\",\n             CrossesDevices => \"cross-device link or rename\",\n             Deadlock => \"deadlock\",\n             DirectoryNotEmpty => \"directory not empty\",\n             ExecutableFileBusy => \"executable file busy\",\n+            FileTooLarge => \"file too large\",\n             FilenameTooLong => \"filename too long\",\n+            FilesystemLoop => \"filesystem loop or indirection limit (e.g. symlink loop)\",\n             FilesystemQuotaExceeded => \"filesystem quota exceeded\",\n-            FileTooLarge => \"file too large\",\n             HostUnreachable => \"host unreachable\",\n             Interrupted => \"operation interrupted\",\n             InvalidData => \"invalid data\",\n@@ -332,16 +340,16 @@ impl ErrorKind {\n             NetworkDown => \"network down\",\n             NetworkUnreachable => \"network unreachable\",\n             NotADirectory => \"not a directory\",\n-            StorageFull => \"no storage space\",\n             NotConnected => \"not connected\",\n             NotFound => \"entity not found\",\n+            NotSeekable => \"seek on unseekable file\",\n             Other => \"other error\",\n             OutOfMemory => \"out of memory\",\n             PermissionDenied => \"permission denied\",\n             ReadOnlyFilesystem => \"read-only filesystem or storage medium\",\n+            ResourceBusy => \"resource busy\",\n             StaleNetworkFileHandle => \"stale network file handle\",\n-            FilesystemLoop => \"filesystem loop or indirection limit (e.g. symlink loop)\",\n-            NotSeekable => \"seek on unseekable file\",\n+            StorageFull => \"no storage space\",\n             TimedOut => \"timed out\",\n             TooManyLinks => \"too many links\",\n             Uncategorized => \"uncategorized error\","}]}