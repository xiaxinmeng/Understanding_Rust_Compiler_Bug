{"sha": "bdda98aaba493be28569083c5ac57629caf3504d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZGE5OGFhYmE0OTNiZTI4NTY5MDgzYzVhYzU3NjI5Y2FmMzUwNGQ=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-07T17:59:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-07T17:59:10Z"}, "message": "Add comment for assert_inhabited in compiler/rustc_mir/src/interpret/intrinsics.rs\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "41556e0037e9153426bb0a879ba70e12f45ba5e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41556e0037e9153426bb0a879ba70e12f45ba5e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdda98aaba493be28569083c5ac57629caf3504d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfzm1uCRBK7hj4Ov3rIwAAdHIIALMusL8/DzEd/89Nx0sApzqZ\nPRwhT68Iz3AebjiraAgeccfII1WlbNvv8PRRhH32cD3TDIDgQFjm2YmW2K+pgRwL\nzC2mZlkHwgUQ5wsMXfoBy7F9B65ayJUNwLRfoMKOLK9GNaO+dOeRYSF/Y+18iVUb\nbPIva1trDVPZstK1n7zLfI+TlBDbfO+7W7PQClrGmBsr9bpQa8H1HO+QwZ4MleGj\n58jUFf73gjTEU1DSZSUUzOYaz1uLIlR/Y29gpB0D+EltDT/MKVh22pM3IpZdacic\nPWh1ASSPOlZ6GF8uMKUnMqART4Fx7lABlFeQyHzkp6hfrOj8bEKZJy41oSIxNzc=\n=MK97\n-----END PGP SIGNATURE-----\n", "payload": "tree 41556e0037e9153426bb0a879ba70e12f45ba5e3\nparent d0a1e40eae2bb02b23b65c33918fce20e9ed4ae4\nauthor Albin Hedman <albin9604@gmail.com> 1607363950 +0100\ncommitter GitHub <noreply@github.com> 1607363950 +0100\n\nAdd comment for assert_inhabited in compiler/rustc_mir/src/interpret/intrinsics.rs\n\nCo-authored-by: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdda98aaba493be28569083c5ac57629caf3504d", "html_url": "https://github.com/rust-lang/rust/commit/bdda98aaba493be28569083c5ac57629caf3504d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdda98aaba493be28569083c5ac57629caf3504d/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0a1e40eae2bb02b23b65c33918fce20e9ed4ae4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a1e40eae2bb02b23b65c33918fce20e9ed4ae4", "html_url": "https://github.com/rust-lang/rust/commit/d0a1e40eae2bb02b23b65c33918fce20e9ed4ae4"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "2ffb7a05f25c01f3faa6d47751555e6b8c08f2f6", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdda98aaba493be28569083c5ac57629caf3504d/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdda98aaba493be28569083c5ac57629caf3504d/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=bdda98aaba493be28569083c5ac57629caf3504d", "patch": "@@ -412,6 +412,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let layout = self.layout_of(ty)?;\n \n                 if layout.abi.is_uninhabited() {\n+                    // The run-time intrinsic panics just to get a good backtrace; here we abort\n+                    // since there is no problem showing a backtrace even for aborts.\n                     M::abort(self, format!(\"attempted to instantiate uninhabited type `{}`\", ty))?;\n                 }\n             }"}]}