{"sha": "2687112ea6a8701cbf36e6dd4d77d64694cf93d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ODcxMTJlYTZhODcwMWNiZjM2ZTZkZDRkNzdkNjQ2OTRjZjkzZDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-03T02:32:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-03T02:32:11Z"}, "message": "Auto merge of #53838 - nrc:save-generic, r=eddyb\n\nsave-analysis: record info for the types in `where` clauses\n\ncc https://github.com/rust-lang-nursery/rls/issues/987\n\nr? @eddyb", "tree": {"sha": "a400a950c68e229a0b2e513238f510ee65f1da14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a400a950c68e229a0b2e513238f510ee65f1da14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2687112ea6a8701cbf36e6dd4d77d64694cf93d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2687112ea6a8701cbf36e6dd4d77d64694cf93d8", "html_url": "https://github.com/rust-lang/rust/commit/2687112ea6a8701cbf36e6dd4d77d64694cf93d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2687112ea6a8701cbf36e6dd4d77d64694cf93d8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9395f0af789dc007e23dbae5d961c0751ab2dbe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9395f0af789dc007e23dbae5d961c0751ab2dbe7", "html_url": "https://github.com/rust-lang/rust/commit/9395f0af789dc007e23dbae5d961c0751ab2dbe7"}, {"sha": "6aafd7adc6f882fcb1f9b60fd90ad5af9e391a0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aafd7adc6f882fcb1f9b60fd90ad5af9e391a0a", "html_url": "https://github.com/rust-lang/rust/commit/6aafd7adc6f882fcb1f9b60fd90ad5af9e391a0a"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "adc63497daf2addfff96421cf82f16309379ecad", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2687112ea6a8701cbf36e6dd4d77d64694cf93d8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2687112ea6a8701cbf36e6dd4d77d64694cf93d8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=2687112ea6a8701cbf36e6dd4d77d64694cf93d8", "patch": "@@ -1362,6 +1362,14 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n             }\n         }\n     }\n+\n+    fn process_bounds(&mut self, bounds: &'l ast::GenericBounds) {\n+        for bound in bounds {\n+            if let ast::GenericBound::Trait(ref trait_ref, _) = *bound {\n+                self.process_path(trait_ref.trait_ref.ref_id, &trait_ref.trait_ref.path)\n+            }\n+        }\n+    }\n }\n \n impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tcx, 'll, O> {\n@@ -1527,20 +1535,19 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n \n     fn visit_generics(&mut self, generics: &'l ast::Generics) {\n         for param in &generics.params {\n-            match param.kind {\n-                ast::GenericParamKind::Lifetime { .. } => {}\n-                ast::GenericParamKind::Type { ref default, .. } => {\n-                    for bound in &param.bounds {\n-                        if let ast::GenericBound::Trait(ref trait_ref, _) = *bound {\n-                            self.process_path(trait_ref.trait_ref.ref_id, &trait_ref.trait_ref.path)\n-                        }\n-                    }\n-                    if let Some(ref ty) = default {\n-                        self.visit_ty(&ty);\n-                    }\n+            if let ast::GenericParamKind::Type { ref default, .. } = param.kind {\n+                self.process_bounds(&param.bounds);\n+                if let Some(ref ty) = default {\n+                    self.visit_ty(&ty);\n                 }\n             }\n         }\n+        for pred in &generics.where_clause.predicates {\n+            if let ast::WherePredicate::BoundPredicate(ref wbp) = *pred {\n+                self.process_bounds(&wbp.bounds);\n+                self.visit_ty(&wbp.bounded_ty);\n+            }\n+        }\n     }\n \n     fn visit_ty(&mut self, t: &'l ast::Ty) {"}]}