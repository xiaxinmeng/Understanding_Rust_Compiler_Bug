{"sha": "afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZTczY2NhZDkxNjYyNGM5ZWQ5ZGYxOGY0OWFiNmYzYWQ5YzljYjQ=", "commit": {"author": {"name": "hansjorg", "email": "hansjorg@gmail.com", "date": "2013-02-15T00:25:47Z"}, "committer": {"name": "hansjorg", "email": "hansjorg@gmail.com", "date": "2013-02-15T00:29:14Z"}, "message": "Update manpage based on current usage message", "tree": {"sha": "d828f419d0b5d5ae066a05abe00b2f47ae9f3452", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d828f419d0b5d5ae066a05abe00b2f47ae9f3452"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4", "html_url": "https://github.com/rust-lang/rust/commit/afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4/comments", "author": {"login": "hansjorg", "id": 489733, "node_id": "MDQ6VXNlcjQ4OTczMw==", "avatar_url": "https://avatars.githubusercontent.com/u/489733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansjorg", "html_url": "https://github.com/hansjorg", "followers_url": "https://api.github.com/users/hansjorg/followers", "following_url": "https://api.github.com/users/hansjorg/following{/other_user}", "gists_url": "https://api.github.com/users/hansjorg/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansjorg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansjorg/subscriptions", "organizations_url": "https://api.github.com/users/hansjorg/orgs", "repos_url": "https://api.github.com/users/hansjorg/repos", "events_url": "https://api.github.com/users/hansjorg/events{/privacy}", "received_events_url": "https://api.github.com/users/hansjorg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hansjorg", "id": 489733, "node_id": "MDQ6VXNlcjQ4OTczMw==", "avatar_url": "https://avatars.githubusercontent.com/u/489733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansjorg", "html_url": "https://github.com/hansjorg", "followers_url": "https://api.github.com/users/hansjorg/followers", "following_url": "https://api.github.com/users/hansjorg/following{/other_user}", "gists_url": "https://api.github.com/users/hansjorg/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansjorg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansjorg/subscriptions", "organizations_url": "https://api.github.com/users/hansjorg/orgs", "repos_url": "https://api.github.com/users/hansjorg/repos", "events_url": "https://api.github.com/users/hansjorg/events{/privacy}", "received_events_url": "https://api.github.com/users/hansjorg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6366e74fe3bb07762a4c314a83af21cd1daacc98", "url": "https://api.github.com/repos/rust-lang/rust/commits/6366e74fe3bb07762a4c314a83af21cd1daacc98", "html_url": "https://github.com/rust-lang/rust/commit/6366e74fe3bb07762a4c314a83af21cd1daacc98"}], "stats": {"total": 136, "additions": 93, "deletions": 43}, "files": [{"sha": "14d2cad86d01743b38dba95b32484290eba9b058", "filename": "man/rustc.1", "status": "modified", "additions": 93, "deletions": 43, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=afe73ccad916624c9ed9df18f49ab6f3ad9c9cb4", "patch": "@@ -1,9 +1,9 @@\n-.TH RUSTC \"1\" \"October 2012\" \"rustc 0.4\" \"User Commands\"\n+.TH RUSTC \"1\" \"February 2013\" \"rustc 0.6\" \"User Commands\"\n .SH NAME\n rustc \\- rust compiler\n .SH SYNOPSIS\n .B rustc\n-[\\fIoptions\\fR] \\fI<input>\\fR\n+[\\fIOPTIONS\\fR] \\fIINPUT\\fR\n \n .SH DESCRIPTION\n This program is a compiler for the Rust language, available at\n@@ -18,88 +18,134 @@ Compile an executable crate (default)\n \\fB\\-c\\fR\n Compile and assemble, but do not link\n .TP\n-\\fB\\-\\-cfg\\fR <cfgspec>\n+\\fB\\-\\-cfg\\fR SPEC\n Configure the compilation environment\n .TP\n \\fB\\-\\-emit\\-llvm\\fR\n Produce an LLVM bitcode file\n .TP\n-\\fB\\-g\\fR\n-Produce debug info (experimental)\n-.TP\n-\\fB\\-\\-gc\\fR\n-Garbage collect shared data (experimental/temporary)\n-.TP\n-\\fB\\-h\\fR \\fB\\-\\-help\\fR\n+\\fB\\-h\\fR, \\fB\\-\\-help\\fR\n Display this message\n .TP\n-\\fB\\-L\\fR <path>\n+\\fB\\-L\\fR PATH\n Add a directory to the library search path\n .TP\n \\fB\\-\\-lib\\fR\n Compile a library crate\n .TP\n \\fB\\-\\-ls\\fR\n-List the symbols defined by a compiled library crate\n-.TP\n-\\fB\\-\\-jit\\fR\n-Execute using JIT (experimental)\n+List the symbols defined by a library crate\n .TP\n \\fB\\-\\-no\\-trans\\fR\n Run all passes except translation; no output\n .TP\n \\fB\\-O\\fR\n-Equivalent to \\fB\\-\\-opt\\-level\\fR=\\fI2\\fR\n+Equivalent to \\fI\\-\\-opt\\-level=2\\fR\n .TP\n-\\fB\\-o\\fR <filename>\n+\\fB\\-o\\fR FILENAME\n Write output to <filename>\n .TP\n-\\fB\\-\\-opt\\-level\\fR <lvl>\n-Optimize with possible levels 0\\-3\n+\\fB\\-\\-opt\\-level\\fR LEVEL\n+Optimize with possible levels 0-3\n .TP\n-\\fB\\-\\-out\\-dir\\fR <dir>\n-Write output to compiler\\-chosen filename in <dir>\n+\\fB\\-\\-out\\-dir\\fR DIR\n+Write output to compiler-chosen filename in <dir>\n .TP\n \\fB\\-\\-parse\\-only\\fR\n Parse only; do not compile, assemble, or link\n .TP\n-\\fB\\-\\-pretty\\fR [type]\n-Pretty\\-print the input instead of compiling;\n-valid types are: normal (un\\-annotated source),\n-expanded (crates expanded), typed (crates expanded,\n-with type annotations), or identified (fully\n-parenthesized, AST nodes and blocks with IDs)\n+\\fB\\-\\-pretty\\fR [TYPE]\n+Pretty-print the input instead of compiling; valid types are: normal\n+(un-annotated source), expanded (crates expanded), typed (crates\n+expanded, with type annotations), or identified (fully parenthesized,\n+AST nodes and blocks with IDs)\n .TP\n \\fB\\-S\\fR\n Compile only; do not assemble or link\n .TP\n \\fB\\-\\-save\\-temps\\fR\n-Write intermediate files (.bc, .opt.bc, .o)\n-in addition to normal output\n+Write intermediate files (.bc, .opt.bc, .o) in addition to normal output\n .TP\n-\\fB\\-\\-static\\fR\n-Use or produce static libraries or binaries\n-(experimental)\n-.TP\n-\\fB\\-\\-sysroot\\fR <path>\n+\\fB\\-\\-sysroot\\fR PATH\n Override the system root\n .TP\n \\fB\\-\\-test\\fR\n Build a test harness\n .TP\n-\\fB\\-\\-target\\fR <triple>\n-Target cpu\\-manufacturer\\-kernel[\\-os] to compile for\n-(default: host triple)\n-(see http://sources.redhat.com/autobook/autobook/\n-autobook_17.html for detail)\n+\\fB\\-\\-target\\fR TRIPLE\n+Target triple cpu-manufacturer-kernel[-os] to compile for (see\n+http://sources.redhat.com/autobook/autobook/autobook_17.html\n+for detail)\n .TP\n-\\fB\\-W help\\fR\n+\\fB\\-W\\fR help\n Print 'lint' options and default settings\n .TP\n-\\fB\\-Z help\\fR\n-Print internal options for debugging rustc\n+\\fB\\-W\\fR OPT, \\fB\\-\\-warn\\fR OPT\n+Set lint warnings\n+.TP\n+\\fB\\-A\\fR OPT, \\fB\\-\\-allow\\fR OPT\n+Set lint allowed\n .TP\n-\\fB\\-v\\fR \\fB\\-\\-version\\fR\n+\\fB\\-D\\fR OPT, \\fB\\-\\-deny\\fR OPT\n+Set lint denied\n+.TP\n+\\fB\\-F\\fR OPT, \\fB\\-\\-forbid\\fR OPT\n+Set lint forbidden\n+.TP\n+\\fB\\-Z\\fR FLAG\n+Set internal debugging options. Use \"-Z help\" to print available options.\n+\n+Available debug flags are:\n+.RS\n+.IP \\[bu]\n+\\fBverbose\\fR - in general, enable more debug printouts\n+.IP \\[bu]\n+\\fBtime\\-passes\\fR - measure time of each rustc pass\n+.IP \\[bu]\n+\\fBcount\\-llvm\\-insns\\fR - count where LLVM instrs originate\n+.IP \\[bu]\n+\\fBtime\\-llvm\\-passes\\fR - measure time of each LLVM pass\n+.IP \\[bu]\n+\\fBtrans\\-stats\\fR - gather trans statistics\n+.IP \\[bu]\n+\\fBno\\-asm\\-comments\\fR - omit comments when using \\fI\\-S\\fR\n+.IP \\[bu]\n+\\fBno\\-verify\\fR - skip LLVM verification\n+.IP \\[bu]\n+\\fBtrace\\fR - emit trace logs\n+.IP \\[bu]\n+\\fBcoherence\\fR - perform coherence checking\n+.IP \\[bu]\n+\\fBborrowck\\-stats\\fR - gather borrowck statistics\n+.IP \\[bu]\n+\\fBborrowck\\-note\\-pure\\fR - note where purity is req'd\n+.IP \\[bu]\n+\\fBborrowck\\-note\\-loan\\fR - note where loans are req'd\n+.IP \\[bu]\n+\\fBno\\-landing\\-pads\\fR - omit landing pads for unwinding\n+.IP \\[bu]\n+\\fBdebug\\-llvm\\fR - enable debug output from LLVM\n+.IP \\[bu]\n+\\fBcount\\-type\\-sizes\\fR - count the sizes of aggregate types\n+.IP \\[bu]\n+\\fBmeta\\-stats\\fR - gather metadata statistics\n+.IP \\[bu]\n+\\fBno\\-opt\\fR - do not optimize, even if \\fI\\-O\\fR is passed\n+.IP \\[bu]\n+\\fBno\\-monomorphic\\-collapse\\fR - do not collapse template instantiations\n+.IP \\[bu]\n+\\fBgc\\fR - Garbage collect shared data (experimental)\n+.IP \\[bu]\n+\\fBjit\\fR - Execute using JIT (experimental)\n+.IP \\[bu]\n+\\fBextra\\-debug\\-info\\fR - Extra debugging info (experimental)\n+.IP \\[bu]\n+\\fBdebug\\-info\\fR - Produce debug info (experimental)\n+.IP \\[bu]\n+\\fBstatic\\fR - Use or produce static libraries or binaries (experimental)\n+.RE\n+.TP\n+\\fB\\-v\\fR, \\fB\\-\\-version\\fR\n Print version info and exit\n \n .SH \"EXAMPLES\"\n@@ -112,6 +158,10 @@ To build a library from a source file:\n To build either with a crate (.rc) file:\n     $ rustc hello.rc\n \n+To build an executable with debug info (experimental):\n+    $ rustc -Z debug-info -o hello hello.rs\n+\n+\n .SH \"BUGS\"\n See <\\fBhttps://github.com/mozilla/rust/issues\\fR> for issues.\n "}]}