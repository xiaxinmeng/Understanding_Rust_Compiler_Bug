{"sha": "333c6bf523019fd1565a5236d3c727172ec844f2", "node_id": "C_kwDOAAsO6NoAKDMzM2M2YmY1MjMwMTlmZDE1NjVhNTIzNmQzYzcyNzE3MmVjODQ0ZjI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-09T19:58:46Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-13T23:06:29Z"}, "message": "copy self type is implied wf", "tree": {"sha": "52c2c222e1e2a1a830855aef85614b06c1021eb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52c2c222e1e2a1a830855aef85614b06c1021eb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333c6bf523019fd1565a5236d3c727172ec844f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333c6bf523019fd1565a5236d3c727172ec844f2", "html_url": "https://github.com/rust-lang/rust/commit/333c6bf523019fd1565a5236d3c727172ec844f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333c6bf523019fd1565a5236d3c727172ec844f2/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cf7f40a895f476ecd3216b11ff673389135b652", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf7f40a895f476ecd3216b11ff673389135b652", "html_url": "https://github.com/rust-lang/rust/commit/8cf7f40a895f476ecd3216b11ff673389135b652"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "46eea628a34412b4f6591b27d01d53673f0b6b83", "filename": "compiler/rustc_trait_selection/src/traits/misc.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/333c6bf523019fd1565a5236d3c727172ec844f2/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333c6bf523019fd1565a5236d3c727172ec844f2/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs?ref=333c6bf523019fd1565a5236d3c727172ec844f2", "patch": "@@ -2,13 +2,16 @@\n \n use crate::traits::{self, ObligationCause};\n \n+use rustc_data_structures::fx::FxIndexSet;\n use rustc_hir as hir;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable};\n \n use crate::traits::error_reporting::TypeErrCtxtExt;\n \n+use super::outlives_bounds::InferCtxtExt;\n+\n #[derive(Clone)]\n pub enum CopyImplementationError<'tcx> {\n     InfrigingFields(Vec<(&'tcx ty::FieldDef, Ty<'tcx>)>),\n@@ -45,6 +48,7 @@ pub fn type_allowed_to_implement_copy<'tcx>(\n     };\n \n     let copy_def_id = tcx.require_lang_item(hir::LangItem::Copy, Some(parent_cause.span));\n+\n     let mut infringing = Vec::new();\n     for variant in adt.variants() {\n         for field in &variant.fields {\n@@ -85,7 +89,16 @@ pub fn type_allowed_to_implement_copy<'tcx>(\n                 infringing.push((field, ty));\n             }\n \n-            let outlives_env = OutlivesEnvironment::new(param_env);\n+            // Check regions assuming the self type of the impl is WF\n+            let outlives_env = OutlivesEnvironment::with_bounds(\n+                param_env,\n+                Some(&infcx),\n+                infcx.implied_bounds_tys(\n+                    param_env,\n+                    parent_cause.body_id,\n+                    FxIndexSet::from_iter([self_type]),\n+                ),\n+            );\n             infcx.process_registered_region_obligations(\n                 outlives_env.region_bound_pairs(),\n                 param_env,"}, {"sha": "9abfdfab9d06da63ae4a30a43b48b13fc445b7a5", "filename": "src/test/ui/traits/copy-requires-self-wf.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/333c6bf523019fd1565a5236d3c727172ec844f2/src%2Ftest%2Fui%2Ftraits%2Fcopy-requires-self-wf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333c6bf523019fd1565a5236d3c727172ec844f2/src%2Ftest%2Fui%2Ftraits%2Fcopy-requires-self-wf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fcopy-requires-self-wf.rs?ref=333c6bf523019fd1565a5236d3c727172ec844f2", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+#[derive(Clone)]\n+struct A<'a, T>(&'a T);\n+\n+impl<'a, T: Copy + 'a> Copy for A<'a, T> {}\n+\n+#[derive(Clone)]\n+struct B<'a, T>(A<'a, T>);\n+\n+// `T: '_` should be implied by `WF(B<'_, T>)`.\n+impl<T: Copy> Copy for B<'_, T> {}\n+\n+fn main() {}"}]}