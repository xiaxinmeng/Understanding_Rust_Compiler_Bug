{"sha": "838ed1d75412f8c4ccb3750da6e67687af427520", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOGVkMWQ3NTQxMmY4YzRjY2IzNzUwZGE2ZTY3Njg3YWY0Mjc1MjA=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-08-15T09:18:00Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-08-15T09:21:33Z"}, "message": "Update tests for `#[no_mangle]` associated functions", "tree": {"sha": "47d43f49bd222e1e67d3883b9d6ac00710f0069f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47d43f49bd222e1e67d3883b9d6ac00710f0069f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838ed1d75412f8c4ccb3750da6e67687af427520", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYRjcoBUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLg+4gD+NEI3AIK1kX5GC12psjnII79u3e12\ny37Pr6gEj6XVvXcBAPtaf9scSK1LKnZ3bAlI+wKzr7sE/W/XTyxP46QEmEIO\n=UWxW\n-----END PGP SIGNATURE-----", "payload": "tree 47d43f49bd222e1e67d3883b9d6ac00710f0069f\nparent 13fae3d0740e2326e30edf38294f308198e6d79f\nauthor hyd-dev <yd-huang@outlook.com> 1629019080 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1629019293 +0800\n\nUpdate tests for `#[no_mangle]` associated functions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838ed1d75412f8c4ccb3750da6e67687af427520", "html_url": "https://github.com/rust-lang/rust/commit/838ed1d75412f8c4ccb3750da6e67687af427520", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838ed1d75412f8c4ccb3750da6e67687af427520/comments", "author": null, "committer": null, "parents": [{"sha": "13fae3d0740e2326e30edf38294f308198e6d79f", "url": "https://api.github.com/repos/rust-lang/rust/commits/13fae3d0740e2326e30edf38294f308198e6d79f", "html_url": "https://github.com/rust-lang/rust/commit/13fae3d0740e2326e30edf38294f308198e6d79f"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "5b8a314ae73245051cc58018ba9988075382ff18", "filename": "test-cargo-miri/exported-symbol-dep/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/838ed1d75412f8c4ccb3750da6e67687af427520/test-cargo-miri%2Fexported-symbol-dep%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838ed1d75412f8c4ccb3750da6e67687af427520/test-cargo-miri%2Fexported-symbol-dep%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fexported-symbol-dep%2Fsrc%2Flib.rs?ref=838ed1d75412f8c4ccb3750da6e67687af427520", "patch": "@@ -3,11 +3,11 @@ fn exported_symbol() -> i32 {\n     123456\n }\n \n-pub struct AssocFn;\n+struct AssocFn;\n \n impl AssocFn {\n     #[no_mangle]\n-    pub fn assoc_fn_as_exported_symbol() -> i32 {\n+    fn assoc_fn_as_exported_symbol() -> i32 {\n         -123456\n     }\n }"}, {"sha": "ff56bb78a218746f3e67bd89b79a2e5a9da25f04", "filename": "tests/run-pass/function_calls/exported_symbol.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/838ed1d75412f8c4ccb3750da6e67687af427520/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838ed1d75412f8c4ccb3750da6e67687af427520/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs?ref=838ed1d75412f8c4ccb3750da6e67687af427520", "patch": "@@ -15,6 +15,16 @@ fn baz() -> i32 {\n     -3\n }\n \n+struct AssocFn;\n+\n+impl AssocFn {\n+    #[no_mangle]\n+    fn qux() -> i32 {\n+        -4\n+    }\n+}\n+\n+\n fn main() {\n     // Repeat calls to make sure the `Instance` cache is not broken.\n     for _ in 0..3 {\n@@ -32,10 +42,12 @@ fn main() {\n         extern \"Rust\" {\n             fn bar() -> i32;\n             fn baz() -> i32;\n+            fn qux() -> i32;\n         }\n \n         assert_eq!(unsafe { bar() }, -2);\n         assert_eq!(unsafe { baz() }, -3);\n+        assert_eq!(unsafe { qux() }, -4);\n \n         #[allow(clashing_extern_declarations)]\n         {\n@@ -53,6 +65,7 @@ fn main() {\n             extern \"C\" {\n                 fn bar() -> i32;\n                 fn baz() -> i32;\n+                fn qux() -> i32;\n             }\n \n             unsafe {\n@@ -61,6 +74,7 @@ fn main() {\n                 };\n                 assert_eq!(transmute(bar)(), -2);\n                 assert_eq!(transmute(baz)(), -3);\n+                assert_eq!(transmute(qux)(), -4);\n             }\n         }\n     }"}]}