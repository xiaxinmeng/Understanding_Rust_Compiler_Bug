{"sha": "5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ODBkNWJmZGRiOGYxZTkyY2VlN2Y5YTE1NmM0NzU4NjE1YmVlNGI=", "commit": {"author": {"name": "Mathieu Poumeyrol", "email": "mathieu.poumeyrol@snips.ai", "date": "2016-09-28T12:06:34Z"}, "committer": {"name": "Mathieu Poumeyrol", "email": "mathieu.poumeyrol@snips.ai", "date": "2016-09-28T17:44:20Z"}, "message": "use MSG_NOSIGNAL from liblibc", "tree": {"sha": "022065e6a10d078382de69cb35812ea742b15c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/022065e6a10d078382de69cb35812ea742b15c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "html_url": "https://github.com/rust-lang/rust/commit/5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5980d5bfddb8f1e92cee7f9a156c4758615bee4b/comments", "author": {"login": "kali", "id": 53657, "node_id": "MDQ6VXNlcjUzNjU3", "avatar_url": "https://avatars.githubusercontent.com/u/53657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kali", "html_url": "https://github.com/kali", "followers_url": "https://api.github.com/users/kali/followers", "following_url": "https://api.github.com/users/kali/following{/other_user}", "gists_url": "https://api.github.com/users/kali/gists{/gist_id}", "starred_url": "https://api.github.com/users/kali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kali/subscriptions", "organizations_url": "https://api.github.com/users/kali/orgs", "repos_url": "https://api.github.com/users/kali/repos", "events_url": "https://api.github.com/users/kali/events{/privacy}", "received_events_url": "https://api.github.com/users/kali/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kali", "id": 53657, "node_id": "MDQ6VXNlcjUzNjU3", "avatar_url": "https://avatars.githubusercontent.com/u/53657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kali", "html_url": "https://github.com/kali", "followers_url": "https://api.github.com/users/kali/followers", "following_url": "https://api.github.com/users/kali/following{/other_user}", "gists_url": "https://api.github.com/users/kali/gists{/gist_id}", "starred_url": "https://api.github.com/users/kali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kali/subscriptions", "organizations_url": "https://api.github.com/users/kali/orgs", "repos_url": "https://api.github.com/users/kali/repos", "events_url": "https://api.github.com/users/kali/events{/privacy}", "received_events_url": "https://api.github.com/users/kali/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed5e5428192f6f72afcb4becc3d78a18133613df", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed5e5428192f6f72afcb4becc3d78a18133613df", "html_url": "https://github.com/rust-lang/rust/commit/ed5e5428192f6f72afcb4becc3d78a18133613df"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "b474785561d58efbd27add9d22339dcabad742ad", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "patch": "@@ -1 +1 @@\n-Subproject commit eb708c020826a8d792a5a5275be147aabe47fe24\n+Subproject commit b474785561d58efbd27add9d22339dcabad742ad"}, {"sha": "2599bb660e813de607551694d513973217fedef4", "filename": "src/libstd/sys/common/net.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5980d5bfddb8f1e92cee7f9a156c4758615bee4b/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5980d5bfddb8f1e92cee7f9a156c4758615bee4b/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs?ref=5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "patch": "@@ -43,7 +43,7 @@ use sys::net::netc::IPV6_LEAVE_GROUP as IPV6_DROP_MEMBERSHIP;\n use sys::net::netc::IPV6_DROP_MEMBERSHIP;\n \n #[cfg(target_os = \"linux\")]\n-const MSG_NOSIGNAL: c_int = 0x4000;\n+use libc::MSG_NOSIGNAL;\n #[cfg(not(target_os = \"linux\"))]\n const MSG_NOSIGNAL: c_int = 0x0; // unused dummy value\n \n@@ -226,12 +226,11 @@ impl TcpStream {\n \n     pub fn write(&self, buf: &[u8]) -> io::Result<usize> {\n         let len = cmp::min(buf.len(), <wrlen_t>::max_value() as usize) as wrlen_t;\n-        let flags = if cfg!(target_os = \"linux\") { MSG_NOSIGNAL } else { 0 };\n         let ret = cvt(unsafe {\n             c::send(*self.inner.as_inner(),\n                     buf.as_ptr() as *const c_void,\n                     len,\n-                    flags)\n+                    MSG_NOSIGNAL)\n         })?;\n         Ok(ret as usize)\n     }\n@@ -452,11 +451,10 @@ impl UdpSocket {\n     pub fn send_to(&self, buf: &[u8], dst: &SocketAddr) -> io::Result<usize> {\n         let len = cmp::min(buf.len(), <wrlen_t>::max_value() as usize) as wrlen_t;\n         let (dstp, dstlen) = dst.into_inner();\n-        let flags = if cfg!(target_os = \"linux\") { MSG_NOSIGNAL } else { 0 };\n         let ret = cvt(unsafe {\n             c::sendto(*self.inner.as_inner(),\n                       buf.as_ptr() as *const c_void, len,\n-                      flags, dstp, dstlen)\n+                      MSG_NOSIGNAL, dstp, dstlen)\n         })?;\n         Ok(ret as usize)\n     }\n@@ -576,12 +574,11 @@ impl UdpSocket {\n \n     pub fn send(&self, buf: &[u8]) -> io::Result<usize> {\n         let len = cmp::min(buf.len(), <wrlen_t>::max_value() as usize) as wrlen_t;\n-        let flags = if cfg!(target_os = \"linux\") { MSG_NOSIGNAL } else { 0 };\n         let ret = cvt(unsafe {\n             c::send(*self.inner.as_inner(),\n                     buf.as_ptr() as *const c_void,\n                     len,\n-                    flags)\n+                    MSG_NOSIGNAL)\n         })?;\n         Ok(ret as usize)\n     }"}, {"sha": "03ff8d9787f950a7a2c26d18a5692ef3e6043ed1", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5980d5bfddb8f1e92cee7f9a156c4758615bee4b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5980d5bfddb8f1e92cee7f9a156c4758615bee4b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=5980d5bfddb8f1e92cee7f9a156c4758615bee4b", "patch": "@@ -29,7 +29,7 @@ use sys::net::Socket;\n use sys_common::{AsInner, FromInner, IntoInner};\n \n #[cfg(target_os = \"linux\")]\n-const MSG_NOSIGNAL: libc::c_int = 0x4000;\n+use libc::MSG_NOSIGNAL;\n #[cfg(not(target_os = \"linux\"))]\n const MSG_NOSIGNAL: libc::c_int = 0x0; // unused dummy value\n \n@@ -691,12 +691,11 @@ impl UnixDatagram {\n         fn inner(d: &UnixDatagram, buf: &[u8], path: &Path) -> io::Result<usize> {\n             unsafe {\n                 let (addr, len) = sockaddr_un(path)?;\n-                let flags = if cfg!(target_os = \"linux\") { MSG_NOSIGNAL } else { 0 };\n \n                 let count = cvt(libc::sendto(*d.0.as_inner(),\n                                              buf.as_ptr() as *const _,\n                                              buf.len(),\n-                                             flags,\n+                                             MSG_NOSIGNAL,\n                                              &addr as *const _ as *const _,\n                                              len))?;\n                 Ok(count as usize)"}]}