{"sha": "aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZTc1Y2Y0ZTFhYWY3M2JkMDQ1YzhiNjhlNzk1NmQyY2VhNWE2NGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-22T18:31:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-22T18:31:38Z"}, "message": "Rollup merge of #59329 - petrochenkov:rmcff, r=alexcrichton\n\ncleanup: Remove compile-fail-fulldeps directory again\n\nIt was already removed once in https://github.com/rust-lang/rust/pull/56444, but was partially resurrected by rebase of some other PR.", "tree": {"sha": "0253ded8eb5c3131bc0de63070c7e6ffadb570ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0253ded8eb5c3131bc0de63070c7e6ffadb570ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJclSoKCRBK7hj4Ov3rIwAAdHIIAIECxwKUOnM1tebjRgurXWVA\niTkz/uXKfSHha3r4VUbq4tipt/u9veHVYVm721XBZO6E5LdfyMG9A+RNrQXULXfi\nZP4ZW9VcaIwti7Y1GMvJTLBoDx16isJiDglsyoDrbdTV0qS1wNgIeH3yGhQ6rcn1\nu+IYptj8CG0dwnncREyKr3x12SuCM0gwD0ILE5xRsHAhBii7gJomHrqhjOI9CINn\n3OWgmB80tz2yFrQjhBXeWwUYlV81WeJsvWbDR/GmCqiy9B6YQMnaD9HvQZGWHtZg\nhDBNYbdECGiLN6xcYd2G75cDWbzU3qOsgoUN4zYv9EHD1GfjXnoox75rMZzWG1E=\n=jOnG\n-----END PGP SIGNATURE-----\n", "payload": "tree 0253ded8eb5c3131bc0de63070c7e6ffadb570ea\nparent 9943a447c1d0c4151db7eceb20059638fe520f5c\nparent 295cc77e9472c0f61fd39e9f93d7853473f1f183\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553279498 +0100\ncommitter GitHub <noreply@github.com> 1553279498 +0100\n\nRollup merge of #59329 - petrochenkov:rmcff, r=alexcrichton\n\ncleanup: Remove compile-fail-fulldeps directory again\n\nIt was already removed once in https://github.com/rust-lang/rust/pull/56444, but was partially resurrected by rebase of some other PR.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "html_url": "https://github.com/rust-lang/rust/commit/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9943a447c1d0c4151db7eceb20059638fe520f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9943a447c1d0c4151db7eceb20059638fe520f5c", "html_url": "https://github.com/rust-lang/rust/commit/9943a447c1d0c4151db7eceb20059638fe520f5c"}, {"sha": "295cc77e9472c0f61fd39e9f93d7853473f1f183", "url": "https://api.github.com/repos/rust-lang/rust/commits/295cc77e9472c0f61fd39e9f93d7853473f1f183", "html_url": "https://github.com/rust-lang/rust/commit/295cc77e9472c0f61fd39e9f93d7853473f1f183"}], "stats": {"total": 45, "additions": 0, "deletions": 45}, "files": [{"sha": "16630e2b3128555db9e02ac543b39fe43848aa8b", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/9943a447c1d0c4151db7eceb20059638fe520f5c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9943a447c1d0c4151db7eceb20059638fe520f5c/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=9943a447c1d0c4151db7eceb20059638fe520f5c", "patch": "@@ -1,45 +0,0 @@\n-// force-host\n-\n-#![feature(plugin_registrar)]\n-#![feature(box_syntax, rustc_private)]\n-\n-// Load rustc as a plugin to get macros.\n-#[macro_use]\n-extern crate rustc;\n-extern crate rustc_plugin;\n-\n-use rustc::hir;\n-use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n-\n-declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n-\n-declare_lint!(PLEASE_LINT, Warn, \"Warn about items named 'pleaselintme'\");\n-\n-struct Pass;\n-\n-impl LintPass for Pass {\n-    fn name(&self) -> &'static str {\n-        \"Pass\"\n-    }\n-\n-    fn get_lints(&self) -> LintArray {\n-        lint_array!(TEST_LINT, PLEASE_LINT)\n-    }\n-}\n-\n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n-    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n-        match &*it.ident.as_str() {\n-            \"lintme\" => cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\"),\n-            \"pleaselintme\" => cx.span_lint(PLEASE_LINT, it.span, \"item is named 'pleaselintme'\"),\n-            _ => {}\n-        }\n-    }\n-}\n-\n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_late_lint_pass(box Pass);\n-    reg.register_lint_group(\"lint_me\", None, vec![TEST_LINT, PLEASE_LINT]);\n-}"}]}