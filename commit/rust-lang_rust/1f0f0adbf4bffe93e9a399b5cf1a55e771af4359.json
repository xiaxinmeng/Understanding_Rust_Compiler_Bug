{"sha": "1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMGYwYWRiZjRiZmZlOTNlOWEzOTliNWNmMWE1NWU3NzFhZjQzNTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-19T12:10:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-19T12:10:23Z"}, "message": "Rollup merge of #66529 - petrochenkov:reshelp2, r=davidtwco\n\nresolve: Give derive helpers highest priority during resolution\n\nSo they just shadow everything else and don't create ambiguity errors.\nThis matches the old pre-#64694 behavior most closely.\n\n---\nThe change doesn't apply to this \"compatibility\" case\n```rust\n#[trait_helper] // The helper attribute is used before it introduced.\n                        // Sadly, compiles on stable, supported via hacks.\n                        // I plan to make a compatibility warning for this.\n#[derive(Trait)]\nstruct S;\n```\n, such attributes still create ambiguities, but #64694 didn't change anything for this case.\n\nFixes https://github.com/rust-lang/rust/issues/66508\nFixes https://github.com/rust-lang/rust/issues/66525", "tree": {"sha": "6b6c5fc955a7e954cc777c86aad86f6a421b1965", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b6c5fc955a7e954cc777c86aad86f6a421b1965"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd09uvCRBK7hj4Ov3rIwAAdHIIADRPuquH4CsWv09IVRXkc4HK\nWW2STfbTkhQeFHLJmAgQM2NnIZOHaSg2TZrCm5ITyxTgAWraeWh0NEVibmM4BesX\nJnulY7QRAhqNMY8ooCvm4R7yQBdZAvKDUi05Mzjhg652RrDVT6HdXE3Tj35H3caj\nqgWoYa1BM2m8srUtvmGeshi9m+5eWwhSxn69UyHFpweiFUptsAw0y0hrtdveZeWB\nqwduO1zwIA9uQgYZ1nWPpANSi+ZTpJLzNBN3u9di/4mqtJcmDhlntosaICoHZg42\nvsSJH06TvOtZDZZgxX8vJ2eXpu6TuW8pYUHUu2WddUH/AUJsS9Fy5cKMynJZUts=\n=0xw3\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b6c5fc955a7e954cc777c86aad86f6a421b1965\nparent 42e3b860459d75acda352a5b65e2db7b1f8334e8\nparent f74fe812fe802c71bd9f909cbce8a703a20ba479\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574165423 +0100\ncommitter GitHub <noreply@github.com> 1574165423 +0100\n\nRollup merge of #66529 - petrochenkov:reshelp2, r=davidtwco\n\nresolve: Give derive helpers highest priority during resolution\n\nSo they just shadow everything else and don't create ambiguity errors.\nThis matches the old pre-#64694 behavior most closely.\n\n---\nThe change doesn't apply to this \"compatibility\" case\n```rust\n#[trait_helper] // The helper attribute is used before it introduced.\n                        // Sadly, compiles on stable, supported via hacks.\n                        // I plan to make a compatibility warning for this.\n#[derive(Trait)]\nstruct S;\n```\n, such attributes still create ambiguities, but #64694 didn't change anything for this case.\n\nFixes https://github.com/rust-lang/rust/issues/66508\nFixes https://github.com/rust-lang/rust/issues/66525\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "html_url": "https://github.com/rust-lang/rust/commit/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e3b860459d75acda352a5b65e2db7b1f8334e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e3b860459d75acda352a5b65e2db7b1f8334e8", "html_url": "https://github.com/rust-lang/rust/commit/42e3b860459d75acda352a5b65e2db7b1f8334e8"}, {"sha": "f74fe812fe802c71bd9f909cbce8a703a20ba479", "url": "https://api.github.com/repos/rust-lang/rust/commits/f74fe812fe802c71bd9f909cbce8a703a20ba479", "html_url": "https://github.com/rust-lang/rust/commit/f74fe812fe802c71bd9f909cbce8a703a20ba479"}], "stats": {"total": 95, "additions": 47, "deletions": 48}, "files": [{"sha": "8dc0fb9bd77f5e1e01abcc2303ffdf5e60cf65fe", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "patch": "@@ -466,11 +466,12 @@ impl<'a> Resolver<'a> {\n     ) -> Result<&'a NameBinding<'a>, Determinacy> {\n         bitflags::bitflags! {\n             struct Flags: u8 {\n-                const MACRO_RULES        = 1 << 0;\n-                const MODULE             = 1 << 1;\n-                const MISC_SUGGEST_CRATE = 1 << 2;\n-                const MISC_SUGGEST_SELF  = 1 << 3;\n-                const MISC_FROM_PRELUDE  = 1 << 4;\n+                const MACRO_RULES          = 1 << 0;\n+                const MODULE               = 1 << 1;\n+                const DERIVE_HELPER_COMPAT = 1 << 2;\n+                const MISC_SUGGEST_CRATE   = 1 << 3;\n+                const MISC_SUGGEST_SELF    = 1 << 4;\n+                const MISC_FROM_PRELUDE    = 1 << 5;\n             }\n         }\n \n@@ -528,8 +529,10 @@ impl<'a> Resolver<'a> {\n                         match this.resolve_macro_path(derive, Some(MacroKind::Derive),\n                                                       parent_scope, true, force) {\n                             Ok((Some(ext), _)) => if ext.helper_attrs.contains(&ident.name) {\n-                                let res = Res::NonMacroAttr(NonMacroAttrKind::DeriveHelper);\n-                                result = ok(res, derive.span, this.arenas);\n+                                let binding = (Res::NonMacroAttr(NonMacroAttrKind::DeriveHelper),\n+                                               ty::Visibility::Public, derive.span, ExpnId::root())\n+                                               .to_name_binding(this.arenas);\n+                                result = Ok((binding, Flags::DERIVE_HELPER_COMPAT));\n                                 break;\n                             }\n                             Ok(_) | Err(Determinacy::Determined) => {}\n@@ -659,13 +662,17 @@ impl<'a> Resolver<'a> {\n                         let (res, innermost_res) = (binding.res(), innermost_binding.res());\n                         if res != innermost_res {\n                             let builtin = Res::NonMacroAttr(NonMacroAttrKind::Builtin);\n-                            let derive_helper = Res::NonMacroAttr(NonMacroAttrKind::DeriveHelper);\n+                            let is_derive_helper_compat = |res, flags: Flags| {\n+                                res == Res::NonMacroAttr(NonMacroAttrKind::DeriveHelper) &&\n+                                flags.contains(Flags::DERIVE_HELPER_COMPAT)\n+                            };\n \n                             let ambiguity_error_kind = if is_import {\n                                 Some(AmbiguityKind::Import)\n                             } else if innermost_res == builtin || res == builtin {\n                                 Some(AmbiguityKind::BuiltinAttr)\n-                            } else if innermost_res == derive_helper || res == derive_helper {\n+                            } else if is_derive_helper_compat(innermost_res, innermost_flags) ||\n+                                      is_derive_helper_compat(res, flags) {\n                                 Some(AmbiguityKind::DeriveHelper)\n                             } else if innermost_flags.contains(Flags::MACRO_RULES) &&\n                                       flags.contains(Flags::MODULE) &&"}, {"sha": "370a1a2794dcf571e158a527c50186b844995642", "filename": "src/test/ui/proc-macro/auxiliary/derive-helper-shadowing-2.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowing-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowing-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowing-2.rs?ref=1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "patch": "@@ -0,0 +1,12 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::*;\n+\n+#[proc_macro_derive(same_name, attributes(same_name))]\n+pub fn derive_a(_: TokenStream) -> TokenStream {\n+    TokenStream::new()\n+}"}, {"sha": "5204d72b980c16cdd749095f5eb2e54273f7cbc1", "filename": "src/test/ui/proc-macro/derive-helper-shadowing-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing-2.rs?ref=1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "patch": "@@ -0,0 +1,16 @@\n+// If a derive macro introduces a helper attribute with the same name as that macro,\n+// then make sure that it's usable without ambiguities.\n+\n+// check-pass\n+// aux-build:derive-helper-shadowing-2.rs\n+\n+#[macro_use]\n+extern crate derive_helper_shadowing_2;\n+\n+#[derive(same_name)]\n+struct S {\n+    #[same_name] // OK, no ambiguity, derive helpers have highest priority\n+    field: u8,\n+}\n+\n+fn main() {}"}, {"sha": "6147e96a74bf1e3733635d2bf8d3bf115a607042", "filename": "src/test/ui/proc-macro/derive-helper-shadowing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.rs?ref=1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "patch": "@@ -19,11 +19,11 @@ macro_rules! gen_helper_use {\n #[empty_helper] //~ ERROR `empty_helper` is ambiguous\n #[derive(Empty)]\n struct S {\n-    #[empty_helper] //~ ERROR `empty_helper` is ambiguous\n+    #[empty_helper] // OK, no ambiguity, derive helpers have highest priority\n     field: [u8; {\n         use empty_helper; //~ ERROR `empty_helper` is ambiguous\n \n-        #[empty_helper] //~ ERROR `empty_helper` is ambiguous\n+        #[empty_helper] // OK, no ambiguity, derive helpers have highest priority\n         struct U;\n \n         mod inner {"}, {"sha": "76434860a4956ef1b9812dd95bcef304d90256ac", "filename": "src/test/ui/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f0f0adbf4bffe93e9a399b5cf1a55e771af4359/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=1f0f0adbf4bffe93e9a399b5cf1a55e771af4359", "patch": "@@ -61,42 +61,6 @@ LL | use test_macros::empty_attr as empty_helper;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use `crate::empty_helper` to refer to this attribute macro unambiguously\n \n-error[E0659]: `empty_helper` is ambiguous (derive helper attribute vs any other name)\n-  --> $DIR/derive-helper-shadowing.rs:22:7\n-   |\n-LL |     #[empty_helper]\n-   |       ^^^^^^^^^^^^ ambiguous name\n-   |\n-note: `empty_helper` could refer to the derive helper attribute defined here\n-  --> $DIR/derive-helper-shadowing.rs:20:10\n-   |\n-LL | #[derive(Empty)]\n-   |          ^^^^^\n-note: `empty_helper` could also refer to the attribute macro imported here\n-  --> $DIR/derive-helper-shadowing.rs:10:5\n-   |\n-LL | use test_macros::empty_attr as empty_helper;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `crate::empty_helper` to refer to this attribute macro unambiguously\n-\n-error[E0659]: `empty_helper` is ambiguous (derive helper attribute vs any other name)\n-  --> $DIR/derive-helper-shadowing.rs:26:11\n-   |\n-LL |         #[empty_helper]\n-   |           ^^^^^^^^^^^^ ambiguous name\n-   |\n-note: `empty_helper` could refer to the derive helper attribute defined here\n-  --> $DIR/derive-helper-shadowing.rs:20:10\n-   |\n-LL | #[derive(Empty)]\n-   |          ^^^^^\n-note: `empty_helper` could also refer to the attribute macro imported here\n-  --> $DIR/derive-helper-shadowing.rs:10:5\n-   |\n-LL | use test_macros::empty_attr as empty_helper;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: use `crate::empty_helper` to refer to this attribute macro unambiguously\n-\n-error: aborting due to 7 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0659`."}]}