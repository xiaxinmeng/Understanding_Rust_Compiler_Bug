{"sha": "70cb75c31e5d084da3a06457484096330ca72a61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwY2I3NWMzMWU1ZDA4NGRhM2EwNjQ1NzQ4NDA5NjMzMGNhNzJhNjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-26T16:29:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-26T16:29:38Z"}, "message": "make memrchr use align_offset", "tree": {"sha": "1897321a88e38e0243e4af552b64e5b0cb682a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1897321a88e38e0243e4af552b64e5b0cb682a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70cb75c31e5d084da3a06457484096330ca72a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70cb75c31e5d084da3a06457484096330ca72a61", "html_url": "https://github.com/rust-lang/rust/commit/70cb75c31e5d084da3a06457484096330ca72a61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70cb75c31e5d084da3a06457484096330ca72a61/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fc4501256b002aef627880a9f6d18065b0ca931", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fc4501256b002aef627880a9f6d18065b0ca931", "html_url": "https://github.com/rust-lang/rust/commit/0fc4501256b002aef627880a9f6d18065b0ca931"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "dbbe1c07c23384052622419b5eed7aa575f839cd", "filename": "src/libcore/slice/memchr.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/70cb75c31e5d084da3a06457484096330ca72a61/src%2Flibcore%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70cb75c31e5d084da3a06457484096330ca72a61/src%2Flibcore%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmemchr.rs?ref=70cb75c31e5d084da3a06457484096330ca72a61", "patch": "@@ -102,8 +102,24 @@ pub fn memrchr(x: u8, text: &[u8]) -> Option<usize> {\n     let ptr = text.as_ptr();\n     let usize_bytes = mem::size_of::<usize>();\n \n+    // a version of align_offset that says how much must be *subtracted*\n+    // from a pointer to be aligned.\n+    #[inline(always)]\n+    fn align_offset_down(ptr: *const u8, align: usize) -> usize {\n+        let align_offset = ptr.align_offset(align);\n+        if align_offset > align {\n+            // Not possible to align\n+            usize::max_value()\n+        } else if align_offset == 0 {\n+            0\n+        } else {\n+            // E.g. if align=8 and we have to add 1, then we can also subtract 7.\n+            align - align_offset\n+        }\n+    }\n+\n     // search to an aligned boundary\n-    let end_align = (ptr as usize + len) & (usize_bytes - 1);\n+    let end_align = align_offset_down(unsafe { ptr.offset(len as isize) }, usize_bytes);\n     let mut offset;\n     if end_align > 0 {\n         offset = if end_align >= len { 0 } else { len - end_align };"}]}