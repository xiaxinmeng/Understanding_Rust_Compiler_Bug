{"sha": "175345b8640e774089fd89cddc000f677c4fb316", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NTM0NWI4NjQwZTc3NDA4OWZkODljZGRjMDAwZjY3N2M0ZmIzMTY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-15T12:38:32Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-15T12:38:32Z"}, "message": "Fix tests on traits.", "tree": {"sha": "181354a8fee21bb01ae620680ad097bec531c892", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/181354a8fee21bb01ae620680ad097bec531c892"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/175345b8640e774089fd89cddc000f677c4fb316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/175345b8640e774089fd89cddc000f677c4fb316", "html_url": "https://github.com/rust-lang/rust/commit/175345b8640e774089fd89cddc000f677c4fb316", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/175345b8640e774089fd89cddc000f677c4fb316/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da093d713ad43ed918a667e48f62ad285d9924d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/da093d713ad43ed918a667e48f62ad285d9924d1", "html_url": "https://github.com/rust-lang/rust/commit/da093d713ad43ed918a667e48f62ad285d9924d1"}], "stats": {"total": 206, "additions": 107, "deletions": 99}, "files": [{"sha": "1a08d6e58d26b37f27a8e0b3c9af2138ce6d8dbb", "filename": "compiler/rustc_incremental/src/persist/dirty_clean.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/175345b8640e774089fd89cddc000f677c4fb316/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175345b8640e774089fd89cddc000f677c4fb316/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fdirty_clean.rs?ref=175345b8640e774089fd89cddc000f677c4fb316", "patch": "@@ -100,6 +100,12 @@ const LABELS_FN_IN_TRAIT: &[&[&str]] =\n /// For generic cases like inline-assembly, modules, etc.\n const LABELS_HIR_ONLY: &[&[&str]] = &[BASE_HIR];\n \n+/// Impl `DepNode`s.\n+const LABELS_TRAIT: &[&[&str]] = &[\n+    BASE_HIR,\n+    &[label_strs::associated_item_def_ids, label_strs::predicates_of, label_strs::generics_of],\n+];\n+\n /// Impl `DepNode`s.\n const LABELS_IMPL: &[&[&str]] = &[BASE_HIR, BASE_IMPL];\n \n@@ -259,20 +265,7 @@ impl DirtyCleanVisitor<'tcx> {\n                     HirItem::Union(..) => (\"ItemUnion\", LABELS_ADT),\n \n                     // Represents a Trait Declaration\n-                    // FIXME(michaelwoerister): trait declaration is buggy because sometimes some of\n-                    // the depnodes don't exist (because they legitimately didn't need to be\n-                    // calculated)\n-                    //\n-                    // michaelwoerister and vitiral came up with a possible solution,\n-                    // to just do this before every query\n-                    // ```\n-                    // ::rustc_middle::ty::query::plumbing::force_from_dep_node(tcx, dep_node)\n-                    // ```\n-                    //\n-                    // However, this did not seem to work effectively and more bugs were hit.\n-                    // Nebie @vitiral gave up :)\n-                    //\n-                    //HirItem::Trait(..) => (\"ItemTrait\", LABELS_TRAIT),\n+                    HirItem::Trait(..) => (\"ItemTrait\", LABELS_TRAIT),\n \n                     // An implementation, eg `impl<A> Trait for Foo { .. }`\n                     HirItem::Impl { .. } => (\"ItemKind::Impl\", LABELS_IMPL),"}, {"sha": "a604ca5ca82d71c5e25c3a2871d6389cb07c3bac", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 71, "deletions": 65, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/175345b8640e774089fd89cddc000f677c4fb316/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175345b8640e774089fd89cddc000f677c4fb316/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=175345b8640e774089fd89cddc000f677c4fb316", "patch": "@@ -48,7 +48,7 @@ trait TraitAddMethod {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub trait TraitAddMethod {\n     fn method();\n@@ -63,7 +63,7 @@ trait TraitChangeMethodName {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodName {\n     fn methodChanged();\n@@ -81,7 +81,7 @@ trait TraitAddReturnType {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddReturnType {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method() -> u32;\n }\n@@ -98,7 +98,7 @@ trait TraitChangeReturnType {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeReturnType {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method() -> u64;\n }\n@@ -115,7 +115,7 @@ trait TraitAddParameterToMethod {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddParameterToMethod {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(a: u32);\n }\n@@ -138,7 +138,7 @@ trait TraitChangeMethodParameterName {\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(b: u32);\n \n-    #[rustc_clean(except=\"hir_owner_nodes\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner_nodes,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn with_default(y: i32) {}\n }\n@@ -155,7 +155,7 @@ trait TraitChangeMethodParameterType {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParameterType {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(a: i64);\n }\n@@ -172,7 +172,7 @@ trait TraitChangeMethodParameterTypeRef {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParameterTypeRef {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(a: &mut i32);\n }\n@@ -189,7 +189,7 @@ trait TraitChangeMethodParametersOrder {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParametersOrder {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(b: i64, a: i32);\n }\n@@ -206,7 +206,7 @@ trait TraitAddMethodAutoImplementation {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddMethodAutoImplementation {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method() { }\n }\n@@ -221,7 +221,7 @@ trait TraitChangeOrderOfMethods {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeOrderOfMethods {\n     fn method1();\n@@ -240,7 +240,7 @@ trait TraitChangeModeSelfRefToMut {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeModeSelfRefToMut {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(&mut self);\n }\n@@ -256,7 +256,7 @@ trait TraitChangeModeSelfOwnToMut: Sized {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeModeSelfOwnToMut: Sized {\n-    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(mut self) {}\n }\n@@ -272,7 +272,7 @@ trait TraitChangeModeSelfOwnToRef {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeModeSelfOwnToRef {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig,generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method(&self);\n }\n@@ -289,7 +289,7 @@ trait TraitAddUnsafeModifier {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddUnsafeModifier {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     unsafe fn method();\n }\n@@ -306,7 +306,7 @@ trait TraitAddExternModifier {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddExternModifier {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     extern \"C\" fn method();\n }\n@@ -323,7 +323,7 @@ trait TraitChangeExternCToRustIntrinsic {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeExternCToRustIntrinsic {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     extern \"stdcall\" fn method();\n }\n@@ -340,7 +340,7 @@ trait TraitAddTypeParameterToMethod {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTypeParameterToMethod {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,generics_of,predicates_of,type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<T>();\n }\n@@ -357,7 +357,7 @@ trait TraitAddLifetimeParameterToMethod {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeParameterToMethod {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,fn_sig,generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<'a>();\n }\n@@ -378,7 +378,7 @@ trait TraitAddTraitBoundToMethodTypeParameter {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToMethodTypeParameter {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<T: ReferencedTrait0>();\n }\n@@ -395,7 +395,7 @@ trait TraitAddBuiltinBoundToMethodTypeParameter {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToMethodTypeParameter {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<T: Sized>();\n }\n@@ -412,7 +412,10 @@ trait TraitAddLifetimeBoundToMethodLifetimeParameter {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToMethodLifetimeParameter {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(\n+        except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of,fn_sig,type_of\",\n+        cfg=\"cfail2\",\n+    )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<'a, 'b: 'a>(a: &'a u32, b: &'b u32);\n }\n@@ -429,7 +432,7 @@ trait TraitAddSecondTraitBoundToMethodTypeParameter {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToMethodTypeParameter {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<T: ReferencedTrait0 + ReferencedTrait1>();\n }\n@@ -446,7 +449,7 @@ trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<T: Sized + Sync>();\n }\n@@ -463,7 +466,10 @@ trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToMethodLifetimeParameter {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(\n+        except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of,fn_sig,type_of\",\n+        cfg=\"cfail2\",\n+    )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method<'a, 'b, 'c: 'a + 'b>(a: &'a u32, b: &'b u32, c: &'c u32);\n }\n@@ -480,7 +486,7 @@ trait TraitAddAssociatedType {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddAssociatedType {\n     type Associated;\n@@ -547,7 +553,7 @@ trait TraitAddDefaultToAssociatedType {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddDefaultToAssociatedType {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     type Associated = ReferenceType0;\n \n@@ -563,7 +569,7 @@ trait TraitAddAssociatedConstant {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddAssociatedConstant {\n     const Value: u32;\n@@ -585,7 +591,7 @@ trait TraitAddInitializerToAssociatedConstant {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddInitializerToAssociatedConstant {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     const Value: u32 = 1;\n \n@@ -608,7 +614,7 @@ trait TraitChangeTypeOfAssociatedConstant {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitChangeTypeOfAssociatedConstant {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     const Value: f64;\n \n@@ -624,7 +630,7 @@ trait TraitChangeTypeOfAssociatedConstant {\n trait TraitAddSuperTrait { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSuperTrait : ReferencedTrait0 { }\n \n@@ -635,7 +641,7 @@ trait TraitAddSuperTrait : ReferencedTrait0 { }\n trait TraitAddBuiltiBound { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltiBound : Send { }\n \n@@ -646,7 +652,7 @@ trait TraitAddBuiltiBound : Send { }\n trait TraitAddStaticLifetimeBound { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddStaticLifetimeBound : 'static { }\n \n@@ -657,15 +663,15 @@ trait TraitAddStaticLifetimeBound : 'static { }\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 + ReferencedTrait1 { }\n \n #[cfg(cfail1)]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n \n@@ -676,15 +682,15 @@ trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 + Send { }\n \n #[cfg(cfail1)]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n \n@@ -695,15 +701,15 @@ trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 + 'static { }\n \n #[cfg(cfail1)]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n \n@@ -714,7 +720,7 @@ trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n trait TraitAddTypeParameterToTrait { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTypeParameterToTrait<T> { }\n \n@@ -725,7 +731,7 @@ trait TraitAddTypeParameterToTrait<T> { }\n trait TraitAddLifetimeParameterToTrait { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeParameterToTrait<'a> { }\n \n@@ -736,7 +742,7 @@ trait TraitAddLifetimeParameterToTrait<'a> { }\n trait TraitAddTraitBoundToTypeParameterOfTrait<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n@@ -747,7 +753,7 @@ trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T: 'a> { }\n \n@@ -758,7 +764,7 @@ trait TraitAddLifetimeBoundToTypeParameterOfTrait<'a, T: 'a> { }\n trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a, 'b> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b> { }\n \n@@ -769,7 +775,7 @@ trait TraitAddLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b> { }\n trait TraitAddBuiltinBoundToTypeParameterOfTrait<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n \n@@ -780,7 +786,7 @@ trait TraitAddBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n trait TraitAddSecondTypeParameterToTrait<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTypeParameterToTrait<T, S> { }\n \n@@ -791,7 +797,7 @@ trait TraitAddSecondTypeParameterToTrait<T, S> { }\n trait TraitAddSecondLifetimeParameterToTrait<'a> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeParameterToTrait<'a, 'b> { }\n \n@@ -802,7 +808,7 @@ trait TraitAddSecondLifetimeParameterToTrait<'a, 'b> { }\n trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0 + ReferencedTrait1> { }\n \n@@ -813,7 +819,7 @@ trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0 + Refer\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a + 'b> { }\n \n@@ -824,7 +830,7 @@ trait TraitAddSecondLifetimeBoundToTypeParameterOfTrait<'a, 'b, T: 'a + 'b> { }\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b, 'b, 'c> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b + 'c, 'b, 'c> { }\n \n@@ -835,7 +841,7 @@ trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTrait<'a: 'b + 'c, 'b, 'c>\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTrait<T: Send> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTrait<T: Send + Sync> { }\n \n@@ -851,7 +857,7 @@ struct ReferenceType1 {}\n trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n@@ -862,7 +868,7 @@ trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0\n trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> where T: 'a { }\n \n@@ -873,7 +879,7 @@ trait TraitAddLifetimeBoundToTypeParameterOfTraitWhere<'a, T> where T: 'a { }\n trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> where 'a: 'b { }\n \n@@ -884,7 +890,7 @@ trait TraitAddLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b> where 'a: 'b\n trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n \n@@ -895,7 +901,7 @@ trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T>\n     where T: ReferencedTrait0 + ReferencedTrait1 { }\n@@ -907,7 +913,7 @@ trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T>\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T: 'a { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T: 'a + 'b { }\n \n@@ -918,7 +924,7 @@ trait TraitAddSecondLifetimeBoundToTypeParameterOfTraitWhere<'a, 'b, T> where T:\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> where 'a: 'b { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> where 'a: 'b + 'c { }\n \n@@ -929,7 +935,7 @@ trait TraitAddSecondLifetimeBoundToLifetimeParameterOfTraitWhere<'a, 'b, 'c> whe\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n trait TraitAddSecondBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send + Sync { }\n \n@@ -944,7 +950,7 @@ mod change_return_type_of_method_indirectly_use {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     trait TraitChangeReturnType {\n-        #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n         #[rustc_clean(cfg=\"cfail3\")]\n         fn method() -> ReturnType;\n     }\n@@ -962,7 +968,7 @@ mod change_method_parameter_type_indirectly_by_use {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     trait TraitChangeArgType {\n-        #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n         #[rustc_clean(cfg=\"cfail3\")]\n         fn method(a: ArgType);\n     }\n@@ -980,7 +986,7 @@ mod change_method_parameter_type_bound_indirectly_by_use {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     trait TraitChangeBoundOfMethodTypeParameter {\n-        #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n         #[rustc_clean(cfg=\"cfail3\")]\n         fn method<T: Bound>(a: T);\n     }\n@@ -999,7 +1005,7 @@ mod change_method_parameter_type_bound_indirectly_by_use_where {\n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     trait TraitChangeBoundOfMethodTypeParameterWhere {\n-        #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+        #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n         #[rustc_clean(cfg=\"cfail3\")]\n         fn method<T>(a: T) where T: Bound;\n     }\n@@ -1014,7 +1020,7 @@ mod change_method_type_parameter_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait1 as Bound;\n \n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     trait TraitChangeTraitBound<T: Bound> {\n         fn method(a: T);\n@@ -1031,7 +1037,7 @@ mod change_method_type_parameter_bound_indirectly_where {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait1 as Bound;\n \n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     trait TraitChangeTraitBoundWhere<T> where T: Bound {\n         fn method(a: T);"}, {"sha": "c9a3de1f6ae4d7e433feea01180097354821a5de", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/175345b8640e774089fd89cddc000f677c4fb316/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175345b8640e774089fd89cddc000f677c4fb316/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=175345b8640e774089fd89cddc000f677c4fb316", "patch": "@@ -30,15 +30,15 @@ impl ChangeMethodNameTrait for Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub trait ChangeMethodNameTrait {\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name2();\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeMethodNameTrait for Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -62,7 +62,7 @@ impl ChangeMethodBodyTrait for Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeMethodBodyTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner_nodes\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner_nodes,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name() {\n         ()\n@@ -87,7 +87,7 @@ impl ChangeMethodBodyTraitInlined for Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeMethodBodyTraitInlined for Foo {\n-    #[rustc_clean(except=\"hir_owner_nodes\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner_nodes,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[inline]\n     fn method_name() {\n@@ -116,7 +116,10 @@ pub trait ChangeMethodSelfnessTrait {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeMethodSelfnessTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(\n+        except=\"hir_owner,hir_owner_nodes,associated_item,generics_of,fn_sig,typeck,optimized_mir\",\n+        cfg=\"cfail2\",\n+    )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name(&self) {\n         ()\n@@ -144,7 +147,10 @@ pub trait RemoveMethodSelfnessTrait {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl RemoveMethodSelfnessTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(\n+        except=\"hir_owner,hir_owner_nodes,associated_item,generics_of,fn_sig,typeck,optimized_mir\",\n+        cfg=\"cfail2\",\n+    )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name() {}\n }\n@@ -170,7 +176,7 @@ pub trait ChangeMethodSelfmutnessTrait {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeMethodSelfmutnessTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name(&mut self) {}\n }\n@@ -193,7 +199,7 @@ pub trait ChangeItemKindTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeItemKindTrait for Foo {\n     type name = ();\n@@ -219,7 +225,7 @@ pub trait RemoveItemTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl RemoveItemTrait for Foo {\n     type TypeName = ();\n@@ -244,7 +250,7 @@ pub trait AddItemTrait {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl AddItemTrait for Foo {\n     type TypeName = ();\n@@ -267,7 +273,7 @@ impl ChangeHasValueTrait for Foo {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub trait ChangeHasValueTrait {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name() { }\n }\n@@ -294,7 +300,7 @@ impl AddDefaultTrait for Foo {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl AddDefaultTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     default fn method_name() { }\n }\n@@ -320,7 +326,7 @@ pub trait AddArgumentTrait {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl AddArgumentTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name(&self, _x: u32) { }\n }\n@@ -346,7 +352,7 @@ pub trait ChangeArgumentTypeTrait {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeArgumentTypeTrait for Foo {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_name(&self, _x: char) { }\n }\n@@ -366,10 +372,13 @@ impl AddTypeParameterToImpl<u32> for Bar<u32> {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,generics_of,impl_trait_ref\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T> AddTypeParameterToImpl<T> for Bar<T> {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(\n+        except=\"hir_owner,hir_owner_nodes,generics_of,fn_sig,type_of,typeck,optimized_mir\",\n+        cfg=\"cfail2\",\n+    )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn id(t: T) -> T { t }\n }\n@@ -387,10 +396,10 @@ impl ChangeSelfTypeOfImpl for u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,impl_trait_ref\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl ChangeSelfTypeOfImpl for u64 {\n-    #[rustc_clean(cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"fn_sig,typeck,optimized_mir\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn id(self) -> Self { self }\n }\n@@ -408,7 +417,7 @@ impl<T> AddLifetimeBoundToImplParameter for T {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T: 'static> AddLifetimeBoundToImplParameter for T {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -429,7 +438,7 @@ impl<T> AddTraitBoundToImplParameter for T {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl<T: Clone> AddTraitBoundToImplParameter for T {\n     #[rustc_clean(cfg=\"cfail2\")]"}]}