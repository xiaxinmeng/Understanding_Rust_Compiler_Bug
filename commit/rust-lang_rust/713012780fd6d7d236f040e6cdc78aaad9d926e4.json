{"sha": "713012780fd6d7d236f040e6cdc78aaad9d926e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMzAxMjc4MGZkNmQ3ZDIzNmYwNDBlNmNkYzc4YWFhZDlkOTI2ZTQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T13:02:42Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-22T16:41:35Z"}, "message": "Add test for const panic!(CONST).", "tree": {"sha": "dc5cc8d3708106d368d3a50498f34eb3f5718a2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc5cc8d3708106d368d3a50498f34eb3f5718a2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/713012780fd6d7d236f040e6cdc78aaad9d926e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/713012780fd6d7d236f040e6cdc78aaad9d926e4", "html_url": "https://github.com/rust-lang/rust/commit/713012780fd6d7d236f040e6cdc78aaad9d926e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/713012780fd6d7d236f040e6cdc78aaad9d926e4/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7ffbf351c732fcdbe1374c6782e94f66da9a23", "html_url": "https://github.com/rust-lang/rust/commit/4f7ffbf351c732fcdbe1374c6782e94f66da9a23"}], "stats": {"total": 62, "additions": 45, "deletions": 17}, "files": [{"sha": "799c185fb8e4b534e003e35c58ab946f1a4d2a8a", "filename": "src/test/ui/consts/const-eval/const_panic.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/713012780fd6d7d236f040e6cdc78aaad9d926e4/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713012780fd6d7d236f040e6cdc78aaad9d926e4/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.rs?ref=713012780fd6d7d236f040e6cdc78aaad9d926e4", "patch": "@@ -1,6 +1,8 @@\n #![feature(const_panic)]\n #![crate_type = \"lib\"]\n \n+const MSG: &str = \"hello\";\n+\n const Z: () = std::panic!(\"cheese\");\n //~^ ERROR any use of this value will cause an error\n \n@@ -12,6 +14,9 @@ const Y: () = std::unreachable!();\n \n const X: () = std::unimplemented!();\n //~^ ERROR any use of this value will cause an error\n+//\n+const W: () = std::panic!(MSG);\n+//~^ ERROR any use of this value will cause an error\n \n const Z_CORE: () = core::panic!(\"cheese\");\n //~^ ERROR any use of this value will cause an error\n@@ -24,3 +29,6 @@ const Y_CORE: () = core::unreachable!();\n \n const X_CORE: () = core::unimplemented!();\n //~^ ERROR any use of this value will cause an error\n+\n+const W_CORE: () = core::panic!(MSG);\n+//~^ ERROR any use of this value will cause an error"}, {"sha": "c2711952d58373f0b8329516aa83d55bad75cdd7", "filename": "src/test/ui/consts/const-eval/const_panic.stderr", "status": "modified", "additions": 37, "deletions": 17, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/713012780fd6d7d236f040e6cdc78aaad9d926e4/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/713012780fd6d7d236f040e6cdc78aaad9d926e4/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic.stderr?ref=713012780fd6d7d236f040e6cdc78aaad9d926e4", "patch": "@@ -1,83 +1,103 @@\n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:4:15\n+  --> $DIR/const_panic.rs:6:15\n    |\n LL | const Z: () = std::panic!(\"cheese\");\n    | --------------^^^^^^^^^^^^^^^^^^^^^-\n    |               |\n-   |               the evaluated program panicked at 'cheese', $DIR/const_panic.rs:4:15\n+   |               the evaluated program panicked at 'cheese', $DIR/const_panic.rs:6:15\n    |\n    = note: `#[deny(const_err)]` on by default\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:7:16\n+  --> $DIR/const_panic.rs:9:16\n    |\n LL | const Z2: () = std::panic!();\n    | ---------------^^^^^^^^^^^^^-\n    |                |\n-   |                the evaluated program panicked at 'explicit panic', $DIR/const_panic.rs:7:16\n+   |                the evaluated program panicked at 'explicit panic', $DIR/const_panic.rs:9:16\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:10:15\n+  --> $DIR/const_panic.rs:12:15\n    |\n LL | const Y: () = std::unreachable!();\n    | --------------^^^^^^^^^^^^^^^^^^^-\n    |               |\n-   |               the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:10:15\n+   |               the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:12:15\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:13:15\n+  --> $DIR/const_panic.rs:15:15\n    |\n LL | const X: () = std::unimplemented!();\n    | --------------^^^^^^^^^^^^^^^^^^^^^-\n    |               |\n-   |               the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:13:15\n+   |               the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:15:15\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:16:20\n+  --> $DIR/const_panic.rs:18:15\n+   |\n+LL | const W: () = std::panic!(MSG);\n+   | --------------^^^^^^^^^^^^^^^^-\n+   |               |\n+   |               the evaluated program panicked at 'hello', $DIR/const_panic.rs:18:15\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:21:20\n    |\n LL | const Z_CORE: () = core::panic!(\"cheese\");\n    | -------------------^^^^^^^^^^^^^^^^^^^^^^-\n    |                    |\n-   |                    the evaluated program panicked at 'cheese', $DIR/const_panic.rs:16:20\n+   |                    the evaluated program panicked at 'cheese', $DIR/const_panic.rs:21:20\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:19:21\n+  --> $DIR/const_panic.rs:24:21\n    |\n LL | const Z2_CORE: () = core::panic!();\n    | --------------------^^^^^^^^^^^^^^-\n    |                     |\n-   |                     the evaluated program panicked at 'explicit panic', $DIR/const_panic.rs:19:21\n+   |                     the evaluated program panicked at 'explicit panic', $DIR/const_panic.rs:24:21\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:22:20\n+  --> $DIR/const_panic.rs:27:20\n    |\n LL | const Y_CORE: () = core::unreachable!();\n    | -------------------^^^^^^^^^^^^^^^^^^^^-\n    |                    |\n-   |                    the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:22:20\n+   |                    the evaluated program panicked at 'internal error: entered unreachable code', $DIR/const_panic.rs:27:20\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic.rs:25:20\n+  --> $DIR/const_panic.rs:30:20\n    |\n LL | const X_CORE: () = core::unimplemented!();\n    | -------------------^^^^^^^^^^^^^^^^^^^^^^-\n    |                    |\n-   |                    the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:25:20\n+   |                    the evaluated program panicked at 'not implemented', $DIR/const_panic.rs:30:20\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const_panic.rs:33:20\n+   |\n+LL | const W_CORE: () = core::panic!(MSG);\n+   | -------------------^^^^^^^^^^^^^^^^^-\n+   |                    |\n+   |                    the evaluated program panicked at 'hello', $DIR/const_panic.rs:33:20\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 10 previous errors\n "}]}