{"sha": "697a38b17a6d8370bb303c5c44b48f2b0424d96d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5N2EzOGIxN2E2ZDgzNzBiYjMwM2M1YzQ0YjQ4ZjJiMDQyNGQ5NmQ=", "commit": {"author": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2019-12-25T00:50:37Z"}, "committer": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2019-12-25T01:12:08Z"}, "message": "Add test cases which exercise the fix.", "tree": {"sha": "4d1e8d745a66dd54806b4e65d8d6ed5da9e31b05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d1e8d745a66dd54806b4e65d8d6ed5da9e31b05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/697a38b17a6d8370bb303c5c44b48f2b0424d96d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/697a38b17a6d8370bb303c5c44b48f2b0424d96d", "html_url": "https://github.com/rust-lang/rust/commit/697a38b17a6d8370bb303c5c44b48f2b0424d96d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/697a38b17a6d8370bb303c5c44b48f2b0424d96d/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5bc786399405c03a746ad385e579542788c8522", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5bc786399405c03a746ad385e579542788c8522", "html_url": "https://github.com/rust-lang/rust/commit/a5bc786399405c03a746ad385e579542788c8522"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "4c09ae25c5f3ea9e500c6ab7c2a6bafc419383e5", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557-ice.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/697a38b17a6d8370bb303c5c44b48f2b0424d96d/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697a38b17a6d8370bb303c5c44b48f2b0424d96d/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs?ref=697a38b17a6d8370bb303c5c44b48f2b0424d96d", "patch": "@@ -0,0 +1,25 @@\n+// This used to cause an ICE for an internal index out of range due to simd_shuffle_indices being\n+// passed the wrong Instance, causing issues with inlining. See #67557.\n+//\n+// run-pass\n+// compile-flags: -Zmir-opt-level=3\n+#![feature(platform_intrinsics, repr_simd)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+}\n+\n+#[repr(simd)]\n+#[derive(Debug, PartialEq)]\n+struct Simd2(u8, u8);\n+\n+fn main() {\n+    unsafe {\n+        let _: Simd2 = inline_me();\n+    }\n+}\n+\n+#[inline(always)]\n+unsafe fn inline_me() -> Simd2 {\n+    simd_shuffle2(Simd2(10, 11), Simd2(12, 13), [0, 3])\n+}"}, {"sha": "7a0d955686bb6d4c2bc1cbefda9bd957cb5c49a2", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/697a38b17a6d8370bb303c5c44b48f2b0424d96d/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "raw_url": "https://github.com/rust-lang/rust/raw/697a38b17a6d8370bb303c5c44b48f2b0424d96d/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs?ref=697a38b17a6d8370bb303c5c44b48f2b0424d96d", "patch": "@@ -0,0 +1,40 @@\n+// This used to cause assert_10_13 to unexpectingly fail, due to simd_shuffle_indices being passed\n+// the wrong Instance, causing issues with inlining. See #67557.\n+//\n+// run-pass\n+// compile-flags: -Zmir-opt-level=3\n+#![feature(platform_intrinsics, repr_simd)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+}\n+\n+#[repr(simd)]\n+#[derive(Debug, PartialEq)]\n+struct Simd2(u8, u8);\n+\n+fn main() {\n+    unsafe {\n+        let p_res: Simd2 = simd_shuffle2(Simd2(10, 11), Simd2(12, 13), [0, 1]);\n+        let a_res: Simd2 = inline_me();\n+\n+        assert_10_11(p_res);\n+        assert_10_13(a_res);\n+    }\n+}\n+\n+#[inline(never)]\n+fn assert_10_11(x: Simd2) {\n+    assert_eq!(x, Simd2(10, 11));\n+}\n+\n+#[inline(never)]\n+fn assert_10_13(x: Simd2) {\n+    assert_eq!(x, Simd2(10, 13));\n+}\n+\n+\n+#[inline(always)]\n+unsafe fn inline_me() -> Simd2 {\n+    simd_shuffle2(Simd2(10, 11), Simd2(12, 13), [0, 3])\n+}"}]}