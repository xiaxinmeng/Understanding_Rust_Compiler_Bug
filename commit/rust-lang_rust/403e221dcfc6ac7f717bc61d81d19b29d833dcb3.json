{"sha": "403e221dcfc6ac7f717bc61d81d19b29d833dcb3", "node_id": "C_kwDOAAsO6NoAKDQwM2UyMjFkY2ZjNmFjN2Y3MTdiYzYxZDgxZDE5YjI5ZDgzM2RjYjM", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-09-30T02:33:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-30T02:33:40Z"}, "message": "Rollup merge of #89313 - durin42:llvm-14-thinLTOResolvePrevailingInModule, r=nikic\n\nPassWrapper: handle function rename from upstream D36850\n\nthinLTOResolvePrevailingInModule became thinLTOFinalizeInModule and\ngained the ability to propagate noRecurse and noUnwind function\nattributes. I ran codegen tests with it both on and off, as the upstream\npatch uses it in both modes, and the tests pass both ways. Given that,\nit seemed reasonable to go ahead and let the propagation be enabled in\nrustc, and see what happens. See https://reviews.llvm.org/D36850 for\nmore examples of how the new version of the function gets used.\n\nr? ``@nikic`` cc ``@nagisa``", "tree": {"sha": "4d284f1b2ae70d7c4778ffac946889ddfc6e57bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d284f1b2ae70d7c4778ffac946889ddfc6e57bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/403e221dcfc6ac7f717bc61d81d19b29d833dcb3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVSIECRBK7hj4Ov3rIwAAAn8IABjSRwLtz4pkHLNRt/pWZPil\n8bpjkHTedzwUeF4/CdCkZVNzDCk8ElwvjS0b8+YsBurSAypZQ0qQ/QEAsJYQR4Zo\nc67fdY9CEKRQOIefuQi+rd2/78rF7cQDofnzkK9UJrgw+Tr9r+TOO7SKGJ+x0C85\nw6Scytzyf9G4OHcaRzf//n76fsMITIFnG+YEe+0GFOCPDZ1iuUW8wP5DOwqr7FlH\njaRGfrpX+7PWdsZot4E6pVd7OlBHYrpmynQ3l8//fhp7ksqIWsJ96faur0OJRh+Z\nPxeVAZZrzxIWH612KFlgKQTwcSJdAiE1+SeJ8Fc7Cs3qYtHa/Q3GnDnk2IOpOFU=\n=ZIFc\n-----END PGP SIGNATURE-----\n", "payload": "tree 4d284f1b2ae70d7c4778ffac946889ddfc6e57bd\nparent c5f8675291de47c5a189b750feb8cd2c3fef6f73\nparent 12c3f50a90b96fff93399f3039155da3ef96abb0\nauthor Eric Huss <eric@huss.org> 1632969220 -0700\ncommitter GitHub <noreply@github.com> 1632969220 -0700\n\nRollup merge of #89313 - durin42:llvm-14-thinLTOResolvePrevailingInModule, r=nikic\n\nPassWrapper: handle function rename from upstream D36850\n\nthinLTOResolvePrevailingInModule became thinLTOFinalizeInModule and\ngained the ability to propagate noRecurse and noUnwind function\nattributes. I ran codegen tests with it both on and off, as the upstream\npatch uses it in both modes, and the tests pass both ways. Given that,\nit seemed reasonable to go ahead and let the propagation be enabled in\nrustc, and see what happens. See https://reviews.llvm.org/D36850 for\nmore examples of how the new version of the function gets used.\n\nr? ``@nikic`` cc ``@nagisa``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/403e221dcfc6ac7f717bc61d81d19b29d833dcb3", "html_url": "https://github.com/rust-lang/rust/commit/403e221dcfc6ac7f717bc61d81d19b29d833dcb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/403e221dcfc6ac7f717bc61d81d19b29d833dcb3/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5f8675291de47c5a189b750feb8cd2c3fef6f73", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f8675291de47c5a189b750feb8cd2c3fef6f73", "html_url": "https://github.com/rust-lang/rust/commit/c5f8675291de47c5a189b750feb8cd2c3fef6f73"}, {"sha": "12c3f50a90b96fff93399f3039155da3ef96abb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/12c3f50a90b96fff93399f3039155da3ef96abb0", "html_url": "https://github.com/rust-lang/rust/commit/12c3f50a90b96fff93399f3039155da3ef96abb0"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "ddb5f7dcebfad5777cb9e364513c53f40ab4294f", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/403e221dcfc6ac7f717bc61d81d19b29d833dcb3/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/403e221dcfc6ac7f717bc61d81d19b29d833dcb3/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=403e221dcfc6ac7f717bc61d81d19b29d833dcb3", "patch": "@@ -1572,7 +1572,11 @@ extern \"C\" bool\n LLVMRustPrepareThinLTOResolveWeak(const LLVMRustThinLTOData *Data, LLVMModuleRef M) {\n   Module &Mod = *unwrap(M);\n   const auto &DefinedGlobals = Data->ModuleToDefinedGVSummaries.lookup(Mod.getModuleIdentifier());\n+#if LLVM_VERSION_GE(14, 0)\n+  thinLTOFinalizeInModule(Mod, DefinedGlobals, /*PropagateAttrs=*/true);\n+#else\n   thinLTOResolvePrevailingInModule(Mod, DefinedGlobals);\n+#endif\n   return true;\n }\n "}]}