{"sha": "f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NWIwYzQ1NmY3NjNhNzBhOGVhZTBlNGE5ZGFmNmE0MDA1ZWY4N2E=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-24T09:06:42Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-24T09:06:42Z"}, "message": "Remove use of `unwrap()` from save-analysis", "tree": {"sha": "39ac5e4955176f4904790796edbfffd66ccbbd2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39ac5e4955176f4904790796edbfffd66ccbbd2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "html_url": "https://github.com/rust-lang/rust/commit/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79cd224e758f603898b64308e849fbb9be6e6f4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/79cd224e758f603898b64308e849fbb9be6e6f4d", "html_url": "https://github.com/rust-lang/rust/commit/79cd224e758f603898b64308e849fbb9be6e6f4d"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "a46be2dcd82d5e626b171d97de7c77854fe29142", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "patch": "@@ -533,14 +533,17 @@ impl<'l, 'tcx> SaveContext<'l, 'tcx> {\n                 match self.tables.expr_ty_adjusted(&hir_node).kind {\n                     ty::Adt(def, _) if !def.is_enum() => {\n                         let variant = &def.non_enum_variant();\n-                        let index = self.tcx.find_field_index(ident, variant).unwrap();\n-                        filter!(self.span_utils, ident.span);\n-                        let span = self.span_from_span(ident.span);\n-                        return Some(Data::RefData(Ref {\n-                            kind: RefKind::Variable,\n-                            span,\n-                            ref_id: id_from_def_id(variant.fields[index].did),\n-                        }));\n+                        if let Some(index) = self.tcx.find_field_index(ident, variant) {\n+                            filter!(self.span_utils, ident.span);\n+                            let span = self.span_from_span(ident.span);\n+                            return Some(Data::RefData(Ref {\n+                                kind: RefKind::Variable,\n+                                span,\n+                                ref_id: id_from_def_id(variant.fields[index].did),\n+                            }));\n+                        }\n+\n+                        None\n                     }\n                     ty::Tuple(..) => None,\n                     _ => {"}, {"sha": "dec096252253a5f85422b1cfb6218131a2a1ac5a", "filename": "src/test/ui/assign-to-method.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fassign-to-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fassign-to-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassign-to-method.rs?ref=f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags: -Zsave-analysis\n+\n struct Cat {\n   meows : usize,\n "}, {"sha": "b9ef49acd6da28a2031327f06aedc57f57c30505", "filename": "src/test/ui/assign-to-method.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fassign-to-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fassign-to-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassign-to-method.stderr?ref=f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "patch": "@@ -1,13 +1,13 @@\n error[E0615]: attempted to take value of method `speak` on type `Cat`\n-  --> $DIR/assign-to-method.rs:20:8\n+  --> $DIR/assign-to-method.rs:22:8\n    |\n LL |   nyan.speak = || println!(\"meow\");\n    |        ^^^^^\n    |\n    = help: methods are immutable and cannot be assigned to\n \n error[E0615]: attempted to take value of method `speak` on type `Cat`\n-  --> $DIR/assign-to-method.rs:21:8\n+  --> $DIR/assign-to-method.rs:23:8\n    |\n LL |   nyan.speak += || println!(\"meow\");\n    |        ^^^^^"}, {"sha": "a220151c41631a83b30546c04200c86b17ee0595", "filename": "src/test/ui/issues/issue-3763.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fissues%2Fissue-3763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fissues%2Fissue-3763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3763.rs?ref=f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags: -Zsave-analysis\n+\n mod my_mod {\n     pub struct MyStruct {\n         priv_field: isize"}, {"sha": "3db962142b5b272f7cb37cf4fbd14c9fbc5f2ff3", "filename": "src/test/ui/issues/issue-3763.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f85b0c456f763a70a8eae0e4a9daf6a4005ef87a/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr?ref=f85b0c456f763a70a8eae0e4a9daf6a4005ef87a", "patch": "@@ -1,29 +1,29 @@\n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n-  --> $DIR/issue-3763.rs:15:19\n+  --> $DIR/issue-3763.rs:17:19\n    |\n LL |     let _woohoo = (&my_struct).priv_field;\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n-  --> $DIR/issue-3763.rs:18:19\n+  --> $DIR/issue-3763.rs:20:19\n    |\n LL |     let _woohoo = (Box::new(my_struct)).priv_field;\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0624]: method `happyfun` is private\n-  --> $DIR/issue-3763.rs:21:18\n+  --> $DIR/issue-3763.rs:23:18\n    |\n LL |     (&my_struct).happyfun();\n    |                  ^^^^^^^^\n \n error[E0624]: method `happyfun` is private\n-  --> $DIR/issue-3763.rs:23:27\n+  --> $DIR/issue-3763.rs:25:27\n    |\n LL |     (Box::new(my_struct)).happyfun();\n    |                           ^^^^^^^^\n \n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n-  --> $DIR/issue-3763.rs:24:16\n+  --> $DIR/issue-3763.rs:26:16\n    |\n LL |     let nope = my_struct.priv_field;\n    |                ^^^^^^^^^^^^^^^^^^^^"}]}