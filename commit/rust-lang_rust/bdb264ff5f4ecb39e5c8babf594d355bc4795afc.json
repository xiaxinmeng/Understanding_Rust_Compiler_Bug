{"sha": "bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYjI2NGZmNWY0ZWNiMzllNWM4YmFiZjU5NGQzNTViYzQ3OTVhZmM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-13T22:23:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-13T22:23:25Z"}, "message": "Rollup merge of #59675 - SimonSapin:stable-alloc, r=alexcrichton\n\nStabilize the `alloc` crate.\n\nThis implements RFC 2480:\n\n* https://github.com/rust-lang/rfcs/pull/2480\n* https://github.com/rust-lang/rfcs/blob/master/text/2480-liballoc.md\n\nCloses https://github.com/rust-lang/rust/issues/27783", "tree": {"sha": "bf10fc6164cf9db8de31cc7587ddf6f03f8f0aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf10fc6164cf9db8de31cc7587ddf6f03f8f0aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsmFeCRBK7hj4Ov3rIwAAdHIIAKRJCgGp3vvEBdawB3BO+lQ8\nWFUPG+8Qo/kM8PUcqts7uSO+tm+bfSW1WxPVTTS9JOCY8LXo0l7Ih2ZHrfNp9KoG\nCbwXH3XbNAY+hm+V1EKTzR0anby1BzfBS7oyGh+JfandTdDFrih312J3iTovz0B8\nNBWGMdl6V1/lsap2xGjdkxN6wNcwzOKK1EmWLRfDfLDPhgTqTiSHsv2sHQF8RlMG\nFnlVgwo/nnMBk9mxxbqGofejVqIaFW95QcBfvKbsKZLQ8nZe53IP+Rym4WPFWYp/\ntXQ7H3sKVWIZkABM+wnH0ACHwcrYUbplOytuMeRBPnkNtFRuSp7ckkdrIlVB6rE=\n=Ns0H\n-----END PGP SIGNATURE-----\n", "payload": "tree bf10fc6164cf9db8de31cc7587ddf6f03f8f0aa7\nparent e4c66afba5d69356879570aeff22db5a38566a86\nparent fc928a18bad0b6aa275a6908351b164f6f4abcd6\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555194205 +0200\ncommitter GitHub <noreply@github.com> 1555194205 +0200\n\nRollup merge of #59675 - SimonSapin:stable-alloc, r=alexcrichton\n\nStabilize the `alloc` crate.\n\nThis implements RFC 2480:\n\n* https://github.com/rust-lang/rfcs/pull/2480\n* https://github.com/rust-lang/rfcs/blob/master/text/2480-liballoc.md\n\nCloses https://github.com/rust-lang/rust/issues/27783\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "html_url": "https://github.com/rust-lang/rust/commit/bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4c66afba5d69356879570aeff22db5a38566a86", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c66afba5d69356879570aeff22db5a38566a86", "html_url": "https://github.com/rust-lang/rust/commit/e4c66afba5d69356879570aeff22db5a38566a86"}, {"sha": "fc928a18bad0b6aa275a6908351b164f6f4abcd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc928a18bad0b6aa275a6908351b164f6f4abcd6", "html_url": "https://github.com/rust-lang/rust/commit/fc928a18bad0b6aa275a6908351b164f6f4abcd6"}], "stats": {"total": 68, "additions": 25, "deletions": 43}, "files": [{"sha": "7f3acc933d413f5809af7ed4e412c1a17262ae7f", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -51,10 +51,7 @@\n //! default global allocator. It is not compatible with the libc allocator API.\n \n #![allow(unused_attributes)]\n-#![unstable(feature = \"alloc\",\n-            reason = \"this library is unlikely to be stabilized in its current \\\n-                      form or name\",\n-            issue = \"27783\")]\n+#![stable(feature = \"alloc\", since = \"1.36.0\")]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n        test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]"}, {"sha": "0534ad3edc79d541ebe1695f81ffaf7ff455d441", "filename": "src/liballoc/prelude/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Fliballoc%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Fliballoc%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fprelude%2Fmod.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -5,7 +5,6 @@\n //!\n //! ```\n //! # #![allow(unused_imports)]\n-//! # #![feature(alloc)]\n //! #![feature(alloc_prelude)]\n //! extern crate alloc;\n //! use alloc::prelude::v1::*;"}, {"sha": "d1fc5ac3b30d44abe088ce33ca3487f5c3cfef21", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -256,7 +256,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(alloc, raw_vec_internals)]\n+    /// # #![feature(raw_vec_internals)]\n     /// # extern crate alloc;\n     /// # use std::ptr;\n     /// # use alloc::raw_vec::RawVec;\n@@ -460,7 +460,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(alloc, raw_vec_internals)]\n+    /// # #![feature(raw_vec_internals)]\n     /// # extern crate alloc;\n     /// # use std::ptr;\n     /// # use alloc::raw_vec::RawVec;"}, {"sha": "cfe317a00f9067fb2a994dcc91bd8ab6435923af", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -14,7 +14,6 @@\n #![deny(rust_2018_idioms)]\n #![cfg_attr(not(stage0), deny(internal))]\n \n-#![feature(alloc)]\n #![feature(core_intrinsics)]\n #![feature(dropck_eyepatch)]\n #![feature(raw_vec_internals)]"}, {"sha": "72ddafb420ce75be56db4c704f75cc0c35e73f73", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -19,8 +19,6 @@\n \n #![deny(rust_2018_idioms)]\n \n-#![feature(allocator_api)]\n-#![feature(alloc)]\n #![feature(core_intrinsics)]\n #![feature(lang_items)]\n #![feature(libc)]"}, {"sha": "ee6ba3f438f15af911a2b7e040c477d94a053cea", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -229,7 +229,6 @@\n #![feature(align_offset)]\n #![feature(alloc_error_handler)]\n #![feature(alloc_layout_extra)]\n-#![feature(alloc)]\n #![feature(allocator_api)]\n #![feature(allocator_internals)]\n #![feature(allow_internal_unsafe)]"}, {"sha": "855b6421cf822bab317ba5719dbabb8ed4ffc77d", "filename": "src/test/run-make-fulldeps/sysroot-crates-are-unstable/test.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-make-fulldeps%2Fsysroot-crates-are-unstable%2Ftest.py", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-make-fulldeps%2Fsysroot-crates-are-unstable%2Ftest.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsysroot-crates-are-unstable%2Ftest.py?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -7,8 +7,8 @@\n \n # This is a whitelist of files which are stable crates or simply are not crates,\n # we don't check for the instability of these crates as they're all stable!\n-STABLE_CRATES = ['std', 'core', 'proc_macro', 'rsbegin.o', 'rsend.o', 'dllcrt2.o', 'crt2.o',\n-                 'clang_rt']\n+STABLE_CRATES = ['std', 'alloc', 'core', 'proc_macro',\n+                 'rsbegin.o', 'rsend.o', 'dllcrt2.o', 'crt2.o', 'clang_rt']\n \n \n def convert_to_string(s):"}, {"sha": "443895f7c48245be7068a0aa57875f0a24b833fd", "filename": "src/test/run-pass/array-slice-vec/vec-macro-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Farray-slice-vec%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Farray-slice-vec%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farray-slice-vec%2Fvec-macro-no-std.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-emscripten no no_std executables\n \n-#![feature(lang_items, start, rustc_private, alloc)]\n+#![feature(lang_items, start, rustc_private)]\n #![no_std]\n \n extern crate std as other;"}, {"sha": "f0d43404b004617ad11bdb9dc30360bcc3f33894", "filename": "src/test/run-pass/extern/extern-prelude-core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-core.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-#![feature(extern_prelude, lang_items, start, alloc)]\n+#![feature(extern_prelude, lang_items, start)]\n #![no_std]\n \n extern crate std as other;"}, {"sha": "8d2a0b7425f2a9ed4e1a301d0f61492b17fe9007", "filename": "src/test/run-pass/extern/extern-prelude-core.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-core.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-core.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-core.stderr?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,7 +1,7 @@\n warning: the feature `extern_prelude` has been stable since 1.30.0 and no longer requires an attribute to enable\n   --> $DIR/extern-prelude-core.rs:2:12\n    |\n-LL | #![feature(extern_prelude, lang_items, start, alloc)]\n+LL | #![feature(extern_prelude, lang_items, start)]\n    |            ^^^^^^^^^^^^^^\n    |\n    = note: #[warn(stable_features)] on by default"}, {"sha": "65a33c5f16f1d35c5d533de8d76b58a967a89598", "filename": "src/test/run-pass/for-loop-while/for-loop-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Ffor-loop-while%2Ffor-loop-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Ffor-loop-while%2Ffor-loop-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-while%2Ffor-loop-no-std.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n #![allow(unused_imports)]\n-#![feature(lang_items, start, alloc)]\n+#![feature(lang_items, start)]\n #![no_std]\n \n extern crate std as other;"}, {"sha": "32f7a4a07c4992e624f40411b59ce42a4bae569c", "filename": "src/test/run-pass/format-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-std.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,6 +1,6 @@\n // ignore-emscripten no no_std executables\n \n-#![feature(lang_items, start, alloc)]\n+#![feature(lang_items, start)]\n #![no_std]\n \n extern crate std as other;"}, {"sha": "980fd97e2c678f90954c8c94de8ecf4eb7d99853", "filename": "src/test/run-pass/structs-enums/unit-like-struct-drop-run.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fstructs-enums%2Funit-like-struct-drop-run.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Frun-pass%2Fstructs-enums%2Funit-like-struct-drop-run.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstructs-enums%2Funit-like-struct-drop-run.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -3,9 +3,6 @@\n \n // Make sure the destructor is run for unit-like structs.\n \n-\n-#![feature(alloc)]\n-\n use std::thread;\n \n struct Foo;"}, {"sha": "7a8d86b8da18cf08df1f0225a654fd40851a15d6", "filename": "src/test/ui/allocator-submodule.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fallocator-submodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fallocator-submodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fallocator-submodule.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,8 +1,6 @@\n // Tests that it is possible to create a global allocator in a submodule, rather than in the crate\n // root.\n \n-#![feature(alloc, allocator_api, global_allocator)]\n-\n extern crate alloc;\n \n use std::{"}, {"sha": "91c7c0f6b8e24fd3f8035c093b706d0011f6a284", "filename": "src/test/ui/allocator-submodule.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fallocator-submodule.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fallocator-submodule.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fallocator-submodule.stderr?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,5 +1,5 @@\n error: `global_allocator` cannot be used in submodules\n-  --> $DIR/allocator-submodule.rs:27:5\n+  --> $DIR/allocator-submodule.rs:25:5\n    |\n LL |     static MY_HEAP: MyAlloc = MyAlloc;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d166aff56579201bc86a40c047b8a6636fb510eb", "filename": "src/test/ui/error-codes/E0254.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0254.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0254.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0254.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,4 +1,3 @@\n-#![feature(alloc)]\n #![allow(unused_extern_crates, non_camel_case_types)]\n \n extern crate alloc;"}, {"sha": "10456fd5a5dc1e67ace3e36c3793d63b6d640361", "filename": "src/test/ui/error-codes/E0254.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,5 +1,5 @@\n error[E0254]: the name `alloc` is defined multiple times\n-  --> $DIR/E0254.rs:12:5\n+  --> $DIR/E0254.rs:11:5\n    |\n LL | extern crate alloc;\n    | ------------------- previous import of the extern crate `alloc` here"}, {"sha": "c83561be9c6a5b509cb8a37449924ab240f4cfe6", "filename": "src/test/ui/error-codes/E0259.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0259.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,4 +1,4 @@\n-#![feature(alloc, rustc_private)]\n+#![feature(rustc_private)]\n #![allow(unused_extern_crates)]\n \n extern crate alloc;"}, {"sha": "73b8934159fcf82384117dcc8ac29f42a7c3d4a0", "filename": "src/test/ui/error-codes/E0260.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0260.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,4 +1,3 @@\n-#![feature(alloc)]\n #![allow(unused_extern_crates)]\n \n extern crate alloc;"}, {"sha": "7d0b3022914d82a887b6d649b4477b526fac79cd", "filename": "src/test/ui/error-codes/E0260.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,5 +1,5 @@\n error[E0260]: the name `alloc` is defined multiple times\n-  --> $DIR/E0260.rs:6:1\n+  --> $DIR/E0260.rs:5:1\n    |\n LL | extern crate alloc;\n    | ------------------- previous import of the extern crate `alloc` here"}, {"sha": "ae0c067bb5f3ebd5c4ca44d2bf8eeed420ec3d36", "filename": "src/test/ui/missing/missing-alloc_error_handler.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -3,7 +3,7 @@\n \n #![no_std]\n #![crate_type = \"staticlib\"]\n-#![feature(panic_handler, alloc_error_handler, alloc)]\n+#![feature(panic_handler, alloc_error_handler)]\n \n #[panic_handler]\n fn panic(_: &core::panic::PanicInfo) -> ! {"}, {"sha": "6d867e2e8b48e12b980e564c72892b80f5fc37ef", "filename": "src/test/ui/missing/missing-allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fmissing%2Fmissing-allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fmissing%2Fmissing-allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing%2Fmissing-allocator.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -3,7 +3,7 @@\n \n #![no_std]\n #![crate_type = \"staticlib\"]\n-#![feature(panic_handler, alloc_error_handler, alloc)]\n+#![feature(panic_handler, alloc_error_handler)]\n \n #[panic_handler]\n fn panic(_: &core::panic::PanicInfo) -> ! {"}, {"sha": "a9423830d9040509d76ad774f9fb4948ad2a59dc", "filename": "src/test/ui/resolve_self_super_hint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,4 +1,3 @@\n-#![feature(alloc)]\n #![allow(unused_extern_crates)]\n \n mod a {"}, {"sha": "14cdae97d14f3484077694b1c25e53c5a0785eb9", "filename": "src/test/ui/resolve_self_super_hint.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,17 +1,17 @@\n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:6:9\n+  --> $DIR/resolve_self_super_hint.rs:5:9\n    |\n LL |     use alloc::HashMap;\n    |         ^^^^^ help: a similar path exists: `self::alloc`\n \n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:11:13\n+  --> $DIR/resolve_self_super_hint.rs:10:13\n    |\n LL |         use alloc::HashMap;\n    |             ^^^^^ help: a similar path exists: `super::alloc`\n \n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:16:17\n+  --> $DIR/resolve_self_super_hint.rs:15:17\n    |\n LL |             use alloc::HashMap;\n    |                 ^^^^^\n@@ -20,7 +20,7 @@ LL |             use alloc::HashMap;\n    |                 help: a similar path exists: `a::alloc`\n \n error[E0432]: unresolved import `alloc`\n-  --> $DIR/resolve_self_super_hint.rs:21:21\n+  --> $DIR/resolve_self_super_hint.rs:20:21\n    |\n LL |                 use alloc::HashMap;\n    |                     ^^^^^"}, {"sha": "17449caf84fb41ea835e42a5c56b9378ca93d0f9", "filename": "src/test/ui/rust-2018/remove-extern-crate.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.fixed?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -4,7 +4,6 @@\n // aux-build:remove-extern-crate.rs\n // compile-flags:--extern remove_extern_crate\n \n-#![feature(alloc)]\n #![warn(rust_2018_idioms)]\n \n "}, {"sha": "fb2217df0005d4e8c7e250a54cea76473d8ea222", "filename": "src/test/ui/rust-2018/remove-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -4,7 +4,6 @@\n // aux-build:remove-extern-crate.rs\n // compile-flags:--extern remove_extern_crate\n \n-#![feature(alloc)]\n #![warn(rust_2018_idioms)]\n \n extern crate core;"}, {"sha": "549693201b70346a426bb61cb7a10723abcf3716", "filename": "src/test/ui/rust-2018/remove-extern-crate.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fremove-extern-crate.stderr?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,24 +1,24 @@\n warning: unused extern crate\n-  --> $DIR/remove-extern-crate.rs:10:1\n+  --> $DIR/remove-extern-crate.rs:9:1\n    |\n LL | extern crate core;\n    | ^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n-  --> $DIR/remove-extern-crate.rs:8:9\n+  --> $DIR/remove-extern-crate.rs:7:9\n    |\n LL | #![warn(rust_2018_idioms)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: #[warn(unused_extern_crates)] implied by #[warn(rust_2018_idioms)]\n \n warning: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/remove-extern-crate.rs:11:1\n+  --> $DIR/remove-extern-crate.rs:10:1\n    |\n LL | extern crate core as another_name;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `use`\n \n warning: `extern crate` is not idiomatic in the new edition\n-  --> $DIR/remove-extern-crate.rs:29:5\n+  --> $DIR/remove-extern-crate.rs:28:5\n    |\n LL |     extern crate core;\n    |     ^^^^^^^^^^^^^^^^^^ help: convert it to a `use`"}, {"sha": "67eaaf4b6c21b65b5868da5b4cfc288bbacb2b8e", "filename": "src/test/ui/unnecessary-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Funnecessary-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdb264ff5f4ecb39e5c8babf594d355bc4795afc/src%2Ftest%2Fui%2Funnecessary-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funnecessary-extern-crate.rs?ref=bdb264ff5f4ecb39e5c8babf594d355bc4795afc", "patch": "@@ -1,7 +1,7 @@\n // edition:2018\n \n #![deny(unused_extern_crates)]\n-#![feature(alloc, test, rustc_private, crate_visibility_modifier)]\n+#![feature(test, rustc_private, crate_visibility_modifier)]\n \n extern crate libc;\n //~^ ERROR unused extern crate"}]}