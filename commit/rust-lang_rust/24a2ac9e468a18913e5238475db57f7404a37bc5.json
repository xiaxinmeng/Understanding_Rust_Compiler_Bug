{"sha": "24a2ac9e468a18913e5238475db57f7404a37bc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YTJhYzllNDY4YTE4OTEzZTUyMzg0NzVkYjU3Zjc0MDRhMzdiYzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-14T05:10:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-30T08:11:59Z"}, "message": "add_validation: handle drop", "tree": {"sha": "0bc3cc4b178bf9c80f4a58c20a8e0e44874ccbbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bc3cc4b178bf9c80f4a58c20a8e0e44874ccbbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24a2ac9e468a18913e5238475db57f7404a37bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24a2ac9e468a18913e5238475db57f7404a37bc5", "html_url": "https://github.com/rust-lang/rust/commit/24a2ac9e468a18913e5238475db57f7404a37bc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24a2ac9e468a18913e5238475db57f7404a37bc5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82786b2fe12fcc0fc9d5b2e9d069460e05310787", "url": "https://api.github.com/repos/rust-lang/rust/commits/82786b2fe12fcc0fc9d5b2e9d069460e05310787", "html_url": "https://github.com/rust-lang/rust/commit/82786b2fe12fcc0fc9d5b2e9d069460e05310787"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "dacc267612ffda50c85dae9ea40ffaa624fe386a", "filename": "src/librustc_mir/transform/add_validation.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/24a2ac9e468a18913e5238475db57f7404a37bc5/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a2ac9e468a18913e5238475db57f7404a37bc5/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs?ref=24a2ac9e468a18913e5238475db57f7404a37bc5", "patch": "@@ -70,9 +70,19 @@ impl MirPass for AddValidation {\n                         returns.push((source_info, destination.0.clone(), destination.1));\n                     }\n                 }\n+                Some(Terminator { kind: TerminatorKind::Drop { location: ref lval, .. }, source_info }) |\n+                Some(Terminator { kind: TerminatorKind::DropAndReplace { location: ref lval, .. }, source_info }) => {\n+                    // Before the call: Release all arguments\n+                    let ty = lval.ty(&local_decls, tcx).to_ty(tcx);\n+                    let release_stmt = Statement {\n+                        source_info,\n+                        kind: StatementKind::Validate(ValidationOp::Release, vec![(ty, lval.clone())])\n+                    };\n+                    block_data.statements.push(release_stmt);\n+                    // drop doesn't return anything, so we need no acquire.\n+                }\n                 _ => {\n                     // Not a block ending in a Call -> ignore.\n-                    // TODO: Handle drop.\n                 }\n             }\n         }\n@@ -108,7 +118,6 @@ impl MirPass for AddValidation {\n                 block_data.statements.insert(i+1, acquire_stmt);\n \n                 // The source is released until the region of the borrow ends.\n-                // FIXME: We have to check whether the source path was writable.\n                 let src_ty = src_lval.ty(&local_decls, tcx).to_ty(tcx);\n                 let op = match re {\n                     &RegionKind::ReScope(ce) => ValidationOp::Suspend(ce),"}]}