{"sha": "a1b2d258100477ec9d6e6f29fec767a91076cd00", "node_id": "C_kwDOAAsO6NoAKGExYjJkMjU4MTAwNDc3ZWM5ZDZlNmYyOWZlYzc2N2E5MTA3NmNkMDA", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-12-01T08:44:30Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-12-01T08:44:30Z"}, "message": "hir: resolve assoc trait type", "tree": {"sha": "9509bca283fe42b20e4e0f8ddf948df5725c9b2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9509bca283fe42b20e4e0f8ddf948df5725c9b2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1b2d258100477ec9d6e6f29fec767a91076cd00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b2d258100477ec9d6e6f29fec767a91076cd00", "html_url": "https://github.com/rust-lang/rust/commit/a1b2d258100477ec9d6e6f29fec767a91076cd00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1b2d258100477ec9d6e6f29fec767a91076cd00/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0db312b543343f1c208b6be21a7a001cec7dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0db312b543343f1c208b6be21a7a001cec7dd6", "html_url": "https://github.com/rust-lang/rust/commit/2d0db312b543343f1c208b6be21a7a001cec7dd6"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "e249139836d70c6a509ee653fb3b1cd381331249", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a1b2d258100477ec9d6e6f29fec767a91076cd00/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b2d258100477ec9d6e6f29fec767a91076cd00/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=a1b2d258100477ec9d6e6f29fec767a91076cd00", "patch": "@@ -15,7 +15,7 @@ use hir_def::{\n     },\n     expr::{ExprId, Pat, PatId},\n     path::{ModPath, Path, PathKind},\n-    resolver::{resolver_for_scope, Resolver, TypeNs, ValueNs},\n+    resolver::{resolver_for_scope, HasResolver, Resolver, TypeNs, ValueNs},\n     AsMacroCall, DefWithBodyId, FieldId, FunctionId, LocalFieldId, VariantId,\n };\n use hir_expand::{hygiene::Hygiene, name::AsName, HirFileId, InFile};\n@@ -544,6 +544,17 @@ fn resolve_hir_path_(\n                 }\n             }\n         }?;\n+\n+        if let (Some(_), TypeNs::TraitId(trait_id)) = (&unresolved, &ty) {\n+            let resolver = trait_id.resolver(db.upcast());\n+            if let Some(module_def_id) = resolver\n+                .resolve_module_path_in_trait_assoc_items(db.upcast(), path.mod_path())\n+                .and_then(|ns| ns.take_types())\n+            {\n+                return Some(PathResolution::Def(module_def_id.into()));\n+            }\n+        }\n+\n         let res = match ty {\n             TypeNs::SelfType(it) => PathResolution::SelfType(it.into()),\n             TypeNs::GenericParam(id) => PathResolution::TypeParam(TypeParam { id }),"}]}