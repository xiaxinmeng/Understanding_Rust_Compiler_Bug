{"sha": "25fdea009ef0db01134d17cf97cd09b507beca99", "node_id": "C_kwDOAAsO6NoAKDI1ZmRlYTAwOWVmMGRiMDExMzRkMTdjZjk3Y2QwOWI1MDdiZWNhOTk", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-04-03T15:11:30Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-04-06T04:55:58Z"}, "message": "fix errors", "tree": {"sha": "a48b7bad24ef7e044e000254c25f8763100fe677", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a48b7bad24ef7e044e000254c25f8763100fe677"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25fdea009ef0db01134d17cf97cd09b507beca99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25fdea009ef0db01134d17cf97cd09b507beca99", "html_url": "https://github.com/rust-lang/rust/commit/25fdea009ef0db01134d17cf97cd09b507beca99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25fdea009ef0db01134d17cf97cd09b507beca99/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc01b4b63c5336a0f296b049525e18798b95b374", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc01b4b63c5336a0f296b049525e18798b95b374", "html_url": "https://github.com/rust-lang/rust/commit/fc01b4b63c5336a0f296b049525e18798b95b374"}], "stats": {"total": 218, "additions": 113, "deletions": 105}, "files": [{"sha": "62d49c1c64e27f3787dfca6ea5a03d47557af7d8", "filename": "compiler/rustc_macros/src/diagnostics/subdiagnostic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25fdea009ef0db01134d17cf97cd09b507beca99/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fsubdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fdea009ef0db01134d17cf97cd09b507beca99/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fsubdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fsubdiagnostic.rs?ref=25fdea009ef0db01134d17cf97cd09b507beca99", "patch": "@@ -422,6 +422,7 @@ impl<'parent, 'a> SubdiagnosticDeriveVariantBuilder<'parent, 'a> {\n                 list.parse_nested_meta(|nested| {\n                     if nested.path.is_ident(\"code\") {\n                         let code_field = new_code_ident();\n+                        let span = nested.path.span().unwrap();\n                         let formatting_init = build_suggestion_code(\n                             &code_field,\n                             nested,"}, {"sha": "838347ecb61af963ba73b9bf78174bd3447b11ae", "filename": "compiler/rustc_macros/src/diagnostics/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25fdea009ef0db01134d17cf97cd09b507beca99/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fdea009ef0db01134d17cf97cd09b507beca99/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Futils.rs?ref=25fdea009ef0db01134d17cf97cd09b507beca99", "patch": "@@ -727,7 +727,7 @@ impl SubdiagnosticKind {\n                         fields,\n                         AllowMultipleAlternatives::Yes,\n                     );\n-                    code.set_once(code_init, span);\n+                    code.set_once(code_init, path_span);\n                 }\n                 (\n                     \"applicability\","}, {"sha": "cd14c7496b37deb1ffbb9aa87618ede10e91547b", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/25fdea009ef0db01134d17cf97cd09b507beca99/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25fdea009ef0db01134d17cf97cd09b507beca99/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr?ref=25fdea009ef0db01134d17cf97cd09b507beca99", "patch": "@@ -435,16 +435,16 @@ LL | | struct LintAttributeOnLintDiag {}\n    = help: specify the slug as the first argument to the attribute, such as `#[diag(compiletest_example)]`\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:608:5\n+  --> $DIR/diagnostic-derive.rs:608:53\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", code = \",,,\")]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                                     ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:608:5\n+  --> $DIR/diagnostic-derive.rs:608:39\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", code = \",,,\")]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                       ^^^^\n \n error: wrong types for suggestion\n   --> $DIR/diagnostic-derive.rs:617:24"}, {"sha": "1d928ca93f9cb24a8e121b32c088e9faddbc323d", "filename": "tests/ui-fulldeps/session-diagnostic/subdiagnostic-derive.rs", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/25fdea009ef0db01134d17cf97cd09b507beca99/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25fdea009ef0db01134d17cf97cd09b507beca99/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs?ref=25fdea009ef0db01134d17cf97cd09b507beca99", "patch": "@@ -82,7 +82,7 @@ struct F {\n \n #[derive(Subdiagnostic)]\n #[label(bug = \"...\")]\n-//~^ ERROR `#[label(bug = ...)]` is not a valid attribute\n+//~^ ERROR invalid nested attribute\n //~| ERROR diagnostic slug must be first argument\n struct G {\n     #[primary_span]\n@@ -92,8 +92,7 @@ struct G {\n \n #[derive(Subdiagnostic)]\n #[label(\"...\")]\n-//~^ ERROR `#[label(\"...\")]` is not a valid attribute\n-//~| ERROR diagnostic slug must be first argument\n+//~^ ERROR unexpected literal in nested attribute, expected ident\n struct H {\n     #[primary_span]\n     span: Span,\n@@ -102,7 +101,7 @@ struct H {\n \n #[derive(Subdiagnostic)]\n #[label(slug = 4)]\n-//~^ ERROR `#[label(slug = ...)]` is not a valid attribute\n+//~^ ERROR invalid nested attribute\n //~| ERROR diagnostic slug must be first argument\n struct J {\n     #[primary_span]\n@@ -112,7 +111,7 @@ struct J {\n \n #[derive(Subdiagnostic)]\n #[label(slug(\"...\"))]\n-//~^ ERROR `#[label(slug(...))]` is not a valid attribute\n+//~^ ERROR invalid nested attribute\n //~| ERROR diagnostic slug must be first argument\n struct K {\n     #[primary_span]\n@@ -132,7 +131,7 @@ struct L {\n \n #[derive(Subdiagnostic)]\n #[label()]\n-//~^ ERROR diagnostic slug must be first argument of a `#[label(...)]` attribute\n+//~^ ERROR unexpected end of input, unexpected token in nested attribute, expected ident\n struct M {\n     #[primary_span]\n     span: Span,\n@@ -141,7 +140,7 @@ struct M {\n \n #[derive(Subdiagnostic)]\n #[label(no_crate_example, code = \"...\")]\n-//~^ ERROR `#[label(code = ...)]` is not a valid attribute\n+//~^ ERROR invalid nested attribute\n struct N {\n     #[primary_span]\n     span: Span,\n@@ -150,7 +149,7 @@ struct N {\n \n #[derive(Subdiagnostic)]\n #[label(no_crate_example, applicability = \"machine-applicable\")]\n-//~^ ERROR `#[label(applicability = ...)]` is not a valid attribute\n+//~^ ERROR invalid nested attribute\n struct O {\n     #[primary_span]\n     span: Span,\n@@ -222,7 +221,7 @@ enum T {\n enum U {\n     #[label(code = \"...\")]\n     //~^ ERROR diagnostic slug must be first argument of a `#[label(...)]` attribute\n-    //~| ERROR `#[label(code = ...)]` is not a valid attribute\n+    //~| ERROR invalid nested attribute\n     A {\n         #[primary_span]\n         span: Span,\n@@ -323,7 +322,7 @@ struct AD {\n \n #[derive(Subdiagnostic)]\n #[label(no_crate_example, no_crate::example)]\n-//~^ ERROR `#[label(no_crate::example)]` is not a valid attribute\n+//~^ ERROR a diagnostic slug must be the first argument to the attribute\n struct AE {\n     #[primary_span]\n     span: Span,\n@@ -537,7 +536,7 @@ struct BA {\n #[derive(Subdiagnostic)]\n #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n //~^ ERROR multipart suggestion without any `#[suggestion_part(...)]` fields\n-//~| ERROR `#[multipart_suggestion(code = ...)]` is not a valid attribute\n+//~| ERROR invalid nested attribute\n struct BBa {\n     var: String,\n }\n@@ -554,7 +553,7 @@ struct BBb {\n #[multipart_suggestion(no_crate_example, applicability = \"machine-applicable\")]\n struct BBc {\n     #[suggestion_part()]\n-    //~^ ERROR `#[suggestion_part(...)]` attribute without `code = \"...\"`\n+    //~^ ERROR unexpected end of input, unexpected token in nested attribute, expected ident\n     span1: Span,\n }\n \n@@ -574,10 +573,11 @@ struct BD {\n     //~^ ERROR `#[suggestion_part(...)]` attribute without `code = \"...\"`\n     span1: Span,\n     #[suggestion_part()]\n-    //~^ ERROR `#[suggestion_part(...)]` attribute without `code = \"...\"`\n+    //~^ ERROR unexpected end of input, unexpected token in nested attribute, expected ident\n     span2: Span,\n     #[suggestion_part(foo = \"bar\")]\n-    //~^ ERROR `#[suggestion_part(foo = ...)]` is not a valid attribute\n+    //~^ ERROR `code` is the only valid nested attribute\n+    //~| ERROR expected `,`\n     span4: Span,\n     #[suggestion_part(code = \"...\")]\n     //~^ ERROR the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n@@ -669,6 +669,7 @@ enum BL {\n struct BM {\n     #[suggestion_part(code(\"foo\"))]\n     //~^ ERROR expected exactly one string literal for `code = ...`\n+    //~| ERROR unexpected token\n     span: Span,\n     r#type: String,\n }\n@@ -678,6 +679,7 @@ struct BM {\n struct BN {\n     #[suggestion_part(code(\"foo\", \"bar\"))]\n     //~^ ERROR expected exactly one string literal for `code = ...`\n+    //~| ERROR unexpected token\n     span: Span,\n     r#type: String,\n }\n@@ -687,6 +689,7 @@ struct BN {\n struct BO {\n     #[suggestion_part(code(3))]\n     //~^ ERROR expected exactly one string literal for `code = ...`\n+    //~| ERROR unexpected token\n     span: Span,\n     r#type: String,\n }\n@@ -701,10 +704,13 @@ struct BP {\n }\n \n #[derive(Subdiagnostic)]\n+//~^ ERROR cannot find value `__code_29` in this scope\n+//~| NOTE in this expansion\n+//~| NOTE not found in this scope\n #[multipart_suggestion(no_crate_example)]\n struct BQ {\n     #[suggestion_part(code = 3)]\n-    //~^ ERROR `code = \"...\"`/`code(...)` must contain only string literals\n+    //~^ ERROR expected string literal\n     span: Span,\n     r#type: String,\n }\n@@ -779,23 +785,24 @@ struct SuggestionStyleInvalid1 {\n \n #[derive(Subdiagnostic)]\n #[suggestion(no_crate_example, code = \"\", style = 42)]\n-//~^ ERROR `#[suggestion(style = ...)]` is not a valid attribute\n+//~^ ERROR expected `= \"xxx\"`\n struct SuggestionStyleInvalid2 {\n     #[primary_span]\n     sub: Span,\n }\n \n #[derive(Subdiagnostic)]\n #[suggestion(no_crate_example, code = \"\", style)]\n-//~^ ERROR `#[suggestion(style)]` is not a valid attribute\n+//~^ ERROR a diagnostic slug must be the first argument to the attribute\n struct SuggestionStyleInvalid3 {\n     #[primary_span]\n     sub: Span,\n }\n \n #[derive(Subdiagnostic)]\n #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n-//~^ ERROR `#[suggestion(style(...))]` is not a valid attribute\n+//~^ ERROR expected `= \"xxx\"`\n+//~| ERROr expected `,`\n struct SuggestionStyleInvalid4 {\n     #[primary_span]\n     sub: Span,"}, {"sha": "4211b91f04a0ed0ea14aeeadc8963966770f70d1", "filename": "tests/ui-fulldeps/session-diagnostic/subdiagnostic-derive.stderr", "status": "modified", "additions": 82, "deletions": 82, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/25fdea009ef0db01134d17cf97cd09b507beca99/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25fdea009ef0db01134d17cf97cd09b507beca99/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr?ref=25fdea009ef0db01134d17cf97cd09b507beca99", "patch": "@@ -45,97 +45,97 @@ LL | #[label(\"...\")]\n    |         ^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:104:9\n+  --> $DIR/subdiagnostic-derive.rs:103:9\n    |\n LL | #[label(slug = 4)]\n    |         ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:104:1\n+  --> $DIR/subdiagnostic-derive.rs:103:1\n    |\n LL | #[label(slug = 4)]\n    | ^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:114:9\n+  --> $DIR/subdiagnostic-derive.rs:113:9\n    |\n LL | #[label(slug(\"...\"))]\n    |         ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:114:1\n+  --> $DIR/subdiagnostic-derive.rs:113:1\n    |\n LL | #[label(slug(\"...\"))]\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:134:9\n+  --> $DIR/subdiagnostic-derive.rs:133:9\n    |\n LL | #[label()]\n    |         ^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:143:27\n+  --> $DIR/subdiagnostic-derive.rs:142:27\n    |\n LL | #[label(no_crate_example, code = \"...\")]\n    |                           ^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:152:27\n+  --> $DIR/subdiagnostic-derive.rs:151:27\n    |\n LL | #[label(no_crate_example, applicability = \"machine-applicable\")]\n    |                           ^^^^^^^^^^^^^\n \n error: unsupported type attribute for subdiagnostic enum\n-  --> $DIR/subdiagnostic-derive.rs:161:1\n+  --> $DIR/subdiagnostic-derive.rs:160:1\n    |\n LL | #[foo]\n    | ^^^^^^\n \n error: `#[bar]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:175:5\n+  --> $DIR/subdiagnostic-derive.rs:174:5\n    |\n LL |     #[bar]\n    |     ^^^^^^\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:187:5\n+  --> $DIR/subdiagnostic-derive.rs:186:5\n    |\n LL |     #[bar = \"...\"]\n    |     ^^^^^^^^^^^^^^\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:199:5\n+  --> $DIR/subdiagnostic-derive.rs:198:5\n    |\n LL |     #[bar = 4]\n    |     ^^^^^^^^^^\n \n error: `#[bar(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:211:5\n+  --> $DIR/subdiagnostic-derive.rs:210:5\n    |\n LL |     #[bar(\"...\")]\n    |     ^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:223:13\n+  --> $DIR/subdiagnostic-derive.rs:222:13\n    |\n LL |     #[label(code = \"...\")]\n    |             ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:223:5\n+  --> $DIR/subdiagnostic-derive.rs:222:5\n    |\n LL |     #[label(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:252:5\n+  --> $DIR/subdiagnostic-derive.rs:251:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: label without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:249:1\n+  --> $DIR/subdiagnostic-derive.rs:248:1\n    |\n LL | / #[label(no_crate_example)]\n LL | |\n@@ -147,35 +147,35 @@ LL | | }\n    | |_^\n \n error: `#[applicability]` is only valid on suggestions\n-  --> $DIR/subdiagnostic-derive.rs:262:5\n+  --> $DIR/subdiagnostic-derive.rs:261:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: `#[bar]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:272:5\n+  --> $DIR/subdiagnostic-derive.rs:271:5\n    |\n LL |     #[bar]\n    |     ^^^^^^\n    |\n    = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:283:5\n+  --> $DIR/subdiagnostic-derive.rs:282:5\n    |\n LL |     #[bar = \"...\"]\n    |     ^^^^^^^^^^^^^^\n \n error: `#[bar(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:294:5\n+  --> $DIR/subdiagnostic-derive.rs:293:5\n    |\n LL |     #[bar(\"...\")]\n    |     ^^^^^^^^^^^^^\n    |\n    = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes\n \n error: unexpected unsupported untagged union\n-  --> $DIR/subdiagnostic-derive.rs:310:1\n+  --> $DIR/subdiagnostic-derive.rs:309:1\n    |\n LL | / union AC {\n LL | |\n@@ -185,73 +185,73 @@ LL | | }\n    | |_^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/subdiagnostic-derive.rs:325:44\n+  --> $DIR/subdiagnostic-derive.rs:324:44\n    |\n LL | #[label(no_crate_example, no_crate::example)]\n    |                                            ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:338:5\n+  --> $DIR/subdiagnostic-derive.rs:337:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:335:5\n+  --> $DIR/subdiagnostic-derive.rs:334:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: subdiagnostic kind not specified\n-  --> $DIR/subdiagnostic-derive.rs:344:8\n+  --> $DIR/subdiagnostic-derive.rs:343:8\n    |\n LL | struct AG {\n    |        ^^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:381:1\n+  --> $DIR/subdiagnostic-derive.rs:380:46\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", code = \"...\")]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                              ^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:381:1\n+  --> $DIR/subdiagnostic-derive.rs:380:32\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", code = \"...\")]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                ^^^^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:399:5\n+  --> $DIR/subdiagnostic-derive.rs:398:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:396:5\n+  --> $DIR/subdiagnostic-derive.rs:395:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: the `#[applicability]` attribute can only be applied to fields of type `Applicability`\n-  --> $DIR/subdiagnostic-derive.rs:409:5\n+  --> $DIR/subdiagnostic-derive.rs:408:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:422:1\n+  --> $DIR/subdiagnostic-derive.rs:421:1\n    |\n LL | #[suggestion(no_crate_example)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid applicability\n-  --> $DIR/subdiagnostic-derive.rs:432:62\n+  --> $DIR/subdiagnostic-derive.rs:431:62\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", applicability = \"foo\")]\n    |                                                              ^^^^^\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:450:1\n+  --> $DIR/subdiagnostic-derive.rs:449:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"...\")]\n LL | |\n@@ -261,41 +261,41 @@ LL | | }\n    | |_^\n \n error: unsupported type attribute for subdiagnostic enum\n-  --> $DIR/subdiagnostic-derive.rs:464:1\n+  --> $DIR/subdiagnostic-derive.rs:463:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n \n error: `var` doesn't refer to a field on this type\n-  --> $DIR/subdiagnostic-derive.rs:484:39\n+  --> $DIR/subdiagnostic-derive.rs:483:39\n    |\n LL | #[suggestion(no_crate_example, code = \"{var}\", applicability = \"machine-applicable\")]\n    |                                       ^^^^^^^\n \n error: `var` doesn't refer to a field on this type\n-  --> $DIR/subdiagnostic-derive.rs:503:43\n+  --> $DIR/subdiagnostic-derive.rs:502:43\n    |\n LL |     #[suggestion(no_crate_example, code = \"{var}\", applicability = \"machine-applicable\")]\n    |                                           ^^^^^^^\n \n error: `#[suggestion_part]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:526:5\n+  --> $DIR/subdiagnostic-derive.rs:525:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[suggestion_part(...)]` is only valid in multipart suggestions, use `#[primary_span]` instead\n \n error: `#[suggestion_part(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:529:5\n+  --> $DIR/subdiagnostic-derive.rs:528:5\n    |\n LL |     #[suggestion_part(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[suggestion_part(...)]` is only valid in multipart suggestions\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:523:1\n+  --> $DIR/subdiagnostic-derive.rs:522:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"...\")]\n LL | |\n@@ -307,15 +307,15 @@ LL | | }\n    | |_^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:538:42\n+  --> $DIR/subdiagnostic-derive.rs:537:42\n    |\n LL | #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n    |                                          ^^^^\n    |\n    = help: only `style` and `applicability` are valid nested attributes\n \n error: multipart suggestion without any `#[suggestion_part(...)]` fields\n-  --> $DIR/subdiagnostic-derive.rs:538:1\n+  --> $DIR/subdiagnostic-derive.rs:537:1\n    |\n LL | / #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n LL | |\n@@ -326,27 +326,27 @@ LL | | }\n    | |_^\n \n error: `#[suggestion_part(...)]` attribute without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:548:5\n+  --> $DIR/subdiagnostic-derive.rs:547:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:556:23\n+  --> $DIR/subdiagnostic-derive.rs:555:23\n    |\n LL |     #[suggestion_part()]\n    |                       ^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:565:5\n+  --> $DIR/subdiagnostic-derive.rs:564:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: multipart suggestions use one or more `#[suggestion_part]`s rather than one `#[primary_span]`\n \n error: multipart suggestion without any `#[suggestion_part(...)]` fields\n-  --> $DIR/subdiagnostic-derive.rs:562:1\n+  --> $DIR/subdiagnostic-derive.rs:561:1\n    |\n LL | / #[multipart_suggestion(no_crate_example)]\n LL | |\n@@ -358,13 +358,13 @@ LL | | }\n    | |_^\n \n error: `#[suggestion_part(...)]` attribute without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:573:5\n+  --> $DIR/subdiagnostic-derive.rs:572:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: `code` is the only valid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:579:23\n+  --> $DIR/subdiagnostic-derive.rs:578:23\n    |\n LL |     #[suggestion_part(foo = \"bar\")]\n    |                       ^^^\n@@ -382,28 +382,28 @@ LL |     #[suggestion_part()]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:576:23\n+  --> $DIR/subdiagnostic-derive.rs:575:23\n    |\n LL |     #[suggestion_part()]\n    |                       ^\n \n error: expected `,`\n-  --> $DIR/subdiagnostic-derive.rs:579:27\n+  --> $DIR/subdiagnostic-derive.rs:578:27\n    |\n LL |     #[suggestion_part(foo = \"bar\")]\n    |                           ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:593:5\n+  --> $DIR/subdiagnostic-derive.rs:593:37\n    |\n LL |     #[suggestion_part(code = \"...\", code = \",,,\")]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                     ^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:593:5\n+  --> $DIR/subdiagnostic-derive.rs:593:23\n    |\n LL |     #[suggestion_part(code = \"...\", code = \",,,\")]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                       ^^^^\n \n error: `#[applicability]` has no effect if all `#[suggestion]`/`#[multipart_suggestion]` attributes have a static `applicability = \"...\"`\n   --> $DIR/subdiagnostic-derive.rs:622:5\n@@ -424,103 +424,103 @@ LL |     #[suggestion_part(code(\"foo\"))]\n    |                            ^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:679:41\n+  --> $DIR/subdiagnostic-derive.rs:680:41\n    |\n LL |     #[suggestion_part(code(\"foo\", \"bar\"))]\n    |                                         ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:679:28\n+  --> $DIR/subdiagnostic-derive.rs:680:28\n    |\n LL |     #[suggestion_part(code(\"foo\", \"bar\"))]\n    |                            ^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:688:30\n+  --> $DIR/subdiagnostic-derive.rs:690:30\n    |\n LL |     #[suggestion_part(code(3))]\n    |                              ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:688:28\n+  --> $DIR/subdiagnostic-derive.rs:690:28\n    |\n LL |     #[suggestion_part(code(3))]\n    |                            ^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:697:29\n+  --> $DIR/subdiagnostic-derive.rs:700:29\n    |\n LL |     #[suggestion_part(code())]\n    |                             ^\n \n error: expected string literal\n-  --> $DIR/subdiagnostic-derive.rs:706:30\n+  --> $DIR/subdiagnostic-derive.rs:712:30\n    |\n LL |     #[suggestion_part(code = 3)]\n    |                              ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:748:1\n+  --> $DIR/subdiagnostic-derive.rs:754:1\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"hidden\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:748:1\n+  --> $DIR/subdiagnostic-derive.rs:754:1\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"hidden\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[suggestion_hidden(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:757:1\n+  --> $DIR/subdiagnostic-derive.rs:763:1\n    |\n LL | #[suggestion_hidden(no_crate_example, code = \"\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Use `#[suggestion(..., style = \"hidden\")]` instead\n \n error: `#[suggestion_hidden(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:765:1\n+  --> $DIR/subdiagnostic-derive.rs:771:1\n    |\n LL | #[suggestion_hidden(no_crate_example, code = \"\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Use `#[suggestion(..., style = \"hidden\")]` instead\n \n error: invalid suggestion style\n-  --> $DIR/subdiagnostic-derive.rs:773:51\n+  --> $DIR/subdiagnostic-derive.rs:779:51\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"foo\")]\n    |                                                   ^^^^^\n    |\n    = help: valid styles are `normal`, `short`, `hidden`, `verbose` and `tool-only`\n \n error: expected `= \"xxx\"`\n-  --> $DIR/subdiagnostic-derive.rs:781:49\n+  --> $DIR/subdiagnostic-derive.rs:787:49\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = 42)]\n    |                                                 ^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/subdiagnostic-derive.rs:789:48\n+  --> $DIR/subdiagnostic-derive.rs:795:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style)]\n    |                                                ^\n \n error: expected `= \"xxx\"`\n-  --> $DIR/subdiagnostic-derive.rs:797:48\n+  --> $DIR/subdiagnostic-derive.rs:803:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n    |                                                ^\n \n error: expected `,`\n-  --> $DIR/subdiagnostic-derive.rs:797:48\n+  --> $DIR/subdiagnostic-derive.rs:803:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n    |                                                ^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:808:5\n+  --> $DIR/subdiagnostic-derive.rs:815:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n@@ -529,7 +529,7 @@ LL |     #[primary_span]\n    = help: to create a suggestion with multiple spans, use `#[multipart_suggestion]` instead\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:805:1\n+  --> $DIR/subdiagnostic-derive.rs:812:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"\")]\n LL | |\n@@ -547,61 +547,61 @@ LL | #[foo]\n    |   ^^^\n \n error: cannot find attribute `foo` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:161:3\n+  --> $DIR/subdiagnostic-derive.rs:160:3\n    |\n LL | #[foo]\n    |   ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:175:7\n+  --> $DIR/subdiagnostic-derive.rs:174:7\n    |\n LL |     #[bar]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:187:7\n+  --> $DIR/subdiagnostic-derive.rs:186:7\n    |\n LL |     #[bar = \"...\"]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:199:7\n+  --> $DIR/subdiagnostic-derive.rs:198:7\n    |\n LL |     #[bar = 4]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:211:7\n+  --> $DIR/subdiagnostic-derive.rs:210:7\n    |\n LL |     #[bar(\"...\")]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:272:7\n+  --> $DIR/subdiagnostic-derive.rs:271:7\n    |\n LL |     #[bar]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:283:7\n+  --> $DIR/subdiagnostic-derive.rs:282:7\n    |\n LL |     #[bar = \"...\"]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:294:7\n+  --> $DIR/subdiagnostic-derive.rs:293:7\n    |\n LL |     #[bar(\"...\")]\n    |       ^^^\n \n error[E0425]: cannot find value `slug` in module `crate::fluent_generated`\n-  --> $DIR/subdiagnostic-derive.rs:124:9\n+  --> $DIR/subdiagnostic-derive.rs:123:9\n    |\n LL | #[label(slug)]\n    |         ^^^^ not found in `crate::fluent_generated`\n \n error[E0425]: cannot find value `__code_29` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:703:10\n+  --> $DIR/subdiagnostic-derive.rs:706:10\n    |\n LL | #[derive(Subdiagnostic)]\n    |          ^^^^^^^^^^^^^ not found in this scope"}]}