{"sha": "c4d0c911615a7b4efecca47abab294c7c1b788ce", "node_id": "C_kwDOAAsO6NoAKGM0ZDBjOTExNjE1YTdiNGVmZWNjYTQ3YWJhYjI5NGM3YzFiNzg4Y2U", "commit": {"author": {"name": "Deep Majumder", "email": "deep.majumder2019@gmail.com", "date": "2022-12-14T13:40:03Z"}, "committer": {"name": "Deep Majumder", "email": "deep.majumder2019@gmail.com", "date": "2022-12-14T13:42:30Z"}, "message": "Allow .. to be parsed as let initializer\n\n.. and ..= are valid expressions, however when used in a let statement\nit is not parsed.", "tree": {"sha": "b5df828aed87ffe039e7e4113c926848ff76eb8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5df828aed87ffe039e7e4113c926848ff76eb8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4d0c911615a7b4efecca47abab294c7c1b788ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d0c911615a7b4efecca47abab294c7c1b788ce", "html_url": "https://github.com/rust-lang/rust/commit/c4d0c911615a7b4efecca47abab294c7c1b788ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4d0c911615a7b4efecca47abab294c7c1b788ce/comments", "author": {"login": "RedDocMD", "id": 54888685, "node_id": "MDQ6VXNlcjU0ODg4Njg1", "avatar_url": "https://avatars.githubusercontent.com/u/54888685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedDocMD", "html_url": "https://github.com/RedDocMD", "followers_url": "https://api.github.com/users/RedDocMD/followers", "following_url": "https://api.github.com/users/RedDocMD/following{/other_user}", "gists_url": "https://api.github.com/users/RedDocMD/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedDocMD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedDocMD/subscriptions", "organizations_url": "https://api.github.com/users/RedDocMD/orgs", "repos_url": "https://api.github.com/users/RedDocMD/repos", "events_url": "https://api.github.com/users/RedDocMD/events{/privacy}", "received_events_url": "https://api.github.com/users/RedDocMD/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RedDocMD", "id": 54888685, "node_id": "MDQ6VXNlcjU0ODg4Njg1", "avatar_url": "https://avatars.githubusercontent.com/u/54888685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedDocMD", "html_url": "https://github.com/RedDocMD", "followers_url": "https://api.github.com/users/RedDocMD/followers", "following_url": "https://api.github.com/users/RedDocMD/following{/other_user}", "gists_url": "https://api.github.com/users/RedDocMD/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedDocMD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedDocMD/subscriptions", "organizations_url": "https://api.github.com/users/RedDocMD/orgs", "repos_url": "https://api.github.com/users/RedDocMD/repos", "events_url": "https://api.github.com/users/RedDocMD/events{/privacy}", "received_events_url": "https://api.github.com/users/RedDocMD/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ec1457ee9868a838e4521a3510cdd416c0c295", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ec1457ee9868a838e4521a3510cdd416c0c295", "html_url": "https://github.com/rust-lang/rust/commit/71ec1457ee9868a838e4521a3510cdd416c0c295"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "5247007fdce98ad8efd02f87155e59ba080a038e", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4d0c911615a7b4efecca47abab294c7c1b788ce/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d0c911615a7b4efecca47abab294c7c1b788ce/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=c4d0c911615a7b4efecca47abab294c7c1b788ce", "patch": "@@ -379,6 +379,10 @@ impl Token {\n         }\n     }\n \n+    pub fn is_range_seperator(&self) -> bool {\n+        [DotDot, DotDotDot, DotDotEq].contains(&self.kind)\n+    }\n+\n     pub fn is_op(&self) -> bool {\n         match self.kind {\n             Eq | Lt | Le | EqEq | Ne | Ge | Gt | AndAnd | OrOr | Not | Tilde | BinOp(_)"}, {"sha": "7235b15a46be658c51ae753e7411d58e08604521", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c4d0c911615a7b4efecca47abab294c7c1b788ce/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d0c911615a7b4efecca47abab294c7c1b788ce/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=c4d0c911615a7b4efecca47abab294c7c1b788ce", "patch": "@@ -180,7 +180,7 @@ impl<'a> Parser<'a> {\n                 LhsExpr::AttributesParsed(attrs) => Some(attrs),\n                 _ => None,\n             };\n-            if [token::DotDot, token::DotDotDot, token::DotDotEq].contains(&self.token.kind) {\n+            if self.token.is_range_seperator() {\n                 return self.parse_prefix_range_expr(attrs);\n             } else {\n                 self.parse_prefix_expr(attrs)?\n@@ -512,7 +512,7 @@ impl<'a> Parser<'a> {\n         }\n \n         debug_assert!(\n-            [token::DotDot, token::DotDotDot, token::DotDotEq].contains(&self.token.kind),\n+            self.token.is_range_seperator(),\n             \"parse_prefix_range_expr: token {:?} is not DotDot/DotDotEq\",\n             self.token\n         );\n@@ -896,7 +896,11 @@ impl<'a> Parser<'a> {\n         let has_lifetime = self.token.is_lifetime() && self.look_ahead(1, |t| t != &token::Colon);\n         let lifetime = has_lifetime.then(|| self.expect_lifetime()); // For recovery, see below.\n         let (borrow_kind, mutbl) = self.parse_borrow_modifiers(lo);\n-        let expr = self.parse_prefix_expr(None);\n+        let expr = if self.token.is_range_seperator() {\n+            self.parse_prefix_range_expr(None)\n+        } else {\n+            self.parse_prefix_expr(None)\n+        };\n         let (hi, expr) = self.interpolated_or_expr_span(expr)?;\n         let span = lo.to(hi);\n         if let Some(lt) = lifetime {"}, {"sha": "7a094d8e4b4b4d0006427e8ff21617639f1a9ec9", "filename": "src/test/ui/parser/issue-105634.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c4d0c911615a7b4efecca47abab294c7c1b788ce/src%2Ftest%2Fui%2Fparser%2Fissue-105634.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d0c911615a7b4efecca47abab294c7c1b788ce/src%2Ftest%2Fui%2Fparser%2Fissue-105634.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-105634.rs?ref=c4d0c911615a7b4efecca47abab294c7c1b788ce", "patch": "@@ -0,0 +1,8 @@\n+// run-pass\n+\n+fn main() {\n+    let _a = ..;\n+    let _b = ..=10;\n+    let _c = &..;\n+    let _d = &..=10;\n+}"}]}