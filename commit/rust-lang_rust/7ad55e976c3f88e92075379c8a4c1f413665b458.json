{"sha": "7ad55e976c3f88e92075379c8a4c1f413665b458", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZDU1ZTk3NmMzZjg4ZTkyMDc1Mzc5YzhhNGMxZjQxMzY2NWI0NTg=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-30T18:38:45Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-30T18:38:45Z"}, "message": "Document match_ast!", "tree": {"sha": "ac6407fba56558cab3023fefcda96f50290131ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac6407fba56558cab3023fefcda96f50290131ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ad55e976c3f88e92075379c8a4c1f413665b458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ad55e976c3f88e92075379c8a4c1f413665b458", "html_url": "https://github.com/rust-lang/rust/commit/7ad55e976c3f88e92075379c8a4c1f413665b458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ad55e976c3f88e92075379c8a4c1f413665b458/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eee55d4663084a01ce80f5ee201d8e1e345417cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/eee55d4663084a01ce80f5ee201d8e1e345417cd", "html_url": "https://github.com/rust-lang/rust/commit/eee55d4663084a01ce80f5ee201d8e1e345417cd"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "5dcb6a95a6637d378ef7afaee6365263acb8efd5", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7ad55e976c3f88e92075379c8a4c1f413665b458/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad55e976c3f88e92075379c8a4c1f413665b458/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=7ad55e976c3f88e92075379c8a4c1f413665b458", "patch": "@@ -160,6 +160,20 @@ impl SourceFile {\n     }\n }\n \n+/// Matches a `SyntaxNode` against an `ast` type.\n+///\n+/// # Example:\n+///\n+/// ```ignore\n+/// match_ast! {\n+///     match node {\n+///         ast::CallExpr(it) => { ... },\n+///         ast::MethodCallExpr(it) => { ... },\n+///         ast::MacroCall(it) => { ... },\n+///         _ => None,\n+///     }\n+/// }\n+/// ```\n #[macro_export]\n macro_rules! match_ast {\n     (match $node:ident {"}]}