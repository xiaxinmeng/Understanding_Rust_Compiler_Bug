{"sha": "571ff0c84ac6d61061581d4d53159f2326838a71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MWZmMGM4NGFjNmQ2MTA2MTU4MWQ0ZDUzMTU5ZjIzMjY4MzhhNzE=", "commit": {"author": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-20T23:32:27Z"}, "committer": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-20T23:32:27Z"}, "message": "Add @true to common_exprs and fix some exclusions", "tree": {"sha": "a3b152349a9f02905ce8ef273063cc1fb159e955", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3b152349a9f02905ce8ef273063cc1fb159e955"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/571ff0c84ac6d61061581d4d53159f2326838a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/571ff0c84ac6d61061581d4d53159f2326838a71", "html_url": "https://github.com/rust-lang/rust/commit/571ff0c84ac6d61061581d4d53159f2326838a71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/571ff0c84ac6d61061581d4d53159f2326838a71/comments", "author": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390677ebccb9abd8bd7f2a139ee6010dedc23c57", "url": "https://api.github.com/repos/rust-lang/rust/commits/390677ebccb9abd8bd7f2a139ee6010dedc23c57", "html_url": "https://github.com/rust-lang/rust/commit/390677ebccb9abd8bd7f2a139ee6010dedc23c57"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "1074f9c073bfa7598be66750b82b86789b91060a", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/571ff0c84ac6d61061581d4d53159f2326838a71/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/571ff0c84ac6d61061581d4d53159f2326838a71/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=571ff0c84ac6d61061581d4d53159f2326838a71", "patch": "@@ -55,7 +55,8 @@ fn common_exprs() -> [ast::expr] {\n      dse(ast::expr_put(option::none)),\n      dse(ast::expr_lit(@dsl(ast::lit_nil))),\n      dse(ast::expr_lit(@dsl(ast::lit_bool(false)))),\n-     dse(ast::expr_lit(@dsl(ast::lit_bool(true))))\n+     dse(ast::expr_lit(@dsl(ast::lit_bool(true)))),\n+     dse(ast::expr_unary(ast::box(ast::imm), @dse(ast::expr_lit(@dsl(ast::lit_bool(true))))))\n     ]\n }\n \n@@ -344,7 +345,7 @@ fn check_compiling(filename: str) -> happiness {\n             known_bug(\"https://github.com/graydon/rust/issues/943\")\n         } else if contains(p.err, \"(S->getType()->isPointerTy() && \\\"Invalid cast\\\")\") {\n             known_bug(\"https://github.com/graydon/rust/issues/895\")\n-        } else if contains(p.out, \"Ptr must be a pointer to Val type\") {\n+        } else if contains(p.err, \"Ptr must be a pointer to Val type\") {\n             known_bug(\"https://github.com/graydon/rust/issues/897\")\n         } else if contains(p.err, \"(castIsValid(op, S, Ty) && \\\"Invalid cast!\\\"), function Create\") {\n             known_bug(\"https://github.com/graydon/rust/issues/901\")\n@@ -425,7 +426,6 @@ fn content_is_dangerous_to_run(code: str) -> bool {\n         [\"import\", // espeically fs, run\n          \"native\",\n          \"unsafe\",\n-         \"with\", // tstate hang: https://github.com/graydon/rust/issues/948\n          \"log\"]; // python --> rust pipe deadlock?\n \n     for p: str in dangerous_patterns { if contains(code, p) { ret true; } }\n@@ -437,6 +437,7 @@ fn content_is_dangerous_to_modify(code: str) -> bool {\n         [\"#macro\", // not safe to steal things inside of it, because they have a special syntax\n          \"#\",      // strange representation of the arguments to #fmt, for example\n          \"tag\",    // typeck hang: https://github.com/graydon/rust/issues/742 (from dup #900)\n+         \"with\",   // tstate hang: https://github.com/graydon/rust/issues/948\n          \" be \"];  // don't want to replace its child with a non-call: \"Non-call expression in tail call\"\n \n     for p: str in dangerous_patterns { if contains(code, p) { ret true; } }"}]}