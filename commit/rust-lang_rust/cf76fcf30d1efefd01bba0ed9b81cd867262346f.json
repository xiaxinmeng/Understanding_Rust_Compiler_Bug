{"sha": "cf76fcf30d1efefd01bba0ed9b81cd867262346f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNzZmY2YzMGQxZWZlZmQwMWJiYTBlZDliODFjZDg2NzI2MjM0NmY=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T06:52:43Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-24T18:43:02Z"}, "message": "Fix source-links for files with absolute-paths\n\n`clean_srcpath` tries to make the source-path relative to `src_root`,\nbut this didn't work since `src_root` itself wasn't absolute.", "tree": {"sha": "b1d0ff603cb4909b84eab7b3dd29413934b90664", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1d0ff603cb4909b84eab7b3dd29413934b90664"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf76fcf30d1efefd01bba0ed9b81cd867262346f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf76fcf30d1efefd01bba0ed9b81cd867262346f", "html_url": "https://github.com/rust-lang/rust/commit/cf76fcf30d1efefd01bba0ed9b81cd867262346f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf76fcf30d1efefd01bba0ed9b81cd867262346f/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27ca2507defe13c5c989a9aa64d138645a7db65e", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ca2507defe13c5c989a9aa64d138645a7db65e", "html_url": "https://github.com/rust-lang/rust/commit/27ca2507defe13c5c989a9aa64d138645a7db65e"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "1ff88f1d12758ae8c76a32cf7f2e0091e53365bc", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf76fcf30d1efefd01bba0ed9b81cd867262346f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf76fcf30d1efefd01bba0ed9b81cd867262346f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=cf76fcf30d1efefd01bba0ed9b81cd867262346f", "patch": "@@ -48,6 +48,7 @@ use std::collections::HashMap;\n use std::path::PathBuf;\n use std::rc::Rc;\n use std::u32;\n+use std::env::current_dir;\n \n use core::DocContext;\n use doctree;\n@@ -201,7 +202,13 @@ impl<'a, 'tcx> Clean<Crate> for visit_ast::RustdocVisitor<'a, 'tcx> {\n         }\n \n         let src = match cx.input {\n-            Input::File(ref path) => path.clone(),\n+            Input::File(ref path) => {\n+                if path.is_absolute() {\n+                    path.clone()\n+                } else {\n+                    current_dir().unwrap().join(path)\n+                }\n+            },\n             Input::Str(_) => PathBuf::new() // FIXME: this is wrong\n         };\n "}, {"sha": "a7c796dd2f5cdf279e8ae7e2195aeee2c8fefe42", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cf76fcf30d1efefd01bba0ed9b81cd867262346f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf76fcf30d1efefd01bba0ed9b81cd867262346f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=cf76fcf30d1efefd01bba0ed9b81cd867262346f", "patch": "@@ -46,7 +46,7 @@ use std::io::prelude::*;\n use std::io::{self, BufWriter, BufReader};\n use std::iter::repeat;\n use std::mem;\n-use std::path::{PathBuf, Path};\n+use std::path::{PathBuf, Path, Component};\n use std::str;\n use std::sync::Arc;\n \n@@ -810,16 +810,17 @@ fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F) wh\n     // make it relative, if possible\n     let p = p.strip_prefix(src_root).unwrap_or(p);\n \n-    let mut iter = p.iter().map(|x| x.to_str().unwrap()).peekable();\n+    let mut iter = p.components().peekable();\n+\n     while let Some(c) = iter.next() {\n         if !keep_filename && iter.peek().is_none() {\n             break;\n         }\n \n-        if \"..\" == c {\n-            f(\"up\");\n-        } else {\n-            f(c)\n+        match c {\n+            Component::ParentDir => f(\"up\"),\n+            Component::Normal(c) => f(c.to_str().unwrap()),\n+            _ => continue,\n         }\n     }\n }\n@@ -871,7 +872,7 @@ impl<'a> DocFolder for SourceCollector<'a> {\n             // entire crate. The other option is maintaining this mapping on a\n             // per-file basis, but that's probably not worth it...\n             self.cx\n-                .include_sources = match self.emit_source(&item.source .filename) {\n+                .include_sources = match self.emit_source(&item.source.filename) {\n                 Ok(()) => true,\n                 Err(e) => {\n                     println!(\"warning: source code was requested to be rendered, \\"}, {"sha": "bfb440a18392e9b310e9aa12886fba6a2cfa816b", "filename": "src/test/rustdoc/issue-26995.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cf76fcf30d1efefd01bba0ed9b81cd867262346f/src%2Ftest%2Frustdoc%2Fissue-26995.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf76fcf30d1efefd01bba0ed9b81cd867262346f/src%2Ftest%2Frustdoc%2Fissue-26995.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-26995.rs?ref=cf76fcf30d1efefd01bba0ed9b81cd867262346f", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows\n+// compile-flags: --no-defaults\n+\n+// @has src/issue_26995/dev/null.html\n+// @has issue_26995/null/index.html '//a/@href' '../../src/issue_26995/dev/null.html'\n+#[path=\"/dev/null\"]\n+pub mod null;"}]}