{"sha": "2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMGExNmNmMGQ2N2Y2MWQ4NWZmNzYzMTg0NmU5YzNjNmUyMGM4NWE=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-27T17:20:23Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: convert rust-analyzer to use Tarball", "tree": {"sha": "c2ebf60b81ea01008fdfbd695bc8f4ca3f489511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2ebf60b81ea01008fdfbd695bc8f4ca3f489511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjf4ACgkQPgar6Auq\n8Zz67g/9FpCjClBkhi9MoPmU4jAbooTxtYT0N2N30LBW6BPihCV8n/r455vsEkWN\nXmmWOPKP6B0OKt26MgY22m5dPT7VhFyXZi/sJ5Was1KEEXCfHaiMJMp6dBte9/b1\nKa6ZEPYk7GSmv6YGdIMxcbgVSYMAYDnAD3+NWrKeUEtdXMsMXetazGAIYUVZHF7+\n1GgQr0OThrM0rHDezIp4jG7CIzxm5H+PHug/Src70NEoVueJcoZeBqMB7FIf4WYp\nxohMeKqBL5aICQWh5fKfiieSCVKhNn14pEBWIUP+TFQabEvwaHlfeP4aJq9lgrJa\n+4/XqgsYbFgxhTTFNunLWpa3VEVYHP+mEJ9jFB206QBYm1k2+LdWtBhg0atpsuXI\nX7BWYxhLftPHo1te3+k+VYVtNGAzM4/jJiskm/neYrghLePAm/IQZG58J/7O6erl\nLe+8lEykHySuc/Ctvrqhyh9t7gMErwnQZ/xkuqvYrwjWUMJa3EavdIbc0BZjq28E\npHujLwhXxsj1WP+6OuDvPR5A42nXKmAVdZqGVO+O0nVLUOaAItNIZ9rvl8AB1Fmt\nzOHcko7ue80VqAElnY0hl9/YMeTYW5Wo917AqgH1HdiAZ+pEPjFyg/fOZ4M2m1pE\niquXA0V2Z5Wuj9iMFkKnrCoef96Ai+zXrQdoU/IrAKzWmMHdqWY=\n=qAYB\n-----END PGP SIGNATURE-----", "payload": "tree c2ebf60b81ea01008fdfbd695bc8f4ca3f489511\nparent cfb23e845e56718fa33b7b76d30e2edec992d659\nauthor Pietro Albini <pietro@pietroalbini.org> 1606497623 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: convert rust-analyzer to use Tarball\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a", "html_url": "https://github.com/rust-lang/rust/commit/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb23e845e56718fa33b7b76d30e2edec992d659", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb23e845e56718fa33b7b76d30e2edec992d659", "html_url": "https://github.com/rust-lang/rust/commit/cfb23e845e56718fa33b7b76d30e2edec992d659"}], "stats": {"total": 65, "additions": 15, "deletions": 50}, "files": [{"sha": "b1a61500a70d9b1a37fb331979048823e2b46ad0", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 6, "deletions": 50, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a", "patch": "@@ -1122,60 +1122,16 @@ impl Step for RustAnalyzer {\n             return None;\n         }\n \n-        let src = builder.src.join(\"src/tools/rust-analyzer\");\n-        let release_num = builder.release_num(\"rust-analyzer/crates/rust-analyzer\");\n-        let name = pkgname(builder, \"rust-analyzer\");\n-        let version = builder.rust_analyzer_info.version(builder, &release_num);\n-\n-        let tmp = tmpdir(builder);\n-        let image = tmp.join(\"rust-analyzer-image\");\n-        drop(fs::remove_dir_all(&image));\n-        builder.create_dir(&image);\n-\n-        // Prepare the image directory\n-        // We expect rust-analyer to always build, as it doesn't depend on rustc internals\n-        // and doesn't have associated toolstate.\n         let rust_analyzer = builder\n             .ensure(tool::RustAnalyzer { compiler, target, extra_features: Vec::new() })\n             .expect(\"rust-analyzer always builds\");\n \n-        builder.install(&rust_analyzer, &image.join(\"bin\"), 0o755);\n-        let doc = image.join(\"share/doc/rust-analyzer\");\n-        builder.install(&src.join(\"README.md\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-\n-        // Prepare the overlay\n-        let overlay = tmp.join(\"rust-analyzer-overlay\");\n-        drop(fs::remove_dir_all(&overlay));\n-        t!(fs::create_dir_all(&overlay));\n-        builder.install(&src.join(\"README.md\"), &overlay, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-        builder.create(&overlay.join(\"version\"), &version);\n-\n-        // Generate the installer tarball\n-        let mut cmd = rust_installer(builder);\n-        cmd.arg(\"generate\")\n-            .arg(\"--product-name=Rust\")\n-            .arg(\"--rel-manifest-dir=rustlib\")\n-            .arg(\"--success-message=rust-analyzer-ready-to-serve.\")\n-            .arg(\"--image-dir\")\n-            .arg(&image)\n-            .arg(\"--work-dir\")\n-            .arg(&tmpdir(builder))\n-            .arg(\"--output-dir\")\n-            .arg(&distdir(builder))\n-            .arg(\"--non-installed-overlay\")\n-            .arg(&overlay)\n-            .arg(format!(\"--package-name={}-{}\", name, target.triple))\n-            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-            .arg(\"--component-name=rust-analyzer-preview\");\n-\n-        builder.info(&format!(\"Dist rust-analyzer stage{} ({})\", compiler.stage, target));\n-        let _time = timeit(builder);\n-        builder.run(&mut cmd);\n-        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n+        let mut tarball = Tarball::new(builder, \"rust-analyzer\", &target.triple);\n+        tarball.set_overlay(OverlayKind::RustAnalyzer);\n+        tarball.is_preview(true);\n+        tarball.add_file(rust_analyzer, \"bin\", 0o755);\n+        tarball.add_legal_and_readme_to(\"share/doc/rust-analyzer\");\n+        Some(tarball.generate())\n     }\n }\n "}, {"sha": "8a23d36346e3be01f4b822a80d95ca37745d1b47", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=2e0a16cf0d67f61d85ff7631846e9c3c6e20c85a", "patch": "@@ -13,6 +13,7 @@ pub(crate) enum OverlayKind {\n     Miri,\n     Rustfmt,\n     RLS,\n+    RustAnalyzer,\n }\n \n impl OverlayKind {\n@@ -48,6 +49,11 @@ impl OverlayKind {\n                 \"src/tools/rls/LICENSE-APACHE\",\n                 \"src/tools/rls/LICENSE-MIT\",\n             ],\n+            OverlayKind::RustAnalyzer => &[\n+                \"src/tools/rust-analyzer/README.md\",\n+                \"src/tools/rust-analyzer/LICENSE-APACHE\",\n+                \"src/tools/rust-analyzer/LICENSE-MIT\",\n+            ],\n         }\n     }\n \n@@ -66,6 +72,9 @@ impl OverlayKind {\n                 builder.rustfmt_info.version(builder, &builder.release_num(\"rustfmt\"))\n             }\n             OverlayKind::RLS => builder.rls_info.version(builder, &builder.release_num(\"rls\")),\n+            OverlayKind::RustAnalyzer => builder\n+                .rust_analyzer_info\n+                .version(builder, &builder.release_num(\"rust-analyzer/crates/rust-analyzer\")),\n         }\n     }\n }"}]}