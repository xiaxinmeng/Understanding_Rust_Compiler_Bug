{"sha": "36fadc4224622d8bfd220d37d4c19931f6cfc6c6", "node_id": "C_kwDOAAsO6NoAKDM2ZmFkYzQyMjQ2MjJkOGJmZDIyMGQzN2Q0YzE5OTMxZjZjZmM2YzY", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-06-23T14:05:59Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-06-23T14:05:59Z"}, "message": "Fix unstable feature use", "tree": {"sha": "4bc997cb4841e3680e8743ea46914427c6974c63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bc997cb4841e3680e8743ea46914427c6974c63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36fadc4224622d8bfd220d37d4c19931f6cfc6c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36fadc4224622d8bfd220d37d4c19931f6cfc6c6", "html_url": "https://github.com/rust-lang/rust/commit/36fadc4224622d8bfd220d37d4c19931f6cfc6c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36fadc4224622d8bfd220d37d4c19931f6cfc6c6/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f410fdf6e308ae51191b0b816db76b6397260f55", "url": "https://api.github.com/repos/rust-lang/rust/commits/f410fdf6e308ae51191b0b816db76b6397260f55", "html_url": "https://github.com/rust-lang/rust/commit/f410fdf6e308ae51191b0b816db76b6397260f55"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "76c76ee6cf441e0b2383f20e0f9fb89292246b02", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36fadc4224622d8bfd220d37d4c19931f6cfc6c6/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36fadc4224622d8bfd220d37d4c19931f6cfc6c6/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=36fadc4224622d8bfd220d37d4c19931f6cfc6c6", "patch": "@@ -589,7 +589,7 @@ pub fn lookup_impl_method(\n     let mut table = InferenceTable::new(db, env.clone());\n     find_matching_impl(impls, &mut table, &self_ty).and_then(|data| {\n         data.items.iter().find_map(|it| match it {\n-            AssocItemId::FunctionId(f) => (db.function_data(*f).name == *name).then_some(*f),\n+            AssocItemId::FunctionId(f) => (db.function_data(*f).name == *name).then(|| *f),\n             _ => None,\n         })\n     })"}]}