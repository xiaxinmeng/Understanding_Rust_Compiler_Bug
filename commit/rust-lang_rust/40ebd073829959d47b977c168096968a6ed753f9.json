{"sha": "40ebd073829959d47b977c168096968a6ed753f9", "node_id": "C_kwDOAAsO6NoAKDQwZWJkMDczODI5OTU5ZDQ3Yjk3N2MxNjgwOTY5NjhhNmVkNzUzZjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-21T05:04:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-21T05:04:39Z"}, "message": "Auto merge of #90072 - ehuss:empty-rmeta-no-warn, r=Mark-Simulacrum\n\nDon't emit a warning for empty rmeta files.\n\nThis avoids displaying a warning when attempting to load an empty rmeta file. Warnings were enabled via #89634 which can cause a lot of noise (for example, running `./x.py check`).  rustc generates empty rmeta files for things like binaries, which can happen when checking libraries as unittests.\n\nCloses #89795", "tree": {"sha": "601fc81088581278b54f2ac8cceac5726f1e3c29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/601fc81088581278b54f2ac8cceac5726f1e3c29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40ebd073829959d47b977c168096968a6ed753f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40ebd073829959d47b977c168096968a6ed753f9", "html_url": "https://github.com/rust-lang/rust/commit/40ebd073829959d47b977c168096968a6ed753f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40ebd073829959d47b977c168096968a6ed753f9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4626184cafa827e13cc7a71b183a704ee0ec5930", "url": "https://api.github.com/repos/rust-lang/rust/commits/4626184cafa827e13cc7a71b183a704ee0ec5930", "html_url": "https://github.com/rust-lang/rust/commit/4626184cafa827e13cc7a71b183a704ee0ec5930"}, {"sha": "6f915056a145628c9f31fefb842c35ec76e7d7bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f915056a145628c9f31fefb842c35ec76e7d7bf", "html_url": "https://github.com/rust-lang/rust/commit/6f915056a145628c9f31fefb842c35ec76e7d7bf"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bbd30c9327a6c3d501b5cf0720dc28e62cda7d91", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/40ebd073829959d47b977c168096968a6ed753f9/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ebd073829959d47b977c168096968a6ed753f9/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=40ebd073829959d47b977c168096968a6ed753f9", "patch": "@@ -529,6 +529,15 @@ impl<'a> CrateLocator<'a> {\n         let mut err_data: Option<Vec<PathBuf>> = None;\n         for (lib, kind) in m {\n             info!(\"{} reading metadata from: {}\", flavor, lib.display());\n+            if flavor == CrateFlavor::Rmeta && lib.metadata().map_or(false, |m| m.len() == 0) {\n+                // Empty files will cause get_metadata_section to fail. Rmeta\n+                // files can be empty, for example with binaries (which can\n+                // often appear with `cargo check` when checking a library as\n+                // a unittest). We don't want to emit a user-visible warning\n+                // in this case as it is not a real problem.\n+                debug!(\"skipping empty file\");\n+                continue;\n+            }\n             let (hash, metadata) =\n                 match get_metadata_section(self.target, flavor, &lib, self.metadata_loader) {\n                     Ok(blob) => {"}]}