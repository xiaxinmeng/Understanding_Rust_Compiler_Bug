{"sha": "906e53520505acbb3948be594135c60a16b68b81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNmU1MzUyMDUwNWFjYmIzOTQ4YmU1OTQxMzVjNjBhMTZiNjhiODE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-02T12:23:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-02T12:23:17Z"}, "message": "Rollup merge of #82579 - osa1:issue82566, r=estebank\n\nFix turbofish recovery with multiple generic args\n\nThis consists of two commits, each can be individually reviewed.\n\n- First commit fixes the issue in [this comment](https://github.com/rust-lang/rust/issues/82566#issuecomment-786924466).\n- Second commit fixes #82566\n\n---\n\nr? ````@estebank````", "tree": {"sha": "ca80cfdcd6a03de84bfa1655482548cd8bede740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca80cfdcd6a03de84bfa1655482548cd8bede740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/906e53520505acbb3948be594135c60a16b68b81", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgPi41CRBK7hj4Ov3rIwAAdHIIAKg2k3oZh2YCcSolTkotKOHu\n7Qcjc5ulSsW8XqJI//zJ8V08ypsXK34O5UO5ZVdwxYVB+KtLw3yd9cxjk0W+Ge9B\nJd6jxd0jAIrmlgrYO3dafdowV9stZzyALKrwQ9HXCFP+uKYcDfFnM9dRS+4zibjl\nOD7FJYK+rjfJsMmanF2Zb854FxCx1CtfaTdWXP6HPZM/NSwymfMGGJVrXjiMDSGv\nv3764GN0FlwUFryruThKDfB979idMdJrulfV7fhn/2HWkXHy2kWH6rUkP6sn5OtC\nSY6hhdqpy42OVanIk9QflDVwWpMiQh7rxlZHS3MVFp1yhezlLAVkTqxkERVDuMk=\n=XqGb\n-----END PGP SIGNATURE-----\n", "payload": "tree ca80cfdcd6a03de84bfa1655482548cd8bede740\nparent 5e68c60406741c41d7dff65e74d05f641ee6022f\nparent 992b914b6bf41aae4212ea4e8ee09f8b16a31f28\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1614687797 +0900\ncommitter GitHub <noreply@github.com> 1614687797 +0900\n\nRollup merge of #82579 - osa1:issue82566, r=estebank\n\nFix turbofish recovery with multiple generic args\n\nThis consists of two commits, each can be individually reviewed.\n\n- First commit fixes the issue in [this comment](https://github.com/rust-lang/rust/issues/82566#issuecomment-786924466).\n- Second commit fixes #82566\n\n---\n\nr? ````@estebank````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/906e53520505acbb3948be594135c60a16b68b81", "html_url": "https://github.com/rust-lang/rust/commit/906e53520505acbb3948be594135c60a16b68b81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/906e53520505acbb3948be594135c60a16b68b81/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e68c60406741c41d7dff65e74d05f641ee6022f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e68c60406741c41d7dff65e74d05f641ee6022f", "html_url": "https://github.com/rust-lang/rust/commit/5e68c60406741c41d7dff65e74d05f641ee6022f"}, {"sha": "992b914b6bf41aae4212ea4e8ee09f8b16a31f28", "url": "https://api.github.com/repos/rust-lang/rust/commits/992b914b6bf41aae4212ea4e8ee09f8b16a31f28", "html_url": "https://github.com/rust-lang/rust/commit/992b914b6bf41aae4212ea4e8ee09f8b16a31f28"}], "stats": {"total": 138, "additions": 134, "deletions": 4}, "files": [{"sha": "f4ab3260d1a83e5603603e8ec4995ee7c1a337fd", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -662,7 +662,7 @@ impl<'a> Parser<'a> {\n                     let x = self.parse_seq_to_before_end(\n                         &token::Gt,\n                         SeqSep::trailing_allowed(token::Comma),\n-                        |p| p.parse_ty(),\n+                        |p| p.parse_generic_arg(),\n                     );\n                     match x {\n                         Ok((_, _, false)) => {"}, {"sha": "9cc600d9ede02fb3d9aad3ce583479c067bbde46", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -545,7 +545,7 @@ impl<'a> Parser<'a> {\n \n     /// Parse a generic argument in a path segment.\n     /// This does not include constraints, e.g., `Item = u8`, which is handled in `parse_angle_arg`.\n-    fn parse_generic_arg(&mut self) -> PResult<'a, Option<GenericArg>> {\n+    pub(super) fn parse_generic_arg(&mut self) -> PResult<'a, Option<GenericArg>> {\n         let start = self.token.span;\n         let arg = if self.check_lifetime() && self.look_ahead(1, |t| !t.is_like_plus()) {\n             // Parse lifetime argument."}, {"sha": "8f03bfd4c3ab78fd7f58ce8a35f2cdd03df01e8a", "filename": "compiler/rustc_parse/src/parser/ty.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -360,12 +360,20 @@ impl<'a> Parser<'a> {\n             }\n             Err(err) => return Err(err),\n         };\n+\n         let ty = if self.eat(&token::Semi) {\n-            TyKind::Array(elt_ty, self.parse_anon_const_expr()?)\n+            let mut length = self.parse_anon_const_expr()?;\n+            if let Err(e) = self.expect(&token::CloseDelim(token::Bracket)) {\n+                // Try to recover from `X<Y, ...>` when `X::<Y, ...>` works\n+                self.check_mistyped_turbofish_with_multiple_type_params(e, &mut length.value)?;\n+                self.expect(&token::CloseDelim(token::Bracket))?;\n+            }\n+            TyKind::Array(elt_ty, length)\n         } else {\n+            self.expect(&token::CloseDelim(token::Bracket))?;\n             TyKind::Slice(elt_ty)\n         };\n-        self.expect(&token::CloseDelim(token::Bracket))?;\n+\n         Ok(ty)\n     }\n "}, {"sha": "95c31fbaa289ace51be419dcec281f4f5f0f8d77", "filename": "src/test/ui/suggestions/issue-82566-1.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-1.rs?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -0,0 +1,21 @@\n+struct T1<const X1: usize>;\n+struct T2<const X1: usize, const X2: usize>;\n+struct T3<const X1: usize, const X2: usize, const X3: usize>;\n+\n+impl T1<1> {\n+    const C: () = ();\n+}\n+\n+impl T2<1, 2> {\n+    const C: () = ();\n+}\n+\n+impl T3<1, 2, 3> {\n+    const C: () = ();\n+}\n+\n+fn main() {\n+    T1<1>::C; //~ ERROR: comparison operators cannot be chained\n+    T2<1, 2>::C; //~ ERROR: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+    T3<1, 2, 3>::C; //~ ERROR: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+}"}, {"sha": "5a9099a894c8fb4387a88834bc92d4bc4c928871", "filename": "src/test/ui/suggestions/issue-82566-1.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-1.stderr?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -0,0 +1,35 @@\n+error: comparison operators cannot be chained\n+  --> $DIR/issue-82566-1.rs:18:7\n+   |\n+LL |     T1<1>::C;\n+   |       ^ ^\n+   |\n+help: use `::<...>` instead of `<...>` to specify type or const arguments\n+   |\n+LL |     T1::<1>::C;\n+   |       ^^\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+  --> $DIR/issue-82566-1.rs:19:9\n+   |\n+LL |     T2<1, 2>::C;\n+   |         ^ expected one of `.`, `;`, `?`, `}`, or an operator\n+   |\n+help: use `::<...>` instead of `<...>` to specify type or const arguments\n+   |\n+LL |     T2::<1, 2>::C;\n+   |       ^^\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n+  --> $DIR/issue-82566-1.rs:20:9\n+   |\n+LL |     T3<1, 2, 3>::C;\n+   |         ^ expected one of `.`, `;`, `?`, `}`, or an operator\n+   |\n+help: use `::<...>` instead of `<...>` to specify type or const arguments\n+   |\n+LL |     T3::<1, 2, 3>::C;\n+   |       ^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "80c8034bd0adff49f2c8dc483b439d9a58a14525", "filename": "src/test/ui/suggestions/issue-82566-2.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-2.rs?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -0,0 +1,31 @@\n+struct Foo1<const N1: usize>;\n+struct Foo2<const N1: usize, const N2: usize>;\n+struct Foo3<const N1: usize, const N2: usize, const N3: usize>;\n+\n+impl<const N1: usize> Foo1<N1> {\n+    const SUM: usize = N1;\n+}\n+\n+impl<const N1: usize, const N2: usize> Foo2<N1, N2> {\n+    const SUM: usize = N1 + N2;\n+}\n+\n+impl<const N1: usize, const N2: usize, const N3: usize> Foo3<N1, N2, N3> {\n+    const SUM: usize = N1 + N2 + N3;\n+}\n+\n+fn foo1() -> [(); Foo1<10>::SUM] { //~ ERROR: comparison operators cannot be chained\n+    todo!()\n+}\n+\n+fn foo2() -> [(); Foo2<10, 20>::SUM] {\n+    //~^ ERROR: expected one of `.`, `?`, `]`, or an operator, found `,`\n+    todo!()\n+}\n+\n+fn foo3() -> [(); Foo3<10, 20, 30>::SUM] {\n+    //~^ ERROR: expected one of `.`, `?`, `]`, or an operator, found `,`\n+    todo!()\n+}\n+\n+fn main() {}"}, {"sha": "ea391ee078c8154c7440acbea7680dcf03589f25", "filename": "src/test/ui/suggestions/issue-82566-2.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/906e53520505acbb3948be594135c60a16b68b81/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-82566-2.stderr?ref=906e53520505acbb3948be594135c60a16b68b81", "patch": "@@ -0,0 +1,35 @@\n+error: comparison operators cannot be chained\n+  --> $DIR/issue-82566-2.rs:17:23\n+   |\n+LL | fn foo1() -> [(); Foo1<10>::SUM] {\n+   |                       ^  ^\n+   |\n+help: use `::<...>` instead of `<...>` to specify type or const arguments\n+   |\n+LL | fn foo1() -> [(); Foo1::<10>::SUM] {\n+   |                       ^^\n+\n+error: expected one of `.`, `?`, `]`, or an operator, found `,`\n+  --> $DIR/issue-82566-2.rs:21:26\n+   |\n+LL | fn foo2() -> [(); Foo2<10, 20>::SUM] {\n+   |                          ^ expected one of `.`, `?`, `]`, or an operator\n+   |\n+help: use `::<...>` instead of `<...>` to specify type or const arguments\n+   |\n+LL | fn foo2() -> [(); Foo2::<10, 20>::SUM] {\n+   |                       ^^\n+\n+error: expected one of `.`, `?`, `]`, or an operator, found `,`\n+  --> $DIR/issue-82566-2.rs:26:26\n+   |\n+LL | fn foo3() -> [(); Foo3<10, 20, 30>::SUM] {\n+   |                          ^ expected one of `.`, `?`, `]`, or an operator\n+   |\n+help: use `::<...>` instead of `<...>` to specify type or const arguments\n+   |\n+LL | fn foo3() -> [(); Foo3::<10, 20, 30>::SUM] {\n+   |                       ^^\n+\n+error: aborting due to 3 previous errors\n+"}]}