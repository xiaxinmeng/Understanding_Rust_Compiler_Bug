{"sha": "3f10e6c86d9d602a821b3156266978c33a214965", "node_id": "C_kwDOAAsO6NoAKDNmMTBlNmM4NmQ5ZDYwMmE4MjFiMzE1NjI2Njk3OGMzM2EyMTQ5NjU", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-08-15T10:47:05Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-08-15T10:47:05Z"}, "message": "Say that the identity holds only for all finite numbers (aka not NaN)", "tree": {"sha": "a8edac6290af2ae1d6d00066eb5ce176010ba90a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8edac6290af2ae1d6d00066eb5ce176010ba90a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f10e6c86d9d602a821b3156266978c33a214965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f10e6c86d9d602a821b3156266978c33a214965", "html_url": "https://github.com/rust-lang/rust/commit/3f10e6c86d9d602a821b3156266978c33a214965", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f10e6c86d9d602a821b3156266978c33a214965/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1e251024de877f1746e02f856ccb2f666800f5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1e251024de877f1746e02f856ccb2f666800f5e", "html_url": "https://github.com/rust-lang/rust/commit/a1e251024de877f1746e02f856ccb2f666800f5e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "dd956e2aa9a4d8bc063c01ee0678b9e27442b81f", "filename": "library/core/src/num/f32.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f10e6c86d9d602a821b3156266978c33a214965/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f10e6c86d9d602a821b3156266978c33a214965/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ff32.rs?ref=3f10e6c86d9d602a821b3156266978c33a214965", "patch": "@@ -688,7 +688,7 @@ impl f32 {\n     ///  - if `self` is [`MAX`] or [`INFINITY`], this returns [`INFINITY`];\n     ///  - otherwise the unique least value greater than `self` is returned.\n     ///\n-    /// The identity `x.next_up() == -(-x).next_down()` holds for all `x`. When `x`\n+    /// The identity `x.next_up() == -(-x).next_down()` holds for all non-NaN `x`. When `x`\n     /// is finite `x == x.next_up().next_down()` also holds.\n     ///\n     /// ```rust\n@@ -738,7 +738,7 @@ impl f32 {\n     ///  - if `self` is [`MIN`] or [`NEG_INFINITY`], this returns [`NEG_INFINITY`];\n     ///  - otherwise the unique greatest value less than `self` is returned.\n     ///\n-    /// The identity `x.next_down() == -(-x).next_up()` holds for all `x`. When `x`\n+    /// The identity `x.next_down() == -(-x).next_up()` holds for all non-NaN `x`. When `x`\n     /// is finite `x == x.next_down().next_up()` also holds.\n     ///\n     /// ```rust"}, {"sha": "bf11ada4f62280097ec7fe96c28131259198d185", "filename": "library/core/src/num/f64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f10e6c86d9d602a821b3156266978c33a214965/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f10e6c86d9d602a821b3156266978c33a214965/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ff64.rs?ref=3f10e6c86d9d602a821b3156266978c33a214965", "patch": "@@ -698,7 +698,7 @@ impl f64 {\n     ///  - if `self` is [`MAX`] or [`INFINITY`], this returns [`INFINITY`];\n     ///  - otherwise the unique least value greater than `self` is returned.\n     ///\n-    /// The identity `x.next_up() == -(-x).next_down()` holds for all `x`. When `x`\n+    /// The identity `x.next_up() == -(-x).next_down()` holds for all non-NaN `x`. When `x`\n     /// is finite `x == x.next_up().next_down()` also holds.\n     ///\n     /// ```rust\n@@ -748,7 +748,7 @@ impl f64 {\n     ///  - if `self` is [`MIN`] or [`NEG_INFINITY`], this returns [`NEG_INFINITY`];\n     ///  - otherwise the unique greatest value less than `self` is returned.\n     ///\n-    /// The identity `x.next_down() == -(-x).next_up()` holds for all `x`. When `x`\n+    /// The identity `x.next_down() == -(-x).next_up()` holds for all non-NaN `x`. When `x`\n     /// is finite `x == x.next_down().next_up()` also holds.\n     ///\n     /// ```rust"}]}