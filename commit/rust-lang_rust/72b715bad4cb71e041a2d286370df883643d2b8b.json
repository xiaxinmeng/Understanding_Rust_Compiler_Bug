{"sha": "72b715bad4cb71e041a2d286370df883643d2b8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYjcxNWJhZDRjYjcxZTA0MWEyZDI4NjM3MGRmODgzNjQzZDJiOGI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-03-28T15:02:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-28T15:02:49Z"}, "message": "Merge pull request #2571 from topecongiro/issue-2569\n\nAvoid panicking on macro call with a single comma", "tree": {"sha": "e72fb72a9e98d8a937e9e601955f6ad35875b49a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e72fb72a9e98d8a937e9e601955f6ad35875b49a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72b715bad4cb71e041a2d286370df883643d2b8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJau66ZCRBK7hj4Ov3rIwAAdHIIAG9S+nhQGsUz5IgBGC9NbKmm\nNHoLC3jSV0VDGAEgWqaBgrkDPqrVD3VRJVMuuz12BQU0BtsXq5//nZh/HIsxUu7+\npx+X68LgyYPivuAwbs2PZ6qCXZnVNKPCbTfwuspeQaPXm5DN6zseYRRKwvBMnYuU\nsEn+hK/bnfk9RsotENQUgr2KhxYwlgLmJGYy3Ry5xIXXRqNMFS77KbowexX9X7ET\nlqPfJuw52MYbyCAoNyFmzJbVcPQ6WDqn9aMtGA3XL/CqNVXgQlZz+eRM5yYW3k39\nUwriAkw7ezMdVlgxIoBZGD4paf1XOpcZYFMlfxW8O/8kW3PhpYV2FjpytX1TV6U=\n=GgWN\n-----END PGP SIGNATURE-----\n", "payload": "tree e72fb72a9e98d8a937e9e601955f6ad35875b49a\nparent 1644b174a73658b211ed700b3dad4223c9c937b9\nparent a49e00b4d7132dea8004de74b3580f369debd32a\nauthor Nick Cameron <nrc@ncameron.org> 1522249369 +0200\ncommitter GitHub <noreply@github.com> 1522249369 +0200\n\nMerge pull request #2571 from topecongiro/issue-2569\n\nAvoid panicking on macro call with a single comma"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72b715bad4cb71e041a2d286370df883643d2b8b", "html_url": "https://github.com/rust-lang/rust/commit/72b715bad4cb71e041a2d286370df883643d2b8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72b715bad4cb71e041a2d286370df883643d2b8b/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1644b174a73658b211ed700b3dad4223c9c937b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1644b174a73658b211ed700b3dad4223c9c937b9", "html_url": "https://github.com/rust-lang/rust/commit/1644b174a73658b211ed700b3dad4223c9c937b9"}, {"sha": "a49e00b4d7132dea8004de74b3580f369debd32a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49e00b4d7132dea8004de74b3580f369debd32a", "html_url": "https://github.com/rust-lang/rust/commit/a49e00b4d7132dea8004de74b3580f369debd32a"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "10f03e86b3d02ead992a3263722fa45a043f13b4", "filename": "src/macros.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/72b715bad4cb71e041a2d286370df883643d2b8b/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b715bad4cb71e041a2d286370df883643d2b8b/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=72b715bad4cb71e041a2d286370df883643d2b8b", "patch": "@@ -58,8 +58,7 @@ pub enum MacroArg {\n     Expr(ptr::P<ast::Expr>),\n     Ty(ptr::P<ast::Ty>),\n     Pat(ptr::P<ast::Pat>),\n-    // `parse_item` returns `Option<ptr::P<ast::Item>>`.\n-    Item(Option<ptr::P<ast::Item>>),\n+    Item(ptr::P<ast::Item>),\n }\n \n impl Rewrite for ast::Item {\n@@ -78,14 +77,14 @@ impl Rewrite for MacroArg {\n             MacroArg::Expr(ref expr) => expr.rewrite(context, shape),\n             MacroArg::Ty(ref ty) => ty.rewrite(context, shape),\n             MacroArg::Pat(ref pat) => pat.rewrite(context, shape),\n-            MacroArg::Item(ref item) => item.as_ref().and_then(|item| item.rewrite(context, shape)),\n+            MacroArg::Item(ref item) => item.rewrite(context, shape),\n         }\n     }\n }\n \n fn parse_macro_arg(parser: &mut Parser) -> Option<MacroArg> {\n     macro_rules! parse_macro_arg {\n-        ($macro_arg:ident, $parser:ident) => {\n+        ($macro_arg:ident, $parser:ident, $f:expr) => {\n             let mut cloned_parser = (*parser).clone();\n             match cloned_parser.$parser() {\n                 Ok(x) => {\n@@ -94,7 +93,7 @@ fn parse_macro_arg(parser: &mut Parser) -> Option<MacroArg> {\n                     } else {\n                         // Parsing succeeded.\n                         *parser = cloned_parser;\n-                        return Some(MacroArg::$macro_arg(x.clone()));\n+                        return Some(MacroArg::$macro_arg($f(x)?));\n                     }\n                 }\n                 Err(mut e) => {\n@@ -105,10 +104,11 @@ fn parse_macro_arg(parser: &mut Parser) -> Option<MacroArg> {\n         };\n     }\n \n-    parse_macro_arg!(Expr, parse_expr);\n-    parse_macro_arg!(Ty, parse_ty);\n-    parse_macro_arg!(Pat, parse_pat);\n-    parse_macro_arg!(Item, parse_item);\n+    parse_macro_arg!(Expr, parse_expr, |x: ptr::P<ast::Expr>| Some(x));\n+    parse_macro_arg!(Ty, parse_ty, |x: ptr::P<ast::Ty>| Some(x));\n+    parse_macro_arg!(Pat, parse_pat, |x: ptr::P<ast::Pat>| Some(x));\n+    // `parse_item` returns `Option<ptr::P<ast::Item>>`.\n+    parse_macro_arg!(Item, parse_item, |x: Option<ptr::P<ast::Item>>| x);\n \n     None\n }"}, {"sha": "41fa0da8dd1c502f7795a9cd1d04a246c995a7a9", "filename": "src/spanned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72b715bad4cb71e041a2d286370df883643d2b8b/src%2Fspanned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b715bad4cb71e041a2d286370df883643d2b8b/src%2Fspanned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fspanned.rs?ref=72b715bad4cb71e041a2d286370df883643d2b8b", "patch": "@@ -187,7 +187,7 @@ impl Spanned for MacroArg {\n             MacroArg::Expr(ref expr) => expr.span(),\n             MacroArg::Ty(ref ty) => ty.span(),\n             MacroArg::Pat(ref pat) => pat.span(),\n-            MacroArg::Item(ref item) => item.as_ref().unwrap().span(),\n+            MacroArg::Item(ref item) => item.span(),\n         }\n     }\n }"}, {"sha": "030c56b5f8297139dc1e7e1fe8686d828507b4df", "filename": "tests/source/macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72b715bad4cb71e041a2d286370df883643d2b8b/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b715bad4cb71e041a2d286370df883643d2b8b/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=72b715bad4cb71e041a2d286370df883643d2b8b", "patch": "@@ -10,6 +10,8 @@ peg_file!   modname  (\"mygrammarfile.rustpeg\");\n fn main() {\n     foo! ( );\n \n+    foo!(,);\n+\n     bar!( a , b , c );\n \n     bar!( a , b , c , );"}, {"sha": "0a103d5d61b2dc86e3b2511dc0cb199473ec56de", "filename": "tests/target/macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72b715bad4cb71e041a2d286370df883643d2b8b/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b715bad4cb71e041a2d286370df883643d2b8b/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=72b715bad4cb71e041a2d286370df883643d2b8b", "patch": "@@ -15,6 +15,8 @@ peg_file! modname(\"mygrammarfile.rustpeg\");\n fn main() {\n     foo!();\n \n+    foo!(,);\n+\n     bar!(a, b, c);\n \n     bar!(a, b, c,);"}]}