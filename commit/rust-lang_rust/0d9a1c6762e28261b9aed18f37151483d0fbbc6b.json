{"sha": "0d9a1c6762e28261b9aed18f37151483d0fbbc6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkOWExYzY3NjJlMjgyNjFiOWFlZDE4ZjM3MTUxNDgzZDBmYmJjNmI=", "commit": {"author": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-04-26T05:43:30Z"}, "committer": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-04-26T05:43:30Z"}, "message": "rustdoc: Fix typo for maybe_inline_local fn", "tree": {"sha": "75f5b87a5c3602d15e82c374c854eb0ac78b55df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75f5b87a5c3602d15e82c374c854eb0ac78b55df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d9a1c6762e28261b9aed18f37151483d0fbbc6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a1c6762e28261b9aed18f37151483d0fbbc6b", "html_url": "https://github.com/rust-lang/rust/commit/0d9a1c6762e28261b9aed18f37151483d0fbbc6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a1c6762e28261b9aed18f37151483d0fbbc6b/comments", "author": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da10c01214a3d3ebec65b8ba6effada92a0673f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5da10c01214a3d3ebec65b8ba6effada92a0673f", "html_url": "https://github.com/rust-lang/rust/commit/5da10c01214a3d3ebec65b8ba6effada92a0673f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c9071eea78b7988aeaa6b0621d3663956990f53a", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a1c6762e28261b9aed18f37151483d0fbbc6b/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a1c6762e28261b9aed18f37151483d0fbbc6b/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=0d9a1c6762e28261b9aed18f37151483d0fbbc6b", "patch": "@@ -150,7 +150,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         om\n     }\n \n-    /// Tries to resolve the target of a `crate use` statement and inlines the\n+    /// Tries to resolve the target of a `pub use` statement and inlines the\n     /// target if it is defined locally and would not be documented otherwise,\n     /// or when it is specifically requested with `please_inline`.\n     /// (the latter is the case when the import is marked `doc(inline)`)\n@@ -183,7 +183,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             || use_attrs.lists(sym::doc).has_word(sym::hidden);\n \n         // For cross-crate impl inlining we need to know whether items are\n-        // reachable in documentation -- a previously nonreachable item can be\n+        // reachable in documentation -- a previously unreachable item can be\n         // made reachable by cross-crate inlining which we're checking here.\n         // (this is done here because we need to know this upfront).\n         if !res_did.is_local() && !is_no_inline {"}]}