{"sha": "23beda44ea14342f608abf6b3d67a703c1fe9e80", "node_id": "C_kwDOAAsO6NoAKDIzYmVkYTQ0ZWExNDM0MmY2MDhhYmY2YjNkNjdhNzAzYzFmZTllODA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-07T18:57:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-07T18:57:44Z"}, "message": "Rollup merge of #108581 - jfgoog:include-mingw-linker, r=petrochenkov\n\nAdd a new config flag, dist.include-mingw-linker.\n\nThe flag controls whether to copy the linker, DLLs, and various libraries from MinGW into the rustc toolchain.\n\nIt applies only when the host or target is pc-windows-gnu.\n\nThe flag is true by default to preserve existing behavior.", "tree": {"sha": "d9b1475ebfd7e083c4b89cc87d25964a2332800e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9b1475ebfd7e083c4b89cc87d25964a2332800e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23beda44ea14342f608abf6b3d67a703c1fe9e80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkB4koCRBK7hj4Ov3rIwAA4U8IACkdDL1jq31jzbOypzal6zFg\nFkEo9yjuRpHIvltjC6pkC7ACsPjc4z6J7FWRBBlm8N1vMnjGNTHjOqRjC4oKHXMp\nEwcUfDWD3weJui8V+eMl6Bivk0BW1ayp9SMhIQDGPneFj8SDgZIxbFka2L51HW2q\ns2gmyTmC79mNh/VV4xHuCGr+W8WPFHIdfyf9UanHqWaIq2cUiBVWR0Cm8SRt8ZTU\npDISWAcbEIDbsArZtl9weILcZSTqy89L1OCRDGQioBesMFCtyYRsu8LfAH8e1bNW\nbWk8gxmtj5l71lkFKBN+rAu457DueXby06M/RuPUhsMq1QWNhEYcfep1wrTFBW4=\n=XBwE\n-----END PGP SIGNATURE-----\n", "payload": "tree d9b1475ebfd7e083c4b89cc87d25964a2332800e\nparent 14260c83acd2d5f689579341151ec610d3de3d86\nparent 848f6f9b0d25229a974faf202ebec5d0fb0acf50\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678215464 +0100\ncommitter GitHub <noreply@github.com> 1678215464 +0100\n\nRollup merge of #108581 - jfgoog:include-mingw-linker, r=petrochenkov\n\nAdd a new config flag, dist.include-mingw-linker.\n\nThe flag controls whether to copy the linker, DLLs, and various libraries from MinGW into the rustc toolchain.\n\nIt applies only when the host or target is pc-windows-gnu.\n\nThe flag is true by default to preserve existing behavior.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23beda44ea14342f608abf6b3d67a703c1fe9e80", "html_url": "https://github.com/rust-lang/rust/commit/23beda44ea14342f608abf6b3d67a703c1fe9e80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23beda44ea14342f608abf6b3d67a703c1fe9e80/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14260c83acd2d5f689579341151ec610d3de3d86", "url": "https://api.github.com/repos/rust-lang/rust/commits/14260c83acd2d5f689579341151ec610d3de3d86", "html_url": "https://github.com/rust-lang/rust/commit/14260c83acd2d5f689579341151ec610d3de3d86"}, {"sha": "848f6f9b0d25229a974faf202ebec5d0fb0acf50", "url": "https://api.github.com/repos/rust-lang/rust/commits/848f6f9b0d25229a974faf202ebec5d0fb0acf50", "html_url": "https://github.com/rust-lang/rust/commit/848f6f9b0d25229a974faf202ebec5d0fb0acf50"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "dee0d8f254b63596dfded6caf64c7c197dbcb9ab", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23beda44ea14342f608abf6b3d67a703c1fe9e80/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/23beda44ea14342f608abf6b3d67a703c1fe9e80/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=23beda44ea14342f608abf6b3d67a703c1fe9e80", "patch": "@@ -659,6 +659,10 @@ changelog-seen = 2\n # Build compiler with the optimization enabled and -Zvalidate-mir, currently only for `std`\n #validate-mir-opts = 3\n \n+# Copy the linker, DLLs, and various libraries from MinGW into the rustc toolchain.\n+# Only applies when the host or target is pc-windows-gnu.\n+#include-mingw-linker = true\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "4f417d36511ba6af6bffcae40a1e29b61711d0f8", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23beda44ea14342f608abf6b3d67a703c1fe9e80/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23beda44ea14342f608abf6b3d67a703c1fe9e80/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=23beda44ea14342f608abf6b3d67a703c1fe9e80", "patch": "@@ -190,6 +190,7 @@ pub struct Config {\n     pub dist_sign_folder: Option<PathBuf>,\n     pub dist_upload_addr: Option<String>,\n     pub dist_compression_formats: Option<Vec<String>>,\n+    pub dist_include_mingw_linker: bool,\n \n     // libstd features\n     pub backtrace: bool, // support for RUST_BACKTRACE\n@@ -700,6 +701,7 @@ define_config! {\n         src_tarball: Option<bool> = \"src-tarball\",\n         missing_tools: Option<bool> = \"missing-tools\",\n         compression_formats: Option<Vec<String>> = \"compression-formats\",\n+        include_mingw_linker: Option<bool> = \"include-mingw-linker\",\n     }\n }\n \n@@ -816,6 +818,7 @@ impl Config {\n         config.rust_codegen_backends = vec![INTERNER.intern_str(\"llvm\")];\n         config.deny_warnings = true;\n         config.bindir = \"bin\".into();\n+        config.dist_include_mingw_linker = true;\n \n         // set by build.rs\n         config.build = TargetSelection::from_user(&env!(\"BUILD_TRIPLE\"));\n@@ -1299,6 +1302,7 @@ impl Config {\n             config.dist_compression_formats = t.compression_formats;\n             set(&mut config.rust_dist_src, t.src_tarball);\n             set(&mut config.missing_tools, t.missing_tools);\n+            set(&mut config.dist_include_mingw_linker, t.include_mingw_linker)\n         }\n \n         if let Some(r) = build.rustfmt {"}, {"sha": "c9384004100b20ea77f09d60cf710d3a0891f080", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23beda44ea14342f608abf6b3d67a703c1fe9e80/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23beda44ea14342f608abf6b3d67a703c1fe9e80/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=23beda44ea14342f608abf6b3d67a703c1fe9e80", "patch": "@@ -324,7 +324,7 @@ impl Step for Mingw {\n     /// without any extra installed software (e.g., we bundle gcc, libraries, etc).\n     fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {\n         let host = self.host;\n-        if !host.ends_with(\"pc-windows-gnu\") {\n+        if !host.ends_with(\"pc-windows-gnu\") || !builder.config.dist_include_mingw_linker {\n             return None;\n         }\n \n@@ -380,7 +380,7 @@ impl Step for Rustc {\n         // anything requiring us to distribute a license, but it's likely the\n         // install will *also* include the rust-mingw package, which also needs\n         // licenses, so to be safe we just include it here in all MinGW packages.\n-        if host.ends_with(\"pc-windows-gnu\") {\n+        if host.ends_with(\"pc-windows-gnu\") && builder.config.dist_include_mingw_linker {\n             make_win_dist(tarball.image_dir(), &tmpdir(builder), host, builder);\n             tarball.add_dir(builder.src.join(\"src/etc/third-party\"), \"share/doc\");\n         }"}]}