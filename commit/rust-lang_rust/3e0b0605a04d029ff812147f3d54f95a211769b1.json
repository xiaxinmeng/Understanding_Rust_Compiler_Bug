{"sha": "3e0b0605a04d029ff812147f3d54f95a211769b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMGIwNjA1YTA0ZDAyOWZmODEyMTQ3ZjNkNTRmOTVhMjExNzY5YjE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-03T22:57:45Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-19T03:27:58Z"}, "message": "Const-check functions in a `const` impl", "tree": {"sha": "0304dd4a0c0db116e4203dda54c72a7fb062b3e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0304dd4a0c0db116e4203dda54c72a7fb062b3e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e0b0605a04d029ff812147f3d54f95a211769b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e0b0605a04d029ff812147f3d54f95a211769b1", "html_url": "https://github.com/rust-lang/rust/commit/3e0b0605a04d029ff812147f3d54f95a211769b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e0b0605a04d029ff812147f3d54f95a211769b1/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "html_url": "https://github.com/rust-lang/rust/commit/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "b4bbcd1ca4f9ce5e38426eee05ca5808d0ea57ac", "filename": "src/librustc_mir/const_eval/fn_queries.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3e0b0605a04d029ff812147f3d54f95a211769b1/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0b0605a04d029ff812147f3d54f95a211769b1/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs?ref=3e0b0605a04d029ff812147f3d54f95a211769b1", "patch": "@@ -26,6 +26,8 @@ pub fn is_const_fn(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n \n /// Whether the `def_id` is an unstable const fn and what feature gate is necessary to enable it\n pub fn is_unstable_const_fn(tcx: TyCtxt<'_>, def_id: DefId) -> Option<Symbol> {\n+    // FIXME: check for `rustc_const_unstable` on the containing impl. This should be done by\n+    // propagating it down so it is return by the `lookup_const_stability` query.\n     if tcx.is_const_fn_raw(def_id) {\n         let const_stab = tcx.lookup_const_stability(def_id)?;\n         if const_stab.level.is_unstable() { Some(const_stab.feature) } else { None }\n@@ -111,7 +113,18 @@ pub fn provide(providers: &mut Providers<'_>) {\n         if let Some(whitelisted) = is_const_intrinsic(tcx, def_id) {\n             whitelisted\n         } else if let Some(fn_like) = FnLikeNode::from_node(node) {\n-            fn_like.constness() == hir::Constness::Const\n+            if fn_like.constness() == hir::Constness::Const {\n+                return true;\n+            }\n+\n+            // If the function itself is not annotated with `const`, it may still be a `const fn`\n+            // if it resides in a const trait impl.\n+            let parent_id = tcx.hir().get_parent_did(hir_id);\n+            if def_id != parent_id && !parent_id.is_top_level_module() {\n+                is_const_impl_raw(tcx, LocalDefId::from_def_id(parent_id))\n+            } else {\n+                false\n+            }\n         } else if let hir::Node::Ctor(_) = node {\n             true\n         } else {"}]}