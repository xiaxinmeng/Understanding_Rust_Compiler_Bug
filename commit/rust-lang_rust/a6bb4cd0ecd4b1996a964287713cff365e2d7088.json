{"sha": "a6bb4cd0ecd4b1996a964287713cff365e2d7088", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YmI0Y2QwZWNkNGIxOTk2YTk2NDI4NzcxM2NmZjM2NWUyZDcwODg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-12T18:02:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-12T21:03:30Z"}, "message": "Fix completion tests", "tree": {"sha": "d8c4e9e376e71a62fda48dd976be828d60edc4c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8c4e9e376e71a62fda48dd976be828d60edc4c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6bb4cd0ecd4b1996a964287713cff365e2d7088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6bb4cd0ecd4b1996a964287713cff365e2d7088", "html_url": "https://github.com/rust-lang/rust/commit/a6bb4cd0ecd4b1996a964287713cff365e2d7088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6bb4cd0ecd4b1996a964287713cff365e2d7088/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e", "html_url": "https://github.com/rust-lang/rust/commit/fab40db8bdfdac5cde5789f74d1ec28e60a8bb7e"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ed55baa64459ef0247ba52aae3043d1ff4b4b029", "filename": "crates/ra_ide/src/completion/complete_scope.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6bb4cd0ecd4b1996a964287713cff365e2d7088/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6bb4cd0ecd4b1996a964287713cff365e2d7088/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=a6bb4cd0ecd4b1996a964287713cff365e2d7088", "patch": "@@ -42,6 +42,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux(x: i32)\",\n+                trigger_call_info: true,\n             },\n             CompletionItem {\n                 label: \"x\",\n@@ -844,6 +845,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux(x: i32)\",\n+                trigger_call_info: true,\n             },\n             CompletionItem {\n                 label: \"x\","}, {"sha": "bc0f1aff58b6348815eab6ebf9fbe340cb325eca", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6bb4cd0ecd4b1996a964287713cff365e2d7088/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6bb4cd0ecd4b1996a964287713cff365e2d7088/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=a6bb4cd0ecd4b1996a964287713cff365e2d7088", "patch": "@@ -80,6 +80,9 @@ impl fmt::Debug for CompletionItem {\n         if self.deprecated {\n             s.field(\"deprecated\", &true);\n         }\n+        if self.trigger_call_info {\n+            s.field(\"trigger_call_info\", &true);\n+        }\n         s.finish()\n     }\n }"}, {"sha": "a4e9aefe2cccbbe35125ffec1b6702601003832a", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a6bb4cd0ecd4b1996a964287713cff365e2d7088/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6bb4cd0ecd4b1996a964287713cff365e2d7088/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=a6bb4cd0ecd4b1996a964287713cff365e2d7088", "patch": "@@ -510,6 +510,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"with_args\",\n                 detail: \"fn with_args(x: i32, y: String)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###\n@@ -566,6 +567,7 @@ mod tests {\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(&self, x: i32)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###\n@@ -600,6 +602,7 @@ mod tests {\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(&self, x: i32)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###\n@@ -718,6 +721,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###\n@@ -747,6 +751,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###\n@@ -775,6 +780,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###\n@@ -803,6 +809,7 @@ mod tests {\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo(xs: Ve<i128>)\",\n+                trigger_call_info: true,\n             },\n         ]\n         \"###"}]}