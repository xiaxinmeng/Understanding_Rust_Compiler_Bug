{"sha": "277b59c0b373be0cd1c4448a7539329fa44a04ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3N2I1OWMwYjM3M2JlMGNkMWM0NDQ4YTc1MzkzMjlmYTQ0YTA0YWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-18T09:35:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-18T09:35:06Z"}, "message": "Auto merge of #1715 - RalfJung:rustup, r=RalfJung\n\nrustup", "tree": {"sha": "c97da1c5f271261ceccf9b32aef16ed770ca4d73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97da1c5f271261ceccf9b32aef16ed770ca4d73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/277b59c0b373be0cd1c4448a7539329fa44a04ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/277b59c0b373be0cd1c4448a7539329fa44a04ae", "html_url": "https://github.com/rust-lang/rust/commit/277b59c0b373be0cd1c4448a7539329fa44a04ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/277b59c0b373be0cd1c4448a7539329fa44a04ae/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b84b3a051c32c33a4a895c0c41474244aab3114c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b84b3a051c32c33a4a895c0c41474244aab3114c", "html_url": "https://github.com/rust-lang/rust/commit/b84b3a051c32c33a4a895c0c41474244aab3114c"}, {"sha": "2672baafe1d52cdcb0b7b84f77c9950771be7332", "url": "https://api.github.com/repos/rust-lang/rust/commits/2672baafe1d52cdcb0b7b84f77c9950771be7332", "html_url": "https://github.com/rust-lang/rust/commit/2672baafe1d52cdcb0b7b84f77c9950771be7332"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "189317a54a356dcab2b54b01d449c52496a88cd6", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/277b59c0b373be0cd1c4448a7539329fa44a04ae/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/277b59c0b373be0cd1c4448a7539329fa44a04ae/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=277b59c0b373be0cd1c4448a7539329fa44a04ae", "patch": "@@ -1 +1 @@\n-a143517d44cac50b20cbd3a0b579addab40dd399\n+d1462d8558cf4551608457f63d9b999185ebf3bf"}, {"sha": "45c0996355bffd43238dd1b4a7436aa395708d1e", "filename": "src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/277b59c0b373be0cd1c4448a7539329fa44a04ae/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277b59c0b373be0cd1c4448a7539329fa44a04ae/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=277b59c0b373be0cd1c4448a7539329fa44a04ae", "patch": "@@ -54,7 +54,7 @@ pub fn report_error<'tcx, 'mir>(\n ) -> Option<i64> {\n     use InterpError::*;\n \n-    let (title, helps) = match &e.kind {\n+    let (title, helps) = match &e.kind() {\n         MachineStop(info) => {\n             let info = info.downcast_ref::<TerminationInfo>().expect(\"invalid MachineStop payload\");\n             use TerminationInfo::*;\n@@ -81,7 +81,7 @@ pub fn report_error<'tcx, 'mir>(\n             (title, helps)\n         }\n         _ => {\n-            let title = match e.kind {\n+            let title = match e.kind() {\n                 Unsupported(_) =>\n                     \"unsupported operation\",\n                 UndefinedBehavior(_) =>\n@@ -93,11 +93,11 @@ pub fn report_error<'tcx, 'mir>(\n                 _ =>\n                     bug!(\"This error should be impossible in Miri: {}\", e),\n             };\n-            let helps = match e.kind {\n+            let helps = match e.kind() {\n                 Unsupported(UnsupportedOpInfo::NoMirFor(..)) =>\n                     vec![format!(\"make sure to use a Miri sysroot, which you can prepare with `cargo miri setup`\")],\n                 Unsupported(UnsupportedOpInfo::ReadBytesAsPointer | UnsupportedOpInfo::ThreadLocalStatic(_) | UnsupportedOpInfo::ReadExternStatic(_)) =>\n-                    panic!(\"Error should never be raised by Miri: {:?}\", e.kind),\n+                    panic!(\"Error should never be raised by Miri: {:?}\", e.kind()),\n                 Unsupported(_) =>\n                     vec![format!(\"this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\")],\n                 UndefinedBehavior(UndefinedBehaviorInfo::AlignmentCheckFailed { .. })\n@@ -133,7 +133,7 @@ pub fn report_error<'tcx, 'mir>(\n     }\n \n     // Extra output to help debug specific issues.\n-    match e.kind {\n+    match e.kind() {\n         UndefinedBehavior(UndefinedBehaviorInfo::InvalidUninitBytes(Some(access))) => {\n             eprintln!(\n                 \"Uninitialized read occurred at offsets 0x{:x}..0x{:x} into this allocation:\","}, {"sha": "16fe5d5f20a1fbbf0139df62f08c4ff3d23ec9dc", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/277b59c0b373be0cd1c4448a7539329fa44a04ae/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277b59c0b373be0cd1c4448a7539329fa44a04ae/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=277b59c0b373be0cd1c4448a7539329fa44a04ae", "patch": "@@ -208,7 +208,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n         Ok(v) => v,\n         Err(err) => {\n             err.print_backtrace();\n-            panic!(\"Miri initialization error: {}\", err.kind)\n+            panic!(\"Miri initialization error: {}\", err.kind())\n         }\n     };\n "}]}