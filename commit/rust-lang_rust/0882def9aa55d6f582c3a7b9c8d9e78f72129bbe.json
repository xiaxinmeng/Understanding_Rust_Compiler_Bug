{"sha": "0882def9aa55d6f582c3a7b9c8d9e78f72129bbe", "node_id": "C_kwDOAAsO6NoAKDA4ODJkZWY5YWE1NWQ2ZjU4MmMzYTdiOWM4ZDllNzhmNzIxMjliYmU", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-03-22T10:58:08Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-03-22T10:58:08Z"}, "message": "review", "tree": {"sha": "91d4cb15c24caba07e395032dba9be842659a563", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91d4cb15c24caba07e395032dba9be842659a563"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0882def9aa55d6f582c3a7b9c8d9e78f72129bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0882def9aa55d6f582c3a7b9c8d9e78f72129bbe", "html_url": "https://github.com/rust-lang/rust/commit/0882def9aa55d6f582c3a7b9c8d9e78f72129bbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0882def9aa55d6f582c3a7b9c8d9e78f72129bbe/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b44c77583fec91c433915ec224545c650b799e", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b44c77583fec91c433915ec224545c650b799e", "html_url": "https://github.com/rust-lang/rust/commit/45b44c77583fec91c433915ec224545c650b799e"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "af108ab6f309f0df5800f0273dbaaee053588a21", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0882def9aa55d6f582c3a7b9c8d9e78f72129bbe/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0882def9aa55d6f582c3a7b9c8d9e78f72129bbe/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=0882def9aa55d6f582c3a7b9c8d9e78f72129bbe", "patch": "@@ -212,7 +212,7 @@ pub trait TypeErrCtxtExt<'tcx> {\n \n     fn extract_callable_info(\n         &self,\n-        hir_id: LocalDefId,\n+        body_id: LocalDefId,\n         param_env: ty::ParamEnv<'tcx>,\n         found: Ty<'tcx>,\n     ) -> Option<(DefIdOrName, Ty<'tcx>, Vec<Ty<'tcx>>)>;\n@@ -1112,7 +1112,6 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n     /// Extracts information about a callable type for diagnostics. This is a\n     /// heuristic -- it doesn't necessarily mean that a type is always callable,\n     /// because the callable type must also be well-formed to be called.\n-    // FIXME(vincenzopalazzo): move the HirId to a LocalDefId\n     fn extract_callable_info(\n         &self,\n         body_id: LocalDefId,"}]}