{"sha": "e0e617adaa89c759beccf74bc0f9eafaed44de22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZTYxN2FkYWE4OWM3NTliZWNjZjc0YmMwZjllYWZhZWQ0NGRlMjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T09:15:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T09:15:55Z"}, "message": "Auto merge of #6109 - patrickelectric:single_element_for_check, r=flip1995\n\nAdd linter for a single element for loop\n\nchangelog: Fixes #1540, check for vectors that contain a single element in a for loop", "tree": {"sha": "402f9457421ff329279d37cbdbb5cb2722cb6a1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/402f9457421ff329279d37cbdbb5cb2722cb6a1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0e617adaa89c759beccf74bc0f9eafaed44de22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e617adaa89c759beccf74bc0f9eafaed44de22", "html_url": "https://github.com/rust-lang/rust/commit/e0e617adaa89c759beccf74bc0f9eafaed44de22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0e617adaa89c759beccf74bc0f9eafaed44de22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a675778cfb3623a5b4c0b04946ef9ada2a1b5b07", "url": "https://api.github.com/repos/rust-lang/rust/commits/a675778cfb3623a5b4c0b04946ef9ada2a1b5b07", "html_url": "https://github.com/rust-lang/rust/commit/a675778cfb3623a5b4c0b04946ef9ada2a1b5b07"}, {"sha": "ba1ca19c3bec20401a4cb13e5186c4c5952e94cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1ca19c3bec20401a4cb13e5186c4c5952e94cc", "html_url": "https://github.com/rust-lang/rust/commit/ba1ca19c3bec20401a4cb13e5186c4c5952e94cc"}], "stats": {"total": 149, "additions": 133, "deletions": 16}, "files": [{"sha": "a563917332b9d8712651ea3658fb69cec37e02aa", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -1938,6 +1938,7 @@ Released 2018-09-13\n [`single_char_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n [`single_char_push_str`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_char_push_str\n [`single_component_path_imports`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\n+[`single_element_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_element_loop\n [`single_match`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n [`single_match_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else\n [`skip_while_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#skip_while_next"}, {"sha": "1267c5a675e5ade4515223aff45d470e0e171cbb", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -634,6 +634,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &loops::NEEDLESS_RANGE_LOOP,\n         &loops::NEVER_LOOP,\n         &loops::SAME_ITEM_PUSH,\n+        &loops::SINGLE_ELEMENT_LOOP,\n         &loops::WHILE_IMMUTABLE_CONDITION,\n         &loops::WHILE_LET_LOOP,\n         &loops::WHILE_LET_ON_ITERATOR,\n@@ -1368,6 +1369,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&loops::NEEDLESS_RANGE_LOOP),\n         LintId::of(&loops::NEVER_LOOP),\n         LintId::of(&loops::SAME_ITEM_PUSH),\n+        LintId::of(&loops::SINGLE_ELEMENT_LOOP),\n         LintId::of(&loops::WHILE_IMMUTABLE_CONDITION),\n         LintId::of(&loops::WHILE_LET_LOOP),\n         LintId::of(&loops::WHILE_LET_ON_ITERATOR),\n@@ -1669,6 +1671,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&lifetimes::NEEDLESS_LIFETIMES),\n         LintId::of(&loops::EXPLICIT_COUNTER_LOOP),\n         LintId::of(&loops::MUT_RANGE_BOUND),\n+        LintId::of(&loops::SINGLE_ELEMENT_LOOP),\n         LintId::of(&loops::WHILE_LET_LOOP),\n         LintId::of(&manual_strip::MANUAL_STRIP),\n         LintId::of(&manual_unwrap_or::MANUAL_UNWRAP_OR),"}, {"sha": "e50aa9ac15a287cc8f6477205c7450e2445e4b1d", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 68, "deletions": 3, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -4,9 +4,10 @@ use crate::utils::sugg::Sugg;\n use crate::utils::usage::{is_unused, mutated_variables};\n use crate::utils::{\n     contains_name, get_enclosing_block, get_parent_expr, get_trait_def_id, has_iter_method, higher, implements_trait,\n-    is_integer_const, is_no_std_crate, is_refutable, is_type_diagnostic_item, last_path_segment, match_trait_method,\n-    match_type, match_var, multispan_sugg, qpath_res, snippet, snippet_with_applicability, snippet_with_macro_callsite,\n-    span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then, sugg, SpanlessEq,\n+    indent_of, is_integer_const, is_no_std_crate, is_refutable, is_type_diagnostic_item, last_path_segment,\n+    match_trait_method, match_type, match_var, multispan_sugg, qpath_res, single_segment_path, snippet,\n+    snippet_with_applicability, snippet_with_macro_callsite, span_lint, span_lint_and_help, span_lint_and_sugg,\n+    span_lint_and_then, sugg, SpanlessEq,\n };\n use if_chain::if_chain;\n use rustc_ast::ast;\n@@ -452,6 +453,31 @@ declare_clippy_lint! {\n     \"the same item is pushed inside of a for loop\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks whether a for loop has a single element.\n+    ///\n+    /// **Why is this bad?** There is no reason to have a loop of a\n+    /// single element.\n+    /// **Known problems:** None\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// let item1 = 2;\n+    /// for item in &[item1] {\n+    ///     println!(\"{}\", item);\n+    /// }\n+    /// ```\n+    /// could be written as\n+    /// ```rust\n+    /// let item1 = 2;\n+    /// let item = &item1;\n+    /// println!(\"{}\", item);\n+    /// ```\n+    pub SINGLE_ELEMENT_LOOP,\n+    complexity,\n+    \"there is no reason to have a single element loop\"\n+}\n+\n declare_lint_pass!(Loops => [\n     MANUAL_MEMCPY,\n     NEEDLESS_RANGE_LOOP,\n@@ -469,6 +495,7 @@ declare_lint_pass!(Loops => [\n     MUT_RANGE_BOUND,\n     WHILE_IMMUTABLE_CONDITION,\n     SAME_ITEM_PUSH,\n+    SINGLE_ELEMENT_LOOP,\n ]);\n \n impl<'tcx> LateLintPass<'tcx> for Loops {\n@@ -777,6 +804,7 @@ fn check_for_loop<'tcx>(\n     check_for_loop_arg(cx, pat, arg, expr);\n     check_for_loop_over_map_kv(cx, pat, arg, body, expr);\n     check_for_mut_range_bound(cx, arg, body);\n+    check_for_single_element_loop(cx, pat, arg, body, expr);\n     detect_same_item_push(cx, pat, arg, body, expr);\n }\n \n@@ -1866,6 +1894,43 @@ fn check_for_loop_over_map_kv<'tcx>(\n     }\n }\n \n+fn check_for_single_element_loop<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    pat: &'tcx Pat<'_>,\n+    arg: &'tcx Expr<'_>,\n+    body: &'tcx Expr<'_>,\n+    expr: &'tcx Expr<'_>,\n+) {\n+    if_chain! {\n+        if let ExprKind::AddrOf(BorrowKind::Ref, _, ref arg_expr) = arg.kind;\n+        if let PatKind::Binding(.., target, _) = pat.kind;\n+        if let ExprKind::Array(ref arg_expr_list) = arg_expr.kind;\n+        if let [arg_expression] = arg_expr_list;\n+        if let ExprKind::Path(ref list_item) = arg_expression.kind;\n+        if let Some(list_item_name) = single_segment_path(list_item).map(|ps| ps.ident.name);\n+        if let ExprKind::Block(ref block, _) = body.kind;\n+        if !block.stmts.is_empty();\n+\n+        then {\n+            let for_span = get_span_of_entire_for_loop(expr);\n+            let mut block_str = snippet(cx, block.span, \"..\").into_owned();\n+            block_str.remove(0);\n+            block_str.pop();\n+\n+\n+            span_lint_and_sugg(\n+                cx,\n+                SINGLE_ELEMENT_LOOP,\n+                for_span,\n+                \"for loop over a single element\",\n+                \"try\",\n+                format!(\"{{\\n{}let {} = &{};{}}}\", \" \".repeat(indent_of(cx, block.stmts[0].span).unwrap_or(0)), target.name, list_item_name, block_str),\n+                Applicability::MachineApplicable\n+            )\n+        }\n+    }\n+}\n+\n struct MutatePairDelegate<'a, 'tcx> {\n     cx: &'a LateContext<'tcx>,\n     hir_id_low: Option<HirId>,"}, {"sha": "a2e912103204cb6d41ab33aea0f13a9ffe9f2205", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -2139,6 +2139,13 @@ vec![\n         deprecation: None,\n         module: \"single_component_path_imports\",\n     },\n+    Lint {\n+        name: \"single_element_loop\",\n+        group: \"complexity\",\n+        desc: \"there is no reason to have a single element loop\",\n+        deprecation: None,\n+        module: \"loops\",\n+    },\n     Lint {\n         name: \"single_match\",\n         group: \"style\","}, {"sha": "8d54f75b5d19f297d7f4e56be4f5659dc81b1a31", "filename": "tests/ui/if_same_then_else2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fif_same_then_else2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fif_same_then_else2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.rs?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -3,7 +3,8 @@\n     clippy::blacklisted_name,\n     clippy::collapsible_if,\n     clippy::ifs_same_cond,\n-    clippy::needless_return\n+    clippy::needless_return,\n+    clippy::single_element_loop\n )]\n \n fn if_same_then_else2() -> Result<&'static str, ()> {"}, {"sha": "da2be6c8aa5acb4078b1787fca8aac2234dbcbe0", "filename": "tests/ui/if_same_then_else2.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fif_same_then_else2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fif_same_then_else2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.stderr?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -1,5 +1,5 @@\n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:19:12\n+  --> $DIR/if_same_then_else2.rs:20:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -13,7 +13,7 @@ LL | |     }\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:10:13\n+  --> $DIR/if_same_then_else2.rs:11:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -26,7 +26,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:33:12\n+  --> $DIR/if_same_then_else2.rs:34:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -36,7 +36,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:31:13\n+  --> $DIR/if_same_then_else2.rs:32:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -45,7 +45,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:40:12\n+  --> $DIR/if_same_then_else2.rs:41:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -55,7 +55,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:38:13\n+  --> $DIR/if_same_then_else2.rs:39:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -64,7 +64,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:90:12\n+  --> $DIR/if_same_then_else2.rs:91:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:88:21\n+  --> $DIR/if_same_then_else2.rs:89:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -83,7 +83,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:97:12\n+  --> $DIR/if_same_then_else2.rs:98:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -93,7 +93,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:95:13\n+  --> $DIR/if_same_then_else2.rs:96:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -102,7 +102,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:122:12\n+  --> $DIR/if_same_then_else2.rs:123:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -112,7 +112,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:119:20\n+  --> $DIR/if_same_then_else2.rs:120:20\n    |\n LL |       } else if true {\n    |  ____________________^"}, {"sha": "8ca068293a611455cd246bd1d5a16b73456027c7", "filename": "tests/ui/single_element_loop.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fsingle_element_loop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fsingle_element_loop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.fixed?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+// Tests from for_loop.rs that don't have suggestions\n+\n+#[warn(clippy::single_element_loop)]\n+fn main() {\n+    let item1 = 2;\n+    {\n+        let item = &item1;\n+        println!(\"{}\", item);\n+    }\n+}"}, {"sha": "57e9336a31fcf6c3d775273f7c7a78bedee5c0cf", "filename": "tests/ui/single_element_loop.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.rs?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+// Tests from for_loop.rs that don't have suggestions\n+\n+#[warn(clippy::single_element_loop)]\n+fn main() {\n+    let item1 = 2;\n+    for item in &[item1] {\n+        println!(\"{}\", item);\n+    }\n+}"}, {"sha": "90be1dc328371f6bc611cc236bd14b31f600d6e1", "filename": "tests/ui/single_element_loop.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fsingle_element_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0e617adaa89c759beccf74bc0f9eafaed44de22/tests%2Fui%2Fsingle_element_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.stderr?ref=e0e617adaa89c759beccf74bc0f9eafaed44de22", "patch": "@@ -0,0 +1,19 @@\n+error: for loop over a single element\n+  --> $DIR/single_element_loop.rs:7:5\n+   |\n+LL | /     for item in &[item1] {\n+LL | |         println!(\"{}\", item);\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: `-D clippy::single-element-loop` implied by `-D warnings`\n+help: try\n+   |\n+LL |     {\n+LL |         let item = &item1;\n+LL |         println!(\"{}\", item);\n+LL |     }\n+   |\n+\n+error: aborting due to previous error\n+"}]}