{"sha": "9b3dbb8200154d3432c6ba4c4094f96102494330", "node_id": "C_kwDOAAsO6NoAKDliM2RiYjgyMDAxNTRkMzQzMmM2YmE0YzQwOTRmOTYxMDI0OTQzMzA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-28T10:00:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-28T10:00:01Z"}, "message": "Rollup merge of #98261 - WaffleLapkin:attempt_to_remove_max_suggestion_highlight_lines, r=flip1995\n\nRemove `MAX_SUGGESTION_HIGHLIGHT_LINES`\n\nAfter #97798 the `MAX_SUGGESTION_HIGHLIGHT_LINES` constant doesn't really make sense since we always show full suggestions. This PR removes last usages of the constant and the constant itself.\n\nr? ``@flip1995`` (this mostly does changes in clippy)", "tree": {"sha": "89995f3203c5735b9a63c67218b58219ffdca5e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89995f3203c5735b9a63c67218b58219ffdca5e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b3dbb8200154d3432c6ba4c4094f96102494330", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiutEhCRBK7hj4Ov3rIwAAx40IACCDhJehYSe3vVeVqcYez0Nk\nOGlLhcLDhFu0icGFJPggCg/lR9r9zSZRTOrTdCI1Gfm1TWt488yjq8/lxQ5UqURL\n9PROmC5FUBl1Pq+hBcF3f1GwMXGvToqK6/lxOW0lH0fRDs7r0Azbj+yQM1Nktqqu\nJN0t4uf4a92UvI7KOgc+G2fFGUB6KBTkfaV6rgUgWdN8paWnfyZU3KnmydM85jaC\nOyq6ErWfOuim0nzZltIXyZJpKPyfKT6g4cFz9VMOHeESbHX/EMry/b3OR78gy31s\nK4kknGk6wWkqmr1y6sifZ3B2wgN2JVx8foVSD7ktrAqShr0DrW3dClxJ5u0MUCg=\n=pNII\n-----END PGP SIGNATURE-----\n", "payload": "tree 89995f3203c5735b9a63c67218b58219ffdca5e5\nparent c703d11dccb4a895c7aead3b2fcd8cea8c483184\nparent ffb593bf4d0dfea864f8e47dfd30098e70b8e5f8\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1656410401 +0530\ncommitter GitHub <noreply@github.com> 1656410401 +0530\n\nRollup merge of #98261 - WaffleLapkin:attempt_to_remove_max_suggestion_highlight_lines, r=flip1995\n\nRemove `MAX_SUGGESTION_HIGHLIGHT_LINES`\n\nAfter #97798 the `MAX_SUGGESTION_HIGHLIGHT_LINES` constant doesn't really make sense since we always show full suggestions. This PR removes last usages of the constant and the constant itself.\n\nr? ``@flip1995`` (this mostly does changes in clippy)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3dbb8200154d3432c6ba4c4094f96102494330", "html_url": "https://github.com/rust-lang/rust/commit/9b3dbb8200154d3432c6ba4c4094f96102494330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b3dbb8200154d3432c6ba4c4094f96102494330/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c703d11dccb4a895c7aead3b2fcd8cea8c483184", "url": "https://api.github.com/repos/rust-lang/rust/commits/c703d11dccb4a895c7aead3b2fcd8cea8c483184", "html_url": "https://github.com/rust-lang/rust/commit/c703d11dccb4a895c7aead3b2fcd8cea8c483184"}, {"sha": "ffb593bf4d0dfea864f8e47dfd30098e70b8e5f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb593bf4d0dfea864f8e47dfd30098e70b8e5f8", "html_url": "https://github.com/rust-lang/rust/commit/ffb593bf4d0dfea864f8e47dfd30098e70b8e5f8"}], "stats": {"total": 254, "additions": 68, "deletions": 186}, "files": [{"sha": "8b2a995f1c58ebf974d0d1f903f934565af8016b", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -656,11 +656,6 @@ impl Emitter for SilentEmitter {\n     }\n }\n \n-/// Maximum number of lines we will print for a multiline suggestion; arbitrary.\n-///\n-/// This should be replaced with a more involved mechanism to output multiline suggestions that\n-/// more closely mimics the regular diagnostic output, where irrelevant code lines are elided.\n-pub const MAX_SUGGESTION_HIGHLIGHT_LINES: usize = 6;\n /// Maximum number of suggestions to be shown\n ///\n /// Arbitrary, but taken from trait import suggestion limit"}, {"sha": "8ae84dbb3dcf432b056e9c9649db60c5a543bfb7", "filename": "src/tools/clippy/clippy_lints/src/methods/map_flatten.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg_for_edges;\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n@@ -14,17 +14,14 @@ use super::MAP_FLATTEN;\n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, map_arg: &Expr<'_>, map_span: Span) {\n     if let Some((caller_ty_name, method_to_use)) = try_get_caller_ty_name_and_method_name(cx, expr, recv, map_arg) {\n         let mut applicability = Applicability::MachineApplicable;\n-        let help_msgs = [\n-            &format!(\"try replacing `map` with `{}`\", method_to_use),\n-            \"and remove the `.flatten()`\",\n-        ];\n+        \n         let closure_snippet = snippet_with_applicability(cx, map_arg.span, \"..\", &mut applicability);\n-        span_lint_and_sugg_for_edges(\n+        span_lint_and_sugg(\n             cx,\n             MAP_FLATTEN,\n             expr.span.with_lo(map_span.lo()),\n             &format!(\"called `map(..).flatten()` on `{}`\", caller_ty_name),\n-            &help_msgs,\n+            &format!(\"try replacing `map` with `{}` and remove the `.flatten()`\", method_to_use),\n             format!(\"{}({})\", method_to_use, closure_snippet),\n             applicability,\n         );"}, {"sha": "3d1208824fa34c10e187f873322b462746105104", "filename": "src/tools/clippy/clippy_lints/src/methods/or_fun_call.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -4,7 +4,6 @@ use clippy_utils::source::{snippet, snippet_with_applicability, snippet_with_mac\n use clippy_utils::ty::{implements_trait, match_type};\n use clippy_utils::{contains_return, is_trait_item, last_path_segment, paths};\n use if_chain::if_chain;\n-use rustc_errors::emitter::MAX_SUGGESTION_HIGHLIGHT_LINES;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n@@ -33,7 +32,6 @@ pub(super) fn check<'tcx>(\n         arg: &hir::Expr<'_>,\n         or_has_args: bool,\n         span: Span,\n-        method_span: Span,\n     ) -> bool {\n         let is_default_default = || is_trait_item(cx, fun, sym::Default);\n \n@@ -56,19 +54,14 @@ pub(super) fn check<'tcx>(\n             then {\n                 let mut applicability = Applicability::MachineApplicable;\n                 let hint = \"unwrap_or_default()\";\n-                let mut sugg_span = span;\n+                let sugg_span = span;\n \n-                let mut sugg: String = format!(\n+                let sugg: String = format!(\n                     \"{}.{}\",\n                     snippet_with_applicability(cx, self_expr.span, \"..\", &mut applicability),\n                     hint\n                 );\n \n-                if sugg.lines().count() > MAX_SUGGESTION_HIGHLIGHT_LINES {\n-                    sugg_span = method_span.with_hi(span.hi());\n-                    sugg = hint.to_string();\n-                }\n-\n                 span_lint_and_sugg(\n                     cx,\n                     OR_FUN_CALL,\n@@ -178,7 +171,7 @@ pub(super) fn check<'tcx>(\n         match inner_arg.kind {\n             hir::ExprKind::Call(fun, or_args) => {\n                 let or_has_args = !or_args.is_empty();\n-                if !check_unwrap_or_default(cx, name, fun, self_arg, arg, or_has_args, expr.span, method_span) {\n+                if !check_unwrap_or_default(cx, name, fun, self_arg, arg, or_has_args, expr.span) {\n                     let fun_span = if or_has_args { None } else { Some(fun.span) };\n                     check_general_case(cx, name, method_span, self_arg, arg, expr.span, fun_span);\n                 }"}, {"sha": "2564099f4dbcac56a0d6e78859b255ce531968e7", "filename": "src/tools/clippy/clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -112,7 +112,6 @@ const LINT_EMISSION_FUNCTIONS: [&[&str]; 8] = [\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_sugg\"],\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_then\"],\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_hir_and_then\"],\n-    &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_sugg_for_edges\"],\n ];\n const SUGGESTION_DIAGNOSTIC_BUILDER_METHODS: [(&str, bool); 9] = [\n     (\"span_suggestion\", false),"}, {"sha": "7f55db3b31f7070cdfd74801d2608ec4d6f00f6e", "filename": "src/tools/clippy/clippy_utils/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 90, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fdiagnostics.rs?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -8,7 +8,7 @@\n //! Thank you!\n //! ~The `INTERNAL_METADATA_COLLECTOR` lint\n \n-use rustc_errors::{emitter::MAX_SUGGESTION_HIGHLIGHT_LINES, Applicability, Diagnostic, MultiSpan};\n+use rustc_errors::{Applicability, Diagnostic, MultiSpan};\n use rustc_hir::HirId;\n use rustc_lint::{LateContext, Lint, LintContext};\n use rustc_span::source_map::Span;\n@@ -219,95 +219,6 @@ pub fn span_lint_and_sugg<'a, T: LintContext>(\n     });\n }\n \n-/// Like [`span_lint_and_sugg`] with a focus on the edges. The output will either\n-/// emit single span or multispan suggestion depending on the number of its lines.\n-///\n-/// If the given suggestion string has more lines than the maximum display length defined by\n-/// [`MAX_SUGGESTION_HIGHLIGHT_LINES`][`rustc_errors::emitter::MAX_SUGGESTION_HIGHLIGHT_LINES`],\n-/// this function will split the suggestion and span to showcase the change for the top and\n-/// bottom edge of the code. For normal suggestions, in one display window, the help message\n-/// will be combined with a colon.\n-///\n-/// Multipart suggestions like the one being created here currently cannot be\n-/// applied by rustfix (See [rustfix#141](https://github.com/rust-lang/rustfix/issues/141)).\n-/// Testing rustfix with this lint emission function might require a file with\n-/// suggestions that can be fixed and those that can't. See\n-/// [clippy#8520](https://github.com/rust-lang/rust-clippy/pull/8520/files) for\n-/// an example and of this.\n-///\n-/// # Example for a long suggestion\n-///\n-/// ```text\n-/// error: called `map(..).flatten()` on `Option`\n-///   --> $DIR/map_flatten.rs:8:10\n-///    |\n-/// LL |           .map(|x| {\n-///    |  __________^\n-/// LL | |             if x <= 5 {\n-/// LL | |                 Some(x)\n-/// LL | |             } else {\n-/// ...  |\n-/// LL | |         })\n-/// LL | |         .flatten();\n-///    | |__________________^\n-///    |\n-///   = note: `-D clippy::map-flatten` implied by `-D warnings`\n-/// help: try replacing `map` with `and_then`\n-///    |\n-/// LL ~         .and_then(|x| {\n-/// LL +             if x <= 5 {\n-/// LL +                 Some(x)\n-///    |\n-/// help: and remove the `.flatten()`\n-///    |\n-/// LL +                 None\n-/// LL +             }\n-/// LL ~         });\n-///    |\n-/// ```\n-pub fn span_lint_and_sugg_for_edges(\n-    cx: &LateContext<'_>,\n-    lint: &'static Lint,\n-    sp: Span,\n-    msg: &str,\n-    helps: &[&str; 2],\n-    sugg: String,\n-    applicability: Applicability,\n-) {\n-    span_lint_and_then(cx, lint, sp, msg, |diag| {\n-        let sugg_lines_count = sugg.lines().count();\n-        if sugg_lines_count > MAX_SUGGESTION_HIGHLIGHT_LINES {\n-            let sm = cx.sess().source_map();\n-            if let (Ok(line_upper), Ok(line_bottom)) =\n-                (sm.lookup_line(sp.lo()), sm.lookup_line(sp.hi()))\n-            {\n-                let split_idx = MAX_SUGGESTION_HIGHLIGHT_LINES / 2;\n-                let span_upper = sm.span_until_char(\n-                    sp.with_hi(line_upper.sf.lines(|lines| lines[line_upper.line + split_idx])),\n-                    '\\n',\n-                );\n-                let span_bottom = sp.with_lo(line_bottom.sf.lines(|lines| lines[line_bottom.line - split_idx]));\n-\n-                let sugg_lines_vec = sugg.lines().collect::<Vec<&str>>();\n-                let sugg_upper = sugg_lines_vec[..split_idx].join(\"\\n\");\n-                let sugg_bottom = sugg_lines_vec[sugg_lines_count - split_idx..].join(\"\\n\");\n-\n-                diag.span_suggestion(span_upper, helps[0], sugg_upper, applicability);\n-                diag.span_suggestion(span_bottom, helps[1], sugg_bottom, applicability);\n-\n-                return;\n-            }\n-        }\n-        diag.span_suggestion_with_style(\n-            sp,\n-            &helps.join(\", \"),\n-            sugg,\n-            applicability,\n-            rustc_errors::SuggestionStyle::ShowAlways,\n-        );\n-    });\n-}\n-\n /// Create a suggestion made from several `span \u2192 replacement`.\n ///\n /// Note: in the JSON format (used by `compiletest_rs`), the help message will"}, {"sha": "4b2630d6858479b2bafe70e637f53f3ff18ef638", "filename": "src/tools/clippy/tests/ui/map_flatten.stderr", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten.stderr?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -12,14 +12,12 @@ LL | |         .flatten();\n    | |__________________^\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|x| {\n LL +             if x <= 5 {\n LL +                 Some(x)\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +             } else {\n LL +                 None\n LL +             }\n LL ~         });\n@@ -38,14 +36,12 @@ LL | |         })\n LL | |         .flatten();\n    | |__________________^\n    |\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|x| {\n LL +             if x == 1 {\n LL +                 Ok(x)\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +             } else {\n LL +                 Err(0)\n LL +             }\n LL ~         });\n@@ -64,14 +60,13 @@ LL | |         })\n LL | |         .flatten();\n    | |__________________^\n    |\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|res| {\n LL +             if res > 0 {\n LL +                 do_something();\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +                 Ok(res)\n+LL +             } else {\n LL +                 Err(0)\n LL +             }\n LL ~         });\n@@ -90,14 +85,12 @@ LL | |         })\n LL | |         .flatten()\n    | |__________________^\n    |\n-help: try replacing `map` with `filter_map`\n+help: try replacing `map` with `filter_map` and remove the `.flatten()`\n    |\n LL ~         .filter_map(|some_value| {\n LL +             if some_value > 3 {\n LL +                 Some(some_value)\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +             } else {\n LL +                 None\n LL +             }\n LL +         })"}, {"sha": "e9b41354c58fa50599e93f2b39a5dc015f61646d", "filename": "src/tools/clippy/tests/ui/map_flatten_fixable.fixed", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.fixed?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -59,8 +59,6 @@ fn issue8878() {\n         .and_then(|_| {\n // we need some newlines\n // so that the span is big enough\n-// we need some newlines\n-// so that the span is big enough\n // for a splitted output of the diagnostic\n             Some(\"\")\n  // whitespace beforehand is important as well"}, {"sha": "f3b82ad08d0fc3c61c31cb53e46c035c06789440", "filename": "src/tools/clippy/tests/ui/map_flatten_fixable.stderr", "status": "modified", "additions": 9, "deletions": 45, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.stderr?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -2,79 +2,45 @@ error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:18:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(option_id).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(option_id)`\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(option_id).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:19:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(option_id_ref).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(option_id_ref).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(option_id_ref)`\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:20:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(option_id_closure).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(option_id_closure).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(option_id_closure)`\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:21:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| x.checked_add(1)).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(|x| x.checked_add(1)).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(|x| x.checked_add(1))`\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:24:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `flat_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().flat_map(|x| 0..x).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `flat_map` and remove the `.flatten()`: `flat_map(|x| 0..x)`\n \n error: called `map(..).flatten()` on `Option`\n   --> $DIR/map_flatten_fixable.rs:27:40\n    |\n LL |     let _: Option<_> = (Some(Some(1))).map(|x| x).flatten();\n-   |                                        ^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `and_then`, and remove the `.flatten()`\n-   |\n-LL |     let _: Option<_> = (Some(Some(1))).and_then(|x| x);\n-   |                                        ~~~~~~~~~~~~~~~\n+   |                                        ^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `and_then` and remove the `.flatten()`: `and_then(|x| x)`\n \n error: called `map(..).flatten()` on `Result`\n   --> $DIR/map_flatten_fixable.rs:30:42\n    |\n LL |     let _: Result<_, &str> = (Ok(Ok(1))).map(|x| x).flatten();\n-   |                                          ^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `and_then`, and remove the `.flatten()`\n-   |\n-LL |     let _: Result<_, &str> = (Ok(Ok(1))).and_then(|x| x);\n-   |                                          ~~~~~~~~~~~~~~~\n+   |                                          ^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `and_then` and remove the `.flatten()`: `and_then(|x| x)`\n \n error: called `map(..).flatten()` on `Option`\n   --> $DIR/map_flatten_fixable.rs:59:10\n@@ -89,14 +55,12 @@ LL | |         })\n LL | |         .flatten();\n    | |__________________^\n    |\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|_| {\n LL + // we need some newlines\n LL + // so that the span is big enough\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL + // for a splitted output of the diagnostic\n LL +             Some(\"\")\n LL +  // whitespace beforehand is important as well\n LL ~         });"}, {"sha": "123aed40251e2a639a63a6b630fc6a084944e02c", "filename": "src/tools/clippy/tests/ui/or_fun_call.fixed", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2For_fun_call.fixed?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -185,8 +185,7 @@ mod issue8239 {\n             .reduce(|mut acc, f| {\n                 acc.push_str(&f);\n                 acc\n-            })\n-            .unwrap_or_default();\n+            }).unwrap_or_default();\n     }\n \n     fn more_to_max_suggestion_highest_lines_1() {\n@@ -198,8 +197,7 @@ mod issue8239 {\n                 let _ = \"\";\n                 acc.push_str(&f);\n                 acc\n-            })\n-            .unwrap_or_default();\n+            }).unwrap_or_default();\n     }\n \n     fn equal_to_max_suggestion_highest_lines() {"}, {"sha": "dfe15654bc32c05db6992bfde425b6ba40915883", "filename": "src/tools/clippy/tests/ui/or_fun_call.stderr", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2For_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b3dbb8200154d3432c6ba4c4094f96102494330/src%2Ftools%2Fclippy%2Ftests%2Fui%2For_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2For_fun_call.stderr?ref=9b3dbb8200154d3432c6ba4c4094f96102494330", "patch": "@@ -109,16 +109,50 @@ LL |         None.unwrap_or( unsafe { ptr_to_ref(s) }    );\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| unsafe { ptr_to_ref(s) })`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:189:14\n+  --> $DIR/or_fun_call.rs:182:9\n+   |\n+LL | /         frames\n+LL | |             .iter()\n+LL | |             .map(|f: &String| f.to_lowercase())\n+LL | |             .reduce(|mut acc, f| {\n+...  |\n+LL | |             })\n+LL | |             .unwrap_or(String::new());\n+   | |_____________________________________^\n+   |\n+help: try this\n+   |\n+LL ~         frames\n+LL +             .iter()\n+LL +             .map(|f: &String| f.to_lowercase())\n+LL +             .reduce(|mut acc, f| {\n+LL +                 acc.push_str(&f);\n+LL +                 acc\n+LL ~             }).unwrap_or_default();\n    |\n-LL |             .unwrap_or(String::new());\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:202:14\n+  --> $DIR/or_fun_call.rs:195:9\n+   |\n+LL | /         iter.map(|f: &String| f.to_lowercase())\n+LL | |             .reduce(|mut acc, f| {\n+LL | |                 let _ = \"\";\n+LL | |                 let _ = \"\";\n+...  |\n+LL | |             })\n+LL | |             .unwrap_or(String::new());\n+   | |_____________________________________^\n+   |\n+help: try this\n+   |\n+LL ~         iter.map(|f: &String| f.to_lowercase())\n+LL +             .reduce(|mut acc, f| {\n+LL +                 let _ = \"\";\n+LL +                 let _ = \"\";\n+LL +                 acc.push_str(&f);\n+LL +                 acc\n+LL ~             }).unwrap_or_default();\n    |\n-LL |             .unwrap_or(String::new());\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n   --> $DIR/or_fun_call.rs:208:9"}]}