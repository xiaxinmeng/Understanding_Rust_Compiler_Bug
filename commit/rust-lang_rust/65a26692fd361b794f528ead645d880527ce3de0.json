{"sha": "65a26692fd361b794f528ead645d880527ce3de0", "node_id": "C_kwDOAAsO6NoAKDY1YTI2NjkyZmQzNjFiNzk0ZjUyOGVhZDY0NWQ4ODA1MjdjZTNkZTA", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-03-24T01:08:52Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-03-24T09:08:10Z"}, "message": "Add `crate_in_macro_def` lint", "tree": {"sha": "25a15004c43c20d0e63695a594966025cb339ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25a15004c43c20d0e63695a594966025cb339ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a26692fd361b794f528ead645d880527ce3de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a26692fd361b794f528ead645d880527ce3de0", "html_url": "https://github.com/rust-lang/rust/commit/65a26692fd361b794f528ead645d880527ce3de0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a26692fd361b794f528ead645d880527ce3de0/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f07ee8a998eff61977d594eeac44dc1d0ead7b02", "url": "https://api.github.com/repos/rust-lang/rust/commits/f07ee8a998eff61977d594eeac44dc1d0ead7b02", "html_url": "https://github.com/rust-lang/rust/commit/f07ee8a998eff61977d594eeac44dc1d0ead7b02"}], "stats": {"total": 199, "additions": 198, "deletions": 1}, "files": [{"sha": "9cede8065ec76ce93420a849839363b3e568604d", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -3097,6 +3097,7 @@ Released 2018-09-13\n [`comparison_chain`]: https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n [`comparison_to_empty`]: https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n [`copy_iterator`]: https://rust-lang.github.io/rust-clippy/master/index.html#copy_iterator\n+[`crate_in_macro_def`]: https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n [`create_dir`]: https://rust-lang.github.io/rust-clippy/master/index.html#create_dir\n [`crosspointer_transmute`]: https://rust-lang.github.io/rust-clippy/master/index.html#crosspointer_transmute\n [`dbg_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#dbg_macro"}, {"sha": "9ac6d6d520cc89b34073d62d0dc95c5f7fbcc618", "filename": "clippy_lints/src/crate_in_macro_def.rs", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -0,0 +1,100 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use rustc_ast::ast::MacroDef;\n+use rustc_ast::node_id::NodeId;\n+use rustc_ast::token::{Token, TokenKind};\n+use rustc_ast::tokenstream::{TokenStream, TokenTree};\n+use rustc_errors::Applicability;\n+use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::Span;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for use of `crate` as opposed to `$crate` in a macro definition.\n+    ///\n+    /// ### Why is this bad?\n+    /// `crate` refers to macro call's crate, whereas `$crate` refers to the macro\n+    /// definition's crate. Rarely is the former intended. See:\n+    /// https://doc.rust-lang.org/reference/macros-by-example.html#hygiene\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// macro_rules! print_message {\n+    ///     () => {\n+    ///         println!(\"{}\", crate::MESSAGE);\n+    ///     };\n+    /// }\n+    /// pub const MESSAGE: &str = \"Hello!\";\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// macro_rules! print_message {\n+    ///     () => {\n+    ///         println!(\"{}\", $crate::MESSAGE);\n+    ///     };\n+    /// }\n+    /// pub const MESSAGE: &str = \"Hello!\";\n+    /// ```\n+    #[clippy::version = \"1.61.0\"]\n+    pub CRATE_IN_MACRO_DEF,\n+    correctness,\n+    \"using `crate` in a macro definition\"\n+}\n+declare_lint_pass!(CrateInMacroDef => [CRATE_IN_MACRO_DEF]);\n+\n+impl EarlyLintPass for CrateInMacroDef {\n+    fn check_mac_def(&mut self, cx: &EarlyContext<'_>, macro_def: &MacroDef, _: NodeId) {\n+        let tts = macro_def.body.inner_tokens();\n+        if let Some(span) = contains_unhygienic_crate_reference(&tts) {\n+            span_lint_and_sugg(\n+                cx,\n+                CRATE_IN_MACRO_DEF,\n+                span,\n+                \"reference to the macro call's crate, which is rarely intended\",\n+                \"if reference to the macro definition's crate is intended, use\",\n+                String::from(\"$crate\"),\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+    }\n+}\n+\n+fn contains_unhygienic_crate_reference(tts: &TokenStream) -> Option<Span> {\n+    let mut prev_is_dollar = false;\n+    let mut cursor = tts.trees();\n+    while let Some(curr) = cursor.next() {\n+        if_chain! {\n+            if !prev_is_dollar;\n+            if let Some(span) = is_crate_keyword(&curr);\n+            if let Some(next) = cursor.look_ahead(0);\n+            if is_token(next, &TokenKind::ModSep);\n+            then {\n+                return Some(span);\n+            }\n+        }\n+        if let TokenTree::Delimited(_, _, tts) = &curr {\n+            let span = contains_unhygienic_crate_reference(tts);\n+            if span.is_some() {\n+                return span;\n+            }\n+        }\n+        prev_is_dollar = is_token(&curr, &TokenKind::Dollar);\n+    }\n+    None\n+}\n+\n+fn is_crate_keyword(tt: &TokenTree) -> Option<Span> {\n+    if_chain! {\n+        if let TokenTree::Token(Token { kind: TokenKind::Ident(symbol, _), span }) = tt;\n+        if symbol.as_str() == \"crate\";\n+        then { Some(*span) } else { None }\n+    }\n+}\n+\n+fn is_token(tt: &TokenTree, kind: &TokenKind) -> bool {\n+    if let TokenTree::Token(Token { kind: other, .. }) = tt {\n+        kind == other\n+    } else {\n+        false\n+    }\n+}"}, {"sha": "1fb3ca1fd9b2bca6f1effc925338f4d8bb11f3c1", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -37,6 +37,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(comparison_chain::COMPARISON_CHAIN),\n     LintId::of(copies::IFS_SAME_COND),\n     LintId::of(copies::IF_SAME_THEN_ELSE),\n+    LintId::of(crate_in_macro_def::CRATE_IN_MACRO_DEF),\n     LintId::of(default::FIELD_REASSIGN_WITH_DEFAULT),\n     LintId::of(dereference::NEEDLESS_BORROW),\n     LintId::of(derivable_impls::DERIVABLE_IMPLS),"}, {"sha": "d5cade8fe998c7a177de5689307d30f8a511109d", "filename": "clippy_lints/src/lib.register_correctness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.register_correctness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.register_correctness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_correctness.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -16,6 +16,7 @@ store.register_group(true, \"clippy::correctness\", Some(\"clippy_correctness\"), ve\n     LintId::of(casts::CAST_SLICE_DIFFERENT_SIZES),\n     LintId::of(copies::IFS_SAME_COND),\n     LintId::of(copies::IF_SAME_THEN_ELSE),\n+    LintId::of(crate_in_macro_def::CRATE_IN_MACRO_DEF),\n     LintId::of(derive::DERIVE_HASH_XOR_EQ),\n     LintId::of(derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n     LintId::of(drop_forget_ref::DROP_COPY),"}, {"sha": "984939a74b8dc289faea00968d0b6163ac2b41fc", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -97,6 +97,7 @@ store.register_lints(&[\n     copies::IF_SAME_THEN_ELSE,\n     copies::SAME_FUNCTIONS_IN_IF_CONDITION,\n     copy_iterator::COPY_ITERATOR,\n+    crate_in_macro_def::CRATE_IN_MACRO_DEF,\n     create_dir::CREATE_DIR,\n     dbg_macro::DBG_MACRO,\n     default::DEFAULT_TRAIT_ACCESS,"}, {"sha": "c8b57956b1b6254489af8895c51bc88206daeeba", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -190,6 +190,7 @@ mod collapsible_match;\n mod comparison_chain;\n mod copies;\n mod copy_iterator;\n+mod crate_in_macro_def;\n mod create_dir;\n mod dbg_macro;\n mod default;\n@@ -867,6 +868,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n             ignore_publish: cargo_ignore_publish,\n         })\n     });\n+    store.register_early_pass(|| Box::new(crate_in_macro_def::CrateInMacroDef));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "b1e474f80561f02fc71fa71500f4c6b253f16a63", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -123,7 +123,7 @@ macro_rules! define_Conf {\n \n         #[cfg(feature = \"internal\")]\n         pub mod metadata {\n-            use crate::utils::internal_lints::metadata_collector::ClippyConfiguration;\n+            use $crate::utils::internal_lints::metadata_collector::ClippyConfiguration;\n \n             macro_rules! wrap_option {\n                 () => (None);"}, {"sha": "77b43f432601bf317ebcb6d5ce7ad3e3ff66e97a", "filename": "tests/ui/crate_in_macro_def.fixed", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_in_macro_def.fixed?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -0,0 +1,29 @@\n+// run-rustfix\n+#![warn(clippy::crate_in_macro_def)]\n+\n+#[macro_use]\n+mod hygienic {\n+    macro_rules! print_message_hygienic {\n+        () => {\n+            println!(\"{}\", $crate::hygienic::MESSAGE);\n+        };\n+    }\n+\n+    pub const MESSAGE: &str = \"Hello!\";\n+}\n+\n+#[macro_use]\n+mod unhygienic {\n+    macro_rules! print_message_unhygienic {\n+        () => {\n+            println!(\"{}\", $crate::unhygienic::MESSAGE);\n+        };\n+    }\n+\n+    pub const MESSAGE: &str = \"Hello!\";\n+}\n+\n+fn main() {\n+    print_message_hygienic!();\n+    print_message_unhygienic!();\n+}"}, {"sha": "d72d4c4009c3000c85d06d51f9686e3d1c91ad86", "filename": "tests/ui/crate_in_macro_def.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_in_macro_def.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -0,0 +1,29 @@\n+// run-rustfix\n+#![warn(clippy::crate_in_macro_def)]\n+\n+#[macro_use]\n+mod hygienic {\n+    macro_rules! print_message_hygienic {\n+        () => {\n+            println!(\"{}\", $crate::hygienic::MESSAGE);\n+        };\n+    }\n+\n+    pub const MESSAGE: &str = \"Hello!\";\n+}\n+\n+#[macro_use]\n+mod unhygienic {\n+    macro_rules! print_message_unhygienic {\n+        () => {\n+            println!(\"{}\", crate::unhygienic::MESSAGE);\n+        };\n+    }\n+\n+    pub const MESSAGE: &str = \"Hello!\";\n+}\n+\n+fn main() {\n+    print_message_hygienic!();\n+    print_message_unhygienic!();\n+}"}, {"sha": "3f5e4870ad1c3b54ca348a9902ef8df95c227d7d", "filename": "tests/ui/crate_in_macro_def.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_in_macro_def.stderr?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -0,0 +1,14 @@\n+error: reference to the macro call's crate, which is rarely intended\n+  --> $DIR/crate_in_macro_def.rs:19:28\n+   |\n+LL |             println!(\"{}\", crate::unhygienic::MESSAGE);\n+   |                            ^^^^^\n+   |\n+   = note: `-D clippy::crate-in-macro-def` implied by `-D warnings`\n+help: if reference to the macro definition's crate is intended, use\n+   |\n+LL |             println!(\"{}\", $crate::unhygienic::MESSAGE);\n+   |                            ~~~~~~\n+\n+error: aborting due to previous error\n+"}, {"sha": "d6b30fd96152fcc4455c634a16bf15f88b762042", "filename": "tests/ui/crate_in_macro_def_allow.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def_allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def_allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_in_macro_def_allow.rs?ref=65a26692fd361b794f528ead645d880527ce3de0", "patch": "@@ -0,0 +1,19 @@\n+#![warn(clippy::crate_in_macro_def)]\n+\n+#[macro_use]\n+mod intentional {\n+    // For cases where use of `crate` is intentional, applying `allow` to the macro definition\n+    // should suppress the lint.\n+    #[allow(clippy::crate_in_macro_def)]\n+    macro_rules! print_message {\n+        () => {\n+            println!(\"{}\", crate::CALLER_PROVIDED_MESSAGE);\n+        };\n+    }\n+}\n+\n+fn main() {\n+    print_message!();\n+}\n+\n+pub const CALLER_PROVIDED_MESSAGE: &str = \"Hello!\";"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/crate_in_macro_def_allow.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def_allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65a26692fd361b794f528ead645d880527ce3de0/tests%2Fui%2Fcrate_in_macro_def_allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_in_macro_def_allow.stderr?ref=65a26692fd361b794f528ead645d880527ce3de0"}]}