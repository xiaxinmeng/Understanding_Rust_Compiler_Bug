{"sha": "0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZGJiN2QxY2M0NmNiNmE4OGI3MTA1NTgxYmNiOWRlYmE1NGVkZjk=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-03T05:35:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-03T05:35:42Z"}, "message": "Rollup merge of #85935 - tmiasko:validate-indexing, r=jonas-schievink\n\nValidate type of locals used as indices", "tree": {"sha": "535d7a67fd702b8b67953a1e60dad5da2684707f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/535d7a67fd702b8b67953a1e60dad5da2684707f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJguGouCRBK7hj4Ov3rIwAAR5IIAK8GcIZ9JKHU/ofZDcwe9uQ7\nsySzF/5k5X2/iTcS3QNOS7JqC+knSWIaFtxbyC++7coNVm5vqRseSQgNnisyLNFm\nT+UytmHIcDRv58aS000ZRWcjfgW+FZNZS6IpsSM6BMGT6QM/NSxmVQNxWsgYYlAw\n0Cszlabrlftl0Zkehjucxsm76Wm4B4gSiqv1P0A3GMxBxmFwJ6CBjAsMYLqzPsA7\nkl3h3uRZvClGCVBa+sWBj1JrhZ/TNOy4FYiUD3/BYsHBYGLPFU292IxZ/97fM9bf\n7d3xNjWfUGGltG23s4WsKqVPWghDEgm3CAVIt3qRv2qE16UGz81tTmdSvAL4s1M=\n=660m\n-----END PGP SIGNATURE-----\n", "payload": "tree 535d7a67fd702b8b67953a1e60dad5da2684707f\nparent 2fddcfda7a4683f07cf62d4a94886fd8424b7893\nparent 11478bd614641eccf8987ea3d489070bba85c2e0\nauthor Yuki Okushi <jtitor@2k36.org> 1622698542 +0900\ncommitter GitHub <noreply@github.com> 1622698542 +0900\n\nRollup merge of #85935 - tmiasko:validate-indexing, r=jonas-schievink\n\nValidate type of locals used as indices\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9", "html_url": "https://github.com/rust-lang/rust/commit/0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fddcfda7a4683f07cf62d4a94886fd8424b7893", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fddcfda7a4683f07cf62d4a94886fd8424b7893", "html_url": "https://github.com/rust-lang/rust/commit/2fddcfda7a4683f07cf62d4a94886fd8424b7893"}, {"sha": "11478bd614641eccf8987ea3d489070bba85c2e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/11478bd614641eccf8987ea3d489070bba85c2e0", "html_url": "https://github.com/rust-lang/rust/commit/11478bd614641eccf8987ea3d489070bba85c2e0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "835789069bb2e666c5b2a62293a7763298bb6343", "filename": "compiler/rustc_mir/src/transform/validate.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fvalidate.rs?ref=0cdbb7d1cc46cb6a88b7105581bcb9deba54edf9", "patch": "@@ -11,8 +11,9 @@ use rustc_middle::mir::interpret::Scalar;\n use rustc_middle::mir::traversal;\n use rustc_middle::mir::visit::{PlaceContext, Visitor};\n use rustc_middle::mir::{\n-    AggregateKind, BasicBlock, Body, BorrowKind, Local, Location, MirPhase, Operand, PlaceRef,\n-    Rvalue, SourceScope, Statement, StatementKind, Terminator, TerminatorKind,\n+    AggregateKind, BasicBlock, Body, BorrowKind, Local, Location, MirPhase, Operand, PlaceElem,\n+    PlaceRef, ProjectionElem, Rvalue, SourceScope, Statement, StatementKind, Terminator,\n+    TerminatorKind,\n };\n use rustc_middle::ty::fold::BottomUpFolder;\n use rustc_middle::ty::{self, ParamEnv, Ty, TyCtxt, TypeFoldable};\n@@ -217,6 +218,23 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n         self.super_operand(operand, location);\n     }\n \n+    fn visit_projection_elem(\n+        &mut self,\n+        local: Local,\n+        proj_base: &[PlaceElem<'tcx>],\n+        elem: PlaceElem<'tcx>,\n+        context: PlaceContext,\n+        location: Location,\n+    ) {\n+        if let ProjectionElem::Index(index) = elem {\n+            let index_ty = self.body.local_decls[index].ty;\n+            if index_ty != self.tcx.types.usize {\n+                self.fail(location, format!(\"bad index ({:?} != usize)\", index_ty))\n+            }\n+        }\n+        self.super_projection_elem(local, proj_base, elem, context, location);\n+    }\n+\n     fn visit_statement(&mut self, statement: &Statement<'tcx>, location: Location) {\n         match &statement.kind {\n             StatementKind::Assign(box (dest, rvalue)) => {"}]}