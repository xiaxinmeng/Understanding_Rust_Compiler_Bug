{"sha": "b7d2fe57cfa7d260838832ad8c301a946206c16d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZDJmZTU3Y2ZhN2QyNjA4Mzg4MzJhZDhjMzAxYTk0NjIwNmMxNmQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-01-05T00:52:06Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-01-05T00:53:28Z"}, "message": "rustc: Allow the type unification handler to handle both expected and actual param types", "tree": {"sha": "5299a114fcab53e0e71d1f41b84279db42fe6e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5299a114fcab53e0e71d1f41b84279db42fe6e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7d2fe57cfa7d260838832ad8c301a946206c16d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d2fe57cfa7d260838832ad8c301a946206c16d", "html_url": "https://github.com/rust-lang/rust/commit/b7d2fe57cfa7d260838832ad8c301a946206c16d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7d2fe57cfa7d260838832ad8c301a946206c16d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "116dd9e33803cb3b4a4c87a181ec3bd5d9966f63", "url": "https://api.github.com/repos/rust-lang/rust/commits/116dd9e33803cb3b4a4c87a181ec3bd5d9966f63", "html_url": "https://github.com/rust-lang/rust/commit/116dd9e33803cb3b4a4c87a181ec3bd5d9966f63"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "ddb7b7a92cf790b23e6862d094c59f21096bd9d7", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7d2fe57cfa7d260838832ad8c301a946206c16d/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7d2fe57cfa7d260838832ad8c301a946206c16d/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=b7d2fe57cfa7d260838832ad8c301a946206c16d", "patch": "@@ -51,6 +51,8 @@ type unify_handler = obj {\n     fn record_local(ast.def_id id, @t ty);\n     fn unify_expected_param(ast.def_id id, @t expected, @t actual)\n         -> unify_result;\n+    fn unify_actual_param(ast.def_id id, @t expected, @t actual)\n+        -> unify_result;\n };\n \n tag type_err {\n@@ -854,9 +856,9 @@ fn unify(@ty.t expected, @ty.t actual, &unify_handler handler)\n         // TODO: rewrite this using tuple pattern matching when available, to\n         // avoid all this rightward drift and spikiness.\n \n-        // If the RHS is a variable type, then just do the appropriate\n-        // binding.\n         alt (actual.struct) {\n+            // If the RHS is a variable type, then just do the appropriate\n+            // binding.\n             case (ty.ty_var(?actual_id)) {\n                 alt (bindings.find(actual_id)) {\n                     case (some[@ty.t](?actual_ty)) {\n@@ -885,6 +887,9 @@ fn unify(@ty.t expected, @ty.t actual, &unify_handler handler)\n                 }\n                 ret result;\n             }\n+            case (ty.ty_param(?actual_id)) {\n+                ret handler.unify_actual_param(actual_id, expected, actual);\n+            }\n             case (_) { /* empty */ }\n         }\n \n@@ -1131,8 +1136,7 @@ fn unify(@ty.t expected, @ty.t actual, &unify_handler handler)\n             }\n \n             case (ty.ty_param(?expected_id)) {\n-                ret handler.unify_expected_param(expected_id,\n-                                                 expected,\n+                ret handler.unify_expected_param(expected_id, expected,\n                                                  actual);\n             }\n         }"}, {"sha": "d1e34e7a428d4b772df5b6373cab49a863bd65d1", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7d2fe57cfa7d260838832ad8c301a946206c16d/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7d2fe57cfa7d260838832ad8c301a946206c16d/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=b7d2fe57cfa7d260838832ad8c301a946206c16d", "patch": "@@ -509,6 +509,18 @@ fn unify(&@fn_ctxt fcx, @ty.t expected, @ty.t actual) -> ty.unify_result {\n             }\n             ret ty.ures_err(ty.terr_mismatch, expected, actual);\n         }\n+        fn unify_actual_param(ast.def_id id, @ty.t expected, @ty.t actual)\n+                -> ty.unify_result {\n+            alt (expected.struct) {\n+                case (ty.ty_param(?expected_id)) {\n+                    if (id._0 == expected_id._0 && id._1 == expected_id._1) {\n+                        ret ty.ures_ok(actual);\n+                    }\n+                }\n+                case (_) { /* fall through */ }\n+            }\n+            ret ty.ures_err(ty.terr_mismatch, expected, actual);\n+        }\n     }\n \n     auto handler = unify_handler(fcx);"}]}