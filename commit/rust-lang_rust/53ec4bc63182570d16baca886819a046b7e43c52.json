{"sha": "53ec4bc63182570d16baca886819a046b7e43c52", "node_id": "C_kwDOAAsO6NoAKDUzZWM0YmM2MzE4MjU3MGQxNmJhY2E4ODY4MTlhMDQ2YjdlNDNjNTI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-25T01:51:19Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-25T01:51:19Z"}, "message": "Remove some stale FIXMEs in new solver", "tree": {"sha": "d95a4ed857072541165bd3019761fcb6571fcb30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d95a4ed857072541165bd3019761fcb6571fcb30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53ec4bc63182570d16baca886819a046b7e43c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53ec4bc63182570d16baca886819a046b7e43c52", "html_url": "https://github.com/rust-lang/rust/commit/53ec4bc63182570d16baca886819a046b7e43c52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53ec4bc63182570d16baca886819a046b7e43c52/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f421586eed77de266a3f99ffa8a5687b7d2d893c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f421586eed77de266a3f99ffa8a5687b7d2d893c", "html_url": "https://github.com/rust-lang/rust/commit/f421586eed77de266a3f99ffa8a5687b7d2d893c"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "65e7bcb7f019dc1f9657f071375b20fcd1485034", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53ec4bc63182570d16baca886819a046b7e43c52/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ec4bc63182570d16baca886819a046b7e43c52/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=53ec4bc63182570d16baca886819a046b7e43c52", "patch": "@@ -9,8 +9,6 @@\n //! FIXME(@lcnr): Write that section. If you read this before then ask me\n //! about it on zulip.\n \n-// FIXME: uses of `infcx.at` need to enable deferred projection equality once that's implemented.\n-\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::canonical::{Canonical, CanonicalVarValues};\n use rustc_infer::traits::query::NoSolution;\n@@ -105,8 +103,6 @@ impl<'a, 'tcx> EvalCtxt<'a, 'tcx> {\n         goal: Goal<'tcx, SubtypePredicate<'tcx>>,\n     ) -> QueryResult<'tcx> {\n         if goal.predicate.a.is_ty_var() && goal.predicate.b.is_ty_var() {\n-            // FIXME: Do we want to register a subtype relation between these vars?\n-            // That won't actually reflect in the query response, so it seems moot.\n             self.evaluate_added_goals_and_make_canonical_response(Certainty::AMBIGUOUS)\n         } else {\n             self.sub(goal.param_env, goal.predicate.a, goal.predicate.b)?;"}, {"sha": "9773a3eacd6fa3b1a7c515e250bf3a6c433d1079", "filename": "compiler/rustc_trait_selection/src/solve/search_graph/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53ec4bc63182570d16baca886819a046b7e43c52/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ec4bc63182570d16baca886819a046b7e43c52/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs?ref=53ec4bc63182570d16baca886819a046b7e43c52", "patch": "@@ -78,8 +78,6 @@ impl<'tcx> SearchGraph<'tcx> {\n         tcx: TyCtxt<'tcx>,\n         goal: CanonicalGoal<'tcx>,\n     ) -> Result<(), QueryResult<'tcx>> {\n-        // FIXME: start by checking the global cache\n-\n         // Look at the provisional cache to check for cycles.\n         let cache = &mut self.provisional_cache;\n         match cache.lookup_table.entry(goal) {"}]}