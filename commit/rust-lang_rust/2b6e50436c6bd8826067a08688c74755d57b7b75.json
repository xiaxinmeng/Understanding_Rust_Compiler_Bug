{"sha": "2b6e50436c6bd8826067a08688c74755d57b7b75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNmU1MDQzNmM2YmQ4ODI2MDY3YTA4Njg4Yzc0NzU1ZDU3YjdiNzU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-07T12:51:15Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-07T12:55:04Z"}, "message": "Run wrap_str() only when chain_indent is set to \"Visual\"", "tree": {"sha": "d88b79de0165ca1b1d453bfd3ffb7df01af8ba87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d88b79de0165ca1b1d453bfd3ffb7df01af8ba87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b6e50436c6bd8826067a08688c74755d57b7b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b6e50436c6bd8826067a08688c74755d57b7b75", "html_url": "https://github.com/rust-lang/rust/commit/2b6e50436c6bd8826067a08688c74755d57b7b75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b6e50436c6bd8826067a08688c74755d57b7b75/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ef2ee8de4c46be7a125c965e064d7a662cdc55", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ef2ee8de4c46be7a125c965e064d7a662cdc55", "html_url": "https://github.com/rust-lang/rust/commit/02ef2ee8de4c46be7a125c965e064d7a662cdc55"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "30a9444d4ae7ec7e999cf138e2d9bd2a8d34772b", "filename": "src/chains.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b6e50436c6bd8826067a08688c74755d57b7b75/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b6e50436c6bd8826067a08688c74755d57b7b75/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=2b6e50436c6bd8826067a08688c74755d57b7b75", "patch": "@@ -266,7 +266,11 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         )\n     };\n     let result = format!(\"{}{}\", result, repeat_try(suffix_try_num));\n-    wrap_str(result, context.config.max_width(), shape)\n+    if context.config.chain_indent() == IndentStyle::Visual {\n+        wrap_str(result, context.config.max_width(), shape)\n+    } else {\n+        Some(result)\n+    }\n }\n \n fn is_extendable_parent(context: &RewriteContext, parent_str: &str) -> bool {"}]}