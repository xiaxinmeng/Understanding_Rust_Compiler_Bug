{"sha": "293a4919356a630312207af3e8d804c479c2dfbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5M2E0OTE5MzU2YTYzMDMxMjIwN2FmM2U4ZDgwNGM0NzljMmRmYmM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-11T05:34:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-11T05:34:52Z"}, "message": "Rollup merge of #80887 - camelid:fix-log-color-auto, r=RalfJung\n\nlog-color: Detect TTY based on stderr, not stdout\n\nFixes #78435 (again).\n\nLogging goes to stderr, not stdout, so we should base our automated\ndetection on stderr instead of stdout.\n\nThanks to Ralf Jung for noticing and reporting the bug!\n\nr? `@oli-obk`\ncc `@RalfJung`", "tree": {"sha": "20f05548fe9b1eea092e7e8aee85c4713b732147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20f05548fe9b1eea092e7e8aee85c4713b732147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/293a4919356a630312207af3e8d804c479c2dfbc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf++N9CRBK7hj4Ov3rIwAAdHIIAE7tMlDIpHGFrEuJcgvtMgcI\nnLfSFTUeJHRumEw1FiRMGmEDTImRJ/4pt7WZRY7J7xFDZPzi0//DgIz/StWufoNP\nx47wsoZWhLt+nKw1hJfz0Jqa8n49zCqrYGozIUAJdFLZtwJxIkI09P78RhBr3v05\n1Pd8ylJ/UplFdhsq7hXNPdHA/ifP3ZYML6/g9hAEblJB2rIB6HoCaVjMEqU1uchk\nJ44M99+qsjHbS1/q/i8A/ISRQURT5ev4CQhTPEHUVss9PjQP7qZ1EoldmCSdAKtr\n1BfUW0WWj4sw4WGxKyL0Lc8tRkI9luXUzLPGu/uVg4jSAzRKSCMMe21ZTby97nw=\n=Xpua\n-----END PGP SIGNATURE-----\n", "payload": "tree 20f05548fe9b1eea092e7e8aee85c4713b732147\nparent 6e2249d2fd83c2323189f1be02477e2e293bbcf4\nparent 7af29abbc1c2531d4172a9c69f250007c2ff1037\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610343292 +0900\ncommitter GitHub <noreply@github.com> 1610343292 +0900\n\nRollup merge of #80887 - camelid:fix-log-color-auto, r=RalfJung\n\nlog-color: Detect TTY based on stderr, not stdout\n\nFixes #78435 (again).\n\nLogging goes to stderr, not stdout, so we should base our automated\ndetection on stderr instead of stdout.\n\nThanks to Ralf Jung for noticing and reporting the bug!\n\nr? `@oli-obk`\ncc `@RalfJung`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/293a4919356a630312207af3e8d804c479c2dfbc", "html_url": "https://github.com/rust-lang/rust/commit/293a4919356a630312207af3e8d804c479c2dfbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/293a4919356a630312207af3e8d804c479c2dfbc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e2249d2fd83c2323189f1be02477e2e293bbcf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e2249d2fd83c2323189f1be02477e2e293bbcf4", "html_url": "https://github.com/rust-lang/rust/commit/6e2249d2fd83c2323189f1be02477e2e293bbcf4"}, {"sha": "7af29abbc1c2531d4172a9c69f250007c2ff1037", "url": "https://api.github.com/repos/rust-lang/rust/commits/7af29abbc1c2531d4172a9c69f250007c2ff1037", "html_url": "https://github.com/rust-lang/rust/commit/7af29abbc1c2531d4172a9c69f250007c2ff1037"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "c2a0d8ef7ea119434c6b473276ffbe7323245a08", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/293a4919356a630312207af3e8d804c479c2dfbc/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/293a4919356a630312207af3e8d804c479c2dfbc/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=293a4919356a630312207af3e8d804c479c2dfbc", "patch": "@@ -566,6 +566,25 @@ fn stdout_isatty() -> bool {\n     }\n }\n \n+// FIXME remove these and use winapi 0.3 instead\n+#[cfg(unix)]\n+fn stderr_isatty() -> bool {\n+    unsafe { libc::isatty(libc::STDERR_FILENO) != 0 }\n+}\n+\n+#[cfg(windows)]\n+fn stderr_isatty() -> bool {\n+    use winapi::um::consoleapi::GetConsoleMode;\n+    use winapi::um::processenv::GetStdHandle;\n+    use winapi::um::winbase::STD_ERROR_HANDLE;\n+\n+    unsafe {\n+        let handle = GetStdHandle(STD_ERROR_HANDLE);\n+        let mut out = 0;\n+        GetConsoleMode(handle, &mut out) != 0\n+    }\n+}\n+\n fn handle_explain(registry: Registry, code: &str, output: ErrorOutputType) {\n     let normalised =\n         if code.starts_with('E') { code.to_string() } else { format!(\"E{0:0>4}\", code) };\n@@ -1290,7 +1309,7 @@ pub fn init_env_logger(env: &str) {\n         Ok(value) => match value.as_ref() {\n             \"always\" => true,\n             \"never\" => false,\n-            \"auto\" => stdout_isatty(),\n+            \"auto\" => stderr_isatty(),\n             _ => early_error(\n                 ErrorOutputType::default(),\n                 &format!(\n@@ -1299,7 +1318,7 @@ pub fn init_env_logger(env: &str) {\n                 ),\n             ),\n         },\n-        Err(std::env::VarError::NotPresent) => stdout_isatty(),\n+        Err(std::env::VarError::NotPresent) => stderr_isatty(),\n         Err(std::env::VarError::NotUnicode(_value)) => early_error(\n             ErrorOutputType::default(),\n             \"non-Unicode log color value: expected one of always, never, or auto\","}]}