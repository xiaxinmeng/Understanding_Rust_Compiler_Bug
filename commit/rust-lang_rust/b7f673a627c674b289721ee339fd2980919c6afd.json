{"sha": "b7f673a627c674b289721ee339fd2980919c6afd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZjY3M2E2MjdjNjc0YjI4OTcyMWVlMzM5ZmQyOTgwOTE5YzZhZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-31T02:11:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-31T02:11:30Z"}, "message": "auto merge of #11784 : eminence/rust/fix_run_tests, r=alexcrichton\n\nThis test is designed to ensure that running a non-existent executable\r\nresults in a correct error message (FileNotFound in this case of this\r\ntest).  However, if you try to run an executable that doesn't exist, and\r\nthat requires searching through the $PATH, and one of the $PATH components\r\nis not readable, then a PermissionDenied error will be returned, instead\r\nof FileNotFound.\r\n\r\nUsing an absolute path skips the $PATH search logic in exec, thus by-passing the logic in exec that would have returned a PermissionDenied\r\n\r\nIn the specific case of my machine, /usr/bin/games was part of $PATH, but my user account wasn't in the games group (thus being unable to read /usr/bin/games)\r\n\r\nSee the man pages for execv and execve for more details.\r\n\r\nI've tested this on Linux and OSX, and I am fairly certain that there will be no problems on Windows", "tree": {"sha": "9534744c89ab638a64af8d5f4454c196c6b245e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9534744c89ab638a64af8d5f4454c196c6b245e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7f673a627c674b289721ee339fd2980919c6afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f673a627c674b289721ee339fd2980919c6afd", "html_url": "https://github.com/rust-lang/rust/commit/b7f673a627c674b289721ee339fd2980919c6afd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7f673a627c674b289721ee339fd2980919c6afd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac516a13bced2f5050032a897f79a1753499fb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac516a13bced2f5050032a897f79a1753499fb2", "html_url": "https://github.com/rust-lang/rust/commit/7ac516a13bced2f5050032a897f79a1753499fb2"}, {"sha": "506c71c980ab97f28e89032c2bba9a471c0b1fd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/506c71c980ab97f28e89032c2bba9a471c0b1fd4", "html_url": "https://github.com/rust-lang/rust/commit/506c71c980ab97f28e89032c2bba9a471c0b1fd4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ef2374f6095dad86aa0795864ea8dd6ed91b4b18", "filename": "src/libstd/run.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7f673a627c674b289721ee339fd2980919c6afd/src%2Flibstd%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7f673a627c674b289721ee339fd2980919c6afd/src%2Flibstd%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frun.rs?ref=b7f673a627c674b289721ee339fd2980919c6afd", "patch": "@@ -360,7 +360,7 @@ mod tests {\n             trapped_io_error = true;\n             assert_eq!(e.kind, FileNotFound);\n         }).inside(|| -> Option<run::ProcessOutput> {\n-            run::process_output(\"no-binary-by-this-name-should-exist\", [])\n+            run::process_output(\"/no-binary-by-this-name-should-exist\", [])\n         });\n         assert!(trapped_io_error);\n         assert!(opt_outp.is_none());"}]}