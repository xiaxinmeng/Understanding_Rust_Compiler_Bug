{"sha": "ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "node_id": "C_kwDOAAsO6NoAKGNjZjFiZGJjYTY5NjIzMjlmZGY1ZmRjNTdhN2FiZjM2ZWI4ZGRhZmU", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-10T21:49:33Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-11T20:58:57Z"}, "message": "Remove box syntax for Box<Attributes> construction\n\nAttributes only has 48 bytes according to compiler internal rustdoc.", "tree": {"sha": "1203e398d4712168db2e2eb770a9955d34b19d95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1203e398d4712168db2e2eb770a9955d34b19d95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "html_url": "https://github.com/rust-lang/rust/commit/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ac17fcddb80187a76a461982e2028a5df48de3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac17fcddb80187a76a461982e2028a5df48de3d", "html_url": "https://github.com/rust-lang/rust/commit/1ac17fcddb80187a76a461982e2028a5df48de3d"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "23af7d2ef1e2494173da3bc657f0469784c12d5e", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "patch": "@@ -124,8 +124,14 @@ pub(crate) fn try_inline(\n \n     let (attrs, cfg) = merge_attrs(cx, Some(parent_module), load_attrs(cx, did), attrs_clone);\n     cx.inlined.insert(did.into());\n-    let mut item =\n-        clean::Item::from_def_id_and_attrs_and_parts(did, Some(name), kind, box attrs, cx, cfg);\n+    let mut item = clean::Item::from_def_id_and_attrs_and_parts(\n+        did,\n+        Some(name),\n+        kind,\n+        Box::new(attrs),\n+        cx,\n+        cfg,\n+    );\n     if let Some(import_def_id) = import_def_id {\n         // The visibility needs to reflect the one from the reexport and not from the \"source\" DefId.\n         item.visibility = cx.tcx.visibility(import_def_id).clean(cx);\n@@ -506,7 +512,7 @@ pub(crate) fn build_impl(\n                 ImplKind::Normal\n             },\n         }),\n-        box merged_attrs,\n+        Box::new(merged_attrs),\n         cx,\n         cfg,\n     ));\n@@ -535,7 +541,7 @@ fn build_module(\n                 let prim_ty = clean::PrimitiveType::from(p);\n                 items.push(clean::Item {\n                     name: None,\n-                    attrs: box clean::Attributes::default(),\n+                    attrs: Box::new(clean::Attributes::default()),\n                     item_id: ItemId::Primitive(prim_ty, did.krate),\n                     visibility: clean::Public,\n                     kind: box clean::ImportItem(clean::Import::new_simple("}, {"sha": "8c15ce42ba415f57a6c8e96ecb6dc74a715a555e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "patch": "@@ -2062,7 +2062,7 @@ fn clean_extern_crate<'tcx>(\n     // FIXME: using `from_def_id_and_kind` breaks `rustdoc/masked` for some reason\n     vec![Item {\n         name: Some(name),\n-        attrs: box attrs.clean(cx),\n+        attrs: Box::new(attrs.clean(cx)),\n         item_id: crate_def_id.into(),\n         visibility: ty_vis.clean(cx),\n         kind: box ExternCrateItem { src: orig_name },"}, {"sha": "d29ba2dedaf717260094c80e9b54c62e5df03d13", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=ccf1bdbca6962329fdf5fdc57a7abf36eb8ddafe", "patch": "@@ -477,7 +477,7 @@ impl Item {\n             def_id,\n             name,\n             kind,\n-            box ast_attrs.clean(cx),\n+            Box::new(ast_attrs.clean(cx)),\n             cx,\n             ast_attrs.cfg(cx.tcx, &cx.cache.hidden_cfg),\n         )"}]}