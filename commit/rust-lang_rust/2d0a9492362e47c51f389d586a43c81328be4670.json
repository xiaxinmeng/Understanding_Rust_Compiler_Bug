{"sha": "2d0a9492362e47c51f389d586a43c81328be4670", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMGE5NDkyMzYyZTQ3YzUxZjM4OWQ1ODZhNDNjODEzMjhiZTQ2NzA=", "commit": {"author": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2020-05-13T23:06:07Z"}, "committer": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2020-05-13T23:06:07Z"}, "message": "Use back ticks instead of single quotes around code", "tree": {"sha": "71caf8f1abdea2bd1de8be38e4595b7dac38ae85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71caf8f1abdea2bd1de8be38e4595b7dac38ae85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d0a9492362e47c51f389d586a43c81328be4670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0a9492362e47c51f389d586a43c81328be4670", "html_url": "https://github.com/rust-lang/rust/commit/2d0a9492362e47c51f389d586a43c81328be4670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d0a9492362e47c51f389d586a43c81328be4670/comments", "author": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "530a35f3f949d70c53accede35fa561429585bc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/530a35f3f949d70c53accede35fa561429585bc1", "html_url": "https://github.com/rust-lang/rust/commit/530a35f3f949d70c53accede35fa561429585bc1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2baeb8607f82b5fa98870b41e81174f1ff2bb303", "filename": "crates/ra_assists/src/handlers/add_custom_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs?ref=2d0a9492362e47c51f389d586a43c81328be4670", "patch": "@@ -49,7 +49,7 @@ pub(crate) fn add_custom_impl(acc: &mut Assists, ctx: &AssistContext) -> Option<\n     let start_offset = annotated.syntax().parent()?.text_range().end();\n \n     let label =\n-        format!(\"Add custom impl '{}' for '{}'\", trait_token.text().as_str(), annotated_name);\n+        format!(\"Add custom impl `{}` for `{}`\", trait_token.text().as_str(), annotated_name);\n \n     let target = attr.syntax().text_range();\n     acc.add(AssistId(\"add_custom_impl\"), label, target, |edit| {"}, {"sha": "0c7d5e355f7952f2490586399ebf9a62755aacbd", "filename": "crates/ra_assists/src/handlers/add_explicit_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs?ref=2d0a9492362e47c51f389d586a43c81328be4670", "patch": "@@ -61,7 +61,7 @@ pub(crate) fn add_explicit_type(acc: &mut Assists, ctx: &AssistContext) -> Optio\n     let inferred_type = ty.display_source_code(ctx.db, module.into()).ok()?;\n     acc.add(\n         AssistId(\"add_explicit_type\"),\n-        format!(\"Insert explicit type '{}'\", inferred_type),\n+        format!(\"Insert explicit type `{}`\", inferred_type),\n         pat_range,\n         |builder| match ascribed_ty {\n             Some(ascribed_ty) => {"}, {"sha": "d5efb6ab3c99ff10d396879999b14265c275bc54", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=2d0a9492362e47c51f389d586a43c81328be4670", "patch": "@@ -157,7 +157,7 @@ impl FlycheckThread {\n             CheckEvent::Begin => {\n                 task_send\n                     .send(CheckTask::Status(WorkDoneProgress::Begin(WorkDoneProgressBegin {\n-                        title: \"Running 'cargo check'\".to_string(),\n+                        title: \"Running `cargo check`\".to_string(),\n                         cancellable: Some(false),\n                         message: None,\n                         percentage: None,"}, {"sha": "d68cf0a82bf434b86e1a91539b912b5601c7578f", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0a9492362e47c51f389d586a43c81328be4670/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=2d0a9492362e47c51f389d586a43c81328be4670", "patch": "@@ -54,7 +54,7 @@ fn rustc_unescape_error_to_string(err: unescape::EscapeError) -> &'static str {\n             \"Unicode escape must not be empty\"\n         }\n         EE::UnclosedUnicodeEscape => {\n-            \"Missing '}' to terminate the unicode escape\"\n+            \"Missing `}` to terminate the unicode escape\"\n         }\n         EE::LeadingUnderscoreUnicodeEscape => {\n             \"Unicode escape code must not begin with an underscore\""}]}