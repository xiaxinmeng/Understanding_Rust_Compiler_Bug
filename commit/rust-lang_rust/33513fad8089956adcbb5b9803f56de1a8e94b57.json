{"sha": "33513fad8089956adcbb5b9803f56de1a8e94b57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNTEzZmFkODA4OTk1NmFkY2JiNWI5ODAzZjU2ZGUxYThlOTRiNTc=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-01-30T09:35:50Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-02-13T10:13:13Z"}, "message": "Avoid an intermediate Vec in mir simplify", "tree": {"sha": "e30b1d2e76b4b36cbdac694521de537c540870d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e30b1d2e76b4b36cbdac694521de537c540870d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33513fad8089956adcbb5b9803f56de1a8e94b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33513fad8089956adcbb5b9803f56de1a8e94b57", "html_url": "https://github.com/rust-lang/rust/commit/33513fad8089956adcbb5b9803f56de1a8e94b57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33513fad8089956adcbb5b9803f56de1a8e94b57/comments", "author": null, "committer": null, "parents": [{"sha": "dec8166abc6675627819723b10301e395f3876d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dec8166abc6675627819723b10301e395f3876d5", "html_url": "https://github.com/rust-lang/rust/commit/dec8166abc6675627819723b10301e395f3876d5"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "3a1ccb504652486dee0add7c5dc1a9967f5193aa", "filename": "src/librustc_mir/transform/simplify.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/33513fad8089956adcbb5b9803f56de1a8e94b57/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33513fad8089956adcbb5b9803f56de1a8e94b57/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs?ref=33513fad8089956adcbb5b9803f56de1a8e94b57", "patch": "@@ -94,7 +94,6 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n         self.strip_nops();\n \n         let mut start = START_BLOCK;\n-        let mut new_stmts = vec![];\n \n         loop {\n             let mut changed = false;\n@@ -119,13 +118,11 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n                 while inner_changed {\n                     inner_changed = false;\n                     inner_changed |= self.simplify_branch(&mut terminator);\n-                    inner_changed |= self.merge_successor(&mut new_stmts, &mut terminator);\n+                    inner_changed |= self.merge_successor(bb, &mut terminator);\n                     changed |= inner_changed;\n                 }\n \n-                let data = &mut self.basic_blocks[bb];\n-                data.statements.append(&mut new_stmts);\n-                data.terminator = Some(terminator);\n+                self.basic_blocks[bb].terminator = Some(terminator);\n \n                 changed |= inner_changed;\n             }\n@@ -199,7 +196,7 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n     // merge a block with 1 `goto` predecessor to its parent\n     fn merge_successor(\n         &mut self,\n-        new_stmts: &mut Vec<Statement<'tcx>>,\n+        merge_into: BasicBlock,\n         terminator: &mut Terminator<'tcx>,\n     ) -> bool {\n         let target = match terminator.kind {\n@@ -216,7 +213,9 @@ impl<'a, 'tcx> CfgSimplifier<'a, 'tcx> {\n                 return false;\n             }\n         };\n-        new_stmts.extend(self.basic_blocks[target].statements.drain(..));\n+\n+        let (from, to) = self.basic_blocks.pick2_mut(target, merge_into);\n+        to.statements.append(&mut from.statements);\n         self.pred_count[target] = 0;\n \n         true"}]}