{"sha": "d552e34e2030df102d0730e91af4b253dc9e07fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NTJlMzRlMjAzMGRmMTAyZDA3MzBlOTFhZjRiMjUzZGM5ZTA3ZmE=", "commit": {"author": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2017-05-18T08:33:24Z"}, "committer": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2017-05-25T04:57:05Z"}, "message": "Use the improved submodule handling", "tree": {"sha": "d8f5966a36b96ec1519907cec7b47d8ba5d8c938", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8f5966a36b96ec1519907cec7b47d8ba5d8c938"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d552e34e2030df102d0730e91af4b253dc9e07fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d552e34e2030df102d0730e91af4b253dc9e07fa", "html_url": "https://github.com/rust-lang/rust/commit/d552e34e2030df102d0730e91af4b253dc9e07fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d552e34e2030df102d0730e91af4b253dc9e07fa/comments", "author": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf747fcbf716a8afced9d23aa15bb47d93805209", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf747fcbf716a8afced9d23aa15bb47d93805209", "html_url": "https://github.com/rust-lang/rust/commit/cf747fcbf716a8afced9d23aa15bb47d93805209"}], "stats": {"total": 66, "additions": 18, "deletions": 48}, "files": [{"sha": "7446e34232482c93c3e6bc705269ca65a7683105", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 18, "deletions": 48, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/d552e34e2030df102d0730e91af4b253dc9e07fa/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/d552e34e2030df102d0730e91af4b253dc9e07fa/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=d552e34e2030df102d0730e91af4b253dc9e07fa", "patch": "@@ -127,13 +127,13 @@ def unpack(tarball, dst, verbose=False, match=None):\n             shutil.move(tp, fp)\n     shutil.rmtree(os.path.join(dst, fname))\n \n-def run(args, verbose=False, exception=False, cwd=None, env=None):\n+def run(args, verbose=False, exception=False, **kwargs):\n     if verbose:\n         print(\"running: \" + ' '.join(args))\n     sys.stdout.flush()\n     # Use Popen here instead of call() as it apparently allows powershell on\n     # Windows to not lock up waiting for input presumably.\n-    ret = subprocess.Popen(args, cwd=cwd, env=env)\n+    ret = subprocess.Popen(args, **kwargs)\n     code = ret.wait()\n     if code != 0:\n         err = \"failed to run: \" + ' '.join(args)\n@@ -395,16 +395,6 @@ def build_bootstrap(self):\n             args.append(\"--frozen\")\n         run(args, env=env, verbose=self.verbose)\n \n-    def output(self, args, env=None, cwd=None):\n-        default_encoding = sys.getdefaultencoding()\n-        proc = subprocess.Popen(args, stdout=subprocess.PIPE, env=env, cwd=cwd)\n-        (out, err) = proc.communicate()\n-        ret = proc.wait()\n-        if ret != 0:\n-            print(out)\n-            sys.exit(ret)\n-        return out.decode(default_encoding)\n-\n     def build_triple(self):\n         default_encoding = sys.getdefaultencoding()\n         config = self.get_toml('build')\n@@ -549,46 +539,26 @@ def update_submodules(self):\n             return\n \n         print('Updating submodules')\n-        output = self.output([\"git\", \"submodule\", \"status\"], cwd=self.rust_root)\n-        submodules = []\n-        for line in output.splitlines():\n-            # NOTE `git submodule status` output looks like this:\n-            #\n-            # -5066b7dcab7e700844b0e2ba71b8af9dc627a59b src/liblibc\n-            # +b37ef24aa82d2be3a3cc0fe89bf82292f4ca181c src/compiler-rt (remotes/origin/..)\n-            #  e058ca661692a8d01f8cf9d35939dfe3105ce968 src/jemalloc (3.6.0-533-ge058ca6)\n-            #\n-            # The first character can be '-', '+' or ' ' and denotes the\n-            # `State` of the submodule Right next to this character is the\n-            # SHA-1 of the submodule HEAD And after that comes the path to the\n-            # submodule\n-            path = line[1:].split(' ')[1]\n-            submodules.append([path, line[0]])\n-\n-        run([\"git\", \"submodule\", \"sync\"], cwd=self.rust_root)\n-\n-        for submod in submodules:\n-            path, status = submod\n-            if path.endswith('llvm') and \\\n+        run([\"git\", \"submodule\", \"-q\", \"sync\"], cwd=self.rust_root)\n+        # FIXME: nobody does, but this won't work well with whitespace in\n+        # submodule path\n+        submodules = [s.split()[1] for s in subprocess.check_output(\n+            [\"git\", \"config\", \"--file\", os.path.join(\n+                self.rust_root, \".gitmodules\"), \"--get-regexp\", \"path\"]).splitlines()]\n+        for module in submodules:\n+            if module.endswith(b\"llvm\") and \\\n                 (self.get_toml('llvm-config') or self.get_mk('CFG_LLVM_ROOT')):\n                 continue\n-            if path.endswith('jemalloc') and \\\n+            if module.endswith(b\"jemalloc\") and \\\n                 (self.get_toml('jemalloc') or self.get_mk('CFG_JEMALLOC_ROOT')):\n                 continue\n-            submod_path = os.path.join(self.rust_root, path)\n-\n-            if status == ' ':\n-                run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n-                run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n-            elif status == '+':\n-                run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n-                run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n-                run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n-            elif status == '-':\n-                run([\"git\", \"submodule\", \"init\", path], cwd=self.rust_root)\n-                run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n-            else:\n-                raise ValueError('unknown submodule status: ' + status)\n+            run([\"git\", \"submodule\", \"update\",\n+                      \"--init\", module], cwd=self.rust_root)\n+        run([\"git\", \"submodule\", \"-q\", \"foreach\", \"git\",\n+                  \"reset\", \"-q\", \"--hard\"], cwd=self.rust_root)\n+        run([\"git\", \"submodule\", \"-q\", \"foreach\", \"git\",\n+                  \"clean\", \"-qdfx\"], cwd=self.rust_root)\n+\n \n def bootstrap():\n     parser = argparse.ArgumentParser(description='Build rust')"}]}