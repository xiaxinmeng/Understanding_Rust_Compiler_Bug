{"sha": "1b8a26653f9d8734767a40af576223e267d51d6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiOGEyNjY1M2Y5ZDg3MzQ3NjdhNDBhZjU3NjIyM2UyNjdkNTFkNmQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-27T04:15:38Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-31T14:20:18Z"}, "message": "Use matches in is_dylib", "tree": {"sha": "1d64ba463172f635ac4d10abcc909f93255e49fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d64ba463172f635ac4d10abcc909f93255e49fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b8a26653f9d8734767a40af576223e267d51d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8a26653f9d8734767a40af576223e267d51d6d", "html_url": "https://github.com/rust-lang/rust/commit/1b8a26653f9d8734767a40af576223e267d51d6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b8a26653f9d8734767a40af576223e267d51d6d/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b9722092622c8652d2028f3cf67e7ce2f7c935a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b9722092622c8652d2028f3cf67e7ce2f7c935a", "html_url": "https://github.com/rust-lang/rust/commit/3b9722092622c8652d2028f3cf67e7ce2f7c935a"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "0aea01d8331e652923f87a848fcab43c2c92d35d", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1b8a26653f9d8734767a40af576223e267d51d6d/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8a26653f9d8734767a40af576223e267d51d6d/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=1b8a26653f9d8734767a40af576223e267d51d6d", "patch": "@@ -323,16 +323,8 @@ pub fn load_extern_resources(cargo_toml: &Path, cargo_features: &CargoFeatures)\n \n // FIXME: File a better way to know if it is a dylib\n fn is_dylib(path: &Path) -> bool {\n-    let ext = match path.extension().and_then(OsStr::to_str).map(|it| it.to_string().to_lowercase())\n-    {\n-        None => return false,\n-        Some(ext) => ext,\n-    };\n-\n-    match ext.as_str() {\n-        \"dll\" => true,\n-        \"dylib\" => true,\n-        \"so\" => true,\n-        _ => false,\n+    match path.extension().and_then(OsStr::to_str).map(|it| it.to_string().to_lowercase()) {\n+        None => false,\n+        Some(ext) => matches!(ext.as_str(), \"dll\" | \"dylib\" | \"so\"),\n     }\n }"}]}