{"sha": "f23fb19ee508515912e136c948a0242cc88a2d4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyM2ZiMTllZTUwODUxNTkxMmUxMzZjOTQ4YTAyNDJjYzg4YTJkNGU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-06T21:15:43Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-07T03:41:20Z"}, "message": "vec: avoid `ptrtoint`/`inttoptr` in the iterators\n\nThis results in throwing away alias analysis information, because LLVM\ndoes *not* implement reasoning about these conversions yet.\n\nWe specialize zero-size types since a `getelementptr` offset will\nreturn us the same pointer, making it broken as a simple counter.", "tree": {"sha": "f83ee05e78fd9ea5560c03529c5c9860d576a061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f83ee05e78fd9ea5560c03529c5c9860d576a061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f23fb19ee508515912e136c948a0242cc88a2d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f23fb19ee508515912e136c948a0242cc88a2d4e", "html_url": "https://github.com/rust-lang/rust/commit/f23fb19ee508515912e136c948a0242cc88a2d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f23fb19ee508515912e136c948a0242cc88a2d4e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f9bbc476d9e4403bc5cd1edfe4a651bd341e811", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f9bbc476d9e4403bc5cd1edfe4a651bd341e811", "html_url": "https://github.com/rust-lang/rust/commit/8f9bbc476d9e4403bc5cd1edfe4a651bd341e811"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "8dbfb3ec543e26488468302169cb192040c9cbac", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f23fb19ee508515912e136c948a0242cc88a2d4e/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f23fb19ee508515912e136c948a0242cc88a2d4e/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=f23fb19ee508515912e136c948a0242cc88a2d4e", "patch": "@@ -849,10 +849,15 @@ impl<'self,T> ImmutableVector<'self, T> for &'self [T] {\n     fn iter(self) -> VecIterator<'self, T> {\n         unsafe {\n             let p = vec::raw::to_ptr(self);\n-            VecIterator{ptr: p,\n-                        end: (p as uint + self.len() *\n-                              sys::nonzero_size_of::<T>()) as *T,\n-                        lifetime: cast::transmute(p)}\n+            if sys::size_of::<T>() == 0 {\n+                VecIterator{ptr: p,\n+                            end: (p as uint + self.len()) as *T,\n+                            lifetime: cast::transmute(p)}\n+            } else {\n+                VecIterator{ptr: p,\n+                            end: p.offset(self.len() as int),\n+                            lifetime: cast::transmute(p)}\n+            }\n         }\n     }\n \n@@ -1826,10 +1831,15 @@ impl<'self,T> MutableVector<'self, T> for &'self mut [T] {\n     fn mut_iter(self) -> VecMutIterator<'self, T> {\n         unsafe {\n             let p = vec::raw::to_mut_ptr(self);\n-            VecMutIterator{ptr: p,\n-                           end: (p as uint + self.len() *\n-                                 sys::nonzero_size_of::<T>()) as *mut T,\n-                           lifetime: cast::transmute(p)}\n+            if sys::size_of::<T>() == 0 {\n+                VecMutIterator{ptr: p,\n+                               end: (p as uint + self.len()) as *mut T,\n+                               lifetime: cast::transmute(p)}\n+            } else {\n+                VecMutIterator{ptr: p,\n+                               end: p.offset(self.len() as int),\n+                               lifetime: cast::transmute(p)}\n+            }\n         }\n     }\n "}]}