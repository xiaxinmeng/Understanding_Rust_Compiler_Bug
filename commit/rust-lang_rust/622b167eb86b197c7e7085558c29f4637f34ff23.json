{"sha": "622b167eb86b197c7e7085558c29f4637f34ff23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMmIxNjdlYjg2YjE5N2M3ZTcwODU1NThjMjlmNDYzN2YzNGZmMjM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T12:03:28Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "needless_borrow: allow other lints, make fixable", "tree": {"sha": "fd8a43be52fac7cf3630359416b336b75da6caca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd8a43be52fac7cf3630359416b336b75da6caca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/622b167eb86b197c7e7085558c29f4637f34ff23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/622b167eb86b197c7e7085558c29f4637f34ff23", "html_url": "https://github.com/rust-lang/rust/commit/622b167eb86b197c7e7085558c29f4637f34ff23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/622b167eb86b197c7e7085558c29f4637f34ff23/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354", "html_url": "https://github.com/rust-lang/rust/commit/0d8e4d7c37b625582c3c7d8bdc1bd194e21c2354"}], "stats": {"total": 90, "additions": 70, "deletions": 20}, "files": [{"sha": "50f9b7c7ba63deacb24ce940bf8159a1591da5c4", "filename": "tests/ui/needless_borrow.fixed", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/622b167eb86b197c7e7085558c29f4637f34ff23/tests%2Fui%2Fneedless_borrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/622b167eb86b197c7e7085558c29f4637f34ff23/tests%2Fui%2Fneedless_borrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.fixed?ref=622b167eb86b197c7e7085558c29f4637f34ff23", "patch": "@@ -0,0 +1,62 @@\n+// run-rustfix\n+\n+#![allow(clippy::needless_borrowed_reference)]\n+\n+#[allow(clippy::trivially_copy_pass_by_ref)]\n+fn x(y: &i32) -> i32 {\n+    *y\n+}\n+\n+#[warn(clippy::all, clippy::needless_borrow)]\n+#[allow(unused_variables)]\n+fn main() {\n+    let a = 5;\n+    let b = x(&a);\n+    let c = x(&a);\n+    let s = &String::from(\"hi\");\n+    let s_ident = f(&s); // should not error, because `&String` implements Copy, but `String` does not\n+    let g_val = g(&Vec::new()); // should not error, because `&Vec<T>` derefs to `&[T]`\n+    let vec = Vec::new();\n+    let vec_val = g(&vec); // should not error, because `&Vec<T>` derefs to `&[T]`\n+    h(&\"foo\"); // should not error, because the `&&str` is required, due to `&Trait`\n+    if let Some(cake) = Some(&5) {}\n+    let garbl = match 42 {\n+        44 => &a,\n+        45 => {\n+            println!(\"foo\");\n+            &&a // FIXME: this should lint, too\n+        },\n+        46 => &a,\n+        _ => panic!(),\n+    };\n+}\n+\n+fn f<T: Copy>(y: &T) -> T {\n+    *y\n+}\n+\n+fn g(y: &[u8]) -> u8 {\n+    y[0]\n+}\n+\n+trait Trait {}\n+\n+impl<'a> Trait for &'a str {}\n+\n+fn h(_: &dyn Trait) {}\n+#[warn(clippy::needless_borrow)]\n+#[allow(dead_code)]\n+fn issue_1432() {\n+    let mut v = Vec::<String>::new();\n+    let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+    let _ = v.iter().filter(|&a| a.is_empty());\n+\n+    let _ = v.iter().filter(|&a| a.is_empty());\n+}\n+\n+#[allow(dead_code)]\n+#[warn(clippy::needless_borrow)]\n+#[derive(Debug)]\n+enum Foo<'a> {\n+    Str(&'a str),\n+}"}, {"sha": "8677b957e4c3b335ea7c86df1becaf6ec1d69776", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/622b167eb86b197c7e7085558c29f4637f34ff23/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/622b167eb86b197c7e7085558c29f4637f34ff23/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=622b167eb86b197c7e7085558c29f4637f34ff23", "patch": "@@ -1,4 +1,6 @@\n-use std::borrow::Cow;\n+// run-rustfix\n+\n+#![allow(clippy::needless_borrowed_reference)]\n \n #[allow(clippy::trivially_copy_pass_by_ref)]\n fn x(y: &i32) -> i32 {"}, {"sha": "49df9cd072b3e3c89e058f3557dcca30d5083c92", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/622b167eb86b197c7e7085558c29f4637f34ff23/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/622b167eb86b197c7e7085558c29f4637f34ff23/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=622b167eb86b197c7e7085558c29f4637f34ff23", "patch": "@@ -1,42 +1,28 @@\n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:13:15\n+  --> $DIR/needless_borrow.rs:15:15\n    |\n LL |     let c = x(&&a);\n    |               ^^^ help: change this to: `&a`\n    |\n    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow.rs:20:17\n+  --> $DIR/needless_borrow.rs:22:17\n    |\n LL |     if let Some(ref cake) = Some(&5) {}\n    |                 ^^^^^^^^ help: change this to: `cake`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:27:15\n+  --> $DIR/needless_borrow.rs:29:15\n    |\n LL |         46 => &&a,\n    |               ^^^ help: change this to: `&a`\n \n-error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrow.rs:49:34\n-   |\n-LL |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n-   |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n-   |\n-   = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n-\n-error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrow.rs:50:30\n-   |\n-LL |     let _ = v.iter().filter(|&ref a| a.is_empty());\n-   |                              ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n-\n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow.rs:50:31\n+  --> $DIR/needless_borrow.rs:52:31\n    |\n LL |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n "}]}