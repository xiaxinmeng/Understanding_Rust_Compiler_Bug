{"sha": "39a9b88f4e50d4c0204bb12c0821b49a302ab3c5", "node_id": "C_kwDOAAsO6NoAKDM5YTliODhmNGU1MGQ0YzAyMDRiYjEyYzA4MjFiNDlhMzAyYWIzYzU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-21T07:19:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-21T07:19:49Z"}, "message": "Auto merge of #100627 - krasimirgg:lto-llvm-16, r=cuviper\n\nllvm-wrapper: adapt for LLVM API change\n\nNo functional changes intended.\n\nLLVM commit https://github.com/llvm/llvm-project/commit/633f5663c37a670e28040cadd938200abd854483 removed `createWriteThinLTOBitcodePass`.\nThis adapts PassWrapper similarly to the example mentioned upstream: https://github.com/llvm/llvm-project/commit/853b57fe80bdb9d6b19697e6f2abc734834e9f6d.\n\nDetected via our experimental rust + llvm @ head bot: https://buildkite.com/llvm-project/rust-llvm-integrate-prototype/builds/12768#0182a6be-ed6e-4dc6-a230-7a46f9d3a2c2/205-537", "tree": {"sha": "8490f04f1647163ebb503e4d46325d23895e9336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8490f04f1647163ebb503e4d46325d23895e9336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39a9b88f4e50d4c0204bb12c0821b49a302ab3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39a9b88f4e50d4c0204bb12c0821b49a302ab3c5", "html_url": "https://github.com/rust-lang/rust/commit/39a9b88f4e50d4c0204bb12c0821b49a302ab3c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39a9b88f4e50d4c0204bb12c0821b49a302ab3c5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa8e761defc245d08d2cf226786def8a8bb56e53", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa8e761defc245d08d2cf226786def8a8bb56e53", "html_url": "https://github.com/rust-lang/rust/commit/aa8e761defc245d08d2cf226786def8a8bb56e53"}, {"sha": "7cba1f9eab463738f6b3530597cae76cd8bc4dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cba1f9eab463738f6b3530597cae76cd8bc4dc0", "html_url": "https://github.com/rust-lang/rust/commit/7cba1f9eab463738f6b3530597cae76cd8bc4dc0"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "05d2a214d0b79374b73454ab9c7592fe2d7b9255", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/39a9b88f4e50d4c0204bb12c0821b49a302ab3c5/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/39a9b88f4e50d4c0204bb12c0821b49a302ab3c5/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=39a9b88f4e50d4c0204bb12c0821b49a302ab3c5", "patch": "@@ -31,6 +31,9 @@\n #include \"llvm/Transforms/IPO/PassManagerBuilder.h\"\n #include \"llvm/Transforms/IPO/AlwaysInliner.h\"\n #include \"llvm/Transforms/IPO/FunctionImport.h\"\n+#if LLVM_VERSION_GE(15, 0)\n+#include \"llvm/Transforms/IPO/ThinLTOBitcodeWriter.h\"\n+#endif\n #include \"llvm/Transforms/Utils/AddDiscriminators.h\"\n #include \"llvm/Transforms/Utils/FunctionImportUtils.h\"\n #include \"llvm/LTO/LTO.h\"\n@@ -1587,13 +1590,31 @@ LLVMRustThinLTOBufferCreate(LLVMModuleRef M, bool is_thin) {\n   {\n     raw_string_ostream OS(Ret->data);\n     {\n-      legacy::PassManager PM;\n       if (is_thin) {\n+#if LLVM_VERSION_LT(15, 0)\n+        legacy::PassManager PM;\n         PM.add(createWriteThinLTOBitcodePass(OS));\n+        PM.run(*unwrap(M));\n+#else\n+        PassBuilder PB;\n+        LoopAnalysisManager LAM;\n+        FunctionAnalysisManager FAM;\n+        CGSCCAnalysisManager CGAM;\n+        ModuleAnalysisManager MAM;\n+        PB.registerModuleAnalyses(MAM);\n+        PB.registerCGSCCAnalyses(CGAM);\n+        PB.registerFunctionAnalyses(FAM);\n+        PB.registerLoopAnalyses(LAM);\n+        PB.crossRegisterProxies(LAM, FAM, CGAM, MAM);\n+        ModulePassManager MPM;\n+        MPM.addPass(ThinLTOBitcodeWriterPass(OS, nullptr));\n+        MPM.run(*unwrap(M), MAM);\n+#endif\n       } else {\n+        legacy::PassManager PM;\n         PM.add(createBitcodeWriterPass(OS));\n+        PM.run(*unwrap(M));\n       }\n-      PM.run(*unwrap(M));\n     }\n   }\n   return Ret.release();"}]}