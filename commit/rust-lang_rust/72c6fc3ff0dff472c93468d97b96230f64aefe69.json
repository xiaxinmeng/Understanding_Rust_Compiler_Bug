{"sha": "72c6fc3ff0dff472c93468d97b96230f64aefe69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYzZmYzNmZjBkZmY0NzJjOTM0NjhkOTdiOTYyMzBmNjRhZWZlNjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-25T14:55:57Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-25T14:55:57Z"}, "message": "Fix add visibility false-positive", "tree": {"sha": "6a6f16e8d540bfc42edf636e02c489f6d97fd488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a6f16e8d540bfc42edf636e02c489f6d97fd488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72c6fc3ff0dff472c93468d97b96230f64aefe69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72c6fc3ff0dff472c93468d97b96230f64aefe69", "html_url": "https://github.com/rust-lang/rust/commit/72c6fc3ff0dff472c93468d97b96230f64aefe69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72c6fc3ff0dff472c93468d97b96230f64aefe69/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3665fccfb0a81752c35e56f6c41043133a949dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3665fccfb0a81752c35e56f6c41043133a949dd", "html_url": "https://github.com/rust-lang/rust/commit/b3665fccfb0a81752c35e56f6c41043133a949dd"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "cd6d1ee6c3cbe8f019264793ead1588f1f625db8", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 28, "deletions": 12, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/72c6fc3ff0dff472c93468d97b96230f64aefe69/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c6fc3ff0dff472c93468d97b96230f64aefe69/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=72c6fc3ff0dff472c93468d97b96230f64aefe69", "patch": "@@ -2,13 +2,14 @@ use ra_syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n     AstNode,\n     SyntaxKind::{\n-        ATTR, COMMENT, CONST_DEF, ENUM_DEF, FN_DEF, IDENT, MODULE, STRUCT_DEF, TRAIT_DEF,\n-        VISIBILITY, WHITESPACE,\n+        ATTR, COMMENT, CONST_DEF, ENUM_DEF, FN_DEF, MODULE, STRUCT_DEF, TRAIT_DEF, VISIBILITY,\n+        WHITESPACE,\n     },\n     SyntaxNode, TextUnit, T,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n+use test_utils::tested_by;\n \n // Assist: change_visibility\n //\n@@ -47,13 +48,16 @@ fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n         }\n         (vis_offset(&parent), keyword.text_range())\n     } else {\n-        let ident = ctx.token_at_offset().find(|leaf| leaf.kind() == IDENT)?;\n-        let field = ident.parent().ancestors().find_map(ast::RecordFieldDef::cast)?;\n-        if field.name()?.syntax().text_range() != ident.text_range() && field.visibility().is_some()\n-        {\n+        let field_name: ast::Name = ctx.find_node_at_offset()?;\n+        let field = field_name.syntax().ancestors().find_map(ast::RecordFieldDef::cast)?;\n+        if field.name()? != field_name {\n+            tested_by!(change_visibility_field_false_positive);\n             return None;\n         }\n-        (vis_offset(field.syntax()), ident.text_range())\n+        if field.visibility().is_some() {\n+            return None;\n+        }\n+        (vis_offset(field.syntax()), field_name.syntax().text_range())\n     };\n \n     ctx.add_assist(AssistId(\"change_visibility\"), \"Change visibility to pub(crate)\", |edit| {\n@@ -98,8 +102,11 @@ fn change_vis(ctx: AssistCtx, vis: ast::Visibility) -> Option<Assist> {\n \n #[cfg(test)]\n mod tests {\n+    use test_utils::covers;\n+\n+    use crate::helpers::{check_assist, check_assist_not_applicable, check_assist_target};\n+\n     use super::*;\n-    use crate::helpers::{check_assist, check_assist_target};\n \n     #[test]\n     fn change_visibility_adds_pub_crate_to_items() {\n@@ -120,8 +127,17 @@ mod tests {\n     fn change_visibility_works_with_struct_fields() {\n         check_assist(\n             change_visibility,\n-            \"struct S { <|>field: u32 }\",\n-            \"struct S { <|>pub(crate) field: u32 }\",\n+            r\"struct S { <|>field: u32 }\",\n+            r\"struct S { <|>pub(crate) field: u32 }\",\n+        )\n+    }\n+\n+    #[test]\n+    fn change_visibility_field_false_positive() {\n+        covers!(change_visibility_field_false_positive);\n+        check_assist_not_applicable(\n+            change_visibility,\n+            r\"struct S { field: [(); { let <|>x = ();}] }\",\n         )\n     }\n \n@@ -144,15 +160,15 @@ mod tests {\n     fn change_visibility_handles_comment_attrs() {\n         check_assist(\n             change_visibility,\n-            \"\n+            r\"\n             /// docs\n \n             // comments\n \n             #[derive(Debug)]\n             <|>struct Foo;\n             \",\n-            \"\n+            r\"\n             /// docs\n \n             // comments"}, {"sha": "6c2a2b8b6ea66f6a7cdfd0a937dbda0f387633fd", "filename": "crates/ra_assists/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72c6fc3ff0dff472c93468d97b96230f64aefe69/crates%2Fra_assists%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c6fc3ff0dff472c93468d97b96230f64aefe69/crates%2Fra_assists%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fmarks.rs?ref=72c6fc3ff0dff472c93468d97b96230f64aefe69", "patch": "@@ -7,4 +7,5 @@ test_utils::marks![\n     not_applicable_outside_of_bind_pat\n     test_not_inline_mut_variable\n     test_not_applicable_if_variable_unused\n+    change_visibility_field_false_positive\n ];"}]}