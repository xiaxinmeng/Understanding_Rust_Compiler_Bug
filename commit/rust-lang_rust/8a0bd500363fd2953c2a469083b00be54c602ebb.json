{"sha": "8a0bd500363fd2953c2a469083b00be54c602ebb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMGJkNTAwMzYzZmQyOTUzYzJhNDY5MDgzYjAwYmU1NGM2MDJlYmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-09T12:12:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-09T12:12:21Z"}, "message": "Reduce duplication", "tree": {"sha": "8b056772c19af11f41e5b43e73ab0feaf119b395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b056772c19af11f41e5b43e73ab0feaf119b395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a0bd500363fd2953c2a469083b00be54c602ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a0bd500363fd2953c2a469083b00be54c602ebb", "html_url": "https://github.com/rust-lang/rust/commit/8a0bd500363fd2953c2a469083b00be54c602ebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a0bd500363fd2953c2a469083b00be54c602ebb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dfa2768acdd6bbf0e6999cdc4eb5cf0718b95a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dfa2768acdd6bbf0e6999cdc4eb5cf0718b95a4", "html_url": "https://github.com/rust-lang/rust/commit/3dfa2768acdd6bbf0e6999cdc4eb5cf0718b95a4"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "e8f17eb69f6087c8b7938e9fdad6ce12951df9a9", "filename": "crates/ide/src/syntax_highlighting/injector.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8a0bd500363fd2953c2a469083b00be54c602ebb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finjector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0bd500363fd2953c2a469083b00be54c602ebb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finjector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finjector.rs?ref=8a0bd500363fd2953c2a469083b00be54c602ebb", "patch": "@@ -17,17 +17,15 @@ impl Injector {\n     pub(super) fn add(&mut self, text: &str, source_range: TextRange) {\n         let len = TextSize::of(text);\n         assert_eq!(len, source_range.len());\n-\n-        let target_range = TextRange::at(TextSize::of(&self.buf), len);\n-        self.ranges\n-            .push((target_range, Some(Delta::new(target_range.start(), source_range.start()))));\n-        self.buf.push_str(text);\n+        self.add_impl(text, Some(source_range.start()));\n     }\n     pub(super) fn add_unmapped(&mut self, text: &str) {\n+        self.add_impl(text, None);\n+    }\n+    fn add_impl(&mut self, text: &str, source: Option<TextSize>) {\n         let len = TextSize::of(text);\n-\n         let target_range = TextRange::at(TextSize::of(&self.buf), len);\n-        self.ranges.push((target_range, None));\n+        self.ranges.push((target_range, source.map(|it| Delta::new(target_range.start(), it))));\n         self.buf.push_str(text);\n     }\n "}]}