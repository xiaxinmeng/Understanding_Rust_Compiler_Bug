{"sha": "4614e5b5bf1331907bf3baf70cf0eb705f2959e9", "node_id": "C_kwDOAAsO6NoAKDQ2MTRlNWI1YmYxMzMxOTA3YmYzYmFmNzBjZjBlYjcwNWYyOTU5ZTk", "commit": {"author": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2023-02-02T10:09:48Z"}, "committer": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2023-02-02T10:09:48Z"}, "message": "llvm-wrapper: adapt for LLVM API changes\n\nAdapts the wrapper for https://github.com/llvm/llvm-project/commit/516e301752560311d2cd8c2b549493eb0f98d01b,\nwhere the constructor of PGOOptions gained a new FileSystem argument.\nAdapted to use the real file system, similarly to the changes inside of\nLLVM:\nhttps://github.com/llvm/llvm-project/commit/516e301752560311d2cd8c2b549493eb0f98d01b#diff-f409934ba27ad86494f3012324e9a3995b56e0743609ded7a387ba62bbf5edb0R236", "tree": {"sha": "a7953695f6428a375f0d458e602a50f03aeb5bb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7953695f6428a375f0d458e602a50f03aeb5bb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4614e5b5bf1331907bf3baf70cf0eb705f2959e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4614e5b5bf1331907bf3baf70cf0eb705f2959e9", "html_url": "https://github.com/rust-lang/rust/commit/4614e5b5bf1331907bf3baf70cf0eb705f2959e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4614e5b5bf1331907bf3baf70cf0eb705f2959e9/comments", "author": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821b2a8e39588fedda894d10b9b3abd7293f0383", "url": "https://api.github.com/repos/rust-lang/rust/commits/821b2a8e39588fedda894d10b9b3abd7293f0383", "html_url": "https://github.com/rust-lang/rust/commit/821b2a8e39588fedda894d10b9b3abd7293f0383"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "15a4273fc5918e682a97dcb78e53439737b091f4", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4614e5b5bf1331907bf3baf70cf0eb705f2959e9/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4614e5b5bf1331907bf3baf70cf0eb705f2959e9/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=4614e5b5bf1331907bf3baf70cf0eb705f2959e9", "patch": "@@ -21,6 +21,9 @@\n #include \"llvm/Passes/StandardInstrumentations.h\"\n #include \"llvm/Support/CBindingWrapping.h\"\n #include \"llvm/Support/FileSystem.h\"\n+#if LLVM_VERSION_GE(17, 0)\n+#include \"llvm/Support/VirtualFileSystem.h\"\n+#endif\n #include \"llvm/Support/Host.h\"\n #if LLVM_VERSION_LT(14, 0)\n #include \"llvm/Support/TargetRegistry.h\"\n@@ -651,21 +654,40 @@ LLVMRustOptimize(\n   Optional<PGOOptions> PGOOpt;\n #else\n   std::optional<PGOOptions> PGOOpt;\n+#endif\n+#if LLVM_VERSION_GE(17, 0)\n+  auto FS = vfs::getRealFileSystem();\n #endif\n   if (PGOGenPath) {\n     assert(!PGOUsePath && !PGOSampleUsePath);\n-    PGOOpt = PGOOptions(PGOGenPath, \"\", \"\", PGOOptions::IRInstr,\n-                        PGOOptions::NoCSAction, DebugInfoForProfiling);\n+    PGOOpt = PGOOptions(PGOGenPath, \"\", \"\",\n+#if LLVM_VERSION_GE(17, 0)\n+                        FS,\n+#endif\n+                        PGOOptions::IRInstr, PGOOptions::NoCSAction,\n+                        DebugInfoForProfiling);\n   } else if (PGOUsePath) {\n     assert(!PGOSampleUsePath);\n-    PGOOpt = PGOOptions(PGOUsePath, \"\", \"\", PGOOptions::IRUse,\n-                        PGOOptions::NoCSAction, DebugInfoForProfiling);\n+    PGOOpt = PGOOptions(PGOUsePath, \"\", \"\",\n+#if LLVM_VERSION_GE(17, 0)\n+                        FS,\n+#endif\n+                        PGOOptions::IRUse, PGOOptions::NoCSAction,\n+                        DebugInfoForProfiling);\n   } else if (PGOSampleUsePath) {\n-    PGOOpt = PGOOptions(PGOSampleUsePath, \"\", \"\", PGOOptions::SampleUse,\n-                        PGOOptions::NoCSAction, DebugInfoForProfiling);\n+    PGOOpt = PGOOptions(PGOSampleUsePath, \"\", \"\",\n+#if LLVM_VERSION_GE(17, 0)\n+                        FS,\n+#endif\n+                        PGOOptions::SampleUse, PGOOptions::NoCSAction,\n+                        DebugInfoForProfiling);\n   } else if (DebugInfoForProfiling) {\n-    PGOOpt = PGOOptions(\"\", \"\", \"\", PGOOptions::NoAction,\n-                        PGOOptions::NoCSAction, DebugInfoForProfiling);\n+    PGOOpt = PGOOptions(\"\", \"\", \"\",\n+#if LLVM_VERSION_GE(17, 0)\n+                        FS,\n+#endif\n+                        PGOOptions::NoAction, PGOOptions::NoCSAction,\n+                        DebugInfoForProfiling);\n   }\n \n   PassBuilder PB(TM, PTO, PGOOpt, &PIC);"}]}