{"sha": "031640ccd2773dfbbf996af90349536f405591ed", "node_id": "C_kwDOAAsO6NoAKDAzMTY0MGNjZDI3NzNkZmJiZjk5NmFmOTAzNDk1MzZmNDA1NTkxZWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-03-22T18:30:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-22T18:30:35Z"}, "message": "Rollup merge of #109414 - spastorino:new-rpitit-16, r=compiler-errors\n\nDo not consider synthesized RPITITs on missing items checks\n\nWithout this patch for `tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs` we get ...\n\n```\nwarning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n --> tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs:4:12\n  |\n4 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nerror[E0046]: not all trait items implemented, missing: `foo`, ``\n  --> tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs:12:1\n   |\n8  |     fn foo(&self) -> impl Sized;\n   |     ----------------------------\n   |     |                |\n   |     |                `` from trait\n   |     `foo` from trait\n...\n12 | impl MyTrait for i32 {\n   | ^^^^^^^^^^^^^^^^^^^^ missing `foo`, `` in implementation\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0046`.\n```\n\ninstead of ...\n\n```\nwarning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> $DIR/dont-project-to-rpitit-with-no-value.rs:4:12\n   |\nLL | #![feature(return_position_impl_trait_in_trait)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n   = note: `#[warn(incomplete_features)]` on by default\n\nerror[E0046]: not all trait items implemented, missing: `foo`\n  --> $DIR/dont-project-to-rpitit-with-no-value.rs:12:1\n   |\nLL |     fn foo(&self) -> impl Sized;\n   |     ---------------------------- `foo` from trait\n...\nLL | impl MyTrait for i32 {\n   | ^^^^^^^^^^^^^^^^^^^^ missing `foo` in implementation\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0046`.\n```\n\nr? `@compiler-errors`", "tree": {"sha": "655ddf49d1d939fb959c7172a4057c35c4e8bbe1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/655ddf49d1d939fb959c7172a4057c35c4e8bbe1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/031640ccd2773dfbbf996af90349536f405591ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkG0lLCRBK7hj4Ov3rIwAA278IAF5w6Kp3BMKjsrKXqR8KwD70\nF3PpUIO8qICpt+LPP1cf7DONlgrWCtU6xVB5jVQoVZLriEIbN22GilSJEtDCkzEt\n38ie6B3i3qK48kBvlJjaZcXxYiiNjZSR1laEvPxMlXXIcSNianlLm/jIw/NlnAeE\nRFVA+wBjnR8qLTXEHi+yrhWOBQWOADRe64gdmZsvydDqONTeKIpSGF8MPxqd0YXM\nsKffPgXD8L3gm1lXfZuww+lOa8fHDJ2jt5x2eXuMeLR+bAIsv9sgZAlKVzUvrDOQ\nCG0c7yZSOExWXmd2+moabRtxbFnKOjolvjGcBCyw34kLEmCdpcq0GiQ4MJImkfU=\n=PJzR\n-----END PGP SIGNATURE-----\n", "payload": "tree 655ddf49d1d939fb959c7172a4057c35c4e8bbe1\nparent b9151b2d7014149be2acdea29ae9fa272dd11583\nparent 364a5d4b542618b6db6cfab3f4a0c31d04020765\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1679509835 +0530\ncommitter GitHub <noreply@github.com> 1679509835 +0530\n\nRollup merge of #109414 - spastorino:new-rpitit-16, r=compiler-errors\n\nDo not consider synthesized RPITITs on missing items checks\n\nWithout this patch for `tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs` we get ...\n\n```\nwarning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n --> tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs:4:12\n  |\n4 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n  = note: `#[warn(incomplete_features)]` on by default\n\nerror[E0046]: not all trait items implemented, missing: `foo`, ``\n  --> tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs:12:1\n   |\n8  |     fn foo(&self) -> impl Sized;\n   |     ----------------------------\n   |     |                |\n   |     |                `` from trait\n   |     `foo` from trait\n...\n12 | impl MyTrait for i32 {\n   | ^^^^^^^^^^^^^^^^^^^^ missing `foo`, `` in implementation\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0046`.\n```\n\ninstead of ...\n\n```\nwarning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n  --> $DIR/dont-project-to-rpitit-with-no-value.rs:4:12\n   |\nLL | #![feature(return_position_impl_trait_in_trait)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n   = note: `#[warn(incomplete_features)]` on by default\n\nerror[E0046]: not all trait items implemented, missing: `foo`\n  --> $DIR/dont-project-to-rpitit-with-no-value.rs:12:1\n   |\nLL |     fn foo(&self) -> impl Sized;\n   |     ---------------------------- `foo` from trait\n...\nLL | impl MyTrait for i32 {\n   | ^^^^^^^^^^^^^^^^^^^^ missing `foo` in implementation\n\nerror: aborting due to previous error; 1 warning emitted\n\nFor more information about this error, try `rustc --explain E0046`.\n```\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/031640ccd2773dfbbf996af90349536f405591ed", "html_url": "https://github.com/rust-lang/rust/commit/031640ccd2773dfbbf996af90349536f405591ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/031640ccd2773dfbbf996af90349536f405591ed/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9151b2d7014149be2acdea29ae9fa272dd11583", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9151b2d7014149be2acdea29ae9fa272dd11583", "html_url": "https://github.com/rust-lang/rust/commit/b9151b2d7014149be2acdea29ae9fa272dd11583"}, {"sha": "364a5d4b542618b6db6cfab3f4a0c31d04020765", "url": "https://api.github.com/repos/rust-lang/rust/commits/364a5d4b542618b6db6cfab3f4a0c31d04020765", "html_url": "https://github.com/rust-lang/rust/commit/364a5d4b542618b6db6cfab3f4a0c31d04020765"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "8fe4c44fca43a6f0056a899067f749c2c09d4f96", "filename": "compiler/rustc_hir_analysis/src/check/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/031640ccd2773dfbbf996af90349536f405591ed/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031640ccd2773dfbbf996af90349536f405591ed/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs?ref=031640ccd2773dfbbf996af90349536f405591ed", "patch": "@@ -202,8 +202,11 @@ fn missing_items_err(\n     missing_items: &[ty::AssocItem],\n     full_impl_span: Span,\n ) {\n+    let missing_items =\n+        missing_items.iter().filter(|trait_item| tcx.opt_rpitit_info(trait_item.def_id).is_none());\n+\n     let missing_items_msg = missing_items\n-        .iter()\n+        .clone()\n         .map(|trait_item| trait_item.name.to_string())\n         .collect::<Vec<_>>()\n         .join(\"`, `\");"}, {"sha": "b8a793e1a7bb5314feaa8b000c7610f1fa59e7ee", "filename": "tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.current.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/031640ccd2773dfbbf996af90349536f405591ed/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/031640ccd2773dfbbf996af90349536f405591ed/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.current.stderr?ref=031640ccd2773dfbbf996af90349536f405591ed", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/dont-project-to-rpitit-with-no-value.rs:1:12\n+  --> $DIR/dont-project-to-rpitit-with-no-value.rs:4:12\n    |\n LL | #![feature(return_position_impl_trait_in_trait)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![feature(return_position_impl_trait_in_trait)]\n    = note: `#[warn(incomplete_features)]` on by default\n \n error[E0046]: not all trait items implemented, missing: `foo`\n-  --> $DIR/dont-project-to-rpitit-with-no-value.rs:9:1\n+  --> $DIR/dont-project-to-rpitit-with-no-value.rs:12:1\n    |\n LL |     fn foo(&self) -> impl Sized;\n    |     ---------------------------- `foo` from trait", "previous_filename": "tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.stderr"}, {"sha": "b8a793e1a7bb5314feaa8b000c7610f1fa59e7ee", "filename": "tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.next.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/031640ccd2773dfbbf996af90349536f405591ed/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/031640ccd2773dfbbf996af90349536f405591ed/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.next.stderr?ref=031640ccd2773dfbbf996af90349536f405591ed", "patch": "@@ -0,0 +1,21 @@\n+warning: the feature `return_position_impl_trait_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/dont-project-to-rpitit-with-no-value.rs:4:12\n+   |\n+LL | #![feature(return_position_impl_trait_in_trait)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0046]: not all trait items implemented, missing: `foo`\n+  --> $DIR/dont-project-to-rpitit-with-no-value.rs:12:1\n+   |\n+LL |     fn foo(&self) -> impl Sized;\n+   |     ---------------------------- `foo` from trait\n+...\n+LL | impl MyTrait for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^^ missing `foo` in implementation\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0046`."}, {"sha": "8329ce1f835d04c8e58ab61ebb90a46844891971", "filename": "tests/ui/impl-trait/in-trait/dont-project-to-rpitit-with-no-value.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/031640ccd2773dfbbf996af90349536f405591ed/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031640ccd2773dfbbf996af90349536f405591ed/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fdont-project-to-rpitit-with-no-value.rs?ref=031640ccd2773dfbbf996af90349536f405591ed", "patch": "@@ -1,3 +1,6 @@\n+// [next] compile-flags: -Zlower-impl-trait-in-trait-to-assoc-ty\n+// revisions: current next\n+\n #![feature(return_position_impl_trait_in_trait)]\n //~^ WARN the feature `return_position_impl_trait_in_trait` is incomplete\n \n@@ -7,7 +10,7 @@ trait MyTrait {\n }\n \n impl MyTrait for i32 {\n-//~^ ERROR not all trait items implemented, missing: `foo`\n+    //~^ ERROR not all trait items implemented, missing: `foo`\n     fn bar(&self) -> impl Sized {\n         self.foo()\n     }"}]}