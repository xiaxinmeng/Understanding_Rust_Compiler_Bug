{"sha": "11b2b08ba9bdf7d3759666a3b05711b0a6c20484", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYjJiMDhiYTliZGY3ZDM3NTk2NjZhM2IwNTcxMWIwYTZjMjA0ODQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-10-16T19:41:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-10-16T19:41:10Z"}, "message": "Display rustdoc pulldown switch warnings everytime", "tree": {"sha": "12f6ad35e3fe4a81ff20a2a30d345de7bb3ecf88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12f6ad35e3fe4a81ff20a2a30d345de7bb3ecf88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11b2b08ba9bdf7d3759666a3b05711b0a6c20484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11b2b08ba9bdf7d3759666a3b05711b0a6c20484", "html_url": "https://github.com/rust-lang/rust/commit/11b2b08ba9bdf7d3759666a3b05711b0a6c20484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11b2b08ba9bdf7d3759666a3b05711b0a6c20484/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba4e8d7db311b8a43a446cc20c30e4680b94c5d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba4e8d7db311b8a43a446cc20c30e4680b94c5d3", "html_url": "https://github.com/rust-lang/rust/commit/ba4e8d7db311b8a43a446cc20c30e4680b94c5d3"}], "stats": {"total": 49, "additions": 22, "deletions": 27}, "files": [{"sha": "d538428a7e9a96be8ed54f0405894dab69c4dc6f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 22, "deletions": 27, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/11b2b08ba9bdf7d3759666a3b05711b0a6c20484/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11b2b08ba9bdf7d3759666a3b05711b0a6c20484/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=11b2b08ba9bdf7d3759666a3b05711b0a6c20484", "patch": "@@ -1826,37 +1826,32 @@ fn render_markdown(w: &mut fmt::Formatter,\n                    prefix: &str,\n                    scx: &SharedContext)\n                    -> fmt::Result {\n-    // We only emit warnings if the user has opted-in to Pulldown rendering.\n-    let output = if render_type == RenderType::Pulldown {\n-        // Save the state of USED_ID_MAP so it only gets updated once even\n-        // though we're rendering twice.\n-        let orig_used_id_map = USED_ID_MAP.with(|map| map.borrow().clone());\n-        let hoedown_output = format!(\"{}\", Markdown(md_text, RenderType::Hoedown));\n-        USED_ID_MAP.with(|map| *map.borrow_mut() = orig_used_id_map);\n-        let pulldown_output = format!(\"{}\", Markdown(md_text, RenderType::Pulldown));\n-        let mut differences = html_diff::get_differences(&pulldown_output, &hoedown_output);\n-        differences.retain(|s| {\n-            match *s {\n-                html_diff::Difference::NodeText { ref elem_text,\n-                                                  ref opposite_elem_text,\n-                                                  .. }\n-                    if elem_text.split_whitespace().eq(opposite_elem_text.split_whitespace()) => {\n-                        false\n-                }\n-                _ => true,\n+    // Save the state of USED_ID_MAP so it only gets updated once even\n+    // though we're rendering twice.\n+    let orig_used_id_map = USED_ID_MAP.with(|map| map.borrow().clone());\n+    let hoedown_output = format!(\"{}\", Markdown(md_text, RenderType::Hoedown));\n+    USED_ID_MAP.with(|map| *map.borrow_mut() = orig_used_id_map);\n+    let pulldown_output = format!(\"{}\", Markdown(md_text, RenderType::Pulldown));\n+    let mut differences = html_diff::get_differences(&pulldown_output, &hoedown_output);\n+    differences.retain(|s| {\n+        match *s {\n+            html_diff::Difference::NodeText { ref elem_text,\n+                                              ref opposite_elem_text,\n+                                              .. }\n+                if elem_text.split_whitespace().eq(opposite_elem_text.split_whitespace()) => {\n+                    false\n             }\n-        });\n-\n-        if !differences.is_empty() {\n-            scx.markdown_warnings.borrow_mut().push((span, md_text.to_owned(), differences));\n+            _ => true,\n         }\n+    });\n \n-        pulldown_output\n-    } else {\n-        format!(\"{}\", Markdown(md_text, RenderType::Hoedown))\n-    };\n+    if !differences.is_empty() {\n+        scx.markdown_warnings.borrow_mut().push((span, md_text.to_owned(), differences));\n+    }\n \n-    write!(w, \"<div class='docblock'>{}{}</div>\", prefix, output)\n+    write!(w, \"<div class='docblock'>{}{}</div>\",\n+           prefix,\n+           if render_type == RenderType::Pulldown { pulldown_output } else { hoedown_output })\n }\n \n fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLink,"}]}