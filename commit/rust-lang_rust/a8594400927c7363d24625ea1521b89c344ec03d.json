{"sha": "a8594400927c7363d24625ea1521b89c344ec03d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NTk0NDAwOTI3YzczNjNkMjQ2MjVlYTE1MjFiODljMzQ0ZWMwM2Q=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-06T22:49:51Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-09T20:06:34Z"}, "message": "Shift padding out of suggestions for format strings", "tree": {"sha": "5c118a37a1ac0e120c0d091df376720fcdd3d04b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c118a37a1ac0e120c0d091df376720fcdd3d04b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8594400927c7363d24625ea1521b89c344ec03d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8594400927c7363d24625ea1521b89c344ec03d", "html_url": "https://github.com/rust-lang/rust/commit/a8594400927c7363d24625ea1521b89c344ec03d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8594400927c7363d24625ea1521b89c344ec03d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc13072b7b7143fe98926632b9b89e7ffff2cdb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc13072b7b7143fe98926632b9b89e7ffff2cdb7", "html_url": "https://github.com/rust-lang/rust/commit/dc13072b7b7143fe98926632b9b89e7ffff2cdb7"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "1fdc2e6274a2dd06fa7d800ccb7ab1e15536a6ef", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8594400927c7363d24625ea1521b89c344ec03d/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8594400927c7363d24625ea1521b89c344ec03d/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=a8594400927c7363d24625ea1521b89c344ec03d", "patch": "@@ -1043,7 +1043,9 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt<'_>,\n                     let mut show_doc_note = false;\n \n                     let mut suggestions = vec![];\n-                    for sub in foreign::$kind::iter_subs(fmt_str) {\n+                    // account for `\"` and account for raw strings `r#`\n+                    let padding = str_style.map(|i| i + 2).unwrap_or(1);\n+                    for sub in foreign::$kind::iter_subs(fmt_str, padding) {\n                         let trn = match sub.translate() {\n                             Some(trn) => trn,\n \n@@ -1064,9 +1066,7 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt<'_>,\n                         }\n \n                         if let Some((start, end)) = pos {\n-                            // account for `\"` and account for raw strings `r#`\n-                            let padding = str_style.map(|i| i + 2).unwrap_or(1);\n-                            let sp = fmt_sp.from_inner_byte_pos(start + padding, end + padding);\n+                            let sp = fmt_sp.from_inner_byte_pos(start, end);\n                             suggestions.push((sp, trn));\n                         } else {\n                             diag.help(&format!(\"`{}` should be written as `{}`\", sub, trn));"}, {"sha": "b279dbced847ce4f572f1435897974ff7c1f8871", "filename": "src/libsyntax_ext/format_foreign.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a8594400927c7363d24625ea1521b89c344ec03d/src%2Flibsyntax_ext%2Fformat_foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8594400927c7363d24625ea1521b89c344ec03d/src%2Flibsyntax_ext%2Fformat_foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat_foreign.rs?ref=a8594400927c7363d24625ea1521b89c344ec03d", "patch": "@@ -263,10 +263,10 @@ pub mod printf {\n     }\n \n     /// Returns an iterator over all substitutions in a given string.\n-    pub fn iter_subs(s: &str) -> Substitutions<'_> {\n+    pub fn iter_subs(s: &str, start_pos: usize) -> Substitutions<'_> {\n         Substitutions {\n             s,\n-            pos: 0,\n+            pos: start_pos,\n         }\n     }\n \n@@ -711,7 +711,7 @@ pub mod printf {\n         #[test]\n         fn test_iter() {\n             let s = \"The %d'th word %% is: `%.*s` %!\\n\";\n-            let subs: Vec<_> = iter_subs(s).map(|sub| sub.translate()).collect();\n+            let subs: Vec<_> = iter_subs(s, 0).map(|sub| sub.translate()).collect();\n             assert_eq!(\n                 subs.iter().map(|ms| ms.as_ref().map(|s| &s[..])).collect::<Vec<_>>(),\n                 vec![Some(\"{}\"), None, Some(\"{:.*}\"), None]\n@@ -804,10 +804,10 @@ pub mod shell {\n     }\n \n     /// Returns an iterator over all substitutions in a given string.\n-    pub fn iter_subs(s: &str) -> Substitutions<'_> {\n+    pub fn iter_subs(s: &str, start_pos: usize) -> Substitutions<'_> {\n         Substitutions {\n             s,\n-            pos: 0,\n+            pos: start_pos,\n         }\n     }\n \n@@ -940,7 +940,7 @@ pub mod shell {\n         fn test_iter() {\n             use super::iter_subs;\n             let s = \"The $0'th word $$ is: `$WORD` $!\\n\";\n-            let subs: Vec<_> = iter_subs(s).map(|sub| sub.translate()).collect();\n+            let subs: Vec<_> = iter_subs(s, 0).map(|sub| sub.translate()).collect();\n             assert_eq!(\n                 subs.iter().map(|ms| ms.as_ref().map(|s| &s[..])).collect::<Vec<_>>(),\n                 vec![Some(\"{0}\"), None, Some(\"{WORD}\")]"}]}