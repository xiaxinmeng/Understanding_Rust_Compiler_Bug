{"sha": "5ea241b9fb411b42f0173113d43ef1020ca3df70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYTI0MWI5ZmI0MTFiNDJmMDE3MzExM2Q0M2VmMTAyMGNhM2RmNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-04T02:36:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-04T02:36:27Z"}, "message": "Auto merge of #36876 - nikomatsakis:issue-36381, r=pnkfelix\n\nloosen assertion against proj in collector\n\nThe collector was asserting a total absence of projections, but some projections are expected, even in trans: in particular, projections containing higher-ranked regions, which we don't currently normalize.\n\nr? @pnkfelix\n\nFixes #36381", "tree": {"sha": "f1f0ea28dbb1742bd9ff0543300323631776d557", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1f0ea28dbb1742bd9ff0543300323631776d557"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ea241b9fb411b42f0173113d43ef1020ca3df70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea241b9fb411b42f0173113d43ef1020ca3df70", "html_url": "https://github.com/rust-lang/rust/commit/5ea241b9fb411b42f0173113d43ef1020ca3df70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ea241b9fb411b42f0173113d43ef1020ca3df70/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c31d76e97c6116ba2480aa23a48f3e7bd25a7cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c31d76e97c6116ba2480aa23a48f3e7bd25a7cb", "html_url": "https://github.com/rust-lang/rust/commit/9c31d76e97c6116ba2480aa23a48f3e7bd25a7cb"}, {"sha": "58b75f7aa3165d6b412610d3eae210df55182398", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b75f7aa3165d6b412610d3eae210df55182398", "html_url": "https://github.com/rust-lang/rust/commit/58b75f7aa3165d6b412610d3eae210df55182398"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "1434b0e60e21c22cb7d81c4f3feb79ead7c4f4c4", "filename": "src/librustc/ty/flags.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fflags.rs?ref=5ea241b9fb411b42f0173113d43ef1020ca3df70", "patch": "@@ -107,6 +107,11 @@ impl FlagComputation {\n             }\n \n             &ty::TyProjection(ref data) => {\n+                // currently we can't normalize projections that\n+                // include bound regions, so track those separately.\n+                if !data.has_escaping_regions() {\n+                    self.add_flags(TypeFlags::HAS_NORMALIZABLE_PROJECTION);\n+                }\n                 self.add_flags(TypeFlags::HAS_PROJECTION);\n                 self.add_projection_ty(data);\n             }"}, {"sha": "886ad8cd8611d518df34cfcc818295d602c8abd8", "filename": "src/librustc/ty/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=5ea241b9fb411b42f0173113d43ef1020ca3df70", "patch": "@@ -105,7 +105,7 @@ pub trait TypeFoldable<'tcx>: fmt::Debug + Clone {\n                              TypeFlags::HAS_FREE_REGIONS |\n                              TypeFlags::HAS_TY_INFER |\n                              TypeFlags::HAS_PARAMS |\n-                             TypeFlags::HAS_PROJECTION |\n+                             TypeFlags::HAS_NORMALIZABLE_PROJECTION |\n                              TypeFlags::HAS_TY_ERR |\n                              TypeFlags::HAS_SELF)\n     }"}, {"sha": "130b05504a513836d6ab902cd8b1f94472bd5375", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=5ea241b9fb411b42f0173113d43ef1020ca3df70", "patch": "@@ -462,6 +462,10 @@ bitflags! {\n         // Only set for TyInfer other than Fresh.\n         const KEEP_IN_LOCAL_TCX  = 1 << 11,\n \n+        // Is there a projection that does not involve a bound region?\n+        // Currently we can't normalize projections w/ bound regions.\n+        const HAS_NORMALIZABLE_PROJECTION = 1 << 12,\n+\n         const NEEDS_SUBST        = TypeFlags::HAS_PARAMS.bits |\n                                    TypeFlags::HAS_SELF.bits |\n                                    TypeFlags::HAS_RE_EARLY_BOUND.bits,"}, {"sha": "8112bb8e65c5bebdf7c5323b4e81690a6ea24742", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=5ea241b9fb411b42f0173113d43ef1020ca3df70", "patch": "@@ -1019,7 +1019,9 @@ fn create_fn_trans_item<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n     let concrete_substs = monomorphize::apply_param_substs(scx,\n                                                            param_substs,\n                                                            &fn_substs);\n-    assert!(concrete_substs.is_normalized_for_trans());\n+    assert!(concrete_substs.is_normalized_for_trans(),\n+            \"concrete_substs not normalized for trans: {:?}\",\n+            concrete_substs);\n     TransItem::Fn(Instance::new(def_id, concrete_substs))\n }\n "}, {"sha": "6cd991bd942df7606d135abf48b893b9f501b911", "filename": "src/test/run-pass/issue-36381.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Ftest%2Frun-pass%2Fissue-36381.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ea241b9fb411b42f0173113d43ef1020ca3df70/src%2Ftest%2Frun-pass%2Fissue-36381.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-36381.rs?ref=5ea241b9fb411b42f0173113d43ef1020ca3df70", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #36381. The trans collector was asserting that\n+// there are no projection types, but the `<&str as\n+// StreamOnce>::Position` projection contained a late-bound region,\n+// and we don't currently normalize in that case until the function is\n+// actually invoked.\n+\n+pub trait StreamOnce {\n+    type Position;\n+}\n+\n+impl<'a> StreamOnce for &'a str {\n+    type Position = usize;\n+}\n+\n+pub fn parser<F>(_: F) {\n+}\n+\n+fn follow(_: &str) -> <&str as StreamOnce>::Position {\n+    panic!()\n+}\n+\n+fn main() {\n+    parser(follow);\n+}"}]}