{"sha": "31703217064ab550f9272d4d6de7e9e9320ced72", "node_id": "C_kwDOAAsO6NoAKDMxNzAzMjE3MDY0YWI1NTBmOTI3MmQ0ZDZkZTdlOWU5MzIwY2VkNzI", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-05T01:20:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-05T01:20:36Z"}, "message": "Rollup merge of #96658 - Folyd:es6, r=GuillaumeGomez\n\nMove callback to the () => {} syntax.\n\nPart of https://github.com/rust-lang/rust/issues/93058.\n\nr? `@GuillaumeGomez`", "tree": {"sha": "72d4169f415c324cb2977573b6945f9b2d7bb925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72d4169f415c324cb2977573b6945f9b2d7bb925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31703217064ab550f9272d4d6de7e9e9320ced72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJicyZkCRBK7hj4Ov3rIwAAjDIIAAV/Y5uzxroBdqmV77w5RKgV\nVkHDb1AAv8gwn2Edpx7N3ykcGMcmeWKgdwS6D29r+XbYGb/v3kAVfQrTAyCCObNE\noS72S0vDqux3Jjp0w2Eo9XVXa0fgVBxAgg++OGNExyi054/wVh2+jeA4/Fk8Ci1/\n8MkhDK3Fa2THGNpvCJyRi3KNg8Iza1NXXJwYim7gIreVVJtuLUThbP+LP4O9oCBB\nSa6scewlJ1VcGkOgPL5eZoDaKohhIEzekMVGmwdoP92pOY7oBZj1/t8quap5iYaj\njrGD+SlnreY0T6JUw7EKYCbT8TZpx13oAv5FJ1r/+/ki5HYji8TTy8N94ZUnaNk=\n=z8Sk\n-----END PGP SIGNATURE-----\n", "payload": "tree 72d4169f415c324cb2977573b6945f9b2d7bb925\nparent da57b3a8327f615567aecbf6cebd8bb9a1f00585\nparent 67ebeea7a0d0689bf3f90c60bc64e6ad960c2372\nauthor Yuki Okushi <jtitor@2k36.org> 1651713636 +0900\ncommitter GitHub <noreply@github.com> 1651713636 +0900\n\nRollup merge of #96658 - Folyd:es6, r=GuillaumeGomez\n\nMove callback to the () => {} syntax.\n\nPart of https://github.com/rust-lang/rust/issues/93058.\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31703217064ab550f9272d4d6de7e9e9320ced72", "html_url": "https://github.com/rust-lang/rust/commit/31703217064ab550f9272d4d6de7e9e9320ced72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31703217064ab550f9272d4d6de7e9e9320ced72/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da57b3a8327f615567aecbf6cebd8bb9a1f00585", "url": "https://api.github.com/repos/rust-lang/rust/commits/da57b3a8327f615567aecbf6cebd8bb9a1f00585", "html_url": "https://github.com/rust-lang/rust/commit/da57b3a8327f615567aecbf6cebd8bb9a1f00585"}, {"sha": "67ebeea7a0d0689bf3f90c60bc64e6ad960c2372", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ebeea7a0d0689bf3f90c60bc64e6ad960c2372", "html_url": "https://github.com/rust-lang/rust/commit/67ebeea7a0d0689bf3f90c60bc64e6ad960c2372"}], "stats": {"total": 221, "additions": 109, "deletions": 112}, "files": [{"sha": "1dfd9c762c46ef0b8be771cf229c2520de1b10f9", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 49, "deletions": 56, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=31703217064ab550f9272d4d6de7e9e9320ced72", "patch": "@@ -1,6 +1,7 @@\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+/* eslint prefer-arrow-callback: \"error\" */\n // Local js definitions:\n /* global addClass, getSettingValue, hasClass, searchState */\n /* global onEach, onEachLazy, removeClass */\n@@ -152,7 +153,7 @@ function hideThemeButtonState() {\n     themePicker.style.borderBottomLeftRadius = \"3px\";\n }\n \n-window.hideSettings = function() {\n+window.hideSettings = () => {\n     // Does nothing by default.\n };\n \n@@ -190,10 +191,10 @@ window.hideSettings = function() {\n \n     themePicker.onclick = switchThemeButtonState;\n     themePicker.onblur = handleThemeButtonsBlur;\n-    availableThemes.forEach(function(item) {\n+    availableThemes.forEach(item => {\n         const but = document.createElement(\"button\");\n         but.textContent = item;\n-        but.onclick = function() {\n+        but.onclick = () => {\n             switchTheme(window.currentTheme, window.mainTheme, item, true);\n             useSystemTheme(false);\n         };\n@@ -300,15 +301,15 @@ function loadCss(cssFileName) {\n     }\n \n \n-    getSettingsButton().onclick = function(event) {\n+    getSettingsButton().onclick = event => {\n         event.preventDefault();\n         loadScript(window.settingsJS);\n     };\n \n     window.searchState = {\n         loadingText: \"Loading search results...\",\n         input: document.getElementsByClassName(\"search-input\")[0],\n-        outputElement: function() {\n+        outputElement: () => {\n             let el = document.getElementById(\"search\");\n             if (!el) {\n                 el = document.createElement(\"section\");\n@@ -328,32 +329,30 @@ function loadCss(cssFileName) {\n         currentTab: 0,\n         // tab and back preserves the element that was focused.\n         focusedByTab: [null, null, null],\n-        clearInputTimeout: function() {\n+        clearInputTimeout: () => {\n             if (searchState.timeout !== null) {\n                 clearTimeout(searchState.timeout);\n                 searchState.timeout = null;\n             }\n         },\n-        isDisplayed: function() {\n-            return searchState.outputElement().parentElement.id === ALTERNATIVE_DISPLAY_ID;\n-        },\n+        isDisplayed: () => searchState.outputElement().parentElement.id === ALTERNATIVE_DISPLAY_ID,\n         // Sets the focus on the search bar at the top of the page\n-        focus: function() {\n+        focus: () => {\n             searchState.input.focus();\n         },\n         // Removes the focus from the search bar.\n-        defocus: function() {\n+        defocus: () => {\n             searchState.input.blur();\n         },\n-        showResults: function(search) {\n+        showResults: search => {\n             if (search === null || typeof search === 'undefined') {\n                 search = searchState.outputElement();\n             }\n             switchDisplayedElement(search);\n             searchState.mouseMovedAfterSearch = false;\n             document.title = searchState.title;\n         },\n-        hideResults: function() {\n+        hideResults: () => {\n             switchDisplayedElement(null);\n             document.title = searchState.titleBeforeSearch;\n             // We also remove the query parameter from the URL.\n@@ -362,17 +361,17 @@ function loadCss(cssFileName) {\n                     getNakedUrl() + window.location.hash);\n             }\n         },\n-        getQueryStringParams: function() {\n+        getQueryStringParams: () => {\n             const params = {};\n             window.location.search.substring(1).split(\"&\").\n-                map(function(s) {\n+                map(s => {\n                     const pair = s.split(\"=\");\n                     params[decodeURIComponent(pair[0])] =\n                         typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n                 });\n             return params;\n         },\n-        setup: function() {\n+        setup: () => {\n             const search_input = searchState.input;\n             if (!searchState.input) {\n                 return;\n@@ -386,13 +385,13 @@ function loadCss(cssFileName) {\n                 }\n             }\n \n-            search_input.addEventListener(\"focus\", function() {\n+            search_input.addEventListener(\"focus\", () => {\n                 search_input.origPlaceholder = search_input.placeholder;\n                 search_input.placeholder = \"Type your search here.\";\n                 loadSearch();\n             });\n \n-            if (search_input.value != '') {\n+            if (search_input.value !== '') {\n                 loadSearch();\n             }\n \n@@ -620,7 +619,7 @@ function loadCss(cssFileName) {\n     document.addEventListener(\"keydown\", handleShortcut);\n \n     // delayed sidebar rendering.\n-    window.initSidebarItems = function(items) {\n+    window.initSidebarItems = items => {\n         const sidebar = document.getElementsByClassName(\"sidebar-elems\")[0];\n         let others;\n         const current = window.sidebarCurrent;\n@@ -731,7 +730,7 @@ function loadCss(cssFileName) {\n         }\n     };\n \n-    window.register_implementors = function(imp) {\n+    window.register_implementors = imp => {\n         const implementors = document.getElementById(\"implementors-list\");\n         const synthetic_implementors = document.getElementById(\"synthetic-implementors-list\");\n         const inlined_types = new Set();\n@@ -742,12 +741,12 @@ function loadCss(cssFileName) {\n             //\n             // By the way, this is only used by and useful for traits implemented automatically\n             // (like \"Send\" and \"Sync\").\n-            onEachLazy(synthetic_implementors.getElementsByClassName(\"impl\"), function(el) {\n+            onEachLazy(synthetic_implementors.getElementsByClassName(\"impl\"), el => {\n                 const aliases = el.getAttribute(\"data-aliases\");\n                 if (!aliases) {\n                     return;\n                 }\n-                aliases.split(\",\").forEach(function(alias) {\n+                aliases.split(\",\").forEach(alias => {\n                     inlined_types.add(alias);\n                 });\n             });\n@@ -781,7 +780,7 @@ function loadCss(cssFileName) {\n                 addClass(code, \"code-header\");\n                 addClass(code, \"in-band\");\n \n-                onEachLazy(code.getElementsByTagName(\"a\"), function(elem) {\n+                onEachLazy(code.getElementsByTagName(\"a\"), elem => {\n                     const href = elem.getAttribute(\"href\");\n \n                     if (href && href.indexOf(\"http\") !== 0) {\n@@ -826,15 +825,15 @@ function loadCss(cssFileName) {\n         let sectionIsCollapsed = false;\n         if (hasClass(innerToggle, \"will-expand\")) {\n             removeClass(innerToggle, \"will-expand\");\n-            onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n+            onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n                 if (!hasClass(e, \"type-contents-toggle\")) {\n                     e.open = true;\n                 }\n             });\n             innerToggle.title = \"collapse all docs\";\n         } else {\n             addClass(innerToggle, \"will-expand\");\n-            onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function(e) {\n+            onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n                 if (e.parentNode.id !== \"implementations-list\" ||\n                     (!hasClass(e, \"implementors-toggle\") &&\n                      !hasClass(e, \"type-contents-toggle\")))\n@@ -861,7 +860,7 @@ function loadCss(cssFileName) {\n         function setImplementorsTogglesOpen(id, open) {\n             const list = document.getElementById(id);\n             if (list !== null) {\n-                onEachLazy(list.getElementsByClassName(\"implementors-toggle\"), function(e) {\n+                onEachLazy(list.getElementsByClassName(\"implementors-toggle\"), e => {\n                     e.open = open;\n                 });\n             }\n@@ -872,7 +871,7 @@ function loadCss(cssFileName) {\n             setImplementorsTogglesOpen(\"blanket-implementations-list\", false);\n         }\n \n-        onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), function (e) {\n+        onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n             if (!hideLargeItemContents && hasClass(e, \"type-contents-toggle\")) {\n                 e.open = true;\n             }\n@@ -890,9 +889,9 @@ function loadCss(cssFileName) {\n \n     (function() {\n         // To avoid checking on \"rustdoc-line-numbers\" value on every loop...\n-        let lineNumbersFunc = function() {};\n+        let lineNumbersFunc = () => {};\n         if (getSettingValue(\"line-numbers\") === \"true\") {\n-            lineNumbersFunc = function(x) {\n+            lineNumbersFunc = x => {\n                 const count = x.textContent.split(\"\\n\").length;\n                 const elems = [];\n                 for (let i = 0; i < count; ++i) {\n@@ -904,7 +903,7 @@ function loadCss(cssFileName) {\n                 x.parentNode.insertBefore(node, x);\n             };\n         }\n-        onEachLazy(document.getElementsByClassName(\"rust-example-rendered\"), function(e) {\n+        onEachLazy(document.getElementsByClassName(\"rust-example-rendered\"), e => {\n             if (hasClass(e, \"compile_fail\")) {\n                 e.addEventListener(\"mouseover\", function() {\n                     this.parentElement.previousElementSibling.childNodes[0].style.color = \"#f00\";\n@@ -935,34 +934,34 @@ function loadCss(cssFileName) {\n             elem.addEventListener(\"click\", f);\n         }\n     }\n-    handleClick(\"help-button\", function(ev) {\n+    handleClick(\"help-button\", ev => {\n         displayHelp(true, ev);\n     });\n-    handleClick(MAIN_ID, function() {\n+    handleClick(MAIN_ID, () => {\n         hideSidebar();\n     });\n \n-    onEachLazy(document.getElementsByTagName(\"a\"), function(el) {\n+    onEachLazy(document.getElementsByTagName(\"a\"), el => {\n         // For clicks on internal links (<A> tags with a hash property), we expand the section we're\n         // jumping to *before* jumping there. We can't do this in onHashChange, because it changes\n         // the height of the document so we wind up scrolled to the wrong place.\n         if (el.hash) {\n-            el.addEventListener(\"click\", function() {\n+            el.addEventListener(\"click\", () => {\n                 expandSection(el.hash.slice(1));\n                 hideSidebar();\n             });\n         }\n     });\n \n-    onEachLazy(document.querySelectorAll(\".rustdoc-toggle > summary:not(.hideme)\"), function(el) {\n-        el.addEventListener(\"click\", function(e) {\n-            if (e.target.tagName != \"SUMMARY\" && e.target.tagName != \"A\") {\n+    onEachLazy(document.querySelectorAll(\".rustdoc-toggle > summary:not(.hideme)\"), el => {\n+        el.addEventListener(\"click\", e => {\n+            if (e.target.tagName !== \"SUMMARY\" && e.target.tagName !== \"A\") {\n                 e.preventDefault();\n             }\n         });\n     });\n \n-    onEachLazy(document.getElementsByClassName(\"notable-traits\"), function(e) {\n+    onEachLazy(document.getElementsByClassName(\"notable-traits\"), e => {\n         e.onclick = function() {\n             this.getElementsByClassName('notable-traits-tooltiptext')[0]\n                 .classList.toggle(\"force-tooltip\");\n@@ -971,7 +970,7 @@ function loadCss(cssFileName) {\n \n     const sidebar_menu_toggle = document.getElementsByClassName(\"sidebar-menu-toggle\")[0];\n     if (sidebar_menu_toggle) {\n-        sidebar_menu_toggle.addEventListener(\"click\", function() {\n+        sidebar_menu_toggle.addEventListener(\"click\", () => {\n             const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n             if (!hasClass(sidebar, \"shown\")) {\n                 addClass(sidebar, \"shown\");\n@@ -981,12 +980,12 @@ function loadCss(cssFileName) {\n         });\n     }\n \n-    let buildHelperPopup = function() {\n+    let buildHelperPopup = () => {\n         const popup = document.createElement(\"aside\");\n         addClass(popup, \"hidden\");\n         popup.id = \"help\";\n \n-        popup.addEventListener(\"click\", function(ev) {\n+        popup.addEventListener(\"click\", ev => {\n             if (ev.target === popup) {\n                 // Clicked the blurred zone outside the help popup; dismiss help.\n                 displayHelp(false, ev);\n@@ -1009,14 +1008,10 @@ function loadCss(cssFileName) {\n             [\"&#9166;\", \"Go to active search result\"],\n             [\"+\", \"Expand all sections\"],\n             [\"-\", \"Collapse all sections\"],\n-        ].map(function(x) {\n-            return \"<dt>\" +\n-                x[0].split(\" \")\n-                    .map(function(y, index) {\n-                        return (index & 1) === 0 ? \"<kbd>\" + y + \"</kbd>\" : \" \" + y + \" \";\n-                    })\n-                    .join(\"\") + \"</dt><dd>\" + x[1] + \"</dd>\";\n-        }).join(\"\");\n+        ].map(x => \"<dt>\" +\n+            x[0].split(\" \")\n+                .map((y, index) => (index & 1) === 0 ? \"<kbd>\" + y + \"</kbd>\" : \" \" + y + \" \")\n+                .join(\"\") + \"</dt><dd>\" + x[1] + \"</dd>\").join(\"\");\n         const div_shortcuts = document.createElement(\"div\");\n         addClass(div_shortcuts, \"shortcuts\");\n         div_shortcuts.innerHTML = \"<h2>Keyboard Shortcuts</h2><dl>\" + shortcuts + \"</dl></div>\";\n@@ -1034,9 +1029,7 @@ function loadCss(cssFileName) {\n             \"You can look for items with an exact name by putting double quotes around \\\n              your request: <code>\\\"string\\\"</code>\",\n             \"Look for items inside another one by searching for a path: <code>vec::Vec</code>\",\n-        ].map(function(x) {\n-            return \"<p>\" + x + \"</p>\";\n-        }).join(\"\");\n+        ].map(x => \"<p>\" + x + \"</p>\").join(\"\");\n         const div_infos = document.createElement(\"div\");\n         addClass(div_infos, \"infos\");\n         div_infos.innerHTML = \"<h2>Search Tricks</h2>\" + infos;\n@@ -1056,7 +1049,7 @@ function loadCss(cssFileName) {\n         popup.appendChild(container);\n         insertAfter(popup, document.querySelector(\"main\"));\n         // So that it's only built once and then it'll do nothing when called!\n-        buildHelperPopup = function() {};\n+        buildHelperPopup = () => {};\n     };\n \n     onHashChange(null);\n@@ -1067,11 +1060,11 @@ function loadCss(cssFileName) {\n (function () {\n     let reset_button_timeout = null;\n \n-    window.copy_path = function(but) {\n+    window.copy_path = but => {\n         const parent = but.parentElement;\n         const path = [];\n \n-        onEach(parent.childNodes, function(child) {\n+        onEach(parent.childNodes, child => {\n             if (child.tagName === 'A') {\n                 path.push(child.textContent);\n             }\n@@ -1097,7 +1090,7 @@ function loadCss(cssFileName) {\n             tmp = document.createTextNode('\u2713');\n             but.appendChild(tmp);\n         } else {\n-            onEachLazy(but.childNodes, function(e) {\n+            onEachLazy(but.childNodes, e => {\n                 if (e.nodeType === Node.TEXT_NODE) {\n                     tmp = e;\n                     return true;"}, {"sha": "491b3950ae6eb8fbccadeb142b0e6175492296f1", "filename": "src/librustdoc/html/static/js/scrape-examples.js", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "raw_url": "https://github.com/rust-lang/rust/raw/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js?ref=31703217064ab550f9272d4d6de7e9e9320ced72", "patch": "@@ -1,6 +1,7 @@\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+/* eslint prefer-arrow-callback: \"error\" */\n /* global addClass, hasClass, removeClass, onEachLazy */\n \n (function () {\n@@ -38,7 +39,7 @@\n \n         if (locs.length > 1) {\n             // Toggle through list of examples in a given file\n-            const onChangeLoc = function(changeIndex) {\n+            const onChangeLoc = changeIndex => {\n                 removeClass(highlights[locIndex], 'focus');\n                 changeIndex();\n                 scrollToLoc(example, locs[locIndex][0]);\n@@ -52,23 +53,23 @@\n             };\n \n             example.querySelector('.prev')\n-                .addEventListener('click', function() {\n-                    onChangeLoc(function() {\n+                .addEventListener('click', () => {\n+                    onChangeLoc(() => {\n                         locIndex = (locIndex - 1 + locs.length) % locs.length;\n                     });\n                 });\n \n             example.querySelector('.next')\n-                .addEventListener('click', function() {\n-                    onChangeLoc(function() {\n+                .addEventListener('click', () => {\n+                    onChangeLoc(() => {\n                         locIndex = (locIndex + 1) % locs.length;\n                     });\n                 });\n         }\n \n         const expandButton = example.querySelector('.expand');\n         if (expandButton) {\n-            expandButton.addEventListener('click', function () {\n+            expandButton.addEventListener('click', () => {\n                 if (hasClass(example, \"expanded\")) {\n                     removeClass(example, \"expanded\");\n                     scrollToLoc(example, locs[0][0]);\n@@ -84,22 +85,22 @@\n \n     const firstExamples = document.querySelectorAll('.scraped-example-list > .scraped-example');\n     onEachLazy(firstExamples, updateScrapedExample);\n-    onEachLazy(document.querySelectorAll('.more-examples-toggle'), function(toggle) {\n+    onEachLazy(document.querySelectorAll('.more-examples-toggle'), toggle => {\n         // Allow users to click the left border of the <details> section to close it,\n         // since the section can be large and finding the [+] button is annoying.\n         onEachLazy(toggle.querySelectorAll('.toggle-line, .hide-more'), button => {\n-            button.addEventListener('click', function() {\n+            button.addEventListener('click', () => {\n                 toggle.open = false;\n             });\n         });\n \n         const moreExamples = toggle.querySelectorAll('.scraped-example');\n-        toggle.querySelector('summary').addEventListener('click', function() {\n+        toggle.querySelector('summary').addEventListener('click', () => {\n             // Wrapping in setTimeout ensures the update happens after the elements are actually\n             // visible. This is necessary since updateScrapedExample calls scrollToLoc which\n             // depends on offsetHeight, a property that requires an element to be visible to\n             // compute correctly.\n-            setTimeout(function() { onEachLazy(moreExamples, updateScrapedExample); });\n+            setTimeout(() => { onEachLazy(moreExamples, updateScrapedExample); });\n         }, {once: true});\n     });\n })();"}, {"sha": "60ad431ba7a993b44107b5e7bf1c7388cbf43fb3", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=31703217064ab550f9272d4d6de7e9e9320ced72", "patch": "@@ -1,10 +1,11 @@\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+/* eslint prefer-arrow-callback: \"error\" */\n /* global addClass, getNakedUrl, getSettingValue, hasOwnPropertyRustdoc, initSearch, onEach */\n /* global onEachLazy, removeClass, searchState, browserSupportsHistoryApi */\n \n-(function() {\n+(function () {\n // This mapping table should match the discriminants of\n // `rustdoc::formats::item_type::ItemType` type in Rust.\n const itemTypes = [\n@@ -46,15 +47,15 @@ function printTab(nb) {\n         searchState.currentTab = nb;\n     }\n     let nb_copy = nb;\n-    onEachLazy(document.getElementById(\"titles\").childNodes, function(elem) {\n+    onEachLazy(document.getElementById(\"titles\").childNodes, elem => {\n         if (nb_copy === 0) {\n             addClass(elem, \"selected\");\n         } else {\n             removeClass(elem, \"selected\");\n         }\n         nb_copy -= 1;\n     });\n-    onEachLazy(document.getElementById(\"results\").childNodes, function(elem) {\n+    onEachLazy(document.getElementById(\"results\").childNodes, elem => {\n         if (nb === 0) {\n             addClass(elem, \"active\");\n         } else {\n@@ -100,7 +101,7 @@ function levenshtein(s1, s2) {\n     return s1_len + s2_len;\n }\n \n-window.initSearch = function(rawSearchIndex) {\n+window.initSearch = rawSearchIndex => {\n     const MAX_LEV_DISTANCE = 3;\n     const MAX_RESULTS = 200;\n     const GENERICS_DATA = 2;\n@@ -774,7 +775,7 @@ window.initSearch = function(rawSearchIndex) {\n                 return [];\n             }\n \n-            results.sort(function(aaa, bbb) {\n+            results.sort((aaa, bbb) => {\n                 let a, b;\n \n                 // sort by exact match with regard to the last word (mismatch goes later)\n@@ -978,9 +979,8 @@ window.initSearch = function(rawSearchIndex) {\n                     if (elem.generics.length === 0) {\n                         const checkGeneric = (row.length > GENERICS_DATA &&\n                             row[GENERICS_DATA].length > 0);\n-                        if (checkGeneric && row[GENERICS_DATA].findIndex(function(tmp_elem) {\n-                            return tmp_elem[NAME] === elem.name;\n-                        }) !== -1) {\n+                        if (checkGeneric && row[GENERICS_DATA]\n+                            .findIndex(tmp_elem => tmp_elem[NAME] === elem.name) !== -1) {\n                             return 0;\n                         }\n                     }\n@@ -1169,7 +1169,7 @@ window.initSearch = function(rawSearchIndex) {\n                     }\n                 }\n             } else {\n-                Object.keys(ALIASES).forEach(function(crate) {\n+                Object.keys(ALIASES).forEach(crate => {\n                     if (ALIASES[crate][lowerQuery]) {\n                         const pushTo = crate === window.currentCrate ? crateAliases : aliases;\n                         const query_aliases = ALIASES[crate][lowerQuery];\n@@ -1180,7 +1180,7 @@ window.initSearch = function(rawSearchIndex) {\n                 });\n             }\n \n-            const sortFunc = function(aaa, bbb) {\n+            const sortFunc = (aaa, bbb) => {\n                 if (aaa.path < bbb.path) {\n                     return 1;\n                 } else if (aaa.path === bbb.path) {\n@@ -1191,7 +1191,7 @@ window.initSearch = function(rawSearchIndex) {\n             crateAliases.sort(sortFunc);\n             aliases.sort(sortFunc);\n \n-            const pushFunc = function(alias) {\n+            const pushFunc = alias => {\n                 alias.alias = query;\n                 const res = buildHrefAndPath(alias);\n                 alias.displayPath = pathSplitter(res[0]);\n@@ -1579,7 +1579,7 @@ window.initSearch = function(rawSearchIndex) {\n         if (array.length > 0) {\n             output.className = \"search-results \" + extraClass;\n \n-            array.forEach(function(item) {\n+            array.forEach(item => {\n                 const name = item.name;\n                 const type = itemTypes[item.ty];\n \n@@ -1746,9 +1746,9 @@ window.initSearch = function(rawSearchIndex) {\n         searchState.focusedByTab = [null, null, null];\n         searchState.showResults(search);\n         const elems = document.getElementById(\"titles\").childNodes;\n-        elems[0].onclick = function() { printTab(0); };\n-        elems[1].onclick = function() { printTab(1); };\n-        elems[2].onclick = function() { printTab(2); };\n+        elems[0].onclick = () => { printTab(0); };\n+        elems[1].onclick = () => { printTab(1); };\n+        elems[2].onclick = () => { printTab(2); };\n         printTab(currentTab);\n     }\n \n@@ -1977,7 +1977,7 @@ window.initSearch = function(rawSearchIndex) {\n     }\n \n     function registerSearchEvents() {\n-        const searchAfter500ms = function() {\n+        const searchAfter500ms = () => {\n             searchState.clearInputTimeout();\n             if (searchState.input.value.length === 0) {\n                 if (browserSupportsHistoryApi()) {\n@@ -1992,7 +1992,7 @@ window.initSearch = function(rawSearchIndex) {\n         searchState.input.onkeyup = searchAfter500ms;\n         searchState.input.oninput = searchAfter500ms;\n         document.getElementsByClassName(\"search-form\")[0].onsubmit = onSearchSubmit;\n-        searchState.input.onchange = function(e) {\n+        searchState.input.onchange = e => {\n             if (e.target !== document.activeElement) {\n                 // To prevent doing anything when it's from a blur event.\n                 return;\n@@ -2006,7 +2006,7 @@ window.initSearch = function(rawSearchIndex) {\n         };\n         searchState.input.onpaste = searchState.input.onchange;\n \n-        searchState.outputElement().addEventListener(\"keydown\", function(e) {\n+        searchState.outputElement().addEventListener(\"keydown\", e => {\n             // We only handle unmodified keystrokes here. We don't want to interfere with,\n             // for instance, alt-left and alt-right for history navigation.\n             if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n@@ -2041,18 +2041,18 @@ window.initSearch = function(rawSearchIndex) {\n             }\n         });\n \n-        searchState.input.addEventListener(\"keydown\", function(e) {\n+        searchState.input.addEventListener(\"keydown\", e => {\n             if (e.which === 40) { // down\n                 focusSearchResult();\n                 e.preventDefault();\n             }\n         });\n \n-        searchState.input.addEventListener(\"focus\", function() {\n+        searchState.input.addEventListener(\"focus\", () => {\n             putBackSearch();\n         });\n \n-        searchState.input.addEventListener(\"blur\", function() {\n+        searchState.input.addEventListener(\"blur\", () => {\n             searchState.input.placeholder = searchState.input.origPlaceholder;\n         });\n \n@@ -2062,7 +2062,7 @@ window.initSearch = function(rawSearchIndex) {\n             // Store the previous <title> so we can revert back to it later.\n             const previousTitle = document.title;\n \n-            window.addEventListener(\"popstate\", function(e) {\n+            window.addEventListener(\"popstate\", e => {\n                 const params = searchState.getQueryStringParams();\n                 // Revert to the previous title manually since the History\n                 // API ignores the title parameter.\n@@ -2098,7 +2098,7 @@ window.initSearch = function(rawSearchIndex) {\n         // This was an interaction between the back-forward cache and our handlers\n         // that try to sync state between the URL and the search input. To work around it,\n         // do a small amount of re-init on page show.\n-        window.onpageshow = function(){\n+        window.onpageshow = () => {\n             const qSearch = searchState.getQueryStringParams().search;\n             if (searchState.input.value === \"\" && qSearch) {\n                 searchState.input.value = qSearch;"}, {"sha": "43b24245ab2e8b362b257a8af67d70633c758fa9", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=31703217064ab550f9272d4d6de7e9e9320ced72", "patch": "@@ -1,6 +1,7 @@\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+/* eslint prefer-arrow-callback: \"error\" */\n // Local js definitions:\n /* global getSettingValue, getVirtualKey, updateLocalStorage, updateSystemTheme, loadCss */\n /* global addClass, removeClass, onEach, onEachLazy, NOT_DISPLAYED_ID */\n@@ -60,7 +61,7 @@\n \n     function setEvents(settingsElement) {\n         updateLightAndDark();\n-        onEachLazy(settingsElement.getElementsByClassName(\"slider\"), function(elem) {\n+        onEachLazy(settingsElement.getElementsByClassName(\"slider\"), elem => {\n             const toggle = elem.previousElementSibling;\n             const settingId = toggle.id;\n             const settingValue = getSettingValue(settingId);\n@@ -73,7 +74,7 @@\n             toggle.onkeyup = handleKey;\n             toggle.onkeyrelease = handleKey;\n         });\n-        onEachLazy(settingsElement.getElementsByClassName(\"select-wrapper\"), function(elem) {\n+        onEachLazy(settingsElement.getElementsByClassName(\"select-wrapper\"), elem => {\n             const select = elem.getElementsByTagName(\"select\")[0];\n             const settingId = select.id;\n             const settingValue = getSettingValue(settingId);\n@@ -84,13 +85,13 @@\n                 changeSetting(this.id, this.value);\n             };\n         });\n-        onEachLazy(settingsElement.querySelectorAll(\"input[type=\\\"radio\\\"]\"), function(elem) {\n+        onEachLazy(settingsElement.querySelectorAll(\"input[type=\\\"radio\\\"]\"), elem => {\n             const settingId = elem.name;\n             const settingValue = getSettingValue(settingId);\n             if (settingValue !== null && settingValue !== \"null\") {\n                 elem.checked = settingValue === elem.value;\n             }\n-            elem.addEventListener(\"change\", function(ev) {\n+            elem.addEventListener(\"change\", ev => {\n                 changeSetting(ev.target.name, ev.target.value);\n             });\n         });\n@@ -118,7 +119,7 @@\n                 output += `<div class=\"radio-line\" id=\"${js_data_name}\">\\\n                         <span class=\"setting-name\">${setting_name}</span>\\\n                         <div class=\"choices\">`;\n-                onEach(setting[\"options\"], function(option) {\n+                onEach(setting[\"options\"], option => {\n                     const checked = option === setting[\"default\"] ? \" checked\" : \"\";\n \n                     output += `<label for=\"${js_data_name}-${option}\" class=\"choice\">\\\n@@ -265,7 +266,7 @@\n     }\n \n     // We now wait a bit for the web browser to end re-computing the DOM...\n-    setTimeout(function() {\n+    setTimeout(() => {\n         setEvents(settingsMenu);\n         // The setting menu is already displayed if we're on the settings page.\n         if (!isSettingsPage) {"}, {"sha": "290bf40a8f5775eba89dff2fe0089f9915e6593c", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=31703217064ab550f9272d4d6de7e9e9320ced72", "patch": "@@ -1,14 +1,15 @@\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+/* eslint prefer-arrow-callback: \"error\" */\n \n // From rust:\n /* global search, sourcesIndex */\n \n // Local js definitions:\n /* global addClass, getCurrentValue, hasClass, onEachLazy, removeClass, browserSupportsHistoryApi */\n /* global updateLocalStorage */\n-(function() {\n+(function () {\n \n function getCurrentFilePath() {\n     const parts = window.location.pathname.split(\"/\");\n@@ -32,7 +33,7 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n \n     fullPath += elem[\"name\"] + \"/\";\n \n-    name.onclick = function() {\n+    name.onclick = () => {\n         if (hasClass(this, \"expand\")) {\n             removeClass(this, \"expand\");\n         } else {\n@@ -134,7 +135,7 @@ function createSourceSidebar() {\n     title.className = \"title\";\n     title.innerText = \"Files\";\n     sidebar.appendChild(title);\n-    Object.keys(sourcesIndex).forEach(function(key) {\n+    Object.keys(sourcesIndex).forEach(key => {\n         sourcesIndex[key].name = key;\n         hasFoundFile = createDirEntry(sourcesIndex[key], sidebar, \"\",\n                                       currentFile, hasFoundFile);\n@@ -175,8 +176,8 @@ function highlightSourceLines(match) {\n     if (x) {\n         x.scrollIntoView();\n     }\n-    onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(e) {\n-        onEachLazy(e.getElementsByTagName(\"span\"), function(i_e) {\n+    onEachLazy(document.getElementsByClassName(\"line-numbers\"), e => {\n+        onEachLazy(e.getElementsByTagName(\"span\"), i_e => {\n             removeClass(i_e, \"line-highlighted\");\n         });\n     });\n@@ -189,10 +190,10 @@ function highlightSourceLines(match) {\n     }\n }\n \n-const handleSourceHighlight = (function() {\n+const handleSourceHighlight = (function () {\n     let prev_line_id = 0;\n \n-    const set_fragment = function(name) {\n+    const set_fragment = name => {\n         const x = window.scrollX,\n             y = window.scrollY;\n         if (browserSupportsHistoryApi()) {\n@@ -205,7 +206,7 @@ const handleSourceHighlight = (function() {\n         window.scrollTo(x, y);\n     };\n \n-    return function(ev) {\n+    return ev => {\n         let cur_line_id = parseInt(ev.target.id, 10);\n         ev.preventDefault();\n \n@@ -226,14 +227,14 @@ const handleSourceHighlight = (function() {\n     };\n }());\n \n-window.addEventListener(\"hashchange\", function() {\n+window.addEventListener(\"hashchange\", () => {\n     const match = window.location.hash.match(lineNumbersRegex);\n     if (match) {\n         return highlightSourceLines(match);\n     }\n });\n \n-onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(el) {\n+onEachLazy(document.getElementsByClassName(\"line-numbers\"), el => {\n     el.addEventListener(\"click\", handleSourceHighlight);\n });\n "}, {"sha": "913fc278eb38771215553708b0d471c84e314f80", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/31703217064ab550f9272d4d6de7e9e9320ced72/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=31703217064ab550f9272d4d6de7e9e9320ced72", "patch": "@@ -1,6 +1,7 @@\n /* eslint-env es6 */\n /* eslint no-var: \"error\" */\n /* eslint prefer-const: \"error\" */\n+/* eslint prefer-arrow-callback: \"error\" */\n \n const darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n@@ -139,11 +140,11 @@ function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n \n     let found = false;\n     if (savedHref.length === 0) {\n-        onEachLazy(document.getElementsByTagName(\"link\"), function(el) {\n+        onEachLazy(document.getElementsByTagName(\"link\"), el => {\n             savedHref.push(el.href);\n         });\n     }\n-    onEach(savedHref, function(el) {\n+    onEach(savedHref, el => {\n         if (el === newHref) {\n             found = true;\n             return true;\n@@ -170,10 +171,10 @@ function useSystemTheme(value) {\n     }\n }\n \n-const updateSystemTheme = (function() {\n+const updateSystemTheme = (function () {\n     if (!window.matchMedia) {\n         // fallback to the CSS computed value\n-        return function() {\n+        return () => {\n             const cssTheme = getComputedStyle(document.documentElement)\n                 .getPropertyValue('content');\n \n@@ -190,7 +191,7 @@ const updateSystemTheme = (function() {\n     const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n \n     function handlePreferenceChange(mql) {\n-        const use = function(theme) {\n+        const use = theme => {\n             switchTheme(window.currentTheme, window.mainTheme, theme, true);\n         };\n         // maybe the user has disabled the setting in the meantime!\n@@ -214,7 +215,7 @@ const updateSystemTheme = (function() {\n \n     mql.addListener(handlePreferenceChange);\n \n-    return function() {\n+    return () => {\n         handlePreferenceChange(mql);\n     };\n })();\n@@ -252,7 +253,7 @@ if (getSettingValue(\"use-system-theme\") !== \"false\" && window.matchMedia) {\n // For some reason, if we try to change the theme while the `pageshow` event is\n // running, it sometimes fails to take effect. The problem manifests on Chrome,\n // specifically when talking to a remote website with no caching.\n-window.addEventListener(\"pageshow\", function(ev) {\n+window.addEventListener(\"pageshow\", ev => {\n     if (ev.persisted) {\n         setTimeout(switchToSavedTheme, 0);\n     }"}]}