{"sha": "03b25989246be62fe1c489db5f381c1ac36a46d5", "node_id": "C_kwDOAAsO6NoAKDAzYjI1OTg5MjQ2YmU2MmZlMWM0ODlkYjVmMzgxYzFhYzM2YTQ2ZDU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-14T09:49:32Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-14T09:49:32Z"}, "message": "Manually implement `Encodable` for ProvenanceMap to avoid serializing an always-none option", "tree": {"sha": "5a6d5cc12f8d5143f23d8fbe781710dc3ecd5581", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a6d5cc12f8d5143f23d8fbe781710dc3ecd5581"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03b25989246be62fe1c489db5f381c1ac36a46d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03b25989246be62fe1c489db5f381c1ac36a46d5", "html_url": "https://github.com/rust-lang/rust/commit/03b25989246be62fe1c489db5f381c1ac36a46d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03b25989246be62fe1c489db5f381c1ac36a46d5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b04166ff35476e7a6162de1c9ba9b55a6f9a8ec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b04166ff35476e7a6162de1c9ba9b55a6f9a8ec6", "html_url": "https://github.com/rust-lang/rust/commit/b04166ff35476e7a6162de1c9ba9b55a6f9a8ec6"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "3c78d642e1560c16a9f7c24a2291874dc8fd22f0", "filename": "compiler/rustc_middle/src/mir/interpret/allocation/provenance_map.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/03b25989246be62fe1c489db5f381c1ac36a46d5/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation%2Fprovenance_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03b25989246be62fe1c489db5f381c1ac36a46d5/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation%2Fprovenance_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation%2Fprovenance_map.rs?ref=03b25989246be62fe1c489db5f381c1ac36a46d5", "patch": "@@ -7,9 +7,10 @@ use rustc_data_structures::sorted_map::SortedMap;\n use rustc_target::abi::{HasDataLayout, Size};\n \n use super::{alloc_range, AllocError, AllocId, AllocRange, AllocResult, Provenance};\n+use rustc_serialize::{Decodable, Decoder, Encodable, Encoder};\n \n /// Stores the provenance information of pointers stored in memory.\n-#[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, TyEncodable, TyDecodable)]\n+#[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n #[derive(HashStable)]\n pub struct ProvenanceMap<Prov = AllocId> {\n     /// Provenance in this map applies from the given offset for an entire pointer-size worth of\n@@ -21,6 +22,20 @@ pub struct ProvenanceMap<Prov = AllocId> {\n     bytes: Option<Box<SortedMap<Size, Prov>>>,\n }\n \n+impl<D: Decoder, Prov: Decodable<D>> Decodable<D> for ProvenanceMap<Prov> {\n+    fn decode(d: &mut D) -> Self {\n+        Self { ptrs: Decodable::decode(d), bytes: None }\n+    }\n+}\n+\n+impl<S: Encoder, Prov: Encodable<S>> Encodable<S> for ProvenanceMap<Prov> {\n+    fn encode(&self, s: &mut S) {\n+        let Self { ptrs, bytes } = self;\n+        debug_assert!(bytes.is_none());\n+        ptrs.encode(s)\n+    }\n+}\n+\n impl<Prov> ProvenanceMap<Prov> {\n     pub fn new() -> Self {\n         ProvenanceMap { ptrs: SortedMap::new(), bytes: None }"}]}