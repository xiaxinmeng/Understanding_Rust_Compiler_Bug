{"sha": "87a1e276d56a3cb5f9d9c59f8c52c5573e19982b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YTFlMjc2ZDU2YTNjYjVmOWQ5YzU5ZjhjNTJjNTU3M2UxOTk4MmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-04T14:42:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-04T14:42:24Z"}, "message": "minor, move", "tree": {"sha": "0ae2a515cce0758af147e5a1f9117900d5197832", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ae2a515cce0758af147e5a1f9117900d5197832"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87a1e276d56a3cb5f9d9c59f8c52c5573e19982b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87a1e276d56a3cb5f9d9c59f8c52c5573e19982b", "html_url": "https://github.com/rust-lang/rust/commit/87a1e276d56a3cb5f9d9c59f8c52c5573e19982b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87a1e276d56a3cb5f9d9c59f8c52c5573e19982b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dc384132f7fe6f610ec21e62830ab83f45274a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc384132f7fe6f610ec21e62830ab83f45274a9", "html_url": "https://github.com/rust-lang/rust/commit/5dc384132f7fe6f610ec21e62830ab83f45274a9"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "cf0e934a9e793121e39a72c21e933dbc309c3146", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/87a1e276d56a3cb5f9d9c59f8c52c5573e19982b/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a1e276d56a3cb5f9d9c59f8c52c5573e19982b/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=87a1e276d56a3cb5f9d9c59f8c52c5573e19982b", "patch": "@@ -81,25 +81,6 @@ impl HirFileId {\n     }\n }\n \n-fn parse_macro(\n-    db: &impl DefDatabase,\n-    macro_call_id: MacroCallId,\n-) -> Result<TreeArc<SourceFile>, String> {\n-    let loc = macro_call_id.loc(db);\n-    let macro_arg = db.macro_arg(macro_call_id).ok_or(\"Fail to args in to tt::TokenTree\")?;\n-\n-    let macro_rules = db.macro_def(loc.def).ok_or(\"Fail to find macro definition\")?;\n-    let tt = macro_rules.expand(&macro_arg).map_err(|err| format!(\"{:?}\", err))?;\n-\n-    // Set a hard limit for the expanded tt\n-    let count = tt.count();\n-    if count > 65536 {\n-        return Err(format!(\"Total tokens count exceed limit : count = {}\", count));\n-    }\n-\n-    Ok(mbe::token_tree_to_ast_item_list(&tt))\n-}\n-\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n enum HirFileIdRepr {\n     File(FileId),\n@@ -143,6 +124,25 @@ pub(crate) fn macro_arg_query(db: &impl DefDatabase, id: MacroCallId) -> Option<\n     Some(Arc::new(tt))\n }\n \n+fn parse_macro(\n+    db: &impl DefDatabase,\n+    macro_call_id: MacroCallId,\n+) -> Result<TreeArc<SourceFile>, String> {\n+    let loc = macro_call_id.loc(db);\n+    let macro_arg = db.macro_arg(macro_call_id).ok_or(\"Fail to args in to tt::TokenTree\")?;\n+\n+    let macro_rules = db.macro_def(loc.def).ok_or(\"Fail to find macro definition\")?;\n+    let tt = macro_rules.expand(&macro_arg).map_err(|err| format!(\"{:?}\", err))?;\n+\n+    // Set a hard limit for the expanded tt\n+    let count = tt.count();\n+    if count > 65536 {\n+        return Err(format!(\"Total tokens count exceed limit : count = {}\", count));\n+    }\n+\n+    Ok(mbe::token_tree_to_ast_item_list(&tt))\n+}\n+\n macro_rules! impl_intern_key {\n     ($name:ident) => {\n         impl salsa::InternKey for $name {"}]}