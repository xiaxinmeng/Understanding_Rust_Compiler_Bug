{"sha": "cdf6cebc0010653aa2fbf315f7f7660983d007da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZjZjZWJjMDAxMDY1M2FhMmZiZjMxNWY3Zjc2NjA5ODNkMDA3ZGE=", "commit": {"author": {"name": "Richard Diamond", "email": "wichard@vitalitystudios.com", "date": "2015-09-07T05:35:57Z"}, "committer": {"name": "Richard Diamond", "email": "wichard@vitalitystudios.com", "date": "2015-09-10T00:16:45Z"}, "message": "Refactor `TargetOptions::data_layout` into an `Option`al value to reflect current usage.\n\nNFC.", "tree": {"sha": "cc220be29f5697429ed35ad38703b0f4b3186999", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc220be29f5697429ed35ad38703b0f4b3186999"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdf6cebc0010653aa2fbf315f7f7660983d007da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdf6cebc0010653aa2fbf315f7f7660983d007da", "html_url": "https://github.com/rust-lang/rust/commit/cdf6cebc0010653aa2fbf315f7f7660983d007da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdf6cebc0010653aa2fbf315f7f7660983d007da/comments", "author": {"login": "DiamondLovesYou", "id": 650357, "node_id": "MDQ6VXNlcjY1MDM1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/650357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiamondLovesYou", "html_url": "https://github.com/DiamondLovesYou", "followers_url": "https://api.github.com/users/DiamondLovesYou/followers", "following_url": "https://api.github.com/users/DiamondLovesYou/following{/other_user}", "gists_url": "https://api.github.com/users/DiamondLovesYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiamondLovesYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiamondLovesYou/subscriptions", "organizations_url": "https://api.github.com/users/DiamondLovesYou/orgs", "repos_url": "https://api.github.com/users/DiamondLovesYou/repos", "events_url": "https://api.github.com/users/DiamondLovesYou/events{/privacy}", "received_events_url": "https://api.github.com/users/DiamondLovesYou/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DiamondLovesYou", "id": 650357, "node_id": "MDQ6VXNlcjY1MDM1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/650357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DiamondLovesYou", "html_url": "https://github.com/DiamondLovesYou", "followers_url": "https://api.github.com/users/DiamondLovesYou/followers", "following_url": "https://api.github.com/users/DiamondLovesYou/following{/other_user}", "gists_url": "https://api.github.com/users/DiamondLovesYou/gists{/gist_id}", "starred_url": "https://api.github.com/users/DiamondLovesYou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DiamondLovesYou/subscriptions", "organizations_url": "https://api.github.com/users/DiamondLovesYou/orgs", "repos_url": "https://api.github.com/users/DiamondLovesYou/repos", "events_url": "https://api.github.com/users/DiamondLovesYou/events{/privacy}", "received_events_url": "https://api.github.com/users/DiamondLovesYou/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f142404d6f9e0b2ea87c4f58806bf763eb42d83", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f142404d6f9e0b2ea87c4f58806bf763eb42d83", "html_url": "https://github.com/rust-lang/rust/commit/6f142404d6f9e0b2ea87c4f58806bf763eb42d83"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "56562c8dfdbf6a1cecded75bf90466b5f85ea701", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cdf6cebc0010653aa2fbf315f7f7660983d007da/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdf6cebc0010653aa2fbf315f7f7660983d007da/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=cdf6cebc0010653aa2fbf315f7f7660983d007da", "patch": "@@ -91,7 +91,7 @@ pub struct Target {\n #[derive(Clone, Debug)]\n pub struct TargetOptions {\n     /// [Data layout](http://llvm.org/docs/LangRef.html#data-layout) to pass to LLVM.\n-    pub data_layout: String,\n+    pub data_layout: Option<String>,\n     /// Linker to invoke. Defaults to \"cc\".\n     pub linker: String,\n     /// Archive utility to use when managing archives. Defaults to \"ar\".\n@@ -186,7 +186,7 @@ impl Default for TargetOptions {\n     /// incomplete, and if used for compilation, will certainly not work.\n     fn default() -> TargetOptions {\n         TargetOptions {\n-            data_layout: String::new(),\n+            data_layout: None,\n             linker: option_env!(\"CFG_DEFAULT_LINKER\").unwrap_or(\"cc\").to_string(),\n             ar: option_env!(\"CFG_DEFAULT_AR\").unwrap_or(\"ar\").to_string(),\n             pre_link_args: Vec::new(),\n@@ -287,6 +287,14 @@ impl Target {\n                         )\n                     );\n             } );\n+            ($key_name:ident, optional) => ( {\n+                let name = (stringify!($key_name)).replace(\"_\", \"-\");\n+                if let Some(o) = obj.find(&name[..]) {\n+                    base.options.$key_name = o\n+                        .as_string()\n+                        .map(|s| s.to_string() );\n+                }\n+            } );\n         }\n \n         key!(cpu);\n@@ -300,7 +308,7 @@ impl Target {\n         key!(staticlib_prefix);\n         key!(staticlib_suffix);\n         key!(features);\n-        key!(data_layout);\n+        key!(data_layout, optional);\n         key!(dynamic_linking, bool);\n         key!(executables, bool);\n         key!(disable_redzone, bool);"}, {"sha": "203614ee7bd0067b75d0ce695fb8b4fe4528be2e", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cdf6cebc0010653aa2fbf315f7f7660983d007da/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdf6cebc0010653aa2fbf315f7f7660983d007da/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=cdf6cebc0010653aa2fbf315f7f7660983d007da", "patch": "@@ -229,9 +229,8 @@ unsafe fn create_context_and_module(sess: &Session, mod_name: &str) -> (ContextR\n     let mod_name = CString::new(mod_name).unwrap();\n     let llmod = llvm::LLVMModuleCreateWithNameInContext(mod_name.as_ptr(), llcx);\n \n-    let custom_data_layout = &sess.target.target.options.data_layout[..];\n-    if custom_data_layout.len() > 0 {\n-        let data_layout = CString::new(custom_data_layout).unwrap();\n+    if let Some(ref custom_data_layout) = sess.target.target.options.data_layout {\n+        let data_layout = CString::new(&custom_data_layout[..]).unwrap();\n         llvm::LLVMSetDataLayout(llmod, data_layout.as_ptr());\n     } else {\n         let tm = ::back::write::create_target_machine(sess);"}]}