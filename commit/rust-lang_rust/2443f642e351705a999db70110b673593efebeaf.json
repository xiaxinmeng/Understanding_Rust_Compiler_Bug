{"sha": "2443f642e351705a999db70110b673593efebeaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NDNmNjQyZTM1MTcwNWE5OTlkYjcwMTEwYjY3MzU5M2VmZWJlYWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-12-10T18:42:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-12-10T18:59:31Z"}, "message": "CTFE: tweak abort-on-uninhabited message", "tree": {"sha": "50d2172f80cdfbcc07a7e189d94f0734ec2873ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50d2172f80cdfbcc07a7e189d94f0734ec2873ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2443f642e351705a999db70110b673593efebeaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2443f642e351705a999db70110b673593efebeaf", "html_url": "https://github.com/rust-lang/rust/commit/2443f642e351705a999db70110b673593efebeaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2443f642e351705a999db70110b673593efebeaf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80cc2ecf1070728a7d006026e0d532d9fc48621c", "url": "https://api.github.com/repos/rust-lang/rust/commits/80cc2ecf1070728a7d006026e0d532d9fc48621c", "html_url": "https://github.com/rust-lang/rust/commit/80cc2ecf1070728a7d006026e0d532d9fc48621c"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "dfd77a8fca9645a42d426f0ed6e1555c0a1fd5f0", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2443f642e351705a999db70110b673593efebeaf/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2443f642e351705a999db70110b673593efebeaf/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=2443f642e351705a999db70110b673593efebeaf", "patch": "@@ -414,7 +414,13 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 if layout.abi.is_uninhabited() {\n                     // The run-time intrinsic panics just to get a good backtrace; here we abort\n                     // since there is no problem showing a backtrace even for aborts.\n-                    M::abort(self, format!(\"attempted to instantiate uninhabited type `{}`\", ty))?;\n+                    M::abort(\n+                        self,\n+                        format!(\n+                            \"aborted execution: attempted to instantiate uninhabited type `{}`\",\n+                            ty\n+                        ),\n+                    )?;\n                 }\n             }\n             sym::simd_insert => {"}]}