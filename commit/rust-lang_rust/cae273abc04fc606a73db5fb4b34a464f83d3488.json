{"sha": "cae273abc04fc606a73db5fb4b34a464f83d3488", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZTI3M2FiYzA0ZmM2MDZhNzNkYjVmYjRiMzRhNDY0ZjgzZDM0ODg=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-15T02:12:49Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-18T00:54:11Z"}, "message": "clean up equality code a bit", "tree": {"sha": "a0cfccb7dcaa3738fd4711ef450808e93fa97167", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0cfccb7dcaa3738fd4711ef450808e93fa97167"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cae273abc04fc606a73db5fb4b34a464f83d3488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cae273abc04fc606a73db5fb4b34a464f83d3488", "html_url": "https://github.com/rust-lang/rust/commit/cae273abc04fc606a73db5fb4b34a464f83d3488", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cae273abc04fc606a73db5fb4b34a464f83d3488/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e5c553b7c98185adecf3564e618e70fcd136ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5c553b7c98185adecf3564e618e70fcd136ce6", "html_url": "https://github.com/rust-lang/rust/commit/1e5c553b7c98185adecf3564e618e70fcd136ce6"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "1f7b001918c121f4803f5cedc2779a1c214f8a54", "filename": "src/libstd/treemap.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cae273abc04fc606a73db5fb4b34a464f83d3488/src%2Flibstd%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cae273abc04fc606a73db5fb4b34a464f83d3488/src%2Flibstd%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftreemap.rs?ref=cae273abc04fc606a73db5fb4b34a464f83d3488", "patch": "@@ -42,9 +42,8 @@ pub struct TreeMap<K: Ord, V> {\n impl <K: Eq Ord, V: Eq> TreeMap<K, V>: Eq {\n     pure fn eq(&self, other: &TreeMap<K, V>) -> bool {\n         if self.len() != other.len() {\n-            return false\n-        }\n-        unsafe { // purity workaround\n+            false\n+        } else unsafe { // unsafe used as a purity workaround\n             let mut x = self.iter();\n             let mut y = other.iter();\n             for self.len().times {"}]}