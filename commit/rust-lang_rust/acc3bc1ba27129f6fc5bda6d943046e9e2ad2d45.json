{"sha": "acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYzNiYzFiYTI3MTI5ZjZmYzViZGE2ZDk0MzA0NmU5ZTJhZDJkNDU=", "commit": {"author": {"name": "Nick Torres", "email": "nickrtorres@icloud.com", "date": "2020-04-04T21:24:22Z"}, "committer": {"name": "Nick Torres", "email": "nickrtorres@icloud.com", "date": "2020-04-04T21:24:22Z"}, "message": "result_map_or_into_option: move arg checks into tuple assignment", "tree": {"sha": "17cb86d64b92d9b9968bda10634f9fe5c85dd542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17cb86d64b92d9b9968bda10634f9fe5c85dd542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45", "html_url": "https://github.com/rust-lang/rust/commit/acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45/comments", "author": {"login": "nickrtorres", "id": 9876860, "node_id": "MDQ6VXNlcjk4NzY4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/9876860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickrtorres", "html_url": "https://github.com/nickrtorres", "followers_url": "https://api.github.com/users/nickrtorres/followers", "following_url": "https://api.github.com/users/nickrtorres/following{/other_user}", "gists_url": "https://api.github.com/users/nickrtorres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickrtorres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickrtorres/subscriptions", "organizations_url": "https://api.github.com/users/nickrtorres/orgs", "repos_url": "https://api.github.com/users/nickrtorres/repos", "events_url": "https://api.github.com/users/nickrtorres/events{/privacy}", "received_events_url": "https://api.github.com/users/nickrtorres/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nickrtorres", "id": 9876860, "node_id": "MDQ6VXNlcjk4NzY4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/9876860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickrtorres", "html_url": "https://github.com/nickrtorres", "followers_url": "https://api.github.com/users/nickrtorres/followers", "following_url": "https://api.github.com/users/nickrtorres/following{/other_user}", "gists_url": "https://api.github.com/users/nickrtorres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickrtorres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickrtorres/subscriptions", "organizations_url": "https://api.github.com/users/nickrtorres/orgs", "repos_url": "https://api.github.com/users/nickrtorres/repos", "events_url": "https://api.github.com/users/nickrtorres/events{/privacy}", "received_events_url": "https://api.github.com/users/nickrtorres/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb276dc3fa1d644ce6de1849ff3b78d3e54f5d9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb276dc3fa1d644ce6de1849ff3b78d3e54f5d9e", "html_url": "https://github.com/rust-lang/rust/commit/fb276dc3fa1d644ce6de1849ff3b78d3e54f5d9e"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "d57cce47ff9bb8610ca41aba94b864af544cd497", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=acc3bc1ba27129f6fc5bda6d943046e9e2ad2d45", "patch": "@@ -2559,26 +2559,27 @@ fn lint_map_or_none<'a, 'tcx>(\n         return;\n     }\n \n-    let default_arg_is_none = if let hir::ExprKind::Path(ref qpath) = map_or_args[1].kind {\n-        match_qpath(qpath, &paths::OPTION_NONE)\n-    } else {\n-        false\n-    };\n \n-    // This is really only needed if `is_result` holds. Computing it here\n-    // makes `mess`'s assignment a bit easier, so just compute it here.\n-    let f_arg_is_some = if let hir::ExprKind::Path(ref qpath) = map_or_args[2].kind {\n-        match_qpath(qpath, &paths::OPTION_SOME)\n-    } else {\n-        false\n-    };\n \n     let (lint, msg, instead, hint) = {\n+\n+        let default_arg_is_none = if let hir::ExprKind::Path(ref qpath) = map_or_args[1].kind {\n+            match_qpath(qpath, &paths::OPTION_NONE)\n+        } else {\n+            return;\n+        };\n+\n         if !default_arg_is_none {\n             // nothing to lint!\n             return;\n         }\n \n+        let f_arg_is_some = if let hir::ExprKind::Path(ref qpath) = map_or_args[2].kind {\n+            match_qpath(qpath, &paths::OPTION_SOME)\n+        } else {\n+            false\n+        };\n+\n         if is_option {\n             let self_snippet = snippet(cx, map_or_args[0].span, \"..\");\n             let func_snippet = snippet(cx, map_or_args[2].span, \"..\");"}]}