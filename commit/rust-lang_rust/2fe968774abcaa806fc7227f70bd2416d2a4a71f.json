{"sha": "2fe968774abcaa806fc7227f70bd2416d2a4a71f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZTk2ODc3NGFiY2FhODA2ZmM3MjI3ZjcwYmQyNDE2ZDJhNGE3MWY=", "commit": {"author": {"name": "Laura Peskin", "email": "laura.peskin@gmail.com", "date": "2017-09-25T05:44:47Z"}, "committer": {"name": "Laura Peskin", "email": "laura.peskin@gmail.com", "date": "2017-09-25T05:44:47Z"}, "message": "replace defids with nodeids for local variables", "tree": {"sha": "607460ea6da1c8b9ae601650f2d89fda44e99220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/607460ea6da1c8b9ae601650f2d89fda44e99220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fe968774abcaa806fc7227f70bd2416d2a4a71f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe968774abcaa806fc7227f70bd2416d2a4a71f", "html_url": "https://github.com/rust-lang/rust/commit/2fe968774abcaa806fc7227f70bd2416d2a4a71f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fe968774abcaa806fc7227f70bd2416d2a4a71f/comments", "author": {"login": "lpesk", "id": 7589231, "node_id": "MDQ6VXNlcjc1ODkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7589231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpesk", "html_url": "https://github.com/lpesk", "followers_url": "https://api.github.com/users/lpesk/followers", "following_url": "https://api.github.com/users/lpesk/following{/other_user}", "gists_url": "https://api.github.com/users/lpesk/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpesk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpesk/subscriptions", "organizations_url": "https://api.github.com/users/lpesk/orgs", "repos_url": "https://api.github.com/users/lpesk/repos", "events_url": "https://api.github.com/users/lpesk/events{/privacy}", "received_events_url": "https://api.github.com/users/lpesk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lpesk", "id": 7589231, "node_id": "MDQ6VXNlcjc1ODkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7589231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpesk", "html_url": "https://github.com/lpesk", "followers_url": "https://api.github.com/users/lpesk/followers", "following_url": "https://api.github.com/users/lpesk/following{/other_user}", "gists_url": "https://api.github.com/users/lpesk/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpesk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpesk/subscriptions", "organizations_url": "https://api.github.com/users/lpesk/orgs", "repos_url": "https://api.github.com/users/lpesk/repos", "events_url": "https://api.github.com/users/lpesk/events{/privacy}", "received_events_url": "https://api.github.com/users/lpesk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c326a779dd5edf1bdeec207723da928cc2d4aec8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c326a779dd5edf1bdeec207723da928cc2d4aec8", "html_url": "https://github.com/rust-lang/rust/commit/c326a779dd5edf1bdeec207723da928cc2d4aec8"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "21f2b4332c1294271d1eb175edc1e3efa69a3fba", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2fe968774abcaa806fc7227f70bd2416d2a4a71f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2fe968774abcaa806fc7227f70bd2416d2a4a71f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2fe968774abcaa806fc7227f70bd2416d2a4a71f", "patch": "@@ -1,6 +1,6 @@\n [root]\n name = \"clippy_lints\"\n-version = \"0.0.162\"\n+version = \"0.0.163\"\n dependencies = [\n  \"itertools 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -73,11 +73,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"clippy\"\n-version = \"0.0.162\"\n+version = \"0.0.163\"\n dependencies = [\n  \"cargo_metadata 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"clippy-mini-macro-test 0.1.0\",\n- \"clippy_lints 0.0.162\",\n+ \"clippy_lints 0.0.163\",\n  \"compiletest_rs 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"duct 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "518b6e2134782a444a4a66446eea05095ea64206", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2fe968774abcaa806fc7227f70bd2416d2a4a71f/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe968774abcaa806fc7227f70bd2416d2a4a71f/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=2fe968774abcaa806fc7227f70bd2416d2a4a71f", "patch": "@@ -1374,29 +1374,24 @@ fn check_for_mutability(cx: &LateContext, bound: &Expr) -> Option<NodeId> {\n         let QPath::Resolved(None, _) = *qpath,\n     ], {\n         let def = cx.tables.qpath_def(qpath, bound.hir_id);\n-        match def {\n-            Def::Local(..) | Def::Upvar(..) => {\n-                let def_id = def.def_id();\n-                let node_id = cx.tcx.hir.as_local_node_id(def_id).expect(\"local/upvar are local nodes\");\n-                let node_str = cx.tcx.hir.get(node_id);\n-                if_let_chain! {[\n-                    let map::Node::NodeBinding(pat) = node_str,\n-                    let PatKind::Binding(bind_ann, _, _, _) = pat.node,\n-                    let BindingAnnotation::Mutable = bind_ann,\n-                ], { \n-                    return Some(node_id); \n-                }}\n-            }\n-            _ => ()\n+        if let Def::Local(node_id) = def {\n+            let node_str = cx.tcx.hir.get(node_id);\n+            if_let_chain! {[\n+                let map::Node::NodeBinding(pat) = node_str,\n+                let PatKind::Binding(bind_ann, _, _, _) = pat.node,\n+                let BindingAnnotation::Mutable = bind_ann,\n+            ], {\n+                return Some(node_id);\n+            }}\n         }\n     }}\n     return None;\n }\n \n fn check_for_mutation(cx: &LateContext, body: &Expr, bound_ids: Vec<Option<NodeId>>) -> (Option<Span>, Option<Span>) {\n     let mut delegate = MutateDelegate { node_id_low: bound_ids[0], node_id_high: bound_ids[1], span_low: None, span_high: None };\n-    let def_id = def_id::DefId::local(body.hir_id.owner);\n-    let region_scope_tree = &cx.tcx.region_scope_tree(def_id);\n+    let d = def_id::DefId::local(body.hir_id.owner);\n+    let region_scope_tree = &cx.tcx.region_scope_tree(d);\n     ExprUseVisitor::new(&mut delegate, cx.tcx, cx.param_env, region_scope_tree, cx.tables).walk_expr(body);\n     return delegate.mutation_span();\n }"}]}