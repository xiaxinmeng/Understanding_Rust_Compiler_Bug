{"sha": "17f204feee7fe578930d56c231dad957c1b2d422", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZjIwNGZlZWU3ZmU1Nzg5MzBkNTZjMjMxZGFkOTU3YzFiMmQ0MjI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-03T01:26:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-03T01:26:50Z"}, "message": "Rollup merge of #70698 - nikomatsakis:x-py-json-output, r=Mark-Simulacrum\n\nbootstrap: add `--json-output` for rust-analyzer\n\nMotivation is that this allows us to customize rust-analyzer's \"cargo watch\" integration to run x.py. You simply have to set the command to run to be `x.py --json-output`\n\nr? @Mark-Simulacrum -- feel free to make changes, this is quick and dirty for sure", "tree": {"sha": "502e1e248058e6af611f21991642b2a2ba2314e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/502e1e248058e6af611f21991642b2a2ba2314e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f204feee7fe578930d56c231dad957c1b2d422", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehpDbCRBK7hj4Ov3rIwAAdHIIAGzk/CVJpkj9twtdyLMGCstz\nAI0yPhuVA7TNPlYmjxmNg5IJ4bJYYiyrWuaDIuThM4u42m9x8q5xg2Ckxtaov3hy\nZeAfHvjWIM1xK4fSO3wg/G+o5HFKY1+REMwnJDDv52diPuLH6eQLopA0rNwiGMIL\nxf9n3X5hXPd4MYXHran2B1o9LrO8jgTHAR3D0kaLBaLPlxdOm7GH3zeicdYISOho\n6/JSORJ8SFZqJ1b/oDzyr9BwQ2RHqRdD+EOTglMIaoD7DGZF6kYjkIK+aCMWHxFX\nBbSvzJwVGfbvOAg5nNP0Tlo7tDmJM6OiLa6uGHa7SpHBrfr8QkDW2oqYwt+47W0=\n=0Hoa\n-----END PGP SIGNATURE-----\n", "payload": "tree 502e1e248058e6af611f21991642b2a2ba2314e1\nparent 4f0a791d5d54674a9384879be28322a4986167a4\nparent e992565857df86b8dde9365b7fa76cbfdbf283c3\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585877210 +0200\ncommitter GitHub <noreply@github.com> 1585877210 +0200\n\nRollup merge of #70698 - nikomatsakis:x-py-json-output, r=Mark-Simulacrum\n\nbootstrap: add `--json-output` for rust-analyzer\n\nMotivation is that this allows us to customize rust-analyzer's \"cargo watch\" integration to run x.py. You simply have to set the command to run to be `x.py --json-output`\n\nr? @Mark-Simulacrum -- feel free to make changes, this is quick and dirty for sure\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f204feee7fe578930d56c231dad957c1b2d422", "html_url": "https://github.com/rust-lang/rust/commit/17f204feee7fe578930d56c231dad957c1b2d422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f204feee7fe578930d56c231dad957c1b2d422/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f0a791d5d54674a9384879be28322a4986167a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0a791d5d54674a9384879be28322a4986167a4", "html_url": "https://github.com/rust-lang/rust/commit/4f0a791d5d54674a9384879be28322a4986167a4"}, {"sha": "e992565857df86b8dde9365b7fa76cbfdbf283c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e992565857df86b8dde9365b7fa76cbfdbf283c3", "html_url": "https://github.com/rust-lang/rust/commit/e992565857df86b8dde9365b7fa76cbfdbf283c3"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "5602c65913818935389400c6ab34470b3677e133", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/17f204feee7fe578930d56c231dad957c1b2d422/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f204feee7fe578930d56c231dad957c1b2d422/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=17f204feee7fe578930d56c231dad957c1b2d422", "patch": "@@ -911,7 +911,11 @@ pub fn stream_cargo(\n     }\n     // Instruct Cargo to give us json messages on stdout, critically leaving\n     // stderr as piped so we can get those pretty colors.\n-    let mut message_format = String::from(\"json-render-diagnostics\");\n+    let mut message_format = if builder.config.json_output {\n+        String::from(\"json\")\n+    } else {\n+        String::from(\"json-render-diagnostics\")\n+    };\n     if let Some(s) = &builder.config.rustc_error_format {\n         message_format.push_str(\",json-diagnostic-\");\n         message_format.push_str(s);"}, {"sha": "133709421a5cdeaa5291887ab0e3f5175eb5dca1", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f204feee7fe578930d56c231dad957c1b2d422/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f204feee7fe578930d56c231dad957c1b2d422/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=17f204feee7fe578930d56c231dad957c1b2d422", "patch": "@@ -48,6 +48,7 @@ pub struct Config {\n     pub ignore_git: bool,\n     pub exclude: Vec<PathBuf>,\n     pub rustc_error_format: Option<String>,\n+    pub json_output: bool,\n     pub test_compare_mode: bool,\n     pub llvm_libunwind: bool,\n \n@@ -415,6 +416,7 @@ impl Config {\n         let mut config = Config::default_opts();\n         config.exclude = flags.exclude;\n         config.rustc_error_format = flags.rustc_error_format;\n+        config.json_output = flags.json_output;\n         config.on_fail = flags.on_fail;\n         config.stage = flags.stage;\n         config.jobs = flags.jobs.map(threads_from_config);"}, {"sha": "5d6e401d5b3fb0b46ef6369acc92eaa5526499b5", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/17f204feee7fe578930d56c231dad957c1b2d422/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f204feee7fe578930d56c231dad957c1b2d422/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=17f204feee7fe578930d56c231dad957c1b2d422", "patch": "@@ -31,6 +31,7 @@ pub struct Flags {\n     pub incremental: bool,\n     pub exclude: Vec<PathBuf>,\n     pub rustc_error_format: Option<String>,\n+    pub json_output: bool,\n     pub dry_run: bool,\n \n     // This overrides the deny-warnings configuration option,\n@@ -156,6 +157,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n             \"VALUE\",\n         );\n         opts.optopt(\"\", \"error-format\", \"rustc error format\", \"FORMAT\");\n+        opts.optflag(\"\", \"json-output\", \"use message-format=json\");\n         opts.optopt(\n             \"\",\n             \"llvm-skip-rebuild\",\n@@ -503,6 +505,7 @@ Arguments:\n             dry_run: matches.opt_present(\"dry-run\"),\n             on_fail: matches.opt_str(\"on-fail\"),\n             rustc_error_format: matches.opt_str(\"error-format\"),\n+            json_output: matches.opt_present(\"json-output\"),\n             keep_stage: matches\n                 .opt_strs(\"keep-stage\")\n                 .into_iter()"}]}