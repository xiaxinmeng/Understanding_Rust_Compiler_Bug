{"sha": "23327597e7a57dc8bddb3f7311e56750b0116114", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMzI3NTk3ZTdhNTdkYzhiZGRiM2Y3MzExZTU2NzUwYjAxMTYxMTQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-07-15T21:11:54Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-07-16T00:10:52Z"}, "message": "Move some `compile-fail` tests to `ui`", "tree": {"sha": "26ca95712f267616baa3d8da49a7e60700185968", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26ca95712f267616baa3d8da49a7e60700185968"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23327597e7a57dc8bddb3f7311e56750b0116114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23327597e7a57dc8bddb3f7311e56750b0116114", "html_url": "https://github.com/rust-lang/rust/commit/23327597e7a57dc8bddb3f7311e56750b0116114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23327597e7a57dc8bddb3f7311e56750b0116114/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e320595320855beb97a5959d67bd12f2afca4d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e320595320855beb97a5959d67bd12f2afca4d1", "html_url": "https://github.com/rust-lang/rust/commit/7e320595320855beb97a5959d67bd12f2afca4d1"}], "stats": {"total": 9685, "additions": 9668, "deletions": 17}, "files": [{"sha": "c968844ae21ac87c7c8d08ba8822c02ad5bd11ff", "filename": "src/test/ui/issue-10176.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10176.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10176.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10176.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10176.rs"}, {"sha": "02e0b899b3f88122ae2be74ebc12a326e623611f", "filename": "src/test/ui/issue-10176.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10176.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10176.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10176.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-10176.rs:12:5\n+   |\n+LL | fn f() -> isize {\n+   |           ----- expected `isize` because of return type\n+LL |     (return 1, return 2)\n+   |     ^^^^^^^^^^^^^^^^^^^^ expected isize, found tuple\n+   |\n+   = note: expected type `isize`\n+              found type `(!, !)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "8c58ef6261e10485fa20e7265f475b7d72c4d1a0", "filename": "src/test/ui/issue-10200.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10200.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10200.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10200.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10200.rs"}, {"sha": "4eb0782762857d15fdb5f6023cb18f0cd07467f7", "filename": "src/test/ui/issue-10200.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10200.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10200.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10200.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0532]: expected tuple struct/variant, found function `foo`\n+  --> $DIR/issue-10200.rs:16:9\n+   |\n+LL |         foo(x) //~ ERROR expected tuple struct/variant, found function `foo`\n+   |         ^^^ did you mean `Foo`?\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0532`."}, {"sha": "1358fe010b443c5d8a607c5a908973e41adc9cc7", "filename": "src/test/ui/issue-10291.nll.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10291.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10291.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10291.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-10291.rs:13:9\n+   |\n+LL |         x //~ ERROR E0312\n+   |         ^\n+\n+error: unsatisfied lifetime constraints\n+  --> $DIR/issue-10291.rs:12:5\n+   |\n+LL |     drop::<Box<for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ free region requires that `'x` must outlive `'static`\n+\n+error: aborting due to previous error\n+"}, {"sha": "d4e7dc7e9a35dfc705e0e5bdf36ee8159bcd12e4", "filename": "src/test/ui/issue-10291.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10291.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10291.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10291.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10291.rs"}, {"sha": "af5929782f6278d9d60cfd9a42ad60b00bdc56be", "filename": "src/test/ui/issue-10291.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10291.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10291.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10291.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,23 @@\n+error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n+  --> $DIR/issue-10291.rs:13:9\n+   |\n+LL |         x //~ ERROR E0312\n+   |         ^\n+   |\n+note: ...the reference is valid for the anonymous lifetime #2 defined on the body at 12:65...\n+  --> $DIR/issue-10291.rs:12:65\n+   |\n+LL |       drop::<Box<for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {\n+   |  _________________________________________________________________^\n+LL | |         x //~ ERROR E0312\n+LL | |     }));\n+   | |_____^\n+note: ...but the borrowed content is only valid for the lifetime 'x as defined on the function body at 11:9\n+  --> $DIR/issue-10291.rs:11:9\n+   |\n+LL | fn test<'x>(x: &'x isize) {\n+   |         ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0312`."}, {"sha": "d13e843b94b56334fcc3d37cb5c469158d081952", "filename": "src/test/ui/issue-10398.nll.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10398.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10398.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10398.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/issue-10398.rs:17:14\n+   |\n+LL |         let _a = x;\n+   |                  - value moved here\n+LL |         drop(x);\n+   |              ^ value used here after move\n+   |\n+   = note: move occurs because `x` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "08e8effc626f5bd68b7e6bda91e97b9fb3fa3aa5", "filename": "src/test/ui/issue-10398.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10398.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10398.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10398.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10398.rs"}, {"sha": "e3b816df3f4b666dd89a7dd852ca76d0a4286b15", "filename": "src/test/ui/issue-10398.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10398.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10398.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10398.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/issue-10398.rs:17:14\n+   |\n+LL |         let _a = x;\n+   |             -- value moved here\n+LL |         drop(x);\n+   |              ^ value used here after move\n+   |\n+   = note: move occurs because `x` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "e36193aee25c0471b3fbc98ad0d6ddf0002818ab", "filename": "src/test/ui/issue-10401.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10401.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10401.rs"}, {"sha": "8c91c11a67c332125690ffaaa9cdd3e5e8b0df53", "filename": "src/test/ui/issue-10401.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10401.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,16 @@\n+error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`\n+  --> $DIR/issue-10401.rs:13:5\n+   |\n+LL |     a += { \"b\" };\n+   |     -^^^^^^^^^^^\n+   |     |\n+   |     cannot use `+=` on type `&str`\n+   |     `+` can't be used to concatenate two `&str` strings\n+help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n+   |\n+LL |     a.to_owned() += { \"b\" };\n+   |     ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0368`."}, {"sha": "ee553730a35bc4ebca62138b8664b677394e1c36", "filename": "src/test/ui/issue-10412.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10412.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10412.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10412.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10412.rs"}, {"sha": "7f2f2dbf5091a2ea1f2a0fc5f061cbed20bf023d", "filename": "src/test/ui/issue-10412.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10412.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10412.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10412.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,51 @@\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:11:20\n+   |\n+LL | trait Serializable<'self, T> { //~ ERROR lifetimes cannot use keyword names\n+   |                    ^^^^^\n+\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:12:25\n+   |\n+LL |     fn serialize(val : &'self T) -> Vec<u8>; //~ ERROR lifetimes cannot use keyword names\n+   |                         ^^^^^\n+\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:13:38\n+   |\n+LL |     fn deserialize(repr : &[u8]) -> &'self T; //~ ERROR lifetimes cannot use keyword names\n+   |                                      ^^^^^\n+\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:16:6\n+   |\n+LL | impl<'self> Serializable<str> for &'self str { //~ ERROR lifetimes cannot use keyword names\n+   |      ^^^^^\n+\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:16:36\n+   |\n+LL | impl<'self> Serializable<str> for &'self str { //~ ERROR lifetimes cannot use keyword names\n+   |                                    ^^^^^\n+\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:19:25\n+   |\n+LL |     fn serialize(val : &'self str) -> Vec<u8> { //~ ERROR lifetimes cannot use keyword names\n+   |                         ^^^^^\n+\n+error: lifetimes cannot use keyword names\n+  --> $DIR/issue-10412.rs:22:37\n+   |\n+LL |     fn deserialize(repr: &[u8]) -> &'self str { //~ ERROR lifetimes cannot use keyword names\n+   |                                     ^^^^^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/issue-10412.rs:16:13\n+   |\n+LL | impl<'self> Serializable<str> for &'self str { //~ ERROR lifetimes cannot use keyword names\n+   |             ^^^^^^^^^^^^^^^^^ expected lifetime parameter\n+\n+error: aborting due to 8 previous errors\n+\n+For more information about this error, try `rustc --explain E0106`."}, {"sha": "ed91e935407b966a7200e92e8f773fbc47072d9e", "filename": "src/test/ui/issue-10465.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10465.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10465.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10465.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10465.rs"}, {"sha": "add4b832e8322338a6135ef2193eba268c123ade", "filename": "src/test/ui/issue-10465.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10465.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10465.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10465.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0599]: no method named `foo` found for type `&b::B` in the current scope\n+  --> $DIR/issue-10465.rs:27:15\n+   |\n+LL |             b.foo(); //~ ERROR: no method named `foo` found\n+   |               ^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           `use a::A;`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "2b71fb5c67f7a42a02ee9a59ac53bb93c6a892aa", "filename": "src/test/ui/issue-10536.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10536.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10536.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10536.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -24,8 +24,10 @@ pub fn main() {\n     foo!();\n \n     assert!({one! two()});\n+    //~^ ERROR macros that expand to items must either be surrounded with braces or followed by a\n \n     // regardless of whether nested macro_rules works, the following should at\n     // least throw a conventional error.\n     assert!({one! two});\n+    //~^ ERROR expected\n }", "previous_filename": "src/test/compile-fail/issue-10536.rs"}, {"sha": "ba404d0dd3f6353d791883b4d88b76ead9915742", "filename": "src/test/ui/issue-10536.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10536.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10536.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10536.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error: macros that expand to items must either be surrounded with braces or followed by a semicolon\n+  --> $DIR/issue-10536.rs:26:22\n+   |\n+LL |     assert!({one! two()});\n+   |                      ^^\n+\n+error: expected `(` or `{`, found `}`\n+  --> $DIR/issue-10536.rs:31:22\n+   |\n+LL |     assert!({one! two});\n+   |                      ^ expected `(` or `{`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "708eea39a9571b73dd58d24b5ebc4cd13cef3501", "filename": "src/test/ui/issue-10545.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10545.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10545.rs"}, {"sha": "28f95dff3bc0ad7056c23fa9358be1bbed13f4fd", "filename": "src/test/ui/issue-10545.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10545.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10545.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10545.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0603]: struct `S` is private\n+  --> $DIR/issue-10545.rs:17:11\n+   |\n+LL | fn foo(_: a::S) { //~ ERROR: struct `S` is private\n+   |           ^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0603`."}, {"sha": "7fd5a0d13485bec8ed786fc7a57070cb10c53099", "filename": "src/test/ui/issue-10656.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10656.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10656.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10656.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: missing documentation for crate\n-\n #![deny(missing_docs)]\n #![crate_type=\"lib\"]\n+//~^^ ERROR missing documentation for crate", "previous_filename": "src/test/compile-fail/issue-10656.rs"}, {"sha": "d67463f02636b1527f0e8fb8175b0d3473eabb39", "filename": "src/test/ui/issue-10656.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10656.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10656.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10656.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error: missing documentation for crate\n+  --> $DIR/issue-10656.rs:11:1\n+   |\n+LL | / #![deny(missing_docs)]\n+LL | | #![crate_type=\"lib\"]\n+   | |____________________^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-10656.rs:11:9\n+   |\n+LL | #![deny(missing_docs)]\n+   |         ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "57915bce456d9c3fb265849f8b94497fabc687f0", "filename": "src/test/ui/issue-10755.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10755.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10755.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10755.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10755.rs"}, {"sha": "db64944d44ff7cbea5c75e7bf18ee5a8b37cfd94", "filename": "src/test/ui/issue-10755.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10755.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10755.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10755.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,6 @@\n+error: linker `llllll` not found\n+   |\n+   = note: No such file or directory (os error 2)\n+\n+error: aborting due to previous error\n+"}, {"sha": "cd4ec495556c562303249997f20c36d31f7b3694", "filename": "src/test/ui/issue-10764.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10764.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10764.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10764.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10764.rs"}, {"sha": "6aacbef089720f45fe05545e61bf694bfc91a258", "filename": "src/test/ui/issue-10764.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10764.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10764.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10764.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-10764.rs:14:15\n+   |\n+LL | fn main() { f(bar) }\n+   |               ^^^ expected \"Rust\" fn, found \"C\" fn\n+   |\n+   = note: expected type `fn()`\n+              found type `extern \"C\" fn() {bar}`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "39f25b837cd4976e6b0e439dffbbc4c7a67cb7e0", "filename": "src/test/ui/issue-10877.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10877.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10877.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10877.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10877.rs"}, {"sha": "6db0bf6dc65fb3efcc7c858d1ef80f9b315e29e4", "filename": "src/test/ui/issue-10877.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10877.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10877.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10877.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,27 @@\n+error[E0130]: patterns aren't allowed in foreign function declarations\n+  --> $DIR/issue-10877.rs:13:12\n+   |\n+LL |     fn foo(1: ());\n+   |            ^ pattern not allowed in foreign function\n+\n+error[E0130]: patterns aren't allowed in foreign function declarations\n+  --> $DIR/issue-10877.rs:15:12\n+   |\n+LL |     fn bar((): isize);\n+   |            ^^ pattern not allowed in foreign function\n+\n+error[E0130]: patterns aren't allowed in foreign function declarations\n+  --> $DIR/issue-10877.rs:17:12\n+   |\n+LL |     fn baz(Foo { x }: isize);\n+   |            ^^^^^^^^^ pattern not allowed in foreign function\n+\n+error[E0130]: patterns aren't allowed in foreign function declarations\n+  --> $DIR/issue-10877.rs:19:12\n+   |\n+LL |     fn qux((x,y): ());\n+   |            ^^^^^ pattern not allowed in foreign function\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0130`."}, {"sha": "2d00f339f33a066607fbf6eee018501ce5557422", "filename": "src/test/ui/issue-10991.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10991.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-10991.rs"}, {"sha": "3ae3bbe06cbf79101d7f2dd2025a4c05a911ab88", "filename": "src/test/ui/issue-10991.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10991.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-10991.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10991.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0605]: non-primitive cast: `()` as `usize`\n+  --> $DIR/issue-10991.rs:13:14\n+   |\n+LL |     let _t = nil as usize; //~ ERROR: non-primitive cast: `()` as `usize`\n+   |              ^^^^^^^^^^^^\n+   |\n+   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0605`."}, {"sha": "1ff6812337406b9602ea71aa12b905d382b0f6f9", "filename": "src/test/ui/issue-11154.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11154.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11154.rs"}, {"sha": "8eec8b37c85ec24320a5ccc68b260046e49cd6fd", "filename": "src/test/ui/issue-11154.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11154.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11154.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11154.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,6 @@\n+error: cannot prefer dynamic linking when performing LTO\n+\n+note: only 'staticlib', 'bin', and 'cdylib' outputs are supported with LTO\n+\n+error: aborting due to previous error\n+"}, {"sha": "d5a67083a23b81ce60526ae512b5414ce1d13c75", "filename": "src/test/ui/issue-11192.nll.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11192.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11192.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11192.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0502]: cannot borrow `*ptr` as immutable because it is also borrowed as mutable\n+  --> $DIR/issue-11192.rs:30:10\n+   |\n+LL |     let mut test = |foo: &Foo| {\n+   |                    ----------- mutable borrow occurs here\n+LL |         println!(\"access {}\", foo.x);\n+LL |         ptr = box Foo { x: ptr.x + 1 };\n+   |         --- previous borrow occurs due to use of `ptr` in closure\n+...\n+LL |     test(&*ptr);\n+   |     -----^^^^^-\n+   |     |    |\n+   |     |    immutable borrow occurs here\n+   |     borrow later used here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0502`."}, {"sha": "7d8a1528aba36973a5cc86d395b82a716d36772c", "filename": "src/test/ui/issue-11192.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11192.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11192.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11192.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11192.rs"}, {"sha": "e9853ac0ca8277354b270745679468b6c5b51d5e", "filename": "src/test/ui/issue-11192.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11192.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11192.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11192.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0502]: cannot borrow `*ptr` as immutable because `ptr` is also borrowed as mutable\n+  --> $DIR/issue-11192.rs:30:11\n+   |\n+LL |     let mut test = |foo: &Foo| {\n+   |                    ----------- mutable borrow occurs here\n+LL |         println!(\"access {}\", foo.x);\n+LL |         ptr = box Foo { x: ptr.x + 1 };\n+   |         --- previous borrow occurs due to use of `ptr` in closure\n+...\n+LL |     test(&*ptr);\n+   |           ^^^^ immutable borrow occurs here\n+LL |     //~^ ERROR: cannot borrow `*ptr` as immutable\n+LL | }\n+   | - mutable borrow ends here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0502`."}, {"sha": "1e444a6bebf9b23b573465a7090f60b174d52fa3", "filename": "src/test/ui/issue-11374.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11374.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11374.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11374.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11374.rs"}, {"sha": "3465069129bf5659f899f35c58ff9afc62989da9", "filename": "src/test/ui/issue-11374.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11374.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11374.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11374.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-11374.rs:36:15\n+   |\n+LL |     c.read_to(v); //~ ERROR E0308\n+   |               ^\n+   |               |\n+   |               expected &mut [u8], found struct `std::vec::Vec`\n+   |               help: consider mutably borrowing here: `&mut v`\n+   |\n+   = note: expected type `&mut [u8]`\n+              found type `std::vec::Vec<_>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "99b996387e79be7ee2138715ae4d9c71c14b8314", "filename": "src/test/ui/issue-11493.ast.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11493.ast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11493.ast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11493.ast.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,16 @@\n+error[E0597]: borrowed value does not live long enough (Ast)\n+  --> $DIR/issue-11493.rs:20:35\n+   |\n+LL |     let y = x.as_ref().unwrap_or(&id(5));\n+   |                                   ^^^^^ - temporary value dropped here while still borrowed\n+   |                                   |\n+   |                                   temporary value does not live long enough\n+...\n+LL | }\n+   | - temporary value needs to live until here\n+   |\n+   = note: consider using a `let` binding to increase its lifetime\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "99b996387e79be7ee2138715ae4d9c71c14b8314", "filename": "src/test/ui/issue-11493.mir.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11493.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11493.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11493.mir.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,16 @@\n+error[E0597]: borrowed value does not live long enough (Ast)\n+  --> $DIR/issue-11493.rs:20:35\n+   |\n+LL |     let y = x.as_ref().unwrap_or(&id(5));\n+   |                                   ^^^^^ - temporary value dropped here while still borrowed\n+   |                                   |\n+   |                                   temporary value does not live long enough\n+...\n+LL | }\n+   | - temporary value needs to live until here\n+   |\n+   = note: consider using a `let` binding to increase its lifetime\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "80ecc24543e17d0c6f234ac10b58e017bef552ef", "filename": "src/test/ui/issue-11493.rs", "status": "renamed", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11493.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -9,10 +9,16 @@\n // except according to those terms.\n \n // This file must never have a trailing newline\n+//\n+// revisions: ast mir\n+// compile-flags: -Z borrowck=compare\n \n fn id<T>(x: T) -> T { x }\n \n fn main() {\n     let x = Some(3);\n-    let y = x.as_ref().unwrap_or(&id(5)); //~ ERROR: borrowed value does not live long enough\n+    let y = x.as_ref().unwrap_or(&id(5));\n+    //[ast]~^ ERROR borrowed value does not live long enough (Ast)\n+    //[mir]~^^ ERROR borrowed value does not live long enough (Ast)\n+    // This actually passes in mir\n }", "previous_filename": "src/test/compile-fail/issue-11493.rs"}, {"sha": "7afb8314ea689ffeba0615e449e18a503b16f2f1", "filename": "src/test/ui/issue-11515.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11515.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11515.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11515.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11515.rs"}, {"sha": "25e2a45438e84b2c961497857be380ea054ba599", "filename": "src/test/ui/issue-11515.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11515.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11515.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11515.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-11515.rs:19:33\n+   |\n+LL |     let test = box Test { func: closure }; //~ ERROR mismatched types\n+   |                                 ^^^^^^^ expected trait `std::ops::FnMut`, found trait `std::ops::Fn`\n+   |\n+   = note: expected type `std::boxed::Box<(dyn std::ops::FnMut() + 'static)>`\n+              found type `std::boxed::Box<(dyn std::ops::Fn() + 'static)>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "71f1d5dcc9af4af1007fbf40ff0c8fdd57574a38", "filename": "src/test/ui/issue-11681.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11681.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11681.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11681.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11681.rs"}, {"sha": "ef3d24c6657beff73dcd2556c0705d8f0f95c334", "filename": "src/test/ui/issue-11681.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11681.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11681.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11681.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/issue-11681.rs:22:20\n+   |\n+LL |   let testValue = &Test; //~ ERROR borrowed value does not live long enough\n+   |                    ^^^^ temporary value does not live long enough\n+LL |   return testValue;\n+LL | }\n+   | - temporary value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 21:15...\n+  --> $DIR/issue-11681.rs:21:15\n+   |\n+LL | fn createTest<'a>() -> &'a Test {\n+   |               ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "f577aad04e620bf0c7e02bedb9ebdc60167a529c", "filename": "src/test/ui/issue-11692-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11692-1.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11692-1.rs"}, {"sha": "daf53af3ace996a40b2aef793e181e344c6e7c43", "filename": "src/test/ui/issue-11692-1.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11692-1.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,8 @@\n+error: format argument must be a string literal.\n+  --> $DIR/issue-11692-1.rs:12:12\n+   |\n+LL |     print!(test!());\n+   |            ^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "acac2d151fe9ad5ef8008d3caf10f1a5de111bf7", "filename": "src/test/ui/issue-11692-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11692-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11692-2.rs"}, {"sha": "51d6041e92220e356b6f873a9ec54c9c8e5ca952", "filename": "src/test/ui/issue-11692-2.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11692-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11692-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,8 @@\n+error: cannot find macro `test!` in this scope\n+  --> $DIR/issue-11692-2.rs:12:13\n+   |\n+LL |     concat!(test!());\n+   |             ^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "0bda06be9e8ca964575185441d3beff9f5d526f2", "filename": "src/test/ui/issue-11740.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11740.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11740.rs"}, {"sha": "a1913e0057ca77c0c8fe1b7b0701776595eab439", "filename": "src/test/ui/issue-11740.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11740.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11740.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11740.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error: compilation successful\n+  --> $DIR/issue-11740.rs:35:1\n+   |\n+LL | / fn main() { //~ ERROR compilation successful\n+LL | |     let element = Element { attrs: Vec::new() };\n+LL | |     let _ = unsafe { element.get_attr(\"foo\") };\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "69899105bc3178720a9c880b5f7efc61c1b0724f", "filename": "src/test/ui/issue-11771.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11771.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11771.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11771.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11771.rs"}, {"sha": "a31c4fa008db14365ef4be97b56ef8596188c457", "filename": "src/test/ui/issue-11771.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11771.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11771.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11771.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: cannot add `()` to `{integer}`\n+  --> $DIR/issue-11771.rs:13:7\n+   |\n+LL |     1 +\n+   |       ^ no implementation for `{integer} + ()`\n+   |\n+   = help: the trait `std::ops::Add<()>` is not implemented for `{integer}`\n+\n+error[E0277]: cannot add `()` to `{integer}`\n+  --> $DIR/issue-11771.rs:18:7\n+   |\n+LL |     1 +\n+   |       ^ no implementation for `{integer} + ()`\n+   |\n+   = help: the trait `std::ops::Add<()>` is not implemented for `{integer}`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "a6dbe954ec0aca714e14c2c5b4891fe0d824ad70", "filename": "src/test/ui/issue-11844.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11844.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11844.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11844.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11844.rs"}, {"sha": "d773e88d01cf2c129fbe7bf84c62b295354a4af2", "filename": "src/test/ui/issue-11844.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11844.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11844.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11844.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-11844.rs:16:9\n+   |\n+LL |         Ok(a) => //~ ERROR: mismatched types\n+   |         ^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`\n+   |\n+   = note: expected type `std::option::Option<std::boxed::Box<{integer}>>`\n+              found type `std::result::Result<_, _>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "c12cbbfdd53a16a4e0b3755ff9707f413d21ad3f", "filename": "src/test/ui/issue-11873.nll.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11873.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11873.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11873.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error[E0505]: cannot move out of `v` because it is borrowed\n+  --> $DIR/issue-11873.rs:14:14\n+   |\n+LL |     let mut f = || v.push(2);\n+   |                 ------------ borrow of `v` occurs here\n+LL |     let _w = v; //~ ERROR: cannot move out of `v`\n+   |              ^ move out of `v` occurs here\n+LL | \n+LL |     f();\n+   |     - borrow later used here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0505`."}, {"sha": "4618851529a15b2aa8db1180e0ff783393bcc67e", "filename": "src/test/ui/issue-11873.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11873.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11873.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11873.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-11873.rs"}, {"sha": "f4da011f5729c38ed7f007866ada6ac6556ed1bc", "filename": "src/test/ui/issue-11873.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11873.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-11873.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11873.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0505]: cannot move out of `v` because it is borrowed\n+  --> $DIR/issue-11873.rs:14:9\n+   |\n+LL |     let mut f = || v.push(2);\n+   |                 -- borrow of `v` occurs here\n+LL |     let _w = v; //~ ERROR: cannot move out of `v`\n+   |         ^^ move out of `v` occurs here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0505`."}, {"sha": "980385ce4cc6b360a65b7cd9876a356f385e0616", "filename": "src/test/ui/issue-12028.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12028.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12028.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12028.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12028.rs"}, {"sha": "f756e0a29d17a978698459c46f0f11447fc501e2", "filename": "src/test/ui/issue-12028.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12028.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12028.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12028.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0284]: type annotations required: cannot resolve `<_ as StreamHasher>::S == <H as StreamHasher>::S`\n+  --> $DIR/issue-12028.rs:39:14\n+   |\n+LL |         self.input_stream(&mut stream); //~ ERROR type annotations required\n+   |              ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "b880317a2a61298712dc0bc3cb2d2841374d9362", "filename": "src/test/ui/issue-12041.nll.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12041.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12041.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12041.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0382]: use of moved value: `tx`\n+  --> $DIR/issue-12041.rs:18:22\n+   |\n+LL |             let tx = tx;\n+   |                      ^^ value moved here in previous iteration of loop\n+   |\n+   = note: move occurs because `tx` has type `std::sync::mpsc::Sender<i32>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "f0f4bf5ca71bb611031a86f871bdf974ce923717", "filename": "src/test/ui/issue-12041.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12041.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12041.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12041.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12041.rs"}, {"sha": "6172d78b51377b71031e8429ae383ca5cfd4db29", "filename": "src/test/ui/issue-12041.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12041.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12041.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12041.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0382]: use of moved value: `tx`\n+  --> $DIR/issue-12041.rs:18:17\n+   |\n+LL |             let tx = tx;\n+   |                 ^^ value moved here in previous iteration of loop\n+   |\n+   = note: move occurs because `tx` has type `std::sync::mpsc::Sender<i32>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "a8d2c55255340ceca1c776cd07723836805d1080", "filename": "src/test/ui/issue-12116.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12116.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12116.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12116.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12116.rs"}, {"sha": "3bf0984b25685acfa427b4bd25a01c7e6f4fe21d", "filename": "src/test/ui/issue-12116.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12116.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error: unreachable pattern\n+  --> $DIR/issue-12116.rs:25:9\n+   |\n+LL |         &IntList::Cons(val, box IntList::Nil)  => IntList::Cons(val, box IntList::Nil),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-12116.rs:15:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "5565a9a5761166d0a52fb7649d241990b546c492", "filename": "src/test/ui/issue-12127.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12127.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12127.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12127.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12127.rs"}, {"sha": "afd483823a63055777969309245a057f6ba2373b", "filename": "src/test/ui/issue-12127.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12127.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12127.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12127.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0382]: use of moved value: `f`\n+  --> $DIR/issue-12127.rs:21:9\n+   |\n+LL |         f();\n+   |         - value moved here\n+LL |         f();\n+   |         ^ value used here after move\n+   |\n+   = note: move occurs because `f` has type `[closure@$DIR/issue-12127.rs:18:24: 18:41 x:std::boxed::Box<isize>]`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "1b9af393ccce473bfce789a75af2b8c6058aa70c", "filename": "src/test/ui/issue-12369.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12369.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12369.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12369.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12369.rs"}, {"sha": "2e8cd840fb7e8a5e033e19cf7ecc35fa0a8f5bb6", "filename": "src/test/ui/issue-12369.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12369.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12369.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12369.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error: unreachable pattern\n+  --> $DIR/issue-12369.rs:20:9\n+   |\n+LL |         &[10,a, ref rest..] => 10 //~ ERROR: unreachable pattern\n+   |         ^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-12369.rs:12:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "09cbfe4f66daa3aaaae4d49fd735851fbd85a6ae", "filename": "src/test/ui/issue-12470.nll.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12470.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12470.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12470.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0597]: `*b` does not live long enough\n+  --> $DIR/issue-12470.rs:38:18\n+   |\n+LL |     let bb: &B = &*b;    //~ ERROR does not live long enough\n+   |                  ^^^ borrowed value does not live long enough\n+LL |     make_a(bb)\n+LL | }\n+   | - borrowed value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 36:16...\n+  --> $DIR/issue-12470.rs:36:16\n+   |\n+LL | fn make_make_a<'a>() -> A<'a> {\n+   |                ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "93785817e14f36107e704becf360d63f5538fa11", "filename": "src/test/ui/issue-12470.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12470.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12470.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12470.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12470.rs"}, {"sha": "91788e96297892f6da13321acc6a0b758447095e", "filename": "src/test/ui/issue-12470.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12470.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12470.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12470.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0597]: `*b` does not live long enough\n+  --> $DIR/issue-12470.rs:38:19\n+   |\n+LL |     let bb: &B = &*b;    //~ ERROR does not live long enough\n+   |                   ^^ borrowed value does not live long enough\n+LL |     make_a(bb)\n+LL | }\n+   | - borrowed value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 36:16...\n+  --> $DIR/issue-12470.rs:36:16\n+   |\n+LL | fn make_make_a<'a>() -> A<'a> {\n+   |                ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "e4788bac256e2424434039606391be6504f78724", "filename": "src/test/ui/issue-12552.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12552.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12552.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12552.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12552.rs"}, {"sha": "9a3d5ef02c6277df069e010d30fcb7d86b4dee2b", "filename": "src/test/ui/issue-12552.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12552.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12552.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12552.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-12552.rs:16:5\n+   |\n+LL |     Some(k) => match k { //~ ERROR mismatched types\n+   |     ^^^^^^^ expected enum `std::result::Result`, found enum `std::option::Option`\n+   |\n+   = note: expected type `std::result::Result<_, {integer}>`\n+              found type `std::option::Option<_>`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-12552.rs:19:5\n+   |\n+LL |     None => () //~ ERROR mismatched types\n+   |     ^^^^ expected enum `std::result::Result`, found enum `std::option::Option`\n+   |\n+   = note: expected type `std::result::Result<_, {integer}>`\n+              found type `std::option::Option<_>`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "a040f7c3c8d1b04d336189a5348c5e9334ec572b", "filename": "src/test/ui/issue-12567.nll.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12567.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12567.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12567.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,31 @@\n+error[E0508]: cannot move out of type `[T]`, a non-copy slice\n+  --> $DIR/issue-12567.rs:14:11\n+   |\n+LL |     match (l1, l2) {\n+   |           ^^^^^^^^ cannot move out of here\n+help: to prevent move, use ref or ref mut\n+   |\n+LL |         (&[], &[ref hd, ..]) | (&[hd, ..], &[])\n+   |                 ^^^^^^\n+help: to prevent move, use ref or ref mut\n+   |\n+LL |         (&[hd1, ..], &[ref hd2, ..])\n+   |                        ^^^^^^^\n+\n+error[E0508]: cannot move out of type `[T]`, a non-copy slice\n+  --> $DIR/issue-12567.rs:14:11\n+   |\n+LL |     match (l1, l2) {\n+   |           ^^^^^^^^ cannot move out of here\n+help: to prevent move, use ref or ref mut\n+   |\n+LL |         (&[], &[ref hd, ..]) | (&[hd, ..], &[])\n+   |                 ^^^^^^\n+help: to prevent move, use ref or ref mut\n+   |\n+LL |         (&[ref hd1, ..], &[hd2, ..])\n+   |            ^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0508`."}, {"sha": "30cdd07b399986de54b3e7137d31833ea310717d", "filename": "src/test/ui/issue-12567.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12567.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12567.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12567.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12567.rs"}, {"sha": "60acffdcb06f8e410e38a6181ab13310d6346b1c", "filename": "src/test/ui/issue-12567.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12567.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12567.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12567.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,39 @@\n+error[E0508]: cannot move out of type `[T]`, a non-copy slice\n+  --> $DIR/issue-12567.rs:16:16\n+   |\n+LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n+   |                ^--^^^^^\n+   |                ||\n+   |                |hint: to prevent move, use `ref hd` or `ref mut hd`\n+   |                cannot move out of here\n+\n+error[E0508]: cannot move out of type `[T]`, a non-copy slice\n+  --> $DIR/issue-12567.rs:16:30\n+   |\n+LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n+   |                              ^--^^^^^\n+   |                              ||\n+   |                              |hint: to prevent move, use `ref hd` or `ref mut hd`\n+   |                              cannot move out of here\n+\n+error[E0508]: cannot move out of type `[T]`, a non-copy slice\n+  --> $DIR/issue-12567.rs:20:11\n+   |\n+LL |         (&[hd1, ..], &[hd2, ..])\n+   |           ^---^^^^^\n+   |           ||\n+   |           |hint: to prevent move, use `ref hd1` or `ref mut hd1`\n+   |           cannot move out of here\n+\n+error[E0508]: cannot move out of type `[T]`, a non-copy slice\n+  --> $DIR/issue-12567.rs:20:23\n+   |\n+LL |         (&[hd1, ..], &[hd2, ..])\n+   |                       ^---^^^^^\n+   |                       ||\n+   |                       |hint: to prevent move, use `ref hd2` or `ref mut hd2`\n+   |                       cannot move out of here\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0508`."}, {"sha": "0c3c82a99f28f4f38a6ba45caea71226fadad3de", "filename": "src/test/ui/issue-12796.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12796.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12796.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12796.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12796.rs"}, {"sha": "c8bedd3853c68135e064e4ac5455813e9f7ae74c", "filename": "src/test/ui/issue-12796.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12796.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12796.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12796.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0401]: can't use type parameters from outer function\n+  --> $DIR/issue-12796.rs:13:22\n+   |\n+LL |         fn inner(_: &Self) {\n+   |            -----     ^^^^ use of type variable from outer function\n+   |            |\n+   |            help: try using a local type parameter instead: `inner<Self>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0401`."}, {"sha": "d3432410c5427b6a99feea3bc952cbb347b23ec9", "filename": "src/test/ui/issue-12863.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12863.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12863.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12863.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12863.rs"}, {"sha": "eb2957a8225937623fe0d18cd0bf7ff93b512fa4", "filename": "src/test/ui/issue-12863.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12863.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12863.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12863.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0532]: expected unit struct/variant or constant, found function `foo::bar`\n+  --> $DIR/issue-12863.rs:15:9\n+   |\n+LL |         foo::bar => {} //~ ERROR expected unit struct/variant or constant, found function `foo::bar`\n+   |         ^^^^^^^^ not a unit struct/variant or constant\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0532`."}, {"sha": "2d8d7857c99fb9feb6a4007e8a831903331323aa", "filename": "src/test/ui/issue-12997-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12997-1.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12997-1.rs"}, {"sha": "856538417d914e81770a7c96f5bc88bfb21bcd06", "filename": "src/test/ui/issue-12997-1.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12997-1.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error: functions used as benches must have signature `fn(&mut Bencher) -> impl Termination`\n+  --> $DIR/issue-12997-1.rs:16:1\n+   |\n+LL | fn foo() { } //~ ERROR functions used as benches\n+   | ^^^^^^^^^^^^\n+\n+error: functions used as benches must have signature `fn(&mut Bencher) -> impl Termination`\n+  --> $DIR/issue-12997-1.rs:19:1\n+   |\n+LL | fn bar(x: isize, y: isize) { } //~ ERROR functions used as benches\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "8d3df68577bab14f1d2518d02fd495acf220e63c", "filename": "src/test/ui/issue-12997-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12997-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-12997-2.rs"}, {"sha": "3030ee4779b4b71cc2fde28e532e526a5017b8b6", "filename": "src/test/ui/issue-12997-2.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-12997-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-12997-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-12997-2.rs:16:1\n+   |\n+LL | fn bar(x: isize) { }\n+   | ^^^^^^^^^^^^^^^^^^^^ expected isize, found mutable reference\n+   |\n+   = note: expected type `isize`\n+              found type `&mut __test::test::Bencher`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "f1fd617717a5ee5af533bf7bf3b51c44259688d2", "filename": "src/test/ui/issue-13033.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13033.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13033.rs"}, {"sha": "2db3cb80a819e53fd4190eda2325d48e3fba04d5", "filename": "src/test/ui/issue-13033.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13033.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13033.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13033.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error[E0053]: method `bar` has an incompatible type for trait\n+  --> $DIR/issue-13033.rs:18:30\n+   |\n+LL |     fn bar(&mut self, other: &mut Foo);\n+   |                              -------- type in trait\n+...\n+LL |     fn bar(&mut self, other: &Foo) {}\n+   |                              ^^^^ types differ in mutability\n+   |\n+   = note: expected type `fn(&mut Baz, &mut dyn Foo)`\n+              found type `fn(&mut Baz, &dyn Foo)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0053`."}, {"sha": "e9d76c758cdb726f0cea282e12311bf211fe1071", "filename": "src/test/ui/issue-13352.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13352.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13352.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13352.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13352.rs"}, {"sha": "5324eb2118617d9503b7244f435f0d45d1f7c06e", "filename": "src/test/ui/issue-13352.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13352.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13352.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13352.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: cannot add `()` to `usize`\n+  --> $DIR/issue-13352.rs:19:13\n+   |\n+LL |     2_usize + (loop {});\n+   |             ^ no implementation for `usize + ()`\n+   |\n+   = help: the trait `std::ops::Add<()>` is not implemented for `usize`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "e33859e8c19a38479ee260f2579c00b8dd66068b", "filename": "src/test/ui/issue-13359.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13359.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13359.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13359.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13359.rs"}, {"sha": "77f10be982b0110921b877070e695b36a31b75ef", "filename": "src/test/ui/issue-13359.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13359.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13359.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13359.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13359.rs:16:9\n+   |\n+LL |     foo(1*(1 as isize));\n+   |         ^^^^^^^^^^^^^^ expected i16, found isize\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13359.rs:20:9\n+   |\n+LL |     bar(1*(1 as usize));\n+   |         ^^^^^^^^^^^^^^ expected u32, found usize\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "0059e92e07f07a8aa29ae13cfb8ff78e6395509e", "filename": "src/test/ui/issue-13404.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13404.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13404.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13404.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13404.rs"}, {"sha": "b71d3ceab5b3b9316da51f5de58f16a46629a32e", "filename": "src/test/ui/issue-13404.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13404.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13404.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13404.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0432]: unresolved import `b::f`\n+  --> $DIR/issue-13404.rs:12:5\n+   |\n+LL | use b::f; //~ ERROR: unresolved import `b::f` [E0432]\n+   |     ^^^^ no `f` in `b`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0432`."}, {"sha": "afb2e867f45c6057e60336534eefb316e4148cc7", "filename": "src/test/ui/issue-13407.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13407.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13407.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13407.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13407.rs"}, {"sha": "e5ef50e984a766ff337b7c86fc8505e9666fc96d", "filename": "src/test/ui/issue-13407.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13407.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13407.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13407.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,25 @@\n+error[E0603]: unit struct `C` is private\n+  --> $DIR/issue-13407.rs:16:5\n+   |\n+LL |     A::C = 1;\n+   |     ^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13407.rs:16:12\n+   |\n+LL |     A::C = 1;\n+   |            ^ expected struct `A::C`, found integral variable\n+   |\n+   = note: expected type `A::C`\n+              found type `{integer}`\n+\n+error[E0070]: invalid left-hand side expression\n+  --> $DIR/issue-13407.rs:16:5\n+   |\n+LL |     A::C = 1;\n+   |     ^^^^^^^^ left-hand of expression not valid\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0070, E0308, E0603.\n+For more information about an error, try `rustc --explain E0070`."}, {"sha": "6ad3ec67b29642bb251aef0cae43a3c216b2fe1f", "filename": "src/test/ui/issue-13446.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13446.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13446.rs"}, {"sha": "68fece30c81d1f5bb983369e8262dfa5e523bf8b", "filename": "src/test/ui/issue-13446.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13446.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13446.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13446.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13446.rs:16:26\n+   |\n+LL | static VEC: [u32; 256] = vec![];\n+   |                          ^^^^^^ expected array of 256 elements, found struct `std::vec::Vec`\n+   |\n+   = note: expected type `[u32; 256]`\n+              found type `std::vec::Vec<_>`\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "abddf6ba7a38d4550392a514e56cc7d51e45820e", "filename": "src/test/ui/issue-13466.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13466.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13466.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13466.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13466.rs"}, {"sha": "be845fb8e22853849a872f524cbbee5ac0df3175", "filename": "src/test/ui/issue-13466.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13466.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13466.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13466.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13466.rs:18:9\n+   |\n+LL |         Ok(u) => u,\n+   |         ^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`\n+   |\n+   = note: expected type `std::option::Option<{integer}>`\n+              found type `std::result::Result<_, _>`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13466.rs:24:9\n+   |\n+LL |         Err(e) => panic!(e)\n+   |         ^^^^^^ expected enum `std::option::Option`, found enum `std::result::Result`\n+   |\n+   = note: expected type `std::option::Option<{integer}>`\n+              found type `std::result::Result<_, _>`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "fe7fbb176cc5e61adf95be6680d92539f3ccd8c4", "filename": "src/test/ui/issue-13482-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13482-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13482-2.rs"}, {"sha": "1ecae3b867a11df8671bfa7333b6aff40dc2aae9", "filename": "src/test/ui/issue-13482-2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13482-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0527]: pattern requires 0 elements but array has 2\n+  --> $DIR/issue-13482-2.rs:16:9\n+   |\n+LL |         [] => None, //~ ERROR pattern requires 0 elements but array has 2\n+   |         ^^ expected 2 elements\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0527`."}, {"sha": "32a63b79a32dd093cb845c688d72d8378cc7f7c2", "filename": "src/test/ui/issue-13482.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13482.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13482.rs"}, {"sha": "95273bb46bca3e0840772dfc9db7ccb8704c65e7", "filename": "src/test/ui/issue-13482.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13482.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13482.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0527]: pattern requires 0 elements but array has 2\n+  --> $DIR/issue-13482.rs:14:5\n+   |\n+LL |     [] => None, //~ ERROR pattern requires 0 elements but array has 2\n+   |     ^^ expected 2 elements\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0527`."}, {"sha": "31716837493c7c0e71a9996b605ad6696eb2a2d9", "filename": "src/test/ui/issue-13497-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13497-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13497-2.rs"}, {"sha": "72770f8c84ce7df607fab5df04eac0f6f6b8cbb4", "filename": "src/test/ui/issue-13497-2.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13497-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0597]: `rawLines` does not live long enough\n+  --> $DIR/issue-13497-2.rs:13:5\n+   |\n+LL |     rawLines //~ ERROR `rawLines` does not live long enough\n+   |     ^^^^^^^^ borrowed value does not live long enough\n+LL |         .iter().map(|l| l.trim()).collect()\n+LL | }\n+   | - borrowed value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 11:24...\n+  --> $DIR/issue-13497-2.rs:11:24\n+   |\n+LL | fn read_lines_borrowed<'a>() -> Vec<&'a str> {\n+   |                        ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "d544a92d9c3b594a842daae30c37efc166b1976a", "filename": "src/test/ui/issue-13497.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13497.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13497.rs"}, {"sha": "ab6d041bd48d731ac747a3019be44e452da776e6", "filename": "src/test/ui/issue-13497.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13497.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13497.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/issue-13497.rs:12:5\n+   |\n+LL |     &str //~ ERROR missing lifetime specifier\n+   |     ^ expected lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n+   = help: consider giving it a 'static lifetime\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0106`."}, {"sha": "d51db4795998b0fcd54ebb9235d4a92d9b9cac09", "filename": "src/test/ui/issue-1362.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1362.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1362.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1362.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-1362.rs"}, {"sha": "c19e256eb92833e1f7822ac0824f77bd2ef9278e", "filename": "src/test/ui/issue-1362.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1362.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1362.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1362.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-1362.rs:14:16\n+   |\n+LL |   let x: u32 = 20i32; //~ ERROR mismatched types\n+   |                ^^^^^ expected u32, found i32\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "3b690e08f6143042e6cc05cfeca424a036f4330c", "filename": "src/test/ui/issue-13641.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13641.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13641.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13641.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13641.rs"}, {"sha": "0f96b5f66b1b81a388d1fb31ab4cb962219efed8", "filename": "src/test/ui/issue-13641.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13641.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13641.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13641.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error[E0603]: struct `Foo` is private\n+  --> $DIR/issue-13641.rs:19:5\n+   |\n+LL |     a::Foo::new();\n+   |     ^^^^^^^^^^^\n+\n+error[E0603]: enum `Bar` is private\n+  --> $DIR/issue-13641.rs:21:5\n+   |\n+LL |     a::Bar::new();\n+   |     ^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0603`."}, {"sha": "2e815548e89134c7e95e16cc1fe318f0c0fc8df0", "filename": "src/test/ui/issue-13727.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13727.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13727.rs"}, {"sha": "47b9a0211a9670a479b91cd842bae687d96cfe97", "filename": "src/test/ui/issue-13727.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13727.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13727.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13727.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error: unreachable pattern\n+  --> $DIR/issue-13727.rs:17:5\n+   |\n+LL |     512 => print!(\"0b1111/n\"),\n+   |     ^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-13727.rs:12:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "0314f109a7c8129a7184b936f8900300ca03d86d", "filename": "src/test/ui/issue-13847.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13847.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13847.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13847.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13847.rs"}, {"sha": "fad3245034d06a35eb143d6b886049263754d35a", "filename": "src/test/ui/issue-13847.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13847.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13847.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13847.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0609]: no field `is_failure` on type `!`\n+  --> $DIR/issue-13847.rs:12:12\n+   |\n+LL |     return.is_failure //~ ERROR no field `is_failure` on type `!`\n+   |            ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0609`."}, {"sha": "1635a8f69a6cd2b481f91adf5c99402dfc6923d8", "filename": "src/test/ui/issue-13853-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13853-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13853-2.rs"}, {"sha": "c15290fb1d95791749f9b00f21ee8cf0cd66026e", "filename": "src/test/ui/issue-13853-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13853-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0615]: attempted to take value of method `get` on type `std::boxed::Box<(dyn ResponseHook + 'static)>`\n+  --> $DIR/issue-13853-2.rs:15:39\n+   |\n+LL | fn foo(res : Box<ResponseHook>) { res.get } //~ ERROR attempted to take value of method\n+   |                                       ^^^\n+   |\n+   = help: maybe a `()` to call it is missing?\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0615`."}, {"sha": "78b079a7c44a4ac307edf34b8af0e906e5375bcb", "filename": "src/test/ui/issue-13853-5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13853-5.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13853-5.rs"}, {"sha": "e93b03b43ee66d47fc9516cefa15cf59f66bbb4a", "filename": "src/test/ui/issue-13853-5.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13853-5.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n+  --> $DIR/issue-13853-5.rs:17:10\n+   |\n+LL | impl<'a, T: Deserializable> Deserializable for &'a str {\n+   |          ^ unconstrained type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0207`."}, {"sha": "86a6bdfd4dde4d5c1b1898a50272e22c43ed5a37", "filename": "src/test/ui/issue-13853.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13853.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-13853.rs"}, {"sha": "188bfd5930105777a9bf15848695388ca13101ec", "filename": "src/test/ui/issue-13853.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-13853.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13853.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,34 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13853.rs:24:9\n+   |\n+LL |     fn nodes<'a, I: Iterator<Item=&'a N>>(&self) -> I\n+   |                                                     - expected `I` because of return type\n+...\n+LL |         self.iter() //~ ERROR mismatched types\n+   |         ^^^^^^^^^^^ expected type parameter, found struct `std::slice::Iter`\n+   |\n+   = note: expected type `I`\n+              found type `std::slice::Iter<'_, N>`\n+\n+error[E0599]: no method named `iter` found for type `&G` in the current scope\n+  --> $DIR/issue-13853.rs:37:23\n+   |\n+LL |     for node in graph.iter() { //~ ERROR no method named `iter` found\n+   |                       ^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13853.rs:47:13\n+   |\n+LL |     iterate(graph); //~ ERROR mismatched types\n+   |             ^^^^^\n+   |             |\n+   |             expected reference, found struct `std::vec::Vec`\n+   |             help: consider borrowing here: `&graph`\n+   |\n+   = note: expected type `&_`\n+              found type `std::vec::Vec<Stuff>`\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0308, E0599.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "a4351733a876e1e419896791742d2a558c3c7112", "filename": "src/test/ui/issue-14091-2.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14091-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: cannot apply unary operator `!` to type `BytePos`\n+//\n \n // Very\n \n@@ -23,4 +23,5 @@ fn main() {\n     let x = BytePos(1);\n \n     assert!(x, x);\n+    //~^ ERROR cannot apply unary operator `!` to type `BytePos`\n }", "previous_filename": "src/test/compile-fail/issue-14091-2.rs"}, {"sha": "ccabd801c85da8c169476c07441629c997fc56c2", "filename": "src/test/ui/issue-14091-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14091-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0600]: cannot apply unary operator `!` to type `BytePos`\n+  --> $DIR/issue-14091-2.rs:25:5\n+   |\n+LL |     assert!(x, x);\n+   |     ^^^^^^^^^^^^^^ cannot apply unary operator `!`\n+   |\n+   = note: an implementation of `std::ops::Not` might be missing for `BytePos`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0600`."}, {"sha": "9e436b8e629dd471f7bf189ea97d1ccf93248397", "filename": "src/test/ui/issue-14091.rs", "status": "renamed", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14091.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:mismatched types\n-\n-fn main(){assert!(1,1);}\n+fn main(){\n+    assert!(1,1);\n+    //~^ ERROR mismatched types\n+}", "previous_filename": "src/test/compile-fail/issue-14091.rs"}, {"sha": "9db2a0e2a86f5c7c6da2e17300c22306f77e7514", "filename": "src/test/ui/issue-14091.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14091.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14091.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-14091.rs:12:5\n+   |\n+LL |     assert!(1,1);\n+   |     ^^^^^^^^^^^^^ expected bool, found integral variable\n+   |\n+   = note: expected type `bool`\n+              found type `{integer}`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "d11fe99c07f6b738433a029d386904bd2e2fa83b", "filename": "src/test/ui/issue-14221.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14221.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14221.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14221.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14221.rs"}, {"sha": "9252a4f304f2503cf669a7149ee271dbb6ebfd26", "filename": "src/test/ui/issue-14221.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14221.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,30 @@\n+warning[E0170]: pattern binding `A` is named the same as one of the variants of the type `E`\n+  --> $DIR/issue-14221.rs:23:13\n+   |\n+LL |             A => \"A\",\n+   |             ^ help: to match on the variant, qualify the path: `E::A`\n+\n+warning[E0170]: pattern binding `B` is named the same as one of the variants of the type `E`\n+  --> $DIR/issue-14221.rs:25:13\n+   |\n+LL |             B => \"B\", //~ ERROR: unreachable pattern\n+   |             ^ help: to match on the variant, qualify the path: `E::B`\n+\n+error: unreachable pattern\n+  --> $DIR/issue-14221.rs:25:13\n+   |\n+LL |             A => \"A\",\n+   |             - matches any value\n+LL | //~^ WARN pattern binding `A` is named the same as one of the variants of the type `E`\n+LL |             B => \"B\", //~ ERROR: unreachable pattern\n+   |             ^ unreachable pattern\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-14221.rs:11:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0170`."}, {"sha": "250e78ce2464005d9837f07fe7d7e4178cb4d369", "filename": "src/test/ui/issue-14227.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14227.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14227.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14227.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14227.rs"}, {"sha": "f5f39465b187b6bf95755e014607b25657197b5d", "filename": "src/test/ui/issue-14227.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14227.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14227.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14227.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0080]: could not evaluate static initializer\n+  --> $DIR/issue-14227.rs:16:20\n+   |\n+LL | static CRASH: () = symbol;\n+   |                    ^^^^^^ tried to read from foreign (extern) static\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "440365cae3e1c1a59d6c53585127662989efad06", "filename": "src/test/ui/issue-14285.nll.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14285.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14285.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14285.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,17 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-14285.rs:22:7\n+   |\n+LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n+   |       ^\n+\n+error[E0621]: explicit lifetime required in the type of `a`\n+  --> $DIR/issue-14285.rs:22:7\n+   |\n+LL | fn foo<'a>(a: &Foo) -> B<'a> {\n+   |            - consider changing the type of `a` to `&'a (dyn Foo + 'a)`\n+LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n+   |       ^ lifetime `'a` required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "dceecee6ca74b0ad6fee883032889bf00a70c502", "filename": "src/test/ui/issue-14285.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14285.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14285.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14285.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14285.rs"}, {"sha": "b5ab7bdb9d1926fb60f1949ef2cae2b282c880cc", "filename": "src/test/ui/issue-14285.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14285.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14285.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14285.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0621]: explicit lifetime required in the type of `a`\n+  --> $DIR/issue-14285.rs:22:5\n+   |\n+LL | fn foo<'a>(a: &Foo) -> B<'a> {\n+   |            - consider changing the type of `a` to `&'a (dyn Foo + 'a)`\n+LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n+   |     ^^^^ lifetime `'a` required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "f76fa3e4a8ecec2f2029951958a52861b13d851d", "filename": "src/test/ui/issue-14309.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14309.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14309.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14309.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14309.rs"}, {"sha": "e062c633ee6f10cd10149db4dc898c54eda0f890", "filename": "src/test/ui/issue-14309.stderr", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14309.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14309.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14309.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,82 @@\n+error: `extern` block uses type `A` which is not FFI-safe: this struct has unspecified layout\n+  --> $DIR/issue-14309.rs:40:15\n+   |\n+LL |     fn foo(x: A); //~ ERROR type `A` which is not FFI-safe\n+   |               ^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-14309.rs:11:9\n+   |\n+LL | #![deny(improper_ctypes)]\n+   |         ^^^^^^^^^^^^^^^\n+   = help: consider adding a #[repr(C)] or #[repr(transparent)] attribute to this struct\n+note: type defined here\n+  --> $DIR/issue-14309.rs:14:1\n+   |\n+LL | / struct A {\n+LL | |     x: i32\n+LL | | }\n+   | |_^\n+\n+error: `extern` block uses type `A` which is not FFI-safe: this struct has unspecified layout\n+  --> $DIR/issue-14309.rs:41:15\n+   |\n+LL |     fn bar(x: B); //~ ERROR type `A`\n+   |               ^\n+   |\n+   = help: consider adding a #[repr(C)] or #[repr(transparent)] attribute to this struct\n+note: type defined here\n+  --> $DIR/issue-14309.rs:14:1\n+   |\n+LL | / struct A {\n+LL | |     x: i32\n+LL | | }\n+   | |_^\n+\n+error: `extern` block uses type `A` which is not FFI-safe: this struct has unspecified layout\n+  --> $DIR/issue-14309.rs:43:15\n+   |\n+LL |     fn qux(x: A2); //~ ERROR type `A`\n+   |               ^^\n+   |\n+   = help: consider adding a #[repr(C)] or #[repr(transparent)] attribute to this struct\n+note: type defined here\n+  --> $DIR/issue-14309.rs:14:1\n+   |\n+LL | / struct A {\n+LL | |     x: i32\n+LL | | }\n+   | |_^\n+\n+error: `extern` block uses type `A` which is not FFI-safe: this struct has unspecified layout\n+  --> $DIR/issue-14309.rs:44:16\n+   |\n+LL |     fn quux(x: B2); //~ ERROR type `A`\n+   |                ^^\n+   |\n+   = help: consider adding a #[repr(C)] or #[repr(transparent)] attribute to this struct\n+note: type defined here\n+  --> $DIR/issue-14309.rs:14:1\n+   |\n+LL | / struct A {\n+LL | |     x: i32\n+LL | | }\n+   | |_^\n+\n+error: `extern` block uses type `A` which is not FFI-safe: this struct has unspecified layout\n+  --> $DIR/issue-14309.rs:46:16\n+   |\n+LL |     fn fred(x: D); //~ ERROR type `A`\n+   |                ^\n+   |\n+   = help: consider adding a #[repr(C)] or #[repr(transparent)] attribute to this struct\n+note: type defined here\n+  --> $DIR/issue-14309.rs:14:1\n+   |\n+LL | / struct A {\n+LL | |     x: i32\n+LL | | }\n+   | |_^\n+\n+error: aborting due to 5 previous errors\n+"}, {"sha": "0b154d0a3ea88f12b9b72d798fbe578310a24ef8", "filename": "src/test/ui/issue-14366.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14366.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14366.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14366.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14366.rs"}, {"sha": "260ca44368965a74276de23579533b3dea2b7359", "filename": "src/test/ui/issue-14366.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14366.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14366.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14366.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/issue-14366.rs:12:14\n+   |\n+LL |     let _x = \"test\" as &::std::any::Any;\n+   |              ^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n+   = note: required for the cast to the object type `dyn std::any::Any`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "ddfed3647c2e0b15a411d76e298368af42dd4b34", "filename": "src/test/ui/issue-1448-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1448-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1448-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1448-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-1448-2.rs"}, {"sha": "5769b0c3b9faee3c8d35ecd44096faac874a9a94", "filename": "src/test/ui/issue-1448-2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1448-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1448-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1448-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-1448-2.rs:16:24\n+   |\n+LL |     println!(\"{}\", foo(10i32)); //~ ERROR mismatched types\n+   |                        ^^^^^ expected u32, found i32\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "84c600d2201e324b378566a0e3d9e9083ecc2271", "filename": "src/test/ui/issue-14541.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14541.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14541.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14541.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14541.rs"}, {"sha": "fcff500cfda8eb72e5623102f386c524f750b1bb", "filename": "src/test/ui/issue-14541.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14541.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14541.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14541.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-14541.rs:15:9\n+   |\n+LL |     let vec3 { y: _, z: _ } = v;\n+   |         ^^^^^^^^^^^^^^^^^^^ expected struct `vec2`, found struct `vec3`\n+   |\n+   = note: expected type `vec2`\n+              found type `vec3`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "58e8e10ee37ac85210a68c89e6ba9b87d5b1b265", "filename": "src/test/ui/issue-14721.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14721.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14721.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14721.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14721.rs"}, {"sha": "93e51140caa0e0cf6e74e0eaa393a856f762555c", "filename": "src/test/ui/issue-14721.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14721.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14721.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14721.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0609]: no field `desc` on type `&str`\n+  --> $DIR/issue-14721.rs:13:24\n+   |\n+LL |     println!(\"{}\", foo.desc); //~ no field `desc` on type `&str`\n+   |                        ^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0609`."}, {"sha": "48bf71f5892b9cf7b8b078bc29249037c3e1fe11", "filename": "src/test/ui/issue-1476.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1476.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1476.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1476.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-1476.rs"}, {"sha": "afdda3e15dad0199778b772da05de52f7cc087f4", "filename": "src/test/ui/issue-1476.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1476.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1476.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1476.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/issue-1476.rs:12:20\n+   |\n+LL |     println!(\"{}\", x); //~ ERROR cannot find value `x` in this scope\n+   |                    ^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "aaaad67be52dd9beb7f98779db8ae4043d42c0f1", "filename": "src/test/ui/issue-14772.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14772.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14772.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14772.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14772.rs"}, {"sha": "1116cd38edf6ab1e709b41483a75845ce02f7081", "filename": "src/test/ui/issue-14772.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14772.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14772.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14772.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,8 @@\n+error: only functions may be used as tests\n+  --> $DIR/issue-14772.rs:14:1\n+   |\n+LL | mod foo {} //~ ERROR only functions may be used as tests\n+   | ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "74f0833e8d11c8d4f3cf51584b3dcb7d7cde1b2a", "filename": "src/test/ui/issue-14845.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14845.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14845.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14845.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14845.rs"}, {"sha": "a994026946eaf5935c7f35b39596121525c1bf9d", "filename": "src/test/ui/issue-14845.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14845.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14845.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14845.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error[E0606]: casting `&[u8; 1]` as `*mut u8` is invalid\n+  --> $DIR/issue-14845.rs:18:14\n+   |\n+LL |     let _f = &x.a as *mut u8; //~ ERROR casting\n+   |              ^^^^^^^^^^^^^^^\n+\n+error[E0606]: casting `&[u8; 1]` as `*mut u8` is invalid\n+  --> $DIR/issue-14845.rs:21:14\n+   |\n+LL |     let _v = &local as *mut u8; //~ ERROR casting\n+   |              ^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0606`."}, {"sha": "e4da3e4fa43e67c91b4db0b27bbe8d0088e0b944", "filename": "src/test/ui/issue-14853.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14853.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14853.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14853.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14853.rs"}, {"sha": "6c2f6bb9c6978de09b38353f2721719b6fb97c93", "filename": "src/test/ui/issue-14853.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14853.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14853.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14853.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0276]: impl has stricter requirements than trait\n+  --> $DIR/issue-14853.rs:22:5\n+   |\n+LL |     fn yay<T: Debug>(_: Option<Self>, thing: &[T]);\n+   |     ----------------------------------------------- definition of `yay` from trait\n+...\n+LL |     fn yay<T: Str>(_:Option<X>, thing: &[T]) {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `T: Str`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0276`."}, {"sha": "810d6656a8f6216bbcbff41f7080332219a6673e", "filename": "src/test/ui/issue-14915.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14915.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14915.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14915.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-14915.rs"}, {"sha": "aa418f5df867aa2515074f26a53fded3bd51fe0c", "filename": "src/test/ui/issue-14915.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14915.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-14915.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14915.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0369]: binary operation `+` cannot be applied to type `std::boxed::Box<isize>`\n+  --> $DIR/issue-14915.rs:16:20\n+   |\n+LL |     println!(\"{}\", x + 1);\n+   |                    ^^^^^\n+   |\n+   = note: an implementation of `std::ops::Add` might be missing for `std::boxed::Box<isize>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0369`."}, {"sha": "19fe83f8f6c86886ac2397f74bae4eccaaf499b2", "filename": "src/test/ui/issue-15034.nll.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15034.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15034.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15034.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,17 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-15034.rs:27:9\n+   |\n+LL |         Parser { lexer: lexer }\n+   |         ^^^^^^\n+\n+error[E0621]: explicit lifetime required in the type of `lexer`\n+  --> $DIR/issue-15034.rs:27:25\n+   |\n+LL |     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n+   |                ----- consider changing the type of `lexer` to `&'a mut Lexer<'a>`\n+LL |         Parser { lexer: lexer }\n+   |                         ^^^^^ lifetime `'a` required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "a62e46820d3cb1cc64c14d7e3fecea811835c2b2", "filename": "src/test/ui/issue-15034.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15034.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15034.rs"}, {"sha": "3bbf4235a29377a61bae69dcbaece2d323d259a4", "filename": "src/test/ui/issue-15034.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15034.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0621]: explicit lifetime required in the type of `lexer`\n+  --> $DIR/issue-15034.rs:27:25\n+   |\n+LL |     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n+   |                ----- consider changing the type of `lexer` to `&'a mut Lexer<'a>`\n+LL |         Parser { lexer: lexer }\n+   |                         ^^^^^ lifetime `'a` required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "1dd6763cbe50a580d8de917c4753ce15832dd2eb", "filename": "src/test/ui/issue-15094.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15094.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15094.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15094.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15094.rs"}, {"sha": "7928a6be350181fbbe4ec9c0c9327c2ec379f17a", "filename": "src/test/ui/issue-15094.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15094.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15094.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15094.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0053]: method `call_once` has an incompatible type for trait\n+  --> $DIR/issue-15094.rs:21:5\n+   |\n+LL |     fn call_once(self, _args: ()) {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected \"rust-call\" fn, found \"Rust\" fn\n+   |\n+   = note: expected type `extern \"rust-call\" fn(Debuger<T>, ())`\n+              found type `fn(Debuger<T>, ())`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0053`."}, {"sha": "7a7ba46de74f3925055efd5f777aff27ff5d2100", "filename": "src/test/ui/issue-15129.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15129.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15129.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15129.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15129.rs"}, {"sha": "e65e6516222445e13f45579c4c3bb4cee37d9482", "filename": "src/test/ui/issue-15129.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15129.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15129.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15129.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0004]: non-exhaustive patterns: `(T1(()), V2(_))` not covered\n+  --> $DIR/issue-15129.rs:22:11\n+   |\n+LL |     match (T::T1(()), V::V2(true)) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^ pattern `(T1(()), V2(_))` not covered\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0004`."}, {"sha": "d224b8a548c84101df3375b01cf9c1de23e89f2b", "filename": "src/test/ui/issue-15167.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15167.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15167.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15167.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15167.rs"}, {"sha": "b15c493ad69c5e2f5c4f3e6b49589dd23acefb13", "filename": "src/test/ui/issue-15167.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15167.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15167.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15167.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,39 @@\n+error[E0425]: cannot find value `n` in this scope\n+  --> $DIR/issue-15167.rs:13:25\n+   |\n+LL | macro_rules! f { () => (n) }\n+   |                         ^ not found in this scope\n+...\n+LL |         println!(\"{}\", f!());\n+   |                        ---- in this macro invocation\n+\n+error[E0425]: cannot find value `n` in this scope\n+  --> $DIR/issue-15167.rs:13:25\n+   |\n+LL | macro_rules! f { () => (n) }\n+   |                         ^ not found in this scope\n+...\n+LL |         println!(\"{}\", f!());\n+   |                        ---- in this macro invocation\n+\n+error[E0425]: cannot find value `n` in this scope\n+  --> $DIR/issue-15167.rs:13:25\n+   |\n+LL | macro_rules! f { () => (n) }\n+   |                         ^ not found in this scope\n+...\n+LL |         println!(\"{}\", f!());\n+   |                        ---- in this macro invocation\n+\n+error[E0425]: cannot find value `n` in this scope\n+  --> $DIR/issue-15167.rs:13:25\n+   |\n+LL | macro_rules! f { () => (n) }\n+   |                         ^ not found in this scope\n+...\n+LL |         println!(\"{}\", f!());\n+   |                        ---- in this macro invocation\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "70da8cf4169bd64c93cf3f88136c1782ccf77ec2", "filename": "src/test/ui/issue-15207.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15207.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15207.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15207.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15207.rs"}, {"sha": "77e520122777ee564cc31c55c4439125d351cd73", "filename": "src/test/ui/issue-15207.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15207.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15207.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15207.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0599]: no method named `push` found for type `!` in the current scope\n+  --> $DIR/issue-15207.rs:13:15\n+   |\n+LL |         break.push(1) //~ ERROR no method named `push` found for type `!`\n+   |               ^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "1cdd803971b4bfd06c9259d7d86e48de8c8b743f", "filename": "src/test/ui/issue-15381.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15381.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15381.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15381.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15381.rs"}, {"sha": "7a936a821082232a25a67d1b34341133a9382f22", "filename": "src/test/ui/issue-15381.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15381.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15381.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15381.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0005]: refutable pattern in `for` loop binding: `&[]` not covered\n+  --> $DIR/issue-15381.rs:14:9\n+   |\n+LL |     for &[x,y,z] in values.chunks(3).filter(|&xs| xs.len() == 3) {\n+   |         ^^^^^^^^ pattern `&[]` not covered\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0005`."}, {"sha": "c123e85a0e0fcdf87bc94b3eaaa522c5ccd77673", "filename": "src/test/ui/issue-15756.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15756.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15756.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15756.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15756.rs"}, {"sha": "af70f125302c74735b6af08e36dc6b546130fa91", "filename": "src/test/ui/issue-15756.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15756.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15756.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15756.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0277]: the size for values of type `[T]` cannot be known at compilation time\n+  --> $DIR/issue-15756.rs:17:10\n+   |\n+LL |     &mut something\n+   |          ^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `[T]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n+   = note: all local variables must have a statically known size\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "37a2f1582bf08124fd4a152783a9f29c80be6623", "filename": "src/test/ui/issue-15783.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15783.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15783.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15783.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15783.rs"}, {"sha": "d565bad244810d2f879b0161037a9064aeba64d0", "filename": "src/test/ui/issue-15783.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15783.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15783.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15783.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-15783.rs:18:19\n+   |\n+LL |     let msg = foo(x);\n+   |                   ^ expected slice, found array of 1 elements\n+   |\n+   = note: expected type `std::option::Option<&[&str]>`\n+              found type `std::option::Option<&[&str; 1]>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "35ef9ba2b4beacc244b90cd3e623a206241cd6ed", "filename": "src/test/ui/issue-15896.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15896.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15896.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15896.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15896.rs"}, {"sha": "b41848c8cdf28a78d2e6b11536db2ec200a442b1", "filename": "src/test/ui/issue-15896.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15896.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15896.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15896.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-15896.rs:21:11\n+   |\n+LL |           Tau{t: x},\n+   |           ^^^^^^^^^ expected enum `main::R`, found struct `main::Tau`\n+   |\n+   = note: expected type `main::R`\n+              found type `main::Tau`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "df7e7c102b213b38bcc2c1e04307a48a1b0dee0a", "filename": "src/test/ui/issue-15919.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15919.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15919.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15919.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15919.rs"}, {"sha": "a69e7b43e259bf191ead2a5598814d4473eb5a13", "filename": "src/test/ui/issue-15919.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15919.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15919.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15919.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,4 @@\n+error: the type `[usize; 18446744073709551615]` is too big for the current architecture\n+\n+error: aborting due to previous error\n+"}, {"sha": "76ba5a0f4b371f42e7e6c26b70dc76756532e323", "filename": "src/test/ui/issue-15965.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15965.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15965.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15965.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-15965.rs"}, {"sha": "216c6460c77d1b2554aa153467b19f50fdf6ecd5", "filename": "src/test/ui/issue-15965.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15965.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-15965.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15965.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-15965.rs:13:9\n+   |\n+LL | /         { return () }\n+LL | | //~^ ERROR type annotations needed [E0282]\n+LL | |     ()\n+   | |______^ cannot infer type for `_`\n+   |\n+   = note: type must be known at this point\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "cda83fe54b09ab527acdca32c31a484d28327565", "filename": "src/test/ui/issue-16048.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16048.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16048.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16048.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16048.rs"}, {"sha": "97883fb2a9501ff0fc76724a7d4e5f899ce3d93c", "filename": "src/test/ui/issue-16048.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16048.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16048.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16048.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0195]: lifetime parameters or bounds on method `get` do not match the trait declaration\n+  --> $DIR/issue-16048.rs:31:11\n+   |\n+LL |     fn get<'p, T : Test<'p>>(&self) -> T;\n+   |           ------------------ lifetimes in impl do not match this method in trait\n+...\n+LL |     fn get<'p, T : Test<'a>>(&self) -> T {\n+   |           ^^^^^^^^^^^^^^^^^^ lifetimes do not match method in trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0195`."}, {"sha": "68ac19b383f5a06eeb6e09f5af834de762c5ff75", "filename": "src/test/ui/issue-16098.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16098.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16098.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16098.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16098.rs"}, {"sha": "31162ca50cc895d3753b693f4e79c0c9ff1393ef", "filename": "src/test/ui/issue-16098.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16098.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16098.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16098.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error: recursion limit reached while expanding the macro `prob1`\n+  --> $DIR/issue-16098.rs:17:18\n+   |\n+LL |             $n + prob1!($n - 1); //~ ERROR recursion limit reached while expanding the macro `prob1`\n+   |                  ^^^^^^^^^^^^^^\n+...\n+LL |     println!(\"Problem 1: {}\", prob1!(1000));\n+   |                               ------------ in this macro invocation\n+   |\n+   = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n+\n+error: aborting due to previous error\n+"}, {"sha": "60117bd88d46ad2b6e1a2323bd536bd40a2b8638", "filename": "src/test/ui/issue-16149.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16149.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16149.rs"}, {"sha": "b0b6e9dfcd03d2254aa155f5a16a924e87b97169", "filename": "src/test/ui/issue-16149.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16149.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16149.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16149.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0530]: match bindings cannot shadow statics\n+  --> $DIR/issue-16149.rs:17:9\n+   |\n+LL |     static externalValue: isize;\n+   |     ---------------------------- a static `externalValue` is defined here\n+...\n+LL |         externalValue => true,\n+   |         ^^^^^^^^^^^^^ cannot be named the same as a static\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0530`."}, {"sha": "f9d01003005e4c045dc6cf16586eb46ae4566216", "filename": "src/test/ui/issue-16250.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16250.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16250.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16250.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16250.rs"}, {"sha": "c826b20b65f295563f995947a9a4c078c97c6baf", "filename": "src/test/ui/issue-16250.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16250.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,21 @@\n+error: `extern` block uses type `Foo` which is not FFI-safe: this struct has unspecified layout\n+  --> $DIR/issue-16250.rs:16:20\n+   |\n+LL |     pub fn foo(x: (Foo)); //~ ERROR unspecified layout\n+   |                    ^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-16250.rs:11:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: #[deny(improper_ctypes)] implied by #[deny(warnings)]\n+   = help: consider adding a #[repr(C)] or #[repr(transparent)] attribute to this struct\n+note: type defined here\n+  --> $DIR/issue-16250.rs:13:1\n+   |\n+LL | pub struct Foo;\n+   | ^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "438073e3b2f82b5e37c3d3631601ee8d742efff2", "filename": "src/test/ui/issue-16338.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16338.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16338.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16338.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16338.rs"}, {"sha": "c670f1e3e9ca146bd1f7963d27e05ff563990422", "filename": "src/test/ui/issue-16338.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16338.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16338.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16338.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-16338.rs:17:9\n+   |\n+LL |     let Slice { data: data, len: len } = \"foo\";\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected str, found struct `Slice`\n+   |\n+   = note: expected type `str`\n+              found type `Slice<_>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "3060bbea43c3bf8ea0b2520ef1e8ba60136382ba", "filename": "src/test/ui/issue-16401.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16401.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16401.rs"}, {"sha": "179415c762163fc103f59192084eeeed6f885554", "filename": "src/test/ui/issue-16401.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16401.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-16401.rs:18:9\n+   |\n+LL |         Slice { data: data, len: len } => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found struct `Slice`\n+   |\n+   = note: expected type `()`\n+              found type `Slice<_>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "cc652119377165527c78412f12d18924f2840d9a", "filename": "src/test/ui/issue-16538.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16538.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16538.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16538.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16538.rs"}, {"sha": "9bc3590ebab375ed8e437402e9eb2f859eccf76d", "filename": "src/test/ui/issue-16538.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16538.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16538.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16538.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,19 @@\n+error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/issue-16538.rs:23:27\n+   |\n+LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: `*const usize` cannot be shared between threads safely\n+  --> $DIR/issue-16538.rs:23:1\n+   |\n+LL | static foo: *const Y::X = Y::foo(Y::x as *const Y::X);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `*const usize` cannot be shared between threads safely\n+   |\n+   = help: the trait `std::marker::Sync` is not implemented for `*const usize`\n+   = note: shared static variables must have a type that implements `Sync`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0015, E0277.\n+For more information about an error, try `rustc --explain E0015`."}, {"sha": "a400263a243277738eaa620491fa325de4231163", "filename": "src/test/ui/issue-16562.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16562.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16562.rs"}, {"sha": "a4525033e2556709688c34ab245331c5e988da99", "filename": "src/test/ui/issue-16562.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16562.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16562.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16562.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n+  --> $DIR/issue-16562.rs:20:6\n+   |\n+LL | impl<T, M: MatrixShape> Collection for Col<M, usize> {\n+   |      ^ unconstrained type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0207`."}, {"sha": "d789f580b2738ffbac6e6bb9827ef4d2e6afd255", "filename": "src/test/ui/issue-16683.nll.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16683.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16683.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16683.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,22 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-16683.rs:14:9\n+   |\n+LL |         self.a(); //~ ERROR cannot infer\n+   |         ^^^^\n+\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-16683.rs:14:14\n+   |\n+LL |         self.a(); //~ ERROR cannot infer\n+   |              ^\n+\n+error: unsatisfied lifetime constraints\n+  --> $DIR/issue-16683.rs:14:9\n+   |\n+LL |     fn b(&self) {\n+   |          - let's call the lifetime of this reference `'1`\n+LL |         self.a(); //~ ERROR cannot infer\n+   |         ^^^^^^^^ argument requires that `'1` must outlive `'a`\n+\n+error: aborting due to previous error\n+"}, {"sha": "fcbf8a3d3519eb8f623282552a32c0fa1ae98360", "filename": "src/test/ui/issue-16683.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16683.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16683.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16683.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16683.rs"}, {"sha": "ceb5347ca80367fdd92c4450463c9924b05a8292", "filename": "src/test/ui/issue-16683.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16683.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16683.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16683.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,30 @@\n+error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n+  --> $DIR/issue-16683.rs:14:14\n+   |\n+LL |         self.a(); //~ ERROR cannot infer\n+   |              ^\n+   |\n+note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 13:5...\n+  --> $DIR/issue-16683.rs:13:5\n+   |\n+LL | /     fn b(&self) {\n+LL | |         self.a(); //~ ERROR cannot infer\n+LL | |     }\n+   | |_____^\n+note: ...so that reference does not outlive borrowed content\n+  --> $DIR/issue-16683.rs:14:9\n+   |\n+LL |         self.a(); //~ ERROR cannot infer\n+   |         ^^^^\n+note: but, the lifetime must be valid for the lifetime 'a as defined on the trait at 11:9...\n+  --> $DIR/issue-16683.rs:11:9\n+   |\n+LL | trait T<'a> {\n+   |         ^^\n+   = note: ...so that the types are compatible:\n+           expected &'a Self\n+              found &Self\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0495`."}, {"sha": "902baaf579f7df653aead949a9e648f38289453a", "filename": "src/test/ui/issue-16922.nll.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16922.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16922.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16922.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,17 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-16922.rs:14:14\n+   |\n+LL |     Box::new(value) as Box<Any>\n+   |              ^^^^^\n+\n+error[E0621]: explicit lifetime required in the type of `value`\n+  --> $DIR/issue-16922.rs:14:5\n+   |\n+LL | fn foo<T: Any>(value: &T) -> Box<Any> {\n+   |                ----- consider changing the type of `value` to `&'static T`\n+LL |     Box::new(value) as Box<Any>\n+   |     ^^^^^^^^^^^^^^^ lifetime `'static` required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "1768c834cb39161334dc38fa7cb12f0a18790954", "filename": "src/test/ui/issue-16922.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16922.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16922.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16922.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16922.rs"}, {"sha": "cf81d4b4d08b731b6cba33c7ef765a7760c4cdd4", "filename": "src/test/ui/issue-16922.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16922.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16922.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16922.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0621]: explicit lifetime required in the type of `value`\n+  --> $DIR/issue-16922.rs:14:5\n+   |\n+LL | fn foo<T: Any>(value: &T) -> Box<Any> {\n+   |                ----- consider changing the type of `value` to `&'static T`\n+LL |     Box::new(value) as Box<Any>\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime `'static` required\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0621`."}, {"sha": "e16c58b8a6c1ac1033e14332b30bb62c7dc381bb", "filename": "src/test/ui/issue-16939.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16939.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16939.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16939.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16939.rs"}, {"sha": "238480493703d93c8210143bbe7ca543f15cf553", "filename": "src/test/ui/issue-16939.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16939.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16939.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16939.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0057]: this function takes 0 parameters but 1 parameter was supplied\n+  --> $DIR/issue-16939.rs:15:9\n+   |\n+LL |     |t| f(t); //~ ERROR E0057\n+   |         ^^^^ expected 0 parameters\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0057`."}, {"sha": "ecf81c8af17f61018f4028cf2c0306ffa1a56876", "filename": "src/test/ui/issue-16966.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16966.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16966.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16966.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16966.rs"}, {"sha": "f7129a6fe1b87c358027bbb60d46a290ac83ffc8", "filename": "src/test/ui/issue-16966.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16966.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16966.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16966.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-16966.rs:13:5\n+   |\n+LL | /     panic!(\n+LL | |         std::default::Default::default()\n+LL | |     );\n+   | |______^ cannot infer type for `M`\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "f8a68264339b93da003a9a2510f897b3cf1c6a0b", "filename": "src/test/ui/issue-1697.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1697.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-1697.rs"}, {"sha": "28a7fbcaabee8bbd33883ebcc0caa27649833971", "filename": "src/test/ui/issue-1697.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1697.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-1697.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-1697.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0432]: unresolved import `unresolved`\n+  --> $DIR/issue-1697.rs:13:5\n+   |\n+LL | use unresolved::*; //~ ERROR unresolved import `unresolved` [E0432]\n+   |     ^^^^^^^^^^ Maybe a missing `extern crate unresolved;`?\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0432`."}, {"sha": "ae4e8ce1df8ffd87db4ae2da5a0432e6218e363b", "filename": "src/test/ui/issue-16994.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16994.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16994.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16994.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-16994.rs"}, {"sha": "8392b9da4118b7ffe2b793aaeb5568eafe148be3", "filename": "src/test/ui/issue-16994.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16994.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-16994.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16994.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,10 @@\n+error: compilation successful\n+  --> $DIR/issue-16994.rs:18:1\n+   |\n+LL | / fn main() { //~ ERROR compilation successful\n+LL | |     cb(Box::new(|(k, &(ref v, b))| (*k, v.clone(), b)));\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "413e8b464fff78a2aacbe103f7e0651f970407d2", "filename": "src/test/ui/issue-17001.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17001.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17001.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17001.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17001.rs"}, {"sha": "a8e0cd8591bf8a0cecf8010758abe47c1e00266e", "filename": "src/test/ui/issue-17001.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17001.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17001.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17001.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0574]: expected struct, variant or union type, found module `foo`\n+  --> $DIR/issue-17001.rs:14:13\n+   |\n+LL |     let p = foo { x: () }; //~ ERROR expected struct, variant or union type, found module `foo`\n+   |             ^^^ not a struct, variant or union type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0574`."}, {"sha": "f250103b1440755da5ae1192fe09cc45c65456bd", "filename": "src/test/ui/issue-17025.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17025.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17025.rs"}, {"sha": "1cd43cbb0f8571b250c25c31e6c7b2d0a9a75730", "filename": "src/test/ui/issue-17033.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17033.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17033.rs"}, {"sha": "d6884f1888189eeab14762c00f183a8ed62d3d91", "filename": "src/test/ui/issue-17033.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17033.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17033.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17033.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-17033.rs:12:10\n+   |\n+LL |     (*p)(()) //~  ERROR mismatched types\n+   |          ^^\n+   |          |\n+   |          expected &mut (), found ()\n+   |          help: consider mutably borrowing here: `&mut ()`\n+   |\n+   = note: expected type `&mut ()`\n+              found type `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "1c3e6890c8e2e17ea112daa8dff4ea0f0be348fc", "filename": "src/test/ui/issue-17252.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17252.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17252.rs"}, {"sha": "8f97a841666ecb2005936c3a0f66d5a841ab7489", "filename": "src/test/ui/issue-17252.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17252.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,16 @@\n+error[E0391]: cycle detected when processing `FOO`\n+  --> $DIR/issue-17252.rs:11:20\n+   |\n+LL | const FOO: usize = FOO; //~ ERROR E0391\n+   |                    ^^^\n+   |\n+   = note: ...which again requires processing `FOO`, completing the cycle\n+note: cycle used when processing `main::{{constant}}`\n+  --> $DIR/issue-17252.rs:14:18\n+   |\n+LL |     let _x: [u8; FOO]; // caused stack overflow prior to fix\n+   |                  ^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0391`."}, {"sha": "1208321b52943c7c2a554358919b7fbb9d95337d", "filename": "src/test/ui/issue-17337.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17337.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17337.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17337.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17337.rs"}, {"sha": "03215473745376ac7acc8a4b5a69eed7050dd232", "filename": "src/test/ui/issue-17337.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17337.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17337.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17337.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error: use of deprecated item 'Foo::foo': text\n+  --> $DIR/issue-17337.rs:26:6\n+   |\n+LL |     .foo(); //~ ERROR use of deprecated item\n+   |      ^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-17337.rs:12:9\n+   |\n+LL | #![deny(deprecated)]\n+   |         ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "f6e6a8a0852dd290b5a847c88c03e1114bea037c", "filename": "src/test/ui/issue-17373.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17373.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17373.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17373.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17373.rs"}, {"sha": "38e93e65bdc176bfb9026ee5bddb4d89c6943dc1", "filename": "src/test/ui/issue-17373.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17373.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17373.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17373.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0614]: type `!` cannot be dereferenced\n+  --> $DIR/issue-17373.rs:12:5\n+   |\n+LL |     *return //~ ERROR type `!` cannot be dereferenced\n+   |     ^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0614`."}, {"sha": "c3387e58fcf64582cb87cf9c8286841489fe1196", "filename": "src/test/ui/issue-17385.nll.stderr", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17385.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17385.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17385.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,77 @@\n+error[E0382]: use of moved value: `foo`\n+  --> $DIR/issue-17385.rs:28:5\n+   |\n+LL |       drop(foo);\n+   |            --- value moved here\n+LL | /     match foo { //~ ERROR use of moved value\n+LL | |         X(1) => (),\n+LL | |         _ => unreachable!()\n+LL | |     }\n+   | |_____^ value used here after move\n+   |\n+   = note: move occurs because `foo` has type `X`, which does not implement the `Copy` trait\n+\n+error[E0382]: borrow of moved value: `foo`\n+  --> $DIR/issue-17385.rs:28:5\n+   |\n+LL |       drop(foo);\n+   |            --- value moved here\n+LL | /     match foo { //~ ERROR use of moved value\n+LL | |         X(1) => (),\n+LL | |         _ => unreachable!()\n+LL | |     }\n+   | |_____^ value borrowed here after move\n+   |\n+   = note: move occurs because `foo` has type `X`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `foo.0`\n+  --> $DIR/issue-17385.rs:29:11\n+   |\n+LL |     drop(foo);\n+   |          --- value moved here\n+LL |     match foo { //~ ERROR use of moved value\n+LL |         X(1) => (),\n+   |           ^ value used here after move\n+   |\n+   = note: move occurs because `foo` has type `X`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `e`\n+  --> $DIR/issue-17385.rs:35:5\n+   |\n+LL |       drop(e);\n+   |            - value moved here\n+LL | /     match e { //~ ERROR use of moved value\n+LL | |         Enum::Variant1 => unreachable!(),\n+LL | |         Enum::Variant2 => ()\n+LL | |     }\n+   | |_____^ value used here after move\n+   |\n+   = note: move occurs because `e` has type `Enum`, which does not implement the `Copy` trait\n+\n+error[E0382]: borrow of moved value: `e`\n+  --> $DIR/issue-17385.rs:35:5\n+   |\n+LL |       drop(e);\n+   |            - value moved here\n+LL | /     match e { //~ ERROR use of moved value\n+LL | |         Enum::Variant1 => unreachable!(),\n+LL | |         Enum::Variant2 => ()\n+LL | |     }\n+   | |_____^ value borrowed here after move\n+   |\n+   = note: move occurs because `e` has type `Enum`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `e`\n+  --> $DIR/issue-17385.rs:36:9\n+   |\n+LL |     drop(e);\n+   |          - value moved here\n+LL |     match e { //~ ERROR use of moved value\n+LL |         Enum::Variant1 => unreachable!(),\n+   |         ^^^^^^^^^^^^^^ value used here after move\n+   |\n+   = note: move occurs because `e` has type `Enum`, which does not implement the `Copy` trait\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "eb293c79247053d384422a59df52f8a36b176a2e", "filename": "src/test/ui/issue-17385.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17385.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17385.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17385.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17385.rs"}, {"sha": "01d6d1a2720a30e5249f603181e008e7e6133f2b", "filename": "src/test/ui/issue-17385.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17385.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17385.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17385.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,23 @@\n+error[E0382]: use of moved value: `foo`\n+  --> $DIR/issue-17385.rs:28:11\n+   |\n+LL |     drop(foo);\n+   |          --- value moved here\n+LL |     match foo { //~ ERROR use of moved value\n+   |           ^^^ value used here after move\n+   |\n+   = note: move occurs because `foo` has type `X`, which does not implement the `Copy` trait\n+\n+error[E0382]: use of moved value: `e`\n+  --> $DIR/issue-17385.rs:35:11\n+   |\n+LL |     drop(e);\n+   |          - value moved here\n+LL |     match e { //~ ERROR use of moved value\n+   |           ^ value used here after move\n+   |\n+   = note: move occurs because `e` has type `Enum`, which does not implement the `Copy` trait\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "5a6bd5ed588a676d6ecfcecc944f9c10970c209c", "filename": "src/test/ui/issue-17405.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17405.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17405.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17405.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17405.rs"}, {"sha": "bcccfd301b7866a745acb7585d0fc56291cebeb1", "filename": "src/test/ui/issue-17405.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17405.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17405.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17405.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0574]: expected struct, variant or union type, found enum `Foo`\n+  --> $DIR/issue-17405.rs:17:9\n+   |\n+LL |         Foo { i } => () //~ ERROR expected struct, variant or union type, found enum `Foo`\n+   |         ^^^ not a struct, variant or union type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0574`."}, {"sha": "260cc366fae08a1cca39a36b4654568e904479c8", "filename": "src/test/ui/issue-17431-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-1.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-1.rs"}, {"sha": "fb27693c85efd66498ac4aee36f5b7ee9f84ba94", "filename": "src/test/ui/issue-17431-1.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-1.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/issue-17431-1.rs:11:1\n+   |\n+LL | struct Foo { foo: Option<Option<Foo>> }\n+   | ^^^^^^^^^^   ------------------------ recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "f39fb0e31c6ee570089ac16b8dc1674e7f2f7e60", "filename": "src/test/ui/issue-17431-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-2.rs"}, {"sha": "7e87babe93e85b3dbe99b7262ad5fa810e023211", "filename": "src/test/ui/issue-17431-2.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,23 @@\n+error[E0072]: recursive type `Baz` has infinite size\n+  --> $DIR/issue-17431-2.rs:11:1\n+   |\n+LL | struct Baz { q: Option<Foo> }\n+   | ^^^^^^^^^^   -------------- recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Baz` representable\n+\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/issue-17431-2.rs:14:1\n+   |\n+LL | struct Foo { q: Option<Baz> }\n+   | ^^^^^^^^^^   -------------- recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "9ba085591f08bb3f8dd877d1f02e6294e19800d5", "filename": "src/test/ui/issue-17431-3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-3.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-3.rs"}, {"sha": "c12a4c11c2cfb84ce63c48b77027a3d6085c4eb1", "filename": "src/test/ui/issue-17431-3.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-3.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/issue-17431-3.rs:13:1\n+   |\n+LL | struct Foo { foo: Mutex<Option<Foo>> }\n+   | ^^^^^^^^^^   ----------------------- recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "665c3cf8fe6391cbe2d92f789b1c305bcf7193ae", "filename": "src/test/ui/issue-17431-4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-4.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-4.rs"}, {"sha": "acfd688b62206dc410df54b912d2742732e48309", "filename": "src/test/ui/issue-17431-4.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-4.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/issue-17431-4.rs:13:1\n+   |\n+LL | struct Foo<T> { foo: Option<Option<Foo<T>>>, marker: marker::PhantomData<T> }\n+   | ^^^^^^^^^^^^^   --------------------------- recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "85ed4d5d634dbf09bbe419c7f534d8f7800b0952", "filename": "src/test/ui/issue-17431-5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-5.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-5.rs"}, {"sha": "ddfea58a857ac27224285c085c7b0854f280f098", "filename": "src/test/ui/issue-17431-5.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-5.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0072]: recursive type `Bar` has infinite size\n+  --> $DIR/issue-17431-5.rs:15:1\n+   |\n+LL | struct Bar<T> { x: Bar<Foo> , marker: marker::PhantomData<T> }\n+   | ^^^^^^^^^^^^^   ----------- recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Bar` representable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "4c1e82c3d6ae48b533e25100ef24e681fd66f3bd", "filename": "src/test/ui/issue-17431-6.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-6.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-6.rs"}, {"sha": "ab2cc439f17a91d4ab86c710512d73f6939742a7", "filename": "src/test/ui/issue-17431-6.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-6.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/issue-17431-6.rs:13:1\n+   |\n+LL | enum Foo { X(Mutex<Option<Foo>>) }\n+   | ^^^^^^^^     ------------------ recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "71b85da29fc717cd4f588f73a462624763a69515", "filename": "src/test/ui/issue-17431-7.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-7.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17431-7.rs"}, {"sha": "7f9118860b9b1ae47dd98b8008ff99907b54a771", "filename": "src/test/ui/issue-17431-7.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17431-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17431-7.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/issue-17431-7.rs:11:1\n+   |\n+LL | enum Foo { Voo(Option<Option<Foo>>) }\n+   | ^^^^^^^^       ------------------- recursive without indirection\n+   | |\n+   | recursive type has infinite size\n+   |\n+   = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Foo` representable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}, {"sha": "dafcff238387e2ca8969236119be5faa793f7749", "filename": "src/test/ui/issue-17444.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17444.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17444.rs"}, {"sha": "3f87d806e7e87b91b206ecff5aa8dce5928b34bd", "filename": "src/test/ui/issue-17444.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17444.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17444.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17444.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0606]: casting `Test` as `*const isize` is invalid\n+  --> $DIR/issue-17444.rs:16:14\n+   |\n+LL |     let _x = Test::Foo as *const isize;\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0606`."}, {"sha": "f5b7a0c13b7287fb26616b3df28c39b89fe7ed13", "filename": "src/test/ui/issue-17458.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17458.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17458.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17458.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17458.rs"}, {"sha": "7a43813fa6d38783004bf102cd8d2e20b29dfc37", "filename": "src/test/ui/issue-17458.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17458.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17458.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17458.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0018]: raw pointers cannot be cast to integers in statics\n+  --> $DIR/issue-17458.rs:11:19\n+   |\n+LL | static X: usize = 0 as *const usize as usize;\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0018`."}, {"sha": "50a4b3f7f3e82b9c1804537c4e611d21bac901e3", "filename": "src/test/ui/issue-17545.nll.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17545.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17545.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17545.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,17 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/issue-17545.rs:17:10\n+   |\n+LL |         &id(()), //~ ERROR borrowed value does not live long enough\n+   |          ^^^^^^ temporary value does not live long enough\n+LL |     ));\n+   |       - temporary value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 15:12...\n+  --> $DIR/issue-17545.rs:15:12\n+   |\n+LL | pub fn foo<'a, F: Fn(&'a ())>(bar: F) {\n+   |            ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "9264305e6ea5c55eb13263148d00cdcd520ed32b", "filename": "src/test/ui/issue-17545.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17545.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17545.rs"}, {"sha": "ce698665583355e885827d91f8ab481ac09c3f10", "filename": "src/test/ui/issue-17545.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17545.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17545.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17545.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/issue-17545.rs:17:10\n+   |\n+LL |         &id(()), //~ ERROR borrowed value does not live long enough\n+   |          ^^^^^^ temporary value does not live long enough\n+LL |     ));\n+   |       - temporary value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 15:12...\n+  --> $DIR/issue-17545.rs:15:12\n+   |\n+LL | pub fn foo<'a, F: Fn(&'a ())>(bar: F) {\n+   |            ^^\n+   = note: consider using a `let` binding to increase its lifetime\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "fe125b973d9bd72de187129c9716ad3610972e38", "filename": "src/test/ui/issue-17546.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17546.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17546.rs"}, {"sha": "39f7d5fcc04bceb9b23c7b1cddaa192d8c8d217a", "filename": "src/test/ui/issue-17546.stderr", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17546.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,55 @@\n+error[E0573]: expected type, found variant `NoResult`\n+  --> $DIR/issue-17546.rs:22:17\n+   |\n+LL |     fn new() -> NoResult<MyEnum, String> {\n+   |                 --------^^^^^^^^^^^^^^^^\n+   |                 |\n+   |                 did you mean `Result`?\n+   |                 help: you can try using the variant's enum: `foo::MyEnum`\n+\n+error[E0573]: expected type, found variant `Result`\n+  --> $DIR/issue-17546.rs:32:17\n+   |\n+LL |     fn new() -> Result<foo::MyEnum, String> {\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n+help: possible better candidates are found in other modules, you can import them into scope\n+   |\n+LL |     use std::fmt::Result;\n+   |\n+LL |     use std::io::Result;\n+   |\n+LL |     use std::prelude::v1::Result;\n+   |\n+LL |     use std::result::Result;\n+   |\n+and 1 other candidates\n+\n+error[E0573]: expected type, found variant `Result`\n+  --> $DIR/issue-17546.rs:38:13\n+   |\n+LL | fn new() -> Result<foo::MyEnum, String> {\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n+help: possible better candidates are found in other modules, you can import them into scope\n+   |\n+LL | use std::fmt::Result;\n+   |\n+LL | use std::io::Result;\n+   |\n+LL | use std::prelude::v1::Result;\n+   |\n+LL | use std::result::Result;\n+   |\n+and 1 other candidates\n+\n+error[E0573]: expected type, found variant `NoResult`\n+  --> $DIR/issue-17546.rs:43:15\n+   |\n+LL | fn newer() -> NoResult<foo::MyEnum, String> {\n+   |               --------^^^^^^^^^^^^^^^^^^^^^\n+   |               |\n+   |               did you mean `Result`?\n+   |               help: you can try using the variant's enum: `foo::MyEnum`\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0573`."}, {"sha": "b55863f0dda7af14a55354c721e5c97046a42531", "filename": "src/test/ui/issue-17551.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17551.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17551.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17551.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17551.rs"}, {"sha": "0cdee0337d8488aaf15b5dc6c4fb47dbd2edddae", "filename": "src/test/ui/issue-17551.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17551.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17551.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17551.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-17551.rs:16:15\n+   |\n+LL |     let foo = B(marker::PhantomData); //~ ERROR type annotations needed\n+   |         ---   ^ cannot infer type for `T`\n+   |         |\n+   |         consider giving `foo` a type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "cbd0da4b53ce341d6da0a5c6fff400c36587affc", "filename": "src/test/ui/issue-17651.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17651.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17651.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17651.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17651.rs"}, {"sha": "d21b306031506ab2d8941c5629af484c7df6f487", "filename": "src/test/ui/issue-17651.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17651.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17651.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17651.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0277]: the size for values of type `[{integer}]` cannot be known at compilation time\n+  --> $DIR/issue-17651.rs:15:9\n+   |\n+LL |     (|| Box::new(*(&[0][..])))();\n+   |         ^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `[{integer}]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n+   = note: required by `<std::boxed::Box<T>>::new`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "17ec77d77eea2c1f0b0a04f6ee7334418201580d", "filename": "src/test/ui/issue-17718-const-bad-values.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-bad-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-bad-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-const-bad-values.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-const-bad-values.rs"}, {"sha": "0ab7f965b63ebd6346ff67a0580bc9baad8c240c", "filename": "src/test/ui/issue-17718-const-bad-values.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-bad-values.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-bad-values.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-const-bad-values.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,28 @@\n+error[E0017]: references in constants may only refer to immutable values\n+  --> $DIR/issue-17718-const-bad-values.rs:11:34\n+   |\n+LL | const C1: &'static mut [usize] = &mut [];\n+   |                                  ^^^^^^^ constants require immutable values\n+\n+error[E0013]: constants cannot refer to statics, use a constant instead\n+  --> $DIR/issue-17718-const-bad-values.rs:15:41\n+   |\n+LL | const C2: &'static mut usize = unsafe { &mut S };\n+   |                                         ^^^^^^\n+\n+error[E0017]: references in constants may only refer to immutable values\n+  --> $DIR/issue-17718-const-bad-values.rs:15:41\n+   |\n+LL | const C2: &'static mut usize = unsafe { &mut S };\n+   |                                         ^^^^^^ constants require immutable values\n+\n+error[E0017]: references in constants may only refer to immutable values\n+  --> $DIR/issue-17718-const-bad-values.rs:15:32\n+   |\n+LL | const C2: &'static mut usize = unsafe { &mut S };\n+   |                                ^^^^^^^^^^^^^^^^^ constants require immutable values\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors occurred: E0013, E0017.\n+For more information about an error, try `rustc --explain E0013`."}, {"sha": "07123c6949255a84c972cec9937a643c9baa6585", "filename": "src/test/ui/issue-17718-const-borrow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-const-borrow.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-const-borrow.rs"}, {"sha": "3b0217060f78249efa56e2430e45f02a4b497103", "filename": "src/test/ui/issue-17718-const-borrow.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-const-borrow.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,21 @@\n+error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n+  --> $DIR/issue-17718-const-borrow.rs:14:39\n+   |\n+LL | const B: &'static UnsafeCell<usize> = &A;\n+   |                                       ^^\n+\n+error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n+  --> $DIR/issue-17718-const-borrow.rs:19:39\n+   |\n+LL | const E: &'static UnsafeCell<usize> = &D.a;\n+   |                                       ^^^^\n+\n+error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n+  --> $DIR/issue-17718-const-borrow.rs:21:23\n+   |\n+LL | const F: &'static C = &D;\n+   |                       ^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0492`."}, {"sha": "4857c2fb446b519e9097ea3154705d5f571c4397", "filename": "src/test/ui/issue-17718-const-naming.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-naming.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-naming.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-const-naming.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-const-naming.rs"}, {"sha": "9636db31390d9691d45d0bfb9540bbf72d124474", "filename": "src/test/ui/issue-17718-const-naming.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-naming.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-const-naming.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-const-naming.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,28 @@\n+error: constant item is never used: `foo`\n+  --> $DIR/issue-17718-const-naming.rs:14:1\n+   |\n+LL | const foo: isize = 3;\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-17718-const-naming.rs:12:8\n+   |\n+LL | #[deny(warnings)]\n+   |        ^^^^^^^^\n+   = note: #[deny(dead_code)] implied by #[deny(warnings)]\n+\n+error: constant `foo` should have an upper case name such as `FOO`\n+  --> $DIR/issue-17718-const-naming.rs:14:1\n+   |\n+LL | const foo: isize = 3;\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-17718-const-naming.rs:12:8\n+   |\n+LL | #[deny(warnings)]\n+   |        ^^^^^^^^\n+   = note: #[deny(non_upper_case_globals)] implied by #[deny(warnings)]\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "9b7ed463499ded297d51d51eafe702561a5321d5", "filename": "src/test/ui/issue-17718-constants-not-static.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-constants-not-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-constants-not-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-constants-not-static.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-constants-not-static.rs"}, {"sha": "61d8399aba9b1a3706a36f04c51422f7a91a8c1a", "filename": "src/test/ui/issue-17718-constants-not-static.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-constants-not-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-constants-not-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-constants-not-static.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/issue-17718-constants-not-static.rs:15:31\n+   |\n+LL | fn foo() -> &'static usize { &id(FOO) }\n+   |                               ^^^^^^^ - temporary value only lives until here\n+   |                               |\n+   |                               temporary value does not live long enough\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "b9f5e98b6faa97d112d935888a800e068d25f54e", "filename": "src/test/ui/issue-17718-patterns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-patterns.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-patterns.rs"}, {"sha": "13cab9a08b1de5ca9df76d33d86001fc710dd4e5", "filename": "src/test/ui/issue-17718-patterns.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-patterns.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,21 @@\n+error[E0530]: match bindings cannot shadow statics\n+  --> $DIR/issue-17718-patterns.rs:17:9\n+   |\n+LL | static A1: usize = 1;\n+   | --------------------- a static `A1` is defined here\n+...\n+LL |         A1 => {} //~ ERROR: match bindings cannot shadow statics\n+   |         ^^ cannot be named the same as a static\n+\n+error[E0530]: match bindings cannot shadow statics\n+  --> $DIR/issue-17718-patterns.rs:18:9\n+   |\n+LL | static mut A2: usize = 1;\n+   | ------------------------- a static `A2` is defined here\n+...\n+LL |         A2 => {} //~ ERROR: match bindings cannot shadow statics\n+   |         ^^ cannot be named the same as a static\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0530`."}, {"sha": "586cfebcd161c06af2f3fba81f2dcab51c2dd9b2", "filename": "src/test/ui/issue-17718-references.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-references.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-references.rs"}, {"sha": "6e89a83b308720e4e95d40b25be952fce8f8ccb1", "filename": "src/test/ui/issue-17718-references.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-references.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,21 @@\n+error[E0013]: constants cannot refer to statics, use a constant instead\n+  --> $DIR/issue-17718-references.rs:19:28\n+   |\n+LL | const T2: &'static usize = &S; //~ ERROR: constants cannot refer to statics\n+   |                            ^^\n+\n+error[E0013]: constants cannot refer to statics, use a constant instead\n+  --> $DIR/issue-17718-references.rs:24:19\n+   |\n+LL | const T6: usize = S; //~ ERROR: constants cannot refer to statics\n+   |                   ^\n+\n+error[E0013]: constants cannot refer to statics, use a constant instead\n+  --> $DIR/issue-17718-references.rs:29:33\n+   |\n+LL | const T10: Struct = Struct { a: S };\n+   |                                 ^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0013`."}, {"sha": "a5a7117956f4a5d6c9a4f797dc5a9b828061e0ff", "filename": "src/test/ui/issue-17718-static-move.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-static-move.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-static-move.rs"}, {"sha": "a6384cfce8fd4386cecb88cdd691e603b406ad0c", "filename": "src/test/ui/issue-17718-static-move.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-static-move.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0507]: cannot move out of static item\n+  --> $DIR/issue-17718-static-move.rs:16:14\n+   |\n+LL |     let _a = FOO; //~ ERROR: cannot move out of static item\n+   |              ^^^\n+   |              |\n+   |              cannot move out of static item\n+   |              help: consider using a reference instead: `&FOO`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}, {"sha": "c5349d4e82b4b127b71943bdcbf03676edf8049c", "filename": "src/test/ui/issue-17718-static-sync.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-static-sync.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17718-static-sync.rs"}, {"sha": "d6816826a00b32a927c59a1012b1cc3bb6091612", "filename": "src/test/ui/issue-17718-static-sync.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17718-static-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17718-static-sync.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,12 @@\n+error[E0277]: `Foo` cannot be shared between threads safely\n+  --> $DIR/issue-17718-static-sync.rs:19:1\n+   |\n+LL | static BAR: Foo = Foo;\n+   | ^^^^^^^^^^^^^^^^^^^^^^ `Foo` cannot be shared between threads safely\n+   |\n+   = help: the trait `std::marker::Sync` is not implemented for `Foo`\n+   = note: shared static variables must have a type that implements `Sync`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "b9931e45bd2381bae7057f90d863e0608080d49c", "filename": "src/test/ui/issue-17728.nll.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17728.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17728.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17728.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,25 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-17728.rs:23:49\n+   |\n+LL |         let maybe_room = room.direction_to_room.get(&direction);\n+   |                                                 ^^^\n+\n+error[E0308]: match arms have incompatible types\n+  --> $DIR/issue-17728.rs:110:5\n+   |\n+LL | /     match to_parse { //~ ERROR match arms have incompatible types\n+LL | |         \"w\" | \"west\" => RoomDirection::West,\n+LL | |         \"e\" | \"east\" => RoomDirection::East,\n+LL | |         \"n\" | \"north\" => RoomDirection::North,\n+...  |\n+LL | |         _ => None\n+   | |              ---- match arm with an incompatible type\n+LL | |     }\n+   | |_____^ expected enum `RoomDirection`, found enum `std::option::Option`\n+   |\n+   = note: expected type `RoomDirection`\n+              found type `std::option::Option<_>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "8516a8ea52e42ddbefb5860043aad9f85781f488", "filename": "src/test/ui/issue-17728.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17728.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17728.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17728.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17728.rs"}, {"sha": "e46c48c4c39b5c5548df1b1545200c5c60c64bd7", "filename": "src/test/ui/issue-17728.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17728.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17728.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17728.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,31 @@\n+error[E0623]: lifetime mismatch\n+  --> $DIR/issue-17728.rs:25:28\n+   |\n+LL |     fn attemptTraverse(&self, room: &Room, directionStr: &str) -> Result<&Room, &str> {\n+   |                                     -----                         -------------------\n+   |                                     |\n+   |                                     this parameter and the return type are declared with different lifetimes...\n+...\n+LL |             Some(entry) => Ok(entry),\n+   |                            ^^^^^^^^^ ...but data from `room` is returned here\n+\n+error[E0308]: match arms have incompatible types\n+  --> $DIR/issue-17728.rs:110:5\n+   |\n+LL | /     match to_parse { //~ ERROR match arms have incompatible types\n+LL | |         \"w\" | \"west\" => RoomDirection::West,\n+LL | |         \"e\" | \"east\" => RoomDirection::East,\n+LL | |         \"n\" | \"north\" => RoomDirection::North,\n+...  |\n+LL | |         _ => None\n+   | |              ---- match arm with an incompatible type\n+LL | |     }\n+   | |_____^ expected enum `RoomDirection`, found enum `std::option::Option`\n+   |\n+   = note: expected type `RoomDirection`\n+              found type `std::option::Option<_>`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0308, E0623.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "1d5ef4360dc1ebc9134451f2cdd0b70eab6c7f66", "filename": "src/test/ui/issue-17740.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17740.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17740.rs"}, {"sha": "e4f5485953c68a54d222bd2ccd04161be1cb093c", "filename": "src/test/ui/issue-17740.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17740.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17740.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17740.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,53 @@\n+error[E0308]: mismatched method receiver\n+  --> $DIR/issue-17740.rs:16:18\n+   |\n+LL |     fn bar(self: &mut Foo) {\n+   |                  ^^^^^^^^ lifetime mismatch\n+   |\n+   = note: expected type `Foo<'a>`\n+              found type `Foo<'_>`\n+note: the anonymous lifetime #2 defined on the method body at 16:5...\n+  --> $DIR/issue-17740.rs:16:5\n+   |\n+LL | /     fn bar(self: &mut Foo) {\n+LL | |     //~^ mismatched method receiver\n+LL | |     //~| expected type `Foo<'a>`\n+LL | |     //~| found type `Foo<'_>`\n+...  |\n+LL | |     //~| lifetime mismatch\n+LL | |     }\n+   | |_____^\n+note: ...does not necessarily outlive the lifetime 'a as defined on the impl at 15:7\n+  --> $DIR/issue-17740.rs:15:7\n+   |\n+LL | impl <'a> Foo<'a>{\n+   |       ^^\n+\n+error[E0308]: mismatched method receiver\n+  --> $DIR/issue-17740.rs:16:18\n+   |\n+LL |     fn bar(self: &mut Foo) {\n+   |                  ^^^^^^^^ lifetime mismatch\n+   |\n+   = note: expected type `Foo<'a>`\n+              found type `Foo<'_>`\n+note: the lifetime 'a as defined on the impl at 15:7...\n+  --> $DIR/issue-17740.rs:15:7\n+   |\n+LL | impl <'a> Foo<'a>{\n+   |       ^^\n+note: ...does not necessarily outlive the anonymous lifetime #2 defined on the method body at 16:5\n+  --> $DIR/issue-17740.rs:16:5\n+   |\n+LL | /     fn bar(self: &mut Foo) {\n+LL | |     //~^ mismatched method receiver\n+LL | |     //~| expected type `Foo<'a>`\n+LL | |     //~| found type `Foo<'_>`\n+...  |\n+LL | |     //~| lifetime mismatch\n+LL | |     }\n+   | |_____^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "124fc6f0b3998cc51b3e7eb43d8e0b4f03a2f530", "filename": "src/test/ui/issue-17758.nll.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17758.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17758.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17758.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,22 @@\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-17758.rs:17:9\n+   |\n+LL |         self.foo();\n+   |         ^^^^\n+\n+warning: not reporting region error due to nll\n+  --> $DIR/issue-17758.rs:17:14\n+   |\n+LL |         self.foo();\n+   |              ^^^\n+\n+error: unsatisfied lifetime constraints\n+  --> $DIR/issue-17758.rs:17:9\n+   |\n+LL |     fn bar(&self) {\n+   |            - let's call the lifetime of this reference `'1`\n+LL |         self.foo();\n+   |         ^^^^^^^^^^ argument requires that `'1` must outlive `'a`\n+\n+error: aborting due to previous error\n+"}, {"sha": "a47f5c16a469159b7392adc6e5868c1f820c8d48", "filename": "src/test/ui/issue-17758.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17758.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17758.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17758.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17758.rs"}, {"sha": "3d78b2e2d7f9df0bd302b79234378f65351a4cf2", "filename": "src/test/ui/issue-17758.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17758.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17758.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17758.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,31 @@\n+error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n+  --> $DIR/issue-17758.rs:17:14\n+   |\n+LL |         self.foo();\n+   |              ^^^\n+   |\n+note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 16:5...\n+  --> $DIR/issue-17758.rs:16:5\n+   |\n+LL | /     fn bar(&self) {\n+LL | |         self.foo();\n+LL | |         //~^ ERROR cannot infer\n+LL | |     }\n+   | |_____^\n+note: ...so that reference does not outlive borrowed content\n+  --> $DIR/issue-17758.rs:17:9\n+   |\n+LL |         self.foo();\n+   |         ^^^^\n+note: but, the lifetime must be valid for the lifetime 'a as defined on the trait at 14:11...\n+  --> $DIR/issue-17758.rs:14:11\n+   |\n+LL | trait Foo<'a> {\n+   |           ^^\n+   = note: ...so that the types are compatible:\n+           expected &'a Self\n+              found &Self\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0495`."}, {"sha": "f7cae91aa93a43e334e5812f19499aff4aae6897", "filename": "src/test/ui/issue-17800.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17800.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17800.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17800.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17800.rs"}, {"sha": "2cc562fbd7a1ab409ad60d262dbf19c20ffeeedd", "filename": "src/test/ui/issue-17800.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17800.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17800.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17800.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,18 @@\n+error[E0026]: variant `MyOption::MySome` does not have a field named `x`\n+  --> $DIR/issue-17800.rs:18:28\n+   |\n+LL |         MyOption::MySome { x: 42 } => (),\n+   |                            ^^^^^ variant `MyOption::MySome` does not have this field\n+\n+error[E0027]: pattern does not mention field `0`\n+  --> $DIR/issue-17800.rs:18:9\n+   |\n+LL |         MyOption::MySome { x: 42 } => (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `0`\n+   |\n+   = note: trying to match a tuple variant with a struct variant pattern\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0026, E0027.\n+For more information about an error, try `rustc --explain E0026`."}, {"sha": "a15ccb71aa733bcf5e64da17fb9012ab2fc45129", "filename": "src/test/ui/issue-17904-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17904-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17904-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17904-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17904-2.rs"}, {"sha": "00013d4d52becb8b536783b88e498d1dd6dedb84", "filename": "src/test/ui/issue-17904-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17904-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17904-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17904-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,11 @@\n+error[E0392]: parameter `T` is never used\n+  --> $DIR/issue-17904-2.rs:14:12\n+   |\n+LL | struct Foo<T> where T: Copy; //~ ERROR parameter `T` is never used\n+   |            ^ unused type parameter\n+   |\n+   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0392`."}, {"sha": "f11d482ea16db55a42a9ad695a80a1c01f5c192b", "filename": "src/test/ui/issue-17905.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17905.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17905.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17905.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17905.rs"}, {"sha": "1a7aba1748015062f54dc85c6b7ad82140768dcf", "filename": "src/test/ui/issue-17905.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17905.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17905.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17905.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/issue-17905.rs:15:5\n+   |\n+LL |     &str, //~ ERROR missing lifetime specifier\n+   |     ^ expected lifetime parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0106`."}, {"sha": "80e5f2b6e2157917e943bc88a1397a720c917abd", "filename": "src/test/ui/issue-17913.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17913.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17913.rs"}, {"sha": "ca8a28c0fd78ff65093184c31185fc0a8500b6d9", "filename": "src/test/ui/issue-17913.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17913.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17913.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17913.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,4 @@\n+error: the type `[&usize; 17293822569102704640]` is too big for the current architecture\n+\n+error: aborting due to previous error\n+"}, {"sha": "049a0665c54589049c931376ba0bdddc21bfc52d", "filename": "src/test/ui/issue-17933.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17933.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17933.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17933.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17933.rs"}, {"sha": "ec0f4785c8fa87a1bbb8cb3bac3990f2b91419b2", "filename": "src/test/ui/issue-17933.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17933.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17933.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17933.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0532]: expected unit struct/variant or constant, found static `self::X`\n+  --> $DIR/issue-17933.rs:15:9\n+   |\n+LL |         self::X => { },\n+   |         ^^^^^^^ not a unit struct/variant or constant\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0532`."}, {"sha": "f731e8eeae67f191ec8475ffc6cbb7d47cf97b48", "filename": "src/test/ui/issue-17954.ast.nll.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17954.ast.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error[E0597]: `FOO` does not live long enough\n+  --> $DIR/issue-17954.rs:20:13\n+   |\n+LL |     let a = &FOO;\n+   |             ^^^^ borrowed value does not live long enough\n+...\n+LL | }\n+   | - borrowed value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "677d2cbfffc4776fbd9c35f48ad7d4b834b71e01", "filename": "src/test/ui/issue-17954.ast.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.ast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.ast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17954.ast.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/issue-17954.rs:20:14\n+   |\n+LL |     let a = &FOO;\n+   |              ^^^ temporary value does not live long enough\n+...\n+LL | }\n+   | - temporary value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "f731e8eeae67f191ec8475ffc6cbb7d47cf97b48", "filename": "src/test/ui/issue-17954.mir.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17954.mir.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,14 @@\n+error[E0597]: `FOO` does not live long enough\n+  --> $DIR/issue-17954.rs:20:13\n+   |\n+LL |     let a = &FOO;\n+   |             ^^^^ borrowed value does not live long enough\n+...\n+LL | }\n+   | - borrowed value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "4211057610bc7ebf60e5ae3f805b330209eda5c2", "filename": "src/test/ui/issue-17954.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17954.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17954.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17954.rs"}, {"sha": "37c8173c4f66b8b7d38162ad5bf8adc6274d22d7", "filename": "src/test/ui/issue-17959.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17959.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17959.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17959.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17959.rs"}, {"sha": "626b670ae35553501e72ba0bedc18439ad811562", "filename": "src/test/ui/issue-17959.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17959.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17959.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17959.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,23 @@\n+error[E0367]: The requirement `T: std::marker::Sized` is added only by the Drop impl.\n+  --> $DIR/issue-17959.rs:21:1\n+   |\n+LL | / impl<T> Drop for G<T> {\n+LL | | //~^ ERROR: The requirement `T: std::marker::Sized` is added only by the Drop impl. [E0367]\n+LL | |     fn drop(&mut self) {\n+LL | |         if !self._ptr.is_null() {\n+LL | |         }\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+note: The same requirement must be part of the struct/enum definition\n+  --> $DIR/issue-17959.rs:17:1\n+   |\n+LL | / struct G<T: ?Sized> {\n+LL | |     _ptr: *const T\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0367`."}, {"sha": "25141b9b8255788e9e1688f31a5eedb3dc075c02", "filename": "src/test/ui/issue-17994.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17994.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17994.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17994.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17994.rs"}, {"sha": "77bcc4695389f6171605b1480ca76e5dcb6a8c17", "filename": "src/test/ui/issue-17994.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17994.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17994.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17994.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0091]: type parameter `T` is unused\n+  --> $DIR/issue-17994.rs:12:10\n+   |\n+LL | type Huh<T> where T: Tr = isize; //~  ERROR type parameter `T` is unused\n+   |          ^ unused type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0091`."}, {"sha": "88945f80eae91a701a612fd9d95d077d7c4554db", "filename": "src/test/ui/issue-17999.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17999.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17999.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17999.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-17999.rs"}, {"sha": "1a24015da541a44a215afaac40c1e7dc67824a70", "filename": "src/test/ui/issue-17999.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17999.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-17999.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-17999.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,20 @@\n+error: unused variable: `x`\n+  --> $DIR/issue-17999.rs:15:13\n+   |\n+LL |         let x = (); //~ ERROR: unused variable: `x`\n+   |             ^ help: consider using `_x` instead\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-17999.rs:11:9\n+   |\n+LL | #![deny(unused_variables)]\n+   |         ^^^^^^^^^^^^^^^^\n+\n+error: unused variable: `a`\n+  --> $DIR/issue-17999.rs:17:13\n+   |\n+LL |             a => {} //~ ERROR: unused variable: `a`\n+   |             ^ help: consider using `_a` instead\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "4c815e689d46244727ed219d90d1d42d31bb6bb3", "filename": "src/test/ui/issue-18058.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18058.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-18058.rs"}, {"sha": "ded375a9332ef6f45543d244d344b52cb1fe8b28", "filename": "src/test/ui/issue-18058.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18058.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0412]: cannot find type `Undefined` in this scope\n+  --> $DIR/issue-18058.rs:11:6\n+   |\n+LL | impl Undefined {}\n+   |      ^^^^^^^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0412`."}, {"sha": "260038b7add59f561e463210359c9ef3c249270c", "filename": "src/test/ui/issue-18107.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18107.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18107.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18107.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-18107.rs"}, {"sha": "4a273ab6735eba4bacc4763c1195a516f7455845", "filename": "src/test/ui/issue-18107.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18107.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18107.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18107.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,13 @@\n+error[E0277]: the size for values of type `(dyn AbstractRenderer + 'static)` cannot be known at compilation time\n+  --> $DIR/issue-18107.rs:14:5\n+   |\n+LL |     AbstractRenderer\n+   |     ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `(dyn AbstractRenderer + 'static)`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n+   = note: the return type of a function must have a statically known size\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "6efe532b5fdf6b45f3b9b16cecb54a766eb08174", "filename": "src/test/ui/issue-18118-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18118-2.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-18118-2.rs"}, {"sha": "c0b306140c57a4b904cbf7ace7b34b681991623a", "filename": "src/test/ui/issue-18118-2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18118-2.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,9 @@\n+error[E0013]: constants cannot refer to statics, use a constant instead\n+  --> $DIR/issue-18118-2.rs:14:9\n+   |\n+LL |         &p\n+   |         ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0013`."}, {"sha": "7acab8426f62b23bf1251971c9524b3c3cbe5371", "filename": "src/test/ui/issue-18118.nll.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18118.nll.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,67 @@\n+error[E0658]: let bindings in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:15:17\n+   |\n+LL |         let p = 3;\n+   |                 ^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: statements in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:15:17\n+   |\n+LL |         let p = 3;\n+   |                 ^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: let bindings in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:18:9\n+   |\n+LL |         &p //~ ERROR `p` does not live long enough\n+   |         ^^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: let bindings in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:12:5\n+   |\n+LL | /     const z: &'static isize = {\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |         //~| ERROR statements in constants are unstable\n+LL | |         let p = 3;\n+...  |\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |     };\n+   | |______^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: statements in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:12:5\n+   |\n+LL | /     const z: &'static isize = {\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |         //~| ERROR statements in constants are unstable\n+LL | |         let p = 3;\n+...  |\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |     };\n+   | |______^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0597]: `p` does not live long enough\n+  --> $DIR/issue-18118.rs:18:9\n+   |\n+LL |         &p //~ ERROR `p` does not live long enough\n+   |         ^^ borrowed value does not live long enough\n+LL |         //~^ ERROR let bindings in constants are unstable\n+LL |     };\n+   |     - borrowed value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors occurred: E0597, E0658.\n+For more information about an error, try `rustc --explain E0597`."}, {"sha": "7194c159c1e98a79409b7c11ff291cc36f66c68d", "filename": "src/test/ui/issue-18118.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18118.rs?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "previous_filename": "src/test/compile-fail/issue-18118.rs"}, {"sha": "2d83b86e5f40bf9c608638bee12c80e02c75a203", "filename": "src/test/ui/issue-18118.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23327597e7a57dc8bddb3f7311e56750b0116114/src%2Ftest%2Fui%2Fissue-18118.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-18118.stderr?ref=23327597e7a57dc8bddb3f7311e56750b0116114", "patch": "@@ -0,0 +1,67 @@\n+error[E0658]: let bindings in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:15:17\n+   |\n+LL |         let p = 3;\n+   |                 ^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: statements in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:15:17\n+   |\n+LL |         let p = 3;\n+   |                 ^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: let bindings in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:18:9\n+   |\n+LL |         &p //~ ERROR `p` does not live long enough\n+   |         ^^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: let bindings in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:12:5\n+   |\n+LL | /     const z: &'static isize = {\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |         //~| ERROR statements in constants are unstable\n+LL | |         let p = 3;\n+...  |\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |     };\n+   | |______^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0658]: statements in constants are unstable (see issue #48821)\n+  --> $DIR/issue-18118.rs:12:5\n+   |\n+LL | /     const z: &'static isize = {\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |         //~| ERROR statements in constants are unstable\n+LL | |         let p = 3;\n+...  |\n+LL | |         //~^ ERROR let bindings in constants are unstable\n+LL | |     };\n+   | |______^\n+   |\n+   = help: add #![feature(const_let)] to the crate attributes to enable\n+\n+error[E0597]: `p` does not live long enough\n+  --> $DIR/issue-18118.rs:18:10\n+   |\n+LL |         &p //~ ERROR `p` does not live long enough\n+   |          ^ borrowed value does not live long enough\n+LL |         //~^ ERROR let bindings in constants are unstable\n+LL |     };\n+   |     - borrowed value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors occurred: E0597, E0658.\n+For more information about an error, try `rustc --explain E0597`."}]}