{"sha": "07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZmU5YTg5MGQyZTIwMWU2NGE4ZjM1ZmEzY2E3NDFkYmFjZjI3NGQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-13T13:09:46Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-13T13:09:46Z"}, "message": "Enable OPTION::ENABLE_TASKLISTS in pulldown_cmark", "tree": {"sha": "b18949a4f73dfcf1557c4bf8e202e9b38951a5c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b18949a4f73dfcf1557c4bf8e202e9b38951a5c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "html_url": "https://github.com/rust-lang/rust/commit/07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07fe9a890d2e201e64a8f35fa3ca741dbacf274d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f0c92fd8311bccc001ddaf9eb72662d35e9836", "url": "https://api.github.com/repos/rust-lang/rust/commits/77f0c92fd8311bccc001ddaf9eb72662d35e9836", "html_url": "https://github.com/rust-lang/rust/commit/77f0c92fd8311bccc001ddaf9eb72662d35e9836"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "320694a17ad308814f3bada19c4f229b1e106755", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07fe9a890d2e201e64a8f35fa3ca741dbacf274d/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07fe9a890d2e201e64a8f35fa3ca741dbacf274d/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=07fe9a890d2e201e64a8f35fa3ca741dbacf274d", "patch": "@@ -29,7 +29,8 @@ pub(crate) type DocumentationLink = String;\n /// Rewrite documentation links in markdown to point to an online host (e.g. docs.rs)\n pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: &Definition) -> String {\n     let mut cb = broken_link_clone_cb;\n-    let doc = Parser::new_with_broken_link_callback(markdown, Options::empty(), Some(&mut cb));\n+    let doc =\n+        Parser::new_with_broken_link_callback(markdown, Options::ENABLE_TASKLISTS, Some(&mut cb));\n \n     let doc = map_links(doc, |target, title: &str| {\n         // This check is imperfect, there's some overlap between valid intra-doc links\n@@ -64,8 +65,7 @@ pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: &Defi\n pub(crate) fn remove_links(markdown: &str) -> String {\n     let mut drop_link = false;\n \n-    let mut opts = Options::empty();\n-    opts.insert(Options::ENABLE_FOOTNOTES);\n+    let opts = Options::ENABLE_TASKLISTS | Options::ENABLE_FOOTNOTES;\n \n     let mut cb = |_: BrokenLink| {\n         let empty = InlineStr::try_from(\"\").unwrap();\n@@ -123,7 +123,7 @@ pub(crate) fn extract_definitions_from_markdown(\n ) -> Vec<(TextRange, String, Option<hir::Namespace>)> {\n     Parser::new_with_broken_link_callback(\n         markdown,\n-        Options::empty(),\n+        Options::ENABLE_TASKLISTS,\n         Some(&mut broken_link_clone_cb),\n     )\n     .into_offset_iter()"}]}