{"sha": "b56e3d955ade558ed68b774fdb382310830ada26", "node_id": "C_kwDOAAsO6NoAKGI1NmUzZDk1NWFkZTU1OGVkNjhiNzc0ZmRiMzgyMzEwODMwYWRhMjY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-02T21:16:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-02T21:16:09Z"}, "message": "Rollup merge of #91321 - matthewjasper:constaint-placeholders, r=jackh726\n\nHandle placeholder regions in NLL type outlive constraints\n\nCloses #76168", "tree": {"sha": "c959025f9439b8b4be60c1c9705edc37ea30e953", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c959025f9439b8b4be60c1c9705edc37ea30e953"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b56e3d955ade558ed68b774fdb382310830ada26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqTeZCRBK7hj4Ov3rIwAAhacIAKVa5susXRrQ2/+oGFETTlix\nEFwFDuZpV7WDXVFsxAde4QrXx/MFGlOiQcf618PjanOTlCDNTmhd6wugFUyZAoB8\njpokKnXRxM0gzpj0znM3jENpv1es0VFxrBDTJUVZgNtfhanTGdcXF08g9W6Y1Swq\nuhWzSPufnFET3WaKpI7gjX9ZAxmkHSHxPoRFcCGG/cy3wbbYzJCLwiXGMlmKOQQA\nKa3BpDdx3oKtfBVv7cj5iInC7Yy3LraS3VOvmn5K3/Iodjxsj9zw4ygd90COf6rc\nAKy+JA2ksqxbdJU6+TLDgmWnVKMcQNPibYVN+DBP5lTIcWI0BF+XeJVQWQYwLAs=\n=7sAi\n-----END PGP SIGNATURE-----\n", "payload": "tree c959025f9439b8b4be60c1c9705edc37ea30e953\nparent 444635df25c7a2192147c179bb981492ae05b967\nparent 2a83c11d4d2468fd753daddb0dfffd392d09f289\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638479769 +0100\ncommitter GitHub <noreply@github.com> 1638479769 +0100\n\nRollup merge of #91321 - matthewjasper:constaint-placeholders, r=jackh726\n\nHandle placeholder regions in NLL type outlive constraints\n\nCloses #76168\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b56e3d955ade558ed68b774fdb382310830ada26", "html_url": "https://github.com/rust-lang/rust/commit/b56e3d955ade558ed68b774fdb382310830ada26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b56e3d955ade558ed68b774fdb382310830ada26/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "444635df25c7a2192147c179bb981492ae05b967", "url": "https://api.github.com/repos/rust-lang/rust/commits/444635df25c7a2192147c179bb981492ae05b967", "html_url": "https://github.com/rust-lang/rust/commit/444635df25c7a2192147c179bb981492ae05b967"}, {"sha": "2a83c11d4d2468fd753daddb0dfffd392d09f289", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a83c11d4d2468fd753daddb0dfffd392d09f289", "html_url": "https://github.com/rust-lang/rust/commit/2a83c11d4d2468fd753daddb0dfffd392d09f289"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "a3b39591f8db261891835ea878a1dfc8a5445560", "filename": "compiler/rustc_borrowck/src/type_check/constraint_conversion.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b56e3d955ade558ed68b774fdb382310830ada26/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56e3d955ade558ed68b774fdb382310830ada26/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs?ref=b56e3d955ade558ed68b774fdb382310830ada26", "patch": "@@ -6,6 +6,7 @@ use rustc_infer::infer::region_constraints::{GenericKind, VerifyBound};\n use rustc_infer::infer::{self, InferCtxt, SubregionOrigin};\n use rustc_middle::mir::ConstraintCategory;\n use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::TypeFoldable;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::DUMMY_SP;\n \n@@ -95,11 +96,23 @@ impl<'a, 'tcx> ConstraintConversion<'a, 'tcx> {\n                 self.add_outlives(r1_vid, r2_vid);\n             }\n \n-            GenericArgKind::Type(t1) => {\n+            GenericArgKind::Type(mut t1) => {\n                 // we don't actually use this for anything, but\n                 // the `TypeOutlives` code needs an origin.\n                 let origin = infer::RelateParamBound(DUMMY_SP, t1, None);\n \n+                // Placeholder regions need to be converted now because it may\n+                // create new region variables, which can't be done later when\n+                // verifying these bounds.\n+                if t1.has_placeholders() {\n+                    t1 = tcx.fold_regions(&t1, &mut false, |r, _| match *r {\n+                        ty::RegionKind::RePlaceholder(placeholder) => {\n+                            self.constraints.placeholder_region(self.infcx, placeholder)\n+                        }\n+                        _ => r,\n+                    });\n+                }\n+\n                 TypeOutlives::new(\n                     &mut *self,\n                     tcx,"}, {"sha": "9366e94c90ff559e28fadab9c1ae74af214d17b0", "filename": "src/test/ui/lifetimes/issue-76168-hr-outlives.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b56e3d955ade558ed68b774fdb382310830ada26/src%2Ftest%2Fui%2Flifetimes%2Fissue-76168-hr-outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56e3d955ade558ed68b774fdb382310830ada26/src%2Ftest%2Fui%2Flifetimes%2Fissue-76168-hr-outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-76168-hr-outlives.rs?ref=b56e3d955ade558ed68b774fdb382310830ada26", "patch": "@@ -0,0 +1,19 @@\n+// edition:2018\n+// check-pass\n+\n+#![feature(unboxed_closures)]\n+use std::future::Future;\n+\n+async fn wrapper<F>(f: F)\n+where for<'a> F: FnOnce<(&'a mut i32,)>,\n+    for<'a> <F as FnOnce<(&'a mut i32,)>>::Output: Future<Output=()> + 'a\n+{\n+    let mut i = 41;\n+    f(&mut i).await;\n+}\n+\n+async fn add_one(i: &mut i32) {\n+    *i = *i + 1;\n+}\n+\n+fn main() {}"}]}