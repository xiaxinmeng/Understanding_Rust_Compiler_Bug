{"sha": "45748a3be4275258ada5ca23b09c6b2f0122ca3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NzQ4YTNiZTQyNzUyNThhZGE1Y2EyM2IwOWM2YjJmMDEyMmNhM2Y=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-21T02:34:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-21T02:34:52Z"}, "message": "rustc: Implement ptr_eq in Rust. Shaves 4 s off compile time.", "tree": {"sha": "ac805cbcb98d86a595653a6ac03c26c9692f4671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac805cbcb98d86a595653a6ac03c26c9692f4671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45748a3be4275258ada5ca23b09c6b2f0122ca3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45748a3be4275258ada5ca23b09c6b2f0122ca3f", "html_url": "https://github.com/rust-lang/rust/commit/45748a3be4275258ada5ca23b09c6b2f0122ca3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45748a3be4275258ada5ca23b09c6b2f0122ca3f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "355f77ef87bec89f37e77e751a530e418e62fe2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/355f77ef87bec89f37e77e751a530e418e62fe2c", "html_url": "https://github.com/rust-lang/rust/commit/355f77ef87bec89f37e77e751a530e418e62fe2c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "fb994858bf95883c1c47ad6ce9f815678fce4fdf", "filename": "src/lib/box.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45748a3be4275258ada5ca23b09c6b2f0122ca3f/src%2Flib%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45748a3be4275258ada5ca23b09c6b2f0122ca3f/src%2Flib%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fbox.rs?ref=45748a3be4275258ada5ca23b09c6b2f0122ca3f", "patch": "@@ -1,8 +1,8 @@\n \n export ptr_eq;\n \n-native \"rust\" mod rustrt {\n-    fn rust_ptr_eq[T](@T a, @T b) -> int;\n+fn ptr_eq[T](&@T a, &@T b) -> bool {\n+    let uint a_ptr = unsafe::reinterpret_cast(a);\n+    let uint b_ptr = unsafe::reinterpret_cast(b);\n+    ret a_ptr == b_ptr;\n }\n-\n-fn ptr_eq[T](@T a, @T b) -> bool { ret rustrt::rust_ptr_eq[T](a, b) != 0; }\n\\ No newline at end of file"}]}