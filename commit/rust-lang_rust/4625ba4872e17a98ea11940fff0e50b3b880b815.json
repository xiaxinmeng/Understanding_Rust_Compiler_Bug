{"sha": "4625ba4872e17a98ea11940fff0e50b3b880b815", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MjViYTQ4NzJlMTdhOThlYTExOTQwZmZmMGU1MGIzYjg4MGI4MTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-08T10:57:18Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:20:41Z"}, "message": "simplify 'let question = ...;'", "tree": {"sha": "81f2e20669c7419f7c518277c758e2e92320dcab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81f2e20669c7419f7c518277c758e2e92320dcab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4625ba4872e17a98ea11940fff0e50b3b880b815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4625ba4872e17a98ea11940fff0e50b3b880b815", "html_url": "https://github.com/rust-lang/rust/commit/4625ba4872e17a98ea11940fff0e50b3b880b815", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4625ba4872e17a98ea11940fff0e50b3b880b815/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f215ca9be63ad7d7b916115e729bacf927621cb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f215ca9be63ad7d7b916115e729bacf927621cb8", "html_url": "https://github.com/rust-lang/rust/commit/f215ca9be63ad7d7b916115e729bacf927621cb8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c97220458757440786c3e6042adcf4624c33205d", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4625ba4872e17a98ea11940fff0e50b3b880b815/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4625ba4872e17a98ea11940fff0e50b3b880b815/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=4625ba4872e17a98ea11940fff0e50b3b880b815", "patch": "@@ -426,7 +426,7 @@ impl<'a> Parser<'a> {\n         let has_parens = self.eat(&token::OpenDelim(token::Paren));\n         let inner_lo = self.token.span;\n         let is_negative = self.eat(&token::Not);\n-        let question = if self.eat(&token::Question) { Some(self.prev_span) } else { None };\n+        let question = self.eat(&token::Question).then_some(self.prev_span);\n         if self.token.is_lifetime() {\n             Ok(Ok(self.parse_generic_lt_bound(lo, inner_lo, has_parens, question)?))\n         } else {"}]}