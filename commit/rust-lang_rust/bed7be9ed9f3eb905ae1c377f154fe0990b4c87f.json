{"sha": "bed7be9ed9f3eb905ae1c377f154fe0990b4c87f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZDdiZTllZDlmM2ViOTA1YWUxYzM3N2YxNTRmZTA5OTBiNGM4N2Y=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-30T19:10:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-30T19:10:56Z"}, "message": "Merge #7099\n\n7099: Remove unused clones in mbe r=edwin0cheng a=edwin0cheng\n\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "ec564e375d1bd1fa12044500b49d7d9e1afbf6ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec564e375d1bd1fa12044500b49d7d9e1afbf6ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bed7be9ed9f3eb905ae1c377f154fe0990b4c87f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7NDACRBK7hj4Ov3rIwAAdHIIADD+4G73dpzhvcHnyYR/1GUc\n08AYJt0YLY1up0TDzp8+rLBDCmcv++RilZbECJc6KLXYIcigNcca3z6d44ClLTek\nYiQrqE9onVlNqFjWucXu7lTTE6fEzyBImzYURRyuKM86ZsJxwR+IAdQdKH0LnLQ+\nW4Yo3aWIkB9m6b7PVy+D39wN0WzRSNJYWYIT6bSyDEMweSVzRSnMQ/4BC4rB9r/w\nQ0PS4RBNU1af8v00TYgyuTrE3qK/4KKDNt1MTIxyBJttnN7XbG59ku2YgPakAfkF\ngNxXq1nrgp4QK5qEVwwm1BwzrKtAK/ZsEgX/uXgfMgBwH/hNRxozATiAEraeSjA=\n=E5/6\n-----END PGP SIGNATURE-----\n", "payload": "tree ec564e375d1bd1fa12044500b49d7d9e1afbf6ab\nparent bf5301ce3b09a85ab13546b9b029e3f1c0c7a000\nparent ede1b11741f2758effaf110dca52f31e39503049\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609355456 +0000\ncommitter GitHub <noreply@github.com> 1609355456 +0000\n\nMerge #7099\n\n7099: Remove unused clones in mbe r=edwin0cheng a=edwin0cheng\n\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bed7be9ed9f3eb905ae1c377f154fe0990b4c87f", "html_url": "https://github.com/rust-lang/rust/commit/bed7be9ed9f3eb905ae1c377f154fe0990b4c87f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bed7be9ed9f3eb905ae1c377f154fe0990b4c87f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf5301ce3b09a85ab13546b9b029e3f1c0c7a000", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf5301ce3b09a85ab13546b9b029e3f1c0c7a000", "html_url": "https://github.com/rust-lang/rust/commit/bf5301ce3b09a85ab13546b9b029e3f1c0c7a000"}, {"sha": "ede1b11741f2758effaf110dca52f31e39503049", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede1b11741f2758effaf110dca52f31e39503049", "html_url": "https://github.com/rust-lang/rust/commit/ede1b11741f2758effaf110dca52f31e39503049"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "b3472879d1e7913aa6c35de7c1723a5f7e5a3d72", "filename": "crates/mbe/src/lib.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bed7be9ed9f3eb905ae1c377f154fe0990b4c87f/crates%2Fmbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed7be9ed9f3eb905ae1c377f154fe0990b4c87f/crates%2Fmbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Flib.rs?ref=bed7be9ed9f3eb905ae1c377f154fe0990b4c87f", "patch": "@@ -217,18 +217,14 @@ impl MacroRules {\n \n impl Rule {\n     fn parse(src: &mut TtIter) -> Result<Rule, ParseError> {\n-        let mut lhs = src\n+        let lhs = src\n             .expect_subtree()\n-            .map_err(|()| ParseError::Expected(\"expected subtree\".to_string()))?\n-            .clone();\n-        lhs.delimiter = None;\n+            .map_err(|()| ParseError::Expected(\"expected subtree\".to_string()))?;\n         src.expect_char('=').map_err(|()| ParseError::Expected(\"expected `=`\".to_string()))?;\n         src.expect_char('>').map_err(|()| ParseError::Expected(\"expected `>`\".to_string()))?;\n-        let mut rhs = src\n+        let rhs = src\n             .expect_subtree()\n-            .map_err(|()| ParseError::Expected(\"expected subtree\".to_string()))?\n-            .clone();\n-        rhs.delimiter = None;\n+            .map_err(|()| ParseError::Expected(\"expected subtree\".to_string()))?;\n \n         let lhs = MetaTemplate { tokens: parse_pattern(&lhs), delimiter: None };\n         let rhs = MetaTemplate { tokens: parse_template(&rhs), delimiter: None };"}]}