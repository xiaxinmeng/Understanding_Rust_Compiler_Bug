{"sha": "56c151920306fe5f401d39f8ad6a6ce8d9ca7391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YzE1MTkyMDMwNmZlNWY0MDFkMzlmOGFkNmE2Y2U4ZDljYTczOTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-17T16:05:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-17T16:05:17Z"}, "message": "miri: correctly compute expected alignment for field", "tree": {"sha": "a00f99f844c3720e03ea33ff6cd67fa86efe9473", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a00f99f844c3720e03ea33ff6cd67fa86efe9473"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56c151920306fe5f401d39f8ad6a6ce8d9ca7391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56c151920306fe5f401d39f8ad6a6ce8d9ca7391", "html_url": "https://github.com/rust-lang/rust/commit/56c151920306fe5f401d39f8ad6a6ce8d9ca7391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56c151920306fe5f401d39f8ad6a6ce8d9ca7391/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1aefb48d2ec7ac38a66c964396a5aec729b7a28", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1aefb48d2ec7ac38a66c964396a5aec729b7a28", "html_url": "https://github.com/rust-lang/rust/commit/f1aefb48d2ec7ac38a66c964396a5aec729b7a28"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "0f03aa097c9dfdb64ff8e0fef412f01e8a566fed", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/56c151920306fe5f401d39f8ad6a6ce8d9ca7391/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c151920306fe5f401d39f8ad6a6ce8d9ca7391/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=56c151920306fe5f401d39f8ad6a6ce8d9ca7391", "patch": "@@ -316,7 +316,10 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n         };\n \n         let ptr = base.ptr.ptr_offset(offset, self)?;\n-        let align = base.align.min(field_layout.align); // only use static information\n+        let align = base.align\n+            // We do not look at `base.layout.align` nor `field_layout.align`, unlike\n+            // codegen -- mostly to see if we can get away with that\n+            .restrict_for_offset(offset); // must be last thing that happens\n \n         Ok(MPlaceTy { mplace: MemPlace { ptr, align, extra }, layout: field_layout })\n     }"}]}