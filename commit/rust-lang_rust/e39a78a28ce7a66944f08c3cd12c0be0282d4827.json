{"sha": "e39a78a28ce7a66944f08c3cd12c0be0282d4827", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOWE3OGEyOGNlN2E2Njk0NGYwOGMzY2QxMmMwYmUwMjgyZDQ4Mjc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-10-04T09:54:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-04T09:54:02Z"}, "message": "Rollup merge of #36878 - BlueSpaceCanary:book-dedup-cargo-run-intro, r=GuillaumeGomez\n\nAvoid introducing `run` twice in the Rust book\n\nAs it stands, getting-started.md and guessing-game.md both introduce `run` as a new command. I switched it so that the 2nd refers back to the first introduction, rather than re-introducing the command.\n\n(First ever FOSS PR, sorry if I screwed up anything obvious :) )\n\nr? @steveklabnik", "tree": {"sha": "57e5042eb3f61644a128a47a66875dd69122b3a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57e5042eb3f61644a128a47a66875dd69122b3a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e39a78a28ce7a66944f08c3cd12c0be0282d4827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e39a78a28ce7a66944f08c3cd12c0be0282d4827", "html_url": "https://github.com/rust-lang/rust/commit/e39a78a28ce7a66944f08c3cd12c0be0282d4827", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e39a78a28ce7a66944f08c3cd12c0be0282d4827/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a4ecb4a0cae6b7a63abb1abb112a15008fcce9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4ecb4a0cae6b7a63abb1abb112a15008fcce9c", "html_url": "https://github.com/rust-lang/rust/commit/5a4ecb4a0cae6b7a63abb1abb112a15008fcce9c"}, {"sha": "bcac4861174c89b4c564dd1fdbebeee0873e6e81", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcac4861174c89b4c564dd1fdbebeee0873e6e81", "html_url": "https://github.com/rust-lang/rust/commit/bcac4861174c89b4c564dd1fdbebeee0873e6e81"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5add2359282729d132f420aa3777f948994d21a6", "filename": "src/doc/book/getting-started.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e39a78a28ce7a66944f08c3cd12c0be0282d4827/src%2Fdoc%2Fbook%2Fgetting-started.md", "raw_url": "https://github.com/rust-lang/rust/raw/e39a78a28ce7a66944f08c3cd12c0be0282d4827/src%2Fdoc%2Fbook%2Fgetting-started.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fgetting-started.md?ref=e39a78a28ce7a66944f08c3cd12c0be0282d4827", "patch": "@@ -505,6 +505,9 @@ $ cargo run\n Hello, world!\n ```\n \n+The `run` command comes in handy when you need to rapidly iterate on a\n+project.\n+\n Notice that this example didn\u2019t re-build the project. Cargo figured out that\n the file hasn\u2019t changed, and so it just ran the binary. If you'd modified your\n source code, Cargo would have rebuilt the project before running it, and you"}, {"sha": "222597be0a946423ef6a5c5037a6f7ed2d5f7747", "filename": "src/doc/book/guessing-game.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e39a78a28ce7a66944f08c3cd12c0be0282d4827/src%2Fdoc%2Fbook%2Fguessing-game.md", "raw_url": "https://github.com/rust-lang/rust/raw/e39a78a28ce7a66944f08c3cd12c0be0282d4827/src%2Fdoc%2Fbook%2Fguessing-game.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fguessing-game.md?ref=e39a78a28ce7a66944f08c3cd12c0be0282d4827", "patch": "@@ -56,9 +56,7 @@ $ cargo build\n Excellent! Open up your `src/main.rs` again. We\u2019ll be writing all of\n our code in this file.\n \n-Before we move on, let me show you one more Cargo command: `run`. `cargo run`\n-is kind of like `cargo build`, but it also then runs the produced executable.\n-Try it out:\n+Remember the `run` command from last chapter? Try it out again here:\n \n ```bash\n $ cargo run\n@@ -67,9 +65,8 @@ $ cargo run\n Hello, world!\n ```\n \n-Great! The `run` command comes in handy when you need to rapidly iterate on a\n-project. Our game is such a project, we need to quickly test each\n-iteration before moving on to the next one.\n+Great! Our game is just the kind of project `run` is good for: we need\n+to quickly test each iteration before moving on to the next one.\n \n # Processing a Guess\n "}]}