{"sha": "4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYTMzODRkYjYzZmNjOTM4YjJlZDU4YjljNmY0MmVmOTM0NDJlNDc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-06T14:33:47Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-06T14:33:47Z"}, "message": "Make it possible to enable the verifier in release mode", "tree": {"sha": "8b913fe2e97ab1ad57028ddef2e34e727d56a16d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b913fe2e97ab1ad57028ddef2e34e727d56a16d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "html_url": "https://github.com/rust-lang/rust/commit/4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd1b1dd58e257322821267614ef6009d9c3ff5c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1b1dd58e257322821267614ef6009d9c3ff5c8", "html_url": "https://github.com/rust-lang/rust/commit/bd1b1dd58e257322821267614ef6009d9c3ff5c8"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "3b29225f60107b092af3c32089babab8deabbca7", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "patch": "@@ -65,6 +65,9 @@ jobs:\n         export COMPILE_RUNS=2\n         export RUN_RUNS=2\n \n+        # Enable extra checks\n+        export CG_CLIF_ENABLE_VERIFIER=1\n+\n         ./test.sh\n \n     - name: Package prebuilt cg_clif"}, {"sha": "f7fde1b4f3a873bbfc694a4bdaeb8cd5fe03fdb3", "filename": "docs/env_vars.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/docs%2Fenv_vars.md", "raw_url": "https://github.com/rust-lang/rust/raw/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/docs%2Fenv_vars.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fenv_vars.md?ref=4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "patch": "@@ -8,5 +8,8 @@\n     to make it possible to use incremental mode for all analyses performed by rustc without caching\n     object files when their content should have been changed by a change to cg_clif.</dd>\n     <dt>CG_CLIF_DISPLAY_CG_TIME</dt>\n-    <dd>If \"1\", display the time it took to perform codegen for a crate</dd>\n+    <dd>If \"1\", display the time it took to perform codegen for a crate.</dd>\n+    <dt>CG_CLIF_ENABLE_VERIFIER</dt>\n+    <dd>Enable the Cranelift ir verifier for all compilation passes. If not set it will only run once\n+    before passing the clif ir to Cranelift for compilation.</dt>\n </dl>"}, {"sha": "f38d943afbfe9c4454d15a62b849f13e302d1ed2", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ca3384db63fcc938b2ed58b9c6f42ef93442e47/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4ca3384db63fcc938b2ed58b9c6f42ef93442e47", "patch": "@@ -299,9 +299,9 @@ fn build_isa(sess: &Session) -> Box<dyn isa::TargetIsa + 'static> {\n     let mut flags_builder = settings::builder();\n     flags_builder.enable(\"is_pic\").unwrap();\n     flags_builder.set(\"enable_probestack\", \"false\").unwrap(); // __cranelift_probestack is not provided\n-    flags_builder\n-        .set(\"enable_verifier\", if cfg!(debug_assertions) { \"true\" } else { \"false\" })\n-        .unwrap();\n+    let enable_verifier =\n+        cfg!(debug_assertions) || std::env::var(\"CG_CLIF_ENABLE_VERIFIER\").is_ok();\n+    flags_builder.set(\"enable_verifier\", if enable_verifier { \"true\" } else { \"false\" }).unwrap();\n \n     let tls_model = match target_triple.binary_format {\n         BinaryFormat::Elf => \"elf_gd\","}]}