{"sha": "edf8154695e697d5bef8fdd3341379a3f789fd62", "node_id": "C_kwDOAAsO6NoAKGVkZjgxNTQ2OTVlNjk3ZDViZWY4ZmRkMzM0MTM3OWEzZjc4OWZkNjI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-26T23:06:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-26T23:06:00Z"}, "message": "nits", "tree": {"sha": "45c5ca7125a197c49639218ff64c443ae36e59e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45c5ca7125a197c49639218ff64c443ae36e59e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edf8154695e697d5bef8fdd3341379a3f789fd62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edf8154695e697d5bef8fdd3341379a3f789fd62", "html_url": "https://github.com/rust-lang/rust/commit/edf8154695e697d5bef8fdd3341379a3f789fd62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edf8154695e697d5bef8fdd3341379a3f789fd62/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3bd57823f602164fa94fde3e7997770bd97cea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3bd57823f602164fa94fde3e7997770bd97cea8", "html_url": "https://github.com/rust-lang/rust/commit/a3bd57823f602164fa94fde3e7997770bd97cea8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f6f5c063b39e85aef811089ab08683e884921ba8", "filename": "src/tools/miri/src/stacked_borrows/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/edf8154695e697d5bef8fdd3341379a3f789fd62/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf8154695e697d5bef8fdd3341379a3f789fd62/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fstacked_borrows%2Fmod.rs?ref=edf8154695e697d5bef8fdd3341379a3f789fd62", "patch": "@@ -913,7 +913,7 @@ trait EvalContextPrivExt<'mir: 'ecx, 'tcx: 'mir, 'ecx>: crate::MiriInterpCxExt<'\n                     })?;\n                     drop(global);\n                     if let Some(access) = access {\n-                        assert!(access == AccessKind::Read);\n+                        assert_eq!(access, AccessKind::Read);\n                         // Make sure the data race model also knows about this.\n                         if let Some(data_race) = alloc_extra.data_race.as_ref() {\n                             data_race.read(alloc_id, range, &this.machine)?;\n@@ -949,7 +949,7 @@ trait EvalContextPrivExt<'mir: 'ecx, 'tcx: 'mir, 'ecx>: crate::MiriInterpCxExt<'\n         })?;\n         drop(global);\n         if let Some(access) = access {\n-            assert!(access == AccessKind::Write);\n+            assert_eq!(access, AccessKind::Write);\n             // Make sure the data race model also knows about this.\n             if let Some(data_race) = alloc_extra.data_race.as_mut() {\n                 data_race.write(alloc_id, range, machine)?;"}]}