{"sha": "6b299878ba6b7c2442f9e348e146873eef1841a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMjk5ODc4YmE2YjdjMjQ0MmY5ZTM0OGUxNDY4NzNlZWYxODQxYTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-16T08:43:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-16T08:43:33Z"}, "message": "Rollup merge of #60769 - ehuss:rustc-cli-docs, r=steveklabnik\n\nUpdate rustc book CLI docs.\n\nThis adds a little detail (and missing flags) to the rustc book. There is still a lot of information missing, but this seemed like a good step to expanding it.", "tree": {"sha": "64190d840c6633f00d47fabb862d6bcb9131675a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64190d840c6633f00d47fabb862d6bcb9131675a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b299878ba6b7c2442f9e348e146873eef1841a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc3SK1CRBK7hj4Ov3rIwAAdHIIAJXTGAUCZHny0gUw/KjTzCsf\n2l04mzJSqx2LyZ1QQfuH/aof9qLT+Iswllayg3dMDEMrXNDRkhmEdSvrVfbmdStH\neUahZB8sxoKGeD/LyJ13zbIyoOr3WIreM3j6PGnGEFEjkF+yCjBAIe1JYTb3IWzy\nDijm36ZSQjNgKzMNnN04x3RuV1jE6IaWYCsZKlLFyKLKLr3Fx1fDCWHgGaCwrCPX\nfSsWzHqaOpW4WZ49L46SLeuD5Q9/e2CPvJ7dRnb5L9OfYG1f37QVLQoE9Ox4bK7m\nScSFx8q8Uu34UkhER7Jnz1Nw9Yx9LR24srOTiph2SMSNKUXx9WYlHlHKzupbDfg=\n=yWbr\n-----END PGP SIGNATURE-----\n", "payload": "tree 64190d840c6633f00d47fabb862d6bcb9131675a\nparent 013e4daa41048fb5ddf6cc3fc92421153a4e9cf4\nparent e392db6cd424983fc7542fa9b35d30de89db439a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557996213 +0200\ncommitter GitHub <noreply@github.com> 1557996213 +0200\n\nRollup merge of #60769 - ehuss:rustc-cli-docs, r=steveklabnik\n\nUpdate rustc book CLI docs.\n\nThis adds a little detail (and missing flags) to the rustc book. There is still a lot of information missing, but this seemed like a good step to expanding it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b299878ba6b7c2442f9e348e146873eef1841a2", "html_url": "https://github.com/rust-lang/rust/commit/6b299878ba6b7c2442f9e348e146873eef1841a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b299878ba6b7c2442f9e348e146873eef1841a2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "013e4daa41048fb5ddf6cc3fc92421153a4e9cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/013e4daa41048fb5ddf6cc3fc92421153a4e9cf4", "html_url": "https://github.com/rust-lang/rust/commit/013e4daa41048fb5ddf6cc3fc92421153a4e9cf4"}, {"sha": "e392db6cd424983fc7542fa9b35d30de89db439a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e392db6cd424983fc7542fa9b35d30de89db439a", "html_url": "https://github.com/rust-lang/rust/commit/e392db6cd424983fc7542fa9b35d30de89db439a"}], "stats": {"total": 170, "additions": 157, "deletions": 13}, "files": [{"sha": "bd7f6630ea2adf988db267c5692b88266b40f6c1", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 156, "deletions": 11, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/6b299878ba6b7c2442f9e348e146873eef1841a2/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/6b299878ba6b7c2442f9e348e146873eef1841a2/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=6b299878ba6b7c2442f9e348e146873eef1841a2", "patch": "@@ -17,28 +17,147 @@ to `#[cfg(verbose)]` and `#[cfg(feature = \"serde\")]` respectively.\n \n ## `-L`: add a directory to the library search path\n \n-When looking for external crates, a directory passed to this flag will be searched.\n+When looking for external crates or libraries, a directory passed to this flag\n+will be searched.\n+\n+The kind of search path can optionally be specified with the form `-L\n+KIND=PATH` where `KIND` may be one of:\n+\n+- `dependency` \u2014\u00a0Only search for transitive dependencies in this directory.\n+- `crate` \u2014\u00a0Only search for this crate's direct dependencies in this\n+  directory.\n+- `native` \u2014 Only search for native libraries in this directory.\n+- `framework` \u2014\u00a0Only search for macOS frameworks in this directory.\n+- `all` \u2014\u00a0Search for all library kinds in this directory. This is the default\n+  if `KIND` is not specified.\n \n ## `-l`: link the generated crate to a native library\n \n This flag allows you to specify linking to a specific native library when building\n a crate.\n \n+The kind of library can optionally be specified with the form `-l KIND=lib`\n+where `KIND` may be one of:\n+\n+- `dylib` \u2014\u00a0A native dynamic library.\n+- `static` \u2014\u00a0A native static library (such as a `.a` archive).\n+- `framework` \u2014\u00a0A macOS framework.\n+\n+The kind of library can be specified in a [`#[link]`\n+attribute][link-attribute]. If the kind is not specified in the `link`\n+attribute or on the command-line, it will link a dynamic library if available,\n+otherwise it will use a static library. If the kind is specified on the\n+command-line, it will override the kind specified in a `link` attribute.\n+\n+The name used in a `link` attribute may be overridden using the form `-l\n+ATTR_NAME:LINK_NAME` where `ATTR_NAME` is the name in the `link` attribute,\n+and `LINK_NAME` is the name of the actual library that will be linked.\n+\n+[link-attribute]: ../reference/items/external-blocks.html#the-link-attribute\n+\n ## `--crate-type`: a list of types of crates for the compiler to emit\n \n-This instructs `rustc` on which crate type to build.\n+This instructs `rustc` on which crate type to build. This flag accepts a\n+comma-separated list of values, and may be specified multiple times. The valid\n+crate types are:\n+\n+- `lib` \u2014 Generates a library kind preferred by the compiler, currently\n+  defaults to `rlib`.\n+- `rlib` \u2014 A Rust static library.\n+- `staticlib` \u2014 A native static library.\n+- `dylib` \u2014 A Rust dynamic library.\n+- `cdylib` \u2014 A native dynamic library.\n+- `bin` \u2014 A runnable executable program.\n+- `proc-macro` \u2014 Generates a format suitable for a procedural macro library\n+  that may be loaded by the compiler.\n+\n+The crate type may be specified with the [`crate_type` attribute][crate_type].\n+The `--crate-type` command-line value will override the `crate_type`\n+attribute.\n+\n+More details may be found in the [linkage chapter] of the reference.\n+\n+[linkage chapter]: ../reference/linkage.html\n+[crate_type]: ../reference/linkage.html\n \n ## `--crate-name`: specify the name of the crate being built\n \n This informs `rustc` of the name of your crate.\n \n-## `--emit`: emit output other than a crate\n-\n-Instead of producing a crate, this flag can print out things like the assembly or LLVM-IR.\n+## `--edition`: specify the edition to use\n+\n+This flag takes a value of `2015` or `2018`. The default is `2015`. More\n+information about editions may be found in the [edition guide].\n+\n+[edition guide]: ../edition-guide/introduction.html\n+\n+## `--emit`: specifies the types of output files to generate\n+\n+This flag controls the types of output files generated by the compiler. It\n+accepts a comma-separated list of values, and may be specified multiple times.\n+The valid emit kinds are:\n+\n+- `asm` \u2014 Generates a file with the crate's assembly code. The default output\n+  filename is `CRATE_NAME.s`.\n+- `dep-info` \u2014 Generates a file with Makefile syntax that indicates all the\n+  source files that were loaded to generate the crate. The default output\n+  filename is `CRATE_NAME.d`.\n+- `link` \u2014 Generates the crates specified by `--crate-type`. The default\n+  output filenames depend on the crate type and platform. This is the default\n+  if `--emit` is not specified.\n+- `llvm-bc` \u2014 Generates a binary file containing the [LLVM bitcode]. The\n+  default output filename is `CRATE_NAME.bc`.\n+- `llvm-ir` \u2014 Generates a file containing [LLVM IR]. The default output\n+  filename is `CRATE_NAME.ll`.\n+- `metadata` \u2014 Generates a file containing metadata about the crate. The\n+  default output filename is `CRATE_NAME.rmeta`.\n+- `mir` \u2014 Generates a file containing rustc's mid-level intermediate\n+  representation. The default output filename is `CRATE_NAME.mir`.\n+- `obj` \u2014 Generates a native object file. The default output filename is\n+  `CRATE_NAME.o`.\n+\n+The output filename can be set with the `-o` flag. A suffix may be added to\n+the filename with the `-C extra-filename` flag. The files are written to the\n+current directory unless the `--out-dir` flag is used. Each emission type may\n+also specify the output filename with the form `KIND=PATH`, which takes\n+precedence over the `-o` flag.\n+\n+[LLVM bitcode]: https://llvm.org/docs/BitCodeFormat.html\n+[LLVM IR]: https://llvm.org/docs/LangRef.html\n \n ## `--print`: print compiler information\n \n-This flag prints out various information about the compiler.\n+This flag prints out various information about the compiler. This flag may be\n+specified multiple times, and the information is printed in the order the\n+flags are specified. Specifying a `--print` flag will usually disable the\n+`--emit` step and will only print the requested information. The valid types\n+of print values are:\n+\n+- `crate-name` \u2014 The name of the crate.\n+- `file-names` \u2014 The names of the files created by the `link` emit kind.\n+- `sysroot` \u2014 Path to the sysroot.\n+- `cfg` \u2014 List of cfg values. See [conditional compilation] for more\n+  information about cfg values.\n+- `target-list` \u2014 List of known targets. The target may be selected with the\n+  `--target` flag.\n+- `target-cpus` \u2014 List of available CPU values for the current target. The\n+  target CPU may be selected with the `-C target-cpu=val` flag.\n+- `target-features` \u2014 List of available target features for the current\n+  target. Target features may be enabled with the `-C target-feature=val`\n+  flag.\n+- `relocation-models` \u2014 List of relocation models. Relocation models may be\n+  selected with the `-C relocation-model=val` flag.\n+- `code-models` \u2014 List of code models. Code models may be selected with the\n+  `-C code-model=val` flag.\n+- `tls-models` \u2014 List of Thread Local Storage models supported. The model may\n+  be selected with the `-Z tls-model=val` flag.\n+- `native-static-libs` \u2014 This may be used when creating a `staticlib` crate\n+  type. If this is the only flag, it will perform a full compilation and\n+  include a diagnostic note that indicates the linker flags to use when\n+  linking the resulting static library. The note starts with the text\n+  `native-static-libs:` to make it easier to fetch the output.\n+\n+[conditional compilation]: ../reference/conditional-compilation.html\n \n ## `-g`: include debug information\n \n@@ -54,7 +173,8 @@ This flag controls the output filename.\n \n ## `--out-dir`: directory to write the output in\n \n-The outputted crate will be written to this directory.\n+The outputted crate will be written to this directory. This flag is ignored if\n+the `-o` flag is used.\n \n ## `--explain`: provide a detailed explanation of an error message\n \n@@ -111,8 +231,9 @@ This flag, when combined with other flags, makes them produce extra output.\n \n ## `--extern`: specify where an external library is located\n \n-This flag allows you to pass the name and location of an external crate that will\n-be linked into the crate you're buildling.\n+This flag allows you to pass the name and location of an external crate that\n+will be linked into the crate you are building. This flag may be specified\n+multiple times. The format of the value should be `CRATENAME=PATH`.\n \n ## `--sysroot`: Override the system root\n \n@@ -121,8 +242,32 @@ distribution; this flag allows that to be overridden.\n \n ## `--error-format`: control how errors are produced\n \n-This flag lets you control the format of errors.\n+This flag lets you control the format of messages. Messages are printed to\n+stderr. The valid options are:\n+\n+- `human` \u2014 Human-readable output. This is the default.\n+- `json` \u2014 Structured JSON output.\n+- `short` \u2014 Short, one-line messages.\n \n ## `--color`: configure coloring of output\n \n-This flag lets you control color settings of the output.\n+This flag lets you control color settings of the output. The valid options\n+are:\n+\n+- `auto` \u2014 Use colors if output goes to a tty. This is the default.\n+- `always` \u2014\u00a0Always use colors.\n+- `never` \u2014\u00a0Never colorize output.\n+\n+## `--remap-path-prefix`: remap source names in output\n+\n+Remap source path prefixes in all output, including compiler diagnostics,\n+debug information, macro expansions, etc. It takes a value of the form\n+`FROM=TO` where a path prefix equal to `FROM` is rewritten to the value `TO`.\n+The `FROM` may itself contain an `=` symbol, but the `TO` value may not. This\n+flag may be specified multiple times.\n+\n+This is useful for normalizing build products, for example by removing the\n+current directory out of pathnames emitted into the object files. The\n+replacement is purely textual, with no consideration of the current system's\n+pathname syntax. For example `--remap-path-prefix foo=bar` will match\n+`foo/lib.rs` but not `./foo/lib.rs`."}, {"sha": "b5e3c4cda0a66f20d13297585046b7b35e5e1944", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b299878ba6b7c2442f9e348e146873eef1841a2/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b299878ba6b7c2442f9e348e146873eef1841a2/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=6b299878ba6b7c2442f9e348e146873eef1841a2", "patch": "@@ -1744,8 +1744,7 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n         opt::multi_s(\n             \"\",\n             \"print\",\n-            \"Comma separated list of compiler information to \\\n-             print on stdout\",\n+            \"Compiler information to print on stdout\",\n             \"[crate-name|file-names|sysroot|cfg|target-list|\\\n              target-cpus|target-features|relocation-models|\\\n              code-models|tls-models|target-spec-json|native-static-libs]\","}]}