{"sha": "c40ededa10439e64f20ee45f3cdd50d893f20438", "node_id": "C_kwDOAAsO6NoAKGM0MGVkZWRhMTA0MzllNjRmMjBlZTQ1ZjNjZGQ1MGQ4OTNmMjA0Mzg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-16T19:30:32Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-19T18:16:22Z"}, "message": "Downgrade IMPLIED_BOUNDS_ENTAILMENT to warn by default, add it to builtin lint list", "tree": {"sha": "2dce7019c06d5269e0d9dfdf0da532e7c7f6e8ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dce7019c06d5269e0d9dfdf0da532e7c7f6e8ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c40ededa10439e64f20ee45f3cdd50d893f20438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c40ededa10439e64f20ee45f3cdd50d893f20438", "html_url": "https://github.com/rust-lang/rust/commit/c40ededa10439e64f20ee45f3cdd50d893f20438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c40ededa10439e64f20ee45f3cdd50d893f20438/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c4cf8d9d0da26b74782bdb29443d50f34f46ed0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4cf8d9d0da26b74782bdb29443d50f34f46ed0", "html_url": "https://github.com/rust-lang/rust/commit/9c4cf8d9d0da26b74782bdb29443d50f34f46ed0"}], "stats": {"total": 51, "additions": 21, "deletions": 30}, "files": [{"sha": "f7a4103f4d5c1a06a4b6e4e7cd050684b926b31f", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c40ededa10439e64f20ee45f3cdd50d893f20438/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40ededa10439e64f20ee45f3cdd50d893f20438/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=c40ededa10439e64f20ee45f3cdd50d893f20438", "patch": "@@ -3311,6 +3311,7 @@ declare_lint_pass! {\n         FFI_UNWIND_CALLS,\n         REPR_TRANSPARENT_EXTERNAL_PRIVATE_FIELDS,\n         NAMED_ARGUMENTS_USED_POSITIONALLY,\n+        IMPLIED_BOUNDS_ENTAILMENT,\n     ]\n }\n \n@@ -4027,15 +4028,15 @@ declare_lint! {\n     /// ### Explanation\n     ///\n     /// Neither the trait method, which provides no implied bounds about `'s`, nor the impl,\n-    /// which can't name `'s`, requires the main function to prove that 's: 'static, but the\n-    /// impl method is able to assume that 's: 'static within its own body.\n+    /// requires the main function to prove that 's: 'static, but the impl method is allowed\n+    /// to assume that `'s: 'static` within its own body.\n     ///\n     /// This can be used to implement an unsound API if used incorrectly.\n     pub IMPLIED_BOUNDS_ENTAILMENT,\n-    Deny,\n+    Warn,\n     \"impl method assumes more implied bounds than its corresponding trait method\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #105572 <https://github.com/rust-lang/rust/issues/105572>\",\n-        reason: FutureIncompatibilityReason::FutureReleaseErrorReportNow,\n+        reason: FutureIncompatibilityReason::FutureReleaseError,\n     };\n }"}, {"sha": "6ccbb5bb26651a6538a26578667b5b7aa4e30bb1", "filename": "src/test/ui/implied-bounds/impl-implied-bounds-compatibility-unnormalized.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility-unnormalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility-unnormalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility-unnormalized.rs?ref=c40ededa10439e64f20ee45f3cdd50d893f20438", "patch": "@@ -1,3 +1,5 @@\n+#![deny(implied_bounds_entailment)]\n+\n trait Project {\n     type Ty;\n }"}, {"sha": "0ac31c642eb12ecc27853ad4ffd1041c8618b27b", "filename": "src/test/ui/implied-bounds/impl-implied-bounds-compatibility-unnormalized.stderr", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility-unnormalized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility-unnormalized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility-unnormalized.stderr?ref=c40ededa10439e64f20ee45f3cdd50d893f20438", "patch": "@@ -1,23 +1,16 @@\n error: impl method assumes more implied bounds than the corresponding trait method\n-  --> $DIR/impl-implied-bounds-compatibility-unnormalized.rs:11:5\n+  --> $DIR/impl-implied-bounds-compatibility-unnormalized.rs:13:5\n    |\n LL |     fn get<'s>(s: &'s str, _: <&'static &'s () as Project>::Ty) -> &'static str {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #105572 <https://github.com/rust-lang/rust/issues/105572>\n-   = note: `#[deny(implied_bounds_entailment)]` on by default\n+note: the lint level is defined here\n+  --> $DIR/impl-implied-bounds-compatibility-unnormalized.rs:1:9\n+   |\n+LL | #![deny(implied_bounds_entailment)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n \n-Future incompatibility report: Future breakage diagnostic:\n-error: impl method assumes more implied bounds than the corresponding trait method\n-  --> $DIR/impl-implied-bounds-compatibility-unnormalized.rs:11:5\n-   |\n-LL |     fn get<'s>(s: &'s str, _: <&'static &'s () as Project>::Ty) -> &'static str {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #105572 <https://github.com/rust-lang/rust/issues/105572>\n-   = note: `#[deny(implied_bounds_entailment)]` on by default\n-"}, {"sha": "d097bc16a2214075d8f1fcc10e098354a2cd6ab3", "filename": "src/test/ui/implied-bounds/impl-implied-bounds-compatibility.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility.rs?ref=c40ededa10439e64f20ee45f3cdd50d893f20438", "patch": "@@ -1,3 +1,5 @@\n+#![deny(implied_bounds_entailment)]\n+\n use std::cell::RefCell;\n \n pub struct MessageListeners<'a> {"}, {"sha": "0dfa8167a99661d792c30da429d7d18a7c8d83fb", "filename": "src/test/ui/implied-bounds/impl-implied-bounds-compatibility.stderr", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c40ededa10439e64f20ee45f3cdd50d893f20438/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimplied-bounds%2Fimpl-implied-bounds-compatibility.stderr?ref=c40ededa10439e64f20ee45f3cdd50d893f20438", "patch": "@@ -1,23 +1,16 @@\n error: impl method assumes more implied bounds than the corresponding trait method\n-  --> $DIR/impl-implied-bounds-compatibility.rs:12:5\n+  --> $DIR/impl-implied-bounds-compatibility.rs:14:5\n    |\n LL |     fn listeners<'b>(&'b self) -> &'a MessageListeners<'b> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #105572 <https://github.com/rust-lang/rust/issues/105572>\n-   = note: `#[deny(implied_bounds_entailment)]` on by default\n+note: the lint level is defined here\n+  --> $DIR/impl-implied-bounds-compatibility.rs:1:9\n+   |\n+LL | #![deny(implied_bounds_entailment)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n \n-Future incompatibility report: Future breakage diagnostic:\n-error: impl method assumes more implied bounds than the corresponding trait method\n-  --> $DIR/impl-implied-bounds-compatibility.rs:12:5\n-   |\n-LL |     fn listeners<'b>(&'b self) -> &'a MessageListeners<'b> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #105572 <https://github.com/rust-lang/rust/issues/105572>\n-   = note: `#[deny(implied_bounds_entailment)]` on by default\n-"}]}