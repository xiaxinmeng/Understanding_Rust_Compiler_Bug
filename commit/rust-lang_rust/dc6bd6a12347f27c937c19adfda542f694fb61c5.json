{"sha": "dc6bd6a12347f27c937c19adfda542f694fb61c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNmJkNmExMjM0N2YyN2M5MzdjMTlhZGZkYTU0MmY2OTRmYjYxYzU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T08:59:37Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-13T10:25:34Z"}, "message": "expand: simplify flat_map_item", "tree": {"sha": "423c4ffa369a7b896cec0406f190a70842635e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/423c4ffa369a7b896cec0406f190a70842635e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc6bd6a12347f27c937c19adfda542f694fb61c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6bd6a12347f27c937c19adfda542f694fb61c5", "html_url": "https://github.com/rust-lang/rust/commit/dc6bd6a12347f27c937c19adfda542f694fb61c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc6bd6a12347f27c937c19adfda542f694fb61c5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcce5fa6e7ba67db63674dc7369125875c7f39a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcce5fa6e7ba67db63674dc7369125875c7f39a2", "html_url": "https://github.com/rust-lang/rust/commit/fcce5fa6e7ba67db63674dc7369125875c7f39a2"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "ee0b7fa00de261c2063ca44f56a8ce99dabdec20", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc6bd6a12347f27c937c19adfda542f694fb61c5/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc6bd6a12347f27c937c19adfda542f694fb61c5/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=dc6bd6a12347f27c937c19adfda542f694fb61c5", "patch": "@@ -1383,11 +1383,7 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                     _ => unreachable!(),\n                 })\n             }\n-            ast::ItemKind::Mod(ast::Mod { inner, .. }) => {\n-                if item.ident == Ident::invalid() {\n-                    return noop_flat_map_item(item, self);\n-                }\n-\n+            ast::ItemKind::Mod(ast::Mod { inner, .. }) if item.ident != Ident::invalid() => {\n                 let orig_directory_ownership = self.cx.current_expansion.directory_ownership;\n                 let mut module = (*self.cx.current_expansion.module).clone();\n                 module.mod_path.push(item.ident);"}]}