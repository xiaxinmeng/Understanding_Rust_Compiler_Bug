{"sha": "5c921a9f615ef522d724d3c251737b678289b5cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOTIxYTlmNjE1ZWY1MjJkNzI0ZDNjMjUxNzM3YjY3ODI4OWI1Y2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-09T09:48:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-09T09:48:33Z"}, "message": "Auto merge of #4233 - thiagoarrais:jens1o-fix-1208, r=phansch,flip1995\n\nAvoid reporting string_lit_as_bytes for long strings\n\nPort of @jens1o code ([b76f939][jens1o_commit])\n\nFixes #1208\n\n[jens1o_commit]: https://github.com/jens1o/rust-clippy/commit/b76f939ac2efcfe24900c286b3b7713d972d9088\n\n<!--\nThank you for making Clippy better!\n\nWe're collecting our changelog from pull request descriptions.\nIf your PR only updates to the latest nightly, you can leave the\n`changelog` entry as `none`. Otherwise, please write a short comment\nexplaining your change.\n\nIf your PR fixes an issue, you can add \"fixes #issue_number\" into this\nPR description. This way the issue will be automatically closed when\nyour PR is merged.\n\nIf you added a new lint, here's a checklist for things that will be\nchecked during review or continuous integration.\n\n- [ ] Followed [lint naming conventions][lint_naming]\n- [ ] Added passing UI tests (including committed `.stderr` file)\n- [ ] `cargo test` passes locally\n- [ ] Executed `util/dev update_lints`\n- [ ] Added lint documentation\n- [ ] Run `cargo fmt`\n\nNote that you can skip the above if you are just opening a WIP PR in\norder to get feedback.\n\nDelete this line and everything above before opening your PR -->\n\nchangelog: bugfix for long strings as bytes", "tree": {"sha": "cfa7833b53e61ea4093f6d7a89de14b1c021a517", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfa7833b53e61ea4093f6d7a89de14b1c021a517"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c921a9f615ef522d724d3c251737b678289b5cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c921a9f615ef522d724d3c251737b678289b5cf", "html_url": "https://github.com/rust-lang/rust/commit/5c921a9f615ef522d724d3c251737b678289b5cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c921a9f615ef522d724d3c251737b678289b5cf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1987bf73a8e9e9cc84d6e5d31c607b5fce84d6ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1987bf73a8e9e9cc84d6e5d31c607b5fce84d6ae", "html_url": "https://github.com/rust-lang/rust/commit/1987bf73a8e9e9cc84d6e5d31c607b5fce84d6ae"}, {"sha": "7d1a9447ea15e7b7ce845876c8850f0feed54185", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d1a9447ea15e7b7ce845876c8850f0feed54185", "html_url": "https://github.com/rust-lang/rust/commit/7d1a9447ea15e7b7ce845876c8850f0feed54185"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "57f63a600a7c7dbea170cc3da2a423c6022a37bf", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c921a9f615ef522d724d3c251737b678289b5cf/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c921a9f615ef522d724d3c251737b678289b5cf/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=5c921a9f615ef522d724d3c251737b678289b5cf", "patch": "@@ -138,6 +138,9 @@ fn is_add(cx: &LateContext<'_, '_>, src: &Expr, target: &Expr) -> bool {\n     }\n }\n \n+// Max length a b\"foo\" string can take\n+const MAX_LENGTH_BYTE_STRING_LIT: usize = 32;\n+\n declare_lint_pass!(StringLitAsBytes => [STRING_LIT_AS_BYTES]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n@@ -173,6 +176,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n                             );\n                         } else if callsite == expanded\n                             && lit_content.as_str().chars().all(|c| c.is_ascii())\n+                            && lit_content.as_str().len() <= MAX_LENGTH_BYTE_STRING_LIT\n                             && !in_macro_or_desugar(args[0].span)\n                         {\n                             span_lint_and_sugg("}, {"sha": "1922478165fd30232aea3cb6c8242c96a9e93f80", "filename": "tests/ui/string_lit_as_bytes.fixed", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5c921a9f615ef522d724d3c251737b678289b5cf/tests%2Fui%2Fstring_lit_as_bytes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5c921a9f615ef522d724d3c251737b678289b5cf/tests%2Fui%2Fstring_lit_as_bytes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.fixed?ref=5c921a9f615ef522d724d3c251737b678289b5cf", "patch": "@@ -6,10 +6,11 @@\n fn str_lit_as_bytes() {\n     let bs = b\"hello there\";\n \n-    let bs = br###\"raw string with three ### in it and some \" \"\"###;\n+    let bs = br###\"raw string with 3# plus \" \"\"###;\n \n-    // no warning, because this cannot be written as a byte string literal:\n+    // no warning, because these cannot be written as byte string literals:\n     let ubs = \"\u2603\".as_bytes();\n+    let ubs = \"hello there! this is a very long string\".as_bytes();\n \n     let strify = stringify!(foobar).as_bytes();\n "}, {"sha": "560cbcb657b8ce84ad4ee9c6556a12b6d611b573", "filename": "tests/ui/string_lit_as_bytes.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5c921a9f615ef522d724d3c251737b678289b5cf/tests%2Fui%2Fstring_lit_as_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c921a9f615ef522d724d3c251737b678289b5cf/tests%2Fui%2Fstring_lit_as_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.rs?ref=5c921a9f615ef522d724d3c251737b678289b5cf", "patch": "@@ -6,10 +6,11 @@\n fn str_lit_as_bytes() {\n     let bs = \"hello there\".as_bytes();\n \n-    let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+    let bs = r###\"raw string with 3# plus \" \"\"###.as_bytes();\n \n-    // no warning, because this cannot be written as a byte string literal:\n+    // no warning, because these cannot be written as byte string literals:\n     let ubs = \"\u2603\".as_bytes();\n+    let ubs = \"hello there! this is a very long string\".as_bytes();\n \n     let strify = stringify!(foobar).as_bytes();\n "}, {"sha": "59aaec75bd2213fc2180386182833dd0a50ad163", "filename": "tests/ui/string_lit_as_bytes.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c921a9f615ef522d724d3c251737b678289b5cf/tests%2Fui%2Fstring_lit_as_bytes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c921a9f615ef522d724d3c251737b678289b5cf/tests%2Fui%2Fstring_lit_as_bytes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.stderr?ref=5c921a9f615ef522d724d3c251737b678289b5cf", "patch": "@@ -9,11 +9,11 @@ LL |     let bs = \"hello there\".as_bytes();\n error: calling `as_bytes()` on a string literal\n   --> $DIR/string_lit_as_bytes.rs:9:14\n    |\n-LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n+LL |     let bs = r###\"raw string with 3# plus \" \"\"###.as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with 3# plus \" \"\"###`\n \n error: calling `as_bytes()` on `include_str!(..)`\n-  --> $DIR/string_lit_as_bytes.rs:16:22\n+  --> $DIR/string_lit_as_bytes.rs:17:22\n    |\n LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`"}]}