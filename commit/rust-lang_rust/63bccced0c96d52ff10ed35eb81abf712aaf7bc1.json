{"sha": "63bccced0c96d52ff10ed35eb81abf712aaf7bc1", "node_id": "C_kwDOAAsO6NoAKDYzYmNjY2VkMGM5NmQ1MmZmMTBlZDM1ZWI4MWFiZjcxMmFhZjdiYzE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-26T16:51:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-26T16:51:45Z"}, "message": "Rollup merge of #110847 - aDotInTheVoid:rdj-time-serialization, r=GuillaumeGomez\n\nrustdoc-json: Time serialization.\n\nThis lets us know how much time is spent in json specific code, and how much performance we could gain by using a different serialization format.\n\nFor aws-sdk-ec2, it takes 0.7s, out of a 43s build (of which 6s is spent in json specific code), and makes a 173M json file\n\n```\n$ cargo +rust_stage2 rustdoc -p aws-sdk-ec2 -- -Zunstable-options -w json -Ztime-passes\n Documenting aws-sdk-ec2 v0.26.0 (/home/gh-aDotInTheVoid/aws-sdk-rust/sdk/ec2)\ntime:   5.229; rss:   64MB ->  891MB ( +827MB)  expand_crate\ntime:   5.230; rss:   61MB ->  891MB ( +830MB)  macro_expand_crate\ntime:   0.256; rss:  891MB ->  891MB (   +0MB)  AST_validation\ntime:   0.025; rss:  891MB ->  891MB (   +1MB)  finalize_imports\ntime:   0.093; rss:  891MB ->  891MB (   +0MB)  compute_effective_visibilities\ntime:   0.122; rss:  891MB ->  891MB (   +0MB)  finalize_macro_resolutions\ntime:   2.442; rss:  891MB -> 1188MB ( +297MB)  late_resolve_crate\ntime:   0.120; rss: 1188MB -> 1190MB (   +2MB)  resolve_check_unused\ntime:   0.211; rss: 1190MB -> 1190MB (   +0MB)  resolve_postprocess\ntime:   3.017; rss:  891MB -> 1190MB ( +299MB)  resolve_crate\ntime:   8.520; rss:   61MB -> 1181MB (+1120MB)  prepare_outputs\ntime:   0.152; rss: 1181MB -> 1181MB (   +0MB)  complete_gated_feature_checking\ntime:   0.539; rss: 1633MB -> 1632MB (   -1MB)  drop_ast\ntime:  15.492; rss:   58MB -> 1621MB (+1563MB)  type_collecting\ntime:   1.503; rss: 1621MB -> 1705MB (  +84MB)  item_types_checking\ntime:   1.274; rss: 1705MB -> 1726MB (  +21MB)  crate_lints\ntime:   1.275; rss: 1705MB -> 1726MB (  +21MB)  missing_docs\ntime:   0.281; rss: 1726MB -> 1726MB (   +0MB)  check_mod_attrs\ntime:   0.433; rss: 1744MB -> 1750MB (   +6MB)  clean_crate\ntime:  11.581; rss: 1750MB -> 2107MB ( +357MB)  collect_synthetic_impls\ntime:   0.019; rss: 2107MB -> 2107MB (   +0MB)  collect_items_for_trait_impls\ntime:  12.588; rss: 1750MB -> 2139MB ( +389MB)  collect-trait-impls\ntime:   0.197; rss: 2139MB -> 2139MB (   +0MB)  check_doc_test_visibility\ntime:   0.281; rss: 2139MB -> 2150MB (  +11MB)  strip-hidden\ntime:   0.260; rss: 2150MB -> 2150MB (   +0MB)  strip-private\nwarning: unresolved link to `date`\n --> sdk/ec2/src/client/describe_instances.rs:7:11184\n  |\n7 | ...te of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.<...\n  |                                                            ^^^^ no item named `date` in scope\n  |\n  = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n  = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n\ntime:   0.363; rss: 2150MB -> 2150MB (   +0MB)  collect-intra-doc-links\ntime:   0.946; rss: 2150MB -> 2150MB (   +0MB)  propagate-doc-cfg\ntime:   0.494; rss: 2150MB -> 2152MB (   +2MB)  run-lints\ntime:   0.658; rss: 2152MB -> 2163MB (  +11MB)  create_format_cache\ntime:  34.818; rss:   58MB -> 2163MB (+2105MB)  run_global_ctxt\ntime:   0.016; rss: 2163MB -> 2163MB (   +0MB)  create_renderer(json)\ntime:   0.723; rss: 2780MB -> 2780MB (   +0MB)  rustdoc_json_serialization\ntime:   2.216; rss: 2399MB -> 2599MB ( +199MB)  renderer_after_krate(json)\ntime:   6.639; rss: 2163MB -> 2417MB ( +254MB)  render_json\ntime:   0.312; rss: 2417MB -> 2071MB ( -346MB)  free_global_ctxt\nwarning: `aws-sdk-ec2` (lib doc) generated 1 warning\n    Finished dev [unoptimized + debuginfo] target(s) in 43.06s\n```\n\n[(Zulip Discussion)](https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/JSON.20metadata.20speed/near/352783145)\n\nr? `@GuillaumeGomez`", "tree": {"sha": "2957ac9b352e280bc72292943f35af89f3933de0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2957ac9b352e280bc72292943f35af89f3933de0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63bccced0c96d52ff10ed35eb81abf712aaf7bc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkSVahCRBK7hj4Ov3rIwAAaQUIADkBumn2kj8/Qn3zlXZQM+tl\n+qN0HcJkK8H5C/PGMpzxclTN8GRqXAT9MsQLf8ogJNeZX25dciMNzethbdEnAOCG\nIdY27TVDZJcbbPcueDeM+IL98qpbkXDWVeS6ZzcFCX3CIYsxoNFK0RMOizvVoYu8\n1EJQCQZ6VPNx0+tnTRC2hGKlMDtZVEwzWtpxVkU9yt3uIZMVQhl9DLqmqgJp9oAV\nBhUUKskiQO96tGamheCjf+G+/FitgIVrYf0CNWy1y/8tjoETIoFn9Gqy/iR3wpvn\n1FfYX/0BMmnj7J2b02Ake4o624Repwb6Q3UM4rFWq/jCw8U0DsIzu2S/avfO8Co=\n=R17W\n-----END PGP SIGNATURE-----\n", "payload": "tree 2957ac9b352e280bc72292943f35af89f3933de0\nparent e47562c6740b7ddc8bf29551312d18a9249ab4f8\nparent 2b7dd084a33d82f164bf605fa7e18286a55474a1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682527905 +0200\ncommitter GitHub <noreply@github.com> 1682527905 +0200\n\nRollup merge of #110847 - aDotInTheVoid:rdj-time-serialization, r=GuillaumeGomez\n\nrustdoc-json: Time serialization.\n\nThis lets us know how much time is spent in json specific code, and how much performance we could gain by using a different serialization format.\n\nFor aws-sdk-ec2, it takes 0.7s, out of a 43s build (of which 6s is spent in json specific code), and makes a 173M json file\n\n```\n$ cargo +rust_stage2 rustdoc -p aws-sdk-ec2 -- -Zunstable-options -w json -Ztime-passes\n Documenting aws-sdk-ec2 v0.26.0 (/home/gh-aDotInTheVoid/aws-sdk-rust/sdk/ec2)\ntime:   5.229; rss:   64MB ->  891MB ( +827MB)  expand_crate\ntime:   5.230; rss:   61MB ->  891MB ( +830MB)  macro_expand_crate\ntime:   0.256; rss:  891MB ->  891MB (   +0MB)  AST_validation\ntime:   0.025; rss:  891MB ->  891MB (   +1MB)  finalize_imports\ntime:   0.093; rss:  891MB ->  891MB (   +0MB)  compute_effective_visibilities\ntime:   0.122; rss:  891MB ->  891MB (   +0MB)  finalize_macro_resolutions\ntime:   2.442; rss:  891MB -> 1188MB ( +297MB)  late_resolve_crate\ntime:   0.120; rss: 1188MB -> 1190MB (   +2MB)  resolve_check_unused\ntime:   0.211; rss: 1190MB -> 1190MB (   +0MB)  resolve_postprocess\ntime:   3.017; rss:  891MB -> 1190MB ( +299MB)  resolve_crate\ntime:   8.520; rss:   61MB -> 1181MB (+1120MB)  prepare_outputs\ntime:   0.152; rss: 1181MB -> 1181MB (   +0MB)  complete_gated_feature_checking\ntime:   0.539; rss: 1633MB -> 1632MB (   -1MB)  drop_ast\ntime:  15.492; rss:   58MB -> 1621MB (+1563MB)  type_collecting\ntime:   1.503; rss: 1621MB -> 1705MB (  +84MB)  item_types_checking\ntime:   1.274; rss: 1705MB -> 1726MB (  +21MB)  crate_lints\ntime:   1.275; rss: 1705MB -> 1726MB (  +21MB)  missing_docs\ntime:   0.281; rss: 1726MB -> 1726MB (   +0MB)  check_mod_attrs\ntime:   0.433; rss: 1744MB -> 1750MB (   +6MB)  clean_crate\ntime:  11.581; rss: 1750MB -> 2107MB ( +357MB)  collect_synthetic_impls\ntime:   0.019; rss: 2107MB -> 2107MB (   +0MB)  collect_items_for_trait_impls\ntime:  12.588; rss: 1750MB -> 2139MB ( +389MB)  collect-trait-impls\ntime:   0.197; rss: 2139MB -> 2139MB (   +0MB)  check_doc_test_visibility\ntime:   0.281; rss: 2139MB -> 2150MB (  +11MB)  strip-hidden\ntime:   0.260; rss: 2150MB -> 2150MB (   +0MB)  strip-private\nwarning: unresolved link to `date`\n --> sdk/ec2/src/client/describe_instances.rs:7:11184\n  |\n7 | ...te of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.<...\n  |                                                            ^^^^ no item named `date` in scope\n  |\n  = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n  = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n\ntime:   0.363; rss: 2150MB -> 2150MB (   +0MB)  collect-intra-doc-links\ntime:   0.946; rss: 2150MB -> 2150MB (   +0MB)  propagate-doc-cfg\ntime:   0.494; rss: 2150MB -> 2152MB (   +2MB)  run-lints\ntime:   0.658; rss: 2152MB -> 2163MB (  +11MB)  create_format_cache\ntime:  34.818; rss:   58MB -> 2163MB (+2105MB)  run_global_ctxt\ntime:   0.016; rss: 2163MB -> 2163MB (   +0MB)  create_renderer(json)\ntime:   0.723; rss: 2780MB -> 2780MB (   +0MB)  rustdoc_json_serialization\ntime:   2.216; rss: 2399MB -> 2599MB ( +199MB)  renderer_after_krate(json)\ntime:   6.639; rss: 2163MB -> 2417MB ( +254MB)  render_json\ntime:   0.312; rss: 2417MB -> 2071MB ( -346MB)  free_global_ctxt\nwarning: `aws-sdk-ec2` (lib doc) generated 1 warning\n    Finished dev [unoptimized + debuginfo] target(s) in 43.06s\n```\n\n[(Zulip Discussion)](https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/JSON.20metadata.20speed/near/352783145)\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63bccced0c96d52ff10ed35eb81abf712aaf7bc1", "html_url": "https://github.com/rust-lang/rust/commit/63bccced0c96d52ff10ed35eb81abf712aaf7bc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63bccced0c96d52ff10ed35eb81abf712aaf7bc1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47562c6740b7ddc8bf29551312d18a9249ab4f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47562c6740b7ddc8bf29551312d18a9249ab4f8", "html_url": "https://github.com/rust-lang/rust/commit/e47562c6740b7ddc8bf29551312d18a9249ab4f8"}, {"sha": "2b7dd084a33d82f164bf605fa7e18286a55474a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7dd084a33d82f164bf605fa7e18286a55474a1", "html_url": "https://github.com/rust-lang/rust/commit/2b7dd084a33d82f164bf605fa7e18286a55474a1"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "9392dd4d08825fa511b68bcce9aadf156917f893", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/63bccced0c96d52ff10ed35eb81abf712aaf7bc1/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63bccced0c96d52ff10ed35eb81abf712aaf7bc1/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=63bccced0c96d52ff10ed35eb81abf712aaf7bc1", "patch": "@@ -279,7 +279,10 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());\n         p.set_extension(\"json\");\n         let mut file = BufWriter::new(try_err!(File::create(&p), p));\n-        serde_json::ser::to_writer(&mut file, &output).unwrap();\n+        self.tcx\n+            .sess\n+            .time(\"rustdoc_json_serialization\", || serde_json::ser::to_writer(&mut file, &output))\n+            .unwrap();\n         try_err!(file.flush(), p);\n \n         Ok(())"}]}