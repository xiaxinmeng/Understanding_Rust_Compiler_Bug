{"sha": "8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOGYzOTExYWE0ZTY4ZDdmMGE4OGE3ZDAxMWEwOGMwN2IyY2QxODk=", "commit": {"author": {"name": "bnewbold", "email": "bnewbold@robocracy.org", "date": "2016-05-11T15:53:07Z"}, "committer": {"name": "bnewbold", "email": "bnewbold@robocracy.org", "date": "2016-05-11T15:53:25Z"}, "message": "trivial fixes to documentation (book)", "tree": {"sha": "4a0f775d093db34e5353574fec3112edd4d84411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a0f775d093db34e5353574fec3112edd4d84411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "html_url": "https://github.com/rust-lang/rust/commit/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/comments", "author": {"login": "bnewbold", "id": 130077, "node_id": "MDQ6VXNlcjEzMDA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/130077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnewbold", "html_url": "https://github.com/bnewbold", "followers_url": "https://api.github.com/users/bnewbold/followers", "following_url": "https://api.github.com/users/bnewbold/following{/other_user}", "gists_url": "https://api.github.com/users/bnewbold/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnewbold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnewbold/subscriptions", "organizations_url": "https://api.github.com/users/bnewbold/orgs", "repos_url": "https://api.github.com/users/bnewbold/repos", "events_url": "https://api.github.com/users/bnewbold/events{/privacy}", "received_events_url": "https://api.github.com/users/bnewbold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnewbold", "id": 130077, "node_id": "MDQ6VXNlcjEzMDA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/130077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnewbold", "html_url": "https://github.com/bnewbold", "followers_url": "https://api.github.com/users/bnewbold/followers", "following_url": "https://api.github.com/users/bnewbold/following{/other_user}", "gists_url": "https://api.github.com/users/bnewbold/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnewbold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnewbold/subscriptions", "organizations_url": "https://api.github.com/users/bnewbold/orgs", "repos_url": "https://api.github.com/users/bnewbold/repos", "events_url": "https://api.github.com/users/bnewbold/events{/privacy}", "received_events_url": "https://api.github.com/users/bnewbold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0495417416c8e0687bc6a997507c403627f6568", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0495417416c8e0687bc6a997507c403627f6568", "html_url": "https://github.com/rust-lang/rust/commit/c0495417416c8e0687bc6a997507c403627f6568"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "43ac30c35c6c61d4c738f2161f40bf9755e04833", "filename": "src/doc/book/crates-and-modules.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/src%2Fdoc%2Fbook%2Fcrates-and-modules.md", "raw_url": "https://github.com/rust-lang/rust/raw/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/src%2Fdoc%2Fbook%2Fcrates-and-modules.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fcrates-and-modules.md?ref=8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "patch": "@@ -115,7 +115,7 @@ $ ls target/debug\n build  deps  examples  libphrases-a7448e02a0468eaa.rlib  native\n ```\n \n-`libphrases-hash.rlib` is the compiled crate. Before we see how to use this\n+`libphrases-<hash>.rlib` is the compiled crate. Before we see how to use this\n crate from another crate, let\u2019s break it up into multiple files.\n \n # Multiple File Crates"}, {"sha": "c914c33a5a4b989e369e01489ff8aca199130c00", "filename": "src/doc/book/error-handling.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/src%2Fdoc%2Fbook%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/src%2Fdoc%2Fbook%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ferror-handling.md?ref=8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "patch": "@@ -225,7 +225,7 @@ sense to put it into a function:\n ```rust\n # fn find(_: &str, _: char) -> Option<usize> { None }\n // Returns the extension of the given file name, where the extension is defined\n-// as all characters proceeding the first `.`.\n+// as all characters following the first `.`.\n // If `file_name` has no `.`, then `None` is returned.\n fn extension_explicit(file_name: &str) -> Option<&str> {\n     match find(file_name, '.') {\n@@ -274,7 +274,7 @@ to get rid of the case analysis:\n ```rust\n # fn find(_: &str, _: char) -> Option<usize> { None }\n // Returns the extension of the given file name, where the extension is defined\n-// as all characters proceeding the first `.`.\n+// as all characters following the first `.`.\n // If `file_name` has no `.`, then `None` is returned.\n fn extension(file_name: &str) -> Option<&str> {\n     find(file_name, '.').map(|i| &file_name[i+1..])"}, {"sha": "4ea114c4bee68996c8c2658ae50778e80de27ed3", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=8e8f3911aa4e68d7f0a88a7d011a08c07b2cd189", "patch": "@@ -84,8 +84,8 @@ fn it_works() {\n ```\n \n `assert!` is a macro provided by Rust which takes one argument: if the argument\n-is `true`, nothing happens. If the argument is `false`, it `panic!`s. Let's run\n-our tests again:\n+is `true`, nothing happens. If the argument is `false`, it will `panic!`. Let's\n+run our tests again:\n \n ```bash\n $ cargo test"}]}