{"sha": "70f6c478f65993f4150f5f41b33f57d7b2715f3b", "node_id": "C_kwDOAAsO6NoAKDcwZjZjNDc4ZjY1OTkzZjQxNTBmNWY0MWIzM2Y1N2Q3YjI3MTVmM2I", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-03T17:30:35Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-04T00:43:13Z"}, "message": "get_parent and find_parent", "tree": {"sha": "5b2823c6c774ca1c256367a032d1b39d421eaab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b2823c6c774ca1c256367a032d1b39d421eaab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70f6c478f65993f4150f5f41b33f57d7b2715f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70f6c478f65993f4150f5f41b33f57d7b2715f3b", "html_url": "https://github.com/rust-lang/rust/commit/70f6c478f65993f4150f5f41b33f57d7b2715f3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70f6c478f65993f4150f5f41b33f57d7b2715f3b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd1d8971cf3fe6f3cefcf7cc03dbdc7d1c684617", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1d8971cf3fe6f3cefcf7cc03dbdc7d1c684617", "html_url": "https://github.com/rust-lang/rust/commit/bd1d8971cf3fe6f3cefcf7cc03dbdc7d1c684617"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "dfb43893326eb8a225ee72b7ef0ce5feaecd0886", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -131,7 +131,7 @@ fn is_argument(map: rustc_middle::hir::map::Map<'_>, id: HirId) -> bool {\n         _ => return false,\n     }\n \n-    matches!(map.find(map.parent_id(id)), Some(Node::Param(_)))\n+    matches!(map.find_parent(id), Some(Node::Param(_)))\n }\n \n impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n@@ -157,7 +157,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n             if is_argument(*map, cmt.hir_id) {\n                 // Skip closure arguments\n                 let parent_id = map.parent_id(cmt.hir_id);\n-                if let Some(Node::Expr(..)) = map.find(map.parent_id(parent_id)) {\n+                if let Some(Node::Expr(..)) = map.find_parent(parent_id) {\n                     return;\n                 }\n "}, {"sha": "38f41d077c161f941764e897216d62c4fdd60b55", "filename": "clippy_lints/src/manual_rem_euclid.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -74,7 +74,7 @@ impl<'tcx> LateLintPass<'tcx> for ManualRemEuclid {\n             && let Some(hir_id) = path_to_local(expr3)\n             && let Some(Node::Pat(_)) = cx.tcx.hir().find(hir_id) {\n                 // Apply only to params or locals with annotated types\n-                match cx.tcx.hir().find(cx.tcx.hir().parent_id(hir_id)) {\n+                match cx.tcx.hir().find_parent(hir_id) {\n                     Some(Node::Param(..)) => (),\n                     Some(Node::Local(local)) => {\n                         let Some(ty) = local.ty else { return };"}, {"sha": "065a5c72621cd50e1617c767874a01f361a41dfb", "filename": "clippy_lints/src/matches/match_single_binding.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fmatches%2Fmatch_single_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fmatches%2Fmatch_single_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmatch_single_binding.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -140,8 +140,8 @@ pub(crate) fn check<'a>(cx: &LateContext<'a>, ex: &Expr<'a>, arms: &[Arm<'_>], e\n fn opt_parent_assign_span<'a>(cx: &LateContext<'a>, ex: &Expr<'a>) -> Option<AssignmentExpr> {\n     let map = &cx.tcx.hir();\n \n-    if let Some(Node::Expr(parent_arm_expr)) = map.find(map.parent_id(ex.hir_id)) {\n-        return match map.find(map.parent_id(parent_arm_expr.hir_id)) {\n+    if let Some(Node::Expr(parent_arm_expr)) = map.find_parent(ex.hir_id) {\n+        return match map.find_parent(parent_arm_expr.hir_id) {\n             Some(Node::Local(parent_let_expr)) => Some(AssignmentExpr::Local {\n                 span: parent_let_expr.span,\n                 pat_span: parent_let_expr.pat.span(),\n@@ -183,8 +183,7 @@ fn sugg_with_curlies<'a>(\n \n     // If the parent is already an arm, and the body is another match statement,\n     // we need curly braces around suggestion\n-    let parent_node_id = cx.tcx.hir().parent_id(match_expr.hir_id);\n-    if let Node::Arm(arm) = &cx.tcx.hir().get(parent_node_id) {\n+    if let Node::Arm(arm) = &cx.tcx.hir().get_parent(match_expr.hir_id) {\n         if let ExprKind::Match(..) = arm.body.kind {\n             cbrace_end = format!(\"\\n{indent}}}\");\n             // Fix body indent due to the match"}, {"sha": "1249db5dc4792307ed353ba64dfd959e8a7368b4", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -100,7 +100,7 @@ impl<'tcx> LateLintPass<'tcx> for NeedlessPassByValue {\n         }\n \n         // Exclude non-inherent impls\n-        if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().parent_id(hir_id)) {\n+        if let Some(Node::Item(item)) = cx.tcx.hir().find_parent(hir_id) {\n             if matches!(\n                 item.kind,\n                 ItemKind::Impl(Impl { of_trait: Some(_), .. }) | ItemKind::Trait(..)"}, {"sha": "870a1c7d88d532bd6eadbf148acde49fd64b58be", "filename": "clippy_lints/src/pass_by_ref_or_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -299,7 +299,7 @@ impl<'tcx> LateLintPass<'tcx> for PassByRefOrValue {\n         }\n \n         // Exclude non-inherent impls\n-        if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().parent_id(hir_id)) {\n+        if let Some(Node::Item(item)) = cx.tcx.hir().find_parent(hir_id) {\n             if matches!(\n                 item.kind,\n                 ItemKind::Impl(Impl { of_trait: Some(_), .. }) | ItemKind::Trait(..)"}, {"sha": "dd120599c04e1b9c6f0175a4644e4c14dd1b00c8", "filename": "clippy_lints/src/unit_types/unit_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Funit_types%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Funit_types%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Funit_arg.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -21,7 +21,7 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n         return;\n     }\n     let map = &cx.tcx.hir();\n-    let opt_parent_node = map.find(map.parent_id(expr.hir_id));\n+    let opt_parent_node = map.find_parent(expr.hir_id);\n     if_chain! {\n         if let Some(hir::Node::Expr(parent_expr)) = opt_parent_node;\n         if is_questionmark_desugar_marked_call(parent_expr);\n@@ -192,7 +192,7 @@ fn fmt_stmts_and_call(\n \n     let mut stmts_and_call_snippet = stmts_and_call.join(&format!(\"{}{}\", \";\\n\", \" \".repeat(call_expr_indent)));\n     // expr is not in a block statement or result expression position, wrap in a block\n-    let parent_node = cx.tcx.hir().find(cx.tcx.hir().parent_id(call_expr.hir_id));\n+    let parent_node = cx.tcx.hir().find_parent(call_expr.hir_id);\n     if !matches!(parent_node, Some(Node::Block(_))) && !matches!(parent_node, Some(Node::Stmt(_))) {\n         let block_indent = call_expr_indent + 4;\n         stmts_and_call_snippet ="}, {"sha": "84ec0d0fb1cf4ccf42e4bf43e8b4c34f84d192c1", "filename": "clippy_lints/src/unnecessary_wraps.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wraps.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -91,7 +91,7 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWraps {\n         }\n \n         // Abort if the method is implementing a trait or of it a trait method.\n-        if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().parent_id(hir_id)) {\n+        if let Some(Node::Item(item)) = cx.tcx.hir().find_parent(hir_id) {\n             if matches!(\n                 item.kind,\n                 ItemKind::Impl(Impl { of_trait: Some(_), .. }) | ItemKind::Trait(..)"}, {"sha": "c86f24cbd3780d5300ad1b4d278668e125d8ddf9", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -1058,7 +1058,7 @@ fn get_parent_local<'hir>(cx: &LateContext<'hir>, expr: &'hir hir::Expr<'hir>) -\n fn get_parent_local_hir_id<'hir>(cx: &LateContext<'hir>, hir_id: hir::HirId) -> Option<&'hir hir::Local<'hir>> {\n     let map = cx.tcx.hir();\n \n-    match map.find(map.parent_id(hir_id)) {\n+    match map.find_parent((hir_id)) {\n         Some(hir::Node::Local(local)) => Some(local),\n         Some(hir::Node::Pat(pattern)) => get_parent_local_hir_id(cx, pattern.hir_id),\n         _ => None,"}, {"sha": "8290fe9ecb4c64593098395ff34389aa30ec4c06", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f6c478f65993f4150f5f41b33f57d7b2715f3b/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=70f6c478f65993f4150f5f41b33f57d7b2715f3b", "patch": "@@ -1287,7 +1287,7 @@ pub fn contains_return(expr: &hir::Expr<'_>) -> bool {\n \n /// Gets the parent node, if any.\n pub fn get_parent_node(tcx: TyCtxt<'_>, id: HirId) -> Option<Node<'_>> {\n-    tcx.hir().parent_iter(id).next().map(|(_, node)| node)\n+    tcx.hir().find_parent(id)\n }\n \n /// Gets the parent expression, if any \u2013- this is useful to constrain a lint.\n@@ -2075,7 +2075,7 @@ pub fn is_no_core_crate(cx: &LateContext<'_>) -> bool {\n /// }\n /// ```\n pub fn is_trait_impl_item(cx: &LateContext<'_>, hir_id: HirId) -> bool {\n-    if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().parent_id(hir_id)) {\n+    if let Some(Node::Item(item)) = cx.tcx.hir().find_parent(hir_id) {\n         matches!(item.kind, ItemKind::Impl(hir::Impl { of_trait: Some(_), .. }))\n     } else {\n         false"}]}