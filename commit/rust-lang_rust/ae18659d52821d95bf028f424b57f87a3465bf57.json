{"sha": "ae18659d52821d95bf028f424b57f87a3465bf57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMTg2NTlkNTI4MjFkOTViZjAyOGY0MjRiNTdmODdhMzQ2NWJmNTc=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-22T14:58:18Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-28T17:44:45Z"}, "message": "Normalize line and column numbers from the sysroot", "tree": {"sha": "219157944442e05b865d80178912d26c3bd3ee74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/219157944442e05b865d80178912d26c3bd3ee74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae18659d52821d95bf028f424b57f87a3465bf57", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl9yIQ0ACgkQtAh+UQ6Y\nsWTdYA/+PYAPvBAxUUX4SWi8DCzMYN5obtO87quR7SHoOm4y4bkd//Rd15WvJX64\ngyUFk0rusyW0cBMeAA+V2vqzMyBmG5PrzJcvS3xyEn88pAZrZwAV/RXMdaAiyt7G\n/UbsVz3jfK3+jEq6BVFdtW1We6v7vuQNL3NpkUn8X8CvTRV/3hgGXNOcANOtSMMF\ndir3/G1AN41r2YUJ8dLdKONjOECWAmI3JEBKXGsoEL9JBRVks1TnutHA/bhMlCs5\nDWl6d9Ipp/I7l5oIXUo0HCyB8lJJSJK0dY8gGrcv38BVtAcxp/lbbrHUhzuPORsL\nTe7skzuw4f+o1m7ikbC75Aw813BssItCsTK1tnCsZ3KIzp004cLyIjtJrMIgLzSn\nKqPmWDA2sh0Rx6CwHxJtC6Ar6Qj0TLuIyg1fZZZuFsswSqgImZp2OtBibIIl12lf\nNk0zF5l+OLnUTWUEo+wQzmQVz+UOxt/kW6JGSGkYK4uHhpCrHS7ofSmb8HNCsh+2\n0lVtJei9gnemrsGFrVL3QMiedT/Sw47ZnstC7l1mRVGrD0cTIvJh/WlxKuvAzUCk\ncPygHrj3mUNR41Qw45WjMJ5xwhU5WHx3uYWOWlq74Gr0D/N/1LYMyOkdFU9QgRr2\nlK4za4Jhcnna3/fHskmYcZwkw9WwhXae5vcUg/Fb00WfWnmY8jM=\n=MsvV\n-----END PGP SIGNATURE-----", "payload": "tree 219157944442e05b865d80178912d26c3bd3ee74\nparent 22f1eb01ee42c8dcfe5e7d7c981bba82aad1bbea\nauthor Aaron Hill <aa1ronham@gmail.com> 1600786698 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1601315085 -0400\n\nNormalize line and column numbers from the sysroot\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae18659d52821d95bf028f424b57f87a3465bf57", "html_url": "https://github.com/rust-lang/rust/commit/ae18659d52821d95bf028f424b57f87a3465bf57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae18659d52821d95bf028f424b57f87a3465bf57/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f1eb01ee42c8dcfe5e7d7c981bba82aad1bbea", "url": "https://api.github.com/repos/rust-lang/rust/commits/22f1eb01ee42c8dcfe5e7d7c981bba82aad1bbea", "html_url": "https://github.com/rust-lang/rust/commit/22f1eb01ee42c8dcfe5e7d7c981bba82aad1bbea"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "51da6cf9c4dc5842a2900ab6aa0e28eee02164f8", "filename": "tests/run-pass/backtrace-api.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae18659d52821d95bf028f424b57f87a3465bf57/tests%2Frun-pass%2Fbacktrace-api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae18659d52821d95bf028f424b57f87a3465bf57/tests%2Frun-pass%2Fbacktrace-api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbacktrace-api.rs?ref=ae18659d52821d95bf028f424b57f87a3465bf57", "patch": "@@ -1,4 +1,5 @@\n // normalize-stderr-test \".*rustlib\" -> \"RUSTLIB\"\n+// normalize-stderr-test \"RUSTLIB/(.*):\\d+:\\d+ \"-> \"RUSTLIB/$1:LL:COL \"\n \n extern \"Rust\" {\n     fn miri_get_backtrace() -> Box<[*mut ()]>;"}, {"sha": "042ca843d0e12447ed0354b48178b0f7abc11355", "filename": "tests/run-pass/backtrace-api.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ae18659d52821d95bf028f424b57f87a3465bf57/tests%2Frun-pass%2Fbacktrace-api.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae18659d52821d95bf028f424b57f87a3465bf57/tests%2Frun-pass%2Fbacktrace-api.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbacktrace-api.stderr?ref=ae18659d52821d95bf028f424b57f87a3465bf57", "patch": "@@ -1,10 +1,10 @@\n-$DIR/backtrace-api.rs:17:27 (main)\n-RUSTLIB/src/rust/library/core/src/ops/function.rs:227:5 (<fn() as std::ops::FnOnce<()>>::call_once - shim(fn()))\n-RUSTLIB/src/rust/library/std/src/sys_common/backtrace.rs:137:18 (std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>)\n-RUSTLIB/src/rust/library/std/src/rt.rs:66:18 (std::rt::lang_start::<()>::{{closure}}#0)\n-RUSTLIB/src/rust/library/core/src/ops/function.rs:259:13 (std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once)\n-RUSTLIB/src/rust/library/std/src/panicking.rs:381:40 (std::panicking::r#try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>)\n-RUSTLIB/src/rust/library/std/src/panicking.rs:345:19 (std::panicking::r#try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>)\n-RUSTLIB/src/rust/library/std/src/panic.rs:382:14 (std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>)\n-RUSTLIB/src/rust/library/std/src/rt.rs:51:25 (std::rt::lang_start_internal)\n-RUSTLIB/src/rust/library/std/src/rt.rs:65:5 (std::rt::lang_start::<()>)\n+$DIR/backtrace-api.rs:18:27 (main)\n+RUSTLIB/src/rust/library/core/src/ops/function.rs:LL:COL (<fn() as std::ops::FnOnce<()>>::call_once - shim(fn()))\n+RUSTLIB/src/rust/library/std/src/sys_common/backtrace.rs:LL:COL (std::sys_common::backtrace::__rust_begin_short_backtrace::<fn(), ()>)\n+RUSTLIB/src/rust/library/std/src/rt.rs:LL:COL (std::rt::lang_start::<()>::{{closure}}#0)\n+RUSTLIB/src/rust/library/core/src/ops/function.rs:LL:COL (std::ops::function::impls::<impl std::ops::FnOnce<()> for &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>::call_once)\n+RUSTLIB/src/rust/library/std/src/panicking.rs:LL:COL (std::panicking::r#try::do_call::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>)\n+RUSTLIB/src/rust/library/std/src/panicking.rs:LL:COL (std::panicking::r#try::<i32, &dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>)\n+RUSTLIB/src/rust/library/std/src/panic.rs:LL:COL (std::panic::catch_unwind::<&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe, i32>)\n+RUSTLIB/src/rust/library/std/src/rt.rs:LL:COL (std::rt::lang_start_internal)\n+RUSTLIB/src/rust/library/std/src/rt.rs:LL:COL (std::rt::lang_start::<()>)"}]}