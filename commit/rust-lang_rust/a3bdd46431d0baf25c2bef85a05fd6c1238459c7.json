{"sha": "a3bdd46431d0baf25c2bef85a05fd6c1238459c7", "node_id": "C_kwDOAAsO6NoAKGEzYmRkNDY0MzFkMGJhZjI1YzJiZWY4NWEwNWZkNmMxMjM4NDU5Yzc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-28T16:34:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-28T16:34:33Z"}, "message": "Rollup merge of #98617 - ChrisDenton:const-unwrap, r=Mark-Simulacrum\n\nRemove feature `const_option` from std\n\nThis is part of the effort to reduce the number of unstable features used by std. This one is easy as it's only used in one place.", "tree": {"sha": "3f8eff6b0e3c96ccb1e7f8681216eed351e314af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f8eff6b0e3c96ccb1e7f8681216eed351e314af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3bdd46431d0baf25c2bef85a05fd6c1238459c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiuy2ZCRBK7hj4Ov3rIwAAJWEIAGsOOMnKLW4U47lRFc0Zs4oY\nevgoBPUY9hVYCXLLw5BqOdHowVHew4lIX6g5i9B898Y8bcLwm/w+b2bFZLLWh2HR\n3nWwsZqGE6yp8fOFmuqQd+v2FeSVrCAFQASmlFmfHKO3jpjMdxj/c6bVDVHPDz0R\nmDJc025oTF4ZFXjZKlyG8LXc6M9O9pcOZ6NMgNOVzqB6XZ660aJBq9JDvK9gcXPD\n+N6u1m/wbhEjq8JqPYKT41a0lY9lP3Fl2PxNcscLt4Kpb5SVA4Grv4gR2OEyTeg1\nWsat4g4bGrVygZeFNVGlPGkfttJmGOGV4P7iBsKnC5sKXe/vPCpMqX9Ej4HPhto=\n=JWFj\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f8eff6b0e3c96ccb1e7f8681216eed351e314af\nparent 956a9f55c0e1b45605975d565848da089897a853\nparent 720c430822ab093449d495487cc103b39bcf9f4a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656434073 +0200\ncommitter GitHub <noreply@github.com> 1656434073 +0200\n\nRollup merge of #98617 - ChrisDenton:const-unwrap, r=Mark-Simulacrum\n\nRemove feature `const_option` from std\n\nThis is part of the effort to reduce the number of unstable features used by std. This one is easy as it's only used in one place.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3bdd46431d0baf25c2bef85a05fd6c1238459c7", "html_url": "https://github.com/rust-lang/rust/commit/a3bdd46431d0baf25c2bef85a05fd6c1238459c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3bdd46431d0baf25c2bef85a05fd6c1238459c7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "956a9f55c0e1b45605975d565848da089897a853", "url": "https://api.github.com/repos/rust-lang/rust/commits/956a9f55c0e1b45605975d565848da089897a853", "html_url": "https://github.com/rust-lang/rust/commit/956a9f55c0e1b45605975d565848da089897a853"}, {"sha": "720c430822ab093449d495487cc103b39bcf9f4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/720c430822ab093449d495487cc103b39bcf9f4a", "html_url": "https://github.com/rust-lang/rust/commit/720c430822ab093449d495487cc103b39bcf9f4a"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "65b8df429966329615eb3570e38c2d81a18698c6", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3bdd46431d0baf25c2bef85a05fd6c1238459c7/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3bdd46431d0baf25c2bef85a05fd6c1238459c7/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=a3bdd46431d0baf25c2bef85a05fd6c1238459c7", "patch": "@@ -335,7 +335,6 @@\n #![feature(const_ip)]\n #![feature(const_ipv4)]\n #![feature(const_ipv6)]\n-#![feature(const_option)]\n #![feature(const_socketaddr)]\n #![feature(thread_local_internals)]\n //"}, {"sha": "01f26298290f0174d212cf7570a1af0ce7190c7a", "filename": "library/std/src/sys/windows/args.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a3bdd46431d0baf25c2bef85a05fd6c1238459c7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3bdd46431d0baf25c2bef85a05fd6c1238459c7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fargs.rs?ref=a3bdd46431d0baf25c2bef85a05fd6c1238459c7", "patch": "@@ -21,6 +21,17 @@ use crate::vec;\n \n use core::iter;\n \n+/// This is the const equivalent to `NonZeroU16::new(n).unwrap()`\n+///\n+/// FIXME: This can be removed once `Option::unwrap` is stably const.\n+/// See the `const_option` feature (#67441).\n+const fn non_zero_u16(n: u16) -> NonZeroU16 {\n+    match NonZeroU16::new(n) {\n+        Some(n) => n,\n+        None => panic!(\"called `unwrap` on a `None` value\"),\n+    }\n+}\n+\n pub fn args() -> Args {\n     // SAFETY: `GetCommandLineW` returns a pointer to a null terminated UTF-16\n     // string so it's safe for `WStrUnits` to use.\n@@ -58,10 +69,10 @@ fn parse_lp_cmd_line<'a, F: Fn() -> OsString>(\n     lp_cmd_line: Option<WStrUnits<'a>>,\n     exe_name: F,\n ) -> Vec<OsString> {\n-    const BACKSLASH: NonZeroU16 = NonZeroU16::new(b'\\\\' as u16).unwrap();\n-    const QUOTE: NonZeroU16 = NonZeroU16::new(b'\"' as u16).unwrap();\n-    const TAB: NonZeroU16 = NonZeroU16::new(b'\\t' as u16).unwrap();\n-    const SPACE: NonZeroU16 = NonZeroU16::new(b' ' as u16).unwrap();\n+    const BACKSLASH: NonZeroU16 = non_zero_u16(b'\\\\' as u16);\n+    const QUOTE: NonZeroU16 = non_zero_u16(b'\"' as u16);\n+    const TAB: NonZeroU16 = non_zero_u16(b'\\t' as u16);\n+    const SPACE: NonZeroU16 = non_zero_u16(b' ' as u16);\n \n     let mut ret_val = Vec::new();\n     // If the cmd line pointer is null or it points to an empty string then"}]}