{"sha": "bed34ecd08423007548c8f3bc126b4c6dca5b4b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZDM0ZWNkMDg0MjMwMDc1NDhjOGYzYmMxMjZiNGM2ZGNhNWI0YjQ=", "commit": {"author": {"name": "WebeWizard", "email": "webewizard@gmail.com", "date": "2014-02-11T21:49:06Z"}, "committer": {"name": "WebeWizard", "email": "webewizard@gmail.com", "date": "2014-02-11T22:41:19Z"}, "message": "Added examples for converting vectors of u8 into strings. Also fixed some styling", "tree": {"sha": "5c113e60b5e38ba924ffac0e66d12bd4fec42f7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c113e60b5e38ba924ffac0e66d12bd4fec42f7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bed34ecd08423007548c8f3bc126b4c6dca5b4b4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bed34ecd08423007548c8f3bc126b4c6dca5b4b4", "html_url": "https://github.com/rust-lang/rust/commit/bed34ecd08423007548c8f3bc126b4c6dca5b4b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bed34ecd08423007548c8f3bc126b4c6dca5b4b4/comments", "author": {"login": "WebeWizard", "id": 2747908, "node_id": "MDQ6VXNlcjI3NDc5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/2747908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WebeWizard", "html_url": "https://github.com/WebeWizard", "followers_url": "https://api.github.com/users/WebeWizard/followers", "following_url": "https://api.github.com/users/WebeWizard/following{/other_user}", "gists_url": "https://api.github.com/users/WebeWizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/WebeWizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WebeWizard/subscriptions", "organizations_url": "https://api.github.com/users/WebeWizard/orgs", "repos_url": "https://api.github.com/users/WebeWizard/repos", "events_url": "https://api.github.com/users/WebeWizard/events{/privacy}", "received_events_url": "https://api.github.com/users/WebeWizard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WebeWizard", "id": 2747908, "node_id": "MDQ6VXNlcjI3NDc5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/2747908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WebeWizard", "html_url": "https://github.com/WebeWizard", "followers_url": "https://api.github.com/users/WebeWizard/followers", "following_url": "https://api.github.com/users/WebeWizard/following{/other_user}", "gists_url": "https://api.github.com/users/WebeWizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/WebeWizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WebeWizard/subscriptions", "organizations_url": "https://api.github.com/users/WebeWizard/orgs", "repos_url": "https://api.github.com/users/WebeWizard/repos", "events_url": "https://api.github.com/users/WebeWizard/events{/privacy}", "received_events_url": "https://api.github.com/users/WebeWizard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c967e70414cad67e4cd28a9fd2cc267ccf85da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c967e70414cad67e4cd28a9fd2cc267ccf85da9", "html_url": "https://github.com/rust-lang/rust/commit/4c967e70414cad67e4cd28a9fd2cc267ccf85da9"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "a2d75fc95d1a289a5d43b217d22baec9de4a07e3", "filename": "src/doc/complement-cheatsheet.md", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/bed34ecd08423007548c8f3bc126b4c6dca5b4b4/src%2Fdoc%2Fcomplement-cheatsheet.md", "raw_url": "https://github.com/rust-lang/rust/raw/bed34ecd08423007548c8f3bc126b4c6dca5b4b4/src%2Fdoc%2Fcomplement-cheatsheet.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-cheatsheet.md?ref=bed34ecd08423007548c8f3bc126b4c6dca5b4b4", "patch": "@@ -36,12 +36,42 @@ let y: ~str = x.to_str_radix(16);\n Use [`FromStrRadix`](http://static.rust-lang.org/doc/master/std/num/trait.FromStrRadix.html), and its helper function, [`from_str_radix`](http://static.rust-lang.org/doc/master/std/num/fn.from_str_radix.html).\n \n ~~~\n-use std::num::from_str_radix;\n+use std::num;\n \n-let x: Option<i64> = from_str_radix(\"deadbeef\", 16);\n+let x: Option<i64> = num::from_str_radix(\"deadbeef\", 16);\n let y: i64 = x.unwrap();\n ~~~\n \n+**Vector of Bytes to String**\n+\n+To return a Borrowed String Slice (&str) use the str helper function [`from_utf8`](http://static.rust-lang.org/doc/master/std/str/fn.from_utf8.html).\n+\n+~~~\n+use std::str;\n+\n+let bytes = ~[104u8,105u8];\n+let x: Option<&str> = str::from_utf8(bytes);\n+let y: &str = x.unwrap();\n+~~~\n+\n+To return an Owned String (~str) use the str helper function [`from_utf8_owned`](http://static.rust-lang.org/doc/master/std/str/fn.from_utf8_owned.html).\n+\n+~~~\n+use std::str;\n+\n+let x: Option<~str> = str::from_utf8_owned(~[104u8,105u8]);\n+let y: ~str = x.unwrap();\n+~~~~\n+\n+To return a [`MaybeOwned`](http://static.rust-lang.org/doc/master/std/str/enum.MaybeOwned.html) use the str helper function [`from_utf8_lossy`](http://static.rust-lang.org/doc/master/std/str/fn.from_utf8_owned.html).  This function also replaces non-valid utf-8 sequences with U+FFFD replacement character.\n+\n+~~~\n+use std::str;\n+\n+let x = bytes!(72u8,\"ello \",0xF0,0x90,0x80,\"World!\");\n+let y = str::from_utf8_lossy(x);\n+~~~~\n+\n # File operations\n \n ## How do I read from a file?"}]}