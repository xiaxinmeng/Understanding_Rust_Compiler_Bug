{"sha": "16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YmQ0Nzk2ZTk5OGY3ZWYzYzdlYWVjYzYwYmYwMzM0OWZkYmI4NTk=", "commit": {"author": {"name": "krk", "email": "keremkat@gmail.com", "date": "2019-06-01T10:10:15Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-14T07:41:46Z"}, "message": "Add lint for statics with explicit static lifetime.", "tree": {"sha": "7c3b208f1bc66430967664d91752c2a4f043cdcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c3b208f1bc66430967664d91752c2a4f043cdcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl0DT7oACgkQaTCGhp1Q\nZjepQhAAh2zrZ6vHMLpV+6JIUsY+nN/5kGfeUb+awAYTJnjf+JkcAbFkFlzpwxHE\nRG+D41dkFPExdOhAcpt+vvJa5S98Wh3UwgQGetWVFXW1r+BJeFd32npsRuklYjE/\nxQ1YPpYSQees0kBs4w0gq8aGXR+A8qnk2ZycOwOm2eGynJAdU89v8oNosmcH8Hcg\nQ+KytuOTYWm8/3fo5Bmmq3LwEAu9+HG6qMywzIxrbiH0DtkXyfwPwwCLF3aGhPgU\nr9d66dW+FtvDMyEaJjBQKhTAJNG6B/IOhCm3g/F6Ctfi+adOZYfzJyUxRp80xJi9\nneb7NftPxkc1gUl3kWWleHJOtldURMQyGL8A9tbvj40zwaG5+b0JSzmj6DryyRZh\n0llGhw22nxO8mADHzDwbDB3yiHLkGYHz8eM/2spDEy8cXF1X3vvFDRev7eXDJhDt\n7f22HOzsA4l0I7SGDQqB1HIdcMIcW8k1e0YkU6tDqD67RITsXIx+6/BrulpEXsMy\nTW4QDofb8EE5hxKCjYLPFHOO0ZFgTrwn0Ewq+yMv+cw4hLtsptVZGymM2di3aWzu\nldLl5spjXt0AV3vnWkuPRemMxZfW/WPJOK4f5F6/flLsmnVjdtRDScNOxwV9mZ5Y\nGJyMBzJdzV1a10Z1C9SO8twenhe2pOdpCSURul084kERFd6pDHE=\n=K2qu\n-----END PGP SIGNATURE-----", "payload": "tree 7c3b208f1bc66430967664d91752c2a4f043cdcc\nparent bd39cea01ce5c539fa109f9ab576f5cf8cf329dc\nauthor krk <keremkat@gmail.com> 1559383815 +0200\ncommitter flip1995 <hello@philkrones.com> 1560498106 +0200\n\nAdd lint for statics with explicit static lifetime.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "html_url": "https://github.com/rust-lang/rust/commit/16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/comments", "author": {"login": "krk", "id": 1447853, "node_id": "MDQ6VXNlcjE0NDc4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1447853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krk", "html_url": "https://github.com/krk", "followers_url": "https://api.github.com/users/krk/followers", "following_url": "https://api.github.com/users/krk/following{/other_user}", "gists_url": "https://api.github.com/users/krk/gists{/gist_id}", "starred_url": "https://api.github.com/users/krk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krk/subscriptions", "organizations_url": "https://api.github.com/users/krk/orgs", "repos_url": "https://api.github.com/users/krk/repos", "events_url": "https://api.github.com/users/krk/events{/privacy}", "received_events_url": "https://api.github.com/users/krk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd39cea01ce5c539fa109f9ab576f5cf8cf329dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd39cea01ce5c539fa109f9ab576f5cf8cf329dc", "html_url": "https://github.com/rust-lang/rust/commit/bd39cea01ce5c539fa109f9ab576f5cf8cf329dc"}], "stats": {"total": 229, "additions": 229, "deletions": 0}, "files": [{"sha": "03c8be124c333bd32c330f087229feab4f80ebb4", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "patch": "@@ -1088,6 +1088,7 @@ All notable changes to this project will be documented in this file.\n [`single_match`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n [`single_match_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else\n [`slow_vector_initialization`]: https://rust-lang.github.io/rust-clippy/master/index.html#slow_vector_initialization\n+[`static_static_lifetime`]: https://rust-lang.github.io/rust-clippy/master/index.html#static_static_lifetime\n [`str_to_string`]: https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string\n [`string_add`]: https://rust-lang.github.io/rust-clippy/master/index.html#string_add\n [`string_add_assign`]: https://rust-lang.github.io/rust-clippy/master/index.html#string_add_assign"}, {"sha": "0b1c76859690060d8fa7476e2f4d9eca807d1ea9", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "patch": "@@ -256,6 +256,7 @@ pub mod returns;\n pub mod serde_api;\n pub mod shadow;\n pub mod slow_vector_initialization;\n+pub mod static_static_lifetime;\n pub mod strings;\n pub mod suspicious_trait_impl;\n pub mod swap;\n@@ -554,6 +555,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box identity_conversion::IdentityConversion::default());\n     reg.register_late_lint_pass(box types::ImplicitHasher);\n     reg.register_early_lint_pass(box const_static_lifetime::StaticConst);\n+    reg.register_early_lint_pass(box static_static_lifetime::StaticStatic);\n     reg.register_late_lint_pass(box fallible_impl_from::FallibleImplFrom);\n     reg.register_late_lint_pass(box replace_consts::ReplaceConsts);\n     reg.register_late_lint_pass(box types::UnitArg);\n@@ -844,6 +846,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         returns::UNUSED_UNIT,\n         serde_api::SERDE_API_MISUSE,\n         slow_vector_initialization::SLOW_VECTOR_INITIALIZATION,\n+        static_static_lifetime::STATIC_STATIC_LIFETIME,\n         strings::STRING_LIT_AS_BYTES,\n         suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL,\n         suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL,\n@@ -962,6 +965,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         returns::LET_AND_RETURN,\n         returns::NEEDLESS_RETURN,\n         returns::UNUSED_UNIT,\n+        static_static_lifetime::STATIC_STATIC_LIFETIME,\n         strings::STRING_LIT_AS_BYTES,\n         types::FN_TO_NUMERIC_CAST,\n         types::FN_TO_NUMERIC_CAST_WITH_TRUNCATION,"}, {"sha": "338d9e76602322745988b164a65650caf8abfd91", "filename": "clippy_lints/src/static_static_lifetime.rs", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/clippy_lints%2Fsrc%2Fstatic_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/clippy_lints%2Fsrc%2Fstatic_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstatic_static_lifetime.rs?ref=16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "patch": "@@ -0,0 +1,93 @@\n+use crate::utils::{in_macro_or_desugar, snippet, span_lint_and_then};\n+use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::{declare_lint_pass, declare_tool_lint};\n+use rustc_errors::Applicability;\n+use syntax::ast::*;\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for statics with an explicit `'static` lifetime.\n+    ///\n+    /// **Why is this bad?** Adding `'static` to every reference can create very\n+    /// complicated types.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```ignore\n+    /// static FOO: &'static [(&'static str, &'static str, fn(&Bar) -> bool)] =\n+    /// &[...]\n+    /// ```\n+    /// This code can be rewritten as\n+    /// ```ignore\n+    ///  static FOO: &[(&str, &str, fn(&Bar) -> bool)] = &[...]\n+    /// ```\n+    pub STATIC_STATIC_LIFETIME,\n+    style,\n+    \"Using explicit `'static` lifetime for statics when elision rules would allow omitting them.\"\n+}\n+\n+declare_lint_pass!(StaticStatic => [STATIC_STATIC_LIFETIME]);\n+\n+impl StaticStatic {\n+    // Recursively visit types\n+    fn visit_type(&mut self, ty: &Ty, cx: &EarlyContext<'_>) {\n+        match ty.node {\n+            // Be careful of nested structures (arrays and tuples)\n+            TyKind::Array(ref ty, _) => {\n+                self.visit_type(&*ty, cx);\n+            },\n+            TyKind::Tup(ref tup) => {\n+                for tup_ty in tup {\n+                    self.visit_type(&*tup_ty, cx);\n+                }\n+            },\n+            // This is what we are looking for !\n+            TyKind::Rptr(ref optional_lifetime, ref borrow_type) => {\n+                // Match the 'static lifetime\n+                if let Some(lifetime) = *optional_lifetime {\n+                    match borrow_type.ty.node {\n+                        TyKind::Path(..) | TyKind::Slice(..) | TyKind::Array(..) | TyKind::Tup(..) => {\n+                            if lifetime.ident.name == syntax::symbol::kw::StaticLifetime {\n+                                let snip = snippet(cx, borrow_type.ty.span, \"<type>\");\n+                                let sugg = format!(\"&{}\", snip);\n+                                span_lint_and_then(\n+                                    cx,\n+                                    STATIC_STATIC_LIFETIME,\n+                                    lifetime.ident.span,\n+                                    \"Statics have by default a `'static` lifetime\",\n+                                    |db| {\n+                                        db.span_suggestion(\n+                                            ty.span,\n+                                            \"consider removing `'static`\",\n+                                            sugg,\n+                                            Applicability::MachineApplicable, //snippet\n+                                        );\n+                                    },\n+                                );\n+                            }\n+                        },\n+                        _ => {},\n+                    }\n+                }\n+                self.visit_type(&*borrow_type.ty, cx);\n+            },\n+            TyKind::Slice(ref ty) => {\n+                self.visit_type(ty, cx);\n+            },\n+            _ => {},\n+        }\n+    }\n+}\n+\n+impl EarlyLintPass for StaticStatic {\n+    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n+        if !in_macro_or_desugar(item.span) {\n+            // Match only statics...\n+            if let ItemKind::Static(ref var_type, _, _) = item.node {\n+                self.visit_type(var_type, cx);\n+            }\n+        }\n+    }\n+\n+    // Don't check associated consts because `'static` cannot be elided on those (issue #2438)\n+}"}, {"sha": "04fecbfaeb275c86f9d75f9c9aa3cc0b1ca41231", "filename": "tests/ui/static_static_lifetime.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/tests%2Fui%2Fstatic_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/tests%2Fui%2Fstatic_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstatic_static_lifetime.rs?ref=16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "patch": "@@ -0,0 +1,49 @@\n+#[derive(Debug)]\n+struct Foo {}\n+\n+static VAR_ONE: &'static str = \"Test static #1\"; // ERROR Consider removing 'static.\n+\n+static VAR_TWO: &str = \"Test static #2\"; // This line should not raise a warning.\n+\n+static VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+\n+static VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+\n+static VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+\n+static VAR_SIX: &'static u8 = &5;\n+\n+static VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+\n+static VAR_HEIGHT: &'static Foo = &Foo {};\n+\n+static VAR_SLICE: &'static [u8] = b\"Test static #3\"; // ERROR Consider removing 'static.\n+\n+static VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+\n+static VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+\n+fn main() {\n+    let false_positive: &'static str = \"test\";\n+    println!(\"{}\", VAR_ONE);\n+    println!(\"{}\", VAR_TWO);\n+    println!(\"{:?}\", VAR_THREE);\n+    println!(\"{:?}\", VAR_FOUR);\n+    println!(\"{:?}\", VAR_FIVE);\n+    println!(\"{:?}\", VAR_SIX);\n+    println!(\"{:?}\", VAR_SEVEN);\n+    println!(\"{:?}\", VAR_HEIGHT);\n+    println!(\"{}\", false_positive);\n+}\n+\n+// trait Bar {\n+//     static TRAIT_VAR: &'static str;\n+// }\n+\n+// impl Foo {\n+//     static IMPL_VAR: &'static str = \"var\";\n+// }\n+\n+// impl Bar for Foo {\n+//     static TRAIT_VAR: &'static str = \"foo\";\n+// }"}, {"sha": "c4111b1f13c714b58e7df70bb6438fd66a64065e", "filename": "tests/ui/static_static_lifetime.stderr", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/tests%2Fui%2Fstatic_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16bd4796e998f7ef3c7eaecc60bf03349fdbb859/tests%2Fui%2Fstatic_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstatic_static_lifetime.stderr?ref=16bd4796e998f7ef3c7eaecc60bf03349fdbb859", "patch": "@@ -0,0 +1,82 @@\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:4:18\n+   |\n+LL | static VAR_ONE: &'static str = \"Test static #1\"; // ERROR Consider removing 'static.\n+   |                 -^^^^^^^---- help: consider removing `'static`: `&str`\n+   |\n+   = note: `-D clippy::static-static-lifetime` implied by `-D warnings`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:8:22\n+   |\n+LL | static VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+   |                     -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:10:33\n+   |\n+LL | static VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+   |                                -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:10:48\n+   |\n+LL | static VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+   |                                               -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:12:19\n+   |\n+LL | static VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+   |                  -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:12:31\n+   |\n+LL | static VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+   |                              -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:14:18\n+   |\n+LL | static VAR_SIX: &'static u8 = &5;\n+   |                 -^^^^^^^--- help: consider removing `'static`: `&u8`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:16:30\n+   |\n+LL | static VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+   |                             -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:16:40\n+   |\n+LL | static VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+   |                                       -^^^^^^^---- help: consider removing `'static`: `&str`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:18:21\n+   |\n+LL | static VAR_HEIGHT: &'static Foo = &Foo {};\n+   |                    -^^^^^^^---- help: consider removing `'static`: `&Foo`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:20:20\n+   |\n+LL | static VAR_SLICE: &'static [u8] = b\"Test static #3\"; // ERROR Consider removing 'static.\n+   |                   -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:22:20\n+   |\n+LL | static VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+   |                   -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n+\n+error: Statics have by default a `'static` lifetime\n+  --> $DIR/static_static_lifetime.rs:24:20\n+   |\n+LL | static VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+   |                   -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n+\n+error: aborting due to 13 previous errors\n+"}]}