{"sha": "ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "node_id": "C_kwDOAAsO6NoAKGVhMDc2YTRmOWZlZjlmOWQ3OTk1MzBhYWE2YmVmNzBkNmZiNDM1ZWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-19T15:55:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-19T15:55:19Z"}, "message": "Rollup merge of #101798 - y86-dev:const_waker, r=lcnr\n\nMake `from_waker`, `waker` and `from_raw` unstably `const`\n\nMake\n- `Context::from_waker`\n- `Context::waker`\n- `Waker::from_raw`\n\n`const`.\n\nAlso added a small test.", "tree": {"sha": "fa667cc9f526440d29c1753bae8ffbdae2ecac0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa667cc9f526440d29c1753bae8ffbdae2ecac0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjKJDnCRBK7hj4Ov3rIwAAatMIACQWWXhxnzrkqMazUhSV6yMW\nLnjAX2KZJft7zhVrA5/QVkGbM9EMG7eg7462P2YaKCkSNg4M31DxDCCmdPeiDuyO\nBonZ4Mgn5jCFuRTBtKxieMhOnAoxaLAUFUtwHrJqBvLp/gvP/BJ2iidvjdqLRflc\nthFTTwF1J4XwSka2tKNlqs4/cUQ5Xf74IgvJVRnHPe25+2DU2xe96/lDZLRSRrOs\nBZoFJyDwFBK0rbEpP9Adk9cFSE4FDnwNJyAuezpJ23+W/lDbK0hcRcOHYa1a6TrG\nwiTF29ZbjbGjcLZlgzNpE25R511PhM1UmRHpHbuKb9iHl2f3kLRRmGxrqWK4Bsk=\n=bj4K\n-----END PGP SIGNATURE-----\n", "payload": "tree fa667cc9f526440d29c1753bae8ffbdae2ecac0e\nparent 27b1b04065edbb2c33f3790defc9f93fb4cefd02\nparent 8e848dc23f7c5e809553dc81072178c34066cc77\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663602919 +0200\ncommitter GitHub <noreply@github.com> 1663602919 +0200\n\nRollup merge of #101798 - y86-dev:const_waker, r=lcnr\n\nMake `from_waker`, `waker` and `from_raw` unstably `const`\n\nMake\n- `Context::from_waker`\n- `Context::waker`\n- `Waker::from_raw`\n\n`const`.\n\nAlso added a small test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "html_url": "https://github.com/rust-lang/rust/commit/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27b1b04065edbb2c33f3790defc9f93fb4cefd02", "url": "https://api.github.com/repos/rust-lang/rust/commits/27b1b04065edbb2c33f3790defc9f93fb4cefd02", "html_url": "https://github.com/rust-lang/rust/commit/27b1b04065edbb2c33f3790defc9f93fb4cefd02"}, {"sha": "8e848dc23f7c5e809553dc81072178c34066cc77", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e848dc23f7c5e809553dc81072178c34066cc77", "html_url": "https://github.com/rust-lang/rust/commit/8e848dc23f7c5e809553dc81072178c34066cc77"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "ce71cd600fcbbf1f2acc25fd84c30e4194eb7245", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "patch": "@@ -109,6 +109,7 @@\n #![feature(core_intrinsics)]\n #![feature(const_eval_select)]\n #![feature(const_pin)]\n+#![feature(const_waker)]\n #![feature(cstr_from_bytes_until_nul)]\n #![feature(dispatch_from_dyn)]\n #![cfg_attr(not(bootstrap), feature(error_generic_member_access))]"}, {"sha": "c912b933065a5467597fdb9a66ba45c5c80631b3", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "patch": "@@ -145,6 +145,7 @@\n #![feature(const_default_impls)]\n #![feature(const_unicode_case_lookup)]\n #![feature(const_unsafecell_get_mut)]\n+#![feature(const_waker)]\n #![feature(core_panic)]\n #![feature(duration_consts_float)]\n #![feature(maybe_uninit_uninit_array)]"}, {"sha": "0cff972df3a5a8d4e961fe5fca309ab69a62b827", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "patch": "@@ -186,17 +186,19 @@ pub struct Context<'a> {\n impl<'a> Context<'a> {\n     /// Create a new `Context` from a [`&Waker`](Waker).\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n+    #[rustc_const_unstable(feature = \"const_waker\", issue = \"102012\")]\n     #[must_use]\n     #[inline]\n-    pub fn from_waker(waker: &'a Waker) -> Self {\n+    pub const fn from_waker(waker: &'a Waker) -> Self {\n         Context { waker, _marker: PhantomData }\n     }\n \n     /// Returns a reference to the [`Waker`] for the current task.\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n+    #[rustc_const_unstable(feature = \"const_waker\", issue = \"102012\")]\n     #[must_use]\n     #[inline]\n-    pub fn waker(&self) -> &'a Waker {\n+    pub const fn waker(&self) -> &'a Waker {\n         &self.waker\n     }\n }\n@@ -311,7 +313,8 @@ impl Waker {\n     #[inline]\n     #[must_use]\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n-    pub unsafe fn from_raw(waker: RawWaker) -> Waker {\n+    #[rustc_const_unstable(feature = \"const_waker\", issue = \"102012\")]\n+    pub const unsafe fn from_raw(waker: RawWaker) -> Waker {\n         Waker { waker }\n     }\n "}, {"sha": "46f603eaebaca8fe9b625521126fdd8e41cdc7da", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "patch": "@@ -74,6 +74,7 @@\n #![feature(iterator_try_reduce)]\n #![feature(const_mut_refs)]\n #![feature(const_pin)]\n+#![feature(const_waker)]\n #![feature(never_type)]\n #![feature(unwrap_infallible)]\n #![feature(pointer_byte_offsets)]"}, {"sha": "56be30e9282452b8b9aa0a8b59b9255f072dd350", "filename": "library/core/tests/task.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Ftests%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fcore%2Ftests%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Ftask.rs?ref=ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "patch": "@@ -1,4 +1,4 @@\n-use core::task::Poll;\n+use core::task::{Context, Poll, RawWaker, RawWakerVTable, Waker};\n \n #[test]\n fn poll_const() {\n@@ -12,3 +12,18 @@ fn poll_const() {\n     const IS_PENDING: bool = POLL.is_pending();\n     assert!(IS_PENDING);\n }\n+\n+#[test]\n+fn waker_const() {\n+    const VOID_TABLE: RawWakerVTable = RawWakerVTable::new(|_| VOID_WAKER, |_| {}, |_| {}, |_| {});\n+\n+    const VOID_WAKER: RawWaker = RawWaker::new(&(), &VOID_TABLE);\n+\n+    static WAKER: Waker = unsafe { Waker::from_raw(VOID_WAKER) };\n+\n+    static CONTEXT: Context<'static> = Context::from_waker(&WAKER);\n+\n+    static WAKER_REF: &'static Waker = CONTEXT.waker();\n+\n+    WAKER_REF.wake_by_ref();\n+}"}, {"sha": "07b40f64ac2b47e0ee66696967a2fd4c956b3e0d", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea076a4f9fef9f9d799530aaa6bef70d6fb435eb/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=ea076a4f9fef9f9d799530aaa6bef70d6fb435eb", "patch": "@@ -315,6 +315,7 @@\n #![feature(strict_provenance)]\n #![feature(maybe_uninit_uninit_array)]\n #![feature(const_maybe_uninit_uninit_array)]\n+#![feature(const_waker)]\n //\n // Library features (alloc):\n #![feature(alloc_layout_extra)]"}]}