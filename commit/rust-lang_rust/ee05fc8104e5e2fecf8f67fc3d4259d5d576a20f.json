{"sha": "ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMDVmYzgxMDRlNWUyZmVjZjhmNjdmYzNkNDI1OWQ1ZDU3NmEyMGY=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-06-20T12:36:53Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-07-03T15:54:58Z"}, "message": "First question mark in doctest", "tree": {"sha": "2dac5391e312ef82fb255fb963a8b584bd80e1a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dac5391e312ef82fb255fb963a8b584bd80e1a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f", "html_url": "https://github.com/rust-lang/rust/commit/ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb77a0398d0339f35f1b18595b375428babd431", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb77a0398d0339f35f1b18595b375428babd431", "html_url": "https://github.com/rust-lang/rust/commit/4fb77a0398d0339f35f1b18595b375428babd431"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "4648f1a006eca7113e37ab6a379bab27cff9d40e", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=ee05fc8104e5e2fecf8f67fc3d4259d5d576a20f", "patch": "@@ -335,11 +335,14 @@ macro_rules! r#try {\n /// ```\n /// use std::io::Write;\n ///\n-/// let mut w = Vec::new();\n-/// write!(&mut w, \"test\").unwrap();\n-/// write!(&mut w, \"formatted {}\", \"arguments\").unwrap();\n+/// fn main() -> std::io::Result<()> {\n+///     let mut w = Vec::new();\n+///     write!(&mut w, \"test\")?;\n+///     write!(&mut w, \"formatted {}\", \"arguments\")?;\n ///\n-/// assert_eq!(w, b\"testformatted arguments\");\n+///     assert_eq!(w, b\"testformatted arguments\");\n+///     Ok(())\n+/// }\n /// ```\n ///\n /// A module can import both `std::fmt::Write` and `std::io::Write` and call `write!` on objects"}]}