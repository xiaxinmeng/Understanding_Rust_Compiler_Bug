{"sha": "5d05ae7235743c150ca1aa96c31f0421caf5440f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMDVhZTcyMzU3NDNjMTUwY2ExYWE5NmMzMWYwNDIxY2FmNTQ0MGY=", "commit": {"author": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-12T14:43:13Z"}, "committer": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-12T14:43:13Z"}, "message": "Document `if` keyword.", "tree": {"sha": "fbf25c3b892ac9728ae9ac9194185a3dc6f3faff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbf25c3b892ac9728ae9ac9194185a3dc6f3faff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d05ae7235743c150ca1aa96c31f0421caf5440f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d05ae7235743c150ca1aa96c31f0421caf5440f", "html_url": "https://github.com/rust-lang/rust/commit/5d05ae7235743c150ca1aa96c31f0421caf5440f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d05ae7235743c150ca1aa96c31f0421caf5440f/comments", "author": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a66388f3f58d679eaee4c89dbde1f8b26a009e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a66388f3f58d679eaee4c89dbde1f8b26a009e", "html_url": "https://github.com/rust-lang/rust/commit/f7a66388f3f58d679eaee4c89dbde1f8b26a009e"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "d1f799fc9808f4b28994a26c449bd337e7f10575", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/5d05ae7235743c150ca1aa96c31f0421caf5440f/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d05ae7235743c150ca1aa96c31f0421caf5440f/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=5d05ae7235743c150ca1aa96c31f0421caf5440f", "patch": "@@ -363,6 +363,84 @@ mod fn_keyword { }\n /// [Reference]: https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops\n mod for_keyword { }\n \n+#[doc(keyword = \"if\")]\n+//\n+/// If statements and expressions.\n+///\n+/// `if` is a familiar construct to most programmers, and is the main way you'll often do logic in\n+/// your code. However, unlike in most languages, `if` blocks can also act as expressions.\n+///\n+/// ```rust\n+/// # let rude = true;\n+/// if 1 == 2 {\n+///     println!(\"whoops, mathematics broke\");\n+/// } else {\n+///     println!(\"everything's fine!\");\n+/// }\n+///\n+/// let greeting = if rude {\n+///     \"sup nerd.\"\n+/// } else {\n+///     \"hello, friend!\"\n+/// };\n+///\n+/// if let Ok(x) = \"123\".parse::<i32>() {\n+///     println!(\"{} double that and you get {}!\", greeting, x * 2);\n+/// }\n+/// ```\n+///\n+/// Shown above are the three typical forms an `if` block comes in. First is the usual kind of\n+/// thing you'd see in many languages, with an optional `else` block. Second uses `if` as an\n+/// expression, which is only possible if all branches return the same type. An `if` expression can\n+/// be used everywhere you'd expect. The third kind of `if` block is an `if let` block, which\n+/// behaves similarly to using a [`match`] expression:\n+///\n+/// ```rust\n+/// if let Some(x) = Some(123) {\n+///     // code\n+///     # let _ = x;\n+/// } else {\n+///     // something else\n+/// }\n+///\n+/// match Some(123) {\n+///     Some(x) => {\n+///         // code\n+///         # let _ = x;\n+///     },\n+///     _ => {\n+///         // something else\n+///     },\n+/// }\n+/// ```\n+///\n+/// See [`let`] for more information on pattern bindings.\n+///\n+/// Each kind of `if` expression can be mixed and matched as needed.\n+///\n+/// ```rust\n+/// if true == false {\n+///     println!(\"oh no\");\n+/// } else if \"something\" == \"other thing\" {\n+///     println!(\"oh dear\");\n+/// } else if let Some(200) = \"blarg\".parse::<i32>().ok() {\n+///     println!(\"uh oh\");\n+/// } else {\n+///     println!(\"phew, nothing's broken\");\n+/// }\n+/// ```\n+///\n+/// The `if` keyword is used in one other place in Rust, namely as a part of pattern matching\n+/// itself, allowing patterns such as `Some(x) if x > 200` to be used.\n+///\n+/// For more information on `if` expressions, see the [Rust book] or the [Reference].\n+///\n+/// [`match`]: keyword.match.html\n+/// [`let`]: keyword.let.html\n+/// [Rust book]: https://doc.rust-lang.org/stable/book/2018-edition/ch03-05-control-flow.html#if-expressions\n+/// [Reference]: https://doc.rust-lang.org/reference/expressions/if-expr.html\n+mod if_keyword { }\n+\n #[doc(keyword = \"let\")]\n //\n /// The `let` keyword."}]}