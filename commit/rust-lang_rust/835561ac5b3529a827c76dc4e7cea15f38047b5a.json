{"sha": "835561ac5b3529a827c76dc4e7cea15f38047b5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNTU2MWFjNWIzNTI5YTgyN2M3NmRjNGU3Y2VhMTVmMzgwNDdiNWE=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-20T09:55:26Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-20T09:55:26Z"}, "message": "Make `os_str_bytes::{Buf, Slice}` `pub` and `repr(transparent)`", "tree": {"sha": "a6543ddae0ee1660f0cce9c8ae7f49a77bab8faf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6543ddae0ee1660f0cce9c8ae7f49a77bab8faf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835561ac5b3529a827c76dc4e7cea15f38047b5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835561ac5b3529a827c76dc4e7cea15f38047b5a", "html_url": "https://github.com/rust-lang/rust/commit/835561ac5b3529a827c76dc4e7cea15f38047b5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835561ac5b3529a827c76dc4e7cea15f38047b5a/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a96d2272eadac00d9fb953e92bfdcd51e6a4b22", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a96d2272eadac00d9fb953e92bfdcd51e6a4b22", "html_url": "https://github.com/rust-lang/rust/commit/1a96d2272eadac00d9fb953e92bfdcd51e6a4b22"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "470f401a6d254ef954c65f9cf5e5e6f04fb3093f", "filename": "library/std/src/sys_common/os_str_bytes.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/835561ac5b3529a827c76dc4e7cea15f38047b5a/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835561ac5b3529a827c76dc4e7cea15f38047b5a/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs?ref=835561ac5b3529a827c76dc4e7cea15f38047b5a", "patch": "@@ -14,17 +14,13 @@ use crate::sys_common::{AsInner, IntoInner};\n use core::str::lossy::Utf8Lossy;\n \n #[derive(Hash)]\n-pub(crate) struct Buf {\n+#[repr(transparent)]\n+pub struct Buf {\n     pub inner: Vec<u8>,\n }\n \n-// FIXME:\n-// `Buf::as_slice` current implementation relies\n-// on `Slice` being layout-compatible with `[u8]`.\n-// When attribute privacy is implemented, `Slice` should be annotated as `#[repr(transparent)]`.\n-// Anyway, `Slice` representation and layout are considered implementation detail, are\n-// not documented and must not be relied upon.\n-pub(crate) struct Slice {\n+#[repr(transparent)]\n+pub struct Slice {\n     pub inner: [u8],\n }\n "}]}