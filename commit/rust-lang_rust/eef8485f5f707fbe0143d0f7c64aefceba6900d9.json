{"sha": "eef8485f5f707fbe0143d0f7c64aefceba6900d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZjg0ODVmNWY3MDdmYmUwMTQzZDBmN2M2NGFlZmNlYmE2OTAwZDk=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-22T22:42:26Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-22T22:42:26Z"}, "message": "More hygiene tests", "tree": {"sha": "9dd51fd3477451233db5dd57d56957c3a65cd1a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd51fd3477451233db5dd57d56957c3a65cd1a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef8485f5f707fbe0143d0f7c64aefceba6900d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef8485f5f707fbe0143d0f7c64aefceba6900d9", "html_url": "https://github.com/rust-lang/rust/commit/eef8485f5f707fbe0143d0f7c64aefceba6900d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef8485f5f707fbe0143d0f7c64aefceba6900d9/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a6864dcd2bdebc67a0994a18bce7413893f1448", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a6864dcd2bdebc67a0994a18bce7413893f1448", "html_url": "https://github.com/rust-lang/rust/commit/9a6864dcd2bdebc67a0994a18bce7413893f1448"}], "stats": {"total": 78, "additions": 75, "deletions": 3}, "files": [{"sha": "4507ba50192dd67ccae1245cebb7c3245a1a0d4d", "filename": "src/test/run-pass/hygiene.rs", "status": "modified", "additions": 75, "deletions": 3, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/eef8485f5f707fbe0143d0f7c64aefceba6900d9/src%2Ftest%2Frun-pass%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef8485f5f707fbe0143d0f7c64aefceba6900d9/src%2Ftest%2Frun-pass%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhygiene.rs?ref=eef8485f5f707fbe0143d0f7c64aefceba6900d9", "patch": "@@ -10,16 +10,14 @@\n \n #![allow(unused)]\n \n-fn main() {\n+fn f() {\n     let x = 0;\n     macro_rules! foo { () => {\n         assert_eq!(x, 0);\n     } }\n \n     let x = 1;\n     foo!();\n-\n-    g();\n }\n \n fn g() {\n@@ -42,3 +40,77 @@ fn g() {\n     assert_eq!(m2!(), (4, 0));\n     assert_eq!(m3!(), (4, 1));\n }\n+\n+mod foo {\n+    macro_rules! m {\n+        ($f:ident : |$x:ident| $e:expr) => {\n+            pub fn $f() -> (i32, i32) {\n+                let x = 0;\n+                let $x = 1;\n+                (x, $e)\n+            }\n+        }\n+    }\n+\n+    m!(f: |x| x + 10);\n+}\n+\n+fn interpolated_pattern() {\n+    let x = 0;\n+    macro_rules! m {\n+        ($p:pat, $e:expr) => {\n+            let $p = 1;\n+            assert_eq!((x, $e), (0, 1));\n+        }\n+    }\n+\n+    m!(x, x);\n+}\n+\n+fn patterns_in_macro_generated_macros() {\n+    let x = 0;\n+    macro_rules! m {\n+        ($a:expr, $b:expr) => {\n+            assert_eq!(x, 0);\n+            let x = $a;\n+            macro_rules! n {\n+                () => {\n+                    (x, $b)\n+                }\n+            }\n+        }\n+    }\n+\n+    let x = 1;\n+    m!(2, x);\n+\n+    let x = 3;\n+    assert_eq!(n!(), (2, 1));\n+}\n+\n+fn match_hygiene() {\n+    let x = 0;\n+\n+    macro_rules! m {\n+        ($p:pat, $e:expr) => {\n+            for result in &[Ok(1), Err(1)] {\n+                match *result {\n+                    $p => { assert_eq!(($e, x), (1, 0)); }\n+                    Err(x) => { assert_eq!(($e, x), (2, 1)); }\n+                }\n+            }\n+        }\n+    }\n+\n+    let x = 2;\n+    m!(Ok(x), x);\n+}\n+\n+fn main() {\n+    f();\n+    g();\n+    assert_eq!(foo::f(), (0, 11));\n+    interpolated_pattern();\n+    patterns_in_macro_generated_macros();\n+    match_hygiene();\n+}"}]}