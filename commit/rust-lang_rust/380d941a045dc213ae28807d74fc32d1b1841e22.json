{"sha": "380d941a045dc213ae28807d74fc32d1b1841e22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MGQ5NDFhMDQ1ZGMyMTNhZTI4ODA3ZDc0ZmMzMmQxYjE4NDFlMjI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-26T17:35:25Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-05-31T16:48:28Z"}, "message": "Adapt stderr and fixed files", "tree": {"sha": "555a03edb455bec125d92bc484d54e6e1274e0ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/555a03edb455bec125d92bc484d54e6e1274e0ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/380d941a045dc213ae28807d74fc32d1b1841e22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl7T390ACgkQaTCGhp1Q\nZjenRA/+Jv9Xbeadmbz6e/3b5KzhatVKLebjytxWxwWle7+pjUVaQkVx4l315KrQ\nis68kjiETLbRwl3mhiENELJkIBiSgCzEF1494U/2h263bWJK3m44CcNLBfYVKwFx\nB6NTtfsNS712nVxfa7emNJxnwkEPcLx1XIn+9icMRqK/ffncvkInmrYtTJFMOxou\nZrsSiz1Xnku3XXSW82DXkPiuqaAxlrseBOuXjPnRcAbT/IyB1f+AzUEJrydiUzZa\nclbAJtWc7o1eyUjDx6+CdzSElCV0jPgcr/8CIyqvbGc5qre0xpZBVc4BtFEJq+8j\ngVEIesdELfj+H2PHdXAy2+AHK5prJrsXRESMBX7/GX0VABnq+3sFbbeswDd8kCls\ns/7x/udWB3k1ppron8LqK1g3KpIWTTyY064xpCQYKjcGyrHC8VhprnaakmghA5oa\nDfTSom2am855XnGca9A202+AV/zzpguFdFrmIN3BVSa9uQeGklmD1u7xjwSXZbYD\ngc57tqc3AQKxBZjImxNIvtFT1MA2hwV3WSxBbYO1TJ4YmPXaL9JTz3RUB1LZjnaa\n1rv9yMym0F4r9g4u74XmOwWWehJj2AfbQMQC961QMrENwVLnzKHGTK7uzQqi0e/k\nVKg3yXWtmVQAGE9GOyzcMjvEbt1Ue8uQBB8Yedz3rYnQ+cVYRcI=\n=Xi7x\n-----END PGP SIGNATURE-----", "payload": "tree 555a03edb455bec125d92bc484d54e6e1274e0ce\nparent 0ab823c509897ce2f516feb760fe1bf02cf77443\nauthor flip1995 <hello@philkrones.com> 1566840925 +0200\ncommitter flip1995 <hello@philkrones.com> 1590943708 +0200\n\nAdapt stderr and fixed files\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/380d941a045dc213ae28807d74fc32d1b1841e22", "html_url": "https://github.com/rust-lang/rust/commit/380d941a045dc213ae28807d74fc32d1b1841e22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/380d941a045dc213ae28807d74fc32d1b1841e22/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab823c509897ce2f516feb760fe1bf02cf77443", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ab823c509897ce2f516feb760fe1bf02cf77443", "html_url": "https://github.com/rust-lang/rust/commit/0ab823c509897ce2f516feb760fe1bf02cf77443"}], "stats": {"total": 151, "additions": 118, "deletions": 33}, "files": [{"sha": "67c6bdf8873b628a961d529c67a89f1de3b17397", "filename": "tests/ui/unit_arg.fixed", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/380d941a045dc213ae28807d74fc32d1b1841e22/tests%2Fui%2Funit_arg.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/380d941a045dc213ae28807d74fc32d1b1841e22/tests%2Fui%2Funit_arg.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.fixed?ref=380d941a045dc213ae28807d74fc32d1b1841e22", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![warn(clippy::unit_arg)]\n-#![allow(unused_braces, clippy::no_effect, unused_must_use)]\n+#![allow(clippy::no_effect, unused_must_use, unused_variables)]\n \n use std::fmt::Debug;\n \n@@ -21,13 +21,21 @@ impl Bar {\n }\n \n fn bad() {\n-    foo(());\n-    foo(());\n-    foo(());\n-    foo(());\n-    foo3((), 2, 2);\n+    {}; foo(());\n+    {\n+        1;\n+    }; foo(());\n+    foo(1); foo(());\n+    {\n+        foo(1);\n+        foo(2);\n+    }; foo(());\n+    {}; foo3((), 2, 2);\n     let b = Bar;\n-    b.bar(());\n+    {\n+        1;\n+    }; b.bar(());\n+    foo(0); foo(1); taking_multiple_units((), ());\n }\n \n fn ok() {\n@@ -58,6 +66,13 @@ mod issue_2945 {\n     }\n }\n \n+#[allow(dead_code)]\n+fn returning_expr() -> Option<()> {\n+    foo(1); Some(())\n+}\n+\n+fn taking_multiple_units(a: (), b: ()) {}\n+\n fn main() {\n     bad();\n     ok();"}, {"sha": "c6e465b2e4c4bd921defbbcf8964a37e34b5b84e", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/380d941a045dc213ae28807d74fc32d1b1841e22/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380d941a045dc213ae28807d74fc32d1b1841e22/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=380d941a045dc213ae28807d74fc32d1b1841e22", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![warn(clippy::unit_arg)]\n-#![allow(unused_braces, clippy::no_effect, unused_must_use)]\n+#![allow(clippy::no_effect, unused_must_use, unused_variables)]\n \n use std::fmt::Debug;\n \n@@ -35,6 +35,7 @@ fn bad() {\n     b.bar({\n         1;\n     });\n+    taking_multiple_units(foo(0), foo(1));\n }\n \n fn ok() {\n@@ -65,6 +66,13 @@ mod issue_2945 {\n     }\n }\n \n+#[allow(dead_code)]\n+fn returning_expr() -> Option<()> {\n+    Some(foo(1))\n+}\n+\n+fn taking_multiple_units(a: (), b: ()) {}\n+\n fn main() {\n     bad();\n     ok();"}, {"sha": "ce9ab2f1271a75ec4cf41be9b0ff92201c769602", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 87, "deletions": 25, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/380d941a045dc213ae28807d74fc32d1b1841e22/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/380d941a045dc213ae28807d74fc32d1b1841e22/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=380d941a045dc213ae28807d74fc32d1b1841e22", "patch": "@@ -1,79 +1,141 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:24:9\n+  --> $DIR/unit_arg.rs:24:5\n    |\n LL |     foo({});\n-   |         ^^\n+   |     ^^^^^^^\n    |\n    = note: `-D clippy::unit-arg` implied by `-D warnings`\n-help: if you intended to pass a unit value, use a unit literal instead\n+help: move the expressions in front of the call...\n+   |\n+LL |     {}; foo({});\n+   |     ^^^\n+help: ...and use unit literals instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:25:9\n+  --> $DIR/unit_arg.rs:25:5\n    |\n-LL |       foo({\n-   |  _________^\n+LL | /     foo({\n LL | |         1;\n LL | |     });\n-   | |_____^\n+   | |______^\n+   |\n+help: move the expressions in front of the call...\n+   |\n+LL |     {\n+LL |         1;\n+LL |     }; foo({\n    |\n-help: if you intended to pass a unit value, use a unit literal instead\n+help: ...and use unit literals instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:28:9\n+  --> $DIR/unit_arg.rs:28:5\n    |\n LL |     foo(foo(1));\n-   |         ^^^^^^\n+   |     ^^^^^^^^^^^\n    |\n-help: if you intended to pass a unit value, use a unit literal instead\n+help: move the expressions in front of the call...\n+   |\n+LL |     foo(1); foo(foo(1));\n+   |     ^^^^^^^\n+help: ...and use unit literals instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:29:9\n+  --> $DIR/unit_arg.rs:29:5\n    |\n-LL |       foo({\n-   |  _________^\n+LL | /     foo({\n LL | |         foo(1);\n LL | |         foo(2);\n LL | |     });\n-   | |_____^\n+   | |______^\n+   |\n+help: move the expressions in front of the call...\n+   |\n+LL |     {\n+LL |         foo(1);\n+LL |         foo(2);\n+LL |     }; foo({\n    |\n-help: if you intended to pass a unit value, use a unit literal instead\n+help: ...and use unit literals instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:33:10\n+  --> $DIR/unit_arg.rs:33:5\n    |\n LL |     foo3({}, 2, 2);\n-   |          ^^\n+   |     ^^^^^^^^^^^^^^\n+   |\n+help: move the expressions in front of the call...\n    |\n-help: if you intended to pass a unit value, use a unit literal instead\n+LL |     {}; foo3({}, 2, 2);\n+   |     ^^^\n+help: ...and use unit literals instead\n    |\n LL |     foo3((), 2, 2);\n    |          ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:35:11\n+  --> $DIR/unit_arg.rs:35:5\n    |\n-LL |       b.bar({\n-   |  ___________^\n+LL | /     b.bar({\n LL | |         1;\n LL | |     });\n-   | |_____^\n+   | |______^\n+   |\n+help: move the expressions in front of the call...\n    |\n-help: if you intended to pass a unit value, use a unit literal instead\n+LL |     {\n+LL |         1;\n+LL |     }; b.bar({\n+   |\n+help: ...and use unit literals instead\n    |\n LL |     b.bar(());\n    |           ^^\n \n-error: aborting due to 6 previous errors\n+error: passing a unit value to a function\n+  --> $DIR/unit_arg.rs:38:5\n+   |\n+LL |     taking_multiple_units(foo(0), foo(1));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: move the expressions in front of the call...\n+   |\n+LL |     foo(0); foo(1); taking_multiple_units(foo(0), foo(1));\n+   |     ^^^^^^^^^^^^^^^\n+help: ...and use unit literals instead\n+   |\n+LL |     taking_multiple_units((), foo(1));\n+   |                           ^^\n+help: ...and use unit literals instead\n+   |\n+LL |     taking_multiple_units(foo(0), ());\n+   |                                   ^^\n+\n+error: passing a unit value to a function\n+  --> $DIR/unit_arg.rs:71:5\n+   |\n+LL |     Some(foo(1))\n+   |     ^^^^^^^^^^^^\n+   |\n+help: move the expressions in front of the call...\n+   |\n+LL |     foo(1); Some(foo(1))\n+   |     ^^^^^^^\n+help: ...and use unit literals instead\n+   |\n+LL |     Some(())\n+   |          ^^\n+\n+error: aborting due to 8 previous errors\n "}]}