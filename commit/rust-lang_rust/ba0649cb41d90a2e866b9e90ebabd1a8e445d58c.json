{"sha": "ba0649cb41d90a2e866b9e90ebabd1a8e445d58c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMDY0OWNiNDFkOTBhMmU4NjZiOWU5MGViYWJkMWE4ZTQ0NWQ1OGM=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-11T15:42:32Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-13T00:15:29Z"}, "message": "rustc: Hash includes direct dependent crates", "tree": {"sha": "2ef0369234123ed264dacc105679cf110bd3f671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ef0369234123ed264dacc105679cf110bd3f671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c", "html_url": "https://github.com/rust-lang/rust/commit/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "html_url": "https://github.com/rust-lang/rust/commit/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "ed0ddad7fe2001e64d28b1d6e5b8c525d33fab57", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=ba0649cb41d90a2e866b9e90ebabd1a8e445d58c", "patch": "@@ -348,7 +348,7 @@ mod write {\n  *  - Define CMETA as all the non-name, non-vers exported meta tags in the\n  *    crate (in sorted order).\n  *\n- *  - Define CMH as hash(CMETA).\n+ *  - Define CMH as hash(CMETA + hashes of dependent crates).\n  *\n  *  - Compile our crate to lib CNAME-CMH-CVERS.so\n  *\n@@ -395,7 +395,8 @@ fn build_link_meta(sess: session::session, c: ast::crate, output: str,\n \n     // This calculates CMH as defined above\n     fn crate_meta_extras_hash(sha: sha1, _crate: ast::crate,\n-                              metas: provided_metas) -> str {\n+                              metas: provided_metas,\n+                              dep_hashes: [str]) -> str {\n         fn len_and_str(s: str) -> str {\n             ret #fmt[\"%u_%s\", str::byte_len(s), s];\n         }\n@@ -421,6 +422,11 @@ fn build_link_meta(sess: session::session, c: ast::crate, output: str,\n               }\n             }\n         }\n+\n+        for dh in dep_hashes {\n+            sha.input_str(len_and_str(dh));\n+        }\n+\n         ret truncated_sha1_result(sha);\n     }\n \n@@ -463,7 +469,9 @@ fn build_link_meta(sess: session::session, c: ast::crate, output: str,\n     let provided_metas = provided_link_metas(sess, c);\n     let name = crate_meta_name(sess, c, output, provided_metas);\n     let vers = crate_meta_vers(sess, c, provided_metas);\n-    let extras_hash = crate_meta_extras_hash(sha, c, provided_metas);\n+    let dep_hashes = cstore::get_dep_hashes(sess.get_cstore());\n+    let extras_hash =\n+        crate_meta_extras_hash(sha, c, provided_metas, dep_hashes);\n \n     ret {name: name, vers: vers, extras_hash: extras_hash};\n }"}, {"sha": "e7ca671fea89092c4217ee84e9804786183b0ee0", "filename": "src/comp/metadata/cstore.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c/src%2Fcomp%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba0649cb41d90a2e866b9e90ebabd1a8e445d58c/src%2Fcomp%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcstore.rs?ref=ba0649cb41d90a2e866b9e90ebabd1a8e445d58c", "patch": "@@ -20,6 +20,8 @@ export add_used_link_args;\n export get_used_link_args;\n export add_use_stmt_cnum;\n export get_use_stmt_cnum;\n+export get_dep_hashes;\n+\n \n // A map from external crate numbers (as decoded from some crate file) to\n // local crate numbers (as generated during this session). Each external\n@@ -116,6 +118,29 @@ fn get_use_stmt_cnum(cstore: cstore, use_id: ast::node_id) -> ast::crate_num {\n     ret p(cstore).use_crate_map.get(use_id);\n }\n \n+// returns hashes of crates directly used by this crate. Hashes are\n+// sorted by crate name.\n+fn get_dep_hashes(cstore: cstore) -> [str] {\n+    type crate_hash = {name: str, hash: str};\n+    let result = [];\n+\n+    p(cstore).use_crate_map.values {|cnum|\n+        let cdata = cstore::get_crate_data(cstore, cnum);\n+        let hash = decoder::get_crate_hash(cdata.data);\n+        log #fmt(\"Add hash[%s]: %s\", cdata.name, hash);\n+        result += [{name: cdata.name, hash: hash}];\n+    };\n+    fn lteq(a: crate_hash, b: crate_hash) -> bool {\n+        ret a.name <= b.name;\n+    }\n+    let sorted = std::sort::merge_sort(lteq, result);\n+    log \"sorted:\";\n+    for x in sorted {\n+        log #fmt(\"  hash[%s]: %s\", x.name, x.hash);\n+    }\n+    fn mapper(ch: crate_hash) -> str { ret ch.hash; }\n+    ret vec::map(mapper, sorted);\n+}\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}]}