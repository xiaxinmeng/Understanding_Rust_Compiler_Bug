{"sha": "987020846ce40ce479df3d62adc47ca4609a5317", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NzAyMDg0NmNlNDBjZTQ3OWRmM2Q2MmFkYzQ3Y2E0NjA5YTUzMTc=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2018-06-10T21:26:26Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2018-06-10T21:39:16Z"}, "message": "Enable fall through past $:lifetime matcher", "tree": {"sha": "8acd890463cb09437699466adb50dac319ebc20c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8acd890463cb09437699466adb50dac319ebc20c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/987020846ce40ce479df3d62adc47ca4609a5317", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJbHZqEAAoJEPm6FDuV/22CI1QP/RPjg5BqHg9H7OoVKgeYqpUA\n+Hs87xviP29lfnDHEcwU2hYEoA84IU3flbaLR6TSspZZxGcCu7+qXtI8JoJh9ANF\neIHMg8BVqwlwwU7zLTouUhpWmIN7yr/T2iknQy4RwE90itOzqzt6KduCy9I7fzVe\nV3kRNXNoP4GJ0fgvefMzAEPCoCQ6QBnx3DME/8dTmw1XzmD1+nMhdTRkHCa6RbIt\nhc9pC8vrs1r8q7a21TsgSkXmBbIg9tJy6lkkH0Q1vBQr0n86JzSo6dacu0UWr2yy\nc2FtfhEnN1m/y7w/AP/CJV2a/2BErLJZ+AY6IQCh+QdZlCRnSh1vVJGZffK3dBRn\n4hszhh1sOobSWx2+6N3Ii/zmSpYZfMZsliLhnGQQrX5uBzLXw1YjOkbkyTnCTCZz\nnyVZWO0geHxp8dcvhmVuulxQcRvSk3tpmkHdFKibezbdak+MX0xNMTgrjw92AuNl\neMk/aCkz42RRwCWChzNVcPK/NjonnJ/W4DDH/Bz3XEd2qQi48aGIZbiz1JwbaTqv\nR5Ao+acZGfcdZ2YH6X0VhT2RMfajVoQdA3WvwYC9+Qr89HQqKaYq4FOemeWOjjSh\nFTS1mAx28LajYTrruFwdtrF6hS1gi8SMW7NBOEyWin+miA7FsHQM5AupDdnYi6Cr\nRvTWVMYbeK5+TRaechN9\n=J8qO\n-----END PGP SIGNATURE-----", "payload": "tree 8acd890463cb09437699466adb50dac319ebc20c\nparent cabb679bf1bf37d34b0de3d60f655cf5e4185db6\nauthor David Tolnay <dtolnay@gmail.com> 1528665986 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1528666756 -0700\n\nEnable fall through past $:lifetime matcher\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/987020846ce40ce479df3d62adc47ca4609a5317", "html_url": "https://github.com/rust-lang/rust/commit/987020846ce40ce479df3d62adc47ca4609a5317", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/987020846ce40ce479df3d62adc47ca4609a5317/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "html_url": "https://github.com/rust-lang/rust/commit/cabb679bf1bf37d34b0de3d60f655cf5e4185db6"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "fe458fa9977a5552f6c1d6f6f9f862dbf614e8df", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/987020846ce40ce479df3d62adc47ca4609a5317/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987020846ce40ce479df3d62adc47ca4609a5317/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=987020846ce40ce479df3d62adc47ca4609a5317", "patch": "@@ -827,6 +827,14 @@ fn may_begin_with(name: &str, token: &Token) -> bool {\n             Token::Interpolated(ref nt) => may_be_ident(&nt.0),\n             _ => false,\n         },\n+        \"lifetime\" => match *token {\n+            Token::Lifetime(_) => true,\n+            Token::Interpolated(ref nt) => match nt.0 {\n+                token::NtLifetime(_) | token::NtTT(_) => true,\n+                _ => false,\n+            },\n+            _ => false,\n+        },\n         _ => match *token {\n             token::CloseDelim(_) => false,\n             _ => true,"}, {"sha": "647d7aaa759c31969232fbf5d7a60223e6619c2f", "filename": "src/test/compile-fail/macro-non-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/987020846ce40ce479df3d62adc47ca4609a5317/src%2Ftest%2Fcompile-fail%2Fmacro-non-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987020846ce40ce479df3d62adc47ca4609a5317/src%2Ftest%2Fcompile-fail%2Fmacro-non-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-non-lifetime.rs?ref=987020846ce40ce479df3d62adc47ca4609a5317", "patch": "@@ -16,5 +16,5 @@ macro_rules! m { ($x:lifetime) => { } }\n \n fn main() {\n     m!(a);\n-    //~^ ERROR expected a lifetime, found `a`\n+    //~^ ERROR no rules expected the token `a`\n }"}, {"sha": "c371a33257f4e3fe373e81a9b6b78dd232d8d263", "filename": "src/test/run-pass/macro-first-set.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/987020846ce40ce479df3d62adc47ca4609a5317/src%2Ftest%2Frun-pass%2Fmacro-first-set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/987020846ce40ce479df3d62adc47ca4609a5317/src%2Ftest%2Frun-pass%2Fmacro-first-set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-first-set.rs?ref=987020846ce40ce479df3d62adc47ca4609a5317", "patch": "@@ -199,6 +199,40 @@ fn test_24189() {\n \n //}}}\n \n+//{{{ issue 50903 ==============================================================\n+\n+macro_rules! foo_50903 {\n+    ($($lif:lifetime ,)* #) => {};\n+}\n+\n+foo_50903!('a, 'b, #);\n+foo_50903!('a, #);\n+foo_50903!(#);\n+\n+//}}}\n+\n+//{{{ issue 51477 ==============================================================\n+\n+macro_rules! foo_51477 {\n+    ($lifetime:lifetime) => {\n+        \"last token is lifetime\"\n+    };\n+    ($other:tt) => {\n+        \"last token is other\"\n+    };\n+    ($first:tt $($rest:tt)*) => {\n+        foo_51477!($($rest)*)\n+    };\n+}\n+\n+fn test_51477() {\n+    assert_eq!(\"last token is lifetime\", foo_51477!('a));\n+    assert_eq!(\"last token is other\", foo_51477!(@));\n+    assert_eq!(\"last token is lifetime\", foo_51477!(@ {} 'a));\n+}\n+\n+//}}}\n+\n //{{{ some more tests ==========================================================\n \n macro_rules! test_block {\n@@ -234,12 +268,21 @@ macro_rules! test_meta_block {\n \n test_meta_block!(windows {});\n \n+macro_rules! test_lifetime {\n+    (1. $($l:lifetime)* $($b:block)*) => {};\n+    (2. $($b:block)* $($l:lifetime)*) => {};\n+}\n+\n+test_lifetime!(1. 'a 'b {} {});\n+test_lifetime!(2. {} {} 'a 'b);\n+\n //}}}\n \n fn main() {\n     test_26444();\n     test_40569();\n     test_35650();\n     test_24189();\n+    test_51477();\n }\n "}]}