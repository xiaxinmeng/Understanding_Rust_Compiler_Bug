{"sha": "2adf2cd2f743e13d79fd4669bd6f673023a243f2", "node_id": "C_kwDOAAsO6NoAKDJhZGYyY2QyZjc0M2UxM2Q3OWZkNDY2OWJkNmY2NzMwMjNhMjQzZjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-15T17:01:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-15T17:02:19Z"}, "message": "Account for debuginfo on _0 without naming it.", "tree": {"sha": "dc7086c8a6342dd09eeee3b76e15719622764eee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc7086c8a6342dd09eeee3b76e15719622764eee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2adf2cd2f743e13d79fd4669bd6f673023a243f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2adf2cd2f743e13d79fd4669bd6f673023a243f2", "html_url": "https://github.com/rust-lang/rust/commit/2adf2cd2f743e13d79fd4669bd6f673023a243f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2adf2cd2f743e13d79fd4669bd6f673023a243f2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7b998c02ad19dcc542b4c8121a336b00e107556", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b998c02ad19dcc542b4c8121a336b00e107556", "html_url": "https://github.com/rust-lang/rust/commit/e7b998c02ad19dcc542b4c8121a336b00e107556"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "6e32c28a42c65c2b1ad4a55b025c7c27bf580426", "filename": "compiler/rustc_codegen_ssa/src/mir/debuginfo.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2adf2cd2f743e13d79fd4669bd6f673023a243f2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2adf2cd2f743e13d79fd4669bd6f673023a243f2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fdebuginfo.rs?ref=2adf2cd2f743e13d79fd4669bd6f673023a243f2", "patch": "@@ -241,11 +241,6 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n     pub fn debug_introduce_local(&self, bx: &mut Bx, local: mir::Local) {\n         let full_debug_info = bx.sess().opts.debuginfo == DebugInfo::Full;\n \n-        // FIXME(eddyb) maybe name the return place as `_0` or `return`?\n-        if local == mir::RETURN_PLACE {\n-            return;\n-        }\n-\n         let vars = match &self.per_local_var_debug_info {\n             Some(per_local) => &per_local[local],\n             None => return,\n@@ -302,7 +297,8 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n \n         let local_ref = &self.locals[local];\n \n-        let name = if bx.sess().fewer_names() {\n+        // FIXME Should the return place be named?\n+        let name = if bx.sess().fewer_names() || local == mir::RETURN_PLACE {\n             None\n         } else {\n             Some(match whole_local_var.or(fallback_var.clone()) {"}]}