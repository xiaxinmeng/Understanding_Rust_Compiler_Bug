{"sha": "39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "node_id": "C_kwDOAAsO6NoAKDM5ZjRiZWU5OGUyYWQ2OWJiMjQ3YjU3YjZkNWJjOGRmMGI0ZjEwOTA", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-05-16T00:06:17Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-08-19T15:42:14Z"}, "message": "Move `only_used_in_recursion` back into `complexity`", "tree": {"sha": "43de6b2acb5d0280178eac8194a3ad3705334ced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43de6b2acb5d0280178eac8194a3ad3705334ced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "html_url": "https://github.com/rust-lang/rust/commit/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d95b67560c4cce38e07aed560abf7832eb5aeaa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d95b67560c4cce38e07aed560abf7832eb5aeaa7", "html_url": "https://github.com/rust-lang/rust/commit/d95b67560c4cce38e07aed560abf7832eb5aeaa7"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "fefac7632d8ef8d3b1613db32b407f00752e8cd1", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "patch": "@@ -252,6 +252,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),\n     LintId::of(non_octal_unix_permissions::NON_OCTAL_UNIX_PERMISSIONS),\n     LintId::of(octal_escapes::OCTAL_ESCAPES),\n+    LintId::of(only_used_in_recursion::ONLY_USED_IN_RECURSION),\n     LintId::of(operators::ABSURD_EXTREME_COMPARISONS),\n     LintId::of(operators::ASSIGN_OP_PATTERN),\n     LintId::of(operators::BAD_BIT_MASK),"}, {"sha": "aa247352f88fb653ccbc6572c45bb74caedc63c7", "filename": "clippy_lints/src/lib.register_complexity.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_complexity.rs?ref=39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "patch": "@@ -72,6 +72,7 @@ store.register_group(true, \"clippy::complexity\", Some(\"clippy_complexity\"), vec!\n     LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n     LintId::of(no_effect::NO_EFFECT),\n     LintId::of(no_effect::UNNECESSARY_OPERATION),\n+    LintId::of(only_used_in_recursion::ONLY_USED_IN_RECURSION),\n     LintId::of(operators::DOUBLE_COMPARISONS),\n     LintId::of(operators::DURATION_SUBSEC),\n     LintId::of(operators::IDENTITY_OP),"}, {"sha": "7171c655ccc8d67657114a6a326a290ea1c02a68", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "patch": "@@ -24,7 +24,6 @@ store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n     LintId::of(mutex_atomic::MUTEX_INTEGER),\n     LintId::of(non_send_fields_in_send_ty::NON_SEND_FIELDS_IN_SEND_TY),\n     LintId::of(nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES),\n-    LintId::of(only_used_in_recursion::ONLY_USED_IN_RECURSION),\n     LintId::of(option_if_let_else::OPTION_IF_LET_ELSE),\n     LintId::of(redundant_pub_crate::REDUNDANT_PUB_CRATE),\n     LintId::of(regex::TRIVIAL_REGEX),"}, {"sha": "774a3540d1e0c41bef19b00f44b955664de5c743", "filename": "clippy_lints/src/only_used_in_recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Fonly_used_in_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Fonly_used_in_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fonly_used_in_recursion.rs?ref=39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "patch": "@@ -80,7 +80,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.61.0\"]\n     pub ONLY_USED_IN_RECURSION,\n-    nursery,\n+    complexity,\n     \"arguments that is only used in recursion can be removed\"\n }\n impl_lint_pass!(OnlyUsedInRecursion => [ONLY_USED_IN_RECURSION]);"}, {"sha": "2d751c274679f9b64eef70d1b8af54d45bd7aad6", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=39f4bee98e2ad69bb247b57b6d5bc8df0b4f1090", "patch": "@@ -48,15 +48,15 @@ impl_lint_pass!(RedundantStaticLifetimes => [REDUNDANT_STATIC_LIFETIMES]);\n \n impl RedundantStaticLifetimes {\n     // Recursively visit types\n-    fn visit_type(&mut self, ty: &Ty, cx: &EarlyContext<'_>, reason: &str) {\n+    fn visit_type(ty: &Ty, cx: &EarlyContext<'_>, reason: &str) {\n         match ty.kind {\n             // Be careful of nested structures (arrays and tuples)\n             TyKind::Array(ref ty, _) | TyKind::Slice(ref ty) => {\n-                self.visit_type(ty, cx, reason);\n+                Self::visit_type(ty, cx, reason);\n             },\n             TyKind::Tup(ref tup) => {\n                 for tup_ty in tup {\n-                    self.visit_type(tup_ty, cx, reason);\n+                    Self::visit_type(tup_ty, cx, reason);\n                 }\n             },\n             // This is what we are looking for !\n@@ -87,7 +87,7 @@ impl RedundantStaticLifetimes {\n                         _ => {},\n                     }\n                 }\n-                self.visit_type(&borrow_type.ty, cx, reason);\n+                Self::visit_type(&borrow_type.ty, cx, reason);\n             },\n             _ => {},\n         }\n@@ -102,13 +102,13 @@ impl EarlyLintPass for RedundantStaticLifetimes {\n \n         if !item.span.from_expansion() {\n             if let ItemKind::Const(_, ref var_type, _) = item.kind {\n-                self.visit_type(var_type, cx, \"constants have by default a `'static` lifetime\");\n+                Self::visit_type(var_type, cx, \"constants have by default a `'static` lifetime\");\n                 // Don't check associated consts because `'static` cannot be elided on those (issue\n                 // #2438)\n             }\n \n             if let ItemKind::Static(ref var_type, _, _) = item.kind {\n-                self.visit_type(var_type, cx, \"statics have by default a `'static` lifetime\");\n+                Self::visit_type(var_type, cx, \"statics have by default a `'static` lifetime\");\n             }\n         }\n     }"}]}