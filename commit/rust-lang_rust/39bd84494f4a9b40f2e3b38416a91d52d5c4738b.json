{"sha": "39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YmQ4NDQ5NGY0YTliNDBmMmUzYjM4NDE2YTkxZDUyZDVjNDczOGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T16:00:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T16:00:15Z"}, "message": "Auto merge of #3605 - phansch:small_methods_ui_test_improvement, r=flip1995\n\nUI test cleanup: Extract iter_skip_next from methods.rs\n\ncc #2038", "tree": {"sha": "befb9e247e35fcc1269e6ca90370d94843466b49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/befb9e247e35fcc1269e6ca90370d94843466b49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "html_url": "https://github.com/rust-lang/rust/commit/39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61bfb39e3feaeff417c77155849697a4da039252", "url": "https://api.github.com/repos/rust-lang/rust/commits/61bfb39e3feaeff417c77155849697a4da039252", "html_url": "https://github.com/rust-lang/rust/commit/61bfb39e3feaeff417c77155849697a4da039252"}, {"sha": "8c4c458ee93e53cc304d1a839d78ae18c4525b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4c458ee93e53cc304d1a839d78ae18c4525b5d", "html_url": "https://github.com/rust-lang/rust/commit/8c4c458ee93e53cc304d1a839d78ae18c4525b5d"}], "stats": {"total": 131, "additions": 91, "deletions": 40}, "files": [{"sha": "4628bfbf30185effcf850d254402c6fd6d41b3c1", "filename": "tests/ui/iter_skip_next.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fiter_skip_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fiter_skip_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.rs?ref=39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![warn(clippy::iter_skip_next)]\n+#![allow(clippy::blacklisted_name)]\n+\n+/// Struct to generate false positive for Iterator-based lints\n+#[derive(Copy, Clone)]\n+struct IteratorFalsePositives {\n+    foo: u32,\n+}\n+\n+impl IteratorFalsePositives {\n+    fn filter(self) -> IteratorFalsePositives {\n+        self\n+    }\n+\n+    fn next(self) -> IteratorFalsePositives {\n+        self\n+    }\n+\n+    fn find(self) -> Option<u32> {\n+        Some(self.foo)\n+    }\n+\n+    fn position(self) -> Option<u32> {\n+        Some(self.foo)\n+    }\n+\n+    fn rposition(self) -> Option<u32> {\n+        Some(self.foo)\n+    }\n+\n+    fn nth(self, n: usize) -> Option<u32> {\n+        Some(self.foo)\n+    }\n+\n+    fn skip(self, _: usize) -> IteratorFalsePositives {\n+        self\n+    }\n+}\n+\n+/// Checks implementation of `ITER_SKIP_NEXT` lint\n+fn iter_skip_next() {\n+    let mut some_vec = vec![0, 1, 2, 3];\n+    let _ = some_vec.iter().skip(42).next();\n+    let _ = some_vec.iter().cycle().skip(42).next();\n+    let _ = (1..10).skip(10).next();\n+    let _ = &some_vec[..].iter().skip(3).next();\n+    let foo = IteratorFalsePositives { foo: 0 };\n+    let _ = foo.skip(42).next();\n+    let _ = foo.filter().skip(42).next();\n+}\n+\n+fn main() {}"}, {"sha": "6b65c1e4a1e38bf81d168d6a5f4498aa694c7398", "filename": "tests/ui/iter_skip_next.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fiter_skip_next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fiter_skip_next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.stderr?ref=39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "patch": "@@ -0,0 +1,28 @@\n+error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+  --> $DIR/iter_skip_next.rs:52:13\n+   |\n+LL |     let _ = some_vec.iter().skip(42).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n+\n+error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+  --> $DIR/iter_skip_next.rs:53:13\n+   |\n+LL |     let _ = some_vec.iter().cycle().skip(42).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+  --> $DIR/iter_skip_next.rs:54:13\n+   |\n+LL |     let _ = (1..10).skip(10).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n+  --> $DIR/iter_skip_next.rs:55:14\n+   |\n+LL |     let _ = &some_vec[..].iter().skip(3).next();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "b470a12f7a399a16a22c26c43c6bd7d4fd9d86d9", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "patch": "@@ -390,18 +390,6 @@ fn iter_nth() {\n     let ok_mut = false_positive.iter_mut().nth(3);\n }\n \n-/// Checks implementation of `ITER_SKIP_NEXT` lint\n-fn iter_skip_next() {\n-    let mut some_vec = vec![0, 1, 2, 3];\n-    let _ = some_vec.iter().skip(42).next();\n-    let _ = some_vec.iter().cycle().skip(42).next();\n-    let _ = (1..10).skip(10).next();\n-    let _ = &some_vec[..].iter().skip(3).next();\n-    let foo = IteratorFalsePositives { foo : 0 };\n-    let _ = foo.skip(42).next();\n-    let _ = foo.filter().skip(42).next();\n-}\n-\n #[allow(clippy::similar_names)]\n fn main() {\n     let opt = Some(0);"}, {"sha": "e87e61fbe0e4d4aa1d2833079fa2206c883c98f5", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 2, "deletions": 28, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39bd84494f4a9b40f2e3b38416a91d52d5c4738b/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=39bd84494f4a9b40f2e3b38416a91d52d5c4738b", "patch": "@@ -367,39 +367,13 @@ error: called `.iter_mut().nth()` on a VecDeque. Calling `.get_mut()` is both fa\n LL |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-  --> $DIR/methods.rs:396:13\n-   |\n-LL |     let _ = some_vec.iter().skip(42).next();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n-\n-error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-  --> $DIR/methods.rs:397:13\n-   |\n-LL |     let _ = some_vec.iter().cycle().skip(42).next();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-  --> $DIR/methods.rs:398:13\n-   |\n-LL |     let _ = (1..10).skip(10).next();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-  --> $DIR/methods.rs:399:14\n-   |\n-LL |     let _ = &some_vec[..].iter().skip(3).next();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-  --> $DIR/methods.rs:408:13\n+  --> $DIR/methods.rs:396:13\n    |\n LL |     let _ = opt.unwrap();\n    |             ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::option-unwrap-used` implied by `-D warnings`\n \n-error: aborting due to 50 previous errors\n+error: aborting due to 46 previous errors\n "}]}