{"sha": "6e349c7f075d6791eec4c90aa3f2865dfd594da7", "node_id": "C_kwDOAAsO6NoAKDZlMzQ5YzdmMDc1ZDY3OTFlZWM0YzkwYWEzZjI4NjVkZmQ1OTRkYTc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-29T20:26:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-29T20:26:22Z"}, "message": "Remove `error` variable.", "tree": {"sha": "b88141daf3c737a1e4e8b2a52c1d8a8f249cfea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b88141daf3c737a1e4e8b2a52c1d8a8f249cfea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e349c7f075d6791eec4c90aa3f2865dfd594da7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e349c7f075d6791eec4c90aa3f2865dfd594da7", "html_url": "https://github.com/rust-lang/rust/commit/6e349c7f075d6791eec4c90aa3f2865dfd594da7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e349c7f075d6791eec4c90aa3f2865dfd594da7/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f66de50f8a0b98f539f9882115cb1d1aa4c8e182", "url": "https://api.github.com/repos/rust-lang/rust/commits/f66de50f8a0b98f539f9882115cb1d1aa4c8e182", "html_url": "https://github.com/rust-lang/rust/commit/f66de50f8a0b98f539f9882115cb1d1aa4c8e182"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "21b888c25c25fc3560d78dc91ffd726b82e3249a", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e349c7f075d6791eec4c90aa3f2865dfd594da7/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e349c7f075d6791eec4c90aa3f2865dfd594da7/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=6e349c7f075d6791eec4c90aa3f2865dfd594da7", "patch": "@@ -1319,7 +1319,6 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 | PathSource::Struct\n                 | PathSource::TupleStruct(..) => false,\n             };\n-            let mut error = true;\n             let mut res = LifetimeRes::Error;\n             for rib in self.lifetime_ribs.iter().rev() {\n                 match rib.kind {\n@@ -1339,15 +1338,14 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     // lifetime. Instead, we simply create an implicit lifetime, which will be checked\n                     // later, at which point a suitable error will be emitted.\n                     LifetimeRibKind::AnonymousPassThrough(binder) => {\n-                        error = false;\n                         res = LifetimeRes::Anonymous { binder, elided: true };\n                         break;\n                     }\n                     LifetimeRibKind::AnonymousReportError | LifetimeRibKind::Item => {\n                         // FIXME(cjgillot) This resolution is wrong, but this does not matter\n-                        // since these cases are erroneous anyway.\n+                        // since these cases are erroneous anyway.  Lifetime resolution should\n+                        // emit a \"missing lifetime specifier\" diagnostic.\n                         res = LifetimeRes::Anonymous { binder: DUMMY_NODE_ID, elided: true };\n-                        error = false;\n                         break;\n                     }\n                     _ => {}\n@@ -1377,7 +1375,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                 // originating from macros, since the segment's span might be from a macro arg.\n                 segment.ident.span.find_ancestor_inside(path_span).unwrap_or(path_span)\n             };\n-            if error {\n+            if let LifetimeRes::Error = res {\n                 let sess = self.r.session;\n                 let mut err = rustc_errors::struct_span_err!(\n                     sess,"}]}