{"sha": "dc97181a0966cd1686a70ce06849a19c196f72eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjOTcxODFhMDk2NmNkMTY4NmE3MGNlMDY4NDlhMTljMTk2ZjcyZWI=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-01-21T14:57:50Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2020-01-21T23:10:41Z"}, "message": "Do not base path to append extension\n\nWe already have ownership of the base path, so no need to clone it (within\nPath::with_extension).", "tree": {"sha": "4960b47e2ea580f6286faed0503e43b52070b165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4960b47e2ea580f6286faed0503e43b52070b165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc97181a0966cd1686a70ce06849a19c196f72eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc97181a0966cd1686a70ce06849a19c196f72eb", "html_url": "https://github.com/rust-lang/rust/commit/dc97181a0966cd1686a70ce06849a19c196f72eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc97181a0966cd1686a70ce06849a19c196f72eb/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6067c24e181aa388619ca0f39100e5c9a1f509", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6067c24e181aa388619ca0f39100e5c9a1f509", "html_url": "https://github.com/rust-lang/rust/commit/8c6067c24e181aa388619ca0f39100e5c9a1f509"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c7fcd04c45a0afbcef2ecdaf2b4108041de425b3", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dc97181a0966cd1686a70ce06849a19c196f72eb/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc97181a0966cd1686a70ce06849a19c196f72eb/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=dc97181a0966cd1686a70ce06849a19c196f72eb", "patch": "@@ -491,8 +491,6 @@ impl OutputFilenames {\n     /// Like temp_path, but also supports things where there is no corresponding\n     /// OutputType, like noopt-bitcode or lto-bitcode.\n     pub fn temp_path_ext(&self, ext: &str, codegen_unit_name: Option<&str>) -> PathBuf {\n-        let base = self.out_directory.join(&self.filestem);\n-\n         let mut extension = String::new();\n \n         if let Some(codegen_unit_name) = codegen_unit_name {\n@@ -509,11 +507,13 @@ impl OutputFilenames {\n             extension.push_str(ext);\n         }\n \n-        base.with_extension(extension)\n+        self.with_extension(&extension)\n     }\n \n     pub fn with_extension(&self, extension: &str) -> PathBuf {\n-        self.out_directory.join(&self.filestem).with_extension(extension)\n+        let mut path = self.out_directory.join(&self.filestem);\n+        path.set_extension(extension);\n+        path\n     }\n }\n "}]}