{"sha": "fcd6f20700848d9220bae663b7a41cea4e94f280", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZDZmMjA3MDA4NDhkOTIyMGJhZTY2M2I3YTQxY2VhNGU5NGYyODA=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-06T09:36:23Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-17T16:30:50Z"}, "message": "Iterate for super_predicates.", "tree": {"sha": "0286d88a66ffcf961a8888621f7d914ec0fd2bd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0286d88a66ffcf961a8888621f7d914ec0fd2bd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcd6f20700848d9220bae663b7a41cea4e94f280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd6f20700848d9220bae663b7a41cea4e94f280", "html_url": "https://github.com/rust-lang/rust/commit/fcd6f20700848d9220bae663b7a41cea4e94f280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcd6f20700848d9220bae663b7a41cea4e94f280/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c74a3553ae2b50d6ec11ff660240fe7ba882c65e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c74a3553ae2b50d6ec11ff660240fe7ba882c65e", "html_url": "https://github.com/rust-lang/rust/commit/c74a3553ae2b50d6ec11ff660240fe7ba882c65e"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "254954c83762a33cff7e7bdd7dc1fac98318db8c", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fcd6f20700848d9220bae663b7a41cea4e94f280/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd6f20700848d9220bae663b7a41cea4e94f280/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=fcd6f20700848d9220bae663b7a41cea4e94f280", "patch": "@@ -947,6 +947,9 @@ impl EncodeContext<'a, 'tcx> {\n                     record!(self.tables.inferred_outlives[def_id] <- inferred_outlives);\n                 }\n             }\n+            if let DefKind::Trait | DefKind::TraitAlias = def_kind {\n+                record!(self.tables.super_predicates[def_id] <- self.tcx.super_predicates_of(def_id));\n+            }\n         }\n         let inherent_impls = tcx.crate_inherent_impls(LOCAL_CRATE);\n         for (def_id, implementations) in inherent_impls.inherent_impls.iter() {\n@@ -1092,11 +1095,6 @@ impl EncodeContext<'a, 'tcx> {\n         }\n     }\n \n-    fn encode_super_predicates(&mut self, def_id: DefId) {\n-        debug!(\"EncodeContext::encode_super_predicates({:?})\", def_id);\n-        record!(self.tables.super_predicates[def_id] <- self.tcx.super_predicates_of(def_id));\n-    }\n-\n     fn encode_explicit_item_bounds(&mut self, def_id: DefId) {\n         debug!(\"EncodeContext::encode_explicit_item_bounds({:?})\", def_id);\n         let bounds = self.tcx.explicit_item_bounds(def_id);\n@@ -1493,12 +1491,6 @@ impl EncodeContext<'a, 'tcx> {\n                 record!(self.tables.impl_trait_ref[def_id] <- trait_ref);\n             }\n         }\n-        match item.kind {\n-            hir::ItemKind::Trait(..) | hir::ItemKind::TraitAlias(..) => {\n-                self.encode_super_predicates(def_id);\n-            }\n-            _ => {}\n-        }\n     }\n \n     /// Serialize the text of exported macros"}]}