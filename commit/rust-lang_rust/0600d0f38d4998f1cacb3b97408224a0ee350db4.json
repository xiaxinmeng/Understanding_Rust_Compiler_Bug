{"sha": "0600d0f38d4998f1cacb3b97408224a0ee350db4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MDBkMGYzOGQ0OTk4ZjFjYWNiM2I5NzQwODIyNGEwZWUzNTBkYjQ=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-03-27T17:20:27Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-03-28T14:43:11Z"}, "message": "Stabilize fs::read and fs::write", "tree": {"sha": "671c305c4024378fcb616418e96e805ce6cdb358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/671c305c4024378fcb616418e96e805ce6cdb358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0600d0f38d4998f1cacb3b97408224a0ee350db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0600d0f38d4998f1cacb3b97408224a0ee350db4", "html_url": "https://github.com/rust-lang/rust/commit/0600d0f38d4998f1cacb3b97408224a0ee350db4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0600d0f38d4998f1cacb3b97408224a0ee350db4/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3efe61c825e1d49dc6febeb252954b9532c0c677", "url": "https://api.github.com/repos/rust-lang/rust/commits/3efe61c825e1d49dc6febeb252954b9532c0c677", "html_url": "https://github.com/rust-lang/rust/commit/3efe61c825e1d49dc6febeb252954b9532c0c677"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "b5476e9326dbbadcde300c3b3b20bd2db6edc32e", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0600d0f38d4998f1cacb3b97408224a0ee350db4/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0600d0f38d4998f1cacb3b97408224a0ee350db4/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=0600d0f38d4998f1cacb3b97408224a0ee350db4", "patch": "@@ -251,8 +251,6 @@ fn initial_buffer_size(file: &File) -> usize {\n /// # Examples\n ///\n /// ```no_run\n-/// #![feature(fs_read_write)]\n-///\n /// use std::fs;\n /// use std::net::SocketAddr;\n ///\n@@ -261,7 +259,7 @@ fn initial_buffer_size(file: &File) -> usize {\n /// # Ok(())\n /// # }\n /// ```\n-#[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n+#[stable(feature = \"fs_read_write_bytes\", since = \"1.27.0\")]\n pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n     let mut file = File::open(path)?;\n     let mut bytes = Vec::with_capacity(initial_buffer_size(&file));\n@@ -325,16 +323,14 @@ pub fn read_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n /// # Examples\n ///\n /// ```no_run\n-/// #![feature(fs_read_write)]\n-///\n /// use std::fs;\n ///\n /// # fn foo() -> std::io::Result<()> {\n /// fs::write(\"foo.txt\", b\"Lorem ipsum\")?;\n /// # Ok(())\n /// # }\n /// ```\n-#[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n+#[stable(feature = \"fs_read_write_bytes\", since = \"1.27.0\")]\n pub fn write<P: AsRef<Path>, C: AsRef<[u8]>>(path: P, contents: C) -> io::Result<()> {\n     File::create(path)?.write_all(contents.as_ref())\n }"}]}