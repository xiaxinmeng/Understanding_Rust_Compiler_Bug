{"sha": "d3c76b5b2a803030d9be4e66c540120d86e3868a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzc2YjViMmE4MDMwMzBkOWJlNGU2NmM1NDAxMjBkODZlMzg2OGE=", "commit": {"author": {"name": "ThibsG", "email": "thebaek1@hotmail.com", "date": "2020-01-10T14:12:21Z"}, "committer": {"name": "ThibsG", "email": "thebaek1@hotmail.com", "date": "2020-01-13T15:25:35Z"}, "message": "Change note message", "tree": {"sha": "a1b8565f085c55db1c661ef19e96f848ab5dfbab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1b8565f085c55db1c661ef19e96f848ab5dfbab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c76b5b2a803030d9be4e66c540120d86e3868a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c76b5b2a803030d9be4e66c540120d86e3868a", "html_url": "https://github.com/rust-lang/rust/commit/d3c76b5b2a803030d9be4e66c540120d86e3868a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c76b5b2a803030d9be4e66c540120d86e3868a/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95cc500e9d4ff3bc707438b6a5e11397c232cd61", "url": "https://api.github.com/repos/rust-lang/rust/commits/95cc500e9d4ff3bc707438b6a5e11397c232cd61", "html_url": "https://github.com/rust-lang/rust/commit/95cc500e9d4ff3bc707438b6a5e11397c232cd61"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "ee7155c1a0bcaf58c20c929e328510c9120ee797", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d3c76b5b2a803030d9be4e66c540120d86e3868a/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c76b5b2a803030d9be4e66c540120d86e3868a/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=d3c76b5b2a803030d9be4e66c540120d86e3868a", "patch": "@@ -530,10 +530,9 @@ fn check_wild_err_arm(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n                             span_note_and_lint(cx,\n                                 MATCH_WILD_ERR_ARM,\n                                 arm.pat.span,\n-                                &format!(\"`Err({})` will match all errors, maybe not a good idea\", &ident_bind_name),\n+                                &format!(\"`Err({})` matches all errors\", &ident_bind_name),\n                                 arm.pat.span,\n-                                \"to remove this warning, match each error separately \\\n-                                    or use `unreachable!` macro\"\n+                                \"match each error separately or use the error output\",\n                             );\n                         }\n                     }"}, {"sha": "1c5c636fee61e461360453a55af24e2fb8faba26", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3c76b5b2a803030d9be4e66c540120d86e3868a/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3c76b5b2a803030d9be4e66c540120d86e3868a/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=d3c76b5b2a803030d9be4e66c540120d86e3868a", "patch": "@@ -1,11 +1,11 @@\n-error: `Err(_)` will match all errors, maybe not a good idea\n+error: `Err(_)` matches all errors\n   --> $DIR/matches.rs:14:9\n    |\n LL |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n-   = note: to remove this warning, match each error separately or use `unreachable!` macro\n+   = note: match each error separately or use the error output\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:13:18\n@@ -26,13 +26,13 @@ LL |         Ok(3) => println!(\"ok\"),\n    |         ^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error: `Err(_)` will match all errors, maybe not a good idea\n+error: `Err(_)` matches all errors\n   --> $DIR/matches.rs:20:9\n    |\n LL |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n-   = note: to remove this warning, match each error separately or use `unreachable!` macro\n+   = note: match each error separately or use the error output\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:19:18\n@@ -52,13 +52,13 @@ LL |         Ok(3) => println!(\"ok\"),\n    |         ^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error: `Err(_)` will match all errors, maybe not a good idea\n+error: `Err(_)` matches all errors\n   --> $DIR/matches.rs:26:9\n    |\n LL |         Err(_) => {\n    |         ^^^^^^\n    |\n-   = note: to remove this warning, match each error separately or use `unreachable!` macro\n+   = note: match each error separately or use the error output\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:25:18\n@@ -78,13 +78,13 @@ LL |         Ok(3) => println!(\"ok\"),\n    |         ^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error: `Err(_e)` will match all errors, maybe not a good idea\n+error: `Err(_e)` matches all errors\n   --> $DIR/matches.rs:34:9\n    |\n LL |         Err(_e) => panic!(),\n    |         ^^^^^^^\n    |\n-   = note: to remove this warning, match each error separately or use `unreachable!` macro\n+   = note: match each error separately or use the error output\n \n error: this `match` has identical arm bodies\n   --> $DIR/matches.rs:33:18"}]}