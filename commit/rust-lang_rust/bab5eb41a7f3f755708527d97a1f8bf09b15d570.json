{"sha": "bab5eb41a7f3f755708527d97a1f8bf09b15d570", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYjVlYjQxYTdmM2Y3NTU3MDg1MjdkOTdhMWY4YmYwOWIxNWQ1NzA=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-21T14:09:10Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-21T14:09:10Z"}, "message": "Sequence-field should have plural name", "tree": {"sha": "e2a99d1276c62124bcec9a134cbc0dae7ed69a3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2a99d1276c62124bcec9a134cbc0dae7ed69a3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bab5eb41a7f3f755708527d97a1f8bf09b15d570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bab5eb41a7f3f755708527d97a1f8bf09b15d570", "html_url": "https://github.com/rust-lang/rust/commit/bab5eb41a7f3f755708527d97a1f8bf09b15d570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bab5eb41a7f3f755708527d97a1f8bf09b15d570/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e93635325b52eb79b5c279d2fad4b325dd44876a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e93635325b52eb79b5c279d2fad4b325dd44876a", "html_url": "https://github.com/rust-lang/rust/commit/e93635325b52eb79b5c279d2fad4b325dd44876a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c0f07645f496ad7879962c8d0ab16d44a33efeee", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bab5eb41a7f3f755708527d97a1f8bf09b15d570/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab5eb41a7f3f755708527d97a1f8bf09b15d570/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=bab5eb41a7f3f755708527d97a1f8bf09b15d570", "patch": "@@ -274,7 +274,7 @@ pub struct Handler {\n     err_count: AtomicUsize,\n     emitter: Lock<Box<dyn Emitter + sync::Send>>,\n     continue_after_error: LockCell<bool>,\n-    delayed_span_bug: Lock<Vec<Diagnostic>>,\n+    delayed_span_bugs: Lock<Vec<Diagnostic>>,\n \n     // This set contains the `DiagnosticId` of all emitted diagnostics to avoid\n     // emitting the same diagnostic with extended help (`--teach`) twice, which\n@@ -306,7 +306,7 @@ pub struct HandlerFlags {\n impl Drop for Handler {\n     fn drop(&mut self) {\n         if self.err_count() == 0 {\n-            let mut bugs = self.delayed_span_bug.borrow_mut();\n+            let mut bugs = self.delayed_span_bugs.borrow_mut();\n             let has_bugs = !bugs.is_empty();\n             for bug in bugs.drain(..) {\n                 DiagnosticBuilder::new_diagnostic(self, bug).emit();\n@@ -362,7 +362,7 @@ impl Handler {\n             err_count: AtomicUsize::new(0),\n             emitter: Lock::new(e),\n             continue_after_error: LockCell::new(true),\n-            delayed_span_bug: Lock::new(Vec::new()),\n+            delayed_span_bugs: Lock::new(Vec::new()),\n             taught_diagnostics: Lock::new(FxHashSet()),\n             emitted_diagnostic_codes: Lock::new(FxHashSet()),\n             emitted_diagnostics: Lock::new(FxHashSet()),\n@@ -530,7 +530,7 @@ impl Handler {\n         if self.flags.report_delayed_bugs {\n             DiagnosticBuilder::new_diagnostic(self, diagnostic.clone()).emit();\n         }\n-        self.delayed_span_bug.borrow_mut().push(diagnostic);\n+        self.delayed_span_bugs.borrow_mut().push(diagnostic);\n     }\n     pub fn span_bug_no_panic<S: Into<MultiSpan>>(&self, sp: S, msg: &str) {\n         self.emit(&sp.into(), msg, Bug);"}]}