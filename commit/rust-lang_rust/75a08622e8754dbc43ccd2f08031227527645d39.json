{"sha": "75a08622e8754dbc43ccd2f08031227527645d39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YTA4NjIyZTg3NTRkYmM0M2NjZDJmMDgwMzEyMjc1Mjc2NDVkMzk=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-25T08:51:45Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-25T10:06:57Z"}, "message": "Add a function to check whether a ValueRef is a constant", "tree": {"sha": "6a7fca7c9d441ea8b604f7e84d281f5d9adafcb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a7fca7c9d441ea8b604f7e84d281f5d9adafcb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75a08622e8754dbc43ccd2f08031227527645d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75a08622e8754dbc43ccd2f08031227527645d39", "html_url": "https://github.com/rust-lang/rust/commit/75a08622e8754dbc43ccd2f08031227527645d39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75a08622e8754dbc43ccd2f08031227527645d39/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba9c3ebc02716252cf46944e4dd3a866cc51947c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba9c3ebc02716252cf46944e4dd3a866cc51947c", "html_url": "https://github.com/rust-lang/rust/commit/ba9c3ebc02716252cf46944e4dd3a866cc51947c"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4099f64263703d5f230ba5c06369eea284dabde5", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75a08622e8754dbc43ccd2f08031227527645d39/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75a08622e8754dbc43ccd2f08031227527645d39/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=75a08622e8754dbc43ccd2f08031227527645d39", "patch": "@@ -850,6 +850,12 @@ pub fn const_get_elt(cx: &CrateContext, v: ValueRef, us: &[c_uint])\n     }\n }\n \n+pub fn is_const(v: ValueRef) -> bool {\n+    unsafe {\n+        llvm::LLVMIsConstant(v) == True\n+    }\n+}\n+\n pub fn const_to_int(v: ValueRef) -> c_longlong {\n     unsafe {\n         llvm::LLVMConstIntGetSExtValue(v)"}]}