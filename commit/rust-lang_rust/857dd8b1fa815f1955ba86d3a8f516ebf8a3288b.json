{"sha": "857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1N2RkOGIxZmE4MTVmMTk1NWJhODZkM2E4ZjUxNmViZjhhMzI4OGI=", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2020-11-09T21:18:04Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2020-11-10T08:56:48Z"}, "message": "Add macro test for min-const-generics", "tree": {"sha": "9308dccc25e42c4826691232147d6b85b8058c21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9308dccc25e42c4826691232147d6b85b8058c21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "html_url": "https://github.com/rust-lang/rust/commit/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25f6938da459a57b43bdf16ed6bdad3225b2a3ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/25f6938da459a57b43bdf16ed6bdad3225b2a3ce", "html_url": "https://github.com/rust-lang/rust/commit/25f6938da459a57b43bdf16ed6bdad3225b2a3ce"}], "stats": {"total": 212, "additions": 212, "deletions": 0}, "files": [{"sha": "7f16f2f33de1a5875d022e68fd38fef2d602aa40", "filename": "src/test/ui/const-generics/min_const_generics/macro-fail.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro-fail.rs?ref=857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "patch": "@@ -0,0 +1,48 @@\n+#![feature(min_const_generics)]\n+\n+struct Example<const N: usize>;\n+\n+macro_rules! external_macro {\n+  () => {{\n+    //~^ ERROR expected type\n+    const X: usize = 1337;\n+    X\n+  }}\n+}\n+\n+trait Marker<const N: usize> {}\n+impl<const N: usize> Marker<N> for Example<N> {}\n+\n+fn make_marker() -> impl Marker<gimme_a_const!(marker)> {\n+  //~^ ERROR wrong number of const\n+  //~| ERROR wrong number of type\n+  Example::<gimme_a_const!(marker)>\n+  //~^ ERROR wrong number of const\n+  //~| ERROR wrong number of type\n+}\n+\n+fn from_marker(_: impl Marker<{\n+    #[macro_export]\n+    macro_rules! inline { () => {{ 3 }} }; inline!()\n+}>) {}\n+\n+fn main() {\n+  let _ok = Example::<{\n+    #[macro_export]\n+    macro_rules! gimme_a_const {\n+      ($rusty: ident) => {{ let $rusty = 3; *&$rusty }}\n+      //~^ ERROR expected type\n+      //~| ERROR expected type\n+    };\n+    gimme_a_const!(run)\n+  }>;\n+\n+  let _fail = Example::<external_macro!()>;\n+  //~^ ERROR wrong number of const\n+  //~| ERROR wrong number of type\n+\n+  let _fail = Example::<gimme_a_const!()>;\n+  //~^ ERROR wrong number of const\n+  //~| ERROR wrong number of type\n+  //~| ERROR unexpected end of macro invocation\n+}"}, {"sha": "fe7a4a5c382693c2b082c86f9dfb8b3a91d98abb", "filename": "src/test/ui/const-generics/min_const_generics/macro-fail.stderr", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro-fail.stderr?ref=857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "patch": "@@ -0,0 +1,107 @@\n+error: expected type, found `{`\n+  --> $DIR/macro-fail.rs:33:27\n+   |\n+LL | fn make_marker() -> impl Marker<gimme_a_const!(marker)> {\n+   |                                 ----------------------\n+   |                                 |\n+   |                                 this macro call doesn't expand to a type\n+   |                                 in this macro invocation\n+...\n+LL |       ($rusty: ident) => {{ let $rusty = 3; *&$rusty }}\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected type\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: expected type, found `{`\n+  --> $DIR/macro-fail.rs:33:27\n+   |\n+LL |   Example::<gimme_a_const!(marker)>\n+   |             ----------------------\n+   |             |\n+   |             this macro call doesn't expand to a type\n+   |             in this macro invocation\n+...\n+LL |       ($rusty: ident) => {{ let $rusty = 3; *&$rusty }}\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected type\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: expected type, found `{`\n+  --> $DIR/macro-fail.rs:6:10\n+   |\n+LL |     () => {{\n+   |  __________^\n+LL | |\n+LL | |     const X: usize = 1337;\n+LL | |     X\n+LL | |   }}\n+   | |___^ expected type\n+...\n+LL |     let _fail = Example::<external_macro!()>;\n+   |                           -----------------\n+   |                           |\n+   |                           this macro call doesn't expand to a type\n+   |                           in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macro-fail.rs:44:25\n+   |\n+LL |     macro_rules! gimme_a_const {\n+   |     -------------------------- when calling this macro\n+...\n+LL |   let _fail = Example::<gimme_a_const!()>;\n+   |                         ^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n+\n+error[E0107]: wrong number of const arguments: expected 1, found 0\n+  --> $DIR/macro-fail.rs:16:26\n+   |\n+LL | fn make_marker() -> impl Marker<gimme_a_const!(marker)> {\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 const argument\n+\n+error[E0107]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/macro-fail.rs:16:33\n+   |\n+LL | fn make_marker() -> impl Marker<gimme_a_const!(marker)> {\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^ unexpected type argument\n+\n+error[E0107]: wrong number of const arguments: expected 1, found 0\n+  --> $DIR/macro-fail.rs:19:3\n+   |\n+LL |   Example::<gimme_a_const!(marker)>\n+   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 const argument\n+\n+error[E0107]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/macro-fail.rs:19:13\n+   |\n+LL |   Example::<gimme_a_const!(marker)>\n+   |             ^^^^^^^^^^^^^^^^^^^^^^ unexpected type argument\n+\n+error[E0107]: wrong number of const arguments: expected 1, found 0\n+  --> $DIR/macro-fail.rs:40:15\n+   |\n+LL |   let _fail = Example::<external_macro!()>;\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 const argument\n+\n+error[E0107]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/macro-fail.rs:40:25\n+   |\n+LL |   let _fail = Example::<external_macro!()>;\n+   |                         ^^^^^^^^^^^^^^^^^ unexpected type argument\n+\n+error[E0107]: wrong number of const arguments: expected 1, found 0\n+  --> $DIR/macro-fail.rs:44:15\n+   |\n+LL |   let _fail = Example::<gimme_a_const!()>;\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 const argument\n+\n+error[E0107]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/macro-fail.rs:44:25\n+   |\n+LL |   let _fail = Example::<gimme_a_const!()>;\n+   |                         ^^^^^^^^^^^^^^^^ unexpected type argument\n+\n+error: aborting due to 12 previous errors\n+\n+For more information about this error, try `rustc --explain E0107`."}, {"sha": "85ecce551d405f06d2d5ea805deb7326f13a44c2", "filename": "src/test/ui/const-generics/min_const_generics/macro.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857dd8b1fa815f1955ba86d3a8f516ebf8a3288b/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fmacro.rs?ref=857dd8b1fa815f1955ba86d3a8f516ebf8a3288b", "patch": "@@ -0,0 +1,57 @@\n+// run-pass\n+#![feature(min_const_generics)]\n+\n+struct Example<const N: usize>;\n+\n+macro_rules! external_macro {\n+  () => {{\n+    const X: usize = 1337;\n+    X\n+  }}\n+}\n+\n+trait Marker<const N: usize> {}\n+impl<const N: usize> Marker<N> for Example<N> {}\n+\n+fn make_marker() -> impl Marker<{\n+    #[macro_export]\n+    macro_rules! const_macro { () => {{ 3 }} }; inline!()\n+}> {\n+  Example::<{ const_macro!() }>\n+}\n+\n+fn from_marker(_: impl Marker<{\n+    #[macro_export]\n+    macro_rules! inline { () => {{ 3 }} }; inline!()\n+}>) {}\n+\n+fn main() {\n+  let _ok = Example::<{\n+    #[macro_export]\n+    macro_rules! gimme_a_const {\n+      ($rusty: ident) => {{ let $rusty = 3; *&$rusty }}\n+    };\n+    gimme_a_const!(run)\n+  }>;\n+\n+  let _ok = Example::<{ external_macro!() }>;\n+\n+  let _ok: [_; gimme_a_const!(blah)] = [0,0,0];\n+  let _ok: [[u8; gimme_a_const!(blah)]; gimme_a_const!(blah)];\n+  let _ok: [u8; gimme_a_const!(blah)];\n+\n+  let _ok: [u8; {\n+    #[macro_export]\n+    macro_rules! const_two { () => {{ 2 }} };\n+    const_two!()\n+  }];\n+\n+  let _ok = [0; {\n+    #[macro_export]\n+    macro_rules! const_three { () => {{ 3 }} };\n+    const_three!()\n+  }];\n+  let _ok = [0; const_three!()];\n+\n+  from_marker(make_marker());\n+}"}]}