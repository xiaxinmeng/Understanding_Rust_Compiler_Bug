{"sha": "a29239085455964176ab0ad59b097da725813f6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyOTIzOTA4NTQ1NTk2NDE3NmFiMGFkNTliMDk3ZGE3MjU4MTNmNmY=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-08-05T18:06:32Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-08-05T18:06:32Z"}, "message": "Only allow LLVM element_type on Array and Vector", "tree": {"sha": "2108e3c4118e4eccbeeceb57ca9ce303a6e1bc2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2108e3c4118e4eccbeeceb57ca9ce303a6e1bc2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a29239085455964176ab0ad59b097da725813f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a29239085455964176ab0ad59b097da725813f6f", "html_url": "https://github.com/rust-lang/rust/commit/a29239085455964176ab0ad59b097da725813f6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a29239085455964176ab0ad59b097da725813f6f/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "html_url": "https://github.com/rust-lang/rust/commit/41f27d903a2f6e81fbd082235fbdaacc0d356d1e"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "52ae56b89b33170c671cd82cf5122b126a0bd839", "filename": "compiler/rustc_codegen_llvm/src/type_.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a29239085455964176ab0ad59b097da725813f6f/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a29239085455964176ab0ad59b097da725813f6f/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_.rs?ref=a29239085455964176ab0ad59b097da725813f6f", "patch": "@@ -203,7 +203,11 @@ impl BaseTypeMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     }\n \n     fn element_type(&self, ty: &'ll Type) -> &'ll Type {\n-        unsafe { llvm::LLVMGetElementType(ty) }\n+        match self.type_kind(ty) {\n+            TypeKind::Array | TypeKind::Vector => unsafe { llvm::LLVMGetElementType(ty) },\n+            TypeKind::Pointer => bug!(\"element_type is not supported for opaque pointers\"),\n+            other => bug!(\"element_type called on unsupported type {:?}\", other),\n+        }\n     }\n \n     fn vector_length(&self, ty: &'ll Type) -> usize {"}]}