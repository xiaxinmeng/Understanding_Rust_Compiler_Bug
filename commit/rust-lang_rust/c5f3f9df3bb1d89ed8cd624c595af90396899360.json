{"sha": "c5f3f9df3bb1d89ed8cd624c595af90396899360", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZjNmOWRmM2JiMWQ4OWVkOGNkNjI0YzU5NWFmOTAzOTY4OTkzNjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-31T15:09:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-31T15:09:55Z"}, "message": "Auto merge of #6603 - ThibsG:MatchOverlappingArm5986, r=flip1995\n\nDo not lint when range is completely included into another one\n\nThis fix has been developed following this [comment](https://github.com/rust-lang/rust-clippy/issues/5986#issuecomment-703313548).\nSo this will be linted:\n```\n|----------|\n        |-----------|\n```\nNow this won't be linted:\n```\n              |---|\n|--------------------|\n```\nand this will still lint:\n```\n|--------|\n|--------------|\n```\n\nFixes: #5986\n\nchangelog: Fix FPs in match_overlapping_arm, when first arm is completely included in second arm", "tree": {"sha": "bcd769c695f3f44365743cdb6ce89d3648c9ca60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcd769c695f3f44365743cdb6ce89d3648c9ca60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f3f9df3bb1d89ed8cd624c595af90396899360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f3f9df3bb1d89ed8cd624c595af90396899360", "html_url": "https://github.com/rust-lang/rust/commit/c5f3f9df3bb1d89ed8cd624c595af90396899360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f3f9df3bb1d89ed8cd624c595af90396899360/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed112741b2662b6fb8a32de0357de235e25da12d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed112741b2662b6fb8a32de0357de235e25da12d", "html_url": "https://github.com/rust-lang/rust/commit/ed112741b2662b6fb8a32de0357de235e25da12d"}, {"sha": "051891173d4018abfb353235c912e8cd649f73e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/051891173d4018abfb353235c912e8cd649f73e3", "html_url": "https://github.com/rust-lang/rust/commit/051891173d4018abfb353235c912e8cd649f73e3"}], "stats": {"total": 74, "additions": 57, "deletions": 17}, "files": [{"sha": "ba7b9bd04248d3d2713fa597f421e80e2e00c0ea", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c5f3f9df3bb1d89ed8cd624c595af90396899360/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f3f9df3bb1d89ed8cd624c595af90396899360/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=c5f3f9df3bb1d89ed8cd624c595af90396899360", "patch": "@@ -1592,7 +1592,17 @@ where\n                 }\n             },\n             (&Kind::End(a, _), &Kind::Start(b, _)) if a != Bound::Included(b) => (),\n-            _ => return Some((a.range(), b.range())),\n+            _ => {\n+                // skip if the range `a` is completely included into the range `b`\n+                if let Ordering::Equal | Ordering::Less = a.cmp(&b) {\n+                    let kind_a = Kind::End(a.range().node.1, a.range());\n+                    let kind_b = Kind::End(b.range().node.1, b.range());\n+                    if let Ordering::Equal | Ordering::Greater = kind_a.cmp(&kind_b) {\n+                        return None;\n+                    }\n+                }\n+                return Some((a.range(), b.range()));\n+            },\n         }\n     }\n "}, {"sha": "44c51e8112a7d6fdf4322d3cc3328bacc15c7665", "filename": "tests/ui/match_overlapping_arm.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c5f3f9df3bb1d89ed8cd624c595af90396899360/tests%2Fui%2Fmatch_overlapping_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f3f9df3bb1d89ed8cd624c595af90396899360/tests%2Fui%2Fmatch_overlapping_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.rs?ref=c5f3f9df3bb1d89ed8cd624c595af90396899360", "patch": "@@ -57,6 +57,36 @@ fn overlapping() {\n         _ => (),\n     }\n \n+    match 42 {\n+        5..7 => println!(\"5 .. 7\"),\n+        0..10 => println!(\"0 .. 10\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        5..10 => println!(\"5 .. 10\"),\n+        0..=10 => println!(\"0 ... 10\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        0..14 => println!(\"0 .. 14\"),\n+        5..10 => println!(\"5 .. 10\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        5..14 => println!(\"5 .. 14\"),\n+        0..=10 => println!(\"0 ... 10\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        0..7 => println!(\"0 .. 7\"),\n+        0..=10 => println!(\"0 ... 10\"),\n+        _ => (),\n+    }\n+\n     /*\n     // FIXME(JohnTitor): uncomment this once rustfmt knows half-open patterns\n     match 42 {"}, {"sha": "f25a66d634e888189565a0bbec8e1b8c9994be03", "filename": "tests/ui/match_overlapping_arm.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c5f3f9df3bb1d89ed8cd624c595af90396899360/tests%2Fui%2Fmatch_overlapping_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5f3f9df3bb1d89ed8cd624c595af90396899360/tests%2Fui%2Fmatch_overlapping_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.stderr?ref=c5f3f9df3bb1d89ed8cd624c595af90396899360", "patch": "@@ -24,39 +24,39 @@ LL |         FOO..=11 => println!(\"0 ... 11\"),\n    |         ^^^^^^^^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:26:9\n+  --> $DIR/match_overlapping_arm.rs:55:9\n    |\n-LL |         0..=5 => println!(\"0 ... 5\"),\n+LL |         0..11 => println!(\"0 .. 11\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:25:9\n+  --> $DIR/match_overlapping_arm.rs:56:9\n    |\n-LL |         2 => println!(\"2\"),\n-   |         ^\n+LL |         0..=11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:32:9\n+  --> $DIR/match_overlapping_arm.rs:80:9\n    |\n-LL |         0..=2 => println!(\"0 ... 2\"),\n-   |         ^^^^^\n+LL |         0..=10 => println!(\"0 ... 10\"),\n+   |         ^^^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:31:9\n+  --> $DIR/match_overlapping_arm.rs:79:9\n    |\n-LL |         2 => println!(\"2\"),\n-   |         ^\n+LL |         5..14 => println!(\"5 .. 14\"),\n+   |         ^^^^^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:55:9\n+  --> $DIR/match_overlapping_arm.rs:85:9\n    |\n-LL |         0..11 => println!(\"0 .. 11\"),\n-   |         ^^^^^\n+LL |         0..7 => println!(\"0 .. 7\"),\n+   |         ^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:56:9\n+  --> $DIR/match_overlapping_arm.rs:86:9\n    |\n-LL |         0..=11 => println!(\"0 ... 11\"),\n+LL |         0..=10 => println!(\"0 ... 10\"),\n    |         ^^^^^^\n \n error: aborting due to 5 previous errors"}]}