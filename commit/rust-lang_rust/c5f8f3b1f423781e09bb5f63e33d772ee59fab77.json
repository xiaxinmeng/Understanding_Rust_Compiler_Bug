{"sha": "c5f8f3b1f423781e09bb5f63e33d772ee59fab77", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZjhmM2IxZjQyMzc4MWUwOWJiNWY2M2UzM2Q3NzJlZTU5ZmFiNzc=", "commit": {"author": {"name": "Marco Groppo", "email": "marco.groppo@gmail.com", "date": "2019-04-09T19:12:54Z"}, "committer": {"name": "Marco Groppo", "email": "marco.groppo@gmail.com", "date": "2019-04-09T19:12:54Z"}, "message": "Stylistic changes. Updated features.md with the new assists.", "tree": {"sha": "c9cab7d79be607f2c741a91ee032f3a3a964f31b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9cab7d79be607f2c741a91ee032f3a3a964f31b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f8f3b1f423781e09bb5f63e33d772ee59fab77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f8f3b1f423781e09bb5f63e33d772ee59fab77", "html_url": "https://github.com/rust-lang/rust/commit/c5f8f3b1f423781e09bb5f63e33d772ee59fab77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f8f3b1f423781e09bb5f63e33d772ee59fab77/comments", "author": {"login": "marcogroppo", "id": 2735511, "node_id": "MDQ6VXNlcjI3MzU1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2735511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcogroppo", "html_url": "https://github.com/marcogroppo", "followers_url": "https://api.github.com/users/marcogroppo/followers", "following_url": "https://api.github.com/users/marcogroppo/following{/other_user}", "gists_url": "https://api.github.com/users/marcogroppo/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcogroppo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcogroppo/subscriptions", "organizations_url": "https://api.github.com/users/marcogroppo/orgs", "repos_url": "https://api.github.com/users/marcogroppo/repos", "events_url": "https://api.github.com/users/marcogroppo/events{/privacy}", "received_events_url": "https://api.github.com/users/marcogroppo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcogroppo", "id": 2735511, "node_id": "MDQ6VXNlcjI3MzU1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2735511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcogroppo", "html_url": "https://github.com/marcogroppo", "followers_url": "https://api.github.com/users/marcogroppo/followers", "following_url": "https://api.github.com/users/marcogroppo/following{/other_user}", "gists_url": "https://api.github.com/users/marcogroppo/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcogroppo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcogroppo/subscriptions", "organizations_url": "https://api.github.com/users/marcogroppo/orgs", "repos_url": "https://api.github.com/users/marcogroppo/repos", "events_url": "https://api.github.com/users/marcogroppo/events{/privacy}", "received_events_url": "https://api.github.com/users/marcogroppo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ba3841b4cbf2dd3536183464281dfdd2a22409", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ba3841b4cbf2dd3536183464281dfdd2a22409", "html_url": "https://github.com/rust-lang/rust/commit/a4ba3841b4cbf2dd3536183464281dfdd2a22409"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "1dc59bb87127e726e1f7deab335cc998bbdbf702", "filename": "crates/ra_assists/src/add_explicit_type.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c5f8f3b1f423781e09bb5f63e33d772ee59fab77/crates%2Fra_assists%2Fsrc%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f8f3b1f423781e09bb5f63e33d772ee59fab77/crates%2Fra_assists%2Fsrc%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fadd_explicit_type.rs?ref=c5f8f3b1f423781e09bb5f63e33d772ee59fab77", "patch": "@@ -18,9 +18,7 @@ pub(crate) fn add_explicit_type(mut ctx: AssistCtx<impl HirDatabase>) -> Option<\n     // Must be a binding\n     let pat = match pat.kind() {\n         PatKind::BindPat(bind_pat) => bind_pat,\n-        _ => {\n-            return None;\n-        }\n+        _ => return None,\n     };\n     let pat_range = pat.syntax().range();\n     // The binding must have a name\n@@ -31,20 +29,20 @@ pub(crate) fn add_explicit_type(mut ctx: AssistCtx<impl HirDatabase>) -> Option<\n         return None;\n     }\n     // Infer type\n-    let func = function_from_child_node(ctx.db, ctx.frange.file_id, pat.syntax())?;\n-    let inference_res = func.infer(ctx.db);\n-    let source_map = func.body_source_map(ctx.db);\n+    let db = ctx.db;\n+    let func = function_from_child_node(db, ctx.frange.file_id, pat.syntax())?;\n+    let inference_res = func.infer(db);\n+    let source_map = func.body_source_map(db);\n     let expr_id = source_map.node_expr(expr.into())?;\n     let ty = inference_res[expr_id].clone();\n     // Assist not applicable if the type is unknown\n     if is_unknown(&ty) {\n         return None;\n     }\n-    let ty_str = ty.display(ctx.db).to_string();\n \n     ctx.add_action(AssistId(\"add_explicit_type\"), \"add explicit type\", |edit| {\n         edit.target(pat_range);\n-        edit.insert(name_range.end(), format!(\": {}\", ty_str));\n+        edit.insert(name_range.end(), format!(\": {}\", ty.display(db)));\n     });\n     ctx.build()\n }"}, {"sha": "09a7f5a437978f0ea510bdfb65f31f11f866bb14", "filename": "docs/user/features.md", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c5f8f3b1f423781e09bb5f63e33d772ee59fab77/docs%2Fuser%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/c5f8f3b1f423781e09bb5f63e33d772ee59fab77/docs%2Fuser%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Ffeatures.md?ref=c5f8f3b1f423781e09bb5f63e33d772ee59fab77", "patch": "@@ -333,10 +333,40 @@ impl VariantData {\n ```rust\n // before:\n use algo:<|>:visitor::{Visitor, visit};\n-//after:\n+// after:\n use algo::{<|>visitor::{Visitor, visit}};\n ```\n \n+- Flip binary expression\n+\n+```rust\n+// before:\n+fn foo() {\n+    if 1 <<|> 2 {\n+        println!(\"Who would have thought?\");\n+    }\n+}\n+// after:\n+fn foo() {\n+    if 2 ><|> 1 {\n+        println!(\"Who would have thought?\");\n+    }\n+}\n+```\n+\n+- Add explicit type\n+\n+```rust\n+// before:\n+fn foo() {\n+    let t<|> = (&2, Some(1));\n+}\n+// after:\n+fn foo() {\n+    let t<|>: (&i32, Option<i32>) = (&2, Some(1));\n+}\n+```\n+\n ### Magic Completions\n \n In addition to usual reference completion, rust-analyzer provides some \u2728magic\u2728"}]}