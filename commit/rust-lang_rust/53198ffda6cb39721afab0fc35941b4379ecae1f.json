{"sha": "53198ffda6cb39721afab0fc35941b4379ecae1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMTk4ZmZkYTZjYjM5NzIxYWZhYjBmYzM1OTQxYjQzNzllY2FlMWY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-07T07:29:24Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-07T09:30:33Z"}, "message": "Mention the specific kind of use in borrowck test function names\n\nSome of the borrowck field-sensitivity test functions have 'use' in\ntheir name, but they don't refer to the specific kind of use (whether a\ncopy or a deref). It would be better if the name more precisely\nreflected what the function is testing.", "tree": {"sha": "259ddd7292c169eede63093430773a73b8ed9392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/259ddd7292c169eede63093430773a73b8ed9392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53198ffda6cb39721afab0fc35941b4379ecae1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53198ffda6cb39721afab0fc35941b4379ecae1f", "html_url": "https://github.com/rust-lang/rust/commit/53198ffda6cb39721afab0fc35941b4379ecae1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53198ffda6cb39721afab0fc35941b4379ecae1f/comments", "author": null, "committer": null, "parents": [{"sha": "61d79175c018a193a7676fe804f1b89280e18937", "url": "https://api.github.com/repos/rust-lang/rust/commits/61d79175c018a193a7676fe804f1b89280e18937", "html_url": "https://github.com/rust-lang/rust/commit/61d79175c018a193a7676fe804f1b89280e18937"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "3d303625182bf024893e2b0eab98031168435a00", "filename": "src/test/compile-fail/borrowck-field-sensitivity.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/53198ffda6cb39721afab0fc35941b4379ecae1f/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53198ffda6cb39721afab0fc35941b4379ecae1f/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-field-sensitivity.rs?ref=53198ffda6cb39721afab0fc35941b4379ecae1f", "patch": "@@ -12,13 +12,13 @@ struct A { a: int, b: Box<int> }\n \n fn borrow<T>(_: &T) { }\n \n-fn use_after_move() {\n+fn deref_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n     drop(*x.b); //~ ERROR use of partially moved value: `*x.b`\n }\n \n-fn use_after_fu_move() {\n+fn deref_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n     let y = A { a: 3, .. x };\n     drop(*x.b); //~ ERROR use of partially moved value: `*x.b`\n@@ -84,7 +84,7 @@ fn fu_move_after_fu_move() {\n \n // The following functions aren't yet accepted, but they should be.\n \n-fn use_after_field_assign_after_uninit() {\n+fn copy_after_field_assign_after_uninit() {\n     let mut x: A;\n     x.a = 1;\n     drop(x.a); //~ ERROR use of possibly uninitialized variable: `x.a`\n@@ -103,8 +103,8 @@ fn move_after_field_assign_after_uninit() {\n }\n \n fn main() {\n-    use_after_move();\n-    use_after_fu_move();\n+    deref_after_move();\n+    deref_after_fu_move();\n \n     borrow_after_move();\n     borrow_after_fu_move();\n@@ -117,7 +117,7 @@ fn main() {\n     fu_move_after_move();\n     fu_move_after_fu_move();\n \n-    use_after_field_assign_after_uninit();\n+    copy_after_field_assign_after_uninit();\n     borrow_after_field_assign_after_uninit();\n     move_after_field_assign_after_uninit();\n }"}, {"sha": "9baa9ca7c6b5eb21f300fd8f016395dbf978f74a", "filename": "src/test/run-pass/borrowck-field-sensitivity.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/53198ffda6cb39721afab0fc35941b4379ecae1f/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53198ffda6cb39721afab0fc35941b4379ecae1f/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs?ref=53198ffda6cb39721afab0fc35941b4379ecae1f", "patch": "@@ -13,52 +13,52 @@ struct B { a: Box<int>, b: Box<int> }\n \n fn borrow<T>(_: &T) { }\n \n-fn move_after_use() {\n+fn move_after_copy() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.a);\n     drop(x.b);\n }\n \n-fn move_after_fu_use() {\n+fn move_after_fu_copy() {\n     let x = A { a: 1, b: box 2 };\n     let _y = A { b: box 3, .. x };\n     drop(x.b);\n }\n \n-fn fu_move_after_use() {\n+fn fu_move_after_copy() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.a);\n     let y = A { a: 3, .. x };\n     drop(y.b);\n }\n \n-fn fu_move_after_fu_use() {\n+fn fu_move_after_fu_copy() {\n     let x = A { a: 1, b: box 2 };\n     let _y = A { b: box 3, .. x };\n     let z = A { a: 4, .. x };\n     drop(z.b);\n }\n \n-fn use_after_move() {\n+fn copy_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n     drop(x.a);\n }\n \n-fn use_after_fu_move() {\n+fn copy_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n     let y = A { a: 3, .. x };\n     drop(x.a);\n     drop(y.b);\n }\n \n-fn fu_use_after_move() {\n+fn fu_copy_after_move() {\n     let x = A { a: 1, b: box 2 };\n     drop(x.b);\n     let _y = A { b: box 3, .. x };\n }\n \n-fn fu_use_after_fu_move() {\n+fn fu_copy_after_fu_move() {\n     let x = A { a: 1, b: box 2 };\n     let y = A { a: 3, .. x };\n     let _z = A { b: box 3, .. x };\n@@ -127,14 +127,14 @@ fn fu_move_after_fu_move() {\n     drop(z.b);\n }\n \n-fn use_after_assign_after_move() {\n+fn copy_after_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x = A { a: 3, b: box 4 };\n     drop(*x.b);\n }\n \n-fn use_after_field_assign_after_move() {\n+fn copy_after_field_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x.b = box 3;\n@@ -170,7 +170,7 @@ fn move_after_field_assign_after_move() {\n     drop(x.b);\n }\n \n-fn use_after_assign_after_uninit() {\n+fn copy_after_assign_after_uninit() {\n     let mut x: A;\n     x = A { a: 1, b: box 2 };\n     drop(x.a);\n@@ -189,14 +189,14 @@ fn move_after_assign_after_uninit() {\n }\n \n fn main() {\n-    move_after_use();\n-    move_after_fu_use();\n-    fu_move_after_use();\n-    fu_move_after_fu_use();\n-    use_after_move();\n-    use_after_fu_move();\n-    fu_use_after_move();\n-    fu_use_after_fu_move();\n+    move_after_copy();\n+    move_after_fu_copy();\n+    fu_move_after_copy();\n+    fu_move_after_fu_copy();\n+    copy_after_move();\n+    copy_after_fu_move();\n+    fu_copy_after_move();\n+    fu_copy_after_fu_move();\n \n     borrow_after_move();\n     borrow_after_fu_move();\n@@ -209,14 +209,14 @@ fn main() {\n     fu_move_after_move();\n     fu_move_after_fu_move();\n \n-    use_after_assign_after_move();\n-    use_after_field_assign_after_move();\n+    copy_after_assign_after_move();\n+    copy_after_field_assign_after_move();\n     borrow_after_assign_after_move();\n     borrow_after_field_assign_after_move();\n     move_after_assign_after_move();\n     move_after_field_assign_after_move();\n \n-    use_after_assign_after_uninit();\n+    copy_after_assign_after_uninit();\n     borrow_after_assign_after_uninit();\n     move_after_assign_after_uninit();\n }"}]}