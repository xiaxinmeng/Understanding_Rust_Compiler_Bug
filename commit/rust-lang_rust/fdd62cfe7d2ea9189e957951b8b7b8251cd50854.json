{"sha": "fdd62cfe7d2ea9189e957951b8b7b8251cd50854", "node_id": "C_kwDOAAsO6NoAKGZkZDYyY2ZlN2QyZWE5MTg5ZTk1Nzk1MWI4YjdiODI1MWNkNTA4NTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-31T05:07:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-31T05:07:00Z"}, "message": "Rollup merge of #112031 - sladyn98:migrate-proc-macro, r=GuillaumeGomez\n\nMigrate  `item_proc_macro` to Askama\n\nThis PR migrates `item_proc_macro` to Askama\n\nRefers https://github.com/rust-lang/rust/issues/108868", "tree": {"sha": "1cef663a2a492421a81f6a222be02a3aaae7ec1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cef663a2a492421a81f6a222be02a3aaae7ec1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdd62cfe7d2ea9189e957951b8b7b8251cd50854", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkdtX0CRBK7hj4Ov3rIwAAgsIIAALQMOCmpgzDv5uzkbtNrmpy\nr4umnav9C2JEWPJCXnYJdVenX/CkLKE4s2+bKvmo7dLkv6U64+uGApBhjDYQBeVw\nO77/impktctyQDKMtVZ4H7VUcfhHwj8tDnZWdSt8/T1Rl1jYZRwi8Bt35laiOwOy\nPwScmdc3QBscivpxYHiaX8cuTBeW99u2GHsuEqCjA+aNm1nhqI8oSgWOPplVA4vW\nz2QTFmXORgb+G2hrNLPykXq15G2BS1JOG/J7JN+1SEUSjQ0bTyOv0yOHbCLpe+81\n7RVyWOjeAVehzl2rVjF8GJjoZmhnLwjfMA3BZ2Jr0iVVyXS4jUMZ/6b+7Tjsd0g=\n=pdz/\n-----END PGP SIGNATURE-----\n", "payload": "tree 1cef663a2a492421a81f6a222be02a3aaae7ec1f\nparent e6e4f7ed1589e03bc2f6c5931c1a72e7947e8682\nparent 5c780d9926a34422f649a678d437950c0672781e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685509620 +0200\ncommitter GitHub <noreply@github.com> 1685509620 +0200\n\nRollup merge of #112031 - sladyn98:migrate-proc-macro, r=GuillaumeGomez\n\nMigrate  `item_proc_macro` to Askama\n\nThis PR migrates `item_proc_macro` to Askama\n\nRefers https://github.com/rust-lang/rust/issues/108868\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd62cfe7d2ea9189e957951b8b7b8251cd50854", "html_url": "https://github.com/rust-lang/rust/commit/fdd62cfe7d2ea9189e957951b8b7b8251cd50854", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdd62cfe7d2ea9189e957951b8b7b8251cd50854/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6e4f7ed1589e03bc2f6c5931c1a72e7947e8682", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e4f7ed1589e03bc2f6c5931c1a72e7947e8682", "html_url": "https://github.com/rust-lang/rust/commit/e6e4f7ed1589e03bc2f6c5931c1a72e7947e8682"}, {"sha": "5c780d9926a34422f649a678d437950c0672781e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c780d9926a34422f649a678d437950c0672781e", "html_url": "https://github.com/rust-lang/rust/commit/5c780d9926a34422f649a678d437950c0672781e"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "ba0fc35bdbc6adaf7dfa1b7d659bb5386560b801", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fdd62cfe7d2ea9189e957951b8b7b8251cd50854/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdd62cfe7d2ea9189e957951b8b7b8251cd50854/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=fdd62cfe7d2ea9189e957951b8b7b8251cd50854", "patch": "@@ -1420,30 +1420,36 @@ fn item_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n     write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2))\n }\n \n-fn item_proc_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, m: &clean::ProcMacro) {\n-    wrap_item(w, |w| {\n+fn item_proc_macro(\n+    w: &mut impl fmt::Write,\n+    cx: &mut Context<'_>,\n+    it: &clean::Item,\n+    m: &clean::ProcMacro,\n+) {\n+    let mut buffer = Buffer::new();\n+    wrap_item(&mut buffer, |buffer| {\n         let name = it.name.expect(\"proc-macros always have names\");\n         match m.kind {\n             MacroKind::Bang => {\n-                write!(w, \"{}!() {{ /* proc-macro */ }}\", name);\n+                write!(buffer, \"{}!() {{ /* proc-macro */ }}\", name);\n             }\n             MacroKind::Attr => {\n-                write!(w, \"#[{}]\", name);\n+                write!(buffer, \"#[{}]\", name);\n             }\n             MacroKind::Derive => {\n-                write!(w, \"#[derive({})]\", name);\n+                write!(buffer, \"#[derive({})]\", name);\n                 if !m.helpers.is_empty() {\n-                    w.push_str(\"\\n{\\n\");\n-                    w.push_str(\"    // Attributes available to this derive:\\n\");\n+                    buffer.push_str(\"\\n{\\n\");\n+                    buffer.push_str(\"    // Attributes available to this derive:\\n\");\n                     for attr in &m.helpers {\n-                        writeln!(w, \"    #[{}]\", attr);\n+                        writeln!(buffer, \"    #[{}]\", attr);\n                     }\n-                    w.push_str(\"}\\n\");\n+                    buffer.push_str(\"}\\n\");\n                 }\n             }\n         }\n     });\n-    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2))\n+    write!(w, \"{}{}\", buffer.into_inner(), document(cx, it, None, HeadingOffset::H2)).unwrap();\n }\n \n fn item_primitive(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {"}]}