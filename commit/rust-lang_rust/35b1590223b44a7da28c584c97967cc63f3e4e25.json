{"sha": "35b1590223b44a7da28c584c97967cc63f3e4e25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YjE1OTAyMjNiNDRhN2RhMjhjNTg0Yzk3OTY3Y2M2M2YzZTRlMjU=", "commit": {"author": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2020-07-28T17:03:56Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-04-16T18:12:01Z"}, "message": "Adjust docs and tests for new `IntoIterator` impl for arrays", "tree": {"sha": "5b94889f3a0f3ace1a3dd2e6d907096f0493083e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b94889f3a0f3ace1a3dd2e6d907096f0493083e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35b1590223b44a7da28c584c97967cc63f3e4e25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35b1590223b44a7da28c584c97967cc63f3e4e25", "html_url": "https://github.com/rust-lang/rust/commit/35b1590223b44a7da28c584c97967cc63f3e4e25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35b1590223b44a7da28c584c97967cc63f3e4e25/comments", "author": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32aaea9c8fb99a94e6b289498a348459357c392f", "url": "https://api.github.com/repos/rust-lang/rust/commits/32aaea9c8fb99a94e6b289498a348459357c392f", "html_url": "https://github.com/rust-lang/rust/commit/32aaea9c8fb99a94e6b289498a348459357c392f"}], "stats": {"total": 177, "additions": 8, "deletions": 169}, "files": [{"sha": "ad4737ec2f6188d406bafd689b68e6a5c79376fc", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/35b1590223b44a7da28c584c97967cc63f3e4e25/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b1590223b44a7da28c584c97967cc63f3e4e25/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=35b1590223b44a7da28c584c97967cc63f3e4e25", "patch": "@@ -498,7 +498,7 @@ mod prim_pointer {}\n /// - [`Copy`]\n /// - [`Clone`]\n /// - [`Debug`]\n-/// - [`IntoIterator`] (implemented for `&[T; N]` and `&mut [T; N]`)\n+/// - [`IntoIterator`] (implemented for `[T; N]`, `&[T; N]` and `&mut [T; N]`)\n /// - [`PartialEq`], [`PartialOrd`], [`Eq`], [`Ord`]\n /// - [`Hash`]\n /// - [`AsRef`], [`AsMut`]\n@@ -526,31 +526,16 @@ mod prim_pointer {}\n /// assert_eq!([1, 2], &array[1..]);\n ///\n /// // This loop prints: 0 1 2\n-/// for x in &array {\n+/// for x in array {\n ///     print!(\"{} \", x);\n /// }\n /// ```\n ///\n-/// An array itself is not iterable:\n-///\n-/// ```compile_fail,E0277\n-/// let array: [i32; 3] = [0; 3];\n-///\n-/// for x in array { }\n-/// // error: the trait bound `[i32; 3]: std::iter::Iterator` is not satisfied\n-/// ```\n-///\n-/// The solution is to coerce the array to a slice by calling a slice method:\n+/// You can also iterate over reference to the array's elements:\n ///\n /// ```\n-/// # let array: [i32; 3] = [0; 3];\n-/// for x in array.iter() { }\n-/// ```\n-///\n-/// You can also use the array reference's [`IntoIterator`] implementation:\n+/// let array: [i32; 3] = [0; 3];\n ///\n-/// ```\n-/// # let array: [i32; 3] = [0; 3];\n /// for x in &array { }\n /// ```\n ///"}, {"sha": "037540a3e89e629bad4e92d301ca767f77d04625", "filename": "src/test/ui/iterators/array-of-ranges.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35b1590223b44a7da28c584c97967cc63f3e4e25/src%2Ftest%2Fui%2Fiterators%2Farray-of-ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b1590223b44a7da28c584c97967cc63f3e4e25/src%2Ftest%2Fui%2Fiterators%2Farray-of-ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Farray-of-ranges.rs?ref=35b1590223b44a7da28c584c97967cc63f3e4e25", "patch": "@@ -1,23 +1,16 @@\n+// check-pass\n+\n fn main() {\n     for _ in [0..1] {}\n-//~^ ERROR is not an iterator\n     for _ in [0..=1] {}\n-//~^ ERROR is not an iterator\n     for _ in [0..] {}\n-//~^ ERROR is not an iterator\n     for _ in [..1] {}\n-//~^ ERROR is not an iterator\n     for _ in [..=1] {}\n-//~^ ERROR is not an iterator\n     let start = 0;\n     let end = 0;\n     for _ in [start..end] {}\n-//~^ ERROR is not an iterator\n     let array_of_range = [start..end];\n     for _ in array_of_range {}\n-//~^ ERROR is not an iterator\n     for _ in [0..1, 2..3] {}\n-//~^ ERROR is not an iterator\n     for _ in [0..=1] {}\n-//~^ ERROR is not an iterator\n }"}, {"sha": "7d58eb948ea815991b79245d2e926b075d1fd9c8", "filename": "src/test/ui/iterators/array-of-ranges.stderr", "status": "removed", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/32aaea9c8fb99a94e6b289498a348459357c392f/src%2Ftest%2Fui%2Fiterators%2Farray-of-ranges.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32aaea9c8fb99a94e6b289498a348459357c392f/src%2Ftest%2Fui%2Fiterators%2Farray-of-ranges.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Farray-of-ranges.stderr?ref=32aaea9c8fb99a94e6b289498a348459357c392f", "patch": "@@ -1,102 +0,0 @@\n-error[E0277]: `[std::ops::Range<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:2:14\n-   |\n-LL |     for _ in [0..1] {}\n-   |              ^^^^^^ if you meant to iterate between two values, remove the square brackets\n-   |\n-   = help: the trait `Iterator` is not implemented for `[std::ops::Range<{integer}>; 1]`\n-   = note: `[start..end]` is an array of one `Range`; you might have meant to have a `Range` without the brackets: `start..end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[std::ops::Range<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[RangeInclusive<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:4:14\n-   |\n-LL |     for _ in [0..=1] {}\n-   |              ^^^^^^^ if you meant to iterate between two values, remove the square brackets\n-   |\n-   = help: the trait `Iterator` is not implemented for `[RangeInclusive<{integer}>; 1]`\n-   = note: `[start..=end]` is an array of one `RangeInclusive`; you might have meant to have a `RangeInclusive` without the brackets: `start..=end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[RangeInclusive<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[RangeFrom<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:6:14\n-   |\n-LL |     for _ in [0..] {}\n-   |              ^^^^^ if you meant to iterate from a value onwards, remove the square brackets\n-   |\n-   = help: the trait `Iterator` is not implemented for `[RangeFrom<{integer}>; 1]`\n-   = note: `[start..]` is an array of one `RangeFrom`; you might have meant to have a `RangeFrom` without the brackets: `start..`, keeping in mind that iterating over an unbounded iterator will run forever unless you `break` or `return` from within the loop\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[RangeFrom<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[RangeTo<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:8:14\n-   |\n-LL |     for _ in [..1] {}\n-   |              ^^^^^ if you meant to iterate until a value, remove the square brackets and add a starting value\n-   |\n-   = help: the trait `Iterator` is not implemented for `[RangeTo<{integer}>; 1]`\n-   = note: `[..end]` is an array of one `RangeTo`; you might have meant to have a bounded `Range` without the brackets: `0..end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[RangeTo<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[RangeToInclusive<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:10:14\n-   |\n-LL |     for _ in [..=1] {}\n-   |              ^^^^^^ if you meant to iterate until a value (including it), remove the square brackets and add a starting value\n-   |\n-   = help: the trait `Iterator` is not implemented for `[RangeToInclusive<{integer}>; 1]`\n-   = note: `[..=end]` is an array of one `RangeToInclusive`; you might have meant to have a bounded `RangeInclusive` without the brackets: `0..=end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[RangeToInclusive<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[std::ops::Range<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:14:14\n-   |\n-LL |     for _ in [start..end] {}\n-   |              ^^^^^^^^^^^^ if you meant to iterate between two values, remove the square brackets\n-   |\n-   = help: the trait `Iterator` is not implemented for `[std::ops::Range<{integer}>; 1]`\n-   = note: `[start..end]` is an array of one `Range`; you might have meant to have a `Range` without the brackets: `start..end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[std::ops::Range<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[std::ops::Range<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:17:14\n-   |\n-LL |     for _ in array_of_range {}\n-   |              ^^^^^^^^^^^^^^ if you meant to iterate between two values, remove the square brackets\n-   |\n-   = help: the trait `Iterator` is not implemented for `[std::ops::Range<{integer}>; 1]`\n-   = note: `[start..end]` is an array of one `Range`; you might have meant to have a `Range` without the brackets: `start..end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[std::ops::Range<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[std::ops::Range<{integer}>; 2]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:19:14\n-   |\n-LL |     for _ in [0..1, 2..3] {}\n-   |              ^^^^^^^^^^^^ arrays do not yet implement `IntoIterator`; try using `std::array::IntoIter::new(arr)`\n-   |\n-   = help: the trait `Iterator` is not implemented for `[std::ops::Range<{integer}>; 2]`\n-   = note: see <https://github.com/rust-lang/rust/pull/65819> for more details\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[std::ops::Range<{integer}>; 2]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[RangeInclusive<{integer}>; 1]` is not an iterator\n-  --> $DIR/array-of-ranges.rs:21:14\n-   |\n-LL |     for _ in [0..=1] {}\n-   |              ^^^^^^^ if you meant to iterate between two values, remove the square brackets\n-   |\n-   = help: the trait `Iterator` is not implemented for `[RangeInclusive<{integer}>; 1]`\n-   = note: `[start..=end]` is an array of one `RangeInclusive`; you might have meant to have a `RangeInclusive` without the brackets: `start..=end`\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[RangeInclusive<{integer}>; 1]`\n-   = note: required by `into_iter`\n-\n-error: aborting due to 9 previous errors\n-\n-For more information about this error, try `rustc --explain E0277`."}, {"sha": "5985c74e11fdf313cf6b3b24d1ab2b635f395e4b", "filename": "src/test/ui/iterators/array.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/35b1590223b44a7da28c584c97967cc63f3e4e25/src%2Ftest%2Fui%2Fiterators%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b1590223b44a7da28c584c97967cc63f3e4e25/src%2Ftest%2Fui%2Fiterators%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Farray.rs?ref=35b1590223b44a7da28c584c97967cc63f3e4e25", "patch": "@@ -1,9 +1,8 @@\n+// check-pass\n+\n fn main() {\n     for _ in [1, 2] {}\n-//~^ ERROR is not an iterator\n     let x = [1, 2];\n     for _ in x {}\n-//~^ ERROR is not an iterator\n     for _ in [1.0, 2.0] {}\n-//~^ ERROR is not an iterator\n }"}, {"sha": "7e2b600fb7af2be302796965fe9ca83211932396", "filename": "src/test/ui/iterators/array.stderr", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/32aaea9c8fb99a94e6b289498a348459357c392f/src%2Ftest%2Fui%2Fiterators%2Farray.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32aaea9c8fb99a94e6b289498a348459357c392f/src%2Ftest%2Fui%2Fiterators%2Farray.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Farray.stderr?ref=32aaea9c8fb99a94e6b289498a348459357c392f", "patch": "@@ -1,36 +0,0 @@\n-error[E0277]: `[{integer}; 2]` is not an iterator\n-  --> $DIR/array.rs:2:14\n-   |\n-LL |     for _ in [1, 2] {}\n-   |              ^^^^^^ arrays do not yet implement `IntoIterator`; try using `std::array::IntoIter::new(arr)`\n-   |\n-   = help: the trait `Iterator` is not implemented for `[{integer}; 2]`\n-   = note: see <https://github.com/rust-lang/rust/pull/65819> for more details\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[{integer}; 2]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[{integer}; 2]` is not an iterator\n-  --> $DIR/array.rs:5:14\n-   |\n-LL |     for _ in x {}\n-   |              ^ arrays do not yet implement `IntoIterator`; try using `std::array::IntoIter::new(arr)`\n-   |\n-   = help: the trait `Iterator` is not implemented for `[{integer}; 2]`\n-   = note: see <https://github.com/rust-lang/rust/pull/65819> for more details\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[{integer}; 2]`\n-   = note: required by `into_iter`\n-\n-error[E0277]: `[{float}; 2]` is not an iterator\n-  --> $DIR/array.rs:7:14\n-   |\n-LL |     for _ in [1.0, 2.0] {}\n-   |              ^^^^^^^^^^ arrays do not yet implement `IntoIterator`; try using `std::array::IntoIter::new(arr)`\n-   |\n-   = help: the trait `Iterator` is not implemented for `[{float}; 2]`\n-   = note: see <https://github.com/rust-lang/rust/pull/65819> for more details\n-   = note: required because of the requirements on the impl of `IntoIterator` for `[{float}; 2]`\n-   = note: required by `into_iter`\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0277`."}]}