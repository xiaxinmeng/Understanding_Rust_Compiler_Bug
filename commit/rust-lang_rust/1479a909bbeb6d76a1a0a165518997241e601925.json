{"sha": "1479a909bbeb6d76a1a0a165518997241e601925", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NzlhOTA5YmJlYjZkNzZhMWEwYTE2NTUxODk5NzI0MWU2MDE5MjU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-21T00:45:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-26T16:42:06Z"}, "message": "Fix odd example where bounds were permitted and then ignored", "tree": {"sha": "3e9da096b6d6d5a1e5fde3f1e1aaa3c7df9b2242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e9da096b6d6d5a1e5fde3f1e1aaa3c7df9b2242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1479a909bbeb6d76a1a0a165518997241e601925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1479a909bbeb6d76a1a0a165518997241e601925", "html_url": "https://github.com/rust-lang/rust/commit/1479a909bbeb6d76a1a0a165518997241e601925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1479a909bbeb6d76a1a0a165518997241e601925/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc2356558d73f5b197a693ffe20e8c610d182d82", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2356558d73f5b197a693ffe20e8c610d182d82", "html_url": "https://github.com/rust-lang/rust/commit/bc2356558d73f5b197a693ffe20e8c610d182d82"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "611c10ea71a09ea3db4782926d6eda630b3cc210", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1479a909bbeb6d76a1a0a165518997241e601925/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1479a909bbeb6d76a1a0a165518997241e601925/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=1479a909bbeb6d76a1a0a165518997241e601925", "patch": "@@ -115,7 +115,7 @@ pub fn stdout() -> Option<Box<Terminal<WriterWrapper> + Send>> {\n #[cfg(not(windows))]\n /// Return a Terminal wrapping stderr, or None if a terminal couldn't be\n /// opened.\n-pub fn stderr() -> Option<Box<Terminal<WriterWrapper> + Send> + Send> {\n+pub fn stderr() -> Option<Box<Terminal<WriterWrapper> + Send>> {\n     TerminfoTerminal::new(WriterWrapper {\n         wrapped: box std::io::stderr() as Box<Writer + Send>,\n     })"}]}