{"sha": "3e73a46660b234ef1943a0cbb4348f4c75eb8ed6", "node_id": "C_kwDOAAsO6NoAKDNlNzNhNDY2NjBiMjM0ZWYxOTQzYTBjYmI0MzQ4ZjRjNzVlYjhlZDY", "commit": {"author": {"name": "vi_mi", "email": "fenil.jain2018@vitstudent.ac.in", "date": "2021-10-22T08:55:47Z"}, "committer": {"name": "vi_mi", "email": "fenil.jain2018@vitstudent.ac.in", "date": "2021-10-22T09:16:56Z"}, "message": "fix: making tests compatible with new trimmed sel_range", "tree": {"sha": "e7a049cd928792c54058196cd05d31a969ea9c1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7a049cd928792c54058196cd05d31a969ea9c1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6", "html_url": "https://github.com/rust-lang/rust/commit/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6/comments", "author": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bf5f14666084632e25d1af86cd0fea6792d60e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf5f14666084632e25d1af86cd0fea6792d60e0", "html_url": "https://github.com/rust-lang/rust/commit/2bf5f14666084632e25d1af86cd0fea6792d60e0"}], "stats": {"total": 78, "additions": 26, "deletions": 52}, "files": [{"sha": "dc0683866c2d79d48a632ac34c5cddc4057830c6", "filename": "crates/ide_assists/src/handlers/extract_module.rs", "status": "modified", "additions": 24, "deletions": 48, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=3e73a46660b234ef1943a0cbb4348f4c75eb8ed6", "patch": "@@ -28,11 +28,9 @@ use super::remove_unused_param::range_to_remove;\n // resolved.\n //\n // ```\n-// $0\n-// fn foo(name: i32) -> i32 {\n+// $0fn foo(name: i32) -> i32 {\n //     name + 1\n-// }\n-// $0\n+// }$0\n //\n // fn bar(name: i32) -> i32 {\n //     name + 2\n@@ -939,8 +937,7 @@ $0pub struct PublicStruct {\n                     let _a = bar();\n                 }\n \n-$0\n-struct PrivateStruct {\n+$0struct PrivateStruct {\n     inner: SomeType,\n }\n \n@@ -956,8 +953,7 @@ impl PrivateStruct {\n \n fn bar() -> i32 {\n     2\n-}\n-$0\n+}$0\n             }\n             \",\n             r\"\n@@ -1019,11 +1015,9 @@ mod modname {\n         check_assist(\n             extract_module,\n             r\"\n-$0\n-fn foo(name: i32) -> i32 {\n+$0fn foo(name: i32) -> i32 {\n     name + 1\n-}\n-$0\n+}$0\n \n                 fn bar(name: i32) -> i32 {\n                     name + 2\n@@ -1049,15 +1043,13 @@ mod modname {\n             extract_module,\n             r\"\n             mod impl_play {\n-$0\n-struct A {}\n+$0struct A {}\n \n impl A {\n     pub fn new_a() -> i32 {\n         2\n     }\n-}\n-$0\n+}$0\n \n                 fn a() {\n                     let _a = A::new_a();\n@@ -1097,11 +1089,9 @@ mod modname {\n             mod bar {\n                 use super::foo::{PrivateStruct, PrivateStruct1};\n \n-$0\n-struct Strukt {\n+$0struct Strukt {\n     field: PrivateStruct,\n-}\n-$0\n+}$0\n \n                 struct Strukt1 {\n                     field: PrivateStruct1,\n@@ -1145,11 +1135,9 @@ mod modname {\n             mod bar {\n                 use super::foo::PrivateStruct;\n \n-$0\n-struct Strukt {\n+$0struct Strukt {\n     field: PrivateStruct,\n-}\n-$0\n+}$0\n \n                 struct Strukt1 {\n                     field: PrivateStruct,\n@@ -1188,11 +1176,9 @@ mod modname {\n             mod bar {\n                 pub struct PrivateStruct;\n \n-$0\n-struct Strukt {\n+$0struct Strukt {\n     field: PrivateStruct,\n-}\n-$0\n+}$0\n \n                 struct Strukt1 {\n                     field: PrivateStruct,\n@@ -1227,13 +1213,11 @@ mod modname {\n             mod impl_play {\n                 struct A {}\n \n-$0\n-impl A {\n+$0impl A {\n     pub fn new_a() -> i32 {\n         2\n     }\n-}\n-$0\n+}$0\n \n                 fn a() {\n                     let _a = A::new_a();\n@@ -1274,13 +1258,11 @@ mod modname {\n             mod impl_play {\n                 use super::foo::A;\n \n-$0\n-impl A {\n+$0impl A {\n     pub fn new_a() -> i32 {\n         2\n     }\n-}\n-$0\n+}$0\n \n                 fn a() {\n                     let _a = A::new_a();\n@@ -1320,8 +1302,7 @@ mod modname {\n             mod impl_play2 {\n                 trait JustATrait {}\n \n-$0\n-struct A {}\n+$0struct A {}\n \n fn foo<T: JustATrait>(arg: T) -> T {\n     arg\n@@ -1332,8 +1313,7 @@ impl JustATrait for A {}\n fn bar() {\n     let a = A {};\n     foo(a);\n-}\n-$0\n+}$0\n             }\n             \",\n             r\"\n@@ -1367,11 +1347,9 @@ mod modname {\n             extract_module,\n             r\"\n             mod impl_play2 {\n-$0\n-mod impl_play {\n+$0mod impl_play {\n     pub struct A {}\n-}\n-$0\n+}$0\n             }\n             \",\n             r\"\n@@ -1401,11 +1379,9 @@ mod modname {\n             }\n \n             fn main() {\n-                $0\n-                struct Strukt1 {\n+                $0struct Strukt1 {\n                     field: Strukt,\n-                }\n-                $0\n+                }$0\n             }\n             //- /foo.rs\n             pub struct PrivateStruct;"}, {"sha": "5f801e5d1a1097205f9946f4b941839913f47a0f", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e73a46660b234ef1943a0cbb4348f4c75eb8ed6/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=3e73a46660b234ef1943a0cbb4348f4c75eb8ed6", "patch": "@@ -531,11 +531,9 @@ fn doctest_extract_module() {\n     check_doc_test(\n         \"extract_module\",\n         r#####\"\n-$0\n-fn foo(name: i32) -> i32 {\n+$0fn foo(name: i32) -> i32 {\n     name + 1\n-}\n-$0\n+}$0\n \n fn bar(name: i32) -> i32 {\n     name + 2"}]}