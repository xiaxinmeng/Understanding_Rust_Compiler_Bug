{"sha": "fa7d8de29fba0d691b3ba543e90f272afe499e36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhN2Q4ZGUyOWZiYTBkNjkxYjNiYTU0M2U5MGYyNzJhZmU0OTllMzY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-27T07:41:31Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-27T07:41:31Z"}, "message": "Only read the trailing comma of outermost fn call", "tree": {"sha": "5c4b7ce7c9213e311c3bf67c48ebd8a0273fa743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c4b7ce7c9213e311c3bf67c48ebd8a0273fa743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa7d8de29fba0d691b3ba543e90f272afe499e36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa7d8de29fba0d691b3ba543e90f272afe499e36", "html_url": "https://github.com/rust-lang/rust/commit/fa7d8de29fba0d691b3ba543e90f272afe499e36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa7d8de29fba0d691b3ba543e90f272afe499e36/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daf4789b768444035efef2383da75011237f4ef7", "url": "https://api.github.com/repos/rust-lang/rust/commits/daf4789b768444035efef2383da75011237f4ef7", "html_url": "https://github.com/rust-lang/rust/commit/daf4789b768444035efef2383da75011237f4ef7"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "33dc3a40e21ab337dd43fdbb7c40902e835a1426", "filename": "src/expr.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fa7d8de29fba0d691b3ba543e90f272afe499e36/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7d8de29fba0d691b3ba543e90f272afe499e36/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=fa7d8de29fba0d691b3ba543e90f272afe499e36", "patch": "@@ -2359,11 +2359,24 @@ pub fn wrap_args_with_parens(\n     }\n }\n \n+/// Return true if a function call or a method call represented by the given span ends with a\n+/// trailing comma. This function is used when rewriting macro, as adding or removing a trailing\n+/// comma from macro can potentially break the code.\n fn span_ends_with_comma(context: &RewriteContext, span: Span) -> bool {\n-    let snippet = context.snippet(span);\n-    snippet\n-        .trim_right_matches(|c: char| c == ')' || c.is_whitespace())\n-        .ends_with(',')\n+    let mut encountered_closing_paren = false;\n+    for c in context.snippet(span).chars().rev() {\n+        match c {\n+            ',' => return true,\n+            ')' => if encountered_closing_paren {\n+                return false;\n+            } else {\n+                encountered_closing_paren = true;\n+            },\n+            _ if c.is_whitespace() => continue,\n+            _ => return false,\n+        }\n+    }\n+    false\n }\n \n fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) -> Option<String> {"}]}