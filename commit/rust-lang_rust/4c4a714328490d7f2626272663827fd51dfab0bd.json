{"sha": "4c4a714328490d7f2626272663827fd51dfab0bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNGE3MTQzMjg0OTBkN2YyNjI2MjcyNjYzODI3ZmQ1MWRmYWIwYmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-24T08:39:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-25T07:52:50Z"}, "message": "test diagnostics", "tree": {"sha": "3f12c6355dfd585e27aa223b3fa5625a0a4fd654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f12c6355dfd585e27aa223b3fa5625a0a4fd654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c4a714328490d7f2626272663827fd51dfab0bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4a714328490d7f2626272663827fd51dfab0bd", "html_url": "https://github.com/rust-lang/rust/commit/4c4a714328490d7f2626272663827fd51dfab0bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c4a714328490d7f2626272663827fd51dfab0bd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ffd939f670a1cba5bf415759b43e63700761a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ffd939f670a1cba5bf415759b43e63700761a7", "html_url": "https://github.com/rust-lang/rust/commit/c7ffd939f670a1cba5bf415759b43e63700761a7"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "08f927bb46bdccc7c68340bb990859ec021be774", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a714328490d7f2626272663827fd51dfab0bd/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a714328490d7f2626272663827fd51dfab0bd/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=4c4a714328490d7f2626272663827fd51dfab0bd", "patch": "@@ -9,7 +9,7 @@ use relative_path::RelativePathBuf;\n use test_utils::{parse_fixture, CURSOR_MARKER, extract_offset};\n use rustc_hash::FxHashMap;\n \n-use crate::{db, HirInterner};\n+use crate::{db, HirInterner, diagnostics::DiagnosticSink, DefDatabase};\n \n pub const WORKSPACE: SourceRootId = SourceRootId(0);\n \n@@ -70,6 +70,24 @@ impl MockDatabase {\n         self.set_crate_graph(Arc::new(crate_graph))\n     }\n \n+    pub fn diagnostics(&self) -> String {\n+        let mut buf = String::from(\"\\n\");\n+        let mut files: Vec<FileId> = self.files.values().map(|&it| it).collect();\n+        files.sort();\n+        for file in files {\n+            let module = crate::source_binder::module_from_file_id(self, file).unwrap();\n+            module.diagnostics(\n+                self,\n+                &mut DiagnosticSink::new(|d| {\n+                    let source_file = self.hir_parse(d.file());\n+                    let syntax_node = d.syntax_node().to_node(&source_file);\n+                    buf += &format!(\"{:?}: {}\\n\", syntax_node.text(), d.message());\n+                }),\n+            )\n+        }\n+        buf\n+    }\n+\n     fn from_fixture(fixture: &str) -> (MockDatabase, Option<FilePosition>) {\n         let mut db = MockDatabase::default();\n "}, {"sha": "277b0757c4fcd35c662160be8735188acf237c82", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a714328490d7f2626272663827fd51dfab0bd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a714328490d7f2626272663827fd51dfab0bd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=4c4a714328490d7f2626272663827fd51dfab0bd", "patch": "@@ -552,3 +552,21 @@ foo: v\n \"###\n     );\n }\n+\n+#[test]\n+fn unresolved_module_diagnostics() {\n+    let diagnostics = MockDatabase::with_files(\n+        r\"\n+        //- /lib.rs\n+        mod foo;\n+        mod bar;\n+        //- /foo.rs\n+        \",\n+    )\n+    .diagnostics();\n+\n+    assert_snapshot_matches!(diagnostics, @r###\"\n+\"mod bar;\": unresolved module\n+\"###\n+    );\n+}"}, {"sha": "3aedba2431d554fca9a616c64cc3397df5496fbb", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4c4a714328490d7f2626272663827fd51dfab0bd/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4a714328490d7f2626272663827fd51dfab0bd/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=4c4a714328490d7f2626272663827fd51dfab0bd", "patch": "@@ -2319,3 +2319,27 @@ fn typing_whitespace_inside_a_function_should_not_invalidate_types() {\n         assert!(!format!(\"{:?}\", events).contains(\"infer\"), \"{:#?}\", events)\n     }\n }\n+\n+#[test]\n+fn no_such_field_diagnostics() {\n+    let diagnostics = MockDatabase::with_files(\n+        r\"\n+        //- /lib.rs\n+        struct S { foo: i32, bar: () }\n+        impl S {\n+            fn new() -> S {\n+                S {\n+                    foo: 92,\n+                    baz: 62,\n+                }\n+            }\n+        }\n+        \",\n+    )\n+    .diagnostics();\n+\n+    assert_snapshot_matches!(diagnostics, @r###\"\n+\"baz: 62\": no such field\n+\"###\n+    );\n+}"}]}