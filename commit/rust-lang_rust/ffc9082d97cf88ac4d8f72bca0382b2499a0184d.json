{"sha": "ffc9082d97cf88ac4d8f72bca0382b2499a0184d", "node_id": "C_kwDOAAsO6NoAKGZmYzkwODJkOTdjZjg4YWM0ZDhmNzJiY2EwMzgyYjI0OTlhMDE4NGQ", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-12T04:52:30Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-12T04:52:30Z"}, "message": "Remove function from rebase", "tree": {"sha": "eb307331c19977e01702e573501c33ec86cae368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb307331c19977e01702e573501c33ec86cae368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffc9082d97cf88ac4d8f72bca0382b2499a0184d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmG1gA4ACgkQbQF6ltjm\nwvmJ9g/9H7v29f0W6L2YlUuJ1GDEvZW1zMj9hwDlhS3fD12QLjfaj6Mk2719zWfH\nrQXCKg3FpUrc7WyrBMav3YCg3YenGA16NqRlMCCecYUAbR44ku13AeVc/F43orS3\nMf6/TFZ8Pby1HUy5OsH25OpYUaT78YCTcwIemBINF4gu2EE2k9yd5o3c1DQjR6ob\njeNIJZ641FogM0RbLnlZvPkpD3LU4eCuMnWLB1rmNDpF179gAPktOGLDklptx+2b\nCOQl2ii+ygdqFJlOMdAMtlaObk21XeknR2G1Oip3AeBPIcKqQYPBtaxA37qIX+Hr\nOD3QN6hMjTNdAzrELeQsTU2hNe9M58KVFLQ7vXwlYXoEjF8aow/3AqsBOw4l93ve\nnFBM2AcFxEdek7wq9We/3k1BQ+U6xqeSvduaqeQ690BVk2Zl9sRNAyqto31nKXhb\n3mRyNbRWU/1j8AMk4a1yiZ8GCCSt0+D1kDmbWj2l0nutHZ8B6501+J4VmzfYzLej\ndk24+5vITzJFJSymHJ/YGC82+byJXfvwzsprOJwuDpldbCqw0WS/H7Hpx6aPY0/u\nnJzoVxsIj41/iDgtiSqSjmMK7fOXxzGzYuzd1LiUQJxRPJOjz6AYcvz1qjiy8Gbb\npypbVfTVbABNpaUZLzmCqK/OhmwcPkrOiN/3RJgBD1sQP18EfLI=\n=Ku56\n-----END PGP SIGNATURE-----", "payload": "tree eb307331c19977e01702e573501c33ec86cae368\nparent 83587e8d307a765b940957dad01706b1d97a2090\nauthor Deadbeef <ent3rm4n@gmail.com> 1639284750 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1639284750 +0800\n\nRemove function from rebase\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc9082d97cf88ac4d8f72bca0382b2499a0184d", "html_url": "https://github.com/rust-lang/rust/commit/ffc9082d97cf88ac4d8f72bca0382b2499a0184d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffc9082d97cf88ac4d8f72bca0382b2499a0184d/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83587e8d307a765b940957dad01706b1d97a2090", "url": "https://api.github.com/repos/rust-lang/rust/commits/83587e8d307a765b940957dad01706b1d97a2090", "html_url": "https://github.com/rust-lang/rust/commit/83587e8d307a765b940957dad01706b1d97a2090"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "56ba3d1a445a3ab7a224c63277e06703534790d9", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ffc9082d97cf88ac4d8f72bca0382b2499a0184d/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc9082d97cf88ac4d8f72bca0382b2499a0184d/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=ffc9082d97cf88ac4d8f72bca0382b2499a0184d", "patch": "@@ -3210,34 +3210,6 @@ impl<'hir> Node<'hir> {\n         }\n     }\n \n-    pub fn hir_id(&self) -> Option<HirId> {\n-        match self {\n-            Node::Item(Item { def_id, .. })\n-            | Node::TraitItem(TraitItem { def_id, .. })\n-            | Node::ImplItem(ImplItem { def_id, .. })\n-            | Node::ForeignItem(ForeignItem { def_id, .. }) => Some(HirId::make_owner(*def_id)),\n-            Node::Field(FieldDef { hir_id, .. })\n-            | Node::AnonConst(AnonConst { hir_id, .. })\n-            | Node::Expr(Expr { hir_id, .. })\n-            | Node::Stmt(Stmt { hir_id, .. })\n-            | Node::Ty(Ty { hir_id, .. })\n-            | Node::Binding(Pat { hir_id, .. })\n-            | Node::Pat(Pat { hir_id, .. })\n-            | Node::Arm(Arm { hir_id, .. })\n-            | Node::Block(Block { hir_id, .. })\n-            | Node::Local(Local { hir_id, .. })\n-            | Node::Lifetime(Lifetime { hir_id, .. })\n-            | Node::Param(Param { hir_id, .. })\n-            | Node::Infer(InferArg { hir_id, .. })\n-            | Node::GenericParam(GenericParam { hir_id, .. }) => Some(*hir_id),\n-            Node::TraitRef(TraitRef { hir_ref_id, .. }) => Some(*hir_ref_id),\n-            Node::PathSegment(PathSegment { hir_id, .. }) => *hir_id,\n-            Node::Variant(Variant { id, .. }) => Some(*id),\n-            Node::Ctor(variant) => variant.ctor_hir_id(),\n-            Node::Crate(_) | Node::Visibility(_) => None,\n-        }\n-    }\n-\n     pub fn as_owner(self) -> Option<OwnerNode<'hir>> {\n         match self {\n             Node::Item(i) => Some(OwnerNode::Item(i)),"}]}