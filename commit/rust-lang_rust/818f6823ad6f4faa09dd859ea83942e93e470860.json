{"sha": "818f6823ad6f4faa09dd859ea83942e93e470860", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxOGY2ODIzYWQ2ZjRmYWEwOWRkODU5ZWE4Mzk0MmU5M2U0NzA4NjA=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-15T09:58:03Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-15T10:00:26Z"}, "message": "compiletest: Add some compiletest::util unittests", "tree": {"sha": "7916b2cce979882e4b05ee53c6b54d1d6642ed7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7916b2cce979882e4b05ee53c6b54d1d6642ed7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/818f6823ad6f4faa09dd859ea83942e93e470860", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlwU0LsACgkQtvoGpuDi\nZluvphAAkhMzr6wOUvoZ04Zb+j8k5uLcvhCgqdRFGFRF3JryS1R4vwn9GNFYE+PI\nEnxZEIMDjfLbQq0xhFZBHZF9vtAWI/IODUVc8nIFafV2EUkbtwJd6ggn/bbWaY4o\nIIyoFBCJaTsQakbwM1lp2kvPPqVWnuLjLZKJM2+7NmAcH3MU+k9nJwr1BPR1lf6k\nM5te1pN1mbxEeargiPSn+Bu9xNXBsVpibohsby7tt1/tkvCoHO5nfDTNg2vyWtbX\nZM5XiJ8YY2z97ZKY7TStStM459MpHfbI/ECIrG8omBuTlfFhnh0JBt6xDRieUGFb\nIqYJz2g9CA7LPq5XFZsDAL2hoou1GZvfBYK+mh50ghR62tVfeJXbfq+AzxSh7Jdg\n+anzwpAKRKABRy4vRqZpaFDZCyIm6o97sZlOoLomg6Pj5AX83CNGEwekyW/GWmAb\nYs5rHWSQUyIF47+H8CXaIwJw49m5wsF8TeL9oxoc7NuKU/uPYtGIZliwNaAAF3Cy\nyR/XUfDfnNaNUXDRiu3Fq8oJzDFiRT5t1RJmhR7GdgaUgeg03F9PMia3Hyfx+nXO\nTBqvgylg+bYQo2uyoOxyHJNOrj/AZVewXgM/wA20VDEIT4562OLBNuDYPf9P10rX\nv+cVLDucv4WgbPdSeF7sTcmj92Lxyw/QzyHStfctd4OBjALlSMc=\n=+9sk\n-----END PGP SIGNATURE-----", "payload": "tree 7916b2cce979882e4b05ee53c6b54d1d6642ed7a\nparent 61780083cdf56976f6a09b906b616928b433f001\nauthor Philipp Hansch <dev@phansch.net> 1544867883 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1544868026 +0100\n\ncompiletest: Add some compiletest::util unittests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/818f6823ad6f4faa09dd859ea83942e93e470860", "html_url": "https://github.com/rust-lang/rust/commit/818f6823ad6f4faa09dd859ea83942e93e470860", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/818f6823ad6f4faa09dd859ea83942e93e470860/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61780083cdf56976f6a09b906b616928b433f001", "url": "https://api.github.com/repos/rust-lang/rust/commits/61780083cdf56976f6a09b906b616928b433f001", "html_url": "https://github.com/rust-lang/rust/commit/61780083cdf56976f6a09b906b616928b433f001"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "381d808e8028f9f5760b976d4042e94865d7e445", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/818f6823ad6f4faa09dd859ea83942e93e470860/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/818f6823ad6f4faa09dd859ea83942e93e470860/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=818f6823ad6f4faa09dd859ea83942e93e470860", "patch": "@@ -86,6 +86,8 @@ pub fn matches_os(triple: &str, name: &str) -> bool {\n     }\n     panic!(\"Cannot determine OS from triple\");\n }\n+\n+/// Determine the architecture from `triple`\n pub fn get_arch(triple: &str) -> &'static str {\n     let triple: Vec<_> = triple.split('-').collect();\n     for &(triple_arch, arch) in ARCH_TABLE {\n@@ -151,3 +153,29 @@ impl PathBufExt for PathBuf {\n         }\n     }\n }\n+\n+#[test]\n+#[should_panic(expected = \"Cannot determine Architecture from triple\")]\n+fn test_get_arch_failure() {\n+    get_arch(\"abc\");\n+}\n+\n+#[test]\n+fn test_get_arch() {\n+    assert_eq!(\"x86_64\", get_arch(\"x86_64-unknown-linux-gnu\"));\n+    assert_eq!(\"x86_64\", get_arch(\"amd64\"));\n+}\n+\n+#[test]\n+#[should_panic(expected = \"Cannot determine OS from triple\")]\n+fn test_matches_os_failure() {\n+    matches_os(\"abc\", \"abc\");\n+}\n+\n+#[test]\n+fn test_matches_os() {\n+    assert!(matches_os(\"x86_64-unknown-linux-gnu\", \"linux\"));\n+    assert!(matches_os(\"wasm32-unknown-unknown\", \"emscripten\"));\n+    assert!(matches_os(\"wasm32-unknown-unknown\", \"wasm32-bare\"));\n+    assert!(!matches_os(\"wasm32-unknown-unknown\", \"windows\"));\n+}"}]}