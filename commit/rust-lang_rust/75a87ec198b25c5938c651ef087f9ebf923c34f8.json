{"sha": "75a87ec198b25c5938c651ef087f9ebf923c34f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YTg3ZWMxOThiMjVjNTkzOGM2NTFlZjA4N2Y5ZWJmOTIzYzM0Zjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-07T07:59:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-07T07:59:24Z"}, "message": "Merge #7586\n\n7586: Add a section on entry points r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f419d64b52905196750a027afb6a13d91a1883b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f419d64b52905196750a027afb6a13d91a1883b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75a87ec198b25c5938c651ef087f9ebf923c34f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgH53cCRBK7hj4Ov3rIwAAdHIIAD5aoj5ndspJCPSkTEolrxnR\nwyJKykcxOuciRRW9Jji4+5iS4ul5301wBoOOg3aaa/WPk+uIOgx6z+WzUAjJYa7U\nzhbDp8hkcwxvxcQAPJoeMNH3Mpm9xEglbRFCCiyg1jp3j+1ecSeCxfV0qDZIJyAp\nNbffec2Fh+Z2UvliKPR9nx+8r5/zUr7YgaJAe+oE1PItTcCBKH0Rrf7vpTET2/Sf\nIX/H7+yKfKvb0BC4ZQRq4HNd5Dv9gW7sLt6D6PAQr+sbha3hALWlUwt3CVEy1ouv\ndkClbwkuQF0iHTsVnrgOZfqaRleLevB3E7nUg7T6tugoSWAckyKRjc9jKpMAi4o=\n=FNWk\n-----END PGP SIGNATURE-----\n", "payload": "tree f419d64b52905196750a027afb6a13d91a1883b4\nparent a423a5196c5881623154af519454b1d03c8c7ee5\nparent cbebb70313a88622a93595e0caa069929cd1554e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1612684764 +0000\ncommitter GitHub <noreply@github.com> 1612684764 +0000\n\nMerge #7586\n\n7586: Add a section on entry points r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75a87ec198b25c5938c651ef087f9ebf923c34f8", "html_url": "https://github.com/rust-lang/rust/commit/75a87ec198b25c5938c651ef087f9ebf923c34f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75a87ec198b25c5938c651ef087f9ebf923c34f8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a423a5196c5881623154af519454b1d03c8c7ee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a423a5196c5881623154af519454b1d03c8c7ee5", "html_url": "https://github.com/rust-lang/rust/commit/a423a5196c5881623154af519454b1d03c8c7ee5"}, {"sha": "cbebb70313a88622a93595e0caa069929cd1554e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbebb70313a88622a93595e0caa069929cd1554e", "html_url": "https://github.com/rust-lang/rust/commit/cbebb70313a88622a93595e0caa069929cd1554e"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "7a88ebc0f11fe2432c75bb60c79de6c3f6f510eb", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/75a87ec198b25c5938c651ef087f9ebf923c34f8/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/75a87ec198b25c5938c651ef087f9ebf923c34f8/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=75a87ec198b25c5938c651ef087f9ebf923c34f8", "patch": "@@ -39,6 +39,14 @@ The client can submit a small delta of input data (typically, a change to a sing\n \n The underlying engine makes sure that model is computed lazily (on-demand) and can be quickly updated for small modifications.\n \n+## Entry Points\n+\n+`crates/rust-analyzer/src/bin/main.rs` contains the main function which spawns LSP.\n+This is *the* entry point, but it front-loads a lot of complexity, so its fine to just skim through it.\n+\n+`crates/rust-analyzer/src/handlers.rs` implements all LSP requests and is a great place to start if you are already familiar with LSP.\n+\n+`Analysis` and `AnalysisHost` types define the main API.\n \n ## Code Map\n \n@@ -265,7 +273,7 @@ And the client (`proc_macro_api`) provides an interface to talk to that server s\n And then token trees are passed from client, and the server will load the corresponding dynamic library (which built by `cargo`).\n And due to the fact the api for getting result from proc macro are always unstable in `rustc`,\n we maintain our own copy (and paste) of that part of code to allow us to build the whole thing in stable rust.\n- \n+\n  **Architecture Invariant:**\n Bad proc macros may panic or segfault accidentally. So we run it in another process and recover it from fatal error.\n And they may be non-deterministic which conflict how `salsa` works, so special attention is required."}]}