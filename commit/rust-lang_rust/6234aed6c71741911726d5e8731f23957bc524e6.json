{"sha": "6234aed6c71741911726d5e8731f23957bc524e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMzRhZWQ2YzcxNzQxOTExNzI2ZDVlODczMWYyMzk1N2JjNTI0ZTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-24T19:16:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-07-02T16:25:22Z"}, "message": "opaque_types: various nits", "tree": {"sha": "dc860e49ad1e12dcb575281378990205a95916f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc860e49ad1e12dcb575281378990205a95916f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6234aed6c71741911726d5e8731f23957bc524e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6234aed6c71741911726d5e8731f23957bc524e6", "html_url": "https://github.com/rust-lang/rust/commit/6234aed6c71741911726d5e8731f23957bc524e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6234aed6c71741911726d5e8731f23957bc524e6/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cab003fd1d83c55068b7193d91290aef56424df", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cab003fd1d83c55068b7193d91290aef56424df", "html_url": "https://github.com/rust-lang/rust/commit/6cab003fd1d83c55068b7193d91290aef56424df"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "949e3eaf48fe94362fa14bb1d4a8f4b821685d0c", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6234aed6c71741911726d5e8731f23957bc524e6/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6234aed6c71741911726d5e8731f23957bc524e6/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=6234aed6c71741911726d5e8731f23957bc524e6", "patch": "@@ -41,7 +41,7 @@ pub struct OpaqueTypeDecl<'tcx> {\n     /// ```\n     /// existential type Foo;\n     /// fn bar() -> Foo {\n-    ///             ^^^ this is the span we are looking for!\n+    ///             ^^^ This is the span we are looking for!\n     /// ```\n     ///\n     /// In cases where the fn returns `(impl Trait, impl Trait)` or\n@@ -234,13 +234,13 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     ///\n     /// # The Solution\n     ///\n-    /// We generally prefer to make us our `<=` constraints, since\n-    /// they integrate best into the region solve. To do that, we find\n-    /// the \"minimum\" of all the arguments that appear in the substs:\n-    /// that is, some region which is less than all the others. In the\n-    /// case of `Foo1<'a>`, that would be `'a` (it's the only choice,\n-    /// after all). Then we apply that as a least bound to the\n-    /// variables (e.g., `'a <= '0`).\n+    /// We generally prefer to make `<=` constraints, since they\n+    /// integrate best into the region solver. To do that, we find the\n+    /// \"minimum\" of all the arguments that appear in the substs: that\n+    /// is, some region which is less than all the others. In the case\n+    /// of `Foo1<'a>`, that would be `'a` (it's the only choice, after\n+    /// all). Then we apply that as a least bound to the variables\n+    /// (e.g., `'a <= '0`).\n     ///\n     /// In some cases, there is no minimum. Consider this example:\n     ///\n@@ -316,7 +316,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         }\n     }\n \n-    /// See `constrain_opaque_types` for docs\n+    /// See `constrain_opaque_types` for documentation.\n     pub fn constrain_opaque_type<FRR: FreeRegionRelations<'tcx>>(\n         &self,\n         def_id: DefId,\n@@ -417,7 +417,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     /// As a fallback, we sometimes generate an \"in constraint\". For\n-    /// case like `impl Foo<'a, 'b>`, where `'a` and `'b` cannot be\n+    /// a case like `impl Foo<'a, 'b>`, where `'a` and `'b` cannot be\n     /// related, we would generate a constraint `'r in ['a, 'b,\n     /// 'static]` for each region `'r` that appears in the hidden type\n     /// (i.e., it must be equal to `'a`, `'b`, or `'static`)."}]}