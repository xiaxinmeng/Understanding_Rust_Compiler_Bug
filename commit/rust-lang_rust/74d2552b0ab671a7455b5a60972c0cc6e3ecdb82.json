{"sha": "74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZDI1NTJiMGFiNjcxYTc0NTViNWE2MDk3MmMwY2M2ZTNlY2RiODI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T03:25:45Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T14:33:21Z"}, "message": "std: Iterator.last_ -> .last", "tree": {"sha": "d5945d71ced7225ef122a65e895cd6247c22851b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5945d71ced7225ef122a65e895cd6247c22851b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "html_url": "https://github.com/rust-lang/rust/commit/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db62d8311cba10c9f5f2ce38543fec7dad5b9c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db62d8311cba10c9f5f2ce38543fec7dad5b9c9", "html_url": "https://github.com/rust-lang/rust/commit/1db62d8311cba10c9f5f2ce38543fec7dad5b9c9"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "811adb53cb40fc02ceef3993d47c4bdf403cee44", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "patch": "@@ -381,9 +381,8 @@ pub trait Iterator<A> {\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().last().get() == &5);\n     /// ~~~\n-    // FIXME: #5898: should be called `last`\n     #[inline]\n-    fn last_(&mut self) -> Option<A> {\n+    fn last(&mut self) -> Option<A> {\n         let mut last = None;\n         for x in *self { last = Some(x); }\n         last\n@@ -1712,8 +1711,8 @@ mod tests {\n     #[test]\n     fn test_iterator_last() {\n         let v = &[0, 1, 2, 3, 4];\n-        assert_eq!(v.iter().last_().unwrap(), &4);\n-        assert_eq!(v.slice(0, 1).iter().last_().unwrap(), &0);\n+        assert_eq!(v.iter().last().unwrap(), &4);\n+        assert_eq!(v.slice(0, 1).iter().last().unwrap(), &0);\n     }\n \n     #[test]"}]}