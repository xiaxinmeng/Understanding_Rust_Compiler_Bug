{"sha": "40b37268eb0926b4ed55711d25fcf7aa19295e95", "node_id": "C_kwDOAAsO6NoAKDQwYjM3MjY4ZWIwOTI2YjRlZDU1NzExZDI1ZmNmN2FhMTkyOTVlOTU", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-09-18T22:25:44Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-09-18T22:48:14Z"}, "message": "use partition_point instead of binary_search when looking up source lines\n\nIn local benchmarks this results in 0.4% fewer cycles in a critical sequential\nsection when compiling libcore.", "tree": {"sha": "7cd55d394b446c2ab6d27f19f051af9f8ba5289d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cd55d394b446c2ab6d27f19f051af9f8ba5289d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40b37268eb0926b4ed55711d25fcf7aa19295e95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40b37268eb0926b4ed55711d25fcf7aa19295e95", "html_url": "https://github.com/rust-lang/rust/commit/40b37268eb0926b4ed55711d25fcf7aa19295e95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40b37268eb0926b4ed55711d25fcf7aa19295e95/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98ad6a5519651af36e246c0335c964dd52c554ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/98ad6a5519651af36e246c0335c964dd52c554ba", "html_url": "https://github.com/rust-lang/rust/commit/98ad6a5519651af36e246c0335c964dd52c554ba"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "6ce75492caff3a6861fd89e726eff163da69ffa8", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/40b37268eb0926b4ed55711d25fcf7aa19295e95/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40b37268eb0926b4ed55711d25fcf7aa19295e95/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=40b37268eb0926b4ed55711d25fcf7aa19295e95", "patch": "@@ -1631,10 +1631,9 @@ impl SourceFile {\n     /// number. If the source_file is empty or the position is located before the\n     /// first line, `None` is returned.\n     pub fn lookup_line(&self, pos: BytePos) -> Option<usize> {\n-        self.lines(|lines| match lines.binary_search(&pos) {\n-            Ok(idx) => Some(idx),\n-            Err(0) => None,\n-            Err(idx) => Some(idx - 1),\n+        self.lines(|lines| match lines.partition_point(|x| x <= &pos) {\n+            0 => None,\n+            i => Some(i - 1),\n         })\n     }\n "}]}