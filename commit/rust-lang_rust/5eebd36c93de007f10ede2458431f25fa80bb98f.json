{"sha": "5eebd36c93de007f10ede2458431f25fa80bb98f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZWJkMzZjOTNkZTAwN2YxMGVkZTI0NTg0MzFmMjVmYTgwYmI5OGY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-05-09T11:16:43Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-05-29T21:02:40Z"}, "message": "Test update: Fallout from ReadForMatch statements + changes to codegen under NLL.", "tree": {"sha": "06041604fcbf3d2ce30c9b609d3733d8c407df82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06041604fcbf3d2ce30c9b609d3733d8c407df82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eebd36c93de007f10ede2458431f25fa80bb98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eebd36c93de007f10ede2458431f25fa80bb98f", "html_url": "https://github.com/rust-lang/rust/commit/5eebd36c93de007f10ede2458431f25fa80bb98f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eebd36c93de007f10ede2458431f25fa80bb98f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bc5073dbb9e284a64ae8815bdb54d3b1d6c484a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc5073dbb9e284a64ae8815bdb54d3b1d6c484a", "html_url": "https://github.com/rust-lang/rust/commit/3bc5073dbb9e284a64ae8815bdb54d3b1d6c484a"}], "stats": {"total": 237, "additions": 125, "deletions": 112}, "files": [{"sha": "739cbc0a99678fe9a375ce88e2d5026a909b62b1", "filename": "src/test/mir-opt/match_false_edges.rs", "status": "modified", "additions": 125, "deletions": 112, "changes": 237, "blob_url": "https://github.com/rust-lang/rust/blob/5eebd36c93de007f10ede2458431f25fa80bb98f/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eebd36c93de007f10ede2458431f25fa80bb98f/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs?ref=5eebd36c93de007f10ede2458431f25fa80bb98f", "patch": "@@ -54,60 +54,65 @@ fn main() {\n //      ...\n //      _2 = std::option::Option<i32>::Some(const 42i32,);\n //      _3 = discriminant(_2);\n-//      _7 = discriminant(_2);\n-//      switchInt(move _7) -> [0isize: bb6, 1isize: bb4, otherwise: bb8];\n+//      _14 = promoted[1];\n+//      _4 = &(*_14);\n+//      _9 = discriminant(_2);\n+//      switchInt(move _9) -> [0isize: bb5, 1isize: bb3, otherwise: bb7];\n //  }\n //  bb1: {\n //      resume;\n //  }\n //  bb2: {  // arm1\n-//      StorageLive(_9);\n-//      _9 = _4;\n-//      _1 = (const 1i32, move _9);\n-//      StorageDead(_9);\n+//      _1 = (const 3i32, const 3i32);\n //      goto -> bb13;\n //  }\n //  bb3: { // binding3(empty) and arm3\n-//      _1 = (const 3i32, const 3i32);\n-//      goto -> bb13;\n+//      ReadForMatch(_4);\n+//      falseEdges -> [real: bb8, imaginary: bb4]; //pre_binding1\n //  }\n //  bb4: {\n-//      falseEdges -> [real: bb9, imaginary: bb5]; //pre_binding1\n+//      ReadForMatch(_4);\n+//      falseEdges -> [real: bb12, imaginary: bb5]; //pre_binding2\n //  }\n //  bb5: {\n-//      falseEdges -> [real: bb12, imaginary: bb6]; //pre_binding2\n+//      ReadForMatch(_4);\n+//      falseEdges -> [real: bb2, imaginary: bb6]; //pre_binding3\n //  }\n //  bb6: {\n-//      falseEdges -> [real: bb3, imaginary: bb7]; //pre_binding3\n+//      unreachable;\n //  }\n //  bb7: {\n //      unreachable;\n //  }\n-//  bb8: {\n-//      unreachable;\n+//  bb8: { // binding1 and guard\n+//      StorageLive(_7);\n+//      _13 = promoted[0];\n+//      _7 = &(((*_13) as Some).0: i32);\n+//      StorageLive(_10);\n+//      _10 = const guard() -> [return: bb9, unwind: bb1];\n //  }\n-//  bb9: { // binding1 and guard\n-//      StorageLive(_5);\n-//      _11 = promoted[0];\n-//      _5 = &(((*_11) as Some).0: i32);\n-//      StorageLive(_8);\n-//      _8 = const guard() -> [return: bb10, unwind: bb1];\n+//  bb9: {\n+//      switchInt(move _10) -> [false: bb10, otherwise: bb11];\n //  }\n-//  bb10: { // end of guard\n-//      StorageLive(_4);\n-//      _4 = ((_2 as Some).0: i32);\n-//      switchInt(move _8) -> [false: bb11, otherwise: bb2];\n+//  bb10: { // to pre_binding2\n+//      falseEdges -> [real: bb4, imaginary: bb4];\n //  }\n-//  bb11: { // to pre_binding2\n-//      falseEdges -> [real: bb5, imaginary: bb5];\n+//  bb11: { // bindingNoLandingPads.before.mir2 and arm2\n+//      StorageLive(_5);\n+//      _5 = ((_2 as Some).0: i32);\n+//      StorageLive(_11);\n+//      _11 = _5;\n+//      _1 = (const 1i32, move _11);\n+//      StorageDead(_11);\n+//      goto -> bb13;\n //  }\n-//  bb12: { // bindingNoLandingPads.before.mir2 and arm2\n-//      StorageLive(_6);\n-//      _6 = ((_2 as Some).0: i32);\n-//      StorageLive(_10);\n-//      _10 = _6;\n-//      _1 = (const 2i32, move _10);\n-//      StorageDead(_10);\n+//  bb12: {\n+//      StorageLive(_8);\n+//      _8 = ((_2 as Some).0: i32);\n+//      StorageLive(_12);\n+//      _12 = _8;\n+//      _1 = (const 2i32, move_12);\n+//      StorageDead(_12);\n //      goto -> bb13;\n //  }\n //  bb13: {\n@@ -121,59 +126,63 @@ fn main() {\n //      ...\n //      _2 = std::option::Option<i32>::Some(const 42i32,);\n //      _3 = discriminant(_2);\n-//      _7 = discriminant(_2);\n-//      switchInt(move _7) -> [0isize: bb5, 1isize: bb4, otherwise: bb8];\n+//      _4 = &_2;\n+//      _9 = discriminant(_2);\n+//      switchInt(move _9) -> [0isize: bb4, 1isize: bb3, otherwise: bb7];\n //  }\n //  bb1: {\n //      resume;\n //  }\n-//  bb2: { // arm1\n-//      StorageLive(_9);\n-//      _9 = _4;\n-//      _1 = (const 1i32, move _9);\n-//      StorageDead(_9);\n-//      goto -> bb13;\n-//  }\n-//  bb3: { // binding3(empty) and arm3\n+//  bb2: { // arm2\n //      _1 = (const 3i32, const 3i32);\n //      goto -> bb13;\n //  }\n+//  bb3: {\n+//      ReadForMatch(_4);\n+//      falseEdges -> [real: bb8, imaginary: bb4]; //pre_binding1\n+//  }\n //  bb4: {\n-//      falseEdges -> [real: bb9, imaginary: bb5]; //pre_binding1\n+//      ReadForMatch(_4);\n+//      falseEdges -> [real: bb2, imaginary: bb5]; //pre_binding2\n //  }\n //  bb5: {\n-//      falseEdges -> [real: bb3, imaginary: bb6]; //pre_binding2\n+//      ReadForMatch(_4);\n+//      falseEdges -> [real: bb12, imaginary: bb6]; //pre_binding3\n //  }\n //  bb6: {\n-//      falseEdges -> [real: bb12, imaginary: bb7]; //pre_binding3\n+//      unreachable;\n //  }\n //  bb7: {\n //      unreachable;\n //  }\n-//  bb8: {\n-//      unreachable;\n+//  bb8: { // binding1 and guard\n+//      StorageLive(_7);\n+//      _7 = &((_2 as Some).0: i32);\n+//      StorageLive(_10);\n+//      _10 = const guard() -> [return: bb9, unwind: bb1];\n //  }\n-//  bb9: { // binding1 and guard\n-//      StorageLive(_5);\n-//      _5 = &((_2 as Some).0: i32);\n-//      StorageLive(_8);\n-//      _8 = const guard() -> [return: bb10, unwind: bb1];\n+//  bb9: { // end of guard\n+//      switchInt(move _10) -> [false: bb10, otherwise: bb11];\n //  }\n-//  bb10: { // end of guard\n-//      StorageLive(_4);\n-//      _4 = ((_2 as Some).0: i32);\n-//      switchInt(move _8) -> [false: bb11, otherwise: bb2];\n+//  bb10: { // to pre_binding3 (can skip 2 since this is `Some`)\n+//      falseEdges -> [real: bb5, imaginary: bb4];\n //  }\n-//  bb11: { // to pre_binding2\n-//      falseEdges -> [real: bb6, imaginary: bb5];\n+//  bb11: { // arm1\n+//      StorageLive(_5);\n+//      _5 = ((_2 as Some).0: i32);\n+//      StorageLive(_11);\n+//      _11 = _5;\n+//      _1 = (const 1i32, move _11);\n+//      StorageDead(_11);\n+//      goto -> bb13;\n //  }\n-//  bb12: { // binding2 and arm2\n-//      StorageLive(_6);\n-//      _6 = ((_2 as Some).0: i32);\n-//      StorageLive(_10);\n-//      _10 = _6;\n-//      _1 = (const 2i32, move _10);\n-//      StorageDead(_10);\n+//  bb12: { // binding3 and arm3\n+//      StorageLive(_8);\n+//      _8 = ((_2 as Some).0: i32);\n+//      StorageLive(_12);\n+//      _12 = _8;\n+//      _1 = (const 2i32, move _12);\n+//      StorageDead(_12);\n //      goto -> bb13;\n //  }\n //  bb13: {\n@@ -187,76 +196,80 @@ fn main() {\n //     ...\n //     _2 = std::option::Option<i32>::Some(const 1i32,);\n //     _3 = discriminant(_2);\n-//     _10 = discriminant(_2);\n-//     switchInt(move _10) -> [1isize: bb4, otherwise: bb5];\n+//     _4 = &_2;\n+//     _13 = discriminant(_2);\n+//     switchInt(move _13) -> [1isize: bb2, otherwise: bb3];\n // }\n // bb1: {\n //     resume;\n // }\n-// bb2: { // arm1\n-//     _1 = const 1i32;\n-//     goto -> bb17;\n+// bb2: {\n+//     ReadForMatch(_4);\n+//     falseEdges -> [real: bb7, imaginary: bb3]; //pre_binding1\n // }\n-// bb3: { // arm3\n-//     _1 = const 3i32;\n-//     goto -> bb17;\n+// bb3: {\n+//     ReadForMatch(_4);\n+//     falseEdges -> [real: bb11, imaginary: bb4]; //pre_binding2\n // }\n-//\n // bb4: {\n-//     falseEdges -> [real: bb9, imaginary: bb5]; //pre_binding1\n+//     ReadForMatch(_4);\n+//     falseEdges -> [real: bb12, imaginary: bb5]; //pre_binding3\n // }\n // bb5: {\n-//     falseEdges -> [real: bb12, imaginary: bb6]; //pre_binding2\n+//     ReadForMatch(_4);\n+//     falseEdges -> [real: bb16, imaginary: bb6]; //pre_binding4\n // }\n // bb6: {\n-//     falseEdges -> [real: bb13, imaginary: bb7]; //pre_binding3\n-// }\n-// bb7: {\n-//     falseEdges -> [real: bb16, imaginary: bb8]; //pre_binding4\n-// }\n-// bb8: {\n //     unreachable;\n // }\n-// bb9: { // binding1: Some(w) if guard()\n-//     StorageLive(_5);\n-//     _5 = &((_2 as Some).0: i32);\n-//     StorageLive(_11);\n-//     _11 = const guard() -> [return: bb10, unwind: bb1];\n+// bb7: { // binding1: Some(w) if guard()\n+//     StorageLive(_7);\n+//     _7 = &((_2 as Some).0: i32);\n+//     StorageLive(_14);\n+//     _14 = const guard() -> [return: bb8, unwind: bb1];\n // }\n-// bb10: { //end of guard\n-//    StorageLive(_4);\n-//    _4 = ((_2 as Some).0: i32);\n-//    switchInt(move _11) -> [false: bb11, otherwise: bb2];\n+// bb8: { //end of guard\n+//     switchInt(move _14) -> [false: bb9, otherwise: bb10];\n // }\n-// bb11: { // to pre_binding2\n-//     falseEdges -> [real: bb5, imaginary: bb5];\n+// bb9: { // to pre_binding2\n+//     falseEdges -> [real: bb3, imaginary: bb3];\n // }\n-// bb12: { // binding2 & arm2\n-//     StorageLive(_6);\n-//     _6 = _2;\n-//     _1 = const 2i32;\n+// bb10: { // set up bindings for arm1\n+//     StorageLive(_5);\n+//     _5 = ((_2 as Some).0: i32);\n+//     _1 = const 1i32;\n //     goto -> bb17;\n // }\n-// bb13: { // binding3: Some(y) if guard2(y)\n+// bb11: { // binding2 & arm2\n //     StorageLive(_8);\n-//     _8 = &((_2 as Some).0: i32);\n-//     StorageLive(_13);\n-//     StorageLive(_14);\n-//     _14 = (*_8);\n-//     _13 = const guard2(move _14) -> [return: bb14, unwind: bb1];\n+//     _8 = _2;\n+//     _1 = const 2i32;\n+//     goto -> bb17;\n // }\n-// bb14: { // end of guard2\n-//     StorageDead(_14);\n-//     StorageLive(_7);\n-//     _7 = ((_2 as Some).0: i32);\n-//     switchInt(move _13) -> [false: bb15, otherwise: bb3];\n+// bb12: { // binding3: Some(y) if guard2(y)\n+//     StorageLive(_11);\n+//     _11 = &((_2 as Some).0: i32);\n+//     StorageLive(_16);\n+//     StorageLive(_17);\n+//     _17 = (*_11);\n+//     _16 = const guard2(move _17) -> [return: bb13, unwind: bb1];\n // }\n-// bb15: { // to pre_binding4\n-//     falseEdges -> [real: bb7, imaginary: bb7];\n+// bb13: { // end of guard2\n+//     StorageDead(_17);\n+//     switchInt(move _16) -> [false: bb14, otherwise: bb15];\n // }\n-// bb16: { // binding4 & arm4\n+// bb14: { // to pre_binding4\n+//     falseEdges -> [real: bb5, imaginary: bb5];\n+// }\n+// bb15: { // set up bindings for arm3\n //     StorageLive(_9);\n-//     _9 = _2;\n+//     _9 = ((_2 as Some).0: i32);\n+//     _1 = const 3i32;\n+//     goto -> bb17;\n+// }\n+// bb16: { // binding4 & arm4\n+//     StorageLive(_12);\n+//     _12 = _2;\n //     _1 = const 4i32;\n //     goto -> bb17;\n // }"}]}