{"sha": "b3c21efa8a9c22e8b25136d32b35537856bd9c45", "node_id": "C_kwDOAAsO6NoAKGIzYzIxZWZhOGE5YzIyZThiMjUxMzZkMzJiMzU1Mzc4NTZiZDljNDU", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-10-09T16:45:04Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2022-10-09T16:45:04Z"}, "message": "openbsd: don't reallocate a guard page on the stack.\n\nthe kernel currently enforce that a stack is immutable. calling mmap(2) or \nmprotect(2) to change it will result in EPERM, which generate a panic!().\n\nso just do like for Linux, and trust the kernel to do the right thing.", "tree": {"sha": "bc585df3186a0e71a6ed86615bd14ef2d0079c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc585df3186a0e71a6ed86615bd14ef2d0079c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3c21efa8a9c22e8b25136d32b35537856bd9c45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c21efa8a9c22e8b25136d32b35537856bd9c45", "html_url": "https://github.com/rust-lang/rust/commit/b3c21efa8a9c22e8b25136d32b35537856bd9c45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3c21efa8a9c22e8b25136d32b35537856bd9c45/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de5b226782361d9ea1929fd619f4fc2aaab1094", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de5b226782361d9ea1929fd619f4fc2aaab1094", "html_url": "https://github.com/rust-lang/rust/commit/1de5b226782361d9ea1929fd619f4fc2aaab1094"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "f2c604bf7eeec63ae2565b142510fb78e4bc7193", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b3c21efa8a9c22e8b25136d32b35537856bd9c45/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c21efa8a9c22e8b25136d32b35537856bd9c45/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=b3c21efa8a9c22e8b25136d32b35537856bd9c45", "patch": "@@ -767,6 +767,16 @@ pub mod guard {\n             const GUARD_PAGES: usize = 1;\n             let guard = guardaddr..guardaddr + GUARD_PAGES * page_size;\n             Some(guard)\n+        } else if cfg!(target_os = \"openbsd\") {\n+            // OpenBSD stack already includes a guard page, and stack is\n+            // immutable.\n+            //\n+            // We'll just note where we expect rlimit to start\n+            // faulting, so our handler can report \"stack overflow\", and\n+            // trust that the kernel's own stack guard will work.\n+            let stackptr = get_stack_start_aligned()?;\n+            let stackaddr = stackptr.addr();\n+            Some(stackaddr - page_size..stackaddr)\n         } else {\n             // Reallocate the last page of the stack.\n             // This ensures SIGBUS will be raised on"}]}