{"sha": "d1193bf95e9a51d842d8091ee3f30aebe697f75b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMTkzYmY5NWU5YTUxZDg0MmQ4MDkxZWUzZjMwYWViZTY5N2Y3NWI=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-14T12:37:12Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-15T01:32:11Z"}, "message": "Add doc examples for std::alloc::{alloc,alloc_zeroed}.", "tree": {"sha": "8a122b98a2f17727741969446febe4fd9667a522", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a122b98a2f17727741969446febe4fd9667a522"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1193bf95e9a51d842d8091ee3f30aebe697f75b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1193bf95e9a51d842d8091ee3f30aebe697f75b", "html_url": "https://github.com/rust-lang/rust/commit/d1193bf95e9a51d842d8091ee3f30aebe697f75b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1193bf95e9a51d842d8091ee3f30aebe697f75b/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bb923988f949639f11dba0c1ab1980fe8dfec3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb923988f949639f11dba0c1ab1980fe8dfec3d", "html_url": "https://github.com/rust-lang/rust/commit/5bb923988f949639f11dba0c1ab1980fe8dfec3d"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c69b2fb5e1c2a3e27619f5994f767d8f49d036db", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d1193bf95e9a51d842d8091ee3f30aebe697f75b/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1193bf95e9a51d842d8091ee3f30aebe697f75b/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=d1193bf95e9a51d842d8091ee3f30aebe697f75b", "patch": "@@ -56,6 +56,22 @@ pub struct Global;\n /// # Safety\n ///\n /// See [`GlobalAlloc::alloc`].\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::alloc::{alloc, dealloc, Layout};\n+///\n+/// unsafe {\n+///     let layout = Layout::new::<u16>();\n+///     let ptr = alloc(layout);\n+///\n+///     *(ptr as *mut u16) = 42;\n+///     assert_eq!(*(ptr as *mut u16), 42);\n+///\n+///     dealloc(ptr, layout);\n+/// }\n+/// ```\n #[stable(feature = \"global_alloc\", since = \"1.28.0\")]\n #[inline]\n pub unsafe fn alloc(layout: Layout) -> *mut u8 {\n@@ -110,6 +126,21 @@ pub unsafe fn realloc(ptr: *mut u8, layout: Layout, new_size: usize) -> *mut u8\n /// # Safety\n ///\n /// See [`GlobalAlloc::alloc_zeroed`].\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::alloc::{alloc_zeroed, dealloc, Layout};\n+///\n+/// unsafe {\n+///     let layout = Layout::new::<u16>();\n+///     let ptr = alloc_zeroed(layout);\n+///\n+///     assert_eq!(*(ptr as *mut u16), 0);\n+///\n+///     dealloc(ptr, layout);\n+/// }\n+/// ```\n #[stable(feature = \"global_alloc\", since = \"1.28.0\")]\n #[inline]\n pub unsafe fn alloc_zeroed(layout: Layout) -> *mut u8 {"}]}