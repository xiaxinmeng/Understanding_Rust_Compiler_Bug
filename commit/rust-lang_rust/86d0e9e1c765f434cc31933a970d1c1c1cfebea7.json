{"sha": "86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZDBlOWUxYzc2NWY0MzRjYzMxOTMzYTk3MGQxYzFjMWNmZWJlYTc=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-24T13:29:31Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-24T13:29:31Z"}, "message": "Simplify a few functions in rustc_data_structures", "tree": {"sha": "80c1757df0ca4b44ac446b907e3a45db560a15d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80c1757df0ca4b44ac446b907e3a45db560a15d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "html_url": "https://github.com/rust-lang/rust/commit/86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baba5007bf857b4577a8d26de454a03d7afef3ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/baba5007bf857b4577a8d26de454a03d7afef3ac", "html_url": "https://github.com/rust-lang/rust/commit/baba5007bf857b4577a8d26de454a03d7afef3ac"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "9423e6b3256c5d229aa7f0fc21834293529d1968", "filename": "src/librustc_data_structures/accumulate_vec.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/src%2Flibrustc_data_structures%2Faccumulate_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/src%2Flibrustc_data_structures%2Faccumulate_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Faccumulate_vec.rs?ref=86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "patch": "@@ -224,7 +224,7 @@ impl<A> Encodable for AccumulateVec<A>\n     fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n         s.emit_seq(self.len(), |s| {\n             for (i, e) in self.iter().enumerate() {\n-                try!(s.emit_seq_elt(i, |s| e.encode(s)));\n+                s.emit_seq_elt(i, |s| e.encode(s))?;\n             }\n             Ok(())\n         })\n@@ -236,8 +236,7 @@ impl<A> Decodable for AccumulateVec<A>\n           A::Element: Decodable {\n     fn decode<D: Decoder>(d: &mut D) -> Result<AccumulateVec<A>, D::Error> {\n         d.read_seq(|d, len| {\n-            Ok(try!((0..len).map(|i| d.read_seq_elt(i, |d| Decodable::decode(d))).collect()))\n+            (0..len).map(|i| d.read_seq_elt(i, |d| Decodable::decode(d))).collect()\n         })\n     }\n }\n-"}, {"sha": "b8f191c2f57d8d68fcb2ce3447d6b9c9c73a11c7", "filename": "src/librustc_data_structures/bitslice.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/src%2Flibrustc_data_structures%2Fbitslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/src%2Flibrustc_data_structures%2Fbitslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fbitslice.rs?ref=86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "patch": "@@ -95,8 +95,7 @@ pub fn bits_to_string(words: &[Word], bits: usize) -> String {\n             assert!(mask <= 0xFF);\n             let byte = v & mask;\n \n-            result.push(sep);\n-            result.push_str(&format!(\"{:02x}\", byte));\n+            result.push_str(&format!(\"{}{:02x}\", sep, byte));\n \n             if remain <= 8 { break; }\n             v >>= 8;"}, {"sha": "4a72ab57fcc0812fd3c8b3f7395ca3f51afc89e2", "filename": "src/librustc_data_structures/small_vec.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/src%2Flibrustc_data_structures%2Fsmall_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d0e9e1c765f434cc31933a970d1c1c1cfebea7/src%2Flibrustc_data_structures%2Fsmall_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsmall_vec.rs?ref=86d0e9e1c765f434cc31933a970d1c1c1cfebea7", "patch": "@@ -197,7 +197,7 @@ impl<A> Encodable for SmallVec<A>\n     fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n         s.emit_seq(self.len(), |s| {\n             for (i, e) in self.iter().enumerate() {\n-                try!(s.emit_seq_elt(i, |s| e.encode(s)));\n+                s.emit_seq_elt(i, |s| e.encode(s))?;\n             }\n             Ok(())\n         })\n@@ -209,11 +209,7 @@ impl<A> Decodable for SmallVec<A>\n           A::Element: Decodable {\n     fn decode<D: Decoder>(d: &mut D) -> Result<SmallVec<A>, D::Error> {\n         d.read_seq(|d, len| {\n-            let mut vec = SmallVec::with_capacity(len);\n-            for i in 0..len {\n-                vec.push(try!(d.read_seq_elt(i, |d| Decodable::decode(d))));\n-            }\n-            Ok(vec)\n+            (0..len).map(|i| d.read_seq_elt(i, |d| Decodable::decode(d))).collect()\n         })\n     }\n }"}]}