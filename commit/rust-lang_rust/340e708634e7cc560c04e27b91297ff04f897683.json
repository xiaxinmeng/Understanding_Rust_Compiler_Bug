{"sha": "340e708634e7cc560c04e27b91297ff04f897683", "node_id": "C_kwDOAAsO6NoAKDM0MGU3MDg2MzRlN2NjNTYwYzA0ZTI3YjkxMjk3ZmYwNGY4OTc2ODM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-16T14:23:15Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-16T14:23:15Z"}, "message": "Some tracing cleanups", "tree": {"sha": "966a01c80868e3bac0e9120c95ccfbff67543d6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/966a01c80868e3bac0e9120c95ccfbff67543d6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/340e708634e7cc560c04e27b91297ff04f897683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/340e708634e7cc560c04e27b91297ff04f897683", "html_url": "https://github.com/rust-lang/rust/commit/340e708634e7cc560c04e27b91297ff04f897683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/340e708634e7cc560c04e27b91297ff04f897683/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56d540e0571ac1b0633ce10644224c495aaf42a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/56d540e0571ac1b0633ce10644224c495aaf42a0", "html_url": "https://github.com/rust-lang/rust/commit/56d540e0571ac1b0633ce10644224c495aaf42a0"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "aa17e2736798256561335294c9a79514a88cd85f", "filename": "compiler/rustc_borrowck/src/type_check/free_region_relations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/340e708634e7cc560c04e27b91297ff04f897683/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340e708634e7cc560c04e27b91297ff04f897683/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Ffree_region_relations.rs?ref=340e708634e7cc560c04e27b91297ff04f897683", "patch": "@@ -334,8 +334,8 @@ impl<'tcx> UniversalRegionRelationsBuilder<'_, 'tcx> {\n     /// either the return type of the MIR or one of its arguments. At\n     /// the same time, compute and add any implied bounds that come\n     /// from this local.\n+    #[instrument(level = \"debug\", skip(self))]\n     fn add_implied_bounds(&mut self, ty: Ty<'tcx>) -> Option<Rc<QueryRegionConstraints<'tcx>>> {\n-        debug!(\"add_implied_bounds(ty={:?})\", ty);\n         let TypeOpOutput { output: bounds, constraints, .. } = self\n             .param_env\n             .and(type_op::implied_outlives_bounds::ImpliedOutlivesBounds { ty })"}, {"sha": "b9652e83e65bee227ea4b53a413391aae25ae5de", "filename": "compiler/rustc_infer/src/infer/outlives/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/340e708634e7cc560c04e27b91297ff04f897683/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340e708634e7cc560c04e27b91297ff04f897683/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fmod.rs?ref=340e708634e7cc560c04e27b91297ff04f897683", "patch": "@@ -8,10 +8,10 @@ pub mod verify;\n use rustc_middle::traits::query::OutlivesBound;\n use rustc_middle::ty;\n \n+#[instrument(level = \"debug\", skip(param_env))]\n pub fn explicit_outlives_bounds<'tcx>(\n     param_env: ty::ParamEnv<'tcx>,\n ) -> impl Iterator<Item = OutlivesBound<'tcx>> + 'tcx {\n-    debug!(\"explicit_outlives_bounds()\");\n     param_env\n         .caller_bounds()\n         .into_iter()"}, {"sha": "2ba8cb24f8b4130023dffd320faa8cdf6ea84771", "filename": "compiler/rustc_typeck/src/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/340e708634e7cc560c04e27b91297ff04f897683/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340e708634e7cc560c04e27b91297ff04f897683/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fregionck.rs?ref=340e708634e7cc560c04e27b91297ff04f897683", "patch": "@@ -130,18 +130,16 @@ impl<'tcx> OutlivesEnvironmentExt<'tcx> for OutlivesEnvironment<'tcx> {\n     /// add those assumptions into the outlives-environment.\n     ///\n     /// Tests: `src/test/ui/regions/regions-free-region-ordering-*.rs`\n+    #[instrument(level = \"debug\", skip(self, infcx))]\n     fn add_implied_bounds<'a>(\n         &mut self,\n         infcx: &InferCtxt<'a, 'tcx>,\n         fn_sig_tys: FxHashSet<Ty<'tcx>>,\n         body_id: hir::HirId,\n         span: Span,\n     ) {\n-        debug!(\"add_implied_bounds()\");\n-\n         for ty in fn_sig_tys {\n             let ty = infcx.resolve_vars_if_possible(ty);\n-            debug!(\"add_implied_bounds: ty = {}\", ty);\n             let implied_bounds = infcx.implied_outlives_bounds(self.param_env, body_id, ty, span);\n             self.add_outlives_bounds(Some(infcx), implied_bounds)\n         }"}]}