{"sha": "907d4c3e956b6437d7754d674088fb7ccd92a560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwN2Q0YzNlOTU2YjY0MzdkNzc1NGQ2NzQwODhmYjdjY2Q5MmE1NjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-12T18:51:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-12T18:51:42Z"}, "message": "Merge #9236\n\n9236: Fix some typos in flyimport docs r=SomeoneToIgnore a=SomeoneToIgnore\n\nbors r+\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "06d468569810f036f0346c3da43da78a25a64fdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06d468569810f036f0346c3da43da78a25a64fdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/907d4c3e956b6437d7754d674088fb7ccd92a560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgxQI+CRBK7hj4Ov3rIwAAmiAIABX/aSkWGWOfKsiIgQ/NpQaN\nsdkeZSz2/eLvwx+BW4YXligC/DsZVBBxoDG4uhIE5ALBqoDvSA8fqsdO3s1nKs3t\nawhgfwVYB/nSgdyRoNo7IRj/CReIfI3wm1Cw2BAEPNDED5lOtUDjipkuBuyCeMdW\nmHYKvA0EtIseLwWQANOmi0GmQM8pkW9ZxLKIFXYjwyz6j6BOqbbda9sX+7KdB8V9\nIIs2PkPl/UMdhmOn7dmJ1ZwDj4fZvsXfuKLYpKYlyuPYh2RHyLs5HskA8HPTpEET\nn7sxY/sPkDP9xIXeDuxuU2cAYxHjkokHOcuOleRPd/1k0fj8ksMqKKuRcs/R474=\n=inBz\n-----END PGP SIGNATURE-----\n", "payload": "tree 06d468569810f036f0346c3da43da78a25a64fdb\nparent 85d2cd331f56ef2f88c1edfb9d431958c9800728\nparent 9c0b141dc9a881dee62c0c5141e4c71fddb7c390\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623523902 +0000\ncommitter GitHub <noreply@github.com> 1623523902 +0000\n\nMerge #9236\n\n9236: Fix some typos in flyimport docs r=SomeoneToIgnore a=SomeoneToIgnore\n\nbors r+\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/907d4c3e956b6437d7754d674088fb7ccd92a560", "html_url": "https://github.com/rust-lang/rust/commit/907d4c3e956b6437d7754d674088fb7ccd92a560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/907d4c3e956b6437d7754d674088fb7ccd92a560/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d2cd331f56ef2f88c1edfb9d431958c9800728", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d2cd331f56ef2f88c1edfb9d431958c9800728", "html_url": "https://github.com/rust-lang/rust/commit/85d2cd331f56ef2f88c1edfb9d431958c9800728"}, {"sha": "9c0b141dc9a881dee62c0c5141e4c71fddb7c390", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c0b141dc9a881dee62c0c5141e4c71fddb7c390", "html_url": "https://github.com/rust-lang/rust/commit/9c0b141dc9a881dee62c0c5141e4c71fddb7c390"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "30b8d44bd848c02201f95fc0fab19672b156ddf3", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/907d4c3e956b6437d7754d674088fb7ccd92a560/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/907d4c3e956b6437d7754d674088fb7ccd92a560/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=907d4c3e956b6437d7754d674088fb7ccd92a560", "patch": "@@ -1,10 +1,10 @@\n //! Feature: completion with imports-on-the-fly\n //!\n //! When completing names in the current scope, proposes additional imports from other modules or crates,\n-//! if they can be qualified in the scope and their name contains all symbols from the completion input.\n+//! if they can be qualified in the scope, and their name contains all symbols from the completion input.\n //!\n //! To be considered applicable, the name must contain all input symbols in the given order, not necessarily adjacent.\n-//! If any input symbol is not lowercased, the name must contain all symbols in exact case; otherwise the contaning is checked case-insensitively.\n+//! If any input symbol is not lowercased, the name must contain all symbols in exact case; otherwise the containing is checked case-insensitively.\n //!\n //! ```\n //! fn main() {\n@@ -23,8 +23,8 @@\n //! ```\n //!\n //! Also completes associated items, that require trait imports.\n-//! If any unresolved and/or partially-qualified path predeces the input, it will be taken into account.\n-//! Currently, only the imports with their import path ending with the whole qialifier will be proposed\n+//! If any unresolved and/or partially-qualified path precedes the input, it will be taken into account.\n+//! Currently, only the imports with their import path ending with the whole qualifier will be proposed\n //! (no fuzzy matching for qualifier).\n //!\n //! ```\n@@ -61,14 +61,14 @@\n //! }\n //! ```\n //!\n-//! NOTE: currently, if an assoc item comes from a trait that's not currently imported and it also has an unresolved and/or partially-qualified path,\n+//! NOTE: currently, if an assoc item comes from a trait that's not currently imported, and it also has an unresolved and/or partially-qualified path,\n //! no imports will be proposed.\n //!\n //! .Fuzzy search details\n //!\n //! To avoid an excessive amount of the results returned, completion input is checked for inclusion in the names only\n //! (i.e. in `HashMap` in the `std::collections::HashMap` path).\n-//! For the same reasons, avoids searching for any path imports for inputs with their length less that 2 symbols\n+//! For the same reasons, avoids searching for any path imports for inputs with their length less than 2 symbols\n //! (but shows all associated items for any input length).\n //!\n //! .Import configuration\n@@ -79,15 +79,15 @@\n //! .LSP and performance implications\n //!\n //! The feature is enabled only if the LSP client supports LSP protocol version 3.16+ and reports the `additionalTextEdits`\n-//! (case sensitive) resolve client capability in its client capabilities.\n+//! (case-sensitive) resolve client capability in its client capabilities.\n //! This way the server is able to defer the costly computations, doing them for a selected completion item only.\n //! For clients with no such support, all edits have to be calculated on the completion request, including the fuzzy search completion ones,\n //! which might be slow ergo the feature is automatically disabled.\n //!\n //! .Feature toggle\n //!\n-//! The feature can be forcefully turned off in the settings with the `rust-analyzer.completion.enableAutoimportCompletions` flag.\n-//! Note that having this flag set to `true` does not guarantee that the feature is enabled: your client needs to have the corredponding\n+//! The feature can be forcefully turned off in the settings with the `rust-analyzer.completion.autoimport.enable` flag.\n+//! Note that having this flag set to `true` does not guarantee that the feature is enabled: your client needs to have the corresponding\n //! capability enabled.\n \n use ide_db::helpers::{"}]}