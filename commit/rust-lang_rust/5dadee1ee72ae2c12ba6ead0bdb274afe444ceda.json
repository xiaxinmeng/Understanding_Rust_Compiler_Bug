{"sha": "5dadee1ee72ae2c12ba6ead0bdb274afe444ceda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYWRlZTFlZTcyYWUyYzEyYmE2ZWFkMGJkYjI3NGFmZTQ0NGNlZGE=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-27T01:17:17Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-27T01:17:39Z"}, "message": "minor core/std cleanup", "tree": {"sha": "ed0db70ce11b5479401431671def9fecfffd1f45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed0db70ce11b5479401431671def9fecfffd1f45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda", "html_url": "https://github.com/rust-lang/rust/commit/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edd6d9ea37f55cce3298deb6ef271cb7d03a824a", "url": "https://api.github.com/repos/rust-lang/rust/commits/edd6d9ea37f55cce3298deb6ef271cb7d03a824a", "html_url": "https://github.com/rust-lang/rust/commit/edd6d9ea37f55cce3298deb6ef271cb7d03a824a"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2699c0d3b3de7128042509698f0cff4be05ae8af", "filename": "src/libcore/task.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=5dadee1ee72ae2c12ba6ead0bdb274afe444ceda", "patch": "@@ -910,7 +910,7 @@ fn each_ancestor(list:        &mut AncestorList,\n }\n \n // One of these per task.\n-struct Tcb {\n+struct TCB {\n     let me:            *rust_task;\n     // List of tasks with whose fates this one's is intertwined.\n     let tasks:         TaskGroupArc; // 'none' means the group has failed.\n@@ -1051,7 +1051,7 @@ fn gen_child_taskgroup(linked: bool, supervised: bool)\n                                          mut descendants: new_taskset() }));\n             // Main task/group has no ancestors, no notifier, etc.\n             let group =\n-                @Tcb(spawner, tasks, AncestorList(None), true, None);\n+                @TCB(spawner, tasks, AncestorList(None), true, None);\n             unsafe { local_set(spawner, taskgroup_key!(), group); }\n             group\n         }\n@@ -1165,7 +1165,7 @@ fn spawn_raw(+opts: TaskOpts, +f: fn~()) {\n             let notifier = notify_chan.map(|c| AutoNotify(c));\n \n             if enlist_many(child, &child_arc, &mut ancestors) {\n-                let group = @Tcb(child, child_arc, ancestors,\n+                let group = @TCB(child, child_arc, ancestors,\n                                  is_main, notifier);\n                 unsafe { local_set(child, taskgroup_key!(), group); }\n                 // Run the child's body."}, {"sha": "ea62f3cc3c43939b60be7478d5a3c68678452005", "filename": "src/libstd/getopts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda/src%2Flibstd%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dadee1ee72ae2c12ba6ead0bdb274afe444ceda/src%2Flibstd%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgetopts.rs?ref=5dadee1ee72ae2c12ba6ead0bdb274afe444ceda", "patch": "@@ -877,7 +877,7 @@ mod tests {\n         let opts = ~[optopt(~\"e\"), optopt(~\"encrypt\")];\n         let matches = match getopts(args, opts) {\n           result::ok(m) => m,\n-          result::err(f) => fail\n+          result::err(_) => fail\n         };\n         assert opts_present(matches, ~[~\"e\"]);\n         assert opts_present(matches, ~[~\"encrypt\"]);\n@@ -898,7 +898,7 @@ mod tests {\n         let opts = ~[optmulti(~\"L\")];\n         let matches = match getopts(args, opts) {\n           result::ok(m) => m,\n-          result::err(f) => fail\n+          result::err(_) => fail\n         };\n         assert opts_present(matches, ~[~\"L\"]);\n         assert opts_str(matches, ~[~\"L\"]) == ~\"foo\";"}]}