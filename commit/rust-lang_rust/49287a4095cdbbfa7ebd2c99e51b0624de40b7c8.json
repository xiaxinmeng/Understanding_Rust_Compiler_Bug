{"sha": "49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "node_id": "C_kwDOAAsO6NoAKDQ5Mjg3YTQwOTVjZGJiZmE3ZWJkMmM5OWU1MWIwNjI0ZGU0MGI3Yzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-23T00:17:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-23T00:17:50Z"}, "message": "Rollup merge of #106051 - jyn514:cranelift-std, r=bjorn3\n\nAllow building std with cranelift\n\n- Don't pass llvm-specific args when using cranelift\n- Don't use `asm` in compiler_builtins when using cranelift\n\nr? `@bjorn3` cc `@Mark-Simulacrum`", "tree": {"sha": "65a8554f01be82263aa1d588ccdb33de8e06ece0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65a8554f01be82263aa1d588ccdb33de8e06ece0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpPOuCRBK7hj4Ov3rIwAAfZwIACTmHaF+UfFDp30y41D18Vwd\nMcG26LYOXLroTC5AuMHjxndQD6VWNLtUDgL4eQatyqBEJvQTiZg5d8kz9/CIXMXY\nmtkMp+uqcgrNTFP16tkiRmuEgYO88gF+k4/VehaRdmiWOFZsoihVXOxzVR5JB89j\n75Bo9PjUeUl5bXyRwwqqYBvMENC/p4z7SVK5CzvwNKb3dMmGeyKuTvtLkaWu9G9j\nKh0VIUMtOgzjBn37vsHlVqhU4kpbQ/zMkV6Uu1D2gJthWvsY6bGE8BNiSIzVMHXi\nSL2OK5oXnR7VooN1tnzvuyyETDEHOCrA3ySfP+bJEV+93SauD4MSXkR+jKJ3Vm8=\n=EFLN\n-----END PGP SIGNATURE-----\n", "payload": "tree 65a8554f01be82263aa1d588ccdb33de8e06ece0\nparent 3e58de240c2a2e9b71d93f2d9f2d0c7e82ab345a\nparent 0b3ffcbb0beed7bc0be168dadbff2904b85d3666\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671754670 +0100\ncommitter GitHub <noreply@github.com> 1671754670 +0100\n\nRollup merge of #106051 - jyn514:cranelift-std, r=bjorn3\n\nAllow building std with cranelift\n\n- Don't pass llvm-specific args when using cranelift\n- Don't use `asm` in compiler_builtins when using cranelift\n\nr? `@bjorn3` cc `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "html_url": "https://github.com/rust-lang/rust/commit/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e58de240c2a2e9b71d93f2d9f2d0c7e82ab345a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e58de240c2a2e9b71d93f2d9f2d0c7e82ab345a", "html_url": "https://github.com/rust-lang/rust/commit/3e58de240c2a2e9b71d93f2d9f2d0c7e82ab345a"}, {"sha": "0b3ffcbb0beed7bc0be168dadbff2904b85d3666", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3ffcbb0beed7bc0be168dadbff2904b85d3666", "html_url": "https://github.com/rust-lang/rust/commit/0b3ffcbb0beed7bc0be168dadbff2904b85d3666"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "1ce48f82e1c9b739bf26fd800d132544706f72d7", "filename": "compiler/rustc_codegen_llvm/src/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs?ref=49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "patch": "@@ -567,7 +567,7 @@ fn codegen_msvc_try<'ll>(\n         // module.\n         //\n         // When modifying, make sure that the type_name string exactly matches\n-        // the one used in src/libpanic_unwind/seh.rs.\n+        // the one used in library/panic_unwind/src/seh.rs.\n         let type_info_vtable = bx.declare_global(\"??_7type_info@@6B@\", bx.type_i8p());\n         let type_name = bx.const_bytes(b\"rust_panic\\0\");\n         let type_info ="}, {"sha": "914f58b147e098683139b82efafd1c8538758231", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "patch": "@@ -1863,7 +1863,10 @@ impl<'a> Builder<'a> {\n             };\n \n             if let Some(limit) = limit {\n-                rustflags.arg(&format!(\"-Cllvm-args=-import-instr-limit={}\", limit));\n+                if stage == 0 || self.config.default_codegen_backend().unwrap_or_default() == \"llvm\"\n+                {\n+                    rustflags.arg(&format!(\"-Cllvm-args=-import-instr-limit={}\", limit));\n+                }\n             }\n         }\n "}, {"sha": "0e3bbad9909eb243c7a02618bc6d0332db49c07c", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "patch": "@@ -321,8 +321,15 @@ pub fn std_cargo(builder: &Builder<'_>, target: TargetSelection, stage: u32, car\n         \"\"\n     };\n \n+    let mut features = String::new();\n+\n+    // Cranelift doesn't support `asm`.\n+    if stage != 0 && builder.config.default_codegen_backend().unwrap_or_default() == \"cranelift\" {\n+        features += \" compiler-builtins-no-asm\";\n+    }\n+\n     if builder.no_std(target) == Some(true) {\n-        let mut features = \"compiler-builtins-mem\".to_string();\n+        features += \" compiler-builtins-mem\";\n         if !target.starts_with(\"bpf\") {\n             features.push_str(compiler_builtins_c_feature);\n         }\n@@ -335,7 +342,7 @@ pub fn std_cargo(builder: &Builder<'_>, target: TargetSelection, stage: u32, car\n             .arg(\"--features\")\n             .arg(features);\n     } else {\n-        let mut features = builder.std_features(target);\n+        features += &builder.std_features(target);\n         features.push_str(compiler_builtins_c_feature);\n \n         cargo\n@@ -754,7 +761,7 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n         .env(\"CFG_RELEASE_CHANNEL\", &builder.config.channel)\n         .env(\"CFG_VERSION\", builder.rust_version());\n \n-    if let Some(backend) = builder.config.rust_codegen_backends.get(0) {\n+    if let Some(backend) = builder.config.default_codegen_backend() {\n         cargo.env(\"CFG_DEFAULT_CODEGEN_BACKEND\", backend);\n     }\n "}, {"sha": "842785838460f719cb9fa41e8075ac6e65769dc2", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "patch": "@@ -1611,6 +1611,10 @@ impl Config {\n         self.submodules.unwrap_or(rust_info.is_managed_git_subrepository())\n     }\n \n+    pub fn default_codegen_backend(&self) -> Option<Interned<String>> {\n+        self.rust_codegen_backends.get(0).cloned()\n+    }\n+\n     /// Returns the commit to download, or `None` if we shouldn't download CI artifacts.\n     fn download_ci_rustc_commit(&self, download_rustc: Option<StringOrBool>) -> Option<String> {\n         // If `download-rustc` is not set, default to rebuilding."}, {"sha": "30cc221df605b3a8402905d4ea5727a7fc2636d5", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49287a4095cdbbfa7ebd2c99e51b0624de40b7c8/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=49287a4095cdbbfa7ebd2c99e51b0624de40b7c8", "patch": "@@ -795,7 +795,7 @@ impl Build {\n     /// Gets the space-separated set of activated features for the standard\n     /// library.\n     fn std_features(&self, target: TargetSelection) -> String {\n-        let mut features = \"panic-unwind\".to_string();\n+        let mut features = \" panic-unwind\".to_string();\n \n         match self.config.llvm_libunwind(target) {\n             LlvmLibunwind::InTree => features.push_str(\" llvm-libunwind\"),"}]}