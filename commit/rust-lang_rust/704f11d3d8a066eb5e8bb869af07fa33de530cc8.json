{"sha": "704f11d3d8a066eb5e8bb869af07fa33de530cc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNGYxMWQzZDhhMDY2ZWI1ZThiYjg2OWFmMDdmYTMzZGU1MzBjYzg=", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2014-07-02T20:27:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-03T19:54:51Z"}, "message": "correct a few spelling mistakes in the tutorial", "tree": {"sha": "a32cd816e76871998eddd5fcdcc7147f730f6633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a32cd816e76871998eddd5fcdcc7147f730f6633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/704f11d3d8a066eb5e8bb869af07fa33de530cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/704f11d3d8a066eb5e8bb869af07fa33de530cc8", "html_url": "https://github.com/rust-lang/rust/commit/704f11d3d8a066eb5e8bb869af07fa33de530cc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/704f11d3d8a066eb5e8bb869af07fa33de530cc8/comments", "author": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d360050666ef6c884fbf9b7eec1f3da9f0d13bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d360050666ef6c884fbf9b7eec1f3da9f0d13bf", "html_url": "https://github.com/rust-lang/rust/commit/5d360050666ef6c884fbf9b7eec1f3da9f0d13bf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2a788d7e7934c495d1d6ca218209faa3181c062c", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/704f11d3d8a066eb5e8bb869af07fa33de530cc8/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/704f11d3d8a066eb5e8bb869af07fa33de530cc8/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=704f11d3d8a066eb5e8bb869af07fa33de530cc8", "patch": "@@ -469,7 +469,7 @@ fn signum(x: int) -> int {\n \n Rust's `match` construct is a generalized, cleaned-up version of C's\n `switch` construct. You provide it with a value and a number of\n-*arms*, each labelled with a pattern, and the code compares the value\n+*arms*, each labeled with a pattern, and the code compares the value\n against each pattern in order until one matches. The matching pattern\n executes its corresponding arm.\n \n@@ -2524,7 +2524,7 @@ of the components of types. By design, trait objects don't know the exact type\n of their contents and so the compiler cannot reason about those properties.\n \n You can instruct the compiler, however, that the contents of a trait object must\n-acribe to a particular bound with a trailing colon (`:`). These are examples of\n+ascribe to a particular bound with a trailing colon (`:`). These are examples of\n valid types:\n \n ~~~rust\n@@ -2579,7 +2579,7 @@ This is a silly way to compute the radius of a circle\n \n In type-parameterized functions,\n methods of the supertrait may be called on values of subtrait-bound type parameters.\n-Refering to the previous example of `trait Circle : Shape`:\n+Referring to the previous example of `trait Circle : Shape`:\n \n ~~~\n # trait Shape { fn area(&self) -> f64; }"}]}