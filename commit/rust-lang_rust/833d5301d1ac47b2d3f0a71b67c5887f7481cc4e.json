{"sha": "833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "node_id": "C_kwDOAAsO6NoAKDgzM2Q1MzAxZDFhYzQ3YjJkM2YwYTcxYjY3YzU4ODdmNzQ4MWNjNGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-07T16:22:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-07T16:22:57Z"}, "message": "Auto merge of #14758 - lumenian:hover-layout-config, r=HKalbasi\n\nAdd config for disabling hover memory layout data\n\nRequested in https://github.com/rust-lang/rust-analyzer/pull/14748#issuecomment-1537190252", "tree": {"sha": "93e1357fc8dc4e5a17947ab5cd92553593dbe13e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93e1357fc8dc4e5a17947ab5cd92553593dbe13e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "html_url": "https://github.com/rust-lang/rust/commit/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaf670b6490282b1efd7476fc3995b6b10ffd99a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaf670b6490282b1efd7476fc3995b6b10ffd99a", "html_url": "https://github.com/rust-lang/rust/commit/aaf670b6490282b1efd7476fc3995b6b10ffd99a"}, {"sha": "8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e1ba7fdab2e1d13732a30d3be339d226ec916f1", "html_url": "https://github.com/rust-lang/rust/commit/8e1ba7fdab2e1d13732a30d3be339d226ec916f1"}], "stats": {"total": 105, "additions": 90, "deletions": 15}, "files": [{"sha": "b6279295ce3fd7901c069993cb02d499c25bd0b5", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -27,6 +27,7 @@ use crate::{\n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct HoverConfig {\n     pub links_in_hover: bool,\n+    pub memory_layout: bool,\n     pub documentation: bool,\n     pub keywords: bool,\n     pub format: HoverDocFormat,\n@@ -226,7 +227,7 @@ fn hover_simple(\n                     return None;\n                 }\n                 let c = token.parent().and_then(|x| x.parent()).and_then(ast::ClosureExpr::cast)?;\n-                render::closure_expr(sema, c)\n+                render::closure_expr(sema, config, c)\n             })\n         });\n "}, {"sha": "dc03df180ab691440f03aa3e40664982976042d9", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -43,13 +43,17 @@ pub(super) fn type_info_of(\n \n pub(super) fn closure_expr(\n     sema: &Semantics<'_, RootDatabase>,\n+    config: &HoverConfig,\n     c: ast::ClosureExpr,\n ) -> Option<HoverResult> {\n     let ty = &sema.type_of_expr(&c.into())?.original;\n-    let layout = ty\n-        .layout(sema.db)\n-        .map(|x| format!(\" // size = {}, align = {}\", x.size.bytes(), x.align.abi.bytes()))\n-        .unwrap_or_default();\n+    let layout = if config.memory_layout {\n+        ty.layout(sema.db)\n+            .map(|x| format!(\" // size = {}, align = {}\", x.size.bytes(), x.align.abi.bytes()))\n+            .unwrap_or_default()\n+    } else {\n+        String::default()\n+    };\n     let c = ty.as_closure()?;\n     let mut captures = c\n         .captured_items(sema.db)\n@@ -415,7 +419,7 @@ pub(super) fn definition(\n     let mod_path = definition_mod_path(db, &def);\n     let (label, docs) = match def {\n         Definition::Macro(it) => label_and_docs(db, it),\n-        Definition::Field(it) => label_and_layout_info_and_docs(db, it, |&it| {\n+        Definition::Field(it) => label_and_layout_info_and_docs(db, it, config, |&it| {\n             let var_def = it.parent_def(db);\n             let id = it.index();\n             let layout = it.layout(db).ok()?;\n@@ -435,7 +439,7 @@ pub(super) fn definition(\n         }),\n         Definition::Module(it) => label_and_docs(db, it),\n         Definition::Function(it) => label_and_docs(db, it),\n-        Definition::Adt(it) => label_and_layout_info_and_docs(db, it, |&it| {\n+        Definition::Adt(it) => label_and_layout_info_and_docs(db, it, config, |&it| {\n             let layout = it.layout(db).ok()?;\n             Some(format!(\"size = {}, align = {}\", layout.size.bytes(), layout.align.abi.bytes()))\n         }),\n@@ -473,7 +477,7 @@ pub(super) fn definition(\n         }),\n         Definition::Trait(it) => label_and_docs(db, it),\n         Definition::TraitAlias(it) => label_and_docs(db, it),\n-        Definition::TypeAlias(it) => label_and_layout_info_and_docs(db, it, |&it| {\n+        Definition::TypeAlias(it) => label_and_layout_info_and_docs(db, it, config, |&it| {\n             let layout = it.ty(db).layout(db).ok()?;\n             Some(format!(\"size = {}, align = {}\", layout.size.bytes(), layout.align.abi.bytes()))\n         }),\n@@ -577,17 +581,17 @@ where\n fn label_and_layout_info_and_docs<D, E, V>(\n     db: &RootDatabase,\n     def: D,\n+    config: &HoverConfig,\n     value_extractor: E,\n ) -> (String, Option<hir::Documentation>)\n where\n     D: HasAttrs + HirDisplay,\n     E: Fn(&D) -> Option<V>,\n     V: Display,\n {\n-    let label = if let Some(value) = value_extractor(&def) {\n-        format!(\"{} // {value}\", def.display(db))\n-    } else {\n-        def.display(db).to_string()\n+    let label = match value_extractor(&def) {\n+        Some(value) if config.memory_layout => format!(\"{} // {value}\", def.display(db)),\n+        _ => def.display(db).to_string(),\n     };\n     let docs = def.attrs(db).docs();\n     (label, docs)"}, {"sha": "a79e47dd67d4b1b03d74cdba6c9168a8354b96fa", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -6,6 +6,7 @@ use crate::{fixture, HoverConfig, HoverDocFormat};\n \n const HOVER_BASE_CONFIG: HoverConfig = HoverConfig {\n     links_in_hover: false,\n+    memory_layout: true,\n     documentation: true,\n     format: HoverDocFormat::Markdown,\n     keywords: true,\n@@ -57,6 +58,23 @@ fn check_hover_no_links(ra_fixture: &str, expect: Expect) {\n     expect.assert_eq(&actual)\n }\n \n+fn check_hover_no_memory_layout(ra_fixture: &str, expect: Expect) {\n+    let (analysis, position) = fixture::position(ra_fixture);\n+    let hover = analysis\n+        .hover(\n+            &HoverConfig { memory_layout: false, ..HOVER_BASE_CONFIG },\n+            FileRange { file_id: position.file_id, range: TextRange::empty(position.offset) },\n+        )\n+        .unwrap()\n+        .unwrap();\n+\n+    let content = analysis.db.file_text(position.file_id);\n+    let hovered_element = &content[hover.range];\n+\n+    let actual = format!(\"*{hovered_element}*\\n{}\\n\", hover.info.markup);\n+    expect.assert_eq(&actual)\n+}\n+\n fn check_hover_no_markdown(ra_fixture: &str, expect: Expect) {\n     let (analysis, position) = fixture::position(ra_fixture);\n     let hover = analysis\n@@ -1745,6 +1763,44 @@ pub fn fo$0o() {}\n     );\n }\n \n+#[test]\n+fn test_hover_no_memory_layout() {\n+    check_hover_no_memory_layout(\n+        r#\"struct Foo { fiel$0d_a: u8, field_b: i32, field_c: i16 }\"#,\n+        expect![[r#\"\n+            *field_a*\n+\n+            ```rust\n+            test::Foo\n+            ```\n+\n+            ```rust\n+            field_a: u8\n+            ```\n+        \"#]],\n+    );\n+\n+    check_hover_no_memory_layout(\n+        r#\"\n+//- minicore: copy\n+fn main() {\n+    let x = 2;\n+    let y = $0|z| x + z;\n+}\n+\"#,\n+        expect![[r#\"\n+            *|*\n+            ```rust\n+            {closure#0}\n+            impl Fn(i32) -> i32\n+            ```\n+\n+            ## Captures\n+            * `x` by immutable borrow\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn test_hover_macro_generated_struct_fn_doc_comment() {\n     cov_mark::check!(hover_macro_generated_struct_fn_doc_comment);"}, {"sha": "dd6ec21ffff557f7fdf1bd88d5d47a53001702e5", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -137,6 +137,7 @@ impl StaticIndex<'_> {\n         });\n         let hover_config = HoverConfig {\n             links_in_hover: true,\n+            memory_layout: true,\n             documentation: true,\n             keywords: true,\n             format: crate::HoverDocFormat::Markdown,"}, {"sha": "b72f9202c67e69983650f7c9330df05d78a3c1ff", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -313,8 +313,10 @@ config_data! {\n         /// Whether to show keyword hover popups. Only applies when\n         /// `#rust-analyzer.hover.documentation.enable#` is set.\n         hover_documentation_keywords_enable: bool  = \"true\",\n-        /// Use markdown syntax for links in hover.\n+        /// Use markdown syntax for links on hover.\n         hover_links_enable: bool = \"true\",\n+        /// Whether to show memory layout data on hover.\n+        hover_memoryLayout_enable: bool = \"true\",\n \n         /// Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.\n         imports_granularity_enforce: bool              = \"false\",\n@@ -1472,6 +1474,7 @@ impl Config {\n     pub fn hover(&self) -> HoverConfig {\n         HoverConfig {\n             links_in_hover: self.data.hover_links_enable,\n+            memory_layout: self.data.hover_memoryLayout_enable,\n             documentation: self.data.hover_documentation_enable,\n             format: {\n                 let is_markdown = try_or_def!(self"}, {"sha": "e75b97061e014af67eaec1ea0fac66b79f378c09", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -421,7 +421,12 @@ Whether to show keyword hover popups. Only applies when\n [[rust-analyzer.hover.links.enable]]rust-analyzer.hover.links.enable (default: `true`)::\n +\n --\n-Use markdown syntax for links in hover.\n+Use markdown syntax for links on hover.\n+--\n+[[rust-analyzer.hover.memoryLayout.enable]]rust-analyzer.hover.memoryLayout.enable (default: `true`)::\n++\n+--\n+Whether to show memory layout data on hover.\n --\n [[rust-analyzer.imports.granularity.enforce]]rust-analyzer.imports.granularity.enforce (default: `false`)::\n +"}, {"sha": "c9de94f022709c06f48b2b64014a7f43acd1f98a", "filename": "editors/code/package.json", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/833d5301d1ac47b2d3f0a71b67c5887f7481cc4e/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=833d5301d1ac47b2d3f0a71b67c5887f7481cc4e", "patch": "@@ -955,7 +955,12 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.hover.links.enable\": {\n-                    \"markdownDescription\": \"Use markdown syntax for links in hover.\",\n+                    \"markdownDescription\": \"Use markdown syntax for links on hover.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.hover.memoryLayout.enable\": {\n+                    \"markdownDescription\": \"Whether to show memory layout data on hover.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },"}]}