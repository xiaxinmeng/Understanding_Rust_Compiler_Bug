{"sha": "d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "node_id": "C_kwDOAAsO6NoAKGQ5ZGM5MjVjMmU5NTk3YTBhZmYxMTk5OGZmNmIwMGFiMTliNzBlYjU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-11-22T10:06:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-11-22T10:06:37Z"}, "message": "doc: document absence of stability guarantees", "tree": {"sha": "cf696ad747b2f89d445770d5c8ab9ddcfff2d613", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf696ad747b2f89d445770d5c8ab9ddcfff2d613"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "html_url": "https://github.com/rust-lang/rust/commit/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183ef048f61ae36aa389d1d0345cde940fe788e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/183ef048f61ae36aa389d1d0345cde940fe788e9", "html_url": "https://github.com/rust-lang/rust/commit/183ef048f61ae36aa389d1d0345cde940fe788e9"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "2f2c4351c737b95b8163c8df1e2ee2473a9d09f7", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "patch": "@@ -306,6 +306,32 @@ This crate contains utilities for CPU and memory profiling.\n \n This sections talks about the things which are everywhere and nowhere in particular.\n \n+### Stability Guarantees\n+\n+One of the reasons rust-analyzer moves relatively fast is that we don't introduce new stability guarantees.\n+Instead, as much as possible we leverage existing ones.\n+\n+Examples:\n+\n+* The `ide` API of rust-analyzer are explicitly unstable, but the LSP interface is stable, and here we just implement a stable API managed by someone else.\n+* Rust language and Cargo are stable, and they are the primary inputs to rust-analyzer.\n+* The `rowan` library is published to crates.io, but it is deliberately kept under `1.0` and always makes semver-incompatible upgrades\n+\n+Another important example is that rust-analyzer isn't run on CI, so, unlike `rustc` and `clippy`, it is actually ok for us to change runtime behavior.\n+\n+At some point we might consider opening up APIs or allowing crates.io libraries to include rust-analyzer specific annotations, but that's going to be a big commitment on our side.\n+\n+Exceptions:\n+\n+* `rust-project.json` is a de-facto stable format for non-cargo build systems.\n+  It is probably ok enough, but was definitely stabilized implicitly.\n+  Lesson for the future: when designing API which could become a stability boundary, don't wait for the first users until you stabilize it.\n+  By the time you have first users, it is already de-facto stable.\n+  And the users will first use the thing, and *then* inform you that now you have users.\n+  The sad thing is that stuff should be stable before someone uses it for the first time, or it should contain explicit opt-in.\n+* We ship some LSP extensions, and we try to keep those somewhat stable.\n+  Here, we need to work with a finite set of editor maintainers, so not providing rock-solid guarantees works.\n+\n ### Code generation\n \n Some components in this repository are generated through automatic processes."}]}