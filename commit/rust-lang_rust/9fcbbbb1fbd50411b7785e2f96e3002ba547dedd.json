{"sha": "9fcbbbb1fbd50411b7785e2f96e3002ba547dedd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmY2JiYmIxZmJkNTA0MTFiNzc4NWUyZjk2ZTMwMDJiYTU0N2RlZGQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-16T04:31:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-16T04:31:08Z"}, "message": "Rollup merge of #86242 - BoxyUwU:rustdoc-const-evaluatable-ice, r=oli-obk\n\nrustdoc- dont ICE on `ConstEvaluatable` predicates\n\nFixes #77647\n\nrustdoc doesn't need to be handling these as you cant write them, they just get added implicitly when you write a where clause containing an expression.", "tree": {"sha": "1420fb0aa9718bd8177856cdcf55bf6ec4446c84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1420fb0aa9718bd8177856cdcf55bf6ec4446c84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgyX6NCRBK7hj4Ov3rIwAAflAIAI7aUhc0MiiJvPBlAZ8Ui7xO\nxPCuWgkQsLgCI0cncHzZs8r9SSEq4rrKJm3+n0rTQyPuwR0X+pxbfi3/58mQX1jb\np7Xu4LPH0dD1Wu5FuHRbPkHnXbj8+cSaJcSB4+nb+l4jmnvAKXd/0HY42yz2JNT+\ngIRhZ8ZBauuL94ZqG+q5X8L77BBMkZjYE3AB9QQFiKyjv729I1QvXpQKyL9u3UYr\n94LJFyQghMLOXx2i52WSqnYaUzJ13CS6XNHSkvEFyUdie0W455l/cwyoPFJNOabt\na/zVUJLl/ff5SCxI22hw9cRDiySBGxsek1Z0tXLBph7Bm9F3g4pMM8OeFIf47Io=\n=fNvN\n-----END PGP SIGNATURE-----\n", "payload": "tree 1420fb0aa9718bd8177856cdcf55bf6ec4446c84\nparent d476707a1f2f082b735e2e073153ba446c6a7ae8\nparent 94de92ddc71cb517a4d81f2b851b2871a1fc7fba\nauthor Yuki Okushi <jtitor@2k36.org> 1623817868 +0900\ncommitter GitHub <noreply@github.com> 1623817868 +0900\n\nRollup merge of #86242 - BoxyUwU:rustdoc-const-evaluatable-ice, r=oli-obk\n\nrustdoc- dont ICE on `ConstEvaluatable` predicates\n\nFixes #77647\n\nrustdoc doesn't need to be handling these as you cant write them, they just get added implicitly when you write a where clause containing an expression.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd", "html_url": "https://github.com/rust-lang/rust/commit/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d476707a1f2f082b735e2e073153ba446c6a7ae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d476707a1f2f082b735e2e073153ba446c6a7ae8", "html_url": "https://github.com/rust-lang/rust/commit/d476707a1f2f082b735e2e073153ba446c6a7ae8"}, {"sha": "94de92ddc71cb517a4d81f2b851b2871a1fc7fba", "url": "https://api.github.com/repos/rust-lang/rust/commits/94de92ddc71cb517a4d81f2b851b2871a1fc7fba", "html_url": "https://github.com/rust-lang/rust/commit/94de92ddc71cb517a4d81f2b851b2871a1fc7fba"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "61507d5ddca25f3a77ce1183b34a0ad4d9f06145", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=9fcbbbb1fbd50411b7785e2f96e3002ba547dedd", "patch": "@@ -350,12 +350,12 @@ impl<'a> Clean<Option<WherePredicate>> for ty::Predicate<'a> {\n             ty::PredicateKind::RegionOutlives(pred) => pred.clean(cx),\n             ty::PredicateKind::TypeOutlives(pred) => pred.clean(cx),\n             ty::PredicateKind::Projection(pred) => Some(pred.clean(cx)),\n+            ty::PredicateKind::ConstEvaluatable(..) => None,\n \n             ty::PredicateKind::Subtype(..)\n             | ty::PredicateKind::WellFormed(..)\n             | ty::PredicateKind::ObjectSafe(..)\n             | ty::PredicateKind::ClosureKind(..)\n-            | ty::PredicateKind::ConstEvaluatable(..)\n             | ty::PredicateKind::ConstEquate(..)\n             | ty::PredicateKind::TypeWellFormedFromEnv(..) => panic!(\"not user writable\"),\n         }"}, {"sha": "1c074fdb3f882d5915966defca2e7bc499523291", "filename": "src/test/rustdoc/const-generics/const-evaluatable-checked.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-evaluatable-checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fcbbbb1fbd50411b7785e2f96e3002ba547dedd/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-evaluatable-checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-evaluatable-checked.rs?ref=9fcbbbb1fbd50411b7785e2f96e3002ba547dedd", "patch": "@@ -0,0 +1,7 @@\n+#![crate_name = \"foo\"]\n+#![feature(const_evaluatable_checked, const_generics)]\n+#![allow(incomplete_features)]\n+// make sure that `ConstEvaluatable` predicates dont cause rustdoc to ICE #77647\n+// @has foo/struct.Ice.html '//pre[@class=\"rust struct\"]' \\\n+//      'pub struct Ice<const N: usize> where [(); N + 1]: ;'\n+pub struct Ice<const N: usize> where [(); N + 1]:;"}]}