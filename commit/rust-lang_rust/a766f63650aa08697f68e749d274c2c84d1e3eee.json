{"sha": "a766f63650aa08697f68e749d274c2c84d1e3eee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NjZmNjM2NTBhYTA4Njk3ZjY4ZTc0OWQyNzRjMmM4NGQxZTNlZWU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-19T15:35:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-19T15:35:42Z"}, "message": "Merge #2594\n\n2594: Omit default parameter types r=matklad a=SomeoneToIgnore\n\nPart of https://github.com/rust-analyzer/rust-analyzer/issues/1946\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "b57a54e65ee71ac29d932728fc25591402c3d524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b57a54e65ee71ac29d932728fc25591402c3d524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a766f63650aa08697f68e749d274c2c84d1e3eee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd+5jOCRBK7hj4Ov3rIwAAdHIIACvBy7BiWtSGo8YUjdtVMq5A\nmE3PIU+zfvHiFcLSxQSGj+kG+qE+352cPVyCdVnDVpL3OUIu4EcHKbkLEisn5G9S\nG7m0m3YG/Efu1ad3QOZNru9ZWgsMa3EQwBLJ2HwtIiF48WE9USU9GadjG+JHqh0c\nnCWKRJ2GAMOoRyg6arEKGrYMLxW9D7VZ71AQYGCFg6+KF9VlSRENMjD+zeNZtfCu\nNPOnD6mC3cy8NIz0kiUhuoKEyOqabkXdsW0WJUKmUn4xyCMQPpvMu5aGVUWM3yqg\nq5bXAJ2ZOLGtkrvtr2k1nfUetGlC7ORYjW4F+EWeE3kwqscRJwH3kaoEQpyFpxA=\n=oAaT\n-----END PGP SIGNATURE-----\n", "payload": "tree b57a54e65ee71ac29d932728fc25591402c3d524\nparent 1e32412e28d6668af5c6fe85b4fc921fb1de9a98\nparent 6419d49f1d88600d4a480701285d4e33be5cd3f1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1576769742 +0000\ncommitter GitHub <noreply@github.com> 1576769742 +0000\n\nMerge #2594\n\n2594: Omit default parameter types r=matklad a=SomeoneToIgnore\n\nPart of https://github.com/rust-analyzer/rust-analyzer/issues/1946\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a766f63650aa08697f68e749d274c2c84d1e3eee", "html_url": "https://github.com/rust-lang/rust/commit/a766f63650aa08697f68e749d274c2c84d1e3eee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a766f63650aa08697f68e749d274c2c84d1e3eee/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e32412e28d6668af5c6fe85b4fc921fb1de9a98", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e32412e28d6668af5c6fe85b4fc921fb1de9a98", "html_url": "https://github.com/rust-lang/rust/commit/1e32412e28d6668af5c6fe85b4fc921fb1de9a98"}, {"sha": "6419d49f1d88600d4a480701285d4e33be5cd3f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6419d49f1d88600d4a480701285d4e33be5cd3f1", "html_url": "https://github.com/rust-lang/rust/commit/6419d49f1d88600d4a480701285d4e33be5cd3f1"}], "stats": {"total": 90, "additions": 85, "deletions": 5}, "files": [{"sha": "dcca1bace6f3d09f9c501e6883d7af253ee61f56", "filename": "crates/ra_hir_ty/src/display.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs?ref=a766f63650aa08697f68e749d274c2c84d1e3eee", "patch": "@@ -10,6 +10,7 @@ pub struct HirFormatter<'a, 'b, DB> {\n     buf: String,\n     curr_size: usize,\n     max_size: Option<usize>,\n+    should_display_default_types: bool,\n }\n \n pub trait HirDisplay {\n@@ -19,7 +20,7 @@ pub trait HirDisplay {\n     where\n         Self: Sized,\n     {\n-        HirDisplayWrapper(db, self, None)\n+        HirDisplayWrapper(db, self, None, true)\n     }\n \n     fn display_truncated<'a, DB>(\n@@ -30,7 +31,7 @@ pub trait HirDisplay {\n     where\n         Self: Sized,\n     {\n-        HirDisplayWrapper(db, self, max_size)\n+        HirDisplayWrapper(db, self, max_size, false)\n     }\n }\n \n@@ -72,9 +73,13 @@ where\n             false\n         }\n     }\n+\n+    pub fn should_display_default_types(&self) -> bool {\n+        self.should_display_default_types\n+    }\n }\n \n-pub struct HirDisplayWrapper<'a, DB, T>(&'a DB, &'a T, Option<usize>);\n+pub struct HirDisplayWrapper<'a, DB, T>(&'a DB, &'a T, Option<usize>, bool);\n \n impl<'a, DB, T> fmt::Display for HirDisplayWrapper<'a, DB, T>\n where\n@@ -88,6 +93,7 @@ where\n             buf: String::with_capacity(20),\n             curr_size: 0,\n             max_size: self.2,\n+            should_display_default_types: self.3,\n         })\n     }\n }"}, {"sha": "7ca9e6b8a77595726a4dc5823b86906cef93b057", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=a766f63650aa08697f68e749d274c2c84d1e3eee", "patch": "@@ -906,7 +906,38 @@ impl HirDisplay for ApplicationTy {\n                 write!(f, \"{}\", name)?;\n                 if self.parameters.len() > 0 {\n                     write!(f, \"<\")?;\n-                    f.write_joined(&*self.parameters.0, \", \")?;\n+\n+                    let mut non_default_parameters = Vec::with_capacity(self.parameters.len());\n+                    let parameters_to_write = if f.should_display_default_types() {\n+                        self.parameters.0.as_ref()\n+                    } else {\n+                        match self\n+                            .ctor\n+                            .as_generic_def()\n+                            .map(|generic_def_id| f.db.generic_defaults(generic_def_id))\n+                            .filter(|defaults| !defaults.is_empty())\n+                        {\n+                            Option::None => self.parameters.0.as_ref(),\n+                            Option::Some(default_parameters) => {\n+                                for (i, parameter) in self.parameters.into_iter().enumerate() {\n+                                    match (parameter, default_parameters.get(i)) {\n+                                        (&Ty::Unknown, _) | (_, None) => {\n+                                            non_default_parameters.push(parameter.clone())\n+                                        }\n+                                        (_, Some(default_parameter))\n+                                            if parameter != default_parameter =>\n+                                        {\n+                                            non_default_parameters.push(parameter.clone())\n+                                        }\n+                                        _ => (),\n+                                    }\n+                                }\n+                                &non_default_parameters\n+                            }\n+                        }\n+                    };\n+\n+                    f.write_joined(parameters_to_write, \", \")?;\n                     write!(f, \">\")?;\n                 }\n             }"}, {"sha": "a227bf546ca58a99781ad5f65d7923ecf71a58c1", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=a766f63650aa08697f68e749d274c2c84d1e3eee", "patch": "@@ -250,7 +250,7 @@ pub(crate) fn type_of(db: &RootDatabase, frange: FileRange) -> Option<String> {\n     } else {\n         return None;\n     };\n-    Some(ty.display(db).to_string())\n+    Some(ty.display_truncated(db, None).to_string())\n }\n \n #[cfg(test)]\n@@ -424,6 +424,23 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn hover_omits_default_generic_types() {\n+        check_hover_result(\n+            r#\"\n+//- /main.rs\n+struct Test<K, T = u8> {\n+    k: K,\n+    t: T,\n+}\n+\n+fn main() {\n+    let zz<|> = Test { t: 23, k: 33 };\n+}\"#,\n+            &[\"Test<i32>\"],\n+        );\n+    }\n+\n     #[test]\n     fn hover_some() {\n         let (analysis, position) = single_file_with_position("}, {"sha": "3154df4572731dfce3cf2c27d0ab45c263949e01", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a766f63650aa08697f68e749d274c2c84d1e3eee/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=a766f63650aa08697f68e749d274c2c84d1e3eee", "patch": "@@ -159,6 +159,32 @@ mod tests {\n \n     use crate::mock_analysis::single_file;\n \n+    #[test]\n+    fn default_generic_types_should_not_be_displayed() {\n+        let (analysis, file_id) = single_file(\n+            r#\"\n+struct Test<K, T = u8> {\n+    k: K,\n+    t: T,\n+}\n+\n+fn main() {\n+    let zz = Test { t: 23, k: 33 };\n+}\"#,\n+        );\n+\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id, None).unwrap(), @r###\"\n+        [\n+            InlayHint {\n+                range: [69; 71),\n+                kind: TypeHint,\n+                label: \"Test<i32>\",\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn let_statement() {\n         let (analysis, file_id) = single_file("}]}