{"sha": "981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MWZmYTdjMTRjMWNmZDE2MzkwZDVkOTJkN2NhMGI1NDg0NzdiOTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-25T03:01:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-25T03:01:35Z"}, "message": "Auto merge of #6959 - ebobrow:iss-6927-fix, r=camsteffen\n\nCheck for `.to_string().into_bytes()` in string_lit_to_bytes\n\nfixes #6927\n\nchangelog: Add a check for `into_bytes()` to string_lit_to_bytes lint", "tree": {"sha": "f715991aed48461aa5fd6bd68b2eb2b9dba1194f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f715991aed48461aa5fd6bd68b2eb2b9dba1194f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "html_url": "https://github.com/rust-lang/rust/commit/981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1825a609e13c205d99783ff2ca99d0bd58ff21", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1825a609e13c205d99783ff2ca99d0bd58ff21", "html_url": "https://github.com/rust-lang/rust/commit/4a1825a609e13c205d99783ff2ca99d0bd58ff21"}, {"sha": "e9ebc27525757f967131ecb3570c1438f8de4efb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ebc27525757f967131ecb3570c1438f8de4efb", "html_url": "https://github.com/rust-lang/rust/commit/e9ebc27525757f967131ecb3570c1438f8de4efb"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "99ca7ef77a5c5ed281cda4d2d2844a7912eba9df", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "patch": "@@ -284,6 +284,35 @@ impl<'tcx> LateLintPass<'tcx> for StringLitAsBytes {\n                 }\n             }\n         }\n+\n+        if_chain! {\n+            if let ExprKind::MethodCall(path, _, [recv], _) = &e.kind;\n+            if path.ident.name == sym!(into_bytes);\n+            if let ExprKind::MethodCall(path, _, [recv], _) = &recv.kind;\n+            if matches!(&*path.ident.name.as_str(), \"to_owned\" | \"to_string\");\n+            if let ExprKind::Lit(lit) = &recv.kind;\n+            if let LitKind::Str(lit_content, _) = &lit.node;\n+\n+            if lit_content.as_str().is_ascii();\n+            if lit_content.as_str().len() <= MAX_LENGTH_BYTE_STRING_LIT;\n+            if !recv.span.from_expansion();\n+            then {\n+                let mut applicability = Applicability::MachineApplicable;\n+\n+                span_lint_and_sugg(\n+                    cx,\n+                    STRING_LIT_AS_BYTES,\n+                    e.span,\n+                    \"calling `into_bytes()` on a string literal\",\n+                    \"consider using a byte string literal instead\",\n+                    format!(\n+                        \"b{}.to_vec()\",\n+                        snippet_with_applicability(cx, recv.span, r#\"\"..\"\"#, &mut applicability)\n+                    ),\n+                    applicability,\n+                );\n+            }\n+        }\n     }\n }\n "}, {"sha": "dd22bfa5c53ef43e847237bbfc8abc554259b0ad", "filename": "tests/ui/string_lit_as_bytes.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/tests%2Fui%2Fstring_lit_as_bytes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/tests%2Fui%2Fstring_lit_as_bytes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.fixed?ref=981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "patch": "@@ -8,10 +8,16 @@ fn str_lit_as_bytes() {\n \n     let bs = br###\"raw string with 3# plus \" \"\"###;\n \n+    let bs = b\"lit to string\".to_vec();\n+    let bs = b\"lit to owned\".to_vec();\n+\n     // no warning, because these cannot be written as byte string literals:\n     let ubs = \"\u2603\".as_bytes();\n     let ubs = \"hello there! this is a very long string\".as_bytes();\n \n+    let ubs = \"\u2603\".to_string().into_bytes();\n+    let ubs = \"this is also too long and shouldn't be fixed\".to_string().into_bytes();\n+\n     let strify = stringify!(foobar).as_bytes();\n \n     let current_version = env!(\"CARGO_PKG_VERSION\").as_bytes();"}, {"sha": "d2a710ed6b8ca5f575ac836d3ec80f5d563dbf1d", "filename": "tests/ui/string_lit_as_bytes.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/tests%2Fui%2Fstring_lit_as_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/tests%2Fui%2Fstring_lit_as_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.rs?ref=981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "patch": "@@ -8,10 +8,16 @@ fn str_lit_as_bytes() {\n \n     let bs = r###\"raw string with 3# plus \" \"\"###.as_bytes();\n \n+    let bs = \"lit to string\".to_string().into_bytes();\n+    let bs = \"lit to owned\".to_owned().into_bytes();\n+\n     // no warning, because these cannot be written as byte string literals:\n     let ubs = \"\u2603\".as_bytes();\n     let ubs = \"hello there! this is a very long string\".as_bytes();\n \n+    let ubs = \"\u2603\".to_string().into_bytes();\n+    let ubs = \"this is also too long and shouldn't be fixed\".to_string().into_bytes();\n+\n     let strify = stringify!(foobar).as_bytes();\n \n     let current_version = env!(\"CARGO_PKG_VERSION\").as_bytes();"}, {"sha": "e0ddb070b504456eb8e6f237c9f30e0c5e273d5e", "filename": "tests/ui/string_lit_as_bytes.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/tests%2Fui%2Fstring_lit_as_bytes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/981ffa7c14c1cfd16390d5d92d7ca0b548477b95/tests%2Fui%2Fstring_lit_as_bytes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.stderr?ref=981ffa7c14c1cfd16390d5d92d7ca0b548477b95", "patch": "@@ -12,17 +12,29 @@ error: calling `as_bytes()` on a string literal\n LL |     let bs = r###\"raw string with 3# plus \" \"\"###.as_bytes();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with 3# plus \" \"\"###`\n \n+error: calling `into_bytes()` on a string literal\n+  --> $DIR/string_lit_as_bytes.rs:11:14\n+   |\n+LL |     let bs = \"lit to string\".to_string().into_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"lit to string\".to_vec()`\n+\n+error: calling `into_bytes()` on a string literal\n+  --> $DIR/string_lit_as_bytes.rs:12:14\n+   |\n+LL |     let bs = \"lit to owned\".to_owned().into_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"lit to owned\".to_vec()`\n+\n error: calling `as_bytes()` on `include_str!(..)`\n-  --> $DIR/string_lit_as_bytes.rs:19:22\n+  --> $DIR/string_lit_as_bytes.rs:25:22\n    |\n LL |     let includestr = include_str!(\"entry_unfixable.rs\").as_bytes();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry_unfixable.rs\")`\n \n error: calling `as_bytes()` on a string literal\n-  --> $DIR/string_lit_as_bytes.rs:21:13\n+  --> $DIR/string_lit_as_bytes.rs:27:13\n    |\n LL |     let _ = \"string with newline/t/n\".as_bytes();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"string with newline/t/n\"`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 6 previous errors\n "}]}