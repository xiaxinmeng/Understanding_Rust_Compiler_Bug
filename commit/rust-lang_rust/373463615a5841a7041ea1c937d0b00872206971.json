{"sha": "373463615a5841a7041ea1c937d0b00872206971", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MzQ2MzYxNWE1ODQxYTcwNDFlYTFjOTM3ZDBiMDA4NzIyMDY5NzE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-17T12:44:11Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-17T13:02:25Z"}, "message": "Rollup merge of #24430 - laumann:trace-macros-flag, r=pnkfelix\n\n This is the second attempt at turning the trace_macros macro into a compiler flag.\n\nSee #22619", "tree": {"sha": "1e238a0c9ee44ba0e2d14dadb3870496245e076e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e238a0c9ee44ba0e2d14dadb3870496245e076e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/373463615a5841a7041ea1c937d0b00872206971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/373463615a5841a7041ea1c937d0b00872206971", "html_url": "https://github.com/rust-lang/rust/commit/373463615a5841a7041ea1c937d0b00872206971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/373463615a5841a7041ea1c937d0b00872206971/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fb57529aded92c4f470568e6b5ea7a5a28f6a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fb57529aded92c4f470568e6b5ea7a5a28f6a4", "html_url": "https://github.com/rust-lang/rust/commit/b7fb57529aded92c4f470568e6b5ea7a5a28f6a4"}, {"sha": "c0139cafcdbe60e446b81dda78f3595fea3e3b8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0139cafcdbe60e446b81dda78f3595fea3e3b8d", "html_url": "https://github.com/rust-lang/rust/commit/c0139cafcdbe60e446b81dda78f3595fea3e3b8d"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "f7ff8b9e6061a3f6fe5c25250f1079853d30bd89", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -606,6 +606,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"Force overflow checks on or off\"),\n     force_dropflag_checks: Option<bool> = (None, parse_opt_bool,\n           \"Force drop flag checks on or off\"),\n+    trace_macros: bool = (false, parse_bool,\n+          \"For every macro invocation, print its name and arguments\"),\n }\n \n pub fn default_lib_output() -> CrateType {\n@@ -667,7 +669,7 @@ pub fn build_target_config(opts: &Options, sp: &SpanHandler) -> Config {\n         Ok(t) => t,\n         Err(e) => {\n             sp.handler().fatal(&format!(\"Error loading target specification: {}\", e));\n-    }\n+        }\n     };\n \n     let (int_type, uint_type) = match &target.target_pointer_width[..] {"}, {"sha": "a7515293146844f696976b5ec34a7e2a838ee7b1", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -483,6 +483,7 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n                 crate_name: crate_name.to_string(),\n                 features: Some(&features),\n                 recursion_limit: sess.recursion_limit.get(),\n+                trace_mac: sess.opts.debugging_opts.trace_macros,\n             };\n             let ret = syntax::ext::expand::expand_crate(&sess.parse_sess,\n                                               cfg,"}, {"sha": "55afac1a1de43da428d6c9c18ddbedaab577d659", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -554,7 +554,6 @@ pub struct ExtCtxt<'a> {\n     pub use_std: bool,\n \n     pub mod_path: Vec<ast::Ident> ,\n-    pub trace_mac: bool,\n     pub exported_macros: Vec<ast::MacroDef>,\n \n     pub syntax_env: SyntaxEnv,\n@@ -572,7 +571,6 @@ impl<'a> ExtCtxt<'a> {\n             mod_path: Vec::new(),\n             ecfg: ecfg,\n             use_std: true,\n-            trace_mac: false,\n             exported_macros: Vec::new(),\n             syntax_env: env,\n             recursion_count: 0,\n@@ -732,10 +730,10 @@ impl<'a> ExtCtxt<'a> {\n         self.parse_sess.span_diagnostic.handler().bug(msg);\n     }\n     pub fn trace_macros(&self) -> bool {\n-        self.trace_mac\n+        self.ecfg.trace_mac\n     }\n     pub fn set_trace_macros(&mut self, x: bool) {\n-        self.trace_mac = x\n+        self.ecfg.trace_mac = x\n     }\n     pub fn ident_of(&self, st: &str) -> ast::Ident {\n         str_to_ident(st)"}, {"sha": "0945f8dd02103ac026565878beb0df6f24995a08", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -1406,6 +1406,7 @@ pub struct ExpansionConfig<'feat> {\n     pub crate_name: String,\n     pub features: Option<&'feat Features>,\n     pub recursion_limit: usize,\n+    pub trace_mac: bool,\n }\n \n macro_rules! feature_tests {\n@@ -1427,6 +1428,7 @@ impl<'feat> ExpansionConfig<'feat> {\n             crate_name: crate_name,\n             features: None,\n             recursion_limit: 64,\n+            trace_mac: false,\n         }\n     }\n "}, {"sha": "3338e394e0ef9005687b3a785cb9b0c95077dfd8", "filename": "src/test/run-make/trace-macros-flag/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2FMakefile?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -0,0 +1,9 @@\n+# This test verifies that \"-Z trace-macros\"  works as it should. The traditional\n+# \"hello world\" program provides a small example of this as not only println! is\n+# listed, but also print! (since println! expands to this)\n+\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) -Z trace-macros hello.rs > $(TMPDIR)/hello.out\n+\tdiff -u $(TMPDIR)/hello.out hello.trace"}, {"sha": "42d3d4c799df89a3cb816a84f6d814351c2863bf", "filename": "src/test/run-make/trace-macros-flag/hello.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.rs?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    println!(\"Hello, World!\");\n+}"}, {"sha": "cf733339eadf63ace80afc5d60b768188bf265ed", "filename": "src/test/run-make/trace-macros-flag/hello.trace", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/373463615a5841a7041ea1c937d0b00872206971/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.trace", "raw_url": "https://github.com/rust-lang/rust/raw/373463615a5841a7041ea1c937d0b00872206971/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.trace", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.trace?ref=373463615a5841a7041ea1c937d0b00872206971", "patch": "@@ -0,0 +1,2 @@\n+println! { \"Hello, World!\" }\n+print! { concat ! ( \"Hello, World!\" , \"\\n\" ) }"}]}