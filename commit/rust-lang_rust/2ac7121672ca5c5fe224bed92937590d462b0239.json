{"sha": "2ac7121672ca5c5fe224bed92937590d462b0239", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYzcxMjE2NzJjYTVjNWZlMjI0YmVkOTI5Mzc1OTBkNDYyYjAyMzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-13T18:29:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-13T18:29:22Z"}, "message": "Auto merge of #38353 - alexcrichton:fix-nightiles, r=alexcrichton\n\nAnother round of nightly fixes\n\nAnother three separate errors happened last night:\n\n* Race condition in save analysis failed the OX build\n* Packaging docs that don't exist failed the Android build\n* Packaging save-analysis that doesn't exist failed the cross host builds\n\nIt just never ends...", "tree": {"sha": "63e71a2859587d607ace69186ec29d90d0d137e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63e71a2859587d607ace69186ec29d90d0d137e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ac7121672ca5c5fe224bed92937590d462b0239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac7121672ca5c5fe224bed92937590d462b0239", "html_url": "https://github.com/rust-lang/rust/commit/2ac7121672ca5c5fe224bed92937590d462b0239", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ac7121672ca5c5fe224bed92937590d462b0239/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f78b420b06104d889240e7e02a4513c8c548a19", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f78b420b06104d889240e7e02a4513c8c548a19", "html_url": "https://github.com/rust-lang/rust/commit/7f78b420b06104d889240e7e02a4513c8c548a19"}, {"sha": "194c3fb1544e8bf6300989dd20f7254bad237c76", "url": "https://api.github.com/repos/rust-lang/rust/commits/194c3fb1544e8bf6300989dd20f7254bad237c76", "html_url": "https://github.com/rust-lang/rust/commit/194c3fb1544e8bf6300989dd20f7254bad237c76"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "60352cc894e9970b0ec253079f91cdd979f72892", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2ac7121672ca5c5fe224bed92937590d462b0239/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac7121672ca5c5fe224bed92937590d462b0239/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=2ac7121672ca5c5fe224bed92937590d462b0239", "patch": "@@ -48,6 +48,11 @@ pub fn tmpdir(build: &Build) -> PathBuf {\n /// Slurps up documentation from the `stage`'s `host`.\n pub fn docs(build: &Build, stage: u32, host: &str) {\n     println!(\"Dist docs stage{} ({})\", stage, host);\n+    if !build.config.docs {\n+        println!(\"\\tskipping - docs disabled\");\n+        return\n+    }\n+\n     let name = format!(\"rust-docs-{}\", package_vers(build));\n     let image = tmpdir(build).join(format!(\"{}-{}-image\", name, name));\n     let _ = fs::remove_dir_all(&image);\n@@ -260,6 +265,14 @@ pub fn debugger_scripts(build: &Build,\n pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n     println!(\"Dist std stage{} ({} -> {})\", compiler.stage, compiler.host,\n              target);\n+\n+    // The only true set of target libraries came from the build triple, so\n+    // let's reduce redundant work by only producing archives from that host.\n+    if compiler.host != build.config.build {\n+        println!(\"\\tskipping, not a build host\");\n+        return\n+    }\n+\n     let name = format!(\"rust-std-{}\", package_vers(build));\n     let image = tmpdir(build).join(format!(\"{}-{}-image\", name, target));\n     let _ = fs::remove_dir_all(&image);\n@@ -294,10 +307,15 @@ pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n     println!(\"Dist analysis\");\n \n     if build.config.channel != \"nightly\" {\n-        println!(\"Skipping dist-analysis - not on nightly channel\");\n+        println!(\"\\tskipping - not on nightly channel\");\n         return;\n     }\n+    if compiler.host != build.config.build {\n+        println!(\"\\tskipping - not a build host\");\n+        return\n+    }\n     if compiler.stage != 2 {\n+        println!(\"\\tskipping - not stage2\");\n         return\n     }\n "}, {"sha": "862345fd46eb6ce743ab50bfa07f398b993adaeb", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ac7121672ca5c5fe224bed92937590d462b0239/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac7121672ca5c5fe224bed92937590d462b0239/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=2ac7121672ca5c5fe224bed92937590d462b0239", "patch": "@@ -48,7 +48,7 @@ use rustc::session::config::CrateType::CrateTypeExecutable;\n use rustc::ty::{self, TyCtxt};\n \n use std::env;\n-use std::fs::{self, File};\n+use std::fs::File;\n use std::path::{Path, PathBuf};\n \n use syntax::ast::{self, NodeId, PatKind, Attribute, CRATE_NODE_ID};\n@@ -832,7 +832,7 @@ pub fn process_crate<'l, 'tcx>(tcx: TyCtxt<'l, 'tcx, 'tcx>,\n         },\n     };\n \n-    if let Err(e) = fs::create_dir_all(&root_path) {\n+    if let Err(e) = rustc::util::fs::create_dir_racy(&root_path) {\n         tcx.sess.err(&format!(\"Could not create directory {}: {}\",\n                               root_path.display(),\n                               e));"}]}