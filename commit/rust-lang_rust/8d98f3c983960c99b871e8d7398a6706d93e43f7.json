{"sha": "8d98f3c983960c99b871e8d7398a6706d93e43f7", "node_id": "C_kwDOAAsO6NoAKDhkOThmM2M5ODM5NjBjOTliODcxZThkNzM5OGE2NzA2ZDkzZTQzZjc", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-03-23T18:18:12Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-03-23T18:18:12Z"}, "message": "Don't try to resolve methods on unknown types\n\nFixes #10454, and some type mismatches.", "tree": {"sha": "7e2c2dfab302e90da98c0b10d63f65557519a69a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e2c2dfab302e90da98c0b10d63f65557519a69a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d98f3c983960c99b871e8d7398a6706d93e43f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d98f3c983960c99b871e8d7398a6706d93e43f7", "html_url": "https://github.com/rust-lang/rust/commit/8d98f3c983960c99b871e8d7398a6706d93e43f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d98f3c983960c99b871e8d7398a6706d93e43f7/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2cd18765abb681cacc2a57aebde13fa1dc32c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2cd18765abb681cacc2a57aebde13fa1dc32c1", "html_url": "https://github.com/rust-lang/rust/commit/5d2cd18765abb681cacc2a57aebde13fa1dc32c1"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "22cb856535e457a2efe189d988c476c14fc75496", "filename": "crates/hir_ty/src/autoderef.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8d98f3c983960c99b871e8d7398a6706d93e43f7/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d98f3c983960c99b871e8d7398a6706d93e43f7/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs?ref=8d98f3c983960c99b871e8d7398a6706d93e43f7", "patch": "@@ -108,8 +108,13 @@ fn builtin_deref(ty: &Ty) -> Option<&Ty> {\n }\n \n fn deref_by_trait(table: &mut InferenceTable, ty: Ty) -> Option<Ty> {\n-    let db = table.db;\n     let _p = profile::span(\"deref_by_trait\");\n+    if table.resolve_ty_shallow(&ty).inference_var(Interner).is_some() {\n+        // don't try to deref unknown variables\n+        return None;\n+    }\n+\n+    let db = table.db;\n     let deref_trait = db\n         .lang_item(table.trait_env.krate, SmolStr::new_inline(\"deref\"))\n         .and_then(|l| l.as_trait())?;"}, {"sha": "768772d5c3434f2f5b5a57ea874411432568e1f6", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d98f3c983960c99b871e8d7398a6706d93e43f7/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d98f3c983960c99b871e8d7398a6706d93e43f7/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=8d98f3c983960c99b871e8d7398a6706d93e43f7", "patch": "@@ -681,6 +681,11 @@ fn iterate_method_candidates_with_autoref(\n     name: Option<&Name>,\n     mut callback: &mut dyn FnMut(ReceiverAdjustments, AssocItemId) -> ControlFlow<()>,\n ) -> ControlFlow<()> {\n+    if receiver_ty.value.is_general_var(Interner, &receiver_ty.binders) {\n+        // don't try to resolve methods on unknown types\n+        return ControlFlow::Continue(());\n+    }\n+\n     iterate_method_candidates_by_receiver(\n         receiver_ty,\n         first_adjustment.clone(),"}, {"sha": "95957f6235877e3b4b68f9ac84be23d69aafafce", "filename": "crates/hir_ty/src/tests/method_resolution.rs", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8d98f3c983960c99b871e8d7398a6706d93e43f7/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d98f3c983960c99b871e8d7398a6706d93e43f7/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=8d98f3c983960c99b871e8d7398a6706d93e43f7", "patch": "@@ -2,7 +2,7 @@ use expect_test::expect;\n \n use crate::tests::check;\n \n-use super::{check_infer, check_types};\n+use super::{check_infer, check_no_mismatches, check_types};\n \n #[test]\n fn infer_slice_method() {\n@@ -1697,3 +1697,56 @@ fn test() {\n \"#,\n     );\n }\n+\n+#[test]\n+fn bad_inferred_reference_1() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: sized\n+pub trait Into<T>: Sized {\n+    fn into(self) -> T;\n+}\n+impl<T> Into<T> for T {\n+    fn into(self) -> T { self }\n+}\n+\n+trait ExactSizeIterator {\n+    fn len(&self) -> usize;\n+}\n+\n+pub struct Foo;\n+impl Foo {\n+    fn len(&self) -> usize { 0 }\n+}\n+\n+pub fn test(generic_args: impl Into<Foo>) {\n+    let generic_args = generic_args.into();\n+    generic_args.len();\n+    let _: Foo = generic_args;\n+}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn bad_inferred_reference_2() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: deref\n+trait ExactSizeIterator {\n+    fn len(&self) -> usize;\n+}\n+\n+pub struct Foo;\n+impl Foo {\n+    fn len(&self) -> usize { 0 }\n+}\n+\n+pub fn test() {\n+    let generic_args;\n+    generic_args.len();\n+    let _: Foo = generic_args;\n+}\n+\"#,\n+    );\n+}"}]}