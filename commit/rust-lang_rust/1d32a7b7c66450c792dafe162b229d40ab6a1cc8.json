{"sha": "1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "node_id": "C_kwDOAAsO6NoAKDFkMzJhN2I3YzY2NDUwYzc5MmRhZmUxNjJiMjI5ZDQwYWI2YTFjYzg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-06T22:35:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-06T22:35:37Z"}, "message": "Auto merge of #14094 - HKalbasi:layout, r=flodiebold\n\nReuse fetching target data layout from rustc function\n\nfix https://github.com/rust-lang/rust-analyzer/pull/14087?notification_referrer_id=NT_kwDOArGpCLM1NTEyMDQ5MjU3OjQ1MTk3NTc2#discussion_r1097850915", "tree": {"sha": "f4b89b3716314850ad630df6b96c5aecf34633ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4b89b3716314850ad630df6b96c5aecf34633ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "html_url": "https://github.com/rust-lang/rust/commit/1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9ce02ce63cb6682c6636374f340c28d654547c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ce02ce63cb6682c6636374f340c28d654547c2", "html_url": "https://github.com/rust-lang/rust/commit/e9ce02ce63cb6682c6636374f340c28d654547c2"}, {"sha": "40cf8b45ac1d51c4d0d0d984ce1a0424e05719a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/40cf8b45ac1d51c4d0d0d984ce1a0424e05719a8", "html_url": "https://github.com/rust-lang/rust/commit/40cf8b45ac1d51c4d0d0d984ce1a0424e05719a8"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "9cc34a876dc703de7857e8364c6ef2eada4ee53f", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "patch": "@@ -583,6 +583,7 @@ dependencies = [\n  \"limit\",\n  \"once_cell\",\n  \"profile\",\n+ \"project-model\",\n  \"rustc-hash\",\n  \"scoped-tls\",\n  \"smallvec\","}, {"sha": "490bbe1e7240de86f4fdbcd799f2684520a2f4e3", "filename": "crates/hir-ty/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fhir-ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fhir-ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2FCargo.toml?ref=1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "patch": "@@ -48,6 +48,7 @@ tracing-subscriber = { version = \"0.3.16\", default-features = false, features =\n     \"registry\",\n ] }\n tracing-tree = \"0.2.1\"\n+project-model = { path = \"../project-model\" }\n \n # local deps\n test-utils.workspace = true"}, {"sha": "067bdc960dadfe18d38a8707ed8db3b831186b9d", "filename": "crates/hir-ty/src/layout/tests.rs", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fhir-ty%2Fsrc%2Flayout%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fhir-ty%2Fsrc%2Flayout%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flayout%2Ftests.rs?ref=1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "patch": "@@ -1,3 +1,5 @@\n+use std::collections::HashMap;\n+\n use base_db::fixture::WithFixture;\n use chalk_ir::{AdtId, TyKind};\n use hir_def::{\n@@ -9,16 +11,12 @@ use crate::{db::HirDatabase, test_db::TestDB, Interner, Substitution};\n \n use super::layout_of_ty;\n \n-fn eval_goal(ra_fixture: &str, minicore: &str) -> Result<Layout, LayoutError> {\n-    // using unstable cargo features failed, fall back to using plain rustc\n-    let mut cmd = std::process::Command::new(\"rustc\");\n-    cmd.args([\"-Z\", \"unstable-options\", \"--print\", \"target-spec-json\"]).env(\"RUSTC_BOOTSTRAP\", \"1\");\n-    let output = cmd.output().unwrap();\n-    assert!(output.status.success(), \"{}\", output.status);\n-    let stdout = String::from_utf8(output.stdout).unwrap();\n-    let target_data_layout =\n-        stdout.split_once(r#\"\"data-layout\": \"\"#).unwrap().1.split_once('\"').unwrap().0.to_owned();\n+fn current_machine_data_layout() -> String {\n+    project_model::target_data_layout::get(None, None, &HashMap::default()).unwrap()\n+}\n \n+fn eval_goal(ra_fixture: &str, minicore: &str) -> Result<Layout, LayoutError> {\n+    let target_data_layout = current_machine_data_layout();\n     let ra_fixture = format!(\n         \"{minicore}//- /main.rs crate:test target_data_layout:{target_data_layout}\\n{ra_fixture}\",\n     );\n@@ -47,15 +45,7 @@ fn eval_goal(ra_fixture: &str, minicore: &str) -> Result<Layout, LayoutError> {\n \n /// A version of `eval_goal` for types that can not be expressed in ADTs, like closures and `impl Trait`\n fn eval_expr(ra_fixture: &str, minicore: &str) -> Result<Layout, LayoutError> {\n-    // using unstable cargo features failed, fall back to using plain rustc\n-    let mut cmd = std::process::Command::new(\"rustc\");\n-    cmd.args([\"-Z\", \"unstable-options\", \"--print\", \"target-spec-json\"]).env(\"RUSTC_BOOTSTRAP\", \"1\");\n-    let output = cmd.output().unwrap();\n-    assert!(output.status.success(), \"{}\", output.status);\n-    let stdout = String::from_utf8(output.stdout).unwrap();\n-    let target_data_layout =\n-        stdout.split_once(r#\"\"data-layout\": \"\"#).unwrap().1.split_once('\"').unwrap().0.to_owned();\n-\n+    let target_data_layout = current_machine_data_layout();\n     let ra_fixture = format!(\n         \"{minicore}//- /main.rs crate:test target_data_layout:{target_data_layout}\\nfn main(){{let goal = {{{ra_fixture}}};}}\",\n     );"}, {"sha": "9b6a71db811454d2084b9a1b14fd88a10cbc16e4", "filename": "crates/project-model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fproject-model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fproject-model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Flib.rs?ref=1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "patch": "@@ -25,7 +25,7 @@ mod sysroot;\n mod workspace;\n mod rustc_cfg;\n mod build_scripts;\n-mod target_data_layout;\n+pub mod target_data_layout;\n \n #[cfg(test)]\n mod tests;"}, {"sha": "42c06ad0ed3717ba1388d721f8b806080e5f1ab7", "filename": "crates/project-model/src/target_data_layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fproject-model%2Fsrc%2Ftarget_data_layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d32a7b7c66450c792dafe162b229d40ab6a1cc8/crates%2Fproject-model%2Fsrc%2Ftarget_data_layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftarget_data_layout.rs?ref=1d32a7b7c66450c792dafe162b229d40ab6a1cc8", "patch": "@@ -6,7 +6,7 @@ use rustc_hash::FxHashMap;\n \n use crate::{utf8_stdout, ManifestPath};\n \n-pub(super) fn get(\n+pub fn get(\n     cargo_toml: Option<&ManifestPath>,\n     target: Option<&str>,\n     extra_env: &FxHashMap<String, String>,"}]}