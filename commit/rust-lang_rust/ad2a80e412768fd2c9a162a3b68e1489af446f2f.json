{"sha": "ad2a80e412768fd2c9a162a3b68e1489af446f2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMmE4MGU0MTI3NjhmZDJjOWExNjJhM2I2OGUxNDg5YWY0NDZmMmY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-30T09:34:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-30T09:34:25Z"}, "message": "Rollup merge of #83571 - a1phyr:feature_const_slice_first_last, r=dtolnay\n\nConstantify some slice methods\n\nTracking issue: #83570\n\nThis PR constantifies the following functions under feature `const_slice_first_last`:\n- `slice::first`\n- `slice::split_first`\n- `slice::last`\n- `slice::split_last`\n\nBlocking on `#![feature(const_mut_refs)]`:\n- `slice::first_mut`\n- `slice::split_first_mut`\n- `slice::last_mut`\n- `slice::split_last_mut`", "tree": {"sha": "40bc3f51aaddfdc288bf1cd0a063e8d063890fea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40bc3f51aaddfdc288bf1cd0a063e8d063890fea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad2a80e412768fd2c9a162a3b68e1489af446f2f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgYvChCRBK7hj4Ov3rIwAAdHIIAD7eyUFKrL1BMQ7RhiaBsPD9\n1wsYOagdPqQ/15NsYn+NOm74aewxtX/kd2/PORKAlQMugWc1/Pt+EunMjhcO78e7\n4cP1n3M8qz7/ZYw9r+WTatsc9QsJA9Xe8I6CLEbUdMIAFypTV29F+e3GZ40BmXf9\nfu8fYMpNU8zJeRWhb/mfoehqt9eWk6bZ0RsOHAnxsA71ljYbCkU6a9LtVCXXdFl7\nX+P+8vc9zkTT961gb4N42ZvOJaPF9IdwjQBwJ00+0U8OIXAacig+EFWVMZJKwh6O\njlNtghwQllrN4FiYislV21l4MkBSDj3W2pVr4QVTupSvsun/YAW7V4JsWhFrUeE=\n=ez3e\n-----END PGP SIGNATURE-----\n", "payload": "tree 40bc3f51aaddfdc288bf1cd0a063e8d063890fea\nparent 9ab5f7db30910e72675f2e348f352e0e23edb69c\nparent 6327e46d8c21d54734eb5eb44604be487a8e6bdb\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617096865 +0200\ncommitter GitHub <noreply@github.com> 1617096865 +0200\n\nRollup merge of #83571 - a1phyr:feature_const_slice_first_last, r=dtolnay\n\nConstantify some slice methods\n\nTracking issue: #83570\n\nThis PR constantifies the following functions under feature `const_slice_first_last`:\n- `slice::first`\n- `slice::split_first`\n- `slice::last`\n- `slice::split_last`\n\nBlocking on `#![feature(const_mut_refs)]`:\n- `slice::first_mut`\n- `slice::split_first_mut`\n- `slice::last_mut`\n- `slice::split_last_mut`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2a80e412768fd2c9a162a3b68e1489af446f2f", "html_url": "https://github.com/rust-lang/rust/commit/ad2a80e412768fd2c9a162a3b68e1489af446f2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad2a80e412768fd2c9a162a3b68e1489af446f2f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ab5f7db30910e72675f2e348f352e0e23edb69c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab5f7db30910e72675f2e348f352e0e23edb69c", "html_url": "https://github.com/rust-lang/rust/commit/9ab5f7db30910e72675f2e348f352e0e23edb69c"}, {"sha": "6327e46d8c21d54734eb5eb44604be487a8e6bdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6327e46d8c21d54734eb5eb44604be487a8e6bdb", "html_url": "https://github.com/rust-lang/rust/commit/6327e46d8c21d54734eb5eb44604be487a8e6bdb"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "e4b1bffcfe01089ebd3fc789d10d59263dc13486", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ad2a80e412768fd2c9a162a3b68e1489af446f2f/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad2a80e412768fd2c9a162a3b68e1489af446f2f/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=ad2a80e412768fd2c9a162a3b68e1489af446f2f", "patch": "@@ -148,8 +148,9 @@ impl<T> [T] {\n     /// assert_eq!(None, w.first());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn first(&self) -> Option<&T> {\n+    pub const fn first(&self) -> Option<&T> {\n         if let [first, ..] = self { Some(first) } else { None }\n     }\n \n@@ -166,8 +167,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[5, 1, 2]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn first_mut(&mut self) -> Option<&mut T> {\n+    pub const fn first_mut(&mut self) -> Option<&mut T> {\n         if let [first, ..] = self { Some(first) } else { None }\n     }\n \n@@ -184,8 +186,9 @@ impl<T> [T] {\n     /// }\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_first(&self) -> Option<(&T, &[T])> {\n+    pub const fn split_first(&self) -> Option<(&T, &[T])> {\n         if let [first, tail @ ..] = self { Some((first, tail)) } else { None }\n     }\n \n@@ -204,8 +207,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[3, 4, 5]);\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_first_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n+    pub const fn split_first_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n         if let [first, tail @ ..] = self { Some((first, tail)) } else { None }\n     }\n \n@@ -222,8 +226,9 @@ impl<T> [T] {\n     /// }\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_last(&self) -> Option<(&T, &[T])> {\n+    pub const fn split_last(&self) -> Option<(&T, &[T])> {\n         if let [init @ .., last] = self { Some((last, init)) } else { None }\n     }\n \n@@ -242,8 +247,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[4, 5, 3]);\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_last_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n+    pub const fn split_last_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n         if let [init @ .., last] = self { Some((last, init)) } else { None }\n     }\n \n@@ -259,8 +265,9 @@ impl<T> [T] {\n     /// assert_eq!(None, w.last());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn last(&self) -> Option<&T> {\n+    pub const fn last(&self) -> Option<&T> {\n         if let [.., last] = self { Some(last) } else { None }\n     }\n \n@@ -277,8 +284,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[0, 1, 10]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn last_mut(&mut self) -> Option<&mut T> {\n+    pub const fn last_mut(&mut self) -> Option<&mut T> {\n         if let [.., last] = self { Some(last) } else { None }\n     }\n "}]}