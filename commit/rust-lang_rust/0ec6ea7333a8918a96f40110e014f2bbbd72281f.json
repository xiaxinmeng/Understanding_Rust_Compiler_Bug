{"sha": "0ec6ea7333a8918a96f40110e014f2bbbd72281f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYzZlYTczMzNhODkxOGE5NmY0MDExMGUwMTRmMmJiYmQ3MjI4MWY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-06T16:45:23Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-10T21:12:08Z"}, "message": "resolve: Fix access to extern and stdlib prelude from opaque macros\n\nOk, it's hard to explain what happens, but identifier's hygienic contexts need to be \"adjusted\" to modules/scopes before they are resolved in them.\nTo be resolved in all kinds on preludes the identifier needs to be adjusted to the root expansion (aka \"no expansion\").\n\nPreviously this was done for the `macro m() { ::my_crate::foo }` case, but forgotten for all other cases.", "tree": {"sha": "f74a3a467a2314be5d1d10237289a4f19d3612d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f74a3a467a2314be5d1d10237289a4f19d3612d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ec6ea7333a8918a96f40110e014f2bbbd72281f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec6ea7333a8918a96f40110e014f2bbbd72281f", "html_url": "https://github.com/rust-lang/rust/commit/0ec6ea7333a8918a96f40110e014f2bbbd72281f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ec6ea7333a8918a96f40110e014f2bbbd72281f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f92394209455bf14594f279249c2e592809180cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f92394209455bf14594f279249c2e592809180cd", "html_url": "https://github.com/rust-lang/rust/commit/f92394209455bf14594f279249c2e592809180cd"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "1216a083700d93839a68bb439aa5ddd7cb8f01cd", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0ec6ea7333a8918a96f40110e014f2bbbd72281f", "patch": "@@ -2247,6 +2247,7 @@ impl<'a> Resolver<'a> {\n         }\n \n         if !module.no_implicit_prelude {\n+            ident.span.adjust(Mark::root());\n             if ns == TypeNS {\n                 if let Some(binding) = self.extern_prelude_get(ident, !record_used) {\n                     return Some(LexicalScopeBinding::Item(binding));"}, {"sha": "7ad54d572f4e8b22a738bc8e2c7d85307e4fb0d2", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=0ec6ea7333a8918a96f40110e014f2bbbd72281f", "patch": "@@ -856,6 +856,7 @@ impl<'a> Resolver<'a> {\n                     match self.hygienic_lexical_parent(module, &mut ident.span) {\n                         Some(parent_module) => WhereToResolve::Module(parent_module),\n                         None => {\n+                            ident.span.adjust(Mark::root());\n                             use_prelude = !module.no_implicit_prelude;\n                             match ns {\n                                 TypeNS => WhereToResolve::ExternPrelude,"}, {"sha": "81b0b7faa5ba7795c00c75919c660753c880a902", "filename": "src/test/ui/hygiene/auxiliary/stdlib-prelude.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Ftest%2Fui%2Fhygiene%2Fauxiliary%2Fstdlib-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Ftest%2Fui%2Fhygiene%2Fauxiliary%2Fstdlib-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fauxiliary%2Fstdlib-prelude.rs?ref=0ec6ea7333a8918a96f40110e014f2bbbd72281f", "patch": "@@ -0,0 +1,3 @@\n+#![feature(decl_macro)]\n+\n+pub macro stdlib_macro() {}"}, {"sha": "c8c5c72bf95c43d056f38de7c63c6190f0065919", "filename": "src/test/ui/hygiene/stdlib-prelude-from-opaque-early.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Ftest%2Fui%2Fhygiene%2Fstdlib-prelude-from-opaque-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Ftest%2Fui%2Fhygiene%2Fstdlib-prelude-from-opaque-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fstdlib-prelude-from-opaque-early.rs?ref=0ec6ea7333a8918a96f40110e014f2bbbd72281f", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+// aux-build:stdlib-prelude.rs\n+\n+#![feature(decl_macro)]\n+#![feature(prelude_import)]\n+\n+extern crate stdlib_prelude;\n+\n+#[prelude_import]\n+use stdlib_prelude::*;\n+\n+macro mac() {\n+    mod m {\n+        use std::mem; // OK (extern prelude)\n+        stdlib_macro!(); // OK (stdlib prelude)\n+    }\n+}\n+\n+mac!();\n+\n+fn main() {}"}, {"sha": "cf65de2bc2395211486fd9af6de1d0d1d9f4ee81", "filename": "src/test/ui/hygiene/stdlib-prelude-from-opaque-late.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Ftest%2Fui%2Fhygiene%2Fstdlib-prelude-from-opaque-late.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec6ea7333a8918a96f40110e014f2bbbd72281f/src%2Ftest%2Fui%2Fhygiene%2Fstdlib-prelude-from-opaque-late.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fstdlib-prelude-from-opaque-late.rs?ref=0ec6ea7333a8918a96f40110e014f2bbbd72281f", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+\n+#![feature(decl_macro)]\n+\n+macro mac() {\n+    mod m {\n+        fn f() {\n+            std::mem::drop(0); // OK (extern prelude)\n+            drop(0); // OK (stdlib prelude)\n+        }\n+    }\n+}\n+\n+mac!();\n+\n+fn main() {}"}]}