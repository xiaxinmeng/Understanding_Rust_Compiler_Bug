{"sha": "3efe5c3426a311b6d617f9718b82e9a598dfa06d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZmU1YzM0MjZhMzExYjZkNjE3Zjk3MThiODJlOWE1OThkZmEwNmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-15T19:49:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-15T19:49:00Z"}, "message": "internal: add future to minicore", "tree": {"sha": "261a0436ebf1192644ce398144d005e767326fbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/261a0436ebf1192644ce398144d005e767326fbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3efe5c3426a311b6d617f9718b82e9a598dfa06d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3efe5c3426a311b6d617f9718b82e9a598dfa06d", "html_url": "https://github.com/rust-lang/rust/commit/3efe5c3426a311b6d617f9718b82e9a598dfa06d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3efe5c3426a311b6d617f9718b82e9a598dfa06d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eef66a2ed9b02962511e38c620efb23e2d65b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eef66a2ed9b02962511e38c620efb23e2d65b00", "html_url": "https://github.com/rust-lang/rust/commit/2eef66a2ed9b02962511e38c620efb23e2d65b00"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "33689e08192b62ddf8fb8803201dc3981da0b62b", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3efe5c3426a311b6d617f9718b82e9a598dfa06d/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3efe5c3426a311b6d617f9718b82e9a598dfa06d/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=3efe5c3426a311b6d617f9718b82e9a598dfa06d", "patch": "@@ -6,10 +6,10 @@ use super::{check_infer, check_infer_with_mismatches, check_types};\n fn infer_await() {\n     check_types(\n         r#\"\n-//- /main.rs crate:main deps:core\n+//- minicore: future\n struct IntFuture;\n \n-impl Future for IntFuture {\n+impl core::future::Future for IntFuture {\n     type Output = u64;\n }\n \n@@ -18,16 +18,6 @@ fn test() {\n     let v = r.await;\n     v;\n } //^ u64\n-\n-//- /core.rs crate:core\n-pub mod prelude {\n-    pub mod rust_2018 {\n-        #[lang = \"future_trait\"]\n-        pub trait Future {\n-            type Output;\n-        }\n-    }\n-}\n \"#,\n     );\n }"}, {"sha": "127d06e59715b57f88e1a4a709c911388efdb4d8", "filename": "crates/test_utils/src/minicore.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3efe5c3426a311b6d617f9718b82e9a598dfa06d/crates%2Ftest_utils%2Fsrc%2Fminicore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3efe5c3426a311b6d617f9718b82e9a598dfa06d/crates%2Ftest_utils%2Fsrc%2Fminicore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Fminicore.rs?ref=3efe5c3426a311b6d617f9718b82e9a598dfa06d", "patch": "@@ -14,6 +14,8 @@\n //!     unsize: sized\n //!     deref: sized\n //!     coerce_unsized: unsize\n+//!     pin:\n+//!     future: pin\n \n pub mod marker {\n     // region:sized\n@@ -113,6 +115,41 @@ pub mod slice {\n }\n // endregion:slice\n \n+// region:pin\n+pub mod pin {\n+    #[lang = \"pin\"]\n+    #[fundamental]\n+    pub struct Pin<P> {\n+        pointer: P,\n+    }\n+}\n+// endregion:pin\n+\n+// region:future\n+pub mod future {\n+    use crate::{pin::Pin, task::{Poll, Context}};\n+\n+    #[lang = \"future_trait\"]\n+    pub trait Future {\n+        type Output;\n+        #[lang = \"poll\"]\n+        fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output>;\n+    }\n+}\n+pub mod task {\n+    pub enum Poll<T> {\n+        #[lang = \"Ready\"]\n+        Ready(T),\n+        #[lang = \"Pending\"]\n+        Pending,\n+    }\n+\n+    pub struct Context<'a> {\n+        waker: &'a (),\n+    }\n+}\n+// endregion:future\n+\n pub mod prelude {\n     pub mod v1 {\n         pub use crate::marker::Sized; // :sized"}]}