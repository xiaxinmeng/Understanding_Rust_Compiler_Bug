{"sha": "f3ab290bd4d20b2c1531980eb87a32981efb7826", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYWIyOTBiZDRkMjBiMmMxNTMxOTgwZWI4N2EzMjk4MWVmYjc4MjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-21T20:26:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-21T20:26:25Z"}, "message": "Merge #3264\n\n3264: Tidy up documentation. r=flodiebold a=ablakey\n\nThought I'd tidy up the docs while reading through them. Hope you don't mind!\r\n\r\nFor the most part, I just made the formatting consistent through-out and added a few words here and there. Also updated the language server install graphic.\n\nCo-authored-by: Andrew Blakey <ablakey@locusrobotics.com>", "tree": {"sha": "2365ac1fb30cd43c5445e17a60568209c1ebf061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2365ac1fb30cd43c5445e17a60568209c1ebf061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3ab290bd4d20b2c1531980eb87a32981efb7826", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeUDzxCRBK7hj4Ov3rIwAAdHIIAGgLMmeVdakvbqX8jav9BgIC\nNFReUfHNyi6r6ySE927ga2hu3mQ14ToNy201/3vxtdCXsIvPMN2fRTtZygMZjd1t\ndEhTBARKEfWTT0Fat1bEW4Kdl8Nf27zBlfWXqNQxoshp+gah3C0RdRbEVWMZoZ/u\ncNcweB8WUTkle8fpgzzb+oGK+dQRygLPC2wGh5HL17Fkla8JwnC+/lzMKL2/zalY\nYlTrUKAhk7W2UHwgNp6LGtbO0302fUscfjWj4vRa5UU9oEkNFVKTAwXRYRKL93Wj\nUar5PNCTByn083J68R8Ills0XcWfR2mAVFJtvPiMKKcEgkqAinUmhjj3c5DF6To=\n=kGrg\n-----END PGP SIGNATURE-----\n", "payload": "tree 2365ac1fb30cd43c5445e17a60568209c1ebf061\nparent e3037c2631ecb55996b676ce2c18b9df1858abaa\nparent cda6d2b25c3685f7d698994ad8418d32420c463d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582316785 +0000\ncommitter GitHub <noreply@github.com> 1582316785 +0000\n\nMerge #3264\n\n3264: Tidy up documentation. r=flodiebold a=ablakey\n\nThought I'd tidy up the docs while reading through them. Hope you don't mind!\r\n\r\nFor the most part, I just made the formatting consistent through-out and added a few words here and there. Also updated the language server install graphic.\n\nCo-authored-by: Andrew Blakey <ablakey@locusrobotics.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ab290bd4d20b2c1531980eb87a32981efb7826", "html_url": "https://github.com/rust-lang/rust/commit/f3ab290bd4d20b2c1531980eb87a32981efb7826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3ab290bd4d20b2c1531980eb87a32981efb7826/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3037c2631ecb55996b676ce2c18b9df1858abaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3037c2631ecb55996b676ce2c18b9df1858abaa", "html_url": "https://github.com/rust-lang/rust/commit/e3037c2631ecb55996b676ce2c18b9df1858abaa"}, {"sha": "cda6d2b25c3685f7d698994ad8418d32420c463d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda6d2b25c3685f7d698994ad8418d32420c463d", "html_url": "https://github.com/rust-lang/rust/commit/cda6d2b25c3685f7d698994ad8418d32420c463d"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "f705e511550fcf3d05ed9069e49c823dc5fc8ddf", "filename": "docs/user/features.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f3ab290bd4d20b2c1531980eb87a32981efb7826/docs%2Fuser%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/f3ab290bd4d20b2c1531980eb87a32981efb7826/docs%2Fuser%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Ffeatures.md?ref=f3ab290bd4d20b2c1531980eb87a32981efb7826", "patch": "@@ -1,10 +1,10 @@\n-This documents is an index of features that rust-analyzer language server\n+This document is an index of features that the rust-analyzer language server\n provides. Shortcuts are for the default VS Code layout. If there's no shortcut,\n you can use <kbd>Ctrl+Shift+P</kbd> to search for the corresponding action.\n \n ### Workspace Symbol <kbd>ctrl+t</kbd>\n \n-Uses fuzzy-search to find types, modules and function by name across your\n+Uses fuzzy-search to find types, modules and functions by name across your\n project and dependencies. This is **the** most useful feature, which improves code\n navigation tremendously. It mostly works on top of the built-in LSP\n functionality, however `#` and `*` symbols can be used to narrow down the\n@@ -13,7 +13,7 @@ search. Specifically,\n - `Foo` searches for `Foo` type in the current workspace\n - `foo#` searches for `foo` function in the current workspace\n - `Foo*` searches for `Foo` type among dependencies, including `stdlib`\n-- `foo#*` searches for `foo` function among dependencies.\n+- `foo#*` searches for `foo` function among dependencies\n \n That is, `#` switches from \"types\" to all symbols, `*` switches from the current\n workspace to dependencies.\n@@ -30,7 +30,7 @@ Provides a tree of the symbols defined in the file. Can be used to\n \n Some features trigger on typing certain characters:\n \n-- typing `let =` tries to smartly add `;` if `=` is followed by an existing expression.\n+- typing `let =` tries to smartly add `;` if `=` is followed by an existing expression\n - Enter inside comments automatically inserts `///`\n - typing `.` in a chain method call auto-indents\n \n@@ -58,7 +58,7 @@ Navigates to the type of an identifier.\n \n #### Run\n \n-Shows popup suggesting to run a test/benchmark/binary **at the current cursor\n+Shows a popup suggesting to run a test/benchmark/binary **at the current cursor\n location**. Super useful for repeatedly running just a single test. Do bind this\n to a shortcut!\n \n@@ -87,23 +87,23 @@ Shows the full macro expansion of the macro at current cursor.\n \n #### Status\n \n-Shows internal statistic about memory usage of rust-analyzer\n+Shows internal statistic about memory usage of rust-analyzer.\n \n #### Show RA Version\n \n-Show current rust-analyzer version\n+Show current rust-analyzer version.\n \n-#### Run garbage collection\n+#### Run Garbage Collection\n \n-Manually triggers GC\n+Manually triggers GC.\n \n #### Start Cargo Watch\n \n Start `cargo watch` for live error highlighting. Will prompt to install if it's not already installed.\n \n #### Stop Cargo Watch\n \n-Stop `cargo watch`\n+Stop `cargo watch`.\n \n ### Assists (Code Actions)\n \n@@ -122,11 +122,11 @@ is placed at the appropriate position. Even though `if` is easy to type, you\n still want to complete it, to get ` { }` for free! `return` is inserted with a\n space or `;` depending on the return type of the function.\n \n-When completing a function call, `()` are automatically inserted. If function\n-takes arguments, cursor is positioned inside the parenthesis.\n+When completing a function call, `()` are automatically inserted. If a function\n+takes arguments, the cursor is positioned inside the parenthesis.\n \n There are postifx completions, which can be triggerd by typing something like\n-`foo().if`. The word after `.` determines postifx completion, possible variants are:\n+`foo().if`. The word after `.` determines postifx completion. Possible variants are:\n \n - `expr.if` -> `if expr {}`\n - `expr.match` -> `match expr {}`\n@@ -147,12 +147,12 @@ There also snippet completions:\n \n - `tfn` -> `#[test] fn f(){}`\n \n-### Code highlighting\n+### Code Highlighting\n \n Experimental feature to let rust-analyzer highlight Rust code instead of using the\n default highlighter.\n \n-#### Rainbow highlighting\n+#### Rainbow Highlighting\n \n Experimental feature that, given code highlighting using rust-analyzer is\n active, will pick unique colors for identifiers."}, {"sha": "f1386a8f9bbda01e22ca7983f4762c14d57c0d91", "filename": "docs/user/readme.adoc", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f3ab290bd4d20b2c1531980eb87a32981efb7826/docs%2Fuser%2Freadme.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/f3ab290bd4d20b2c1531980eb87a32981efb7826/docs%2Fuser%2Freadme.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Freadme.adoc?ref=f3ab290bd4d20b2c1531980eb87a32981efb7826", "patch": "@@ -6,10 +6,10 @@\n \n // Master copy of this document lives in the https://github.com/rust-analyzer/rust-analyzer repository\n \n-At it's core, rust-analyzer is a *library* for semantic analysis of the Rust code as it changes over time.\n+At its core, rust-analyzer is a *library* for semantic analysis of Rust code as it changes over time.\n This manual focuses on a specific usage of the library -- the implementation of\n https://microsoft.github.io/language-server-protocol/[Language Server Protocol].\n-LSP allows various code editors, like VS Code, Emacs or Vim, to implement semantic feature like completion or goto definition by talking to an external language server process.\n+LSP allows various code editors, like VS Code, Emacs or Vim, to implement semantic features like completion or goto definition by talking to an external language server process.\n \n To improve this document, send a pull request against\n https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/readme.adoc[this file].\n@@ -36,10 +36,9 @@ https://github.com/rust-analyzer/rust-analyzer/tree/master/editors/code[in tree]\n \n You can install the latest release of the plugin from\n https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer[the marketplace].\n-By default, the plugin will download the matching version of the server as well.\n+By default, the plugin will prompt you to download the matching version of the server as well:\n \n-// FIXME: update the image (its text has changed)\n-image::https://user-images.githubusercontent.com/36276403/74103174-a40df100-4b52-11ea-81f4-372c70797924.png[]\n+image::https://user-images.githubusercontent.com/9021944/75067008-17502500-54ba-11ea-835a-f92aac50e866.png[]\n \n The server binary is stored in `~/.config/Code/User/globalStorage/matklad.rust-analyzer`.\n \n@@ -60,7 +59,7 @@ $ cargo xtask install\n ----\n \n You'll need Cargo, nodejs and npm for this.\n-To make VS Code use the freshly build server, add this to the settings:\n+To make VS Code use the freshly built server, add this to the settings:\n \n [source,json]\n ----\n@@ -72,7 +71,7 @@ Note that installing via `xtask install` does not work for VS Code Remote, inste\n === Language Server Binary\n \n Other editors generally require `rust-analyzer` binary to be in `$PATH`.\n-You can download pre-build binary from\n+You can download the pre-built binary from\n https://github.com/rust-analyzer/rust-analyzer/releases[releases]\n page, or you can install it from source using the following command:\n \n@@ -85,7 +84,7 @@ $ cargo xtask install --server\n \n Emacs support is maintained https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-rust.el[upstream].\n \n-1. Install recent version of `emacs-lsp` package by following the instructions https://github.com/emacs-lsp/lsp-mode[here].\n+1. Install the most recent version of `emacs-lsp` package by following the instructions https://github.com/emacs-lsp/lsp-mode[here].\n 2. Set `lsp-rust-server` to `'rust-analyzer`.\n 3. Run `lsp` in a Rust buffer.\n 4. (Optionally) bind commands like `lsp-rust-analyzer-join-lines`, `lsp-extend-selection` and `lsp-rust-analyzer-expand-macro` to keys.\n@@ -112,7 +111,7 @@ The are several LSP client implementations for vim:\n    https://github.com/autozimu/LanguageClient-neovim[here]\n    * The github project wiki has extra tips on configuration\n \n-2. Configure by adding this to your vim/neovim config file (replacing the existing rust specific line if it exists):\n+2. Configure by adding this to your vim/neovim config file (replacing the existing Rust-specific line if it exists):\n +\n [source,vim]\n ----\n@@ -123,7 +122,7 @@ let g:LanguageClient_serverCommands = {\n \n ==== nvim-lsp\n \n-NeoVim 0.5 (not yet released) has built in language server support.\n+NeoVim 0.5 (not yet released) has built-in language server support.\n For a quick start configuration of rust-analyzer, use https://github.com/neovim/nvim-lsp#rust_analyzer[neovim/nvim-lsp].\n Once `neovim/nvim-lsp` is installed, use `lua require'nvim_lsp'.rust_analyzer.setup({})` in your `init.vim`.\n "}]}