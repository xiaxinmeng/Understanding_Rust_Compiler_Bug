{"sha": "14033108cd34f08d92b28ff0ae2eafb2d81bf8b4", "node_id": "C_kwDOAAsO6NoAKDE0MDMzMTA4Y2QzNGYwOGQ5MmIyOGZmMGFlMmVhZmIyZDgxYmY4YjQ", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2023-02-11T09:31:09Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2023-02-11T09:31:09Z"}, "message": "Print disk usage in PGO CI script", "tree": {"sha": "4bd8c8d9f4855b096409bab484b452a7fe63d461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd8c8d9f4855b096409bab484b452a7fe63d461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14033108cd34f08d92b28ff0ae2eafb2d81bf8b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEzFQynJm4WzBnfhz8kJzQ0mSDUWsFAmPnYF0ACgkQkJzQ0mSD\nUWtWgAv+J8pB1GPeOZ+FkSNsAeok5rm8hNLVzU8eymaOPSIbnWcG0yEa5Z2ir1an\nnF1759i9okcCnuAUnfeFFk7lZgKDrDmd+pIPsC4lecme1j1h/9HQXaK0aqccr4tj\nOb6/ErZ+xSKNJ1u1mi/RAkzdGBA/YC/TT5e5wdaY62F0yfxnu3vhahRNFwL42WEQ\n7zBRuNGMHSPpSBaOWgh7HDtyoSPhdtBPScSIleOp2TI8gQ4xX1Zwt+rQRcKdNQ4a\nBEiQby9L9U9gdoVFaVUCXFodkhGVxXrmNHPIv2sHHdH+FVuE4slk5h5LhOlhP3dL\n/d3Fy6H46vkfXxUrq49BzKB6Pibmk1ikMTSdJ9v5uLVe0+Ni1Ua2hSdb9BS6e1Vy\nQE1aZJKj0UPH+fJeauo3p0Odln1uFCWWd7GsjIm+2kzZq9b9c5/wqU5/jJtyM9ZP\nAGiXMKsnHNBEEYuUM20nxgvq+RNJP2sh9LVVagrHpyGrWsmNl7tozKjEG7WNQE9k\nqWuN+c68\n=dw0X\n-----END PGP SIGNATURE-----", "payload": "tree 4bd8c8d9f4855b096409bab484b452a7fe63d461\nparent 5a8dfd933a70cc47e44502a20fd67dfaec6555d5\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1676107869 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1676107869 +0100\n\nPrint disk usage in PGO CI script\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14033108cd34f08d92b28ff0ae2eafb2d81bf8b4", "html_url": "https://github.com/rust-lang/rust/commit/14033108cd34f08d92b28ff0ae2eafb2d81bf8b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14033108cd34f08d92b28ff0ae2eafb2d81bf8b4/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a8dfd933a70cc47e44502a20fd67dfaec6555d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8dfd933a70cc47e44502a20fd67dfaec6555d5", "html_url": "https://github.com/rust-lang/rust/commit/5a8dfd933a70cc47e44502a20fd67dfaec6555d5"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "4e6bcba5e20d22be42b542bf3e66e62dd74cd5e0", "filename": "src/ci/stage-build.py", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/14033108cd34f08d92b28ff0ae2eafb2d81bf8b4/src%2Fci%2Fstage-build.py", "raw_url": "https://github.com/rust-lang/rust/raw/14033108cd34f08d92b28ff0ae2eafb2d81bf8b4/src%2Fci%2Fstage-build.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fstage-build.py?ref=14033108cd34f08d92b28ff0ae2eafb2d81bf8b4", "patch": "@@ -211,7 +211,8 @@ def get_timestamp() -> float:\n TimerSection = Union[Duration, \"Timer\"]\n \n \n-def iterate_sections(section: TimerSection, name: str, level: int = 0) -> Iterator[Tuple[int, str, Duration]]:\n+def iterate_sections(section: TimerSection, name: str, level: int = 0) -> Iterator[\n+    Tuple[int, str, Duration]]:\n     \"\"\"\n     Hierarchically iterate the sections of a timer, in a depth-first order.\n     \"\"\"\n@@ -239,7 +240,7 @@ def section(self, name: str) -> \"Timer\":\n         start = get_timestamp()\n         exc = None\n \n-        child_timer = Timer(parent_names=self.parent_names + (name, ))\n+        child_timer = Timer(parent_names=self.parent_names + (name,))\n         full_name = \" > \".join(child_timer.parent_names)\n         try:\n             LOGGER.info(f\"Section `{full_name}` starts\")\n@@ -648,6 +649,16 @@ def print_binary_sizes(pipeline: Pipeline):\n         LOGGER.info(f\"Rustc binary size\\n{output.getvalue()}\")\n \n \n+def print_free_disk_space(pipeline: Pipeline):\n+    usage = shutil.disk_usage(pipeline.opt_artifacts())\n+    total = usage.total\n+    used = usage.used\n+    free = usage.free\n+\n+    logging.info(\n+        f\"Free disk space: {format_bytes(free)} out of total {format_bytes(total)} ({(used / total) * 100:.2f}% used)\")\n+\n+\n def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: List[str]):\n     # Clear and prepare tmp directory\n     shutil.rmtree(pipeline.opt_artifacts(), ignore_errors=True)\n@@ -666,6 +677,7 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n \n         with stage1.section(\"Gather profiles\"):\n             gather_llvm_profiles(pipeline)\n+        print_free_disk_space(pipeline)\n \n     clear_llvm_files(pipeline)\n     final_build_args += [\n@@ -683,6 +695,7 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n \n         with stage2.section(\"Gather profiles\"):\n             gather_rustc_profiles(pipeline)\n+        print_free_disk_space(pipeline)\n \n     clear_llvm_files(pipeline)\n     final_build_args += [\n@@ -702,6 +715,7 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n             with stage3.section(\"Gather profiles\"):\n                 gather_llvm_bolt_profiles(pipeline)\n \n+        print_free_disk_space(pipeline)\n         clear_llvm_files(pipeline)\n         final_build_args += [\n             \"--llvm-bolt-profile-use\",\n@@ -733,5 +747,6 @@ def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: L\n         raise e\n     finally:\n         timer.print_stats()\n+        print_free_disk_space(pipeline)\n \n     print_binary_sizes(pipeline)"}]}