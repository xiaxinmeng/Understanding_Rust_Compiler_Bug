{"sha": "e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMThmYzM2ZDE3Njg1YzMxZDZiMzFhY2YxN2E5YThmMmY3M2Y4ZDk=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Remove Restriction\n\nThe Restriction struct now consists of a single Rc<LoanPath> field, so\nit can be replaced with Rc<LoanPath>.", "tree": {"sha": "70031163dfb274174acb20607ecd1b7c8dc9f37b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70031163dfb274174acb20607ecd1b7c8dc9f37b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "html_url": "https://github.com/rust-lang/rust/commit/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/comments", "author": null, "committer": null, "parents": [{"sha": "59309e0d9bf3eba0f4219062b451ff10cbdf0e2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/59309e0d9bf3eba0f4219062b451ff10cbdf0e2b", "html_url": "https://github.com/rust-lang/rust/commit/59309e0d9bf3eba0f4219062b451ff10cbdf0e2b"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "70cb06e2a303b8f0b297fcfeb4c69fed01bea042", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "patch": "@@ -208,8 +208,8 @@ impl<'a> CheckLoanCtxt<'a> {\n                    loan.repr(self.tcx()));\n \n             let mut ret = true;\n-            for restr in loan.restrictions.iter() {\n-                if *restr.loan_path == *loan_path {\n+            for restr_path in loan.restricted_paths.iter() {\n+                if **restr_path == *loan_path {\n                     if !op(loan) {\n                         ret = false;\n                         break;\n@@ -298,8 +298,8 @@ impl<'a> CheckLoanCtxt<'a> {\n             return true;\n         }\n \n-        for restr in loan1.restrictions.iter() {\n-            if restr.loan_path != loan2.loan_path { continue; }\n+        for restr_path in loan1.restricted_paths.iter() {\n+            if *restr_path != loan2.loan_path { continue; }\n \n             let old_pronoun = if new_loan.loan_path == old_loan.loan_path {\n                 \"it\".to_string()"}, {"sha": "89f304513ffb315580607438d55c03a7af2a07a5", "filename": "src/librustc/middle/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "patch": "@@ -268,7 +268,7 @@ impl<'a> GatherLoanCtxt<'a> {\n                 return;\n             }\n \n-            restrictions::SafeIf(loan_path, restrictions) => {\n+            restrictions::SafeIf(loan_path, restricted_paths) => {\n                 let loan_scope = match loan_region {\n                     ty::ReScope(id) => id,\n                     ty::ReFree(ref fr) => fr.scope_id,\n@@ -314,7 +314,7 @@ impl<'a> GatherLoanCtxt<'a> {\n                     gen_scope: gen_scope,\n                     kill_scope: kill_scope,\n                     span: borrow_span,\n-                    restrictions: restrictions,\n+                    restricted_paths: restricted_paths,\n                     cause: cause,\n                 }\n             }"}, {"sha": "5b3e1ac0b2c74ab42f30f927c10d2a57234ee243", "filename": "src/librustc/middle/borrowck/gather_loans/restrictions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs?ref=e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "patch": "@@ -23,7 +23,7 @@ use std::rc::Rc;\n \n pub enum RestrictionResult {\n     Safe,\n-    SafeIf(Rc<LoanPath>, Vec<Restriction>)\n+    SafeIf(Rc<LoanPath>, Vec<Rc<LoanPath>>)\n }\n \n pub fn compute_restrictions(bccx: &BorrowckCtxt,\n@@ -71,7 +71,7 @@ impl<'a> RestrictionsContext<'a> {\n             mc::cat_upvar(ty::UpvarId {var_id: local_id, ..}, _) => {\n                 // R-Variable\n                 let lp = Rc::new(LpVar(local_id));\n-                SafeIf(lp.clone(), vec!(Restriction { loan_path: lp }))\n+                SafeIf(lp.clone(), vec!(lp))\n             }\n \n             mc::cat_downcast(cmt_base) => {\n@@ -164,7 +164,7 @@ impl<'a> RestrictionsContext<'a> {\n             Safe => Safe,\n             SafeIf(base_lp, mut base_vec) => {\n                 let lp = Rc::new(LpExtend(base_lp, mc, elem));\n-                base_vec.push(Restriction { loan_path: lp.clone() });\n+                base_vec.push(lp.clone());\n                 SafeIf(lp, base_vec)\n             }\n         }"}, {"sha": "18cd0b1326d9610e38955b000c5035a8e29cfd54", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e018fc36d17685c31d6b31acf17a9a8f2f73f8d9/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=e018fc36d17685c31d6b31acf17a9a8f2f73f8d9", "patch": "@@ -181,7 +181,7 @@ pub struct Loan {\n     index: uint,\n     loan_path: Rc<LoanPath>,\n     kind: ty::BorrowKind,\n-    restrictions: Vec<Restriction>,\n+    restricted_paths: Vec<Rc<LoanPath>>,\n     gen_scope: ast::NodeId,\n     kill_scope: ast::NodeId,\n     span: Span,\n@@ -249,10 +249,6 @@ pub fn opt_loan_path(cmt: &mc::cmt) -> Option<Rc<LoanPath>> {\n     }\n }\n \n-pub struct Restriction {\n-    loan_path: Rc<LoanPath>,\n-}\n-\n ///////////////////////////////////////////////////////////////////////////\n // Errors\n \n@@ -777,13 +773,7 @@ impl Repr for Loan {\n                  self.kind,\n                  self.gen_scope,\n                  self.kill_scope,\n-                 self.restrictions.repr(tcx))).to_string()\n-    }\n-}\n-\n-impl Repr for Restriction {\n-    fn repr(&self, tcx: &ty::ctxt) -> String {\n-        (format!(\"Restriction({})\", self.loan_path.repr(tcx))).to_string()\n+                 self.restricted_paths.repr(tcx))).to_string()\n     }\n }\n "}]}