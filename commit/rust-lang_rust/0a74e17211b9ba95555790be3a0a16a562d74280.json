{"sha": "0a74e17211b9ba95555790be3a0a16a562d74280", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNzRlMTcyMTFiOWJhOTU1NTU3OTBiZTNhMGExNmE1NjJkNzQyODA=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-17T01:07:37Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-17T01:07:37Z"}, "message": "Initialize a few variables directly\n\nCurrently they are declared as `mut`, get initialized to a default value, and\nthen possibly overwritten.\n\nBy initializing to the final value directly, they don't need to be `mut` and\nit's clear that they don't get mutated elsewhere later on.", "tree": {"sha": "5100575a4a47ef62023e3ac255361720af201af5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5100575a4a47ef62023e3ac255361720af201af5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a74e17211b9ba95555790be3a0a16a562d74280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a74e17211b9ba95555790be3a0a16a562d74280", "html_url": "https://github.com/rust-lang/rust/commit/0a74e17211b9ba95555790be3a0a16a562d74280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a74e17211b9ba95555790be3a0a16a562d74280/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efdb859dcdf7077cf6b8c85af0ea8820c93bcbdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/efdb859dcdf7077cf6b8c85af0ea8820c93bcbdf", "html_url": "https://github.com/rust-lang/rust/commit/efdb859dcdf7077cf6b8c85af0ea8820c93bcbdf"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "761e5242f87f0d0b2d67a6233263fbc5942eaf7b", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0a74e17211b9ba95555790be3a0a16a562d74280/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a74e17211b9ba95555790be3a0a16a562d74280/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=0a74e17211b9ba95555790be3a0a16a562d74280", "patch": "@@ -1370,12 +1370,10 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n     fn lifetime_deletion_span(&self, name: Ident, generics: &hir::Generics<'_>) -> Option<Span> {\n         generics.params.iter().enumerate().find_map(|(i, param)| {\n             if param.name.ident() == name {\n-                let mut in_band = false;\n-                if let hir::GenericParamKind::Lifetime { kind } = param.kind {\n-                    if let hir::LifetimeParamKind::InBand = kind {\n-                        in_band = true;\n-                    }\n-                }\n+                let in_band = matches!(\n+                    param.kind,\n+                    hir::GenericParamKind::Lifetime { kind: hir::LifetimeParamKind::InBand }\n+                );\n                 if in_band {\n                     Some(param.span)\n                 } else if generics.params.len() == 1 {\n@@ -1405,12 +1403,11 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n         lifetime: &hir::Lifetime,\n     ) {\n         let name = lifetime.name.ident();\n-        let mut remove_decl = None;\n-        if let Some(parent_def_id) = self.tcx.parent(def_id) {\n-            if let Some(generics) = self.tcx.hir().get_generics(parent_def_id) {\n-                remove_decl = self.lifetime_deletion_span(name, generics);\n-            }\n-        }\n+        let remove_decl = self\n+            .tcx\n+            .parent(def_id)\n+            .and_then(|parent_def_id| self.tcx.hir().get_generics(parent_def_id))\n+            .and_then(|generics| self.lifetime_deletion_span(name, generics));\n \n         let mut remove_use = None;\n         let mut elide_use = None;"}]}