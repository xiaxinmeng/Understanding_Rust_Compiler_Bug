{"sha": "061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MWI1NmJkNWNhMmQzYTQ5YmViZGQ2YTE3NDk5NWUxYjNlYzZhNWI=", "commit": {"author": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-07T11:47:39Z"}, "committer": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-07T11:47:39Z"}, "message": "Add a link to `park` in the `park_timeout` doc.\n\nPart of #29378", "tree": {"sha": "9bd79f5de0e12d5bddd9149fcf7a368b4a5f6850", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bd79f5de0e12d5bddd9149fcf7a368b4a5f6850"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b", "html_url": "https://github.com/rust-lang/rust/commit/061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b/comments", "author": null, "committer": null, "parents": [{"sha": "a6ab049ed1db09f693df7d33046b3980f56751c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ab049ed1db09f693df7d33046b3980f56751c1", "html_url": "https://github.com/rust-lang/rust/commit/a6ab049ed1db09f693df7d33046b3980f56751c1"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "dbc8562ea39fd1e82c5feff6aee42a8681c9a5d3", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=061b56bd5ca2d3a49bebdd6a174995e1b3ec6a5b", "patch": "@@ -585,16 +585,17 @@ pub fn park() {\n /// Blocks unless or until the current thread's token is made available or\n /// the specified duration has been reached (may wake spuriously).\n ///\n-/// The semantics of this function are equivalent to `park()` except that the\n-/// thread will be blocked for roughly no longer than `ms`. This method\n-/// should not be used for precise timing due to anomalies such as\n+/// The semantics of this function are equivalent to [`park()`][[park] except\n+/// that the thread will be blocked for roughly no longer than `dur`. This\n+/// method should not be used for precise timing due to anomalies such as\n /// preemption or platform differences that may not cause the maximum\n /// amount of time waited to be precisely `ms` long.\n ///\n /// See the [module documentation][thread] for more detail.\n ///\n /// [thread]: index.html\n /// [park_timeout]: fn.park_timeout.html\n+/// [park]: fn.park.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.6.0\", reason = \"replaced by `std::thread::park_timeout`\")]\n pub fn park_timeout_ms(ms: u32) {\n@@ -604,9 +605,9 @@ pub fn park_timeout_ms(ms: u32) {\n /// Blocks unless or until the current thread's token is made available or\n /// the specified duration has been reached (may wake spuriously).\n ///\n-/// The semantics of this function are equivalent to `park()` except that the\n-/// thread will be blocked for roughly no longer than `dur`. This method\n-/// should not be used for precise timing due to anomalies such as\n+/// The semantics of this function are equivalent to [`park()`][[park] except\n+/// that the thread will be blocked for roughly no longer than `dur`. This\n+/// method should not be used for precise timing due to anomalies such as\n /// preemption or platform differences that may not cause the maximum\n /// amount of time waited to be precisely `dur` long.\n ///\n@@ -635,6 +636,8 @@ pub fn park_timeout_ms(ms: u32) {\n ///     park_timeout(timeout);\n /// }\n /// ```\n+///\n+/// [park]: fn.park.html\n #[stable(feature = \"park_timeout\", since = \"1.4.0\")]\n pub fn park_timeout(dur: Duration) {\n     let thread = current();"}]}