{"sha": "3c94914f0c87ba00987e515063dcc9e079a8918d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjOTQ5MTRmMGM4N2JhMDA5ODdlNTE1MDYzZGNjOWUwNzlhODkxOGQ=", "commit": {"author": {"name": "hosseind75", "email": "dindar95@bk.ru", "date": "2020-09-29T14:44:07Z"}, "committer": {"name": "hosseind88", "email": "hosseind88@mail.ru", "date": "2020-10-09T17:27:45Z"}, "message": "rebase with master", "tree": {"sha": "28ec652151919a89e3b5e58d12f021093aa090e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28ec652151919a89e3b5e58d12f021093aa090e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c94914f0c87ba00987e515063dcc9e079a8918d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c94914f0c87ba00987e515063dcc9e079a8918d", "html_url": "https://github.com/rust-lang/rust/commit/3c94914f0c87ba00987e515063dcc9e079a8918d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c94914f0c87ba00987e515063dcc9e079a8918d/comments", "author": {"login": "hosseind75", "id": 69863841, "node_id": "MDQ6VXNlcjY5ODYzODQx", "avatar_url": "https://avatars.githubusercontent.com/u/69863841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind75", "html_url": "https://github.com/hosseind75", "followers_url": "https://api.github.com/users/hosseind75/followers", "following_url": "https://api.github.com/users/hosseind75/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind75/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind75/subscriptions", "organizations_url": "https://api.github.com/users/hosseind75/orgs", "repos_url": "https://api.github.com/users/hosseind75/repos", "events_url": "https://api.github.com/users/hosseind75/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind75/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hosseind88", "id": 72156162, "node_id": "MDQ6VXNlcjcyMTU2MTYy", "avatar_url": "https://avatars.githubusercontent.com/u/72156162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind88", "html_url": "https://github.com/hosseind88", "followers_url": "https://api.github.com/users/hosseind88/followers", "following_url": "https://api.github.com/users/hosseind88/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind88/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind88/subscriptions", "organizations_url": "https://api.github.com/users/hosseind88/orgs", "repos_url": "https://api.github.com/users/hosseind88/repos", "events_url": "https://api.github.com/users/hosseind88/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f07577e6f873f4a1b3428d29bf520189f4ef79e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f07577e6f873f4a1b3428d29bf520189f4ef79e", "html_url": "https://github.com/rust-lang/rust/commit/7f07577e6f873f4a1b3428d29bf520189f4ef79e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "bf9110b43492fe16053df8b7be96796bbe0f79c1", "filename": "src/driver.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c94914f0c87ba00987e515063dcc9e079a8918d/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c94914f0c87ba00987e515063dcc9e079a8918d/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=3c94914f0c87ba00987e515063dcc9e079a8918d", "patch": "@@ -277,7 +277,9 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n     // If backtraces are enabled, also print the query stack\n     let backtrace = env::var_os(\"RUST_BACKTRACE\").map_or(false, |x| &x != \"0\");\n \n-    TyCtxt::try_print_query_stack(&handler, Some(2), Some(backtrace));\n+    let num_frames = if backtrace { None } else { Some(2) };\n+\n+    TyCtxt::try_print_query_stack(&handler, num_frames);\n }\n \n fn toolchain_path(home: Option<String>, toolchain: Option<String>) -> Option<PathBuf> {"}]}