{"sha": "0069007d5b17b19bf6a7686dec7dee7be46dcd47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNjkwMDdkNWIxN2IxOWJmNmE3Njg2ZGVjN2RlZTdiZTQ2ZGNkNDc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-18T11:20:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-18T11:23:55Z"}, "message": "Avoid nightly feature usage where easily possible", "tree": {"sha": "a2c7d0743b57b93434f3d4340b9e326f74e9d6f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2c7d0743b57b93434f3d4340b9e326f74e9d6f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0069007d5b17b19bf6a7686dec7dee7be46dcd47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0069007d5b17b19bf6a7686dec7dee7be46dcd47", "html_url": "https://github.com/rust-lang/rust/commit/0069007d5b17b19bf6a7686dec7dee7be46dcd47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0069007d5b17b19bf6a7686dec7dee7be46dcd47/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "664b25ea38f9a7e826048df1490a101adbc7d6d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/664b25ea38f9a7e826048df1490a101adbc7d6d5", "html_url": "https://github.com/rust-lang/rust/commit/664b25ea38f9a7e826048df1490a101adbc7d6d5"}], "stats": {"total": 38, "additions": 12, "deletions": 26}, "files": [{"sha": "ea37ca98b59a79c160036bea3dffec96ea517117", "filename": "example/mini_core_hello_world.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0069007d5b17b19bf6a7686dec7dee7be46dcd47/example%2Fmini_core_hello_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0069007d5b17b19bf6a7686dec7dee7be46dcd47/example%2Fmini_core_hello_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core_hello_world.rs?ref=0069007d5b17b19bf6a7686dec7dee7be46dcd47", "patch": "@@ -1,7 +1,4 @@\n-#![feature(\n-    no_core, start, lang_items, box_syntax, never_type, linkage,\n-    extern_types, thread_local\n-)]\n+#![feature(no_core, lang_items, box_syntax, never_type, linkage, extern_types, thread_local)]\n #![no_core]\n #![allow(dead_code, non_camel_case_types)]\n "}, {"sha": "33a28ac733e761a88a719fdba3a3c1c3a0fe9bd8", "filename": "src/base.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0069007d5b17b19bf6a7686dec7dee7be46dcd47/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0069007d5b17b19bf6a7686dec7dee7be46dcd47/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=0069007d5b17b19bf6a7686dec7dee7be46dcd47", "patch": "@@ -465,16 +465,16 @@ fn codegen_stmt<'tcx>(\n                     let val = crate::constant::codegen_tls_ref(fx, def_id, lval.layout());\n                     lval.write_cvalue(fx, val);\n                 }\n-                Rvalue::BinaryOp(bin_op, box (ref lhs, ref rhs)) => {\n-                    let lhs = codegen_operand(fx, lhs);\n-                    let rhs = codegen_operand(fx, rhs);\n+                Rvalue::BinaryOp(bin_op, ref lhs_rhs) => {\n+                    let lhs = codegen_operand(fx, &lhs_rhs.0);\n+                    let rhs = codegen_operand(fx, &lhs_rhs.1);\n \n                     let res = crate::num::codegen_binop(fx, bin_op, lhs, rhs);\n                     lval.write_cvalue(fx, res);\n                 }\n-                Rvalue::CheckedBinaryOp(bin_op, box (ref lhs, ref rhs)) => {\n-                    let lhs = codegen_operand(fx, lhs);\n-                    let rhs = codegen_operand(fx, rhs);\n+                Rvalue::CheckedBinaryOp(bin_op, ref lhs_rhs) => {\n+                    let lhs = codegen_operand(fx, &lhs_rhs.0);\n+                    let rhs = codegen_operand(fx, &lhs_rhs.1);\n \n                     let res = if !fx.tcx.sess.overflow_checks() {\n                         let val =\n@@ -835,19 +835,15 @@ fn codegen_stmt<'tcx>(\n             }\n         }\n         StatementKind::Coverage { .. } => fx.tcx.sess.fatal(\"-Zcoverage is unimplemented\"),\n-        StatementKind::CopyNonOverlapping(box rustc_middle::mir::CopyNonOverlapping {\n-          src,\n-          dst,\n-          count,\n-        }) => {\n-            let dst = codegen_operand(fx, dst);\n+        StatementKind::CopyNonOverlapping(inner) => {\n+            let dst = codegen_operand(fx, &inner.dst);\n             let pointee = dst\n               .layout()\n               .pointee_info_at(fx, rustc_target::abi::Size::ZERO)\n               .expect(\"Expected pointer\");\n             let dst = dst.load_scalar(fx);\n-            let src = codegen_operand(fx, src).load_scalar(fx);\n-            let count = codegen_operand(fx, count).load_scalar(fx);\n+            let src = codegen_operand(fx, &inner.src).load_scalar(fx);\n+            let count = codegen_operand(fx, &inner.count).load_scalar(fx);\n             let elem_size: u64 = pointee.size.bytes();\n             let bytes = if elem_size != 1 {\n                fx.bcx.ins().imul_imm(count, elem_size as i64)"}, {"sha": "63fb1c40844634b807f31f3ad8f25f76f34d9854", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0069007d5b17b19bf6a7686dec7dee7be46dcd47/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0069007d5b17b19bf6a7686dec7dee7be46dcd47/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=0069007d5b17b19bf6a7686dec7dee7be46dcd47", "patch": "@@ -1,11 +1,7 @@\n #![feature(\n     rustc_private,\n     decl_macro,\n-    type_alias_impl_trait,\n-    associated_type_bounds,\n     never_type,\n-    try_blocks,\n-    box_patterns,\n     hash_drain_filter\n )]\n #![warn(rust_2018_idioms)]"}, {"sha": "d22ea3772eee7b24457c1bac4b550ea2d3e3a769", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0069007d5b17b19bf6a7686dec7dee7be46dcd47/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0069007d5b17b19bf6a7686dec7dee7be46dcd47/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=0069007d5b17b19bf6a7686dec7dee7be46dcd47", "patch": "@@ -224,10 +224,7 @@ pub(crate) fn write_ir_file(\n \n     let clif_file_name = clif_output_dir.join(name);\n \n-    let res: std::io::Result<()> = try {\n-        let mut file = std::fs::File::create(clif_file_name)?;\n-        write(&mut file)?;\n-    };\n+    let res = std::fs::File::create(clif_file_name).and_then(|mut file| write(&mut file));\n     if let Err(err) = res {\n         tcx.sess.warn(&format!(\"error writing ir file: {}\", err));\n     }"}]}