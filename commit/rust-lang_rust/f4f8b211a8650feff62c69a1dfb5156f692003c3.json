{"sha": "f4f8b211a8650feff62c69a1dfb5156f692003c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZjhiMjExYTg2NTBmZWZmNjJjNjlhMWRmYjUxNTZmNjkyMDAzYzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-02T11:29:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-02T11:29:54Z"}, "message": "let FIXME refer to tracking issue", "tree": {"sha": "36da633f642f4fe5ad01791d4af149954da12281", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36da633f642f4fe5ad01791d4af149954da12281"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4f8b211a8650feff62c69a1dfb5156f692003c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f8b211a8650feff62c69a1dfb5156f692003c3", "html_url": "https://github.com/rust-lang/rust/commit/f4f8b211a8650feff62c69a1dfb5156f692003c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4f8b211a8650feff62c69a1dfb5156f692003c3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "html_url": "https://github.com/rust-lang/rust/commit/f9fb8d64350efdff400c54176a9ac1c3e5da5afd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3717a783f2411cafe6914f4feafb5d1ffd93dbc3", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4f8b211a8650feff62c69a1dfb5156f692003c3/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f8b211a8650feff62c69a1dfb5156f692003c3/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=f4f8b211a8650feff62c69a1dfb5156f692003c3", "patch": "@@ -22,7 +22,7 @@ fn float_to_decimal_common_exact<T>(fmt: &mut Formatter, num: &T,\n     unsafe {\n         let mut buf = MaybeUninit::<[u8; 1024]>::uninitialized(); // enough for f32 and f64\n         let mut parts = MaybeUninit::<[flt2dec::Part; 4]>::uninitialized();\n-        // FIXME: Technically, this is calling `get_mut` on an uninitialized\n+        // FIXME(#53491): Technically, this is calling `get_mut` on an uninitialized\n         // `MaybeUninit` (here and elsewhere in this file).  Revisit this once\n         // we decided whether that is valid or not.\n         let formatted = flt2dec::to_exact_fixed_str(flt2dec::strategy::grisu::format_exact,"}, {"sha": "e4b2800ae211720a4ee12c42ca09480f4c6043bc", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4f8b211a8650feff62c69a1dfb5156f692003c3/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f8b211a8650feff62c69a1dfb5156f692003c3/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=f4f8b211a8650feff62c69a1dfb5156f692003c3", "patch": "@@ -1118,7 +1118,7 @@ impl<T> MaybeUninit<T> {\n     ///\n     /// It is up to the caller to guarantee that the `MaybeUninit` really is in an initialized\n     /// state, otherwise this will immediately cause undefined behavior.\n-    // FIXME: We currently rely on the above being incorrect, i.e., we have references\n+    // FIXME(#53491): We currently rely on the above being incorrect, i.e., we have references\n     // to uninitialized data (e.g. in `libcore/fmt/float.rs`).  We should make\n     // a final decision about the rules before stabilization.\n     #[unstable(feature = \"maybe_uninit\", issue = \"53491\")]"}]}