{"sha": "38c85b739314e2b5dedf8ff11feec53463261de4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4Yzg1YjczOTMxNGUyYjVkZWRmOGZmMTFmZWVjNTM0NjMyNjFkZTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-24T12:28:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-24T12:28:33Z"}, "message": "Rollup merge of #73638 - yuqio:remove-unused-crate-imports, r=nikomatsakis\n\nRemove unused crate imports in 2018 edition crates\n\nCloses #73570", "tree": {"sha": "b77bac39c90e9c0259a2d96ead5a4e79614f1ee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b77bac39c90e9c0259a2d96ead5a4e79614f1ee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38c85b739314e2b5dedf8ff11feec53463261de4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe80byCRBK7hj4Ov3rIwAAdHIIAClZ/kBV6G0eeGCV62/fF/Hl\nXiwet7pJNtAapRS8MBBKZDrZ9KaxxznlkLz/b0+DgYLg0eFIXKmgZFqGO+Tc5UIV\nkv/FkvxqCVnvwG9JAwNO2c5S93tOMl9GGpuQr5APraiY5257mGyY0qcdI13OsIvm\ncvDheGSL1VQQzboQbm1WV+AlLKI3SywMNA2ggbbD0+kT8SQRu3f6ibkNDCZPv5gU\nKS2/TmgNUWrVa1IStcSEwTunbXZsq1ftVgs+KgOtjGrfdQlAwHOKvxFV4lIlSzkq\nBx60cKJRxqYdYV4JJ/l6sSuqevi2FU/rB+V/yoXrBZvOA+OjfQ74JSrhphaARjg=\n=9Gd7\n-----END PGP SIGNATURE-----\n", "payload": "tree b77bac39c90e9c0259a2d96ead5a4e79614f1ee1\nparent 3c90ae8404b6b83bc3cba35840ddf7edd500cc86\nparent 9267b4f6120ff137f2ba8649e07ff093c9428340\nauthor Dylan DPC <dylan.dpc@gmail.com> 1593001713 +0200\ncommitter GitHub <noreply@github.com> 1593001713 +0200\n\nRollup merge of #73638 - yuqio:remove-unused-crate-imports, r=nikomatsakis\n\nRemove unused crate imports in 2018 edition crates\n\nCloses #73570\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38c85b739314e2b5dedf8ff11feec53463261de4", "html_url": "https://github.com/rust-lang/rust/commit/38c85b739314e2b5dedf8ff11feec53463261de4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38c85b739314e2b5dedf8ff11feec53463261de4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c90ae8404b6b83bc3cba35840ddf7edd500cc86", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c90ae8404b6b83bc3cba35840ddf7edd500cc86", "html_url": "https://github.com/rust-lang/rust/commit/3c90ae8404b6b83bc3cba35840ddf7edd500cc86"}, {"sha": "9267b4f6120ff137f2ba8649e07ff093c9428340", "url": "https://api.github.com/repos/rust-lang/rust/commits/9267b4f6120ff137f2ba8649e07ff093c9428340", "html_url": "https://github.com/rust-lang/rust/commit/9267b4f6120ff137f2ba8649e07ff093c9428340"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "960af4bfda0533ee12d400bb1f359d51cd989b15", "filename": "src/liballoc/collections/vec_deque/tests.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Fliballoc%2Fcollections%2Fvec_deque%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Fliballoc%2Fcollections%2Fvec_deque%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque%2Ftests.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -1,7 +1,5 @@\n use super::*;\n \n-use test;\n-\n #[bench]\n #[cfg_attr(miri, ignore)] // isolated Miri does not support benchmarks\n fn bench_push_back_100(b: &mut test::Bencher) {"}, {"sha": "f92e40ed6ffabf0541c03cfbb7093214a2c94412", "filename": "src/librustc_ast_pretty/pprust/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -2,7 +2,6 @@ use super::*;\n \n use rustc_ast::ast;\n use rustc_ast::with_default_globals;\n-use rustc_span;\n use rustc_span::source_map::respan;\n use rustc_span::symbol::Ident;\n "}, {"sha": "53d831749ceb7b401a66008222d301f96dcbed7c", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -358,7 +358,6 @@ cfg_if! {\n         use parking_lot::Mutex as InnerLock;\n         use parking_lot::RwLock as InnerRwLock;\n \n-        use std;\n         use std::thread;\n         pub use rayon::{join, scope};\n "}, {"sha": "b668aa2595d67bc4dc81fe18ba7ea69f26f9e20c", "filename": "src/libstd/os/illumos/fs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fos%2Fillumos%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fos%2Fillumos%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fillumos%2Ffs.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -1,7 +1,5 @@\n #![stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n \n-use libc;\n-\n use crate::fs::Metadata;\n use crate::sys_common::AsInner;\n "}, {"sha": "ada8eaa1c9745e61fe2810eb3d99575008574ecc", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -2,9 +2,6 @@\n \n //! Unix-specific networking functionality\n \n-#[cfg(unix)]\n-use libc;\n-\n // FIXME(#43348): Make libc adapt #[doc(cfg(...))] so we don't need these fake definitions here?\n #[cfg(not(unix))]\n #[allow(non_camel_case_types)]"}, {"sha": "adff6c489bbc90b0cf27ff4a07230456f4bbf57e", "filename": "src/libstd/sys/vxworks/args.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fargs.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -56,7 +56,6 @@ mod imp {\n     use crate::ffi::{CStr, OsString};\n     use crate::marker::PhantomData;\n     use crate::ptr;\n-    use libc;\n \n     use crate::sys_common::mutex::Mutex;\n "}, {"sha": "7cc64658ee1a9d1dd6d45fe14efbe60dea4618f7", "filename": "src/libstd/sys/vxworks/ext/fs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fext%2Ffs.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -6,7 +6,6 @@ use crate::path::Path;\n use crate::sys;\n use crate::sys::platform::fs::MetadataExt as UnixMetadataExt;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner};\n-use libc;\n \n /// Unix-specific extensions to [`File`].\n ///"}, {"sha": "3a1ff5fd3b9c64c4edb2ac96368b647f08aba4dd", "filename": "src/libstd/sys/vxworks/rand.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -13,7 +13,6 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n mod imp {\n     use crate::io;\n     use core::sync::atomic::{AtomicBool, Ordering::Relaxed};\n-    use libc;\n \n     pub fn fill_bytes(v: &mut [u8]) {\n         static RNG_INIT: AtomicBool = AtomicBool::new(false);"}, {"sha": "c90304c2b4a6a2d90dede9cd798a4b6d4063a8aa", "filename": "src/libstd/sys/vxworks/rwlock.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -1,6 +1,5 @@\n use crate::cell::UnsafeCell;\n use crate::sync::atomic::{AtomicUsize, Ordering};\n-use libc;\n \n pub struct RWLock {\n     inner: UnsafeCell<libc::pthread_rwlock_t>,"}, {"sha": "8365c9ee9c995dbdd70c045e30fb573dac424eeb", "filename": "src/libstd/sys/vxworks/time.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fvxworks%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ftime.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -1,7 +1,6 @@\n use crate::cmp::Ordering;\n use crate::time::Duration;\n use ::core::hash::{Hash, Hasher};\n-use libc;\n \n pub use self::inner::{Instant, SystemTime, UNIX_EPOCH};\n use crate::convert::TryInto;\n@@ -104,7 +103,6 @@ mod inner {\n     use crate::fmt;\n     use crate::sys::cvt;\n     use crate::time::Duration;\n-    use libc;\n \n     use super::Timespec;\n "}, {"sha": "57187851a14e37c57cff6a173f6f6dd4cc9c152a", "filename": "src/libstd/sys/wasi/alloc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fwasi%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Flibstd%2Fsys%2Fwasi%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Falloc.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -1,7 +1,6 @@\n use crate::alloc::{GlobalAlloc, Layout, System};\n use crate::ptr;\n use crate::sys_common::alloc::{realloc_fallback, MIN_ALIGN};\n-use libc;\n \n #[stable(feature = \"alloc_system_type\", since = \"1.28.0\")]\n unsafe impl GlobalAlloc for System {"}, {"sha": "9eb43eb2df43fd7032fdccba9c2ad1635fe49aa2", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -7,7 +7,6 @@\n #![deny(warnings)]\n \n use serde::Serialize;\n-use toml;\n \n use std::collections::BTreeMap;\n use std::collections::HashMap;"}, {"sha": "6ac7c3b9b474a9dbacfdd4cb11fef57cb95da684", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -4,7 +4,6 @@\n use crate::errors::{Error, ErrorKind};\n use crate::runtest::ProcRes;\n use serde::Deserialize;\n-use serde_json;\n use std::path::{Path, PathBuf};\n use std::str::FromStr;\n "}, {"sha": "134ac66b7d15b475e0bea26932c7959aa3e0d9a9", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -9,8 +9,6 @@ extern crate test;\n use crate::common::{expected_output_path, output_base_dir, output_relative_path, UI_EXTENSIONS};\n use crate::common::{CompareMode, Config, Debugger, Mode, PassMode, Pretty, TestPaths};\n use crate::util::logv;\n-use env_logger;\n-use getopts;\n use getopts::Options;\n use log::*;\n use std::env;"}, {"sha": "30a922057eb20f42e1e9097067c27f17603f7e78", "filename": "src/tools/compiletest/src/read2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fread2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fread2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fread2.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -25,7 +25,6 @@ mod imp {\n \n #[cfg(unix)]\n mod imp {\n-    use libc;\n     use std::io;\n     use std::io::prelude::*;\n     use std::mem;"}, {"sha": "dd0c68ecd4965121ec723ecdf0c0166399be8c92", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c85b739314e2b5dedf8ff11feec53463261de4/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=38c85b739314e2b5dedf8ff11feec53463261de4", "patch": "@@ -13,7 +13,6 @@ use crate::header::TestProps;\n use crate::json;\n use crate::util::get_pointer_width;\n use crate::util::{logv, PathBufExt};\n-use diff;\n use regex::{Captures, Regex};\n use rustfix::{apply_suggestions, get_suggestions_from_json, Filter};\n "}]}