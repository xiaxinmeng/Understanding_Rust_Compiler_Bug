{"sha": "dfc242220f28827b184ef7f3f028de3f0c52208c", "node_id": "C_kwDOAAsO6NoAKGRmYzI0MjIyMGYyODgyN2IxODRlZjdmM2YwMjhkZTNmMGM1MjIwOGM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-11T05:45:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-11T05:45:57Z"}, "message": "Rollup merge of #107878 - workingjubilee:new-size-means-bytes, r=scottmcm\n\nClarify `new_size` for realloc means bytes\n\nMinor docs fix requested by https://github.com/rust-lang/rust/issues/107875", "tree": {"sha": "8160fdd4c39594be10a7e94ef69a62ef818d98d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8160fdd4c39594be10a7e94ef69a62ef818d98d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfc242220f28827b184ef7f3f028de3f0c52208c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5yuVCRBK7hj4Ov3rIwAANjEIAJki67CdMSUchwyMAGtOBKFr\ncymfg0o/bnReYO+T1dh7NSTgaVnoUXu2xHxgJrGtAex04JCpbT+sHTgzEJd1on2U\nS6dCae6Ik2VQ2tKV4Ys+ZX6wzLQ/qbWSW2bwCiSOteNllxoMWxrjLuxDSXrA24J6\ndbVQhs91CAr0CPksPXUSUZPZg0Y0oVXdMThauvCtZ7djdDo9Jh4ZQilVDQhGJcUM\nigSf/g+JDW7Wza30L0rlhkQS9i847PWp3FNCTumIgjmbuCDVHPMfLahdtCkKmfNt\ngrT7zIsi13vw6zQNkAT1YhrDREudXEcY7BXj7qgyhZjOCXsGF6E6wDf80eOdeZk=\n=JmXZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 8160fdd4c39594be10a7e94ef69a62ef818d98d0\nparent 2228c86bad4f2c35b323b764d1bc42407a11b010\nparent 1af9b4f347c1ca725e43444e0068b5e520dde7e2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1676094357 +0530\ncommitter GitHub <noreply@github.com> 1676094357 +0530\n\nRollup merge of #107878 - workingjubilee:new-size-means-bytes, r=scottmcm\n\nClarify `new_size` for realloc means bytes\n\nMinor docs fix requested by https://github.com/rust-lang/rust/issues/107875\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc242220f28827b184ef7f3f028de3f0c52208c", "html_url": "https://github.com/rust-lang/rust/commit/dfc242220f28827b184ef7f3f028de3f0c52208c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfc242220f28827b184ef7f3f028de3f0c52208c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2228c86bad4f2c35b323b764d1bc42407a11b010", "url": "https://api.github.com/repos/rust-lang/rust/commits/2228c86bad4f2c35b323b764d1bc42407a11b010", "html_url": "https://github.com/rust-lang/rust/commit/2228c86bad4f2c35b323b764d1bc42407a11b010"}, {"sha": "1af9b4f347c1ca725e43444e0068b5e520dde7e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af9b4f347c1ca725e43444e0068b5e520dde7e2", "html_url": "https://github.com/rust-lang/rust/commit/1af9b4f347c1ca725e43444e0068b5e520dde7e2"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "18da70451f299a7e9cedc57a27e62f615650df06", "filename": "library/core/src/alloc/global.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dfc242220f28827b184ef7f3f028de3f0c52208c/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfc242220f28827b184ef7f3f028de3f0c52208c/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs?ref=dfc242220f28827b184ef7f3f028de3f0c52208c", "patch": "@@ -203,18 +203,19 @@ pub unsafe trait GlobalAlloc {\n         ptr\n     }\n \n-    /// Shrink or grow a block of memory to the given `new_size`.\n+    /// Shrink or grow a block of memory to the given `new_size` in bytes.\n     /// The block is described by the given `ptr` pointer and `layout`.\n     ///\n     /// If this returns a non-null pointer, then ownership of the memory block\n     /// referenced by `ptr` has been transferred to this allocator.\n     /// Any access to the old `ptr` is Undefined Behavior, even if the\n     /// allocation remained in-place. The newly returned pointer is the only valid pointer\n     /// for accessing this memory now.\n+    ///\n     /// The new memory block is allocated with `layout`,\n-    /// but with the `size` updated to `new_size`. This new layout must be\n-    /// used when deallocating the new memory block with `dealloc`. The range\n-    /// `0..min(layout.size(), new_size)` of the new memory block is\n+    /// but with the `size` updated to `new_size` in bytes.\n+    /// This new layout must be used when deallocating the new memory block with `dealloc`.\n+    /// The range `0..min(layout.size(), new_size)` of the new memory block is\n     /// guaranteed to have the same values as the original block.\n     ///\n     /// If this method returns null, then ownership of the memory"}]}