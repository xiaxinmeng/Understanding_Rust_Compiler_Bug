{"sha": "4aff10bb1b9b202bb6464f99d198d3e6f49e6991", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZmYxMGJiMWI5YjIwMmJiNjQ2NGY5OWQxOThkM2U2ZjQ5ZTY5OTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-27T17:20:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-27T17:20:27Z"}, "message": "Auto merge of #51850 - abarth:draw_again, r=cramertj\n\n[fuchsia] Update zx_cprng_draw to target semantics\n\nThis change is the final step in improving the semantics of\nzx_cprng_draw. Now the syscall always generates the requested number of\nbytes. If the syscall would have failed to generate the requested number\nof bytes, the syscall either terminates the entire operating system or\nterminates the calling process, depending on whether the error is a\nresult of the kernel misbehaving or the userspace program misbehaving.", "tree": {"sha": "6655864497bc1e8907c5a65e4efd5e5dc0be5661", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6655864497bc1e8907c5a65e4efd5e5dc0be5661"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4aff10bb1b9b202bb6464f99d198d3e6f49e6991", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4aff10bb1b9b202bb6464f99d198d3e6f49e6991", "html_url": "https://github.com/rust-lang/rust/commit/4aff10bb1b9b202bb6464f99d198d3e6f49e6991", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4aff10bb1b9b202bb6464f99d198d3e6f49e6991/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed0350e94569d74bdfe0e612fedfd5ab173f5242", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed0350e94569d74bdfe0e612fedfd5ab173f5242", "html_url": "https://github.com/rust-lang/rust/commit/ed0350e94569d74bdfe0e612fedfd5ab173f5242"}, {"sha": "a9f7cc3b4968d1ec5a8bc857a83ea7ade33fffa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f7cc3b4968d1ec5a8bc857a83ea7ade33fffa8", "html_url": "https://github.com/rust-lang/rust/commit/a9f7cc3b4968d1ec5a8bc857a83ea7ade33fffa8"}], "stats": {"total": 28, "additions": 2, "deletions": 26}, "files": [{"sha": "01c0ada4ffbe531f227fbaec9858831bb56b6367", "filename": "src/libstd/sys/unix/rand.rs", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4aff10bb1b9b202bb6464f99d198d3e6f49e6991/src%2Flibstd%2Fsys%2Funix%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aff10bb1b9b202bb6464f99d198d3e6f49e6991/src%2Flibstd%2Fsys%2Funix%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Frand.rs?ref=4aff10bb1b9b202bb6464f99d198d3e6f49e6991", "patch": "@@ -183,34 +183,10 @@ mod imp {\n mod imp {\n     #[link(name = \"zircon\")]\n     extern {\n-        fn zx_cprng_draw_new(buffer: *mut u8, len: usize) -> i32;\n-    }\n-\n-    fn getrandom(buf: &mut [u8]) -> Result<usize, i32> {\n-        unsafe {\n-            let status = zx_cprng_draw_new(buf.as_mut_ptr(), buf.len());\n-            if status == 0 {\n-                Ok(buf.len())\n-            } else {\n-                Err(status)\n-            }\n-        }\n+        fn zx_cprng_draw(buffer: *mut u8, len: usize);\n     }\n \n     pub fn fill_bytes(v: &mut [u8]) {\n-        let mut buf = v;\n-        while !buf.is_empty() {\n-            let ret = getrandom(buf);\n-            match ret {\n-                Err(err) => {\n-                    panic!(\"kernel zx_cprng_draw call failed! (returned {}, buf.len() {})\",\n-                        err, buf.len())\n-                }\n-                Ok(actual) => {\n-                    let move_buf = buf;\n-                    buf = &mut move_buf[(actual as usize)..];\n-                }\n-            }\n-        }\n+        unsafe { zx_cprng_draw(v.as_mut_ptr(), v.len()) }\n     }\n }"}]}