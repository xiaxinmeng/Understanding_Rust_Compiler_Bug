{"sha": "f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NWU2OTUzZDc2ZDg4NmJiNjQ5ZmZkODBmMWUxOWNlMmUxYmZlZGE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-01T10:50:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-01T10:50:19Z"}, "message": "Rollup merge of #79527 - jyn514:intra-doc-tests, r=Manishearth\n\nMove intra-doc link tests into a subdirectory\n\nThey were starting to get unwieldy.\n\nr? ``@Manishearth``", "tree": {"sha": "99cbae861d7383107f2a02e8423e2d2cfc78b56d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99cbae861d7383107f2a02e8423e2d2cfc78b56d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfxh/sCRBK7hj4Ov3rIwAAdHIIAJ8o5rqJ+BdBCX6IX9DWghSu\nh+ZGZCYZMbD3lBCOgp+N3K6WvcHMSGKFqcbqCiFTH7CLSrIQrbC5O+Y3enuOz9rZ\nu/QLlwMZrViNttmGgJt5NoA+9Ai6Q41u6/OW9BDON0/++KIsdRVaOEaiQObjKanP\nKpEJQqXLgWXvzuQJu6xgNngj6Ml4F8ueQpFHlTdoBEdLJSKTupuBUKXTFZwuwidM\nsG7wiFEI2gVQ7mop4Bti8oiFr7CP5xHx9ohurRptZKL4Ju4/zROpODUnFpkfYLVX\n+eETWl2QxIUU2KfJ6y2MSNu8B1ue8y76UVwjr1OmeHxAaYqlv2atOvyJKZ+bV8g=\n=rnfE\n-----END PGP SIGNATURE-----\n", "payload": "tree 99cbae861d7383107f2a02e8423e2d2cfc78b56d\nparent 99e075ff293f56376a3ad27d7fcb038d0e2b5595\nparent 872acb0c3589450a10f6fec97cd1a781e2d17794\nauthor Mara Bos <m-ou.se@m-ou.se> 1606819819 +0000\ncommitter GitHub <noreply@github.com> 1606819819 +0000\n\nRollup merge of #79527 - jyn514:intra-doc-tests, r=Manishearth\n\nMove intra-doc link tests into a subdirectory\n\nThey were starting to get unwieldy.\n\nr? ``@Manishearth``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "html_url": "https://github.com/rust-lang/rust/commit/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99e075ff293f56376a3ad27d7fcb038d0e2b5595", "url": "https://api.github.com/repos/rust-lang/rust/commits/99e075ff293f56376a3ad27d7fcb038d0e2b5595", "html_url": "https://github.com/rust-lang/rust/commit/99e075ff293f56376a3ad27d7fcb038d0e2b5595"}, {"sha": "872acb0c3589450a10f6fec97cd1a781e2d17794", "url": "https://api.github.com/repos/rust-lang/rust/commits/872acb0c3589450a10f6fec97cd1a781e2d17794", "html_url": "https://github.com/rust-lang/rust/commit/872acb0c3589450a10f6fec97cd1a781e2d17794"}], "stats": {"total": 739, "additions": 352, "deletions": 387}, "files": [{"sha": "1df50322a0732a3f39108ffff931a2c21b7fbdfa", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -688,38 +688,6 @@ impl Step for RustdocJSNotStd {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n-pub struct RustdocUi {\n-    pub target: TargetSelection,\n-    pub compiler: Compiler,\n-}\n-\n-impl Step for RustdocUi {\n-    type Output = ();\n-    const DEFAULT: bool = true;\n-    const ONLY_HOSTS: bool = true;\n-\n-    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/test/rustdoc-ui\")\n-    }\n-\n-    fn make_run(run: RunConfig<'_>) {\n-        let compiler = run.builder.compiler(run.builder.top_stage, run.build_triple());\n-        run.builder.ensure(RustdocUi { target: run.target, compiler });\n-    }\n-\n-    fn run(self, builder: &Builder<'_>) {\n-        builder.ensure(Compiletest {\n-            compiler: self.compiler,\n-            target: self.target,\n-            mode: \"ui\",\n-            suite: \"rustdoc-ui\",\n-            path: \"src/test/rustdoc-ui\",\n-            compare_mode: None,\n-        })\n-    }\n-}\n-\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Tidy;\n \n@@ -934,6 +902,7 @@ default_test!(Debuginfo { path: \"src/test/debuginfo\", mode: \"debuginfo\", suite:\n host_test!(UiFullDeps { path: \"src/test/ui-fulldeps\", mode: \"ui\", suite: \"ui-fulldeps\" });\n \n host_test!(Rustdoc { path: \"src/test/rustdoc\", mode: \"rustdoc\", suite: \"rustdoc\" });\n+host_test!(RustdocUi { path: \"src/test/rustdoc-ui\", mode: \"ui\", suite: \"rustdoc-ui\" });\n \n host_test!(Pretty { path: \"src/test/pretty\", mode: \"pretty\", suite: \"pretty\" });\n "}, {"sha": "2bcabdffb3d93dfef806d4f55e8ca87de97a1fa7", "filename": "src/test/rustdoc-ui/.gitattributes", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc-ui%2F.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc-ui%2F.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2F.gitattributes?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1 +0,0 @@\n-intra-links-warning-crlf.rs eol=crlf"}, {"sha": "6c125fac52f5e285021902d19dd727fa3ea0ca93", "filename": "src/test/rustdoc-ui/intra-doc/.gitattributes", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2F.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2F.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2F.gitattributes?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1 @@\n+warning-crlf.rs eol=crlf"}, {"sha": "c053e378e7147f5c53b6b54c13662108dc0e4826", "filename": "src/test/rustdoc-ui/intra-doc/alias-ice.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-doc-alias-ice.rs"}, {"sha": "3db5fad4cfbdcf062cdf3d3a091e332317280f6a", "filename": "src/test/rustdoc-ui/intra-doc/alias-ice.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,11 +1,11 @@\n error: unresolved link to `TypeAlias::hoge`\n-  --> $DIR/intra-doc-alias-ice.rs:5:30\n+  --> $DIR/alias-ice.rs:5:30\n    |\n LL | /// [broken cross-reference](TypeAlias::hoge)\n    |                              ^^^^^^^^^^^^^^^ the type alias `TypeAlias` has no associated item named `hoge`\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-doc-alias-ice.rs:1:9\n+  --> $DIR/alias-ice.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/rustdoc-ui/intra-doc-alias-ice.stderr"}, {"sha": "f63435337cfbcaed8da4705a1b314460da85e75d", "filename": "src/test/rustdoc-ui/intra-doc/ambiguity.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-links-ambiguity.rs"}, {"sha": "7e967dc88bcdd018e18a6c91133a17ef8cad9073", "filename": "src/test/rustdoc-ui/intra-doc/ambiguity.stderr", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,11 +1,11 @@\n error: `true` is both a module and a builtin type\n-  --> $DIR/intra-links-ambiguity.rs:38:6\n+  --> $DIR/ambiguity.rs:38:6\n    |\n LL | /// [true]\n    |      ^^^^ ambiguous link\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-links-ambiguity.rs:1:9\n+  --> $DIR/ambiguity.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n@@ -19,7 +19,7 @@ LL | /// [prim@true]\n    |      ^^^^^^^^^\n \n error: `ambiguous` is both a struct and a function\n-  --> $DIR/intra-links-ambiguity.rs:27:6\n+  --> $DIR/ambiguity.rs:27:6\n    |\n LL | /// [`ambiguous`] is ambiguous.\n    |      ^^^^^^^^^^^ ambiguous link\n@@ -34,7 +34,7 @@ LL | /// [`ambiguous()`] is ambiguous.\n    |      ^^^^^^^^^^^^^\n \n error: `ambiguous` is both a struct and a function\n-  --> $DIR/intra-links-ambiguity.rs:29:6\n+  --> $DIR/ambiguity.rs:29:6\n    |\n LL | /// [ambiguous] is ambiguous.\n    |      ^^^^^^^^^ ambiguous link\n@@ -49,7 +49,7 @@ LL | /// [ambiguous()] is ambiguous.\n    |      ^^^^^^^^^^^\n \n error: `multi_conflict` is a struct, a function, and a macro\n-  --> $DIR/intra-links-ambiguity.rs:31:6\n+  --> $DIR/ambiguity.rs:31:6\n    |\n LL | /// [`multi_conflict`] is a three-way conflict.\n    |      ^^^^^^^^^^^^^^^^ ambiguous link\n@@ -68,7 +68,7 @@ LL | /// [`multi_conflict!`] is a three-way conflict.\n    |      ^^^^^^^^^^^^^^^^^\n \n error: `type_and_value` is both a module and a constant\n-  --> $DIR/intra-links-ambiguity.rs:33:16\n+  --> $DIR/ambiguity.rs:33:16\n    |\n LL | /// Ambiguous [type_and_value].\n    |                ^^^^^^^^^^^^^^ ambiguous link\n@@ -83,7 +83,7 @@ LL | /// Ambiguous [const@type_and_value].\n    |                ^^^^^^^^^^^^^^^^^^^^\n \n error: `foo::bar` is both an enum and a function\n-  --> $DIR/intra-links-ambiguity.rs:35:42\n+  --> $DIR/ambiguity.rs:35:42\n    |\n LL | /// Ambiguous non-implied shortcut link [`foo::bar`].\n    |                                          ^^^^^^^^^^ ambiguous link", "previous_filename": "src/test/rustdoc-ui/intra-links-ambiguity.stderr"}, {"sha": "ccefd2e6fabb5edb7fdb7f0deb2118f7f3a241ac", "filename": "src/test/rustdoc-ui/intra-doc/anchors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-links-anchors.rs"}, {"sha": "5b272d960d50f4546f8a36614e91d171998c5e5e", "filename": "src/test/rustdoc-ui/intra-doc/anchors.stderr", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,29 +1,29 @@\n error: `Foo::f#hola` contains an anchor, but links to fields are already anchored\n-  --> $DIR/intra-links-anchors.rs:25:15\n+  --> $DIR/anchors.rs:25:15\n    |\n LL | /// Or maybe [Foo::f#hola].\n    |               ^^^^^^^^^^^ contains invalid anchor\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-links-anchors.rs:1:9\n+  --> $DIR/anchors.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: `hello#people#!` contains multiple anchors\n-  --> $DIR/intra-links-anchors.rs:31:28\n+  --> $DIR/anchors.rs:31:28\n    |\n LL | /// Another anchor error: [hello#people#!].\n    |                            ^^^^^^^^^^^^^^ contains invalid anchor\n \n error: `Enum::A#whatever` contains an anchor, but links to variants are already anchored\n-  --> $DIR/intra-links-anchors.rs:37:28\n+  --> $DIR/anchors.rs:37:28\n    |\n LL | /// Damn enum's variants: [Enum::A#whatever].\n    |                            ^^^^^^^^^^^^^^^^ contains invalid anchor\n \n error: `u32#hello` contains an anchor, but links to builtin types are already anchored\n-  --> $DIR/intra-links-anchors.rs:43:6\n+  --> $DIR/anchors.rs:43:6\n    |\n LL | /// [u32#hello]\n    |      ^^^^^^^^^ contains invalid anchor", "previous_filename": "src/test/rustdoc-ui/intra-links-anchors.stderr"}, {"sha": "31a8310d472423bd1ef7001bf523185fdbfdab8c", "filename": "src/test/rustdoc-ui/intra-doc/auxiliary/intra-doc-broken.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fintra-doc-broken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fintra-doc-broken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Fintra-doc-broken.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/auxiliary/intra-doc-broken.rs"}, {"sha": "ef261359ebd9ec4506cf670fa77bb6290dd87db5", "filename": "src/test/rustdoc-ui/intra-doc/broken-reexport.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fbroken-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fbroken-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fbroken-reexport.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-doc-broken-reexport.rs"}, {"sha": "b9c8e033b1b21002ceb70070deeb30b5b991a5c7", "filename": "src/test/rustdoc-ui/intra-doc/disambiguator-mismatch.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-links-disambiguator-mismatch.rs"}, {"sha": "2f5f3daa297858f5a8155b68a809a2a3a13f84ee", "filename": "src/test/rustdoc-ui/intra-doc/disambiguator-mismatch.stderr", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,90 +1,90 @@\n error: incompatible link kind for `S`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:14:14\n+  --> $DIR/disambiguator-mismatch.rs:14:14\n    |\n LL | /// Link to [struct@S]\n    |              ^^^^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:1:9\n+  --> $DIR/disambiguator-mismatch.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    = note: this link resolved to an enum, which is not a struct\n \n error: incompatible link kind for `S`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:19:14\n+  --> $DIR/disambiguator-mismatch.rs:19:14\n    |\n LL | /// Link to [mod@S]\n    |              ^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a module\n \n error: incompatible link kind for `S`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:24:14\n+  --> $DIR/disambiguator-mismatch.rs:24:14\n    |\n LL | /// Link to [union@S]\n    |              ^^^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a union\n \n error: incompatible link kind for `S`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:29:14\n+  --> $DIR/disambiguator-mismatch.rs:29:14\n    |\n LL | /// Link to [trait@S]\n    |              ^^^^^^^ help: to link to the enum, prefix with `enum@`: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a trait\n \n error: incompatible link kind for `T`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:34:14\n+  --> $DIR/disambiguator-mismatch.rs:34:14\n    |\n LL | /// Link to [struct@T]\n    |              ^^^^^^^^ help: to link to the trait, prefix with `trait@`: `trait@T`\n    |\n    = note: this link resolved to a trait, which is not a struct\n \n error: incompatible link kind for `m`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:39:14\n+  --> $DIR/disambiguator-mismatch.rs:39:14\n    |\n LL | /// Link to [derive@m]\n    |              ^^^^^^^^ help: to link to the macro, add an exclamation mark: `m!`\n    |\n    = note: this link resolved to a macro, which is not a derive macro\n \n error: incompatible link kind for `s`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:44:14\n+  --> $DIR/disambiguator-mismatch.rs:44:14\n    |\n LL | /// Link to [const@s]\n    |              ^^^^^^^ help: to link to the static, prefix with `static@`: `static@s`\n    |\n    = note: this link resolved to a static, which is not a constant\n \n error: incompatible link kind for `c`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:49:14\n+  --> $DIR/disambiguator-mismatch.rs:49:14\n    |\n LL | /// Link to [static@c]\n    |              ^^^^^^^^ help: to link to the constant, prefix with `const@`: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a static\n \n error: incompatible link kind for `c`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:54:14\n+  --> $DIR/disambiguator-mismatch.rs:54:14\n    |\n LL | /// Link to [fn@c]\n    |              ^^^^ help: to link to the constant, prefix with `const@`: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a function\n \n error: incompatible link kind for `c`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:59:14\n+  --> $DIR/disambiguator-mismatch.rs:59:14\n    |\n LL | /// Link to [c()]\n    |              ^^^ help: to link to the constant, prefix with `const@`: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a function\n \n error: incompatible link kind for `f`\n-  --> $DIR/intra-links-disambiguator-mismatch.rs:64:14\n+  --> $DIR/disambiguator-mismatch.rs:64:14\n    |\n LL | /// Link to [const@f]\n    |              ^^^^^^^ help: to link to the function, add parentheses: `f()`", "previous_filename": "src/test/rustdoc-ui/intra-links-disambiguator-mismatch.stderr"}, {"sha": "a01211c4f32b1b8479e37c37cf476be43a6c1339", "filename": "src/test/rustdoc-ui/intra-doc/double-anchor.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-link-double-anchor.rs"}, {"sha": "1cd9231eded4ded44db7856539492790afe167c3", "filename": "src/test/rustdoc-ui/intra-doc/double-anchor.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,5 +1,5 @@\n warning: `with#anchor#error` contains multiple anchors\n-  --> $DIR/intra-link-double-anchor.rs:5:18\n+  --> $DIR/double-anchor.rs:5:18\n    |\n LL | /// docs [label][with#anchor#error]\n    |                  ^^^^^^^^^^^^^^^^^ contains invalid anchor", "previous_filename": "src/test/rustdoc-ui/intra-link-double-anchor.stderr"}, {"sha": "81e42643ae8fc5e6b70bf8554fab26f530fa3499", "filename": "src/test/rustdoc-ui/intra-doc/errors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-link-errors.rs"}, {"sha": "21c806108e3af1db5c6e1e3bd42039d37e569913", "filename": "src/test/rustdoc-ui/intra-doc/errors.stderr", "status": "renamed", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,95 +1,95 @@\n error: unresolved link to `path::to::nonexistent::module`\n-  --> $DIR/intra-link-errors.rs:7:6\n+  --> $DIR/errors.rs:7:6\n    |\n LL | /// [path::to::nonexistent::module]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no item named `path` in scope\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-link-errors.rs:1:9\n+  --> $DIR/errors.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: unresolved link to `path::to::nonexistent::macro`\n-  --> $DIR/intra-link-errors.rs:11:6\n+  --> $DIR/errors.rs:11:6\n    |\n LL | /// [path::to::nonexistent::macro!]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no item named `path` in scope\n \n error: unresolved link to `path::to::nonexistent::type`\n-  --> $DIR/intra-link-errors.rs:15:6\n+  --> $DIR/errors.rs:15:6\n    |\n LL | /// [type@path::to::nonexistent::type]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no item named `path` in scope\n \n error: unresolved link to `std::io::not::here`\n-  --> $DIR/intra-link-errors.rs:19:6\n+  --> $DIR/errors.rs:19:6\n    |\n LL | /// [std::io::not::here]\n    |      ^^^^^^^^^^^^^^^^^^ no item named `not` in module `io`\n \n error: unresolved link to `std::io::not::here`\n-  --> $DIR/intra-link-errors.rs:23:6\n+  --> $DIR/errors.rs:23:6\n    |\n LL | /// [type@std::io::not::here]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^ no item named `not` in module `io`\n \n error: unresolved link to `std::io::Error::x`\n-  --> $DIR/intra-link-errors.rs:27:6\n+  --> $DIR/errors.rs:27:6\n    |\n LL | /// [std::io::Error::x]\n    |      ^^^^^^^^^^^^^^^^^ the struct `Error` has no field or associated item named `x`\n \n error: unresolved link to `std::io::ErrorKind::x`\n-  --> $DIR/intra-link-errors.rs:31:6\n+  --> $DIR/errors.rs:31:6\n    |\n LL | /// [std::io::ErrorKind::x]\n    |      ^^^^^^^^^^^^^^^^^^^^^ the enum `ErrorKind` has no variant or associated item named `x`\n \n error: unresolved link to `f::A`\n-  --> $DIR/intra-link-errors.rs:35:6\n+  --> $DIR/errors.rs:35:6\n    |\n LL | /// [f::A]\n    |      ^^^^ `f` is a function, not a module or type, and cannot have associated items\n \n error: unresolved link to `f::A`\n-  --> $DIR/intra-link-errors.rs:39:6\n+  --> $DIR/errors.rs:39:6\n    |\n LL | /// [f::A!]\n    |      ^^^^^ `f` is a function, not a module or type, and cannot have associated items\n \n error: unresolved link to `S::A`\n-  --> $DIR/intra-link-errors.rs:43:6\n+  --> $DIR/errors.rs:43:6\n    |\n LL | /// [S::A]\n    |      ^^^^ the struct `S` has no field or associated item named `A`\n \n error: unresolved link to `S::fmt`\n-  --> $DIR/intra-link-errors.rs:47:6\n+  --> $DIR/errors.rs:47:6\n    |\n LL | /// [S::fmt]\n    |      ^^^^^^ the struct `S` has no field or associated item named `fmt`\n \n error: unresolved link to `E::D`\n-  --> $DIR/intra-link-errors.rs:51:6\n+  --> $DIR/errors.rs:51:6\n    |\n LL | /// [E::D]\n    |      ^^^^ the enum `E` has no variant or associated item named `D`\n \n error: unresolved link to `u8::not_found`\n-  --> $DIR/intra-link-errors.rs:55:6\n+  --> $DIR/errors.rs:55:6\n    |\n LL | /// [u8::not_found]\n    |      ^^^^^^^^^^^^^ the builtin type `u8` has no associated item named `not_found`\n \n error: unresolved link to `std::primitive::u8::not_found`\n-  --> $DIR/intra-link-errors.rs:59:6\n+  --> $DIR/errors.rs:59:6\n    |\n LL | /// [std::primitive::u8::not_found]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the builtin type `u8` has no associated item named `not_found`\n \n error: unresolved link to `Vec::into_iter`\n-  --> $DIR/intra-link-errors.rs:63:6\n+  --> $DIR/errors.rs:63:6\n    |\n LL | /// [type@Vec::into_iter]\n    |      ^^^^^^^^^^^^^^^^^^^\n@@ -98,7 +98,7 @@ LL | /// [type@Vec::into_iter]\n    |      help: to link to the associated function, add parentheses: `Vec::into_iter()`\n \n error: unresolved link to `S`\n-  --> $DIR/intra-link-errors.rs:68:6\n+  --> $DIR/errors.rs:68:6\n    |\n LL | /// [S!]\n    |      ^^\n@@ -107,7 +107,7 @@ LL | /// [S!]\n    |      help: to link to the struct, prefix with `struct@`: `struct@S`\n \n error: unresolved link to `S::h`\n-  --> $DIR/intra-link-errors.rs:78:6\n+  --> $DIR/errors.rs:78:6\n    |\n LL | /// [type@S::h]\n    |      ^^^^^^^^^\n@@ -116,7 +116,7 @@ LL | /// [type@S::h]\n    |      help: to link to the associated function, add parentheses: `S::h()`\n \n error: unresolved link to `T::g`\n-  --> $DIR/intra-link-errors.rs:86:6\n+  --> $DIR/errors.rs:86:6\n    |\n LL | /// [type@T::g]\n    |      ^^^^^^^^^\n@@ -125,13 +125,13 @@ LL | /// [type@T::g]\n    |      help: to link to the associated function, add parentheses: `T::g()`\n \n error: unresolved link to `T::h`\n-  --> $DIR/intra-link-errors.rs:91:6\n+  --> $DIR/errors.rs:91:6\n    |\n LL | /// [T::h!]\n    |      ^^^^^ the trait `T` has no macro named `h`\n \n error: unresolved link to `m`\n-  --> $DIR/intra-link-errors.rs:98:6\n+  --> $DIR/errors.rs:98:6\n    |\n LL | /// [m()]\n    |      ^^^", "previous_filename": "src/test/rustdoc-ui/intra-link-errors.stderr"}, {"sha": "9c54092146fef61753e436cd8e55f7b9c45e1a16", "filename": "src/test/rustdoc-ui/intra-doc/malformed-generics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-link-malformed-generics.rs"}, {"sha": "2e1b22807bc39d6cefff8589858b436f1500254b", "filename": "src/test/rustdoc-ui/intra-doc/malformed-generics.stderr", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,97 +1,97 @@\n error: unresolved link to `Vec<`\n-  --> $DIR/intra-link-malformed-generics.rs:3:6\n+  --> $DIR/malformed-generics.rs:3:6\n    |\n LL | //! [Vec<]\n    |      ^^^^ unbalanced angle brackets\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-link-malformed-generics.rs:1:9\n+  --> $DIR/malformed-generics.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: unresolved link to `Vec<Box<T`\n-  --> $DIR/intra-link-malformed-generics.rs:4:6\n+  --> $DIR/malformed-generics.rs:4:6\n    |\n LL | //! [Vec<Box<T]\n    |      ^^^^^^^^^ unbalanced angle brackets\n \n error: unresolved link to `Vec<Box<T>`\n-  --> $DIR/intra-link-malformed-generics.rs:5:6\n+  --> $DIR/malformed-generics.rs:5:6\n    |\n LL | //! [Vec<Box<T>]\n    |      ^^^^^^^^^^ unbalanced angle brackets\n \n error: unresolved link to `Vec<Box<T>>>`\n-  --> $DIR/intra-link-malformed-generics.rs:6:6\n+  --> $DIR/malformed-generics.rs:6:6\n    |\n LL | //! [Vec<Box<T>>>]\n    |      ^^^^^^^^^^^^ unbalanced angle brackets\n \n error: unresolved link to `Vec<T>>>`\n-  --> $DIR/intra-link-malformed-generics.rs:7:6\n+  --> $DIR/malformed-generics.rs:7:6\n    |\n LL | //! [Vec<T>>>]\n    |      ^^^^^^^^ unbalanced angle brackets\n \n error: unresolved link to `<Vec`\n-  --> $DIR/intra-link-malformed-generics.rs:8:6\n+  --> $DIR/malformed-generics.rs:8:6\n    |\n LL | //! [<Vec]\n    |      ^^^^ unbalanced angle brackets\n \n error: unresolved link to `Vec::<`\n-  --> $DIR/intra-link-malformed-generics.rs:9:6\n+  --> $DIR/malformed-generics.rs:9:6\n    |\n LL | //! [Vec::<]\n    |      ^^^^^^ unbalanced angle brackets\n \n error: unresolved link to `<T>`\n-  --> $DIR/intra-link-malformed-generics.rs:10:6\n+  --> $DIR/malformed-generics.rs:10:6\n    |\n LL | //! [<T>]\n    |      ^^^ missing type for generic parameters\n \n error: unresolved link to `<invalid syntax>`\n-  --> $DIR/intra-link-malformed-generics.rs:11:6\n+  --> $DIR/malformed-generics.rs:11:6\n    |\n LL | //! [<invalid syntax>]\n    |      ^^^^^^^^^^^^^^^^ missing type for generic parameters\n \n error: unresolved link to `Vec:<T>:new`\n-  --> $DIR/intra-link-malformed-generics.rs:12:6\n+  --> $DIR/malformed-generics.rs:12:6\n    |\n LL | //! [Vec:<T>:new()]\n    |      ^^^^^^^^^^^^^ has invalid path separator\n \n error: unresolved link to `Vec<<T>>`\n-  --> $DIR/intra-link-malformed-generics.rs:13:6\n+  --> $DIR/malformed-generics.rs:13:6\n    |\n LL | //! [Vec<<T>>]\n    |      ^^^^^^^^ too many angle brackets\n \n error: unresolved link to `Vec<>`\n-  --> $DIR/intra-link-malformed-generics.rs:14:6\n+  --> $DIR/malformed-generics.rs:14:6\n    |\n LL | //! [Vec<>]\n    |      ^^^^^ empty angle brackets\n \n error: unresolved link to `Vec<<>>`\n-  --> $DIR/intra-link-malformed-generics.rs:15:6\n+  --> $DIR/malformed-generics.rs:15:6\n    |\n LL | //! [Vec<<>>]\n    |      ^^^^^^^ too many angle brackets\n \n error: unresolved link to `<Vec as IntoIterator>::into_iter`\n-  --> $DIR/intra-link-malformed-generics.rs:18:6\n+  --> $DIR/malformed-generics.rs:18:6\n    |\n LL | //! [<Vec as IntoIterator>::into_iter]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ fully-qualified syntax is unsupported\n    |\n    = note: see https://github.com/rust-lang/rust/issues/74563 for more information\n \n error: unresolved link to `<Vec<T> as IntoIterator>::iter`\n-  --> $DIR/intra-link-malformed-generics.rs:19:6\n+  --> $DIR/malformed-generics.rs:19:6\n    |\n LL | //! [<Vec<T> as IntoIterator>::iter]\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ fully-qualified syntax is unsupported", "previous_filename": "src/test/rustdoc-ui/intra-link-malformed-generics.stderr"}, {"sha": "85738ceae8e615b34eeedffa8a0ffb35d9e1b0ac", "filename": "src/test/rustdoc-ui/intra-doc/prim-conflict.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-link-prim-conflict.rs"}, {"sha": "01275f8d9afb0a6703cbc78956be74687a943260", "filename": "src/test/rustdoc-ui/intra-doc/prim-conflict.stderr", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,11 +1,11 @@\n error: `char` is both a module and a builtin type\n-  --> $DIR/intra-link-prim-conflict.rs:4:6\n+  --> $DIR/prim-conflict.rs:4:6\n    |\n LL | /// [char]\n    |      ^^^^ ambiguous link\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-link-prim-conflict.rs:1:9\n+  --> $DIR/prim-conflict.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n@@ -19,7 +19,7 @@ LL | /// [prim@char]\n    |      ^^^^^^^^^\n \n error: `char` is both a module and a builtin type\n-  --> $DIR/intra-link-prim-conflict.rs:10:6\n+  --> $DIR/prim-conflict.rs:10:6\n    |\n LL | /// [type@char]\n    |      ^^^^^^^^^ ambiguous link\n@@ -34,15 +34,15 @@ LL | /// [prim@char]\n    |      ^^^^^^^^^\n \n error: incompatible link kind for `char`\n-  --> $DIR/intra-link-prim-conflict.rs:19:6\n+  --> $DIR/prim-conflict.rs:19:6\n    |\n LL | /// [struct@char]\n    |      ^^^^^^^^^^^ help: to link to the module, prefix with `mod@`: `mod@char`\n    |\n    = note: this link resolved to a module, which is not a struct\n \n error: incompatible link kind for `char`\n-  --> $DIR/intra-link-prim-conflict.rs:26:10\n+  --> $DIR/prim-conflict.rs:26:10\n    |\n LL |     //! [struct@char]\n    |          ^^^^^^^^^^^ help: to link to the builtin type, prefix with `prim@`: `prim@char`", "previous_filename": "src/test/rustdoc-ui/intra-link-prim-conflict.stderr"}, {"sha": "6e11ec3e87bf9dc148fbc7dac103daff30a4cd50", "filename": "src/test/rustdoc-ui/intra-doc/private.private.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.private.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,5 +1,5 @@\n warning: public documentation for `DocMe` links to private item `DontDocMe`\n-  --> $DIR/intra-links-private.rs:5:11\n+  --> $DIR/private.rs:5:11\n    |\n LL | /// docs [DontDocMe]\n    |           ^^^^^^^^^ this item is private", "previous_filename": "src/test/rustdoc-ui/intra-links-private.private.stderr"}, {"sha": "3a6a4b664522a7addc5070585ae654885e101303", "filename": "src/test/rustdoc-ui/intra-doc/private.public.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.public.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,5 +1,5 @@\n warning: public documentation for `DocMe` links to private item `DontDocMe`\n-  --> $DIR/intra-links-private.rs:5:11\n+  --> $DIR/private.rs:5:11\n    |\n LL | /// docs [DontDocMe]\n    |           ^^^^^^^^^ this item is private", "previous_filename": "src/test/rustdoc-ui/intra-links-private.public.stderr"}, {"sha": "613236d75d2ee952e847f7ac23590a95509bfccd", "filename": "src/test/rustdoc-ui/intra-doc/private.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-links-private.rs"}, {"sha": "7764a6df6ee772b4aa578d8416af3323889605b7", "filename": "src/test/rustdoc-ui/intra-doc/span-ice-55723.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-link-span-ice-55723.rs"}, {"sha": "10ca14e850fd79fc16df84012e28967f2540babb", "filename": "src/test/rustdoc-ui/intra-doc/span-ice-55723.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,11 +1,11 @@\n error: unresolved link to `i`\n-  --> $DIR/intra-link-span-ice-55723.rs:9:10\n+  --> $DIR/span-ice-55723.rs:9:10\n    |\n LL | /// \uff08arr[i]\uff09\n    |           ^ no item named `i` in scope\n    |\n note: the lint level is defined here\n-  --> $DIR/intra-link-span-ice-55723.rs:1:9\n+  --> $DIR/span-ice-55723.rs:1:9\n    |\n LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/rustdoc-ui/intra-link-span-ice-55723.stderr"}, {"sha": "a19c33b53be09673b8f24197a2ab001812800f13", "filename": "src/test/rustdoc-ui/intra-doc/warning-crlf.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-links-warning-crlf.rs"}, {"sha": "01e428200376691d90f1787b1c8d3dd8a9ef6dfb", "filename": "src/test/rustdoc-ui/intra-doc/warning-crlf.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,5 +1,5 @@\n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning-crlf.rs:7:6\n+  --> $DIR/warning-crlf.rs:7:6\n    |\n LL | /// [error]\n    |      ^^^^^ no item named `error` in scope\n@@ -8,23 +8,23 @@ LL | /// [error]\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error1`\n-  --> $DIR/intra-links-warning-crlf.rs:12:11\n+  --> $DIR/warning-crlf.rs:12:11\n    |\n LL | /// docs [error1]\n    |           ^^^^^^ no item named `error1` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error2`\n-  --> $DIR/intra-links-warning-crlf.rs:15:11\n+  --> $DIR/warning-crlf.rs:15:11\n    |\n LL | /// docs [error2]\n    |           ^^^^^^ no item named `error2` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning-crlf.rs:23:20\n+  --> $DIR/warning-crlf.rs:23:20\n    |\n LL |  * It also has an [error].\n    |                    ^^^^^ no item named `error` in scope", "previous_filename": "src/test/rustdoc-ui/intra-links-warning-crlf.stderr"}, {"sha": "eab1f03480460b2d05d9c722a44aaa41085805bc", "filename": "src/test/rustdoc-ui/intra-doc/warning.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc-ui/intra-links-warning.rs"}, {"sha": "430d18165a005601c98fbbe875fb1bfd7c8f35d5", "filename": "src/test/rustdoc-ui/intra-doc/warning.stderr", "status": "renamed", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,75 +1,75 @@\n warning: unresolved link to `Foo::baz`\n-  --> $DIR/intra-links-warning.rs:3:23\n+  --> $DIR/warning.rs:3:23\n    |\n LL |        //! Test with [Foo::baz], [Bar::foo], ...\n    |                       ^^^^^^^^ the struct `Foo` has no field or associated item named `baz`\n    |\n    = note: `#[warn(broken_intra_doc_links)]` on by default\n \n warning: unresolved link to `Bar::foo`\n-  --> $DIR/intra-links-warning.rs:3:35\n+  --> $DIR/warning.rs:3:35\n    |\n LL |        //! Test with [Foo::baz], [Bar::foo], ...\n    |                                   ^^^^^^^^ no item named `Bar` in scope\n \n warning: unresolved link to `Uniooon::X`\n-  --> $DIR/intra-links-warning.rs:6:13\n+  --> $DIR/warning.rs:6:13\n    |\n LL |      //! , [Uniooon::X] and [Qux::Z].\n    |             ^^^^^^^^^^ no item named `Uniooon` in scope\n \n warning: unresolved link to `Qux::Z`\n-  --> $DIR/intra-links-warning.rs:6:30\n+  --> $DIR/warning.rs:6:30\n    |\n LL |      //! , [Uniooon::X] and [Qux::Z].\n    |                              ^^^^^^ no item named `Qux` in scope\n \n warning: unresolved link to `Uniooon::X`\n-  --> $DIR/intra-links-warning.rs:10:14\n+  --> $DIR/warning.rs:10:14\n    |\n LL |       //! , [Uniooon::X] and [Qux::Z].\n    |              ^^^^^^^^^^ no item named `Uniooon` in scope\n \n warning: unresolved link to `Qux::Z`\n-  --> $DIR/intra-links-warning.rs:10:31\n+  --> $DIR/warning.rs:10:31\n    |\n LL |       //! , [Uniooon::X] and [Qux::Z].\n    |                               ^^^^^^ no item named `Qux` in scope\n \n warning: unresolved link to `Qux:Y`\n-  --> $DIR/intra-links-warning.rs:14:13\n+  --> $DIR/warning.rs:14:13\n    |\n LL |        /// [Qux:Y]\n    |             ^^^^^ no item named `Qux:Y` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `BarA`\n-  --> $DIR/intra-links-warning.rs:21:10\n+  --> $DIR/warning.rs:21:10\n    |\n LL | /// bar [BarA] bar\n    |          ^^^^ no item named `BarA` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `BarB`\n-  --> $DIR/intra-links-warning.rs:27:9\n+  --> $DIR/warning.rs:27:9\n    |\n LL |  * bar [BarB] bar\n    |         ^^^^ no item named `BarB` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `BarC`\n-  --> $DIR/intra-links-warning.rs:34:6\n+  --> $DIR/warning.rs:34:6\n    |\n LL | bar [BarC] bar\n    |      ^^^^ no item named `BarC` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `BarD`\n-  --> $DIR/intra-links-warning.rs:45:1\n+  --> $DIR/warning.rs:45:1\n    |\n LL | #[doc = \"Foo\\nbar [BarD] bar\\nbaz\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -82,7 +82,7 @@ LL | #[doc = \"Foo\\nbar [BarD] bar\\nbaz\"]\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `BarF`\n-  --> $DIR/intra-links-warning.rs:50:9\n+  --> $DIR/warning.rs:50:9\n    |\n LL |         #[doc = $f]\n    |         ^^^^^^^^^^^\n@@ -99,23 +99,23 @@ LL | f!(\"Foo\\nbar [BarF] bar\\nbaz\");\n    = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning.rs:58:30\n+  --> $DIR/warning.rs:58:30\n    |\n LL |  * time to introduce a link [error]*/\n    |                              ^^^^^ no item named `error` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning.rs:64:30\n+  --> $DIR/warning.rs:64:30\n    |\n LL |  * time to introduce a link [error]\n    |                              ^^^^^ no item named `error` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning.rs:68:1\n+  --> $DIR/warning.rs:68:1\n    |\n LL | #[doc = \"single line [error]\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -128,7 +128,7 @@ LL | #[doc = \"single line [error]\"]\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning.rs:71:1\n+  --> $DIR/warning.rs:71:1\n    |\n LL | #[doc = \"single line with \\\"escaping\\\" [error]\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -141,7 +141,7 @@ LL | #[doc = \"single line with \\\"escaping\\\" [error]\"]\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error`\n-  --> $DIR/intra-links-warning.rs:74:1\n+  --> $DIR/warning.rs:74:1\n    |\n LL | / /// Item docs.\n LL | | #[doc=\"Hello there!\"]\n@@ -156,15 +156,15 @@ LL | | /// [error]\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error1`\n-  --> $DIR/intra-links-warning.rs:80:11\n+  --> $DIR/warning.rs:80:11\n    |\n LL | /// docs [error1]\n    |           ^^^^^^ no item named `error1` in scope\n    |\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error2`\n-  --> $DIR/intra-links-warning.rs:82:11\n+  --> $DIR/warning.rs:82:11\n    |\n LL | /// docs [error2]\n    |           ^^^^^^ no item named `error2` in scope", "previous_filename": "src/test/rustdoc-ui/intra-links-warning.stderr"}, {"sha": "bd733e1023033963bcfc483e17ab37884f19d654", "filename": "src/test/rustdoc/intra-doc-link-mod-ambiguity.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,18 +0,0 @@\n-// ignore-tidy-linelength\n-\n-#![deny(broken_intra_doc_links)]\n-\n-\n-pub fn foo() {\n-\n-}\n-\n-pub mod foo {}\n-// @has intra_doc_link_mod_ambiguity/struct.A.html '//a/@href' '../intra_doc_link_mod_ambiguity/foo/index.html'\n-/// Module is [`module@foo`]\n-pub struct A;\n-\n-\n-// @has intra_doc_link_mod_ambiguity/struct.B.html '//a/@href' '../intra_doc_link_mod_ambiguity/fn.foo.html'\n-/// Function is [`fn@foo`]\n-pub struct B;"}, {"sha": "e4f0c737bdd3312be648ff318704194405ee7574", "filename": "src/test/rustdoc/intra-doc/anchors.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fanchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fanchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fanchors.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -3,8 +3,8 @@\n /// # Anchor!\n pub struct Something;\n \n-// @has intra_links_anchors/struct.SomeOtherType.html\n-// @has - '//a/@href' '../intra_links_anchors/struct.Something.html#Anchor!'\n+// @has anchors/struct.SomeOtherType.html\n+// @has - '//a/@href' '../anchors/struct.Something.html#Anchor!'\n \n /// I want...\n ///", "previous_filename": "src/test/rustdoc/intra-links-anchors.rs"}, {"sha": "f99d9b5baea4421108217cfc613eb10e001bd728", "filename": "src/test/rustdoc/intra-doc/associated-defaults.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,27 @@\n+// ignore-tidy-linelength\n+#![deny(intra_doc_link_resolution_failure)]\n+#![feature(associated_type_defaults)]\n+\n+pub trait TraitWithDefault {\n+    type T = usize;\n+    fn f() -> Self::T {\n+        0\n+    }\n+}\n+\n+/// Link to [UsesDefaults::T] and [UsesDefaults::f]\n+// @has 'associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../associated_defaults/struct.UsesDefaults.html#associatedtype.T\"]' 'UsesDefaults::T'\n+// @has 'associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../associated_defaults/struct.UsesDefaults.html#method.f\"]' 'UsesDefaults::f'\n+pub struct UsesDefaults;\n+impl TraitWithDefault for UsesDefaults {}\n+\n+/// Link to [OverridesDefaults::T] and [OverridesDefaults::f]\n+// @has 'associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../associated_defaults/struct.OverridesDefaults.html#associatedtype.T\"]' 'OverridesDefaults::T'\n+// @has 'associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../associated_defaults/struct.OverridesDefaults.html#method.f\"]' 'OverridesDefaults::f'\n+pub struct OverridesDefaults;\n+impl TraitWithDefault for OverridesDefaults {\n+    type T = bool;\n+    fn f() -> bool {\n+        true\n+    }\n+}"}, {"sha": "09dfbfcf68a32f1c45a448a4512f3d32fe676917", "filename": "src/test/rustdoc/intra-doc/associated-items.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,61 @@\n+// ignore-tidy-linelength\n+#![deny(intra_doc_link_resolution_failure)]\n+\n+/// [`std::collections::BTreeMap::into_iter`]\n+/// [`String::from`] is ambiguous as to which `From` impl\n+/// [Vec::into_iter()] uses a disambiguator\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html#method.into_iter\"]' 'std::collections::BTreeMap::into_iter'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html#method.from\"]' 'String::from'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.into_iter\"]' 'Vec::into_iter'\n+pub fn foo() {}\n+\n+/// Link to [MyStruct], [link from struct][MyStruct::method], [MyStruct::clone], [MyStruct::Input]\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html\"]' 'MyStruct'\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#method.method\"]' 'link from struct'\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#method.clone\"]' 'MyStruct::clone'\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#associatedtype.Input\"]' 'MyStruct::Input'\n+pub struct MyStruct { foo: () }\n+\n+impl Clone for MyStruct {\n+    fn clone(&self) -> Self {\n+        MyStruct\n+    }\n+}\n+\n+pub trait T {\n+    type Input;\n+    fn method(i: Self::Input);\n+}\n+\n+impl T for MyStruct {\n+    type Input = usize;\n+\n+    /// [link from method][MyStruct::method] on method\n+    // @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#method.method\"]' 'link from method'\n+    fn method(i: usize) {\n+    }\n+}\n+\n+/// Ambiguity between which trait to use\n+pub trait T1 {\n+    fn ambiguous_method();\n+}\n+\n+pub trait T2 {\n+    fn ambiguous_method();\n+}\n+\n+/// Link to [S::ambiguous_method]\n+// FIXME: there is no way to disambiguate these.\n+// Since we have `#[deny(intra_doc_failure)]`, we still know it was one or the other.\n+pub struct S;\n+\n+impl T1 for S {\n+    fn ambiguous_method() {}\n+}\n+\n+impl T2 for S {\n+    fn ambiguous_method() {}\n+}\n+\n+fn main() {}"}, {"sha": "db3bb38ada0da9bda76e35202fd4fe0931e0557a", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-link-extern-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-extern-crate.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-extern-crate.rs"}, {"sha": "a4db2ffc445f8f9562681bd7cecd275c9a83c78e", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-link-pub-use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-pub-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-pub-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-pub-use.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-pub-use.rs"}, {"sha": "fc51995a94eccc7724f30c13a1a98f3c92269093", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-link-reexport-additional-docs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-reexport-additional-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-reexport-additional-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-reexport-additional-docs.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-reexport-additional-docs.rs"}, {"sha": "6142dcda986cf0b951a30a664ce56685fa7e8349", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-links-external-traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-links-external-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-links-external-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-links-external-traits.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/intra-links-external-traits.rs"}, {"sha": "54e986be9eccf2b2094796f2e68a9471070a3ebb", "filename": "src/test/rustdoc/intra-doc/auxiliary/my-core.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fmy-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fmy-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fmy-core.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/my-core.rs"}, {"sha": "5ba132f25b4710b6c4e0345b52193e3f8f93601e", "filename": "src/test/rustdoc/intra-doc/auxiliary/proc-macro-macro.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fproc-macro-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fproc-macro-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fproc-macro-macro.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -3,7 +3,6 @@\n // compile-flags: --crate-type proc-macro\n \n #![crate_type=\"proc-macro\"]\n-#![crate_name=\"intra_link_proc_macro_macro\"]\n \n extern crate proc_macro;\n ", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-proc-macro-macro.rs"}, {"sha": "5c4a01ee3a74a5e18c59c10b6a318e73da165447", "filename": "src/test/rustdoc/intra-doc/auxiliary/through-proc-macro-aux.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fthrough-proc-macro-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fthrough-proc-macro-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fthrough-proc-macro-aux.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/through-proc-macro-aux.rs"}, {"sha": "7760546e1fa1cf288efff0c6676ff4ba49eaca0c", "filename": "src/test/rustdoc/intra-doc/basic.rs", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbasic.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,21 +1,21 @@\n-// @has intra_links/index.html\n-// @has - '//a/@href' '../intra_links/struct.ThisType.html'\n-// @has - '//a/@href' '../intra_links/struct.ThisType.html#method.this_method'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html#variant.ThisVariant'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html#tymethod.this_associated_method'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html#associatedtype.ThisAssociatedType'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html#associatedconstant.THIS_ASSOCIATED_CONST'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html'\n-// @has - '//a/@href' '../intra_links/type.ThisAlias.html'\n-// @has - '//a/@href' '../intra_links/union.ThisUnion.html'\n-// @has - '//a/@href' '../intra_links/fn.this_function.html'\n-// @has - '//a/@href' '../intra_links/constant.THIS_CONST.html'\n-// @has - '//a/@href' '../intra_links/static.THIS_STATIC.html'\n-// @has - '//a/@href' '../intra_links/macro.this_macro.html'\n-// @has - '//a/@href' '../intra_links/trait.SoAmbiguous.html'\n-// @has - '//a/@href' '../intra_links/fn.SoAmbiguous.html'\n+// @has basic/index.html\n+// @has - '//a/@href' '../basic/struct.ThisType.html'\n+// @has - '//a/@href' '../basic/struct.ThisType.html#method.this_method'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html#variant.ThisVariant'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html#tymethod.this_associated_method'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html#associatedtype.ThisAssociatedType'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html#associatedconstant.THIS_ASSOCIATED_CONST'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html'\n+// @has - '//a/@href' '../basic/type.ThisAlias.html'\n+// @has - '//a/@href' '../basic/union.ThisUnion.html'\n+// @has - '//a/@href' '../basic/fn.this_function.html'\n+// @has - '//a/@href' '../basic/constant.THIS_CONST.html'\n+// @has - '//a/@href' '../basic/static.THIS_STATIC.html'\n+// @has - '//a/@href' '../basic/macro.this_macro.html'\n+// @has - '//a/@href' '../basic/trait.SoAmbiguous.html'\n+// @has - '//a/@href' '../basic/fn.SoAmbiguous.html'\n //! In this crate we would like to link to:\n //!\n //! * [`ThisType`](ThisType)\n@@ -46,7 +46,7 @@ macro_rules! this_macro {\n     () => {};\n }\n \n-// @has intra_links/struct.ThisType.html '//a/@href' '../intra_links/macro.this_macro.html'\n+// @has basic/struct.ThisType.html '//a/@href' '../basic/macro.this_macro.html'\n /// another link to [`this_macro!()`]\n pub struct ThisType;\n \n@@ -72,10 +72,10 @@ pub trait SoAmbiguous {}\n pub fn SoAmbiguous() {}\n \n \n-// @has intra_links/struct.SomeOtherType.html '//a/@href' '../intra_links/struct.ThisType.html'\n-// @has - '//a/@href' '../intra_links/struct.ThisType.html#method.this_method'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html#variant.ThisVariant'\n+// @has basic/struct.SomeOtherType.html '//a/@href' '../basic/struct.ThisType.html'\n+// @has - '//a/@href' '../basic/struct.ThisType.html#method.this_method'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html#variant.ThisVariant'\n /// Shortcut links for:\n /// * [`ThisType`]\n /// * [`ThisType::this_method`]", "previous_filename": "src/test/rustdoc/intra-links.rs"}, {"sha": "74216a587e1da6f30129d22bcabc81e3cad1e49f", "filename": "src/test/rustdoc/intra-doc/builtin-macros.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -1,3 +1,3 @@\n-// @has intra_link_builtin_macros/index.html\n+// @has builtin_macros/index.html\n // @has - '//a/@href' 'https://doc.rust-lang.org/nightly/core/macro.cfg.html'\n //! [cfg]", "previous_filename": "src/test/rustdoc/intra-link-builtin-macros.rs"}, {"sha": "837390b3c716102a0005a5a0a4eca8169f7fd1db", "filename": "src/test/rustdoc/intra-doc/cross-crate/additional_doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fadditional_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fadditional_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fadditional_doc.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/additional_doc.rs"}, {"sha": "849d25687337b7f0af342659dc9fe893512bd783", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/additional_doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fadditional_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fadditional_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fadditional_doc.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/additional_doc.rs"}, {"sha": "b543ae764c05bb9a014c74c66007dbc4985fe6c1", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/hidden.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fhidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fhidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fhidden.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/hidden.rs"}, {"sha": "5342baecbc4b89aa16cd1b11c0cd6ea279ca4fbb", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/intra-doc-basic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-doc-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-doc-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-doc-basic.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/intra-doc-basic.rs"}, {"sha": "a37848e23d9931a27e52cb00cb230b2490fcc3e0", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/intra-link-cross-crate-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-link-cross-crate-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-link-cross-crate-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-link-cross-crate-crate.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-cross-crate-crate.rs"}, {"sha": "a94f9e5dcca2ec5421f286e3ade6932038d556d1", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/macro_inner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmacro_inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmacro_inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmacro_inner.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/macro_inner.rs"}, {"sha": "b7e3913f108f7553d089dfd1885d29f430532d56", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/module.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmodule.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/module.rs"}, {"sha": "0d5a954075df22c24bc813c3bccd7aaf6c2ac7ca", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/proc_macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fproc_macro.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/proc_macro.rs"}, {"sha": "8ae0f6c16b3d8113e67d8412c2207b3dfe9c0297", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/submodule-inner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-inner.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/submodule-inner.rs"}, {"sha": "d90c529e3855280415bf0a2a7a65fa176e2d4f74", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/submodule-outer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-outer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-outer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-outer.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/submodule-outer.rs"}, {"sha": "c16e39d56f3d0d80dcb2b41e6457270ee18e0d9b", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Ftraits.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/traits.rs"}, {"sha": "6ab9140c3c385c85ae472281e65d76334df43a2b", "filename": "src/test/rustdoc/intra-doc/cross-crate/basic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fbasic.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/basic.rs"}, {"sha": "edf544708b628e9bcd081f5a3a26f2bf2bdd777c", "filename": "src/test/rustdoc/intra-doc/cross-crate/crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fcrate.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-cross-crate-crate.rs"}, {"sha": "9c9d4c649455ebe3c82c1088b9d0539d3985550d", "filename": "src/test/rustdoc/intra-doc/cross-crate/hidden.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fhidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fhidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fhidden.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/hidden.rs"}, {"sha": "311b16dff13bc67260c4942d353037000e0aa209", "filename": "src/test/rustdoc/intra-doc/cross-crate/macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/macro.rs"}, {"sha": "9039e344f7b003711a1a7a60785f29683437d235", "filename": "src/test/rustdoc/intra-doc/cross-crate/module.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmodule.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/module.rs"}, {"sha": "e1465816368bf178ed9fd2e3b8e4faeaed08458e", "filename": "src/test/rustdoc/intra-doc/cross-crate/submodule-inner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-inner.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/submodule-inner.rs"}, {"sha": "45f561328f279040293c625f41f678f86b1be403", "filename": "src/test/rustdoc/intra-doc/cross-crate/submodule-outer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-outer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-outer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-outer.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/submodule-outer.rs"}, {"sha": "07decb48019da26c168cbcc031ba6df4f48e4bb7", "filename": "src/test/rustdoc/intra-doc/cross-crate/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-crate/traits.rs"}, {"sha": "aa0ced62aaf30bea333a6f35ed0582b6a41eb24d", "filename": "src/test/rustdoc/intra-doc/disambiguators-removed.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,51 @@\n+// ignore-tidy-linelength\n+#![deny(intra_doc_link_resolution_failure)]\n+// first try backticks\n+/// Trait: [`trait@Name`], fn: [`fn@Name`], [`Name`][`macro@Name`]\n+// @has disambiguators_removed/struct.AtDisambiguator.html\n+// @has - '//a[@href=\"../disambiguators_removed/trait.Name.html\"][code]' \"Name\"\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"][code]' \"Name\"\n+pub struct AtDisambiguator;\n+\n+/// fn: [`Name()`], macro: [`Name!`]\n+// @has disambiguators_removed/struct.SymbolDisambiguator.html\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"][code]' \"Name()\"\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"][code]' \"Name!\"\n+pub struct SymbolDisambiguator;\n+\n+// Now make sure that backticks aren't added if they weren't already there\n+/// [fn@Name]\n+// @has disambiguators_removed/trait.Name.html\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"]' \"Name\"\n+// @!has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n+\n+// FIXME: this will turn !() into ! alone\n+/// [Name!()]\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"]' \"Name!\"\n+pub trait Name {}\n+\n+#[allow(non_snake_case)]\n+\n+// Try collapsed reference links\n+/// [macro@Name][]\n+// @has disambiguators_removed/fn.Name.html\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"]' \"Name\"\n+\n+// Try links that have the same text as a generated URL\n+/// Weird URL aligned [../disambiguators_removed/macro.Name.html][trait@Name]\n+// @has - '//a[@href=\"../disambiguators_removed/trait.Name.html\"]' \"../disambiguators_removed/macro.Name.html\"\n+pub fn Name() {}\n+\n+#[macro_export]\n+// Rustdoc doesn't currently handle links that have weird interspersing of inline code blocks.\n+/// [fn@Na`m`e]\n+// @has disambiguators_removed/macro.Name.html\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"]' \"fn@Name\"\n+\n+// It also doesn't handle any case where the code block isn't the whole link text:\n+/// [trait@`Name`]\n+// @has - '//a[@href=\"../disambiguators_removed/trait.Name.html\"]' \"trait@Name\"\n+macro_rules! Name {\n+    () => ()\n+}"}, {"sha": "70bf343a9a5e5a144950de51f51e3767bce088ff", "filename": "src/test/rustdoc/intra-doc/enum-struct-field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fenum-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fenum-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fenum-struct-field.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-link-enum-struct-field.rs"}, {"sha": "193bca704bfbdffca4c18f58a174672715aec34d", "filename": "src/test/rustdoc/intra-doc/extern-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-crate.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-extern-crate.rs"}, {"sha": "e1934698d1fadce81e0f04bed9b727333e6c0f5c", "filename": "src/test/rustdoc/intra-doc/extern-type.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,17 @@\n+#![feature(extern_types)]\n+\n+extern {\n+    pub type ExternType;\n+}\n+\n+impl ExternType {\n+    pub fn f(&self) {\n+\n+    }\n+}\n+\n+// @has 'extern_type/foreigntype.ExternType.html'\n+// @has 'extern_type/fn.links_to_extern_type.html' \\\n+// 'href=\"../extern_type/foreigntype.ExternType.html#method.f\"'\n+/// See also [ExternType::f]\n+pub fn links_to_extern_type() {}"}, {"sha": "de76f29476c66818f8268035716ea855fb9897e7", "filename": "src/test/rustdoc/intra-doc/external-traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fexternal-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fexternal-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fexternal-traits.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-links-external-traits.rs"}, {"sha": "1de6410f10c430c2c4520d639349230a7f22112d", "filename": "src/test/rustdoc/intra-doc/generic-params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-link-generic-params.rs"}, {"sha": "ec965a99dc240039c4e83cb80d0e02861f32d53f", "filename": "src/test/rustdoc/intra-doc/in-bodies.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fin-bodies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fin-bodies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fin-bodies.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-in-bodies.rs"}, {"sha": "d0af3aec6609782384c90afa9f80d5c263f68575", "filename": "src/test/rustdoc/intra-doc/libstd-re-export.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Flibstd-re-export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Flibstd-re-export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Flibstd-re-export.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-libstd-re-export.rs"}, {"sha": "feb013b22be65a7569333a883aafc00350793bc1", "filename": "src/test/rustdoc/intra-doc/mod-ambiguity.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fmod-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fmod-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fmod-ambiguity.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,16 @@\n+#![deny(broken_intra_doc_links)]\n+\n+\n+pub fn foo() {\n+\n+}\n+\n+pub mod foo {}\n+// @has mod_ambiguity/struct.A.html '//a/@href' '../mod_ambiguity/foo/index.html'\n+/// Module is [`module@foo`]\n+pub struct A;\n+\n+\n+// @has mod_ambiguity/struct.B.html '//a/@href' '../mod_ambiguity/fn.foo.html'\n+/// Function is [`fn@foo`]\n+pub struct B;"}, {"sha": "d687cbd69bb18007186c6f12566bb5efe1dd4a8a", "filename": "src/test/rustdoc/intra-doc/prim-assoc.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,5 @@\n+// ignore-tidy-linelength\n+#![deny(broken_intra_doc_links)]\n+\n+//! [i32::MAX]\n+// @has prim_assoc/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\""}, {"sha": "434e03389835fd552e1776d6089a3f9b0c990c3a", "filename": "src/test/rustdoc/intra-doc/prim-methods-external-core.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -9,7 +9,7 @@\n #![no_core]\n #![crate_type = \"rlib\"]\n \n-// @has intra_link_prim_methods_external_core/index.html\n+// @has prim_methods_external_core/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n ", "previous_filename": "src/test/rustdoc/intra-link-prim-methods-external-core.rs"}, {"sha": "9888f29db5bacc85cc09f2ad6ce6857513a2c0c0", "filename": "src/test/rustdoc/intra-doc/prim-methods-local.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -5,7 +5,7 @@\n \n // ignore-tidy-linelength\n \n-// @has intra_link_prim_methods_local/index.html\n+// @has prim_methods_local/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n ", "previous_filename": "src/test/rustdoc/intra-link-prim-methods-local.rs"}, {"sha": "f19cff7d34afa5d78730fc6a0da3e5738ddc3239", "filename": "src/test/rustdoc/intra-doc/prim-methods.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-tidy-linelength\n \n-// @has intra_link_prim_methods/index.html\n+// @has prim_methods/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n ", "previous_filename": "src/test/rustdoc/intra-link-prim-methods.rs"}, {"sha": "ed2c2cda7184dfa7df85be95e747d96eaec192e3", "filename": "src/test/rustdoc/intra-doc/prim-precedence.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,17 @@\n+// ignore-tidy-linelength\n+#![deny(broken_intra_doc_links)]\n+\n+pub mod char {\n+    /// [char]\n+    // @has prim_precedence/char/struct.Inner.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n+    pub struct Inner;\n+}\n+\n+/// See [prim@char]\n+// @has prim_precedence/struct.MyString.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n+pub struct MyString;\n+\n+/// See also [crate::char] and [mod@char]\n+// @has prim_precedence/struct.MyString2.html '//*[@href=\"../prim_precedence/char/index.html\"]' 'crate::char'\n+// @has - '//*[@href=\"../prim_precedence/char/index.html\"]' 'mod@char'\n+pub struct MyString2;"}, {"sha": "548eb090a32762267f0f5248971faadf6484db47", "filename": "src/test/rustdoc/intra-doc/primitive-non-default-impl.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-tidy-linelength\n \n-// @has intra_link_primitive_non_default_impl/fn.str_methods.html\n+// @has primitive_non_default_impl/fn.str_methods.html\n /// [`str::trim`]\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim\"]' 'str::trim'\n /// [`str::to_lowercase`]\n@@ -13,7 +13,7 @@\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.replace\"]' 'str::replace'\n pub fn str_methods() {}\n \n-// @has intra_link_primitive_non_default_impl/fn.f32_methods.html\n+// @has primitive_non_default_impl/fn.f32_methods.html\n /// [f32::powi]\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.powi\"]' 'f32::powi'\n /// [f32::sqrt]\n@@ -22,7 +22,7 @@ pub fn str_methods() {}\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.mul_add\"]' 'f32::mul_add'\n pub fn f32_methods() {}\n \n-// @has intra_link_primitive_non_default_impl/fn.f64_methods.html\n+// @has primitive_non_default_impl/fn.f64_methods.html\n /// [`f64::powi`]\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.powi\"]' 'f64::powi'\n /// [`f64::sqrt`]", "previous_filename": "src/test/rustdoc/intra-link-primitive-non-default-impl.rs"}, {"sha": "cf8bc0b15869f469a97066101c0ed14a5851dfce", "filename": "src/test/rustdoc/intra-doc/private-failures-ignored.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate-failures-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate-failures-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate-failures-ignored.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-private.rs"}, {"sha": "f86ca44403d93e42ae9b752d7bb3fdc588263ded", "filename": "src/test/rustdoc/intra-doc/private.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-link-private.rs"}, {"sha": "ab4626ccfc3abfd4e46d87427a03f358d7035481", "filename": "src/test/rustdoc/intra-doc/proc-macro.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fproc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fproc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fproc-macro.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -0,0 +1,27 @@\n+// aux-build:proc-macro-macro.rs\n+// build-aux-docs\n+#![deny(broken_intra_doc_links)]\n+\n+extern crate proc_macro_macro;\n+\n+\n+pub use proc_macro_macro::{DeriveA, attr_a};\n+use proc_macro_macro::{DeriveB, attr_b};\n+\n+// @has proc_macro/struct.Foo.html\n+// @has - '//a/@href' '../proc_macro/derive.DeriveA.html'\n+// @has - '//a/@href' '../proc_macro/attr.attr_a.html'\n+// @has - '//a/@href' '../proc_macro/trait.DeriveTrait.html'\n+// @has - '//a/@href' '../proc_macro_macro/derive.DeriveB.html'\n+// @has - '//a/@href' '../proc_macro_macro/attr.attr_b.html'\n+/// Link to [DeriveA], [attr_a], [DeriveB], [attr_b], [DeriveTrait]\n+pub struct Foo;\n+\n+// @has proc_macro/struct.Bar.html\n+// @has - '//a/@href' '../proc_macro/derive.DeriveA.html'\n+// @has - '//a/@href' '../proc_macro/attr.attr_a.html'\n+/// Link to [deriveA](derive@DeriveA) [attr](macro@attr_a)\n+pub struct Bar;\n+\n+// this should not cause ambiguity errors\n+pub trait DeriveTrait {}"}, {"sha": "dd52249abc6d0ad27cab524bd0c82325ba7fa7e5", "filename": "src/test/rustdoc/intra-doc/pub-use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-pub-use.rs"}, {"sha": "96f3580f3055e8e2405fbfb5627c4c59ecb42f65", "filename": "src/test/rustdoc/intra-doc/reexport-additional-docs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Freexport-additional-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Freexport-additional-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Freexport-additional-docs.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-reexport-additional-docs.rs"}, {"sha": "81545fec7411bc0654e6bf399f135759f6e5f1e8", "filename": "src/test/rustdoc/intra-doc/self.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-self.rs"}, {"sha": "613410871f0d1c237e56b76ab59d81124cbbbfd5", "filename": "src/test/rustdoc/intra-doc/through-proc-macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fthrough-proc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Fthrough-proc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fthrough-proc-macro.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/through-proc-macro.rs"}, {"sha": "fab8406d525e5f83ca18ccd341b735ae2ad05d08", "filename": "src/test/rustdoc/intra-doc/trait-impl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-link-trait-impl.rs"}, {"sha": "de8585f4c9a781e9ea8b2541591234db95f94209", "filename": "src/test/rustdoc/intra-doc/trait-item.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "patch": "@@ -3,7 +3,7 @@\n \n /// Link to [S::assoc_fn()]\n /// Link to [Default::default()]\n-// @has intra_link_trait_item/struct.S.html '//*[@href=\"../intra_link_trait_item/struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n+// @has trait_item/struct.S.html '//*[@href=\"../trait_item/struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\"]' 'Default::default()'\n pub struct S;\n ", "previous_filename": "src/test/rustdoc/intra-link-trait-item.rs"}, {"sha": "7b21e9341474032b84064337a3d4280ea20b5752", "filename": "src/test/rustdoc/intra-doc/true-false.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45e6953d76d886bb649ffd80f1e19ce2e1bfeda/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs?ref=f45e6953d76d886bb649ffd80f1e19ce2e1bfeda", "previous_filename": "src/test/rustdoc/intra-doc-link-true-false.rs"}, {"sha": "2051129b948f3ca71170ee2ed02ca09cbd1dfefc", "filename": "src/test/rustdoc/intra-link-associated-defaults.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-associated-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-associated-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-associated-defaults.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,27 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(intra_doc_link_resolution_failure)]\n-#![feature(associated_type_defaults)]\n-\n-pub trait TraitWithDefault {\n-    type T = usize;\n-    fn f() -> Self::T {\n-        0\n-    }\n-}\n-\n-/// Link to [UsesDefaults::T] and [UsesDefaults::f]\n-// @has 'intra_link_associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.UsesDefaults.html#associatedtype.T\"]' 'UsesDefaults::T'\n-// @has 'intra_link_associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.UsesDefaults.html#method.f\"]' 'UsesDefaults::f'\n-pub struct UsesDefaults;\n-impl TraitWithDefault for UsesDefaults {}\n-\n-/// Link to [OverridesDefaults::T] and [OverridesDefaults::f]\n-// @has 'intra_link_associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.OverridesDefaults.html#associatedtype.T\"]' 'OverridesDefaults::T'\n-// @has 'intra_link_associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.OverridesDefaults.html#method.f\"]' 'OverridesDefaults::f'\n-pub struct OverridesDefaults;\n-impl TraitWithDefault for OverridesDefaults {\n-    type T = bool;\n-    fn f() -> bool {\n-        true\n-    }\n-}"}, {"sha": "daf7075a91740359157af834bb7b50b42447d0c3", "filename": "src/test/rustdoc/intra-link-associated-items.rs", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-associated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-associated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-associated-items.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,61 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(intra_doc_link_resolution_failure)]\n-\n-/// [`std::collections::BTreeMap::into_iter`]\n-/// [`String::from`] is ambiguous as to which `From` impl\n-/// [Vec::into_iter()] uses a disambiguator\n-// @has 'intra_link_associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html#method.into_iter\"]' 'std::collections::BTreeMap::into_iter'\n-// @has 'intra_link_associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html#method.from\"]' 'String::from'\n-// @has 'intra_link_associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.into_iter\"]' 'Vec::into_iter'\n-pub fn foo() {}\n-\n-/// Link to [MyStruct], [link from struct][MyStruct::method], [MyStruct::clone], [MyStruct::Input]\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html\"]' 'MyStruct'\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#method.method\"]' 'link from struct'\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#method.clone\"]' 'MyStruct::clone'\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#associatedtype.Input\"]' 'MyStruct::Input'\n-pub struct MyStruct { foo: () }\n-\n-impl Clone for MyStruct {\n-    fn clone(&self) -> Self {\n-        MyStruct\n-    }\n-}\n-\n-pub trait T {\n-    type Input;\n-    fn method(i: Self::Input);\n-}\n-\n-impl T for MyStruct {\n-    type Input = usize;\n-\n-    /// [link from method][MyStruct::method] on method\n-    // @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#method.method\"]' 'link from method'\n-    fn method(i: usize) {\n-    }\n-}\n-\n-/// Ambiguity between which trait to use\n-pub trait T1 {\n-    fn ambiguous_method();\n-}\n-\n-pub trait T2 {\n-    fn ambiguous_method();\n-}\n-\n-/// Link to [S::ambiguous_method]\n-// FIXME: there is no way to disambiguate these.\n-// Since we have `#[deny(intra_doc_failure)]`, we still know it was one or the other.\n-pub struct S;\n-\n-impl T1 for S {\n-    fn ambiguous_method() {}\n-}\n-\n-impl T2 for S {\n-    fn ambiguous_method() {}\n-}\n-\n-fn main() {}"}, {"sha": "26d05b484b919b73ec6b0729eecfae0038b0d815", "filename": "src/test/rustdoc/intra-link-disambiguators-removed.rs", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-disambiguators-removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-disambiguators-removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-disambiguators-removed.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,51 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(intra_doc_link_resolution_failure)]\n-// first try backticks\n-/// Trait: [`trait@Name`], fn: [`fn@Name`], [`Name`][`macro@Name`]\n-// @has intra_link_disambiguators_removed/struct.AtDisambiguator.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/trait.Name.html\"][code]' \"Name\"\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"][code]' \"Name\"\n-pub struct AtDisambiguator;\n-\n-/// fn: [`Name()`], macro: [`Name!`]\n-// @has intra_link_disambiguators_removed/struct.SymbolDisambiguator.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"][code]' \"Name()\"\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"][code]' \"Name!\"\n-pub struct SymbolDisambiguator;\n-\n-// Now make sure that backticks aren't added if they weren't already there\n-/// [fn@Name]\n-// @has intra_link_disambiguators_removed/trait.Name.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"]' \"Name\"\n-// @!has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n-\n-// FIXME: this will turn !() into ! alone\n-/// [Name!()]\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"]' \"Name!\"\n-pub trait Name {}\n-\n-#[allow(non_snake_case)]\n-\n-// Try collapsed reference links\n-/// [macro@Name][]\n-// @has intra_link_disambiguators_removed/fn.Name.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"]' \"Name\"\n-\n-// Try links that have the same text as a generated URL\n-/// Weird URL aligned [../intra_link_disambiguators_removed/macro.Name.html][trait@Name]\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/trait.Name.html\"]' \"../intra_link_disambiguators_removed/macro.Name.html\"\n-pub fn Name() {}\n-\n-#[macro_export]\n-// Rustdoc doesn't currently handle links that have weird interspersing of inline code blocks.\n-/// [fn@Na`m`e]\n-// @has intra_link_disambiguators_removed/macro.Name.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"]' \"fn@Name\"\n-\n-// It also doesn't handle any case where the code block isn't the whole link text:\n-/// [trait@`Name`]\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/trait.Name.html\"]' \"trait@Name\"\n-macro_rules! Name {\n-    () => ()\n-}"}, {"sha": "418e0d91ea7ef8afa16d94071f67ff30caf354c1", "filename": "src/test/rustdoc/intra-link-extern-type.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-extern-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-extern-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-extern-type.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,18 +0,0 @@\n-#![feature(extern_types)]\n-\n-extern {\n-    pub type ExternType;\n-}\n-\n-impl ExternType {\n-    pub fn f(&self) {\n-\n-    }\n-}\n-\n-// @has 'intra_link_extern_type/foreigntype.ExternType.html'\n-// @has 'intra_link_extern_type/fn.links_to_extern_type.html' \\\n-// 'href=\"../intra_link_extern_type/foreigntype.ExternType.html#method.f\"'\n-/// See also [ExternType::f]\n-pub fn links_to_extern_type() {\n-}"}, {"sha": "c0066885e19910dea807da1e54295e3bf374b30f", "filename": "src/test/rustdoc/intra-link-prim-assoc.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,5 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(broken_intra_doc_links)]\n-\n-//! [i32::MAX]\n-// @has intra_link_prim_assoc/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\""}, {"sha": "0a4e57ef643e7824145262785828b4f9216192f0", "filename": "src/test/rustdoc/intra-link-prim-precedence.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,17 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(broken_intra_doc_links)]\n-\n-pub mod char {\n-    /// [char]\n-    // @has intra_link_prim_precedence/char/struct.Inner.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n-    pub struct Inner;\n-}\n-\n-/// See [prim@char]\n-// @has intra_link_prim_precedence/struct.MyString.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n-pub struct MyString;\n-\n-/// See also [crate::char] and [mod@char]\n-// @has intra_link_prim_precedence/struct.MyString2.html '//*[@href=\"../intra_link_prim_precedence/char/index.html\"]' 'crate::char'\n-// @has - '//*[@href=\"../intra_link_prim_precedence/char/index.html\"]' 'mod@char'\n-pub struct MyString2;"}, {"sha": "7a8403255edb65fd058a89725d28c413f4acae1b", "filename": "src/test/rustdoc/intra-link-proc-macro.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-proc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e075ff293f56376a3ad27d7fcb038d0e2b5595/src%2Ftest%2Frustdoc%2Fintra-link-proc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-proc-macro.rs?ref=99e075ff293f56376a3ad27d7fcb038d0e2b5595", "patch": "@@ -1,27 +0,0 @@\n-// aux-build:intra-link-proc-macro-macro.rs\n-// build-aux-docs\n-#![deny(broken_intra_doc_links)]\n-\n-extern crate intra_link_proc_macro_macro;\n-\n-\n-pub use intra_link_proc_macro_macro::{DeriveA, attr_a};\n-use intra_link_proc_macro_macro::{DeriveB, attr_b};\n-\n-// @has intra_link_proc_macro/struct.Foo.html\n-// @has - '//a/@href' '../intra_link_proc_macro/derive.DeriveA.html'\n-// @has - '//a/@href' '../intra_link_proc_macro/attr.attr_a.html'\n-// @has - '//a/@href' '../intra_link_proc_macro/trait.DeriveTrait.html'\n-// @has - '//a/@href' '../intra_link_proc_macro_macro/derive.DeriveB.html'\n-// @has - '//a/@href' '../intra_link_proc_macro_macro/attr.attr_b.html'\n-/// Link to [DeriveA], [attr_a], [DeriveB], [attr_b], [DeriveTrait]\n-pub struct Foo;\n-\n-// @has intra_link_proc_macro/struct.Bar.html\n-// @has - '//a/@href' '../intra_link_proc_macro/derive.DeriveA.html'\n-// @has - '//a/@href' '../intra_link_proc_macro/attr.attr_a.html'\n-/// Link to [deriveA](derive@DeriveA) [attr](macro@attr_a)\n-pub struct Bar;\n-\n-// this should not cause ambiguity errors\n-pub trait DeriveTrait {}"}]}