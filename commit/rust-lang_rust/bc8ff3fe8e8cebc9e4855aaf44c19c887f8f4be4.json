{"sha": "bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOGZmM2ZlOGU4Y2ViYzllNDg1NWFhZjQ0YzE5Yzg4N2Y4ZjRiZTQ=", "commit": {"author": {"name": "Ana-Maria Mihalache", "email": "mihalacheana.maria@yahoo.com", "date": "2020-03-11T15:20:31Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-15T21:13:40Z"}, "message": "rustc: tweak comments on InstanceDef.", "tree": {"sha": "d59f481641349d58300c109d6e8fc68bbd137785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d59f481641349d58300c109d6e8fc68bbd137785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4", "html_url": "https://github.com/rust-lang/rust/commit/bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4/comments", "author": {"login": "anyska", "id": 13694484, "node_id": "MDQ6VXNlcjEzNjk0NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/13694484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anyska", "html_url": "https://github.com/anyska", "followers_url": "https://api.github.com/users/anyska/followers", "following_url": "https://api.github.com/users/anyska/following{/other_user}", "gists_url": "https://api.github.com/users/anyska/gists{/gist_id}", "starred_url": "https://api.github.com/users/anyska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anyska/subscriptions", "organizations_url": "https://api.github.com/users/anyska/orgs", "repos_url": "https://api.github.com/users/anyska/repos", "events_url": "https://api.github.com/users/anyska/events{/privacy}", "received_events_url": "https://api.github.com/users/anyska/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ea260ee7ee896701ef7296d7f63e7ef455b383", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ea260ee7ee896701ef7296d7f63e7ef455b383", "html_url": "https://github.com/rust-lang/rust/commit/51ea260ee7ee896701ef7296d7f63e7ef455b383"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "c9ad8707a7454d934a4dc189c4d75df22767a7e1", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=bc8ff3fe8e8cebc9e4855aaf44c19c887f8f4be4", "patch": "@@ -40,10 +40,9 @@ pub enum InstanceDef<'tcx> {\n     /// `<fn() as FnTrait>::call_*`\n     /// `DefId` is `FnTrait::call_*`.\n     ///\n-    /// NB: the (`fn` pointer) type must be monomorphic for MIR shims to work.\n-    // FIXME(eddyb) support generating shims for a \"shallow type\",\n-    // e.g. `fn(_, _) -> _` instead of requiring a fully monomorphic\n-    // `fn(Foo, Bar) -> Baz` etc.\n+    /// NB: the (`fn` pointer) type must currently be monomorphic to avoid double substitution\n+    /// problems with the MIR shim bodies. `Instance::resolve` enforces this.\n+    // FIXME(#69925) support polymorphic MIR shim bodies properly instead.\n     FnPtrShim(DefId, Ty<'tcx>),\n \n     /// `<dyn Trait as Trait>::fn`, \"direct calls\" of which are implicitly\n@@ -63,18 +62,16 @@ pub enum InstanceDef<'tcx> {\n     /// The `Option<Ty<'tcx>>` is either `Some(T)`, or `None` for empty drop\n     /// glue.\n     ///\n-    /// NB: the type must be monomorphic for MIR shims to work.\n-    // FIXME(eddyb) support generating shims for a \"shallow type\",\n-    // e.g. `Foo<_>` or `[_]` instead of requiring a fully monomorphic\n-    // `Foo<Bar>` or `[String]` etc.\n+    /// NB: the type must currently be monomorphic to avoid double substitution\n+    /// problems with the MIR shim bodies. `Instance::resolve` enforces this.\n+    // FIXME(#69925) support polymorphic MIR shim bodies properly instead.\n     DropGlue(DefId, Option<Ty<'tcx>>),\n \n     ///`<T as Clone>::clone` shim.\n     ///\n-    /// NB: the type must be monomorphic for MIR shims to work.\n-    // FIXME(eddyb) support generating shims for a \"shallow type\",\n-    // e.g. `Foo<_>` or `[_]` instead of requiring a fully monomorphic\n-    // `Foo<Bar>` or `[String]` etc.\n+    /// NB: the type must currently be monomorphic to avoid double substitution\n+    /// problems with the MIR shim bodies. `Instance::resolve` enforces this.\n+    // FIXME(#69925) support polymorphic MIR shim bodies properly instead.\n     CloneShim(DefId, Ty<'tcx>),\n }\n "}]}