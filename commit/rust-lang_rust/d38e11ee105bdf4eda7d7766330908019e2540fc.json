{"sha": "d38e11ee105bdf4eda7d7766330908019e2540fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOGUxMWVlMTA1YmRmNGVkYTdkNzc2NjMzMDkwODAxOWUyNTQwZmM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-14T08:14:43Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-14T10:25:23Z"}, "message": "Rollup merge of #48162 - michaelwoerister:stabler-svh, r=nikomatsakis\n\nHandle path prefix mapping in a more stable way when computing the crate hash\n\nThis hopefully fixes issue https://github.com/rust-lang/rust/issues/48019.\n\ncc @luser @infinity0", "tree": {"sha": "2520298c7be95e52464b72f4902fba9705862b0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2520298c7be95e52464b72f4902fba9705862b0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d38e11ee105bdf4eda7d7766330908019e2540fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqEDpMACgkQ/vbIBR0O\nATzsYRAAoLJwu/38AkiANIMymTGv/SlgvK/IHF6YKe0cAZc+xw6ctSx0aBSSG5cR\nsexql3T1F1WpdiuBXli2WnzbIx4kzNoDdEXk7mWkK/fSSzKKQ3YBsfyFu70vSodp\n/xg5VGqM1IgdZ0U+k1qGIrRfzKbJy+RqkrXujRv/uoiZhEL7SRWoKPHDbvrmXZOz\nLlqRAUl9Lir7AMd4ZPKYl1AIFmHNONMoGWCJoK7oY4tt8+Yym7libNGpXOIzbAxU\no0oxoFeDnVcuO5SJR5glA6vZq1ttZVBZYMHvhzOJVufsCDsZ8NNlHP4iVmCHIQsF\nMyH5hiQL0zlY0nZvLZ/Hj5NjxKSC+pvxdz5YdGZ8UWtNVEl3vmMnJ9W5MP4mGI9U\no0+cpTqtARWMvNi9Mea7HGkGnDFrMc13aZnWLZQnI1koBEAPu/+lGwcka791D9vv\nCUv4caNKAufcjefLDCpNdj1byu3irbL+AV+41exBsjC1C6j47PmfHb19sXzKWYcs\n/5qBWv+WA+BkZrNOEz4i6qeNDlLNCPfvUuhlq6/Sb8ybNyh010jPOKVQlfxQW9hu\nPxNx2dkTM5LAkKQf6AZVoetZATSrnVlRtMPPoaZhD3ZNwxm0Ga7jwXmSHuzdfbaC\nZDPwWjimSVT06XGOdKtm+7CGOFF05GR4gf42FKCVcWMyv74l7Ls=\n=pxuW\n-----END PGP SIGNATURE-----", "payload": "tree 2520298c7be95e52464b72f4902fba9705862b0f\nparent bebd2fbfc836f871721057766a90775efa86e6a2\nparent 0397fc1b3ad598819b3eedcd7773ef32b2a685b7\nauthor kennytm <kennytm@gmail.com> 1518596083 +0800\ncommitter kennytm <kennytm@gmail.com> 1518603923 +0800\n\nRollup merge of #48162 - michaelwoerister:stabler-svh, r=nikomatsakis\n\nHandle path prefix mapping in a more stable way when computing the crate hash\n\nThis hopefully fixes issue https://github.com/rust-lang/rust/issues/48019.\n\ncc @luser @infinity0\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d38e11ee105bdf4eda7d7766330908019e2540fc", "html_url": "https://github.com/rust-lang/rust/commit/d38e11ee105bdf4eda7d7766330908019e2540fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d38e11ee105bdf4eda7d7766330908019e2540fc/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bebd2fbfc836f871721057766a90775efa86e6a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bebd2fbfc836f871721057766a90775efa86e6a2", "html_url": "https://github.com/rust-lang/rust/commit/bebd2fbfc836f871721057766a90775efa86e6a2"}, {"sha": "0397fc1b3ad598819b3eedcd7773ef32b2a685b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0397fc1b3ad598819b3eedcd7773ef32b2a685b7", "html_url": "https://github.com/rust-lang/rust/commit/0397fc1b3ad598819b3eedcd7773ef32b2a685b7"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "99b1e5783e01e18f698307b13181978f3bc23c53", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d38e11ee105bdf4eda7d7766330908019e2540fc/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38e11ee105bdf4eda7d7766330908019e2540fc/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=d38e11ee105bdf4eda7d7766330908019e2540fc", "patch": "@@ -9,14 +9,15 @@\n // except according to those terms.\n \n use super::*;\n-\n use dep_graph::{DepGraph, DepKind, DepNodeIndex};\n+use hir::def_id::{LOCAL_CRATE, CrateNum};\n use hir::intravisit::{Visitor, NestedVisitorMap};\n use hir::svh::Svh;\n use middle::cstore::CrateStore;\n use session::CrateDisambiguator;\n use std::iter::repeat;\n use syntax::ast::{NodeId, CRATE_NODE_ID};\n+use syntax::codemap::CodeMap;\n use syntax_pos::Span;\n \n use ich::StableHashingContext;\n@@ -123,6 +124,7 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n     pub(super) fn finalize_and_compute_crate_hash(self,\n                                                   crate_disambiguator: CrateDisambiguator,\n                                                   cstore: &CrateStore,\n+                                                  codemap: &CodeMap,\n                                                   commandline_args_hash: u64)\n                                                   -> (Vec<MapEntry<'hir>>, Svh) {\n         let mut node_hashes: Vec<_> = self\n@@ -147,11 +149,25 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n             (name1, dis1).cmp(&(name2, dis2))\n         });\n \n+        // We hash the final, remapped names of all local source files so we\n+        // don't have to include the path prefix remapping commandline args.\n+        // If we included the full mapping in the SVH, we could only have\n+        // reproducible builds by compiling from the same directory. So we just\n+        // hash the result of the mapping instead of the mapping itself.\n+        let mut source_file_names: Vec<_> = codemap\n+            .files()\n+            .iter()\n+            .filter(|filemap| CrateNum::from_u32(filemap.crate_of_origin) == LOCAL_CRATE)\n+            .map(|filemap| filemap.name_hash)\n+            .collect();\n+\n+        source_file_names.sort_unstable();\n+\n         let (_, crate_dep_node_index) = self\n             .dep_graph\n             .with_task(DepNode::new_no_params(DepKind::Krate),\n                        &self.hcx,\n-                       ((node_hashes, upstream_crates),\n+                       (((node_hashes, upstream_crates), source_file_names),\n                         (commandline_args_hash,\n                          crate_disambiguator.to_fingerprint())),\n                        identity_fn);"}, {"sha": "b6b3e8955351c48a4a6d7db511e8fd7985162dd2", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d38e11ee105bdf4eda7d7766330908019e2540fc/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38e11ee105bdf4eda7d7766330908019e2540fc/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=d38e11ee105bdf4eda7d7766330908019e2540fc", "patch": "@@ -1065,6 +1065,7 @@ pub fn map_crate<'hir>(sess: &::session::Session,\n         let cmdline_args = sess.opts.dep_tracking_hash();\n         collector.finalize_and_compute_crate_hash(crate_disambiguator,\n                                                   cstore,\n+                                                  sess.codemap(),\n                                                   cmdline_args)\n     };\n "}, {"sha": "cfbf233297cf82d32fa4e656232b1d52b86ebac1", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d38e11ee105bdf4eda7d7766330908019e2540fc/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38e11ee105bdf4eda7d7766330908019e2540fc/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d38e11ee105bdf4eda7d7766330908019e2540fc", "patch": "@@ -1269,9 +1269,9 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"make Rustc print the total optimization fuel used by a crate\"),\n-    remap_path_prefix_from: Vec<PathBuf> = (vec![], parse_pathbuf_push, [TRACKED],\n+    remap_path_prefix_from: Vec<PathBuf> = (vec![], parse_pathbuf_push, [UNTRACKED],\n         \"add a source pattern to the file path remapping config\"),\n-    remap_path_prefix_to: Vec<PathBuf> = (vec![], parse_pathbuf_push, [TRACKED],\n+    remap_path_prefix_to: Vec<PathBuf> = (vec![], parse_pathbuf_push, [UNTRACKED],\n         \"add a mapping target to the file path remapping config\"),\n     force_unstable_if_unmarked: bool = (false, parse_bool, [TRACKED],\n         \"force all crates to be `rustc_private` unstable\"),\n@@ -1719,7 +1719,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n     }\n \n     let remap_path_prefix_sources = debugging_opts.remap_path_prefix_from.len();\n-    let remap_path_prefix_targets = debugging_opts.remap_path_prefix_from.len();\n+    let remap_path_prefix_targets = debugging_opts.remap_path_prefix_to.len();\n \n     if remap_path_prefix_targets < remap_path_prefix_sources {\n         for source in &debugging_opts.remap_path_prefix_from[remap_path_prefix_targets..] {"}]}