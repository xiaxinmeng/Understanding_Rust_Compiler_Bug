{"sha": "5bd036fcac1b109baf6b0d9a05af5232ec82c495", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZDAzNmZjYWMxYjEwOWJhZjZiMGQ5YTA1YWY1MjMyZWM4MmM0OTU=", "commit": {"author": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-01-25T14:06:37Z"}, "committer": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-02-04T11:53:10Z"}, "message": "Optimise common `=> {{` macro pattern", "tree": {"sha": "ea0f15832591245ccc7d12809f77005728faaf17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea0f15832591245ccc7d12809f77005728faaf17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bd036fcac1b109baf6b0d9a05af5232ec82c495", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bd036fcac1b109baf6b0d9a05af5232ec82c495", "html_url": "https://github.com/rust-lang/rust/commit/5bd036fcac1b109baf6b0d9a05af5232ec82c495", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bd036fcac1b109baf6b0d9a05af5232ec82c495/comments", "author": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fca9073d9e57d1cda689098d460106403b430aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fca9073d9e57d1cda689098d460106403b430aa", "html_url": "https://github.com/rust-lang/rust/commit/9fca9073d9e57d1cda689098d460106403b430aa"}], "stats": {"total": 43, "additions": 27, "deletions": 16}, "files": [{"sha": "1acad99688a25cc8563813acd7cbc505e7fdb1eb", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bd036fcac1b109baf6b0d9a05af5232ec82c495/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd036fcac1b109baf6b0d9a05af5232ec82c495/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=5bd036fcac1b109baf6b0d9a05af5232ec82c495", "patch": "@@ -97,14 +97,14 @@ fn execute() -> i32 {\n }\n \n macro_rules! print_usage {\n-    ($print: ident, $opts: ident, $reason: expr) => ({\n+    ($print: ident, $opts: ident, $reason: expr) => {{\n         let msg = format!(\"{}\\nusage: cargo fmt [options]\", $reason);\n         $print!(\n             \"{}\\nThis utility formats all bin and lib files of the current crate using rustfmt. \\\n              Arguments after `--` are passed to rustfmt.\",\n             $opts.usage(&msg)\n         );\n-    })\n+    }};\n }\n \n fn print_usage_to_stdout(opts: &Options, reason: &str) {"}, {"sha": "f362736ea92b1ea3fa31127546c82087a04738de", "filename": "src/macros.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5bd036fcac1b109baf6b0d9a05af5232ec82c495/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd036fcac1b109baf6b0d9a05af5232ec82c495/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=5bd036fcac1b109baf6b0d9a05af5232ec82c495", "patch": "@@ -335,8 +335,6 @@ pub fn rewrite_macro_def(\n             result += &args;\n         }\n \n-        result += \" {\\n\";\n-\n         // The macro body is the most interesting part. It might end up as various\n         // AST nodes, but also has special variables (e.g, `$foo`) which can't be\n         // parsed as regular Rust code (and note that these can be escaped using\n@@ -349,13 +347,23 @@ pub fn rewrite_macro_def(\n             None => return snippet,\n         };\n \n-        // We'll hack the indent below, take this into account when formatting,\n         let mut config = context.config.clone();\n-        let body_indent = mac_indent.block_indent(&config);\n-        let new_width = config.max_width() - body_indent.width();\n-        config.set().max_width(new_width);\n         config.set().hide_parse_errors(true);\n \n+        result += \" {\";\n+\n+        let has_block_body = old_body.starts_with(\"{\");\n+\n+        let body_indent = if has_block_body {\n+            mac_indent\n+        } else {\n+            // We'll hack the indent below, take this into account when formatting,\n+            let body_indent = mac_indent.block_indent(&config);\n+            let new_width = config.max_width() - body_indent.width();\n+            config.set().max_width(new_width);\n+            body_indent\n+        };\n+\n         // First try to format as items, then as statements.\n         let new_body = match ::format_snippet(&body_str, &config) {\n             Some(new_body) => new_body,\n@@ -390,9 +398,14 @@ pub fn rewrite_macro_def(\n             new_body = new_body.replace(new, old);\n         }\n \n-        result += &new_body;\n+        if has_block_body {\n+            result += new_body.trim();\n+        } else {\n+            result += \"\\n\";\n+            result += &new_body;\n+            result += &mac_indent_str;\n+        }\n \n-        result += &mac_indent_str;\n         result += \"}\";\n         if def.legacy {\n             result += \";\";"}, {"sha": "4c494c932d666942234e32468cfe3470cb8da861", "filename": "tests/target/macro_rules.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5bd036fcac1b109baf6b0d9a05af5232ec82c495/tests%2Ftarget%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd036fcac1b109baf6b0d9a05af5232ec82c495/tests%2Ftarget%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacro_rules.rs?ref=5bd036fcac1b109baf6b0d9a05af5232ec82c495", "patch": "@@ -1,10 +1,8 @@\n macro_rules! m {\n-    ($expr: expr, $func: ident) => {\n-        {\n-            let x = $expr;\n-            $func(x)\n-        }\n-    };\n+    ($expr: expr, $func: ident) => {{\n+        let x = $expr;\n+        $func(x)\n+    }};\n \n     () => {\n     };"}]}