{"sha": "f6762c20357c48f8bcee53d2ef396e483b74a891", "node_id": "C_kwDOAAsO6NoAKGY2NzYyYzIwMzU3YzQ4ZjhiY2VlNTNkMmVmMzk2ZTQ4M2I3NGE4OTE", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2022-12-12T12:50:00Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-12-28T14:18:42Z"}, "message": "update stabilization version numbers", "tree": {"sha": "a347c3b9b4204e27b54a3e776b2df72fd80d09fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a347c3b9b4204e27b54a3e776b2df72fd80d09fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6762c20357c48f8bcee53d2ef396e483b74a891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6762c20357c48f8bcee53d2ef396e483b74a891", "html_url": "https://github.com/rust-lang/rust/commit/f6762c20357c48f8bcee53d2ef396e483b74a891", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6762c20357c48f8bcee53d2ef396e483b74a891/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a20f7df5755d8c6b68110d2d0391a7b03268e77", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a20f7df5755d8c6b68110d2d0391a7b03268e77", "html_url": "https://github.com/rust-lang/rust/commit/6a20f7df5755d8c6b68110d2d0391a7b03268e77"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "e2f30fb89b91e9b3dd12943a7741fa9e6d9a1ade", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -194,7 +194,7 @@ declare_features! (\n     /// Allows irrefutable patterns in `if let` and `while let` statements (RFC 2086).\n     (accepted, irrefutable_let_patterns, \"1.33.0\", Some(44495), None),\n     /// Allows `#[instruction_set(_)]` attribute.\n-    (accepted, isa_attribute, \"CURRENT_RUSTC_VERSION\", Some(74727), None),\n+    (accepted, isa_attribute, \"1.67.0\", Some(74727), None),\n     /// Allows some increased flexibility in the name resolution rules,\n     /// especially around globs and shadowing (RFC 1560).\n     (accepted, item_like_imports, \"1.15.0\", Some(35120), None),\n@@ -240,7 +240,7 @@ declare_features! (\n     /// Allows specifying the bundle link modifier\n     (accepted, native_link_modifiers_bundle, \"1.63.0\", Some(81490), None),\n     /// Allows specifying the verbatim link modifier\n-    (accepted, native_link_modifiers_verbatim, \"CURRENT_RUSTC_VERSION\", Some(81490), None),\n+    (accepted, native_link_modifiers_verbatim, \"1.67.0\", Some(81490), None),\n     /// Allows specifying the whole-archive link modifier\n     (accepted, native_link_modifiers_whole_archive, \"1.61.0\", Some(81490), None),\n     /// Allows using non lexical lifetimes (RFC 2094)."}, {"sha": "34fc62e0549dad38b33bcc8be4bfca645fba5834", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -420,7 +420,7 @@ declare_features! (\n     /// Allows `impl Trait` as output type in `Fn` traits in return position of functions.\n     (active, impl_trait_in_fn_trait_return, \"1.64.0\", Some(99697), None),\n     /// Allows referencing `Self` and projections in impl-trait.\n-    (active, impl_trait_projections, \"CURRENT_RUSTC_VERSION\", Some(103532), None),\n+    (active, impl_trait_projections, \"1.67.0\", Some(103532), None),\n     /// Allows using imported `main` function\n     (active, imported_main, \"1.53.0\", Some(28937), None),\n     /// Allows associated types in inherent impls.\n@@ -507,7 +507,7 @@ declare_features! (\n     /// Allows lints part of the strict provenance effort.\n     (active, strict_provenance, \"1.61.0\", Some(95228), None),\n     /// Allows string patterns to dereference values to match them.\n-    (active, string_deref_patterns, \"CURRENT_RUSTC_VERSION\", Some(87121), None),\n+    (active, string_deref_patterns, \"1.67.0\", Some(87121), None),\n     /// Allows the use of `#[target_feature]` on safe functions.\n     (active, target_feature_11, \"1.45.0\", Some(69098), None),\n     /// Allows using `#[thread_local]` on `static` items."}, {"sha": "3e7383b4cd199fa5996a6429a2151819d5a5b55b", "filename": "library/core/src/char/methods.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fmethods.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -140,7 +140,7 @@ impl char {\n     /// assert_eq!(None, c);\n     /// ```\n     #[stable(feature = \"assoc_char_funcs\", since = \"1.52.0\")]\n-    #[rustc_const_stable(feature = \"const_char_convert\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_char_convert\", since = \"1.67.0\")]\n     #[must_use]\n     #[inline]\n     pub const fn from_u32(i: u32) -> Option<char> {\n@@ -241,7 +241,7 @@ impl char {\n     /// let _c = char::from_digit(1, 37);\n     /// ```\n     #[stable(feature = \"assoc_char_funcs\", since = \"1.52.0\")]\n-    #[rustc_const_stable(feature = \"const_char_convert\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_char_convert\", since = \"1.67.0\")]\n     #[must_use]\n     #[inline]\n     pub const fn from_digit(num: u32, radix: u32) -> Option<char> {\n@@ -338,7 +338,7 @@ impl char {\n     /// let _ = '1'.to_digit(37);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_char_convert\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"const_char_convert\", since = \"1.67.0\")]\n     #[must_use = \"this returns the result of the operation, \\\n                   without modifying the original\"]\n     #[inline]"}, {"sha": "af98059cf42c3e36d882e031ed7a2bd770a10c9f", "filename": "library/core/src/char/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fchar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fchar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fmod.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -110,7 +110,7 @@ pub fn decode_utf16<I: IntoIterator<Item = u16>>(iter: I) -> DecodeUtf16<I::Into\n \n /// Converts a `u32` to a `char`. Use [`char::from_u32`] instead.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_stable(feature = \"const_char_convert\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[rustc_const_stable(feature = \"const_char_convert\", since = \"1.67.0\")]\n #[must_use]\n #[inline]\n pub const fn from_u32(i: u32) -> Option<char> {\n@@ -130,7 +130,7 @@ pub const unsafe fn from_u32_unchecked(i: u32) -> char {\n \n /// Converts a digit in the given radix to a `char`. Use [`char::from_digit`] instead.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_stable(feature = \"const_char_convert\", since = \"CURRENT_RUSTC_VERSION\")]\n+#[rustc_const_stable(feature = \"const_char_convert\", since = \"1.67.0\")]\n #[must_use]\n #[inline]\n pub const fn from_digit(num: u32, radix: u32) -> Option<char> {"}, {"sha": "57096f4397436359d84f12b354598eb7f673f48c", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -2290,8 +2290,8 @@ macro_rules! int_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".ilog(5), 1);\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n@@ -2313,8 +2313,8 @@ macro_rules! int_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".ilog2(), 1);\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n@@ -2335,8 +2335,8 @@ macro_rules! int_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".ilog10(), 1);\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n@@ -2360,8 +2360,8 @@ macro_rules! int_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".checked_ilog(5), Some(1));\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2396,8 +2396,8 @@ macro_rules! int_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".checked_ilog2(), Some(1));\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -2420,8 +2420,8 @@ macro_rules! int_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".checked_ilog10(), Some(1));\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "fbda8f82b1bd906726775816fc920de7abb30c4b", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -462,8 +462,8 @@ macro_rules! nonzero_unsigned_operations {\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(8).unwrap().ilog2(), 3);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(9).unwrap().ilog2(), 3);\")]\n                 /// ```\n-                #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-                #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+                #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n                 #[must_use = \"this returns the result of the operation, \\\n                               without modifying the original\"]\n                 #[inline]\n@@ -486,8 +486,8 @@ macro_rules! nonzero_unsigned_operations {\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(100).unwrap().ilog10(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(101).unwrap().ilog10(), 2);\")]\n                 /// ```\n-                #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-                #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+                #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n                 #[must_use = \"this returns the result of the operation, \\\n                               without modifying the original\"]\n                 #[inline]\n@@ -1253,7 +1253,7 @@ macro_rules! nonzero_bits {\n                 ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::BITS, \", stringify!($Int), \"::BITS);\")]\n                 /// ```\n-                #[stable(feature = \"nonzero_bits\", since = \"CURRENT_RUSTC_VERSION\")]\n+                #[stable(feature = \"nonzero_bits\", since = \"1.67.0\")]\n                 pub const BITS: u32 = <$Int>::BITS;\n             }\n         )+"}, {"sha": "1c97c46862833a2e2c351c69649f782ac18a6b97", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6762c20357c48f8bcee53d2ef396e483b74a891/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=f6762c20357c48f8bcee53d2ef396e483b74a891", "patch": "@@ -703,8 +703,8 @@ macro_rules! uint_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".ilog(5), 1);\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n@@ -726,8 +726,8 @@ macro_rules! uint_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".ilog2(), 1);\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n@@ -748,8 +748,8 @@ macro_rules! uint_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".ilog10(), 1);\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[rustc_allow_const_fn_unstable(const_option)]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n@@ -773,8 +773,8 @@ macro_rules! uint_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(5\", stringify!($SelfT), \".checked_ilog(5), Some(1));\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -809,8 +809,8 @@ macro_rules! uint_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(2\", stringify!($SelfT), \".checked_ilog2(), Some(1));\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -831,8 +831,8 @@ macro_rules! uint_impl {\n         /// ```\n         #[doc = concat!(\"assert_eq!(10\", stringify!($SelfT), \".checked_ilog10(), Some(1));\")]\n         /// ```\n-        #[stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n-        #[rustc_const_stable(feature = \"int_log\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[stable(feature = \"int_log\", since = \"1.67.0\")]\n+        #[rustc_const_stable(feature = \"int_log\", since = \"1.67.0\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}]}