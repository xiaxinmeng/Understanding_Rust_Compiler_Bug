{"sha": "23df4a0183e0d954d47db98824295411d50f742e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZGY0YTAxODNlMGQ5NTRkNDdkYjk4ODI0Mjk1NDExZDUwZjc0MmU=", "commit": {"author": {"name": "Michael Sproul", "email": "michael@sigmaprime.io", "date": "2020-04-13T03:11:19Z"}, "committer": {"name": "Michael Sproul", "email": "michael@sigmaprime.io", "date": "2020-04-13T03:23:59Z"}, "message": "Disallow bit-shifting in `integer_arithmetic` lint\n\nWith this change, the lint checks all operations that are defined as\nbeing capable of overflow in the Rust Reference.", "tree": {"sha": "c0bc9e5359293af56a87abafcbdc2383f407b059", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0bc9e5359293af56a87abafcbdc2383f407b059"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23df4a0183e0d954d47db98824295411d50f742e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEyqmiaFUWoDD2agrYd7EwnS5U6RQFAl6T21QACgkQd7EwnS5U\n6RTbUwgAvbMHMS0786EtcRrqPGOLLFyX6+8S2fEBxwnfzLn/SSXKPjGE4R5KSLTB\nHR6aGQyb6sKfkywuwG5xINd5CZsf6eS9piut68v92OyLcK4n9lq4ge6RZCpNV78C\nLTiE4l0WO4g7czX6DDgQJ9txCOzpM+OCoid61ct+44S9n7c62XsfYFIBubcrA5HB\nTq8PRuDl6YW0omBDCYUEBedIwQ1fOMPwfB90FPombjU1zwESPTs77RopBs5sw/5f\nPVLfdYLBpRIXEcJnGNlm4DeU/xVU7hKX+lHnzHbFZur7qkhNRD3+zZc4QP9Mmc5g\nhq66TmRuqfAg1qoWKGhvkekc40/iHw==\n=zWvK\n-----END PGP SIGNATURE-----", "payload": "tree c0bc9e5359293af56a87abafcbdc2383f407b059\nparent e29d55056585062a387074dd77cf935aa8352bbc\nauthor Michael Sproul <michael@sigmaprime.io> 1586747479 +1000\ncommitter Michael Sproul <michael@sigmaprime.io> 1586748239 +1000\n\nDisallow bit-shifting in `integer_arithmetic` lint\n\nWith this change, the lint checks all operations that are defined as\nbeing capable of overflow in the Rust Reference.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23df4a0183e0d954d47db98824295411d50f742e", "html_url": "https://github.com/rust-lang/rust/commit/23df4a0183e0d954d47db98824295411d50f742e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23df4a0183e0d954d47db98824295411d50f742e/comments", "author": {"login": "michaelsproul", "id": 4452260, "node_id": "MDQ6VXNlcjQ0NTIyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelsproul", "html_url": "https://github.com/michaelsproul", "followers_url": "https://api.github.com/users/michaelsproul/followers", "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}", "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions", "organizations_url": "https://api.github.com/users/michaelsproul/orgs", "repos_url": "https://api.github.com/users/michaelsproul/repos", "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelsproul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelsproul", "id": 4452260, "node_id": "MDQ6VXNlcjQ0NTIyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelsproul", "html_url": "https://github.com/michaelsproul", "followers_url": "https://api.github.com/users/michaelsproul/followers", "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}", "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions", "organizations_url": "https://api.github.com/users/michaelsproul/orgs", "repos_url": "https://api.github.com/users/michaelsproul/repos", "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelsproul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e29d55056585062a387074dd77cf935aa8352bbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e29d55056585062a387074dd77cf935aa8352bbc", "html_url": "https://github.com/rust-lang/rust/commit/e29d55056585062a387074dd77cf935aa8352bbc"}], "stats": {"total": 70, "additions": 48, "deletions": 22}, "files": [{"sha": "6cbe10a5352d1d1cf3b91caccfd3c59f8408c2da", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23df4a0183e0d954d47db98824295411d50f742e/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23df4a0183e0d954d47db98824295411d50f742e/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=23df4a0183e0d954d47db98824295411d50f742e", "patch": "@@ -6,11 +6,17 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for plain integer arithmetic.\n+    /// **What it does:** Checks for integer arithmetic operations which could overflow or panic.\n     ///\n-    /// **Why is this bad?** This is only checked against overflow in debug builds.\n-    /// In some applications one wants explicitly checked, wrapping or saturating\n-    /// arithmetic.\n+    /// Specifically, checks for any operators (`+`, `-`, `*`, `<<`, etc) which are capable\n+    /// of overflowing according to the [Rust\n+    /// Reference](https://doc.rust-lang.org/reference/expressions/operator-expr.html#overflow),\n+    /// or which can panic (`/`, `%`). No bounds analysis or sophisticated reasoning is\n+    /// attempted.\n+    ///\n+    /// **Why is this bad?** Integer overflow will trigger a panic in debug builds or will wrap in\n+    /// release mode. Division by zero will cause a panic in either mode. In some applications one\n+    /// wants explicitly checked, wrapping or saturating arithmetic.\n     ///\n     /// **Known problems:** None.\n     ///\n@@ -21,7 +27,7 @@ declare_clippy_lint! {\n     /// ```\n     pub INTEGER_ARITHMETIC,\n     restriction,\n-    \"any integer arithmetic statement\"\n+    \"any integer arithmetic expression which could overflow or panic\"\n }\n \n declare_clippy_lint! {\n@@ -71,8 +77,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Arithmetic {\n                     | hir::BinOpKind::BitAnd\n                     | hir::BinOpKind::BitOr\n                     | hir::BinOpKind::BitXor\n-                    | hir::BinOpKind::Shl\n-                    | hir::BinOpKind::Shr\n                     | hir::BinOpKind::Eq\n                     | hir::BinOpKind::Lt\n                     | hir::BinOpKind::Le"}, {"sha": "8712f07e9e0c4326079ad252dafe1cedeef559ab", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23df4a0183e0d954d47db98824295411d50f742e/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23df4a0183e0d954d47db98824295411d50f742e/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=23df4a0183e0d954d47db98824295411d50f742e", "patch": "@@ -846,7 +846,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     Lint {\n         name: \"integer_arithmetic\",\n         group: \"restriction\",\n-        desc: \"any integer arithmetic statement\",\n+        desc: \"any integer arithmetic expression which could overflow or panic\",\n         deprecation: None,\n         module: \"arithmetic\",\n     },"}, {"sha": "7b1b64f390a5aa25a5f4039761dab8b8dc832e54", "filename": "tests/ui/integer_arithmetic.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23df4a0183e0d954d47db98824295411d50f742e/tests%2Fui%2Finteger_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23df4a0183e0d954d47db98824295411d50f742e/tests%2Fui%2Finteger_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finteger_arithmetic.rs?ref=23df4a0183e0d954d47db98824295411d50f742e", "patch": "@@ -17,6 +17,8 @@ fn main() {\n     i / 2; // no error, this is part of the expression in the preceding line\n     i - 2 + 2 - i;\n     -i;\n+    i >> 1;\n+    i << 1;\n \n     // no error, overflows are checked by `overflowing_literals`\n     -1;\n@@ -25,18 +27,16 @@ fn main() {\n     i & 1; // no wrapping\n     i | 1;\n     i ^ 1;\n-    i >> 1;\n-    i << 1;\n \n     i += 1;\n     i -= 1;\n     i *= 2;\n     i /= 2;\n     i %= 2;\n-\n-    // no errors\n     i <<= 3;\n     i >>= 2;\n+\n+    // no errors\n     i |= 1;\n     i &= 1;\n     i ^= i;\n@@ -72,8 +72,6 @@ fn main() {\n             1 + 1\n         };\n     }\n-\n-\n }\n \n // warn on references as well! (#5328)"}, {"sha": "83e8a9cde3ff11873f6cbb715af32565f9461ed5", "filename": "tests/ui/integer_arithmetic.stderr", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/23df4a0183e0d954d47db98824295411d50f742e/tests%2Fui%2Finteger_arithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23df4a0183e0d954d47db98824295411d50f742e/tests%2Fui%2Finteger_arithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finteger_arithmetic.stderr?ref=23df4a0183e0d954d47db98824295411d50f742e", "patch": "@@ -31,6 +31,18 @@ error: integer arithmetic detected\n LL |     -i;\n    |     ^^\n \n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:20:5\n+   |\n+LL |     i >> 1;\n+   |     ^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:21:5\n+   |\n+LL |     i << 1;\n+   |     ^^^^^^\n+\n error: integer arithmetic detected\n   --> $DIR/integer_arithmetic.rs:31:5\n    |\n@@ -62,46 +74,58 @@ LL |     i %= 2;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:81:5\n+  --> $DIR/integer_arithmetic.rs:36:5\n+   |\n+LL |     i <<= 3;\n+   |     ^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:37:5\n+   |\n+LL |     i >>= 2;\n+   |     ^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:79:5\n    |\n LL |     3 + &1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:82:5\n+  --> $DIR/integer_arithmetic.rs:80:5\n    |\n LL |     &3 + 1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:83:5\n+  --> $DIR/integer_arithmetic.rs:81:5\n    |\n LL |     &3 + &1;\n    |     ^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:88:5\n+  --> $DIR/integer_arithmetic.rs:86:5\n    |\n LL |     a + x\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:92:5\n+  --> $DIR/integer_arithmetic.rs:90:5\n    |\n LL |     x + y\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:96:5\n+  --> $DIR/integer_arithmetic.rs:94:5\n    |\n LL |     x + y\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:100:5\n+  --> $DIR/integer_arithmetic.rs:98:5\n    |\n LL |     (&x + &y)\n    |     ^^^^^^^^^\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 21 previous errors\n "}]}