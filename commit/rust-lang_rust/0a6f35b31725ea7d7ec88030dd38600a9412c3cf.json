{"sha": "0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNmYzNWIzMTcyNWVhN2Q3ZWM4ODAzMGRkMzg2MDBhOTQxMmMzY2Y=", "commit": {"author": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2016-02-20T07:18:02Z"}, "committer": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2016-02-20T07:18:02Z"}, "message": "Remove dead code from sys::windows::c", "tree": {"sha": "afee8529738d4c4b216a9fbdb388e53e8b757d69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afee8529738d4c4b216a9fbdb388e53e8b757d69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "html_url": "https://github.com/rust-lang/rust/commit/0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/comments", "author": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44e31b91ad05ba0bdb6db5c6f75451ba60160d84", "url": "https://api.github.com/repos/rust-lang/rust/commits/44e31b91ad05ba0bdb6db5c6f75451ba60160d84", "html_url": "https://github.com/rust-lang/rust/commit/44e31b91ad05ba0bdb6db5c6f75451ba60160d84"}], "stats": {"total": 246, "additions": 36, "deletions": 210}, "files": [{"sha": "80ff0cb0453ad1570c6cc14f275daa540f57edb4", "filename": "src/libstd/sys/windows/backtrace.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs?ref=0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "patch": "@@ -22,7 +22,7 @@\n //! copy of that function in my mingw install (maybe it was broken?). Instead,\n //! this takes the route of using StackWalk64 in order to walk the stack.\n \n-#![allow(dead_code, deprecated)]\n+#![allow(deprecated)] // dynamic_lib\n \n use io::prelude::*;\n \n@@ -51,12 +51,6 @@ mod printing;\n #[path = \"printing/gnu.rs\"]\n mod printing;\n \n-type SymFromAddrFn =\n-    extern \"system\" fn(c::HANDLE, u64, *mut u64,\n-                       *mut c::SYMBOL_INFO) -> c::BOOL;\n-type SymGetLineFromAddr64Fn =\n-    extern \"system\" fn(c::HANDLE, u64, *mut u32,\n-                       *mut c::IMAGEHLP_LINE64) -> c::BOOL;\n type SymInitializeFn =\n     extern \"system\" fn(c::HANDLE, *mut c_void,\n                        c::BOOL) -> c::BOOL;"}, {"sha": "1ae87c6901a6bf731089315adc7f14235f4db5f0", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 26, "deletions": 200, "changes": 226, "blob_url": "https://github.com/rust-lang/rust/blob/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "patch": "@@ -10,18 +10,18 @@\n \n //! C definitions used by libnative that don't belong in liblibc\n \n-#![allow(bad_style, overflowing_literals, dead_code, deprecated, unused_imports)]\n+#![allow(bad_style)]\n+#![cfg_attr(test, allow(dead_code))]\n \n use os::raw::{c_int, c_uint, c_ulong, c_long, c_longlong, c_ushort};\n-use os::raw::{c_char, c_short, c_ulonglong};\n+use os::raw::{c_char, c_ulonglong};\n use libc::{wchar_t, size_t, c_void};\n use ptr;\n \n #[repr(simd)]\n #[repr(C)]\n struct u64x2(u64, u64);\n \n-pub use self::GET_FILEEX_INFO_LEVELS::*;\n pub use self::FILE_INFO_BY_HANDLE_CLASS::*;\n pub use self::EXCEPTION_DISPOSITION::*;\n \n@@ -64,7 +64,6 @@ pub type LPVOID = *mut c_void;\n pub type LPWCH = *mut WCHAR;\n pub type LPWIN32_FIND_DATAW = *mut WIN32_FIND_DATAW;\n pub type LPWSADATA = *mut WSADATA;\n-pub type LPWSANETWORKEVENTS = *mut WSANETWORKEVENTS;\n pub type LPWSAPROTOCOLCHAIN = *mut WSAPROTOCOLCHAIN;\n pub type LPWSAPROTOCOL_INFO = *mut WSAPROTOCOL_INFO;\n pub type LPWSTR = *mut WCHAR;\n@@ -83,56 +82,35 @@ pub const FALSE: BOOL = 0;\n \n pub const FILE_ATTRIBUTE_READONLY: DWORD = 0x1;\n pub const FILE_ATTRIBUTE_DIRECTORY: DWORD = 0x10;\n-pub const FILE_ATTRIBUTE_NORMAL: DWORD = 0x80;\n pub const FILE_ATTRIBUTE_REPARSE_POINT: DWORD = 0x400;\n+\n pub const FILE_SHARE_DELETE: DWORD = 0x4;\n pub const FILE_SHARE_READ: DWORD = 0x1;\n pub const FILE_SHARE_WRITE: DWORD = 0x2;\n+\n pub const CREATE_ALWAYS: DWORD = 2;\n pub const CREATE_NEW: DWORD = 1;\n pub const OPEN_ALWAYS: DWORD = 4;\n pub const OPEN_EXISTING: DWORD = 3;\n pub const TRUNCATE_EXISTING: DWORD = 5;\n \n-pub const FILE_READ_DATA: DWORD = 0x00000001;\n pub const FILE_WRITE_DATA: DWORD = 0x00000002;\n pub const FILE_APPEND_DATA: DWORD = 0x00000004;\n-pub const FILE_READ_EA: DWORD = 0x00000008;\n pub const FILE_WRITE_EA: DWORD = 0x00000010;\n-pub const FILE_EXECUTE: DWORD = 0x00000020;\n-pub const FILE_READ_ATTRIBUTES: DWORD = 0x00000080;\n pub const FILE_WRITE_ATTRIBUTES: DWORD = 0x00000100;\n-\n-pub const DELETE: DWORD = 0x00008000;\n pub const READ_CONTROL: DWORD = 0x00020000;\n-pub const WRITE_DAC: DWORD = 0x00040000;\n-pub const WRITE_OWNER: DWORD = 0x00080000;\n pub const SYNCHRONIZE: DWORD = 0x00100000;\n-\n pub const GENERIC_READ: DWORD = 0x80000000;\n pub const GENERIC_WRITE: DWORD = 0x40000000;\n-pub const GENERIC_EXECUTE: DWORD = 0x20000000;\n-pub const GENERIC_ALL: DWORD = 0x10000000;\n-\n-pub const STANDARD_RIGHTS_READ: DWORD = READ_CONTROL;\n pub const STANDARD_RIGHTS_WRITE: DWORD = READ_CONTROL;\n-pub const STANDARD_RIGHTS_EXECUTE: DWORD = READ_CONTROL;\n-pub const FILE_GENERIC_READ: DWORD = STANDARD_RIGHTS_READ | FILE_READ_DATA |\n-                                     FILE_READ_ATTRIBUTES |\n-                                     FILE_READ_EA |\n-                                     SYNCHRONIZE;\n pub const FILE_GENERIC_WRITE: DWORD = STANDARD_RIGHTS_WRITE | FILE_WRITE_DATA |\n                                       FILE_WRITE_ATTRIBUTES |\n                                       FILE_WRITE_EA |\n                                       FILE_APPEND_DATA |\n                                       SYNCHRONIZE;\n \n-pub const SECURITY_ANONYMOUS: DWORD = 0 << 16;\n-pub const SECURITY_IDENTIFICATION: DWORD = 1 << 16;\n-pub const SECURITY_IMPERSONATION: DWORD = 2 << 16;\n-pub const SECURITY_DELEGATION: DWORD = 3 << 16;\n-pub const SECURITY_CONTEXT_TRACKING: DWORD = 0x00040000;\n-pub const SECURITY_EFFECTIVE_ONLY: DWORD = 0x00080000;\n+pub const FILE_FLAG_OPEN_REPARSE_POINT: DWORD = 0x00200000;\n+pub const FILE_FLAG_BACKUP_SEMANTICS: DWORD = 0x02000000;\n pub const SECURITY_SQOS_PRESENT: DWORD = 0x00100000;\n \n #[repr(C)]\n@@ -153,96 +131,36 @@ impl Clone for WIN32_FIND_DATAW {\n     fn clone(&self) -> Self { *self }\n }\n \n-pub const FIONBIO: c_long = 0x8004667e;\n-pub const FD_SETSIZE: usize = 64;\n-pub const MSG_DONTWAIT: c_int = 0;\n-pub const ENABLE_ECHO_INPUT: DWORD = 0x4;\n-pub const ENABLE_EXTENDED_FLAGS: DWORD = 0x80;\n-pub const ENABLE_INSERT_MODE: DWORD = 0x20;\n-pub const ENABLE_LINE_INPUT: DWORD = 0x2;\n-pub const ENABLE_PROCESSED_INPUT: DWORD = 0x1;\n-pub const ENABLE_QUICK_EDIT_MODE: DWORD = 0x40;\n-\n-pub const FD_ACCEPT: c_long = 0x08;\n-pub const FD_MAX_EVENTS: usize = 10;\n-\n-pub const WSA_INVALID_EVENT: WSAEVENT = 0 as WSAEVENT;\n-pub const WSA_INFINITE: DWORD = INFINITE;\n-pub const WSA_WAIT_TIMEOUT: DWORD = WAIT_TIMEOUT;\n-pub const WSA_WAIT_EVENT_0: DWORD = WAIT_OBJECT_0;\n-pub const WSA_WAIT_FAILED: DWORD = WAIT_FAILED;\n pub const WSA_FLAG_OVERLAPPED: DWORD = 0x01;\n-pub const WSA_FLAG_NO_HANDLE_INHERIT: DWORD = 0x80;\n \n pub const WSADESCRIPTION_LEN: usize = 256;\n pub const WSASYS_STATUS_LEN: usize = 128;\n pub const WSAPROTOCOL_LEN: DWORD = 255;\n pub const INVALID_SOCKET: SOCKET = !0;\n \n-pub const WSAEINTR: c_int = 10004;\n-pub const WSAEBADF: c_int = 10009;\n pub const WSAEACCES: c_int = 10013;\n-pub const WSAEFAULT: c_int = 10014;\n pub const WSAEINVAL: c_int = 10022;\n-pub const WSAEMFILE: c_int = 10024;\n pub const WSAEWOULDBLOCK: c_int = 10035;\n-pub const WSAEINPROGRESS: c_int = 10036;\n-pub const WSAEALREADY: c_int = 10037;\n-pub const WSAENOTSOCK: c_int = 10038;\n-pub const WSAEDESTADDRREQ: c_int = 10039;\n-pub const WSAEMSGSIZE: c_int = 10040;\n-pub const WSAEPROTOTYPE: c_int = 10041;\n-pub const WSAENOPROTOOPT: c_int = 10042;\n-pub const WSAEPROTONOSUPPORT: c_int = 10043;\n-pub const WSAESOCKTNOSUPPORT: c_int = 10044;\n-pub const WSAEOPNOTSUPP: c_int = 10045;\n-pub const WSAEPFNOSUPPORT: c_int = 10046;\n-pub const WSAEAFNOSUPPORT: c_int = 10047;\n pub const WSAEADDRINUSE: c_int = 10048;\n pub const WSAEADDRNOTAVAIL: c_int = 10049;\n-pub const WSAENETDOWN: c_int = 10050;\n-pub const WSAENETUNREACH: c_int = 10051;\n-pub const WSAENETRESET: c_int = 10052;\n pub const WSAECONNABORTED: c_int = 10053;\n pub const WSAECONNRESET: c_int = 10054;\n-pub const WSAENOBUFS: c_int = 10055;\n-pub const WSAEISCONN: c_int = 10056;\n pub const WSAENOTCONN: c_int = 10057;\n pub const WSAESHUTDOWN: c_int = 10058;\n-pub const WSAETOOMANYREFS: c_int = 10059;\n pub const WSAETIMEDOUT: c_int = 10060;\n pub const WSAECONNREFUSED: c_int = 10061;\n-pub const WSAELOOP: c_int = 10062;\n-pub const WSAENAMETOOLONG: c_int = 10063;\n-pub const WSAEHOSTDOWN: c_int = 10064;\n-pub const WSAEHOSTUNREACH: c_int = 10065;\n-pub const WSAENOTEMPTY: c_int = 10066;\n-pub const WSAEPROCLIM: c_int = 10067;\n-pub const WSAEUSERS: c_int = 10068;\n-pub const WSAEDQUOT: c_int = 10069;\n-pub const WSAESTALE: c_int = 10070;\n-pub const WSAEREMOTE: c_int = 10071;\n-pub const WSASYSNOTREADY: c_int = 10091;\n-pub const WSAVERNOTSUPPORTED: c_int = 10092;\n-pub const WSANOTINITIALISED: c_int = 10093;\n-pub const WSAEDISCON: c_int = 10101;\n-pub const WSAENOMORE: c_int = 10102;\n-pub const WSAECANCELLED: c_int = 10103;\n-pub const WSAEINVALIDPROCTABLE: c_int = 10104;\n+\n pub const NI_MAXHOST: DWORD = 1025;\n \n pub const MAX_PROTOCOL_CHAIN: DWORD = 7;\n \n pub const TOKEN_READ: DWORD = 0x20008;\n-pub const FILE_FLAG_OPEN_REPARSE_POINT: DWORD = 0x00200000;\n-pub const FILE_FLAG_BACKUP_SEMANTICS: DWORD = 0x02000000;\n pub const MAXIMUM_REPARSE_DATA_BUFFER_SIZE: usize = 16 * 1024;\n pub const FSCTL_GET_REPARSE_POINT: DWORD = 0x900a8;\n pub const IO_REPARSE_TAG_SYMLINK: DWORD = 0xa000000c;\n pub const IO_REPARSE_TAG_MOUNT_POINT: DWORD = 0xa0000003;\n pub const SYMLINK_FLAG_RELATIVE: DWORD = 0x00000001;\n pub const FSCTL_SET_REPARSE_POINT: DWORD = 0x900a4;\n-pub const FSCTL_DELETE_REPARSE_POINT: DWORD = 0x900ac;\n \n pub const SYMBOLIC_LINK_FLAG_DIRECTORY: DWORD = 0x1;\n \n@@ -254,38 +172,19 @@ pub const STD_ERROR_HANDLE: DWORD = -12i32 as DWORD;\n pub const HANDLE_FLAG_INHERIT: DWORD = 0x00000001;\n \n pub const PROGRESS_CONTINUE: DWORD = 0;\n-pub const PROGRESS_CANCEL: DWORD = 1;\n-pub const PROGRESS_STOP: DWORD = 2;\n-pub const PROGRESS_QUIET: DWORD = 3;\n-\n-pub const TOKEN_ADJUST_PRIVILEGES: DWORD = 0x0020;\n-pub const SE_PRIVILEGE_ENABLED: DWORD = 2;\n-\n \n-pub const ERROR_SUCCESS: DWORD = 0;\n-pub const ERROR_INVALID_FUNCTION: DWORD = 1;\n pub const ERROR_FILE_NOT_FOUND: DWORD = 2;\n pub const ERROR_PATH_NOT_FOUND: DWORD = 3;\n pub const ERROR_ACCESS_DENIED: DWORD = 5;\n pub const ERROR_INVALID_HANDLE: DWORD = 6;\n pub const ERROR_NO_MORE_FILES: DWORD = 18;\n pub const ERROR_BROKEN_PIPE: DWORD = 109;\n-pub const ERROR_DISK_FULL: DWORD = 112;\n pub const ERROR_CALL_NOT_IMPLEMENTED: DWORD = 120;\n pub const ERROR_INSUFFICIENT_BUFFER: DWORD = 122;\n-pub const ERROR_INVALID_NAME: DWORD = 123;\n pub const ERROR_ALREADY_EXISTS: DWORD = 183;\n-pub const ERROR_PIPE_BUSY: DWORD = 231;\n pub const ERROR_NO_DATA: DWORD = 232;\n-pub const ERROR_INVALID_ADDRESS: DWORD = 487;\n-pub const ERROR_PIPE_CONNECTED: DWORD = 535;\n-pub const ERROR_ILLEGAL_CHARACTER: DWORD = 582;\n pub const ERROR_ENVVAR_NOT_FOUND: DWORD = 203;\n-pub const ERROR_NOTHING_TO_TERMINATE: DWORD = 758;\n pub const ERROR_OPERATION_ABORTED: DWORD = 995;\n-pub const ERROR_IO_PENDING: DWORD = 997;\n-pub const ERROR_FILE_INVALID: DWORD = 1006;\n-pub const ERROR_NOT_FOUND: DWORD = 1168;\n pub const ERROR_TIMEOUT: DWORD = 0x5B4;\n \n pub const INVALID_HANDLE_VALUE: HANDLE = !0 as HANDLE;\n@@ -307,8 +206,6 @@ pub const CONDITION_VARIABLE_INIT: CONDITION_VARIABLE = CONDITION_VARIABLE {\n };\n pub const SRWLOCK_INIT: SRWLOCK = SRWLOCK { ptr: ptr::null_mut() };\n \n-pub const STILL_ACTIVE: DWORD = 259;\n-\n pub const DETACHED_PROCESS: DWORD = 0x00000008;\n pub const CREATE_NEW_PROCESS_GROUP: DWORD = 0x00000200;\n pub const CREATE_UNICODE_ENVIRONMENT: DWORD = 0x00000400;\n@@ -333,14 +230,13 @@ pub const FILE_BEGIN: DWORD = 0;\n pub const FILE_CURRENT: DWORD = 1;\n pub const FILE_END: DWORD = 2;\n \n-pub const WAIT_ABANDONED: DWORD = 0x00000080;\n pub const WAIT_OBJECT_0: DWORD = 0x00000000;\n-pub const WAIT_TIMEOUT: DWORD = 0x00000102;\n-pub const WAIT_FAILED: DWORD = !0;\n \n+#[cfg(target_env = \"msvc\")]\n pub const MAX_SYM_NAME: usize = 2000;\n+#[cfg(target_arch = \"x86\")]\n pub const IMAGE_FILE_MACHINE_I386: DWORD = 0x014c;\n-pub const IMAGE_FILE_MACHINE_IA64: DWORD = 0x0200;\n+#[cfg(target_arch = \"x86_64\")]\n pub const IMAGE_FILE_MACHINE_AMD64: DWORD = 0x8664;\n \n pub const PROV_RSA_FULL: DWORD = 1;\n@@ -350,13 +246,17 @@ pub const CRYPT_VERIFYCONTEXT: DWORD = 0xF0000000;\n pub const EXCEPTION_CONTINUE_SEARCH: LONG = 0;\n pub const EXCEPTION_STACK_OVERFLOW: DWORD = 0xc00000fd;\n pub const EXCEPTION_MAXIMUM_PARAMETERS: usize = 15;\n+#[cfg(target_env = \"gnu\")]\n pub const EXCEPTION_NONCONTINUABLE: DWORD = 0x1;   // Noncontinuable exception\n+#[cfg(target_env = \"gnu\")]\n pub const EXCEPTION_UNWINDING: DWORD = 0x2;        // Unwind is in progress\n+#[cfg(target_env = \"gnu\")]\n pub const EXCEPTION_EXIT_UNWIND: DWORD = 0x4;      // Exit unwind is in progress\n-pub const EXCEPTION_STACK_INVALID: DWORD = 0x8;    // Stack out of limits or unaligned\n-pub const EXCEPTION_NESTED_CALL: DWORD = 0x10;     // Nested exception handler call\n+#[cfg(target_env = \"gnu\")]\n pub const EXCEPTION_TARGET_UNWIND: DWORD = 0x20;   // Target unwind in progress\n+#[cfg(target_env = \"gnu\")]\n pub const EXCEPTION_COLLIDED_UNWIND: DWORD = 0x40; // Collided exception handler call\n+#[cfg(target_env = \"gnu\")]\n pub const EXCEPTION_UNWIND: DWORD = EXCEPTION_UNWINDING |\n                                     EXCEPTION_EXIT_UNWIND |\n                                     EXCEPTION_TARGET_UNWIND |\n@@ -385,12 +285,6 @@ pub struct WSADATA {\n     pub szSystemStatus: [u8; WSASYS_STATUS_LEN + 1],\n }\n \n-#[repr(C)]\n-pub struct WSANETWORKEVENTS {\n-    pub lNetworkEvents: c_long,\n-    pub iErrorCode: [c_int; FD_MAX_EVENTS],\n-}\n-\n pub type WSAEVENT = HANDLE;\n \n #[repr(C)]\n@@ -417,43 +311,6 @@ pub struct WSAPROTOCOL_INFO {\n     pub szProtocol: [u16; (WSAPROTOCOL_LEN as usize) + 1],\n }\n \n-#[repr(C)]\n-pub struct fd_set {\n-    fd_count: c_uint,\n-    fd_array: [SOCKET; FD_SETSIZE],\n-}\n-\n-pub fn fd_set(set: &mut fd_set, s: SOCKET) {\n-    set.fd_array[set.fd_count as usize] = s;\n-    set.fd_count += 1;\n-}\n-\n-pub type SHORT = c_short;\n-\n-#[repr(C)]\n-pub struct COORD {\n-    pub X: SHORT,\n-    pub Y: SHORT,\n-}\n-\n-#[repr(C)]\n-pub struct SMALL_RECT {\n-    pub Left: SHORT,\n-    pub Top: SHORT,\n-    pub Right: SHORT,\n-    pub Bottom: SHORT,\n-}\n-\n-#[repr(C)]\n-pub struct CONSOLE_SCREEN_BUFFER_INFO {\n-    pub dwSize: COORD,\n-    pub dwCursorPosition: COORD,\n-    pub wAttributes: WORD,\n-    pub srWindow: SMALL_RECT,\n-    pub dwMaximumWindowSize: COORD,\n-}\n-pub type PCONSOLE_SCREEN_BUFFER_INFO = *mut CONSOLE_SCREEN_BUFFER_INFO;\n-\n #[repr(C)]\n #[derive(Copy, Clone)]\n pub struct WIN32_FILE_ATTRIBUTE_DATA {\n@@ -480,12 +337,7 @@ pub struct BY_HANDLE_FILE_INFORMATION {\n }\n \n #[repr(C)]\n-pub enum GET_FILEEX_INFO_LEVELS {\n-    GetFileExInfoStandard,\n-    GetFileExMaxInfoLevel\n-}\n-\n-#[repr(C)]\n+#[allow(dead_code)] // we only use some variants\n pub enum FILE_INFO_BY_HANDLE_CLASS {\n     FileBasicInfo                   = 0,\n     FileStandardInfo                = 1,\n@@ -569,28 +421,6 @@ pub struct CRITICAL_SECTION {\n     SpinCount: ULONG_PTR\n }\n \n-#[repr(C)]\n-pub struct LUID {\n-    pub LowPart: DWORD,\n-    pub HighPart: c_long,\n-}\n-\n-pub type PLUID = *mut LUID;\n-\n-#[repr(C)]\n-pub struct TOKEN_PRIVILEGES {\n-    pub PrivilegeCount: DWORD,\n-    pub Privileges: [LUID_AND_ATTRIBUTES; 1],\n-}\n-\n-pub type PTOKEN_PRIVILEGES = *mut TOKEN_PRIVILEGES;\n-\n-#[repr(C)]\n-pub struct LUID_AND_ATTRIBUTES {\n-    pub Luid: LUID,\n-    pub Attributes: DWORD,\n-}\n-\n #[repr(C)]\n pub struct REPARSE_MOUNTPOINT_DATA_BUFFER {\n     pub ReparseTag: DWORD,\n@@ -695,6 +525,7 @@ pub struct OVERLAPPED {\n }\n \n #[repr(C)]\n+#[cfg(target_env = \"msvc\")]\n pub struct SYMBOL_INFO {\n     pub SizeOfStruct: c_ulong,\n     pub TypeIndex: c_ulong,\n@@ -717,6 +548,7 @@ pub struct SYMBOL_INFO {\n }\n \n #[repr(C)]\n+#[cfg(target_env = \"msvc\")]\n pub struct IMAGEHLP_LINE64 {\n     pub SizeOfStruct: u32,\n     pub Key: *const c_void,\n@@ -726,6 +558,7 @@ pub struct IMAGEHLP_LINE64 {\n }\n \n #[repr(C)]\n+#[allow(dead_code)] // we only use some variants\n pub enum ADDRESS_MODE {\n     AddrMode1616,\n     AddrMode1632,\n@@ -941,16 +774,19 @@ pub struct in6_addr {\n     pub s6_addr: [u8; 16],\n }\n \n+#[cfg(target_env = \"gnu\")]\n pub enum UNWIND_HISTORY_TABLE {}\n \n #[repr(C)]\n+#[cfg(target_env = \"gnu\")]\n pub struct RUNTIME_FUNCTION {\n     pub BeginAddress: DWORD,\n     pub EndAddress: DWORD,\n     pub UnwindData: DWORD,\n }\n \n #[repr(C)]\n+#[cfg(target_env = \"gnu\")]\n pub struct DISPATCHER_CONTEXT {\n     pub ControlPc: LPVOID,\n     pub ImageBase: LPVOID,\n@@ -965,6 +801,7 @@ pub struct DISPATCHER_CONTEXT {\n \n #[repr(C)]\n #[derive(Copy, Clone)]\n+#[allow(dead_code)] // we only use some variants\n pub enum EXCEPTION_DISPOSITION {\n     ExceptionContinueExecution,\n     ExceptionContinueSearch,\n@@ -1016,9 +853,6 @@ extern \"system\" {\n \n     pub fn GetConsoleMode(hConsoleHandle: HANDLE,\n                           lpMode: LPDWORD) -> BOOL;\n-    pub fn GetFileAttributesExW(lpFileName: LPCWSTR,\n-                                fInfoLevelId: GET_FILEEX_INFO_LEVELS,\n-                                lpFileInformation: LPVOID) -> BOOL;\n     pub fn RemoveDirectoryW(lpPathName: LPCWSTR) -> BOOL;\n     pub fn SetFileAttributesW(lpFileName: LPCWSTR,\n                               dwFileAttributes: DWORD) -> BOOL;\n@@ -1076,15 +910,6 @@ extern \"system\" {\n                        lpData: LPVOID,\n                        pbCancel: LPBOOL,\n                        dwCopyFlags: DWORD) -> BOOL;\n-    pub fn LookupPrivilegeValueW(lpSystemName: LPCWSTR,\n-                                 lpName: LPCWSTR,\n-                                 lpLuid: PLUID) -> BOOL;\n-    pub fn AdjustTokenPrivileges(TokenHandle: HANDLE,\n-                                 DisableAllPrivileges: BOOL,\n-                                 NewState: PTOKEN_PRIVILEGES,\n-                                 BufferLength: DWORD,\n-                                 PreviousState: PTOKEN_PRIVILEGES,\n-                                 ReturnLength: *mut DWORD) -> BOOL;\n     pub fn AddVectoredExceptionHandler(FirstHandler: ULONG,\n                                        VectoredHandler: PVECTORED_EXCEPTION_HANDLER)\n                                        -> LPVOID;\n@@ -1264,6 +1089,7 @@ extern \"system\" {\n                           dwExceptionFlags: DWORD,\n                           nNumberOfArguments: DWORD,\n                           lpArguments: *const ULONG_PTR);\n+    #[cfg(target_env = \"gnu\")]\n     pub fn RtlUnwindEx(TargetFrame: LPVOID,\n                        TargetIp: LPVOID,\n                        ExceptionRecord: *const EXCEPTION_RECORD,"}, {"sha": "255c645c3fbf19d1a0d454724e861d04cee15f2c", "filename": "src/libstd/sys/windows/printing/msvc.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fprinting%2Fmsvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fprinting%2Fmsvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprinting%2Fmsvc.rs?ref=0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "patch": "@@ -16,10 +16,16 @@ use io::prelude::*;\n use io;\n use libc::{c_ulong, c_int, c_char, c_void};\n use mem;\n-use super::{SymFromAddrFn, SymGetLineFromAddr64Fn};\n use sys::c;\n use sys_common::backtrace::{output, output_fileline};\n \n+type SymFromAddrFn =\n+    extern \"system\" fn(c::HANDLE, u64, *mut u64,\n+                       *mut c::SYMBOL_INFO) -> c::BOOL;\n+type SymGetLineFromAddr64Fn =\n+    extern \"system\" fn(c::HANDLE, u64, *mut u32,\n+                       *mut c::IMAGEHLP_LINE64) -> c::BOOL;\n+\n pub fn print(w: &mut Write, i: isize, addr: u64, dbghelp: &DynamicLibrary,\n              process: c::HANDLE) -> io::Result<()> {\n     let SymFromAddr = sym!(dbghelp, \"SymFromAddr\", SymFromAddrFn);"}, {"sha": "6a5c38ed9d0daf0c47bbba3e81725297cca86363", "filename": "src/libstd/sys/windows/thread_local.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6f35b31725ea7d7ec88030dd38600a9412c3cf/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs?ref=0a6f35b31725ea7d7ec88030dd38600a9412c3cf", "patch": "@@ -233,12 +233,12 @@ unsafe fn unregister_dtor(key: Key) -> bool {\n \n #[link_section = \".CRT$XLB\"]\n #[linkage = \"external\"]\n-#[allow(warnings)]\n+#[allow(dead_code, unused_variables)]\n pub static p_thread_callback: unsafe extern \"system\" fn(c::LPVOID, c::DWORD,\n                                                         c::LPVOID) =\n         on_tls_callback;\n \n-#[allow(warnings)]\n+#[allow(dead_code, unused_variables)]\n unsafe extern \"system\" fn on_tls_callback(h: c::LPVOID,\n                                           dwReason: c::DWORD,\n                                           pv: c::LPVOID) {"}]}