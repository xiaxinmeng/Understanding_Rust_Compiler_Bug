{"sha": "83c55fc4dff8a09ff7ca958cfec63e1b630e4c32", "node_id": "C_kwDOAAsO6NoAKDgzYzU1ZmM0ZGZmOGEwOWZmN2NhOTU4Y2ZlYzYzZTFiNjMwZTRjMzI", "commit": {"author": {"name": "antoyo", "email": "antoyo@users.noreply.github.com", "date": "2022-11-24T22:47:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-24T22:47:42Z"}, "message": "Merge pull request #240 from rust-lang/fix/simd_bitmask\n\nFix simd_bitmask", "tree": {"sha": "8ca41d299dd0cfe6c76d260dae0fb1dac24f4368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ca41d299dd0cfe6c76d260dae0fb1dac24f4368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjf/SOCRBK7hj4Ov3rIwAAV+QIAFEtuQtBM/SyVUWDFZoCHU1U\nCbCDwtlg3daG/ytLu48dwoldW+IOYy6fR53sBsEm1JIdW5nXxyTdLR2byOH0vYEw\nkXy8DtQb9Ke8HvHHnn2/lYwAdpkVaYtmRtwJmFCw6tpjSft+Xui50FxUR0IhU1TB\nnSqxsVRiazIpMn+Dr1Uexiad+zWmWk5A5UNXL2Sci3mmhH6lkPwhe3Sp5UmglyQJ\ngqrfxeDBjUq9/dZVJjK9IkVxwWAi/kUQXnXGKkk9ANoOyJ7+twtA3qi2ZYhwNXlh\nsVFJ6Ui+Xl54yc0ZvnOKMHB/pl266+b6goyxTdNSxJwLnLQfU0j3+Kf8WZaCTI0=\n=f7ES\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ca41d299dd0cfe6c76d260dae0fb1dac24f4368\nparent 3c03c8f0484ffea08fb760c8cdee97befe3eb83a\nparent 76991ba26fb76bc7903a41865acac3162bbefa93\nauthor antoyo <antoyo@users.noreply.github.com> 1669330062 -0500\ncommitter GitHub <noreply@github.com> 1669330062 -0500\n\nMerge pull request #240 from rust-lang/fix/simd_bitmask\n\nFix simd_bitmask"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32", "html_url": "https://github.com/rust-lang/rust/commit/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c03c8f0484ffea08fb760c8cdee97befe3eb83a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c03c8f0484ffea08fb760c8cdee97befe3eb83a", "html_url": "https://github.com/rust-lang/rust/commit/3c03c8f0484ffea08fb760c8cdee97befe3eb83a"}, {"sha": "76991ba26fb76bc7903a41865acac3162bbefa93", "url": "https://api.github.com/repos/rust-lang/rust/commits/76991ba26fb76bc7903a41865acac3162bbefa93", "html_url": "https://github.com/rust-lang/rust/commit/76991ba26fb76bc7903a41865acac3162bbefa93"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "6182353599b20abf867d169a5e72167fd0faa88e", "filename": "failing-ui-tests.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32/failing-ui-tests.txt", "raw_url": "https://github.com/rust-lang/rust/raw/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32/failing-ui-tests.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/failing-ui-tests.txt?ref=83c55fc4dff8a09ff7ca958cfec63e1b630e4c32", "patch": "@@ -31,7 +31,6 @@ src/test/ui/sepcomp/sepcomp-fns-backwards.rs\n src/test/ui/sepcomp/sepcomp-fns.rs\n src/test/ui/sepcomp/sepcomp-statics.rs\n src/test/ui/simd/intrinsic/generic-arithmetic-pass.rs\n-src/test/ui/simd/intrinsic/generic-bitmask-pass.rs\n src/test/ui/simd/intrinsic/generic-gather-pass.rs\n src/test/ui/simd/issue-17170.rs\n src/test/ui/simd/issue-39720.rs"}, {"sha": "a4f35c061f0abbb457117b70c543eacafe0dcd85", "filename": "src/intrinsic/simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32/src%2Fintrinsic%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c55fc4dff8a09ff7ca958cfec63e1b630e4c32/src%2Fintrinsic%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fsimd.rs?ref=83c55fc4dff8a09ff7ca958cfec63e1b630e4c32", "patch": "@@ -351,7 +351,7 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n         let mut result = bx.context.new_rvalue_zero(result_type);\n \n         let elem_size = elem_type.get_size() * 8;\n-        let sign_shift = bx.context.new_rvalue_from_int(elem_type, elem_size as i32);\n+        let sign_shift = bx.context.new_rvalue_from_int(elem_type, elem_size as i32 - 1);\n         let one = bx.context.new_rvalue_one(elem_type);\n \n         let mut shift = 0;"}]}