{"sha": "02af2a38acc9c96e6012f8647d063669b19c0a32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYWYyYTM4YWNjOWM5NmU2MDEyZjg2NDdkMDYzNjY5YjE5YzBhMzI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-29T23:14:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-29T23:14:54Z"}, "message": "Fix link in README", "tree": {"sha": "9cf5e1124d22923f83704d24a6514c14a9fad5a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cf5e1124d22923f83704d24a6514c14a9fad5a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02af2a38acc9c96e6012f8647d063669b19c0a32", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfm0zuCRBK7hj4Ov3rIwAAdHIIAC4mu4ln7LvM2naI2OfNOv2+\n4VPAZWR9Y1rGbT2X08FtamQ/QGRgPpUjX0rHjXIPdvoGjC0iWUy7xKsXN+u1BGAT\nlUJB5nl+aMcX65+eUWdQ4+C9zrY5agIqIkNr9mvk2r198f+GMYkMKHgeMPOjZRFJ\n3lPkJDVi2JN6xVuU46lBMzBiAlI8I11Nhyq5OOxVUMbLUHEiRpm03P3l25epDjBG\nVnHylr67hlH2SepUJMNKMGmueDRc9XLA6oR9imE2wp/WRgi8wawLsH0EVfyQ0Y6S\nlrK2RIqbMrf5OByvpe4AIKF5ABnej1sG5UWA/GkrZ57lgwL2xmwwvujGR6MjFNg=\n=pooH\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cf5e1124d22923f83704d24a6514c14a9fad5a4\nparent 6359b1b0eb724f2432fd4776c3fc5f5cad9e67d0\nauthor Camelid <camelidcamel@gmail.com> 1604013294 -0700\ncommitter GitHub <noreply@github.com> 1604013294 -0700\n\nFix link in README"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02af2a38acc9c96e6012f8647d063669b19c0a32", "html_url": "https://github.com/rust-lang/rust/commit/02af2a38acc9c96e6012f8647d063669b19c0a32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02af2a38acc9c96e6012f8647d063669b19c0a32/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6359b1b0eb724f2432fd4776c3fc5f5cad9e67d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6359b1b0eb724f2432fd4776c3fc5f5cad9e67d0", "html_url": "https://github.com/rust-lang/rust/commit/6359b1b0eb724f2432fd4776c3fc5f5cad9e67d0"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "4b09d1586ad4dbfc1fc0bdcfc59247ff5544c856", "filename": "README.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02af2a38acc9c96e6012f8647d063669b19c0a32/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/02af2a38acc9c96e6012f8647d063669b19c0a32/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=02af2a38acc9c96e6012f8647d063669b19c0a32", "patch": "@@ -259,7 +259,7 @@ Some native rustc `-Z` flags are also very relevant for Miri:\n Moreover, Miri recognizes some environment variables:\n \n * `MIRI_LOG`, `MIRI_BACKTRACE` control logging and backtrace printing during\n-  Miri executions, also [see above][testing-miri].\n+  Miri executions, also [see \"Testing the Miri driver\" in `CONTRIBUTING.md`][testing-miri].\n * `MIRIFLAGS` (recognized by `cargo miri` and the test suite) defines extra\n   flags to be passed to Miri.\n * `MIRI_SYSROOT` (recognized by `cargo miri` and the test suite)\n@@ -281,6 +281,8 @@ different Miri binaries, and as such worth documenting:\n   directory after loading all the source files, but before commencing\n   interpretation. This is useful if the interpreted program wants a different\n   working directory at run-time than at build-time.\n+  \n+[testing-miri]: CONTRIBUTING.md#testing-the-miri-driver\n \n ## Miri `extern` functions\n "}]}