{"sha": "399dcd112725a35352075262863781b3355452cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5OWRjZDExMjcyNWEzNTM1MjA3NTI2Mjg2Mzc4MWIzMzU1NDUyY2Q=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-24T21:25:42Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-24T21:25:42Z"}, "message": "Add missing micro version number component in stability attributes.", "tree": {"sha": "9d5985c90a8bde7d3c2ca669714ea5a658ff2db9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d5985c90a8bde7d3c2ca669714ea5a658ff2db9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/399dcd112725a35352075262863781b3355452cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/399dcd112725a35352075262863781b3355452cd", "html_url": "https://github.com/rust-lang/rust/commit/399dcd112725a35352075262863781b3355452cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/399dcd112725a35352075262863781b3355452cd/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f15c8169327244730f8e68598bf85d288e16fd70", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15c8169327244730f8e68598bf85d288e16fd70", "html_url": "https://github.com/rust-lang/rust/commit/f15c8169327244730f8e68598bf85d288e16fd70"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "372d606e4572222c1423ce6de400ef72c026c329", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/399dcd112725a35352075262863781b3355452cd/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399dcd112725a35352075262863781b3355452cd/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=399dcd112725a35352075262863781b3355452cd", "patch": "@@ -232,7 +232,7 @@ unsafe impl Alloc for Heap {\n ///\n /// This preserves the non-null invariant for types like `Box<T>`. The address\n /// may overlap with non-zero-size memory allocations.\n-#[rustc_deprecated(since = \"1.19\", reason = \"Use Unique/NonNull::empty() instead\")]\n+#[rustc_deprecated(since = \"1.19.0\", reason = \"Use Unique/NonNull::empty() instead\")]\n #[unstable(feature = \"heap_api\", issue = \"27700\")]\n pub const EMPTY: *mut () = 1 as *mut ();\n "}, {"sha": "4e72eaa57c73e9c6e3be208fb68f5246cfee6f0c", "filename": "src/libcore/panic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/399dcd112725a35352075262863781b3355452cd/src%2Flibcore%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399dcd112725a35352075262863781b3355452cd/src%2Flibcore%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanic.rs?ref=399dcd112725a35352075262863781b3355452cd", "patch": "@@ -238,7 +238,7 @@ impl<'a> Location<'a> {\n     ///\n     /// panic!(\"Normal panic\");\n     /// ```\n-    #[stable(feature = \"panic_col\", since = \"1.25\")]\n+    #[stable(feature = \"panic_col\", since = \"1.25.0\")]\n     pub fn column(&self) -> u32 {\n         self.col\n     }"}, {"sha": "2c1dfb136333f20276eaebdd3b8ecd06b5f6a473", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/399dcd112725a35352075262863781b3355452cd/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399dcd112725a35352075262863781b3355452cd/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=399dcd112725a35352075262863781b3355452cd", "patch": "@@ -2461,7 +2461,7 @@ impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n }\n \n /// Previous name of `NonNull`.\n-#[rustc_deprecated(since = \"1.24\", reason = \"renamed to `NonNull`\")]\n+#[rustc_deprecated(since = \"1.25.0\", reason = \"renamed to `NonNull`\")]\n #[unstable(feature = \"shared\", issue = \"27730\")]\n pub type Shared<T> = NonNull<T>;\n "}, {"sha": "eef043683b02e070c851721d472d17f62bbbc57a", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/399dcd112725a35352075262863781b3355452cd/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399dcd112725a35352075262863781b3355452cd/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=399dcd112725a35352075262863781b3355452cd", "patch": "@@ -134,14 +134,14 @@ fn each_addr<A: ToSocketAddrs, F, T>(addr: A, mut f: F) -> io::Result<T>\n                                               iterator and returning socket \\\n                                               addresses\",\n            issue = \"27705\")]\n-#[rustc_deprecated(since = \"1.25\", reason = \"Use the ToSocketAddrs trait instead\")]\n+#[rustc_deprecated(since = \"1.25.0\", reason = \"Use the ToSocketAddrs trait instead\")]\n pub struct LookupHost(net_imp::LookupHost);\n \n #[unstable(feature = \"lookup_host\", reason = \"unsure about the returned \\\n                                               iterator and returning socket \\\n                                               addresses\",\n            issue = \"27705\")]\n-#[rustc_deprecated(since = \"1.25\", reason = \"Use the ToSocketAddrs trait instead\")]\n+#[rustc_deprecated(since = \"1.25.0\", reason = \"Use the ToSocketAddrs trait instead\")]\n #[allow(deprecated)]\n impl Iterator for LookupHost {\n     type Item = SocketAddr;\n@@ -152,7 +152,7 @@ impl Iterator for LookupHost {\n                                               iterator and returning socket \\\n                                               addresses\",\n            issue = \"27705\")]\n-#[rustc_deprecated(since = \"1.25\", reason = \"Use the ToSocketAddrs trait instead\")]\n+#[rustc_deprecated(since = \"1.25.0\", reason = \"Use the ToSocketAddrs trait instead\")]\n #[allow(deprecated)]\n impl fmt::Debug for LookupHost {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -186,7 +186,7 @@ impl fmt::Debug for LookupHost {\n                                               iterator and returning socket \\\n                                               addresses\",\n            issue = \"27705\")]\n-#[rustc_deprecated(since = \"1.25\", reason = \"Use the ToSocketAddrs trait instead\")]\n+#[rustc_deprecated(since = \"1.25.0\", reason = \"Use the ToSocketAddrs trait instead\")]\n #[allow(deprecated)]\n pub fn lookup_host(host: &str) -> io::Result<LookupHost> {\n     net_imp::lookup_host(host).map(LookupHost)"}]}