{"sha": "0cf43291d7007fa8edc31e0d7dda84acc453d86d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZjQzMjkxZDcwMDdmYThlZGMzMWUwZDdkZGE4NGFjYzQ1M2Q4NmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-29T13:34:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-02T21:02:54Z"}, "message": "also test error messages", "tree": {"sha": "bdfae91a0af402094c5a74b19e9b684b9fd4fd8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdfae91a0af402094c5a74b19e9b684b9fd4fd8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cf43291d7007fa8edc31e0d7dda84acc453d86d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cf43291d7007fa8edc31e0d7dda84acc453d86d", "html_url": "https://github.com/rust-lang/rust/commit/0cf43291d7007fa8edc31e0d7dda84acc453d86d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cf43291d7007fa8edc31e0d7dda84acc453d86d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0de6873a319d86dc41b56d8339f75526473bac5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0de6873a319d86dc41b56d8339f75526473bac5f", "html_url": "https://github.com/rust-lang/rust/commit/0de6873a319d86dc41b56d8339f75526473bac5f"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "0d8f30159b3160fb19958338d5f2fa95d5c15208", "filename": "src/test/ui/consts/const-eval/ub-ref.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cf43291d7007fa8edc31e0d7dda84acc453d86d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cf43291d7007fa8edc31e0d7dda84acc453d86d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-ref.rs?ref=0cf43291d7007fa8edc31e0d7dda84acc453d86d", "patch": "@@ -1,10 +1,12 @@\n+// ignore-tidy-linelength\n #![feature(const_transmute)]\n #![allow(const_err)] // make sure we cannot allow away the errors tested here\n \n use std::mem;\n \n const UNALIGNED: &u16 = unsafe { mem::transmute(&[0u8; 4]) };\n //~^ ERROR it is undefined behavior to use this value\n+//~^^ type validation failed: encountered unaligned reference (required 2 byte alignment but found 1)\n \n const NULL: &u16 = unsafe { mem::transmute(0usize) };\n //~^ ERROR it is undefined behavior to use this value"}, {"sha": "f1702955ed7b1618829066d125d360f09ceba8b8", "filename": "src/test/ui/consts/const-eval/ub-ref.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0cf43291d7007fa8edc31e0d7dda84acc453d86d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0cf43291d7007fa8edc31e0d7dda84acc453d86d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-ref.stderr?ref=0cf43291d7007fa8edc31e0d7dda84acc453d86d", "patch": "@@ -1,37 +1,37 @@\n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-ref.rs:6:1\n+  --> $DIR/ub-ref.rs:7:1\n    |\n LL | const UNALIGNED: &u16 = unsafe { mem::transmute(&[0u8; 4]) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered unaligned reference (required 2 byte alignment but found 1)\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-ref.rs:9:1\n+  --> $DIR/ub-ref.rs:11:1\n    |\n LL | const NULL: &u16 = unsafe { mem::transmute(0usize) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 0, but expected something greater or equal to 1\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-ref.rs:12:1\n+  --> $DIR/ub-ref.rs:14:1\n    |\n LL | const REF_AS_USIZE: usize = unsafe { mem::transmute(&0) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a pointer, but expected initialized plain (non-pointer) bytes\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-ref.rs:15:1\n+  --> $DIR/ub-ref.rs:17:1\n    |\n LL | const REF_AS_USIZE_SLICE: &[usize] = &[unsafe { mem::transmute(&0) }];\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a pointer at .<deref>, but expected plain (non-pointer) bytes\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-ref.rs:18:1\n+  --> $DIR/ub-ref.rs:20:1\n    |\n LL | const USIZE_AS_REF: &'static u8 = unsafe { mem::transmute(1337usize) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered dangling reference (created from integer)"}]}