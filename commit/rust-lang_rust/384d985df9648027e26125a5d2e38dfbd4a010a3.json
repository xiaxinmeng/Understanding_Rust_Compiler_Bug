{"sha": "384d985df9648027e26125a5d2e38dfbd4a010a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NGQ5ODVkZjk2NDgwMjdlMjYxMjVhNWQyZTM4ZGZiZDRhMDEwYTM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-13T15:08:31Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-13T15:08:31Z"}, "message": "Do not rely on format_missing for rewriting attributes", "tree": {"sha": "a247f15efa11636bd08b2a35d5802dc999f50077", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a247f15efa11636bd08b2a35d5802dc999f50077"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/384d985df9648027e26125a5d2e38dfbd4a010a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/384d985df9648027e26125a5d2e38dfbd4a010a3", "html_url": "https://github.com/rust-lang/rust/commit/384d985df9648027e26125a5d2e38dfbd4a010a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/384d985df9648027e26125a5d2e38dfbd4a010a3/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4d84b44ba39560e453f5cf6a026c40b98836852", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d84b44ba39560e453f5cf6a026c40b98836852", "html_url": "https://github.com/rust-lang/rust/commit/c4d84b44ba39560e453f5cf6a026c40b98836852"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "1e92b5b9368e5b26956635e26b90b1fd2d9fca1b", "filename": "src/expr.rs", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/384d985df9648027e26125a5d2e38dfbd4a010a3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/384d985df9648027e26125a5d2e38dfbd4a010a3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=384d985df9648027e26125a5d2e38dfbd4a010a3", "patch": "@@ -47,16 +47,45 @@ enum ExprType {\n     SubExpression,\n }\n \n+fn combine_attr_and_expr(\n+    context: &RewriteContext,\n+    shape: Shape,\n+    attr_str: &str,\n+    expr_str: &str,\n+) -> String {\n+    let separator = if attr_str.is_empty() {\n+        String::new()\n+    } else {\n+        if expr_str.contains('\\n') || attr_str.contains('\\n') ||\n+            attr_str.len() + expr_str.len() > shape.width\n+        {\n+            format!(\"\\n{}\", shape.indent.to_string(context.config))\n+        } else {\n+            String::from(\" \")\n+        }\n+    };\n+    format!(\"{}{}{}\", attr_str, separator, expr_str)\n+}\n+\n fn format_expr(\n     expr: &ast::Expr,\n     expr_type: ExprType,\n     context: &RewriteContext,\n     shape: Shape,\n ) -> Option<String> {\n+    let attr_rw = (&*expr.attrs).rewrite(context, shape);\n     if contains_skip(&*expr.attrs) {\n-        return Some(context.snippet(expr.span));\n+        if let Some(attr_str) = attr_rw {\n+            return Some(combine_attr_and_expr(\n+                context,\n+                shape,\n+                &attr_str,\n+                &context.snippet(expr.span),\n+            ));\n+        } else {\n+            return Some(context.snippet(expr.span));\n+        }\n     }\n-    let attr_rw = (&*expr.attrs).rewrite(context, shape);\n     let expr_rw = match expr.node {\n         ast::ExprKind::Array(ref expr_vec) => {\n             rewrite_array(\n@@ -289,9 +318,8 @@ fn format_expr(\n     };\n     match (attr_rw, expr_rw) {\n         (Some(attr_str), Some(expr_str)) => {\n-            let space = if attr_str.is_empty() { \"\" } else { \" \" };\n             recover_comment_removed(\n-                format!(\"{}{}{}\", attr_str, space, expr_str),\n+                combine_attr_and_expr(context, shape, &attr_str, &expr_str),\n                 expr.span,\n                 context,\n                 shape,"}, {"sha": "08ff3cd4c61ca3683a59a642690f03cf4adaae07", "filename": "src/visitor.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/384d985df9648027e26125a5d2e38dfbd4a010a3/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/384d985df9648027e26125a5d2e38dfbd4a010a3/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=384d985df9648027e26125a5d2e38dfbd4a010a3", "patch": "@@ -82,15 +82,26 @@ impl<'a> FmtVisitor<'a> {\n             ast::StmtKind::Item(ref item) => {\n                 self.visit_item(item);\n             }\n-            ast::StmtKind::Local(..) |\n-            ast::StmtKind::Expr(..) |\n-            ast::StmtKind::Semi(..) => {\n+            ast::StmtKind::Local(..) => {\n                 let rewrite = stmt.rewrite(\n                     &self.get_context(),\n                     Shape::indented(self.block_indent, self.config),\n                 );\n                 self.push_rewrite(stmt.span, rewrite);\n             }\n+            ast::StmtKind::Expr(ref expr) |\n+            ast::StmtKind::Semi(ref expr) => {\n+                let rewrite = stmt.rewrite(\n+                    &self.get_context(),\n+                    Shape::indented(self.block_indent, self.config),\n+                );\n+                let span = if expr.attrs.is_empty() {\n+                    stmt.span\n+                } else {\n+                    mk_sp(expr.attrs[0].span.lo, stmt.span.hi)\n+                };\n+                self.push_rewrite(span, rewrite)\n+            }\n             ast::StmtKind::Mac(ref mac) => {\n                 let (ref mac, _macro_style, _) = **mac;\n                 self.visit_mac(mac, None, MacroPosition::Statement);"}]}