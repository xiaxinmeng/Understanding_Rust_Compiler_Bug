{"sha": "99ba08e6d38765d8d62e223a1c393d9f26b64c7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YmEwOGU2ZDM4NzY1ZDhkNjJlMjIzYTFjMzkzZDlmMjZiNjRjN2E=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-26T23:34:23Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:09:32Z"}, "message": "Access attrs directly from HirId in rustc_passes::diagnostic_item.", "tree": {"sha": "a0481c130f4f712d0f5099de6679ff0c24fdbdd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0481c130f4f712d0f5099de6679ff0c24fdbdd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99ba08e6d38765d8d62e223a1c393d9f26b64c7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99ba08e6d38765d8d62e223a1c393d9f26b64c7a", "html_url": "https://github.com/rust-lang/rust/commit/99ba08e6d38765d8d62e223a1c393d9f26b64c7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99ba08e6d38765d8d62e223a1c393d9f26b64c7a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "662f11ade6105feef7e02928e523161f1cb86940", "url": "https://api.github.com/repos/rust-lang/rust/commits/662f11ade6105feef7e02928e523161f1cb86940", "html_url": "https://github.com/rust-lang/rust/commit/662f11ade6105feef7e02928e523161f1cb86940"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "8dd3700e5b6afb44954e4ab81cebb3fed2e05cbb", "filename": "compiler/rustc_passes/src/diagnostic_items.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/99ba08e6d38765d8d62e223a1c393d9f26b64c7a/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ba08e6d38765d8d62e223a1c393d9f26b64c7a/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdiagnostic_items.rs?ref=99ba08e6d38765d8d62e223a1c393d9f26b64c7a", "patch": "@@ -27,19 +27,19 @@ struct DiagnosticItemCollector<'tcx> {\n \n impl<'v, 'tcx> ItemLikeVisitor<'v> for DiagnosticItemCollector<'tcx> {\n     fn visit_item(&mut self, item: &hir::Item<'_>) {\n-        self.observe_item(&item.attrs, item.def_id);\n+        self.observe_item(item.def_id);\n     }\n \n     fn visit_trait_item(&mut self, trait_item: &hir::TraitItem<'_>) {\n-        self.observe_item(&trait_item.attrs, trait_item.def_id);\n+        self.observe_item(trait_item.def_id);\n     }\n \n     fn visit_impl_item(&mut self, impl_item: &hir::ImplItem<'_>) {\n-        self.observe_item(&impl_item.attrs, impl_item.def_id);\n+        self.observe_item(impl_item.def_id);\n     }\n \n     fn visit_foreign_item(&mut self, foreign_item: &hir::ForeignItem<'_>) {\n-        self.observe_item(foreign_item.attrs, foreign_item.def_id);\n+        self.observe_item(foreign_item.def_id);\n     }\n }\n \n@@ -48,7 +48,9 @@ impl<'tcx> DiagnosticItemCollector<'tcx> {\n         DiagnosticItemCollector { tcx, items: Default::default() }\n     }\n \n-    fn observe_item(&mut self, attrs: &[ast::Attribute], def_id: LocalDefId) {\n+    fn observe_item(&mut self, def_id: LocalDefId) {\n+        let hir_id = self.tcx.hir().local_def_id_to_hir_id(def_id);\n+        let attrs = self.tcx.hir().attrs(hir_id);\n         if let Some(name) = extract(&self.tcx.sess, attrs) {\n             // insert into our table\n             collect_item(self.tcx, &mut self.items, name, def_id.to_def_id());\n@@ -105,7 +107,7 @@ fn collect<'tcx>(tcx: TyCtxt<'tcx>) -> FxHashMap<Symbol, DefId> {\n     tcx.hir().krate().visit_all_item_likes(&mut collector);\n \n     for m in tcx.hir().krate().exported_macros {\n-        collector.observe_item(m.attrs, m.def_id);\n+        collector.observe_item(m.def_id);\n     }\n \n     collector.items"}]}