{"sha": "980dd56cdc69efda8b4da348cbd062b0fa204108", "node_id": "C_kwDOAAsO6NoAKDk4MGRkNTZjZGM2OWVmZGE4YjRkYTM0OGNiZDA2MmIwZmEyMDQxMDg", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T16:32:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T16:32:04Z"}, "message": "consistency", "tree": {"sha": "43ff71d6fe692817dd0db548f060ad71b3a77663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ff71d6fe692817dd0db548f060ad71b3a77663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/980dd56cdc69efda8b4da348cbd062b0fa204108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/980dd56cdc69efda8b4da348cbd062b0fa204108", "html_url": "https://github.com/rust-lang/rust/commit/980dd56cdc69efda8b4da348cbd062b0fa204108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/980dd56cdc69efda8b4da348cbd062b0fa204108/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e4bb5701433ab8f0809700827c76035d8be4813", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4bb5701433ab8f0809700827c76035d8be4813", "html_url": "https://github.com/rust-lang/rust/commit/6e4bb5701433ab8f0809700827c76035d8be4813"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "bf4d629408843bc5cb467d84ce60beb10f78f430", "filename": "crates/parser/src/tokens.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/980dd56cdc69efda8b4da348cbd062b0fa204108/crates%2Fparser%2Fsrc%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/980dd56cdc69efda8b4da348cbd062b0fa204108/crates%2Fparser%2Fsrc%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftokens.rs?ref=980dd56cdc69efda8b4da348cbd062b0fa204108", "patch": "@@ -15,7 +15,7 @@ type bits = u64;\n pub struct Tokens {\n     kind: Vec<SyntaxKind>,\n     joint: Vec<bits>,\n-    contextual_kw: Vec<SyntaxKind>,\n+    contextual_kind: Vec<SyntaxKind>,\n }\n \n impl Tokens {\n@@ -44,17 +44,17 @@ impl Tokens {\n         self.set_joint(self.len() - 1);\n     }\n     #[inline]\n-    pub fn push_ident(&mut self, contextual_kw: SyntaxKind) {\n-        self.push_impl(SyntaxKind::IDENT, contextual_kw)\n+    pub fn push_ident(&mut self, contextual_kind: SyntaxKind) {\n+        self.push_impl(SyntaxKind::IDENT, contextual_kind)\n     }\n     #[inline]\n-    fn push_impl(&mut self, kind: SyntaxKind, contextual_kw: SyntaxKind) {\n+    fn push_impl(&mut self, kind: SyntaxKind, contextual_kind: SyntaxKind) {\n         let idx = self.len();\n         if idx % (bits::BITS as usize) == 0 {\n             self.joint.push(0);\n         }\n         self.kind.push(kind);\n-        self.contextual_kw.push(contextual_kw);\n+        self.contextual_kind.push(contextual_kind);\n     }\n     fn set_joint(&mut self, n: usize) {\n         let (idx, b_idx) = self.bit_index(n);\n@@ -77,7 +77,7 @@ impl Tokens {\n         self.kind.get(idx).copied().unwrap_or(SyntaxKind::EOF)\n     }\n     pub(crate) fn contextual_kind(&self, idx: usize) -> SyntaxKind {\n-        self.contextual_kw.get(idx).copied().unwrap_or(SyntaxKind::EOF)\n+        self.contextual_kind.get(idx).copied().unwrap_or(SyntaxKind::EOF)\n     }\n     pub(crate) fn is_joint(&self, n: usize) -> bool {\n         let (idx, b_idx) = self.bit_index(n);"}]}