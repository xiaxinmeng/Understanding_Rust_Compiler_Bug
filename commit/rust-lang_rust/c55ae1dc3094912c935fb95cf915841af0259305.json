{"sha": "c55ae1dc3094912c935fb95cf915841af0259305", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NWFlMWRjMzA5NDkxMmM5MzVmYjk1Y2Y5MTU4NDFhZjAyNTkzMDU=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-03-25T00:02:18Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-15T03:26:04Z"}, "message": "Fill in missing implementation", "tree": {"sha": "7e0b91bd10431fc36041dd42717ed6f60c4c9d88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e0b91bd10431fc36041dd42717ed6f60c4c9d88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c55ae1dc3094912c935fb95cf915841af0259305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c55ae1dc3094912c935fb95cf915841af0259305", "html_url": "https://github.com/rust-lang/rust/commit/c55ae1dc3094912c935fb95cf915841af0259305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c55ae1dc3094912c935fb95cf915841af0259305/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10f15e72e6c265eb43d34dba564d86dbf1c4fb99", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f15e72e6c265eb43d34dba564d86dbf1c4fb99", "html_url": "https://github.com/rust-lang/rust/commit/10f15e72e6c265eb43d34dba564d86dbf1c4fb99"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a480335c946939d8ee6f15dd678d9d44fe3805b5", "filename": "src/libcollections/btree/node.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c55ae1dc3094912c935fb95cf915841af0259305/src%2Flibcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c55ae1dc3094912c935fb95cf915841af0259305/src%2Flibcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fnode.rs?ref=c55ae1dc3094912c935fb95cf915841af0259305", "patch": "@@ -585,6 +585,9 @@ impl <K, V> Node<K, V> {\n         self._len\n     }\n \n+    /// Does the node not contain any key-value pairs\n+    pub fn is_empty(&self) -> bool { self.len() == 0 }\n+\n     /// How many key-value pairs the node can fit\n     pub fn capacity(&self) -> usize {\n         self._capacity"}]}