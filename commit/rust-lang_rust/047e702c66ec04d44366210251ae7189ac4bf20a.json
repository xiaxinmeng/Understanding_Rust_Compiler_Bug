{"sha": "047e702c66ec04d44366210251ae7189ac4bf20a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0N2U3MDJjNjZlYzA0ZDQ0MzY2MjEwMjUxYWU3MTg5YWM0YmYyMGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T12:24:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T12:32:38Z"}, "message": "Miri: ptr_offset_from: support offset_from with twice the same non-null integer", "tree": {"sha": "ec71ba620c05ed41f9a80c7ddf42e470d8d9514b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec71ba620c05ed41f9a80c7ddf42e470d8d9514b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/047e702c66ec04d44366210251ae7189ac4bf20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/047e702c66ec04d44366210251ae7189ac4bf20a", "html_url": "https://github.com/rust-lang/rust/commit/047e702c66ec04d44366210251ae7189ac4bf20a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/047e702c66ec04d44366210251ae7189ac4bf20a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da0c7c664ba19339c606b3384ef6eebb6c0e4105", "url": "https://api.github.com/repos/rust-lang/rust/commits/da0c7c664ba19339c606b3384ef6eebb6c0e4105", "html_url": "https://github.com/rust-lang/rust/commit/da0c7c664ba19339c606b3384ef6eebb6c0e4105"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "990e3007755be1626cfbc775c8e5a447ff274917", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/047e702c66ec04d44366210251ae7189ac4bf20a/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047e702c66ec04d44366210251ae7189ac4bf20a/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=047e702c66ec04d44366210251ae7189ac4bf20a", "patch": "@@ -251,8 +251,26 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             \"ptr_offset_from\" => {\n-                let a = self.force_ptr(self.read_immediate(args[0])?.to_scalar()?)?;\n-                let b = self.force_ptr(self.read_immediate(args[1])?.to_scalar()?)?;\n+                let isize_layout = self.layout_of(self.tcx.types.isize)?;\n+                let a = self.read_immediate(args[0])?.to_scalar()?;\n+                let b = self.read_immediate(args[1])?.to_scalar()?;\n+\n+                // Special case: if both scalars are *equal integers*\n+                // and not NULL, their offset is 0.\n+                // This is the dual to the special exception for offset-by-0\n+                // in the inbounds pointer offset operation.\n+                if a.is_bits() && b.is_bits() {\n+                    let a = a.to_usize(self)?;\n+                    let b = b.to_usize(self)?;\n+                    if a == b && a != 0 {\n+                        self.write_scalar(Scalar::from_int(0, isize_layout.size), dest)?;\n+                        return Ok(true);\n+                    }\n+                }\n+\n+                // General case: we need two pointers.\n+                let a = self.force_ptr(a)?;\n+                let b = self.force_ptr(b)?;\n                 if a.alloc_id != b.alloc_id {\n                     throw_ub_format!(\n                         \"ptr_offset_from cannot compute offset of pointers into different \\\n@@ -266,7 +284,6 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     BinOp::Sub, a_offset, b_offset,\n                 )?;\n                 let pointee_layout = self.layout_of(substs.type_at(0))?;\n-                let isize_layout = self.layout_of(self.tcx.types.isize)?;\n                 let val = ImmTy::from_scalar(val, isize_layout);\n                 let size = ImmTy::from_int(pointee_layout.size.bytes(), isize_layout);\n                 self.exact_div(val, size, dest)?;"}]}