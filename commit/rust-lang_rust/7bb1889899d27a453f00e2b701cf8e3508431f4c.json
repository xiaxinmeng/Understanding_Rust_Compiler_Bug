{"sha": "7bb1889899d27a453f00e2b701cf8e3508431f4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYjE4ODk4OTlkMjdhNDUzZjAwZTJiNzAxY2Y4ZTM1MDg0MzFmNGM=", "commit": {"author": {"name": "XAMPPRocky", "email": "4464295+XAMPPRocky@users.noreply.github.com", "date": "2020-12-08T22:13:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-08T22:13:03Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\nCo-authored-by: Vadim Petrochenkov <vadim.petrochenkov@gmail.com>", "tree": {"sha": "46d171c65cda5c4c799dc4fb9815aa1e07060e09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46d171c65cda5c4c799dc4fb9815aa1e07060e09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bb1889899d27a453f00e2b701cf8e3508431f4c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfz/pvCRBK7hj4Ov3rIwAAdHIIAEL1vF2S3Rx2Lore/GFoHS4A\nb6QEQvGT6xo9sPuu+l7DmbLFd+87amhT012ZKLrF3+pfWsryxbPrgaxfswRSvBrX\nwYysObLzc+NuGbxQuf9u2Vw9BsfZHcEp4aiAsAxOkMngIegkh962HlYR9DQvR3Bv\npvLyru/k/hRIRY6g3NlqKwHdWk0tFg9+W8kmFcvanXoHPqD2HkyP7Gm+TtvG5AXe\nAK4pOG6ZMzrEgjWxmh5DdvjbUPOgBeEB9YsqAHelf2qfWReRKiIg3fPIAE/jMz++\nt7Mw8po+qnLepL1Pl1R1IWmcLHrAnbacSP7GnDUY3PywKnlBGnEBrLG46e2/cC0=\n=t/tZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 46d171c65cda5c4c799dc4fb9815aa1e07060e09\nparent 891341942ab49c42c991072a4ac27b4dd4f28779\nauthor XAMPPRocky <4464295+XAMPPRocky@users.noreply.github.com> 1607465583 +0000\ncommitter GitHub <noreply@github.com> 1607465583 +0000\n\nApply suggestions from code review\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\nCo-authored-by: Vadim Petrochenkov <vadim.petrochenkov@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bb1889899d27a453f00e2b701cf8e3508431f4c", "html_url": "https://github.com/rust-lang/rust/commit/7bb1889899d27a453f00e2b701cf8e3508431f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bb1889899d27a453f00e2b701cf8e3508431f4c/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "891341942ab49c42c991072a4ac27b4dd4f28779", "url": "https://api.github.com/repos/rust-lang/rust/commits/891341942ab49c42c991072a4ac27b4dd4f28779", "html_url": "https://github.com/rust-lang/rust/commit/891341942ab49c42c991072a4ac27b4dd4f28779"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "a06963ae1b43b9eecab464473936d563e09c082f", "filename": "RELEASES.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7bb1889899d27a453f00e2b701cf8e3508431f4c/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/7bb1889899d27a453f00e2b701cf8e3508431f4c/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=7bb1889899d27a453f00e2b701cf8e3508431f4c", "patch": "@@ -4,10 +4,10 @@ Version 1.49.0 (2020-11-19)\n Language\n -----------------------\n \n-- [Unions now implement `Drop`, and you can now have a field in a union\n+- [Unions can now implement `Drop`, and you can now have a field in a union\n   with `ManuallyDrop<T>`.][77547]\n-- [You can now cast zero sized enums (0 or 1 variants) integers.][76199]\n-- [You can now take bind by reference and by move in patterns.][76119] This\n+- [You can now cast zero sized enums (0 or 1 variants) to integers.][76199]\n+- [You can now bind by reference and by move in patterns.][76119] This\n   allows you to selectively borrow individual components of a type. E.g.\n   ```rust\n   #[derive(Debug)]\n@@ -25,7 +25,7 @@ Language\n   let Person { name, ref age } = person;\n   println!(\"{} {}\", name, age);\n   ```\n-- [Macros that end with a semi-colon are now treated as statements.][78376]\n+- [Macros that end with a semi-colon are now treated as statements even if they expand to nothing.][78376]\n \n Compiler\n -----------------------\n@@ -74,7 +74,8 @@ Compatibility Notes\n -------------------\n \n - [Demoted `i686-unknown-freebsd` to tier 2 support.][78746]\n-- [Rustc will now check for the validity of attributes on enum variants.][77015]\n+- [Rustc will now check for the validity of some built-in attributes on enum variants.][77015]\n+  Previously such invalid or unused attributes could be ignored.\n   Previously invalid or unused attributes were ignored.\n \n Internal Only\n@@ -83,7 +84,7 @@ These changes provide no direct user facing benefits, but represent significant\n improvements to the internals and overall performance of rustc and\n related tools.\n \n-- [rustc's internal crates are now compiled the `initial-exec` Thread\n+- [rustc's internal crates are now compiled using the `initial-exec` Thread\n   Local Storage model.][78201]\n - [Calculate visibilities once in resolve.][78077]\n - [Added `system` to the `llvm-libunwind` bootstrap config option.][77703]"}]}