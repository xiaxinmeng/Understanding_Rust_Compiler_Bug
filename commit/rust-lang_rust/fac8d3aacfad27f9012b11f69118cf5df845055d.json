{"sha": "fac8d3aacfad27f9012b11f69118cf5df845055d", "node_id": "C_kwDOAAsO6NoAKGZhYzhkM2FhY2ZhZDI3ZjkwMTJiMTFmNjkxMThjZjVkZjg0NTA1NWQ", "commit": {"author": {"name": "antoyo", "email": "antoyo@users.noreply.github.com", "date": "2022-10-24T16:17:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-24T16:17:56Z"}, "message": "Merge pull request #238 from GuillaumeGomez/fix-build-instructions\n\nFix gcc build instructions", "tree": {"sha": "e60e86bf8f4154bb7ce9e713e71e6744fbbbc495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e60e86bf8f4154bb7ce9e713e71e6744fbbbc495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fac8d3aacfad27f9012b11f69118cf5df845055d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjVrq0CRBK7hj4Ov3rIwAADfsIAFdnr2uCWF/3Y3cl7n83x0yw\nKOAwVfLI5Sjkc5L44odPJfGZJgGSsZs1oY7y/TJEFz4KECp/mJ3XqQ8svWvTJAWO\nK2/hNuZrm35AYkoJgnCzUdPLjPa2kRD9eslNmTzmtvXyvHe4+0nk1W8VJ81ZLKR0\nWnBZWPzq1/UU8ESEewLpaOlrzG9+dDGRHlTfsdnOnu0vgNT/5cZ8Hdf2+aT2Q04i\nzUevRxf5cj4ardogLdgE1DoUcnFuXxwbRARCQAcG6Kjs2Y4kyZuIhehcyIfdGz7H\n/zYc5qqkl0gkfoDAkt1Aid/prVQ6UxT7CK3ZWDTZFFgED1X6Q1/dnzK9Ix4Bvtc=\n=qwY5\n-----END PGP SIGNATURE-----\n", "payload": "tree e60e86bf8f4154bb7ce9e713e71e6744fbbbc495\nparent cc5c38717da46b561a392d56ba27848533056b7b\nparent 1a2c8b01cbc53322845607af8cc041133d37f36a\nauthor antoyo <antoyo@users.noreply.github.com> 1666628276 -0400\ncommitter GitHub <noreply@github.com> 1666628276 -0400\n\nMerge pull request #238 from GuillaumeGomez/fix-build-instructions\n\nFix gcc build instructions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fac8d3aacfad27f9012b11f69118cf5df845055d", "html_url": "https://github.com/rust-lang/rust/commit/fac8d3aacfad27f9012b11f69118cf5df845055d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fac8d3aacfad27f9012b11f69118cf5df845055d/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc5c38717da46b561a392d56ba27848533056b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc5c38717da46b561a392d56ba27848533056b7b", "html_url": "https://github.com/rust-lang/rust/commit/cc5c38717da46b561a392d56ba27848533056b7b"}, {"sha": "1a2c8b01cbc53322845607af8cc041133d37f36a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2c8b01cbc53322845607af8cc041133d37f36a", "html_url": "https://github.com/rust-lang/rust/commit/1a2c8b01cbc53322845607af8cc041133d37f36a"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "c681e3ca3bcd9aa8b61d156900e964badcef9569", "filename": "Readme.md", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fac8d3aacfad27f9012b11f69118cf5df845055d/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/fac8d3aacfad27f9012b11f69118cf5df845055d/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=fac8d3aacfad27f9012b11f69118cf5df845055d", "patch": "@@ -22,17 +22,32 @@ To build it (most of these instructions come from [here](https://gcc.gnu.org/onl\n \n ```bash\n $ git clone https://github.com/antoyo/gcc\n-$ cd gcc\n $ sudo apt install flex libmpfr-dev libgmp-dev libmpc3 libmpc-dev\n-$ ./configure \\\n-   --enable-host-shared \\\n-   --enable-languages=jit \\\n-   --disable-bootstrap \\\n-   --enable-checking=release \\\n-   --prefix=$(pwd)/install \\\n-   --disable-multilib\n+$ mkdir gcc-build gcc-install\n+$ cd gcc-build\n+$ ../gcc/configure \\\n+    --enable-host-shared \\\n+    --enable-languages=jit \\\n+    --enable-checking=release \\ # it enables extra checks which allow to find bugs\n+    --disable-bootstrap \\\n+    --disable-multilib \\\n+    --prefix=$(pwd)/../gcc-install\n $ make -j4 # You can replace `4` with another number depending on how many cores you have.\n-$ cd ..\n+```\n+\n+If you want to run libgccjit tests, you will need to also enable the C++ language in the `configure`:\n+\n+```bash\n+--enable-languages=jit,c++\n+```\n+\n+Then to run libgccjit tests:\n+\n+```bash\n+$ cd gcc # from the `gcc-build` folder\n+$ make check-jit\n+# To run one specific test:\n+$ make check-jit RUNTESTFLAGS=\"-v -v -v jit.exp=jit.dg/test-asm.cc\"\n ```\n \n **Put the path to your custom build of libgccjit in the file `gcc_path`.**"}]}