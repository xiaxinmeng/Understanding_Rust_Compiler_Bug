{"sha": "a99eff3fca670238bd7194dc83d8f4b968277dc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OWVmZjNmY2E2NzAyMzhiZDcxOTRkYzgzZDhmNGI5NjgyNzdkYzY=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-04T06:43:38Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-08T19:06:22Z"}, "message": "Handle fallout in librustc", "tree": {"sha": "8e20b5705920cb51e8e14e6ef7351d3b534abb4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e20b5705920cb51e8e14e6ef7351d3b534abb4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a99eff3fca670238bd7194dc83d8f4b968277dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a99eff3fca670238bd7194dc83d8f4b968277dc6", "html_url": "https://github.com/rust-lang/rust/commit/a99eff3fca670238bd7194dc83d8f4b968277dc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a99eff3fca670238bd7194dc83d8f4b968277dc6/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd3f31d9d13652c62795a985d91f7c6c6673b7a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3f31d9d13652c62795a985d91f7c6c6673b7a8", "html_url": "https://github.com/rust-lang/rust/commit/cd3f31d9d13652c62795a985d91f7c6c6673b7a8"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "c49adce904a5199b8c8aa6fffaa3bc35f5d4d904", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=a99eff3fca670238bd7194dc83d8f4b968277dc6", "patch": "@@ -45,9 +45,9 @@ pub fn get_rpath_flags(sess: &Session, out_filename: &Path) -> Vec<~str> {\n     let libs = sess.cstore.get_used_crates(cstore::RequireDynamic);\n     let libs = libs.move_iter().filter_map(|(_, l)| {\n         l.map(|p| p.clone())\n-    }).collect::<~[_]>();\n+    }).collect::<Vec<_>>();\n \n-    let rpaths = get_rpaths(os, sysroot, output, libs,\n+    let rpaths = get_rpaths(os, sysroot, output, libs.as_slice(),\n                             sess.opts.target_triple);\n     flags.push_all(rpaths_to_flags(rpaths.as_slice()).as_slice());\n     flags"}, {"sha": "0962acd0a2ebf23acf34db153c955d69e708e15e", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=a99eff3fca670238bd7194dc83d8f4b968277dc6", "patch": "@@ -434,7 +434,7 @@ pub fn monitor(f: proc():Send) {\n }\n \n pub fn main() {\n-    std::os::set_exit_status(main_args(std::os::args()));\n+    std::os::set_exit_status(main_args(std::os::args().as_slice()));\n }\n \n pub fn main_args(args: &[~str]) -> int {"}, {"sha": "8047de5e8f97c7ab5948011e6bd6eca2c8ff419d", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=a99eff3fca670238bd7194dc83d8f4b968277dc6", "patch": "@@ -226,7 +226,8 @@ fn get_extern_rust_fn(ccx: &CrateContext, inputs: &[ty::t], output: ty::t,\n \n     let f = decl_rust_fn(ccx, false, inputs, output, name);\n     csearch::get_item_attrs(&ccx.sess().cstore, did, |meta_items| {\n-        set_llvm_fn_attrs(meta_items.iter().map(|&x| attr::mk_attr(x)).collect::<~[_]>(), f)\n+        set_llvm_fn_attrs(meta_items.iter().map(|&x| attr::mk_attr(x))\n+                                    .collect::<Vec<_>>().as_slice(), f)\n     });\n \n     ccx.externs.borrow_mut().insert(name.to_owned(), f);\n@@ -2114,7 +2115,7 @@ pub fn write_metadata(cx: &CrateContext, krate: &ast::Crate) -> Vec<u8> {\n                             Some(compressed) => compressed,\n                             None => cx.sess().fatal(format!(\"failed to compress metadata\", ))\n                         }.as_slice();\n-    let llmeta = C_bytes(cx, compressed);\n+    let llmeta = C_bytes(cx, compressed.as_slice());\n     let llconst = C_struct(cx, [llmeta], false);\n     let name = format!(\"rust_metadata_{}_{}_{}\", cx.link_meta.crateid.name,\n                        cx.link_meta.crateid.version_or_default(), cx.link_meta.crate_hash);"}, {"sha": "548746362cf238bb1ff0f8c5d12b77697956650a", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=a99eff3fca670238bd7194dc83d8f4b968277dc6", "patch": "@@ -33,7 +33,7 @@ use middle::ty;\n use util::ppaux::{Repr, ty_to_str};\n \n use std::c_str::ToCStr;\n-use std::{slice, vec};\n+use std::vec;\n use std::vec::Vec;\n use libc::c_uint;\n use syntax::{ast, ast_util};\n@@ -97,9 +97,9 @@ fn const_vec(cx: &CrateContext, e: &ast::Expr,\n     let (vs, inlineable) = vec::unzip(es.iter().map(|e| const_expr(cx, *e, is_local)));\n     // If the vector contains enums, an LLVM array won't work.\n     let v = if vs.iter().any(|vi| val_ty(*vi) != llunitty) {\n-        C_struct(cx, vs, false)\n+        C_struct(cx, vs.as_slice(), false)\n     } else {\n-        C_array(llunitty, vs)\n+        C_array(llunitty, vs.as_slice())\n     };\n     (v, llunitty, inlineable.iter().fold(true, |a, &b| a && b))\n }\n@@ -554,7 +554,7 @@ fn const_expr_unadjusted(cx: &CrateContext, e: &ast::Expr,\n                           }\n                       }\n                   }));\n-                  (adt::trans_const(cx, &*repr, discr, cs),\n+                  (adt::trans_const(cx, &*repr, discr, cs.as_slice()),\n                    inlineable.iter().fold(true, |a, &b| a && b))\n               })\n           }"}, {"sha": "9822cc388bbb611971479104a10cde6cecc9a256", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a99eff3fca670238bd7194dc83d8f4b968277dc6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=a99eff3fca670238bd7194dc83d8f4b968277dc6", "patch": "@@ -162,7 +162,7 @@ pub fn monomorphic_fn(ccx: &CrateContext,\n             debug!(\"static default: changed substitution to {}\",\n                    substs.repr(ccx.tcx()));\n \n-            ty::subst_tps(ccx.tcx(), substs, None, llitem_ty)\n+            ty::subst_tps(ccx.tcx(), substs.as_slice(), None, llitem_ty)\n         }\n     };\n "}]}