{"sha": "8341f6451bef4fa16ba6a51d4d73923f2f1b539d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNDFmNjQ1MWJlZjRmYTE2YmE2YTUxZDRkNzM5MjNmMmYxYjUzOWQ=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-30T02:34:21Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-30T02:34:21Z"}, "message": "Fix run-pass/signal-exit-status to not trigger UB by writing to NULL.", "tree": {"sha": "10e66443863e2fdf4b913d708a00803ee5498d90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10e66443863e2fdf4b913d708a00803ee5498d90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8341f6451bef4fa16ba6a51d4d73923f2f1b539d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8341f6451bef4fa16ba6a51d4d73923f2f1b539d", "html_url": "https://github.com/rust-lang/rust/commit/8341f6451bef4fa16ba6a51d4d73923f2f1b539d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8341f6451bef4fa16ba6a51d4d73923f2f1b539d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d2cd28fd715d2b9751de82b14d28ce6e376728", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d2cd28fd715d2b9751de82b14d28ce6e376728", "html_url": "https://github.com/rust-lang/rust/commit/77d2cd28fd715d2b9751de82b14d28ce6e376728"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8a2bbc83c424e3eb952b4a0e20a125379d92f01f", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8341f6451bef4fa16ba6a51d4d73923f2f1b539d/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8341f6451bef4fa16ba6a51d4d73923f2f1b539d/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=8341f6451bef4fa16ba6a51d4d73923f2f1b539d", "patch": "@@ -18,7 +18,7 @@ pub fn main() {\n     let args: Vec<String> = env::args().collect();\n     if args.len() >= 2 && args[1] == \"signal\" {\n         // Raise a segfault.\n-        unsafe { *(0 as *mut isize) = 0; }\n+        unsafe { *(1 as *mut isize) = 0; }\n     } else {\n         let status = Command::new(&args[0]).arg(\"signal\").status().unwrap();\n         assert!(status.code().is_none());"}]}