{"sha": "99daba2a4a17c733f4edf781fde6fa8cb30975a0", "node_id": "C_kwDOAAsO6NoAKDk5ZGFiYTJhNGExN2M3MzNmNGVkZjc4MWZkZTZmYThjYjMwOTc1YTA", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-21T18:45:57Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-05-22T19:21:27Z"}, "message": "Use revisions for NLL in object-lifetime", "tree": {"sha": "9f88a7588d0b8b3c87a441c7e2cc874f7d42616d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f88a7588d0b8b3c87a441c7e2cc874f7d42616d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99daba2a4a17c733f4edf781fde6fa8cb30975a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99daba2a4a17c733f4edf781fde6fa8cb30975a0", "html_url": "https://github.com/rust-lang/rust/commit/99daba2a4a17c733f4edf781fde6fa8cb30975a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99daba2a4a17c733f4edf781fde6fa8cb30975a0/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8220be5240e644a368559388e0de5e1e412a3e61", "url": "https://api.github.com/repos/rust-lang/rust/commits/8220be5240e644a368559388e0de5e1e412a3e61", "html_url": "https://github.com/rust-lang/rust/commit/8220be5240e644a368559388e0de5e1e412a3e61"}], "stats": {"total": 102, "additions": 67, "deletions": 35}, "files": [{"sha": "c402d1fefad6544c9ed68cb54300c490a7ec32ce", "filename": "src/test/ui/object-lifetime/object-lifetime-default-elision.base.stderr", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.base.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,55 +1,55 @@\n error[E0495]: cannot infer an appropriate lifetime for automatic coercion due to conflicting requirements\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL |     ss\n    |     ^^\n    |\n note: first, the lifetime cannot outlive the lifetime `'a` as defined here...\n-  --> $DIR/object-lifetime-default-elision.rs:54:10\n+  --> $DIR/object-lifetime-default-elision.rs:58:10\n    |\n LL | fn load3<'a,'b>(ss: &'a dyn SomeTrait) -> &'b dyn SomeTrait {\n    |          ^^\n note: ...so that reference does not outlive borrowed content\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL |     ss\n    |     ^^\n note: but, the lifetime must be valid for the lifetime `'b` as defined here...\n-  --> $DIR/object-lifetime-default-elision.rs:54:13\n+  --> $DIR/object-lifetime-default-elision.rs:58:13\n    |\n LL | fn load3<'a,'b>(ss: &'a dyn SomeTrait) -> &'b dyn SomeTrait {\n    |             ^^\n note: ...so that the types are compatible\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL |     ss\n    |     ^^\n    = note: expected `&'b (dyn SomeTrait + 'b)`\n               found `&dyn SomeTrait`\n \n error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL |     ss\n    |     ^^\n    |\n note: first, the lifetime cannot outlive the lifetime `'a` as defined here...\n-  --> $DIR/object-lifetime-default-elision.rs:54:10\n+  --> $DIR/object-lifetime-default-elision.rs:58:10\n    |\n LL | fn load3<'a,'b>(ss: &'a dyn SomeTrait) -> &'b dyn SomeTrait {\n    |          ^^\n note: ...so that the declared lifetime parameter bounds are satisfied\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL |     ss\n    |     ^^\n note: but, the lifetime must be valid for the lifetime `'b` as defined here...\n-  --> $DIR/object-lifetime-default-elision.rs:54:13\n+  --> $DIR/object-lifetime-default-elision.rs:58:13\n    |\n LL | fn load3<'a,'b>(ss: &'a dyn SomeTrait) -> &'b dyn SomeTrait {\n    |             ^^\n note: ...so that the types are compatible\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL |     ss\n    |     ^^", "previous_filename": "src/test/ui/object-lifetime/object-lifetime-default-elision.stderr"}, {"sha": "49bbadf7224bae88874a7699782111e1872989de", "filename": "src/test/ui/object-lifetime/object-lifetime-default-elision.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/object-lifetime-default-elision.rs:71:5\n+  --> $DIR/object-lifetime-default-elision.rs:75:5\n    |\n LL | fn load3<'a,'b>(ss: &'a dyn SomeTrait) -> &'b dyn SomeTrait {\n    |          -- -- lifetime `'b` defined here"}, {"sha": "16b4df7bad5ede8da0e273f6c0784a852c261794", "filename": "src/test/ui/object-lifetime/object-lifetime-default-elision.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.rs?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,3 +1,7 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n // Test various cases where the old rules under lifetime elision\n // yield slightly different results than the new rules.\n \n@@ -69,8 +73,9 @@ fn load3<'a,'b>(ss: &'a dyn SomeTrait) -> &'b dyn SomeTrait {\n     // which fails to type check.\n \n     ss\n-        //~^ ERROR cannot infer\n-        //~| ERROR cannot infer\n+        //[base]~^ ERROR cannot infer\n+        //[base]~| ERROR cannot infer\n+        //[nll]~^^^ ERROR lifetime may not live long enough\n }\n \n fn main() {"}, {"sha": "5a8cba175e93f78d4f162776e1290e6dc5967503", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.base.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.base.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error[E0759]: `ss` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\n-  --> $DIR/object-lifetime-default-from-box-error.rs:18:5\n+  --> $DIR/object-lifetime-default-from-box-error.rs:22:5\n    |\n LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {\n    |             --------------- this data with an anonymous lifetime `'_`...\n@@ -8,7 +8,7 @@ LL |     ss.r\n    |     ^^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/object-lifetime-default-from-box-error.rs:14:37\n+  --> $DIR/object-lifetime-default-from-box-error.rs:18:37\n    |\n LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {\n    |                                     ^^^^^^^^^^^^^ `'static` requirement introduced here\n@@ -21,7 +21,7 @@ LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait + '_> {\n    |                                                   ++++\n \n error[E0621]: explicit lifetime required in the type of `ss`\n-  --> $DIR/object-lifetime-default-from-box-error.rs:31:12\n+  --> $DIR/object-lifetime-default-from-box-error.rs:38:12\n    |\n LL | fn store1<'b>(ss: &mut SomeStruct, b: Box<dyn SomeTrait+'b>) {\n    |                   --------------- help: add explicit lifetime `'b` to the type of `ss`: `&mut SomeStruct<'b>`", "previous_filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.stderr"}, {"sha": "7907813f2674eeb2f47fd9aa234a21990ac481af", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/object-lifetime-default-from-box-error.rs:18:5\n+  --> $DIR/object-lifetime-default-from-box-error.rs:22:5\n    |\n LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {\n    |         -- has type `&mut SomeStruct<'1>`\n@@ -13,13 +13,13 @@ LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait + '_> {\n    |                                                   ++++\n \n error[E0507]: cannot move out of `ss.r` which is behind a mutable reference\n-  --> $DIR/object-lifetime-default-from-box-error.rs:18:5\n+  --> $DIR/object-lifetime-default-from-box-error.rs:22:5\n    |\n LL |     ss.r\n    |     ^^^^ move occurs because `ss.r` has type `Box<dyn SomeTrait>`, which does not implement the `Copy` trait\n \n error[E0621]: explicit lifetime required in the type of `ss`\n-  --> $DIR/object-lifetime-default-from-box-error.rs:31:5\n+  --> $DIR/object-lifetime-default-from-box-error.rs:38:5\n    |\n LL | fn store1<'b>(ss: &mut SomeStruct, b: Box<dyn SomeTrait+'b>) {\n    |                   --------------- help: add explicit lifetime `'b` to the type of `ss`: `&mut SomeStruct<'b>`"}, {"sha": "1cb9834913cab48cb2a542062b75435251051d0d", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.rs?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,3 +1,7 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n // Test various cases where the defaults should lead to errors being\n // reported.\n \n@@ -15,7 +19,10 @@ fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {\n     // `Box<SomeTrait>` defaults to a `'static` bound, so this return\n     // is illegal.\n \n-    ss.r //~ ERROR E0759\n+    ss.r\n+    //[base]~^ ERROR E0759\n+    //[nll]~^^ ERROR lifetime may not live long enough\n+    //[nll]~| ERROR cannot move out of\n }\n \n fn store(ss: &mut SomeStruct, b: Box<dyn SomeTrait>) {"}, {"sha": "7e88aa32357d7115597679189e68e34191af4fb1", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-box-error.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.base.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,13 +1,13 @@\n error[E0308]: mismatched types\n-  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:15:12\n+  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:19:12\n    |\n LL |     ss.t = t;\n    |            ^ lifetime mismatch\n    |\n    = note: expected reference `&'a Box<(dyn Test + 'static)>`\n               found reference `&'a Box<(dyn Test + 'a)>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:14:6\n+  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:18:6\n    |\n LL | fn c<'a>(t: &'a Box<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n    |      ^^", "previous_filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-box-error.stderr"}, {"sha": "a07cc0718f11fc0eae8161e4bc1e714f6c9ca828", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-box-error.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:15:5\n+  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:19:5\n    |\n LL | fn c<'a>(t: &'a Box<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n    |      -- lifetime `'a` defined here"}, {"sha": "8cdd64be193e2277852c190f73a61dac35cf751e", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-box-error.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.rs?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,3 +1,7 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n // Test that the lifetime from the enclosing `&` is \"inherited\"\n // through the `Box` struct.\n \n@@ -12,7 +16,9 @@ struct SomeStruct<'a> {\n }\n \n fn c<'a>(t: &'a Box<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n-    ss.t = t; //~ ERROR mismatched types\n+    ss.t = t;\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn main() {"}, {"sha": "b97a7d225499533578fd4e7f6522f9db9130b317", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-struct-error.base.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.base.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,13 +1,13 @@\n error[E0308]: mismatched types\n-  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:20:12\n+  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:24:12\n    |\n LL |     ss.t = t;\n    |            ^ lifetime mismatch\n    |\n    = note: expected reference `&'a MyBox<(dyn Test + 'static)>`\n               found reference `&'a MyBox<(dyn Test + 'a)>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:19:6\n+  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:23:6\n    |\n LL | fn c<'a>(t: &'a MyBox<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n    |      ^^", "previous_filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-struct-error.stderr"}, {"sha": "63d51b5c28c6ced2946eb48aabd8d8ffd2cde493", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-struct-error.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:20:5\n+  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:24:5\n    |\n LL | fn c<'a>(t: &'a MyBox<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n    |      -- lifetime `'a` defined here"}, {"sha": "2d9a148a389c45e4376cda4a0e4439b5a7afc74a", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-struct-error.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.rs?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,3 +1,7 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n // Test that the lifetime from the enclosing `&` is \"inherited\"\n // through the `MyBox` struct.\n \n@@ -17,7 +21,9 @@ struct MyBox<T:?Sized> {\n }\n \n fn c<'a>(t: &'a MyBox<dyn Test+'a>, mut ss: SomeStruct<'a>) {\n-    ss.t = t; //~ ERROR mismatched types\n+    ss.t = t;\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn main() {"}, {"sha": "6a72fab307b6f25bddc2678e77c43daebea0e037", "filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.base.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.base.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.base.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.base.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error[E0623]: lifetime mismatch\n-  --> $DIR/object-lifetime-default-mybox.rs:27:5\n+  --> $DIR/object-lifetime-default-mybox.rs:31:5\n    |\n LL | fn load1<'a,'b>(a: &'a MyBox<dyn SomeTrait>,\n    |                    ------------------------ this parameter and the return type are declared with different lifetimes...\n@@ -11,15 +11,15 @@ LL |     a\n    |     ^ ...but data from `a` is returned here\n \n error[E0308]: mismatched types\n-  --> $DIR/object-lifetime-default-mybox.rs:31:11\n+  --> $DIR/object-lifetime-default-mybox.rs:37:11\n    |\n LL |     load0(ss)\n    |           ^^ lifetime mismatch\n    |\n    = note: expected reference `&MyBox<(dyn SomeTrait + 'static)>`\n               found reference `&MyBox<(dyn SomeTrait + 'a)>`\n note: the lifetime `'a` as defined here...\n-  --> $DIR/object-lifetime-default-mybox.rs:30:10\n+  --> $DIR/object-lifetime-default-mybox.rs:36:10\n    |\n LL | fn load2<'a>(ss: &MyBox<dyn SomeTrait + 'a>) -> MyBox<dyn SomeTrait + 'a> {\n    |          ^^", "previous_filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.stderr"}, {"sha": "aa454cb99315cd45c8a2ef186bcc7f5e7e8b8a97", "filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,5 +1,5 @@\n error: lifetime may not live long enough\n-  --> $DIR/object-lifetime-default-mybox.rs:27:5\n+  --> $DIR/object-lifetime-default-mybox.rs:31:5\n    |\n LL | fn load1<'a,'b>(a: &'a MyBox<dyn SomeTrait>,\n    |          -- -- lifetime `'b` defined here\n@@ -12,7 +12,7 @@ LL |     a\n    = help: consider adding the following bound: `'a: 'b`\n \n error[E0521]: borrowed data escapes outside of function\n-  --> $DIR/object-lifetime-default-mybox.rs:31:5\n+  --> $DIR/object-lifetime-default-mybox.rs:37:5\n    |\n LL | fn load2<'a>(ss: &MyBox<dyn SomeTrait + 'a>) -> MyBox<dyn SomeTrait + 'a> {\n    |          --  -- `ss` is a reference that is only valid in the function body"}, {"sha": "874556dafebf1d5392afdc866cfb758aad7225af", "filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99daba2a4a17c733f4edf781fde6fa8cb30975a0/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.rs?ref=99daba2a4a17c733f4edf781fde6fa8cb30975a0", "patch": "@@ -1,3 +1,7 @@\n+// ignore-compare-mode-nll\n+// revisions: base nll\n+// [nll]compile-flags: -Zborrowck=mir\n+\n // Test a \"pass-through\" object-lifetime-default that produces errors.\n \n #![allow(dead_code)]\n@@ -24,11 +28,15 @@ fn load1<'a,'b>(a: &'a MyBox<dyn SomeTrait>,\n                 b: &'b MyBox<dyn SomeTrait>)\n                 -> &'b MyBox<dyn SomeTrait>\n {\n-    a //~ ERROR lifetime mismatch\n+    a\n+    //[base]~^ ERROR lifetime mismatch\n+    //[nll]~^^ ERROR lifetime may not live long enough\n }\n \n fn load2<'a>(ss: &MyBox<dyn SomeTrait + 'a>) -> MyBox<dyn SomeTrait + 'a> {\n-    load0(ss) //~ ERROR mismatched types\n+    load0(ss)\n+    //[base]~^ ERROR mismatched types\n+    //[nll]~^^ ERROR borrowed data escapes outside of function\n }\n \n fn main() {"}]}