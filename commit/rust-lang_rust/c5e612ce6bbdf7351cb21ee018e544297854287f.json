{"sha": "c5e612ce6bbdf7351cb21ee018e544297854287f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZTYxMmNlNmJiZGY3MzUxY2IyMWVlMDE4ZTU0NDI5Nzg1NDI4N2Y=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-10T14:15:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-10T14:15:05Z"}, "message": "Rollup merge of #85146 - ijackson:seek-rewind, r=m-ou-se\n\nProvide io::Seek::rewind\n\nUsing `Seek::seek` is slightly clumsy because of the need to write (or import) `std::io::SeekFrom` to get at `SeekStart`.  C already has `rewind` (although with broken error handling); we should have it too.\n\nI'm motivated to do this because I've just found myself copy-pasting my 5-line extension trait between projects.\n\nThat the example ends up using `OpenOptions` makes this look like a niche use case, but it is very common to rewind temporary files.  `tempfile` isn't available for use in this example or it would have looked shorter and more natural.\n\nIf this gets a positive reception I will open a tracking issue and update the feature gate.", "tree": {"sha": "66e44bde8dc62308dc8d3b01393610be017c7b6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66e44bde8dc62308dc8d3b01393610be017c7b6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5e612ce6bbdf7351cb21ee018e544297854287f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmT/pCRBK7hj4Ov3rIwAA61gIAICSQTIBkXo4hgg4kimlRVpK\nvLZZgeeZPLJdhfsyrWPhNN4Ut8Q3QHNju2fpFk/j52DguxqT8ZGrtgY4CNtaLkkL\niMRxmVPbsRuyjQ3b8zwVj2cQZ0XFXpYIBqe5fyBuGT38KnEe9dKMsWjlretpR8Go\nHDHEhjTcCK+//xGX+sHRg0GrIh1ZP5r9w8Sca/kgmt54o1VGDgi4Cycek5Ev4vsF\nEAHyrFn9MJg91qtmpSYC5m8GK7bE4d1k9hlzDkcsl1PgEiEZ5+mSC5S+phjlajuP\nrbKnVdasonfKca6I4kkYcy28ZjG6snenV2qQ0gbVzByF5xg5TVG8k1d/n2Izce4=\n=bItf\n-----END PGP SIGNATURE-----\n", "payload": "tree 66e44bde8dc62308dc8d3b01393610be017c7b6e\nparent ae8a438034caee5c345792b7655c689324fd25c8\nparent 7ae852e349eeb83243a1d1cc4c79c8997723215e\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620656105 +0200\ncommitter GitHub <noreply@github.com> 1620656105 +0200\n\nRollup merge of #85146 - ijackson:seek-rewind, r=m-ou-se\n\nProvide io::Seek::rewind\n\nUsing `Seek::seek` is slightly clumsy because of the need to write (or import) `std::io::SeekFrom` to get at `SeekStart`.  C already has `rewind` (although with broken error handling); we should have it too.\n\nI'm motivated to do this because I've just found myself copy-pasting my 5-line extension trait between projects.\n\nThat the example ends up using `OpenOptions` makes this look like a niche use case, but it is very common to rewind temporary files.  `tempfile` isn't available for use in this example or it would have looked shorter and more natural.\n\nIf this gets a positive reception I will open a tracking issue and update the feature gate.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e612ce6bbdf7351cb21ee018e544297854287f", "html_url": "https://github.com/rust-lang/rust/commit/c5e612ce6bbdf7351cb21ee018e544297854287f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5e612ce6bbdf7351cb21ee018e544297854287f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae8a438034caee5c345792b7655c689324fd25c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae8a438034caee5c345792b7655c689324fd25c8", "html_url": "https://github.com/rust-lang/rust/commit/ae8a438034caee5c345792b7655c689324fd25c8"}, {"sha": "7ae852e349eeb83243a1d1cc4c79c8997723215e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae852e349eeb83243a1d1cc4c79c8997723215e", "html_url": "https://github.com/rust-lang/rust/commit/7ae852e349eeb83243a1d1cc4c79c8997723215e"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "9f43379aff7878ab64a636f8f0411e8788120def", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c5e612ce6bbdf7351cb21ee018e544297854287f/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e612ce6bbdf7351cb21ee018e544297854287f/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=c5e612ce6bbdf7351cb21ee018e544297854287f", "patch": "@@ -1663,10 +1663,47 @@ pub trait Seek {\n     ///\n     /// # Errors\n     ///\n+    /// Seeking can fail, for example becaue it might involve flushing a buffer.\n+    ///\n     /// Seeking to a negative offset is considered an error.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn seek(&mut self, pos: SeekFrom) -> Result<u64>;\n \n+    /// Rewind to the beginning of a stream.\n+    ///\n+    /// This is a convenience method, equivalent to `seek(SeekFrom::Start(0))`.\n+    ///\n+    /// # Errors\n+    ///\n+    /// Rewinding can fail, for example becaue it might involve flushing a buffer.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// #![feature(seek_rewind)]\n+    /// use std::io::{Read, Seek, Write};\n+    /// use std::fs::OpenOptions;\n+    ///\n+    /// let mut f = OpenOptions::new()\n+    ///     .write(true)\n+    ///     .read(true)\n+    ///     .create(true)\n+    ///     .open(\"foo.txt\").unwrap();\n+    ///\n+    /// let hello = \"Hello!\\n\";\n+    /// write!(f, \"{}\", hello).unwrap();\n+    /// f.rewind().unwrap();\n+    ///\n+    /// let mut buf = String::new();\n+    /// f.read_to_string(&mut buf).unwrap();\n+    /// assert_eq!(&buf, hello);\n+    /// ```\n+    #[unstable(feature = \"seek_rewind\", issue = \"85149\")]\n+    fn rewind(&mut self) -> Result<()> {\n+        self.seek(SeekFrom::Start(0))?;\n+        Ok(())\n+    }\n+\n     /// Returns the length of this stream (in bytes).\n     ///\n     /// This method is implemented using up to three seek operations. If this"}]}