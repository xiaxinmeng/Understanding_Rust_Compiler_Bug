{"sha": "6ba08755dfd9ddbb55248a0263a4e81d3602b410", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYTA4NzU1ZGZkOWRkYmI1NTI0OGEwMjYzYTRlODFkMzYwMmI0MTA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-16T02:34:30Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-20T01:31:33Z"}, "message": "When encountering an undefined named lifetime, point to where it can be\n\nThis doesn't mention that using an existing lifetime is possible, but\nthat would hopefully be clear as always being an option. The intention\nof this is to teach newcomers what the lifetime syntax is.", "tree": {"sha": "ce02b239a1a7b12bb4ced7592218a9d5cda62ba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce02b239a1a7b12bb4ced7592218a9d5cda62ba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ba08755dfd9ddbb55248a0263a4e81d3602b410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba08755dfd9ddbb55248a0263a4e81d3602b410", "html_url": "https://github.com/rust-lang/rust/commit/6ba08755dfd9ddbb55248a0263a4e81d3602b410", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ba08755dfd9ddbb55248a0263a4e81d3602b410/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da653f669dcb97d40ca29b2937518bb8a12b775", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da653f669dcb97d40ca29b2937518bb8a12b775", "html_url": "https://github.com/rust-lang/rust/commit/7da653f669dcb97d40ca29b2937518bb8a12b775"}], "stats": {"total": 267, "additions": 249, "deletions": 18}, "files": [{"sha": "29872be47c2f3ab4cd7a728123f5594fe63a87f6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -11,6 +11,7 @@\n #![feature(crate_visibility_modifier)]\n #![feature(label_break_value)]\n #![feature(nll)]\n+#![feature(slice_patterns)]\n #![recursion_limit = \"256\"]\n \n pub use rustc_hir::def::{Namespace, PerNS};"}, {"sha": "f8e2f0cafff0221974f830761a8d38bdc8029d22", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -183,6 +183,10 @@ struct LifetimeContext<'a, 'tcx> {\n     xcrate_object_lifetime_defaults: DefIdMap<Vec<ObjectLifetimeDefault>>,\n \n     lifetime_uses: &'a mut DefIdMap<LifetimeUseSet<'tcx>>,\n+\n+    /// When encountering an undefined named lifetime, we will suggest introducing it in these\n+    /// places.\n+    missing_named_lifetime_spots: Vec<&'tcx hir::Generics<'tcx>>,\n }\n \n #[derive(Debug)]\n@@ -342,6 +346,7 @@ fn krate(tcx: TyCtxt<'_>) -> NamedRegionMap {\n             labels_in_fn: vec![],\n             xcrate_object_lifetime_defaults: Default::default(),\n             lifetime_uses: &mut Default::default(),\n+            missing_named_lifetime_spots: vec![],\n         };\n         for (_, item) in &krate.items {\n             visitor.visit_item(item);\n@@ -384,9 +389,11 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n     fn visit_item(&mut self, item: &'tcx hir::Item<'tcx>) {\n         match item.kind {\n             hir::ItemKind::Fn(ref sig, ref generics, _) => {\n+                self.missing_named_lifetime_spots.push(generics);\n                 self.visit_early_late(None, &sig.decl, generics, |this| {\n                     intravisit::walk_item(this, item);\n                 });\n+                self.missing_named_lifetime_spots.pop();\n             }\n \n             hir::ItemKind::ExternCrate(_)\n@@ -417,6 +424,8 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n             | hir::ItemKind::Trait(_, _, ref generics, ..)\n             | hir::ItemKind::TraitAlias(ref generics, ..)\n             | hir::ItemKind::Impl { ref generics, .. } => {\n+                self.missing_named_lifetime_spots.push(generics);\n+\n                 // Impls permit `'_` to be used and it is equivalent to \"some fresh lifetime name\".\n                 // This is not true for other kinds of items.x\n                 let track_lifetime_uses = match item.kind {\n@@ -454,6 +463,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                     this.check_lifetime_params(old_scope, &generics.params);\n                     intravisit::walk_item(this, item);\n                 });\n+                self.missing_named_lifetime_spots.pop();\n             }\n         }\n     }\n@@ -686,6 +696,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n \n     fn visit_trait_item(&mut self, trait_item: &'tcx hir::TraitItem<'tcx>) {\n         use self::hir::TraitItemKind::*;\n+        self.missing_named_lifetime_spots.push(&trait_item.generics);\n         match trait_item.kind {\n             Method(ref sig, _) => {\n                 let tcx = self.tcx;\n@@ -737,10 +748,12 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                 intravisit::walk_trait_item(self, trait_item);\n             }\n         }\n+        self.missing_named_lifetime_spots.pop();\n     }\n \n     fn visit_impl_item(&mut self, impl_item: &'tcx hir::ImplItem<'tcx>) {\n         use self::hir::ImplItemKind::*;\n+        self.missing_named_lifetime_spots.push(&impl_item.generics);\n         match impl_item.kind {\n             Method(ref sig, _) => {\n                 let tcx = self.tcx;\n@@ -824,6 +837,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                 intravisit::walk_impl_item(self, impl_item);\n             }\n         }\n+        self.missing_named_lifetime_spots.pop();\n     }\n \n     fn visit_lifetime(&mut self, lifetime_ref: &'tcx hir::Lifetime) {\n@@ -1306,7 +1320,7 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n     where\n         F: for<'b> FnOnce(ScopeRef<'_>, &mut LifetimeContext<'b, 'tcx>),\n     {\n-        let LifetimeContext { tcx, map, lifetime_uses, .. } = self;\n+        let LifetimeContext { tcx, map, lifetime_uses, missing_named_lifetime_spots, .. } = self;\n         let labels_in_fn = take(&mut self.labels_in_fn);\n         let xcrate_object_lifetime_defaults = take(&mut self.xcrate_object_lifetime_defaults);\n         let mut this = LifetimeContext {\n@@ -1317,7 +1331,8 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n             is_in_fn_syntax: self.is_in_fn_syntax,\n             labels_in_fn,\n             xcrate_object_lifetime_defaults,\n-            lifetime_uses: lifetime_uses,\n+            lifetime_uses,\n+            missing_named_lifetime_spots: missing_named_lifetime_spots.to_vec(),\n         };\n         debug!(\"entering scope {:?}\", this.scope);\n         f(self.scope, &mut this);\n@@ -1807,15 +1822,29 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n \n             self.insert_lifetime(lifetime_ref, def);\n         } else {\n-            struct_span_err!(\n+            let mut err = struct_span_err!(\n                 self.tcx.sess,\n                 lifetime_ref.span,\n                 E0261,\n                 \"use of undeclared lifetime name `{}`\",\n                 lifetime_ref\n-            )\n-            .span_label(lifetime_ref.span, \"undeclared lifetime\")\n-            .emit();\n+            );\n+            err.span_label(lifetime_ref.span, \"undeclared lifetime\");\n+            if !self.is_in_fn_syntax {\n+                for generics in &self.missing_named_lifetime_spots {\n+                    let (span, sugg) = match &generics.params {\n+                        [] => (generics.span, format!(\"<{}>\", lifetime_ref)),\n+                        [param, ..] => (param.span.shrink_to_lo(), format!(\"{}, \", lifetime_ref)),\n+                    };\n+                    err.span_suggestion(\n+                        span,\n+                        &format!(\"consider introducing lifetime `{}` here\", lifetime_ref),\n+                        sugg,\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                }\n+            }\n+            err.emit();\n         }\n     }\n "}, {"sha": "0eab2dc0ee05f891e01f74514c246f58f4e5392b", "filename": "src/test/ui/error-codes/E0261.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Ferror-codes%2FE0261.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Ferror-codes%2FE0261.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0261.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -2,11 +2,15 @@ error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/E0261.rs:1:12\n    |\n LL | fn foo(x: &'a str) { }\n-   |            ^^ undeclared lifetime\n+   |       -    ^^ undeclared lifetime\n+   |       |\n+   |       help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/E0261.rs:5:9\n    |\n+LL | struct Foo {\n+   |           - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     x: &'a str,\n    |         ^^ undeclared lifetime\n "}, {"sha": "bbf3ea8a89f23f32d3669423c222cc44a50e7f8e", "filename": "src/test/ui/feature-gates/feature-gate-in_band_lifetimes.stderr", "status": "modified", "additions": 111, "deletions": 7, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -2,103 +2,207 @@ error[E0261]: use of undeclared lifetime name `'x`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:3:12\n    |\n LL | fn foo(x: &'x u8) -> &'x u8 { x }\n-   |            ^^ undeclared lifetime\n+   |       -    ^^ undeclared lifetime\n+   |       |\n+   |       help: consider introducing lifetime `'x` here: `<'x>`\n \n error[E0261]: use of undeclared lifetime name `'x`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:3:23\n    |\n LL | fn foo(x: &'x u8) -> &'x u8 { x }\n-   |                       ^^ undeclared lifetime\n+   |       -               ^^ undeclared lifetime\n+   |       |\n+   |       help: consider introducing lifetime `'x` here: `<'x>`\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:15:12\n    |\n LL | impl<'a> X<'b> {\n-   |            ^^ undeclared lifetime\n+   |      -     ^^ undeclared lifetime\n+   |      |\n+   |      help: consider introducing lifetime `'b` here: `'b,`\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:17:27\n    |\n LL |     fn inner_2(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b, 'a> X<'b> {\n+   |      ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn inner_2<'b>(&self) -> &'b u8 {\n+   |               ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:23:8\n    |\n LL | impl X<'b> {\n-   |        ^^ undeclared lifetime\n+   |     -  ^^ undeclared lifetime\n+   |     |\n+   |     help: consider introducing lifetime `'b` here: `<'b>`\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:25:27\n    |\n LL |     fn inner_3(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b> X<'b> {\n+   |     ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn inner_3<'b>(&self) -> &'b u8 {\n+   |               ^^^^\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:33:9\n    |\n LL | impl Y<&'a u8> {\n-   |         ^^ undeclared lifetime\n+   |     -   ^^ undeclared lifetime\n+   |     |\n+   |     help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:35:25\n    |\n LL |     fn inner(&self) -> &'a u8 {\n    |                         ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'a` here\n+   |\n+LL | impl<'a> Y<&'a u8> {\n+   |     ^^^^\n+help: consider introducing lifetime `'a` here\n+   |\n+LL |     fn inner<'a>(&self) -> &'a u8 {\n+   |             ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:43:27\n    |\n LL |     fn any_lifetime() -> &'b u8;\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | trait MyTrait<'b, 'a> {\n+   |               ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn any_lifetime<'b>() -> &'b u8;\n+   |                    ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:45:27\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | trait MyTrait<'b, 'a> {\n+   |               ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8;\n+   |                         ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:45:40\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                                        ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | trait MyTrait<'b, 'a> {\n+   |               ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8;\n+   |                         ^^^^\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:50:14\n    |\n LL | impl MyTrait<'a> for Y<&'a u8> {\n-   |              ^^ undeclared lifetime\n+   |     -        ^^ undeclared lifetime\n+   |     |\n+   |     help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:50:25\n    |\n LL | impl MyTrait<'a> for Y<&'a u8> {\n-   |                         ^^ undeclared lifetime\n+   |     -                   ^^ undeclared lifetime\n+   |     |\n+   |     help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:53:31\n    |\n LL |     fn my_lifetime(&self) -> &'a u8 { self.0 }\n    |                               ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'a` here\n+   |\n+LL | impl<'a> MyTrait<'a> for Y<&'a u8> {\n+   |     ^^^^\n+help: consider introducing lifetime `'a` here\n+   |\n+LL |     fn my_lifetime<'a>(&self) -> &'a u8 { self.0 }\n+   |                   ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:55:27\n    |\n LL |     fn any_lifetime() -> &'b u8 { &0 }\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b> MyTrait<'a> for Y<&'a u8> {\n+   |     ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn any_lifetime<'b>() -> &'b u8 { &0 }\n+   |                    ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:57:27\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b> MyTrait<'a> for Y<&'a u8> {\n+   |     ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8 { &*self.0 }\n+   |                         ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:57:40\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                                        ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b> MyTrait<'a> for Y<&'a u8> {\n+   |     ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn borrowed_lifetime<'b>(&'b self) -> &'b u8 { &*self.0 }\n+   |                         ^^^^\n \n error: aborting due to 17 previous errors\n "}, {"sha": "fc2ce1cb866bbd8529afffd23c9b81b48563d5ea", "filename": "src/test/ui/generic-associated-types/generic_associated_type_undeclared_lifetimes.stderr", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -3,12 +3,30 @@ error[E0261]: use of undeclared lifetime name `'b`\n    |\n LL |         + Deref<Target = Self::Item<'b>>;\n    |                                     ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | trait Iterable<'b> {\n+   |               ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     type Iter<'b, 'a>: Iterator<Item = Self::Item<'a>>\n+   |               ^^^\n \n error[E0261]: use of undeclared lifetime name `'undeclared`\n   --> $DIR/generic_associated_type_undeclared_lifetimes.rs:12:41\n    |\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'undeclared>;\n    |                                         ^^^^^^^^^^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'undeclared` here\n+   |\n+LL | trait Iterable<'undeclared> {\n+   |               ^^^^^^^^^^^^^\n+help: consider introducing lifetime `'undeclared` here\n+   |\n+LL |     fn iter<'undeclared, 'a>(&'a self) -> Self::Iter<'undeclared>;\n+   |             ^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fe656f7af7e0139d7b1898e53bf372bd769b571a", "filename": "src/test/ui/in-band-lifetimes/no_in_band_in_struct.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_in_band_in_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_in_band_in_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_in_band_in_struct.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -1,12 +1,16 @@\n error[E0261]: use of undeclared lifetime name `'test`\n   --> $DIR/no_in_band_in_struct.rs:5:9\n    |\n+LL | struct Foo {\n+   |           - help: consider introducing lifetime `'test` here: `<'test>`\n LL |     x: &'test u32,\n    |         ^^^^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'test`\n   --> $DIR/no_in_band_in_struct.rs:9:10\n    |\n+LL | enum Bar {\n+   |         - help: consider introducing lifetime `'test` here: `<'test>`\n LL |     Baz(&'test u32),\n    |          ^^^^^ undeclared lifetime\n "}, {"sha": "bfb20ade035cf7af1885343abd49fa21d409cfb8", "filename": "src/test/ui/in-band-lifetimes/no_introducing_in_band_in_locals.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fno_introducing_in_band_in_locals.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -1,6 +1,8 @@\n error[E0261]: use of undeclared lifetime name `'test`\n   --> $DIR/no_introducing_in_band_in_locals.rs:5:13\n    |\n+LL | fn foo(x: &u32) {\n+   |       - help: consider introducing lifetime `'test` here: `<'test>`\n LL |     let y: &'test u32 = x;\n    |             ^^^^^ undeclared lifetime\n "}, {"sha": "c9f235c4f7df7509b14b4aa93e065ec2670e2dc6", "filename": "src/test/ui/methods/method-call-lifetime-args-unresolved.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -1,6 +1,8 @@\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/method-call-lifetime-args-unresolved.rs:2:15\n    |\n+LL | fn main() {\n+   |        - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     0.clone::<'a>();\n    |               ^^ undeclared lifetime\n "}, {"sha": "4b9f49423cbf447158b692ab93e4b1c54ce6854c", "filename": "src/test/ui/parser/trait-object-trait-parens.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -33,6 +33,9 @@ LL |     let _: Box<(for<'a> Trait<'a>) + (Copy) + (?Sized)>;\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/trait-object-trait-parens.rs:11:31\n    |\n+LL | fn main() {\n+   |        - help: consider introducing lifetime `'a` here: `<'a>`\n+...\n LL |     let _: Box<(for<'a> Trait<'a>) + (Copy) + (?Sized)>;\n    |                               ^^ undeclared lifetime\n "}, {"sha": "66537653291c7ce98a2e2869c46ea832ea63e9cd", "filename": "src/test/ui/regions/regions-in-enums.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -1,12 +1,16 @@\n error[E0261]: use of undeclared lifetime name `'foo`\n   --> $DIR/regions-in-enums.rs:13:9\n    |\n+LL | enum No0 {\n+   |         - help: consider introducing lifetime `'foo` here: `<'foo>`\n LL |     X5(&'foo usize)\n    |         ^^^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-in-enums.rs:17:9\n    |\n+LL | enum No1 {\n+   |         - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     X6(&'a usize)\n    |         ^^ undeclared lifetime\n "}, {"sha": "5dfdc2ee93b43120cad1131bb15f8af52b683849", "filename": "src/test/ui/regions/regions-in-structs.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -1,12 +1,17 @@\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-in-structs.rs:10:9\n    |\n+LL | struct StructDecl {\n+   |                  - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     a: &'a isize,\n    |         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-in-structs.rs:11:9\n    |\n+LL | struct StructDecl {\n+   |                  - help: consider introducing lifetime `'a` here: `<'a>`\n+LL |     a: &'a isize,\n LL |     b: &'a isize,\n    |         ^^ undeclared lifetime\n "}, {"sha": "79ebef41dccd61778f592fc52b8ab04d39789b23", "filename": "src/test/ui/regions/regions-name-undeclared.stderr", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-name-undeclared.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-name-undeclared.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-name-undeclared.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -3,48 +3,85 @@ error[E0261]: use of undeclared lifetime name `'b`\n    |\n LL |     fn m4(&self, arg: &'b isize) { }\n    |                        ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b, 'a> Foo<'a> {\n+   |      ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn m4<'b>(&self, arg: &'b isize) { }\n+   |          ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/regions-name-undeclared.rs:16:12\n    |\n LL |     fn m5(&'b self) { }\n    |            ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b, 'a> Foo<'a> {\n+   |      ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn m5<'b>(&'b self) { }\n+   |          ^^^^\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/regions-name-undeclared.rs:17:27\n    |\n LL |     fn m6(&self, arg: Foo<'b>) { }\n    |                           ^^ undeclared lifetime\n+   |\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b, 'a> Foo<'a> {\n+   |      ^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn m6<'b>(&self, arg: Foo<'b>) { }\n+   |          ^^^^\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:25:22\n    |\n LL |     type X = Option<&'a isize>;\n-   |                      ^^ undeclared lifetime\n+   |           -          ^^ undeclared lifetime\n+   |           |\n+   |           help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:27:13\n    |\n+LL |     enum E {\n+   |           - help: consider introducing lifetime `'a` here: `<'a>`\n LL |         E1(&'a isize)\n    |             ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:30:13\n    |\n+LL |     struct S {\n+   |             - help: consider introducing lifetime `'a` here: `<'a>`\n LL |         f: &'a isize\n    |             ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:32:14\n    |\n LL |     fn f(a: &'a isize) { }\n-   |              ^^ undeclared lifetime\n+   |         -    ^^ undeclared lifetime\n+   |         |\n+   |         help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:40:17\n    |\n LL | fn fn_types(a: &'a isize,\n-   |                 ^^ undeclared lifetime\n+   |            -    ^^ undeclared lifetime\n+   |            |\n+   |            help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/regions-name-undeclared.rs:42:36\n@@ -61,6 +98,9 @@ LL | ...                   &'b isize)>,\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:46:17\n    |\n+LL | fn fn_types(a: &'a isize,\n+   |            - help: consider introducing lifetime `'a` here: `<'a>`\n+...\n LL |             c: &'a isize)\n    |                 ^^ undeclared lifetime\n "}, {"sha": "6bfde5524ac4961a2861d57a2af59f4bc35cab05", "filename": "src/test/ui/regions/regions-undeclared.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-undeclared.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fregions%2Fregions-undeclared.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-undeclared.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -7,24 +7,33 @@ LL | static c_x: &'blk isize = &22;\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:4:10\n    |\n+LL | enum EnumDecl {\n+   |              - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     Foo(&'a isize),\n    |          ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:5:10\n    |\n+LL | enum EnumDecl {\n+   |              - help: consider introducing lifetime `'a` here: `<'a>`\n+LL |     Foo(&'a isize),\n LL |     Bar(&'a isize),\n    |          ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:8:15\n    |\n LL | fn fnDecl(x: &'a isize,\n-   |               ^^ undeclared lifetime\n+   |          -    ^^ undeclared lifetime\n+   |          |\n+   |          help: consider introducing lifetime `'a` here: `<'a>`\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:9:15\n    |\n+LL | fn fnDecl(x: &'a isize,\n+   |          - help: consider introducing lifetime `'a` here: `<'a>`\n LL |           y: &'a isize)\n    |               ^^ undeclared lifetime\n "}, {"sha": "49799a93017ebe2ce90acb7ef8a024f0a110a375", "filename": "src/test/ui/where-clauses/where-lifetime-resolution.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-lifetime-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ba08755dfd9ddbb55248a0263a4e81d3602b410/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-lifetime-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-lifetime-resolution.stderr?ref=6ba08755dfd9ddbb55248a0263a4e81d3602b410", "patch": "@@ -1,6 +1,9 @@\n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/where-lifetime-resolution.rs:6:38\n    |\n+LL | fn f() where\n+   |     - help: consider introducing lifetime `'a` here: `<'a>`\n+LL |     for<'a> dyn Trait1<'a>: Trait1<'a>, // OK\n LL |     (dyn for<'a> Trait1<'a>): Trait1<'a>,\n    |                                      ^^ undeclared lifetime\n \n@@ -13,6 +16,9 @@ LL |     for<'a> dyn for<'b> Trait2<'a, 'b>: Trait2<'a, 'b>,\n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/where-lifetime-resolution.rs:8:52\n    |\n+LL | fn f() where\n+   |     - help: consider introducing lifetime `'b` here: `<'b>`\n+...\n LL |     for<'a> dyn for<'b> Trait2<'a, 'b>: Trait2<'a, 'b>,\n    |                                                    ^^ undeclared lifetime\n "}]}