{"sha": "f642dc4124730da85b3d4071826e2d0025bebdbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDJkYzQxMjQ3MzBkYTg1YjNkNDA3MTgyNmUyZDAwMjViZWJkYmM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-12T01:09:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-12T01:09:19Z"}, "message": "Rollup merge of #66983 - weiznich:bugfix/issue_66295, r=estebank\n\nFix `unused_parens` triggers on macro by example code\n\nFix #66295\n\nUnfortunately this does also break [an existing test](https://github.com/rust-lang/rust/blob/4787e97475de6be9487e3d9255a9c2d3c0bf9252/src/test/ui/lint/issue-47775-nested-macro-unnecessary-parens-arg.rs#L22). I'm not sure how to handle that, because that seems to be quite similar to the allowed cases\n\nIf this gets accepted it would be great to backport this fix to beta.", "tree": {"sha": "25c93f2bcbd8a694dd9b1e551a0c67a16f1dc607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25c93f2bcbd8a694dd9b1e551a0c67a16f1dc607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f642dc4124730da85b3d4071826e2d0025bebdbc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8ZNACRBK7hj4Ov3rIwAAdHIIADGaqGAWF5ajT5eG2jpFs/e7\nMAgLA4PBigxZt37Raj1qDYiAAge5rLKwt3PPk9mWY82PA7Naaslv6oFEpRHzLmwd\n0UytR1SLkVfb3JuIYG2mH3WU2UIeaOzwKV8UiXyglU9ZORkkGWx/wSbiB7MZyxG3\n436PRGEsxHyIvJUFV+ZIpSZ23D0JJAmOJJKKNKuI8cIxenVvjbHQKQsqa47K7KXR\n35vhJr/HdXOUdbls6rzDJ6QWqBDWooOy4eiRXuoSp6Jbojj5FlsC31rwHetgBBe0\nh1Ry/fE37OJNIOYuzdsVFx7ADXh57Lnq1WuKx2P/FLhpGVOUVMetPQUudyCWLuU=\n=R8U2\n-----END PGP SIGNATURE-----\n", "payload": "tree 25c93f2bcbd8a694dd9b1e551a0c67a16f1dc607\nparent 9860a4eeb7e555b3a137b2aa0cde818d44a608dc\nparent ab3f4fd709fc2fcb19cda89305da08d9ae989c47\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1576112959 +0900\ncommitter GitHub <noreply@github.com> 1576112959 +0900\n\nRollup merge of #66983 - weiznich:bugfix/issue_66295, r=estebank\n\nFix `unused_parens` triggers on macro by example code\n\nFix #66295\n\nUnfortunately this does also break [an existing test](https://github.com/rust-lang/rust/blob/4787e97475de6be9487e3d9255a9c2d3c0bf9252/src/test/ui/lint/issue-47775-nested-macro-unnecessary-parens-arg.rs#L22). I'm not sure how to handle that, because that seems to be quite similar to the allowed cases\n\nIf this gets accepted it would be great to backport this fix to beta.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f642dc4124730da85b3d4071826e2d0025bebdbc", "html_url": "https://github.com/rust-lang/rust/commit/f642dc4124730da85b3d4071826e2d0025bebdbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f642dc4124730da85b3d4071826e2d0025bebdbc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9860a4eeb7e555b3a137b2aa0cde818d44a608dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9860a4eeb7e555b3a137b2aa0cde818d44a608dc", "html_url": "https://github.com/rust-lang/rust/commit/9860a4eeb7e555b3a137b2aa0cde818d44a608dc"}, {"sha": "ab3f4fd709fc2fcb19cda89305da08d9ae989c47", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3f4fd709fc2fcb19cda89305da08d9ae989c47", "html_url": "https://github.com/rust-lang/rust/commit/ab3f4fd709fc2fcb19cda89305da08d9ae989c47"}], "stats": {"total": 53, "additions": 23, "deletions": 30}, "files": [{"sha": "e6f39cca6dc3a10dd1621227fc20ff52764f3742", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=f642dc4124730da85b3d4071826e2d0025bebdbc", "patch": "@@ -355,7 +355,9 @@ impl UnusedParens {\n         match value.kind {\n             ast::ExprKind::Paren(ref inner) => {\n                 if !Self::is_expr_parens_necessary(inner, followed_by_block) &&\n-                    value.attrs.is_empty() {\n+                    value.attrs.is_empty() &&\n+                    !value.span.from_expansion()\n+                {\n                     let expr_text = if let Ok(snippet) = cx.sess().source_map()\n                         .span_to_snippet(value.span) {\n                             snippet"}, {"sha": "0a951cfa91c58f44ae915ade591f03be84df19ab", "filename": "src/test/ui/lint/issue-47775-nested-macro-unnecessary-parens-arg.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.rs?ref=f642dc4124730da85b3d4071826e2d0025bebdbc", "patch": "@@ -17,10 +17,7 @@ macro_rules! the_worship_the_heart_lifts_above {\n \n macro_rules! and_the_heavens_reject_not {\n     () => {\n-        // \u2193 But let's test that we still lint for unused parens around\n-        // function args inside of simple, one-deep macros.\n         #[allow(dead_code)] fn the_night_for_the_morrow() -> Option<isize> { Some((2)) }\n-        //~^ WARN unnecessary parentheses around function argument\n     }\n }\n "}, {"sha": "57cdcd70e9db4ae88c1b9715c2775a826b93b4e5", "filename": "src/test/ui/lint/issue-47775-nested-macro-unnecessary-parens-arg.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9860a4eeb7e555b3a137b2aa0cde818d44a608dc/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9860a4eeb7e555b3a137b2aa0cde818d44a608dc/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.stderr?ref=9860a4eeb7e555b3a137b2aa0cde818d44a608dc", "patch": "@@ -1,15 +0,0 @@\n-warning: unnecessary parentheses around function argument\n-  --> $DIR/issue-47775-nested-macro-unnecessary-parens-arg.rs:22:83\n-   |\n-LL |         #[allow(dead_code)] fn the_night_for_the_morrow() -> Option<isize> { Some((2)) }\n-   |                                                                                   ^^^ help: remove these parentheses\n-...\n-LL | and_the_heavens_reject_not!();\n-   | ------------------------------ in this macro invocation\n-   |\n-note: lint level defined here\n-  --> $DIR/issue-47775-nested-macro-unnecessary-parens-arg.rs:3:9\n-   |\n-LL | #![warn(unused_parens)]\n-   |         ^^^^^^^^^^^^^\n-"}, {"sha": "12ffb6d3c66552526bfef134f7c42d8a0bb049a5", "filename": "src/test/ui/lint/lint-unnecessary-parens.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs?ref=f642dc4124730da85b3d4071826e2d0025bebdbc", "patch": "@@ -25,6 +25,12 @@ fn passes_unused_parens_lint() -> &'static (dyn Trait) {\n     panic!()\n }\n \n+macro_rules! baz {\n+    ($($foo:expr),+) => {\n+        ($($foo),*)\n+    }\n+}\n+\n fn main() {\n     foo();\n     bar((true)); //~ ERROR unnecessary parentheses around function argument\n@@ -55,4 +61,7 @@ fn main() {\n     let mut _a = (0); //~ ERROR unnecessary parentheses around assigned value\n     _a = (0); //~ ERROR unnecessary parentheses around assigned value\n     _a += (1); //~ ERROR unnecessary parentheses around assigned value\n+\n+    let _a = baz!(3, 4);\n+    let _b = baz!(3);\n }"}, {"sha": "541ae7aa4b54a0738a3595bb0250e7b95efd5892", "filename": "src/test/ui/lint/lint-unnecessary-parens.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f642dc4124730da85b3d4071826e2d0025bebdbc/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr?ref=f642dc4124730da85b3d4071826e2d0025bebdbc", "patch": "@@ -23,69 +23,69 @@ LL | fn unused_parens_around_return_type() -> (u32) {\n    |                                          ^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around function argument\n-  --> $DIR/lint-unnecessary-parens.rs:30:9\n+  --> $DIR/lint-unnecessary-parens.rs:36:9\n    |\n LL |     bar((true));\n    |         ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `if` condition\n-  --> $DIR/lint-unnecessary-parens.rs:32:8\n+  --> $DIR/lint-unnecessary-parens.rs:38:8\n    |\n LL |     if (true) {}\n    |        ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `while` condition\n-  --> $DIR/lint-unnecessary-parens.rs:33:11\n+  --> $DIR/lint-unnecessary-parens.rs:39:11\n    |\n LL |     while (true) {}\n    |           ^^^^^^ help: remove these parentheses\n \n warning: denote infinite loops with `loop { ... }`\n-  --> $DIR/lint-unnecessary-parens.rs:33:5\n+  --> $DIR/lint-unnecessary-parens.rs:39:5\n    |\n LL |     while (true) {}\n    |     ^^^^^^^^^^^^ help: use `loop`\n    |\n    = note: `#[warn(while_true)]` on by default\n \n error: unnecessary parentheses around `match` head expression\n-  --> $DIR/lint-unnecessary-parens.rs:35:11\n+  --> $DIR/lint-unnecessary-parens.rs:41:11\n    |\n LL |     match (true) {\n    |           ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `let` head expression\n-  --> $DIR/lint-unnecessary-parens.rs:38:16\n+  --> $DIR/lint-unnecessary-parens.rs:44:16\n    |\n LL |     if let 1 = (1) {}\n    |                ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `let` head expression\n-  --> $DIR/lint-unnecessary-parens.rs:39:19\n+  --> $DIR/lint-unnecessary-parens.rs:45:19\n    |\n LL |     while let 1 = (2) {}\n    |                   ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around method argument\n-  --> $DIR/lint-unnecessary-parens.rs:53:24\n+  --> $DIR/lint-unnecessary-parens.rs:59:24\n    |\n LL |     X { y: false }.foo((true));\n    |                        ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around assigned value\n-  --> $DIR/lint-unnecessary-parens.rs:55:18\n+  --> $DIR/lint-unnecessary-parens.rs:61:18\n    |\n LL |     let mut _a = (0);\n    |                  ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around assigned value\n-  --> $DIR/lint-unnecessary-parens.rs:56:10\n+  --> $DIR/lint-unnecessary-parens.rs:62:10\n    |\n LL |     _a = (0);\n    |          ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around assigned value\n-  --> $DIR/lint-unnecessary-parens.rs:57:11\n+  --> $DIR/lint-unnecessary-parens.rs:63:11\n    |\n LL |     _a += (1);\n    |           ^^^ help: remove these parentheses"}]}