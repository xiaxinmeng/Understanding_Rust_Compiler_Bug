{"sha": "79fc2716dcf208f9af397226ea282296a1654e67", "node_id": "C_kwDOAAsO6NoAKDc5ZmMyNzE2ZGNmMjA4ZjlhZjM5NzIyNmVhMjgyMjk2YTE2NTRlNjc", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:16:32Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-06-25T12:21:24Z"}, "message": "Fix `#[expect]` for `unnecessary_unwrap`, `panicking_unwrap`", "tree": {"sha": "d2628bc32080c47c07f1a23f116404966a06dc10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2628bc32080c47c07f1a23f116404966a06dc10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79fc2716dcf208f9af397226ea282296a1654e67", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEwgBEOx3xlHwII7PG9cWdDmaeUwIFAmK2/csACgkQ9cWdDmae\nUwKS8A/9GKbpU/ijWa0VLWPLCqE5CAmKYL+GM7cVBGhCiLx0z2jkxLVPqu5v8i1+\nesHlxMMh8wAxbKW0h1cr14gesWwWNt2rbNgEwib1SVfiL4OMPOkTwznlxcNR+MOx\nY/4KGs+OGBYc0hUaCD5hUGNEynTQ8w392g4Wd+UxdQ72ewZmBgqWkz01K5fYcYo2\nfHV01YQS8J9t+HhHFnrI+fipGxCUVUgFihQryShI84hQt9j2vNEyS+FlapvCzEro\ntmhDG4iAvl6JIwKEI5z84K3e4SHEy688eJfj2VPYDV4Wy3GehIHULAt6xMJsek0v\nlW1nXVu8m+MzfH4Qw1JaKo0TOMdmT8dLPMdfna7MzOZpj5F2t0Z7fsW1DvNDNrWV\nb7FWR/rzW+/A0LaPKHaK7TfRJOnPmkjaIkeSVNrSr1ml8NJ8oVbV3A7nLezmeM1i\ndhzzocOMqVm/Fw44Ge39xN3JRbFAqQFmSJ2eNiG2vS1FOjn7whKjf3FUzttmIac3\nxkfmPvPJF6BmJBlk0miGSLLvfEujZiPeCue8orDDbo1wbmAH927zT6+yewH8Lnge\nWt41ZSAk0O6ejzC11JYvvYKmVgsu+RNLyiux83Z5S+yIKTAFW144576YLgDCwfcw\nVq7j7nLwmbikzGI2yDh1zFo0j7qRcKoF1t+6MyKefLUriT41SzY=\n=pyOv\n-----END PGP SIGNATURE-----", "payload": "tree d2628bc32080c47c07f1a23f116404966a06dc10\nparent bdc6ece1b632324f72cfa23c8ef964fe553d5be7\nauthor xFrednet <xFrednet@gmail.com> 1656159392 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1656159684 +0200\n\nFix `#[expect]` for `unnecessary_unwrap`, `panicking_unwrap`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79fc2716dcf208f9af397226ea282296a1654e67", "html_url": "https://github.com/rust-lang/rust/commit/79fc2716dcf208f9af397226ea282296a1654e67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79fc2716dcf208f9af397226ea282296a1654e67/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc6ece1b632324f72cfa23c8ef964fe553d5be7", "html_url": "https://github.com/rust-lang/rust/commit/bdc6ece1b632324f72cfa23c8ef964fe553d5be7"}], "stats": {"total": 62, "additions": 40, "deletions": 22}, "files": [{"sha": "d3f9e5abfd739a2ba9e2b66cb132d49ca87ceb54", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79fc2716dcf208f9af397226ea282296a1654e67/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79fc2716dcf208f9af397226ea282296a1654e67/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=79fc2716dcf208f9af397226ea282296a1654e67", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::diagnostics::span_lint_hir_and_then;\n use clippy_utils::higher;\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::{path_to_local, usage::is_potentially_mutated};\n@@ -251,9 +251,10 @@ impl<'a, 'tcx> Visitor<'tcx> for UnwrappableVariablesVisitor<'a, 'tcx> {\n                             unwrappable.kind.error_variant_pattern()\n                         };\n \n-                        span_lint_and_then(\n+                        span_lint_hir_and_then(\n                             self.cx,\n                             UNNECESSARY_UNWRAP,\n+                            expr.hir_id,\n                             expr.span,\n                             &format!(\n                                 \"called `{}` on `{}` after checking its variant with `{}`\",\n@@ -283,9 +284,10 @@ impl<'a, 'tcx> Visitor<'tcx> for UnwrappableVariablesVisitor<'a, 'tcx> {\n                             },\n                         );\n                     } else {\n-                        span_lint_and_then(\n+                        span_lint_hir_and_then(\n                             self.cx,\n                             PANICKING_UNWRAP,\n+                            expr.hir_id,\n                             expr.span,\n                             &format!(\"this call to `{}()` will always panic\",\n                             method_name.ident.name),"}, {"sha": "82dce81979fd9d906230acc53f557470331aab52", "filename": "tests/ui/checked_unwrap/simple_conditionals.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/79fc2716dcf208f9af397226ea282296a1654e67/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79fc2716dcf208f9af397226ea282296a1654e67/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs?ref=79fc2716dcf208f9af397226ea282296a1654e67", "patch": "@@ -1,3 +1,4 @@\n+#![feature(lint_reasons)]\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n #![allow(clippy::if_same_then_else, clippy::branches_sharing_code)]\n \n@@ -84,3 +85,18 @@ fn main() {\n \n     assert!(x.is_ok(), \"{:?}\", x.unwrap_err()); // ok, it's a common test pattern\n }\n+\n+fn check_expect() {\n+    let x = Some(());\n+    if x.is_some() {\n+        #[expect(clippy::unnecessary_unwrap)]\n+        x.unwrap(); // unnecessary\n+        #[expect(clippy::unnecessary_unwrap)]\n+        x.expect(\"an error message\"); // unnecessary\n+    } else {\n+        #[expect(clippy::panicking_unwrap)]\n+        x.unwrap(); // will panic\n+        #[expect(clippy::panicking_unwrap)]\n+        x.expect(\"an error message\"); // will panic\n+    }\n+}"}, {"sha": "ef68827422233e2de992d615c047802bf23cbdad", "filename": "tests/ui/checked_unwrap/simple_conditionals.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/79fc2716dcf208f9af397226ea282296a1654e67/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fc2716dcf208f9af397226ea282296a1654e67/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr?ref=79fc2716dcf208f9af397226ea282296a1654e67", "patch": "@@ -1,19 +1,19 @@\n error: called `unwrap` on `x` after checking its variant with `is_some`\n-  --> $DIR/simple_conditionals.rs:39:9\n+  --> $DIR/simple_conditionals.rs:40:9\n    |\n LL |     if x.is_some() {\n    |     -------------- help: try: `if let Some(..) = x`\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/simple_conditionals.rs:1:35\n+  --> $DIR/simple_conditionals.rs:2:35\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `expect` on `x` after checking its variant with `is_some`\n-  --> $DIR/simple_conditionals.rs:40:9\n+  --> $DIR/simple_conditionals.rs:41:9\n    |\n LL |     if x.is_some() {\n    |     -------------- help: try: `if let Some(..) = x`\n@@ -22,7 +22,7 @@ LL |         x.expect(\"an error message\"); // unnecessary\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this call to `unwrap()` will always panic\n-  --> $DIR/simple_conditionals.rs:42:9\n+  --> $DIR/simple_conditionals.rs:43:9\n    |\n LL |     if x.is_some() {\n    |        ----------- because of this check\n@@ -31,13 +31,13 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/simple_conditionals.rs:1:9\n+  --> $DIR/simple_conditionals.rs:2:9\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this call to `expect()` will always panic\n-  --> $DIR/simple_conditionals.rs:43:9\n+  --> $DIR/simple_conditionals.rs:44:9\n    |\n LL |     if x.is_some() {\n    |        ----------- because of this check\n@@ -46,15 +46,15 @@ LL |         x.expect(\"an error message\"); // will panic\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this call to `unwrap()` will always panic\n-  --> $DIR/simple_conditionals.rs:46:9\n+  --> $DIR/simple_conditionals.rs:47:9\n    |\n LL |     if x.is_none() {\n    |        ----------- because of this check\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: called `unwrap` on `x` after checking its variant with `is_none`\n-  --> $DIR/simple_conditionals.rs:48:9\n+  --> $DIR/simple_conditionals.rs:49:9\n    |\n LL |     if x.is_none() {\n    |     -------------- help: try: `if let Some(..) = x`\n@@ -63,7 +63,7 @@ LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: called `unwrap` on `x` after checking its variant with `is_some`\n-  --> $DIR/simple_conditionals.rs:7:13\n+  --> $DIR/simple_conditionals.rs:8:13\n    |\n LL |         if $a.is_some() {\n    |         --------------- help: try: `if let Some(..) = x`\n@@ -76,15 +76,15 @@ LL |     m!(x);\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: called `unwrap` on `x` after checking its variant with `is_ok`\n-  --> $DIR/simple_conditionals.rs:56:9\n+  --> $DIR/simple_conditionals.rs:57:9\n    |\n LL |     if x.is_ok() {\n    |     ------------ help: try: `if let Ok(..) = x`\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: called `expect` on `x` after checking its variant with `is_ok`\n-  --> $DIR/simple_conditionals.rs:57:9\n+  --> $DIR/simple_conditionals.rs:58:9\n    |\n LL |     if x.is_ok() {\n    |     ------------ help: try: `if let Ok(..) = x`\n@@ -93,7 +93,7 @@ LL |         x.expect(\"an error message\"); // unnecessary\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this call to `unwrap_err()` will always panic\n-  --> $DIR/simple_conditionals.rs:58:9\n+  --> $DIR/simple_conditionals.rs:59:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -102,7 +102,7 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: this call to `unwrap()` will always panic\n-  --> $DIR/simple_conditionals.rs:60:9\n+  --> $DIR/simple_conditionals.rs:61:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -111,7 +111,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: this call to `expect()` will always panic\n-  --> $DIR/simple_conditionals.rs:61:9\n+  --> $DIR/simple_conditionals.rs:62:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -120,7 +120,7 @@ LL |         x.expect(\"an error message\"); // will panic\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `unwrap_err` on `x` after checking its variant with `is_ok`\n-  --> $DIR/simple_conditionals.rs:62:9\n+  --> $DIR/simple_conditionals.rs:63:9\n    |\n LL |     if x.is_ok() {\n    |     ------------ help: try: `if let Err(..) = x`\n@@ -129,15 +129,15 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: this call to `unwrap()` will always panic\n-  --> $DIR/simple_conditionals.rs:65:9\n+  --> $DIR/simple_conditionals.rs:66:9\n    |\n LL |     if x.is_err() {\n    |        ---------- because of this check\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: called `unwrap_err` on `x` after checking its variant with `is_err`\n-  --> $DIR/simple_conditionals.rs:66:9\n+  --> $DIR/simple_conditionals.rs:67:9\n    |\n LL |     if x.is_err() {\n    |     ------------- help: try: `if let Err(..) = x`\n@@ -146,7 +146,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: called `unwrap` on `x` after checking its variant with `is_err`\n-  --> $DIR/simple_conditionals.rs:68:9\n+  --> $DIR/simple_conditionals.rs:69:9\n    |\n LL |     if x.is_err() {\n    |     ------------- help: try: `if let Ok(..) = x`\n@@ -155,7 +155,7 @@ LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: this call to `unwrap_err()` will always panic\n-  --> $DIR/simple_conditionals.rs:69:9\n+  --> $DIR/simple_conditionals.rs:70:9\n    |\n LL |     if x.is_err() {\n    |        ---------- because of this check"}]}