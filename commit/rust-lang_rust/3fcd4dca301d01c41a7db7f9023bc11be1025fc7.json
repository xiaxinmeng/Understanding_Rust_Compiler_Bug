{"sha": "3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmY2Q0ZGNhMzAxZDAxYzQxYTdkYjdmOTAyM2JjMTFiZTEwMjVmYzc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-06-11T02:42:28Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-28T14:44:16Z"}, "message": "libsyntax: Remove \"copy\" pattern bindings from the language", "tree": {"sha": "abc5173630ace3daaf3a0aab1e1890f51f988ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abc5173630ace3daaf3a0aab1e1890f51f988ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "html_url": "https://github.com/rust-lang/rust/commit/3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cd40f9032fa15dc083646ba2105b3fae0a96eb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd40f9032fa15dc083646ba2105b3fae0a96eb5", "html_url": "https://github.com/rust-lang/rust/commit/8cd40f9032fa15dc083646ba2105b3fae0a96eb5"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "7f2d06ee1e41fa1900db14ce94175710ccee761b", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "patch": "@@ -63,6 +63,7 @@ pub enum ObsoleteSyntax {\n     ObsoleteNamedExternModule,\n     ObsoleteMultipleLocalDecl,\n     ObsoleteMutWithMultipleBindings,\n+    ObsoletePatternCopyKeyword,\n }\n \n impl to_bytes::IterBytes for ObsoleteSyntax {\n@@ -229,6 +230,10 @@ impl Parser {\n                 \"use multiple local declarations instead of e.g. `let mut \\\n                  (x, y) = ...`.\"\n             ),\n+            ObsoletePatternCopyKeyword => (\n+                \"`copy` in patterns\",\n+                \"`copy` in patterns no longer has any effect\"\n+            ),\n         };\n \n         self.report(sp, kind, kind_str, desc);"}, {"sha": "ee5ef8dfa6b9e0466354e4abf3f194ccc9ad20eb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "patch": "@@ -84,6 +84,7 @@ use parse::obsolete::{ObsoletePurity, ObsoleteStaticMethod};\n use parse::obsolete::{ObsoleteConstItem, ObsoleteFixedLengthVectorType};\n use parse::obsolete::{ObsoleteNamedExternModule, ObsoleteMultipleLocalDecl};\n use parse::obsolete::{ObsoleteMutWithMultipleBindings};\n+use parse::obsolete::{ObsoletePatternCopyKeyword};\n use parse::token::{can_begin_expr, get_ident_interner, ident_to_str, is_ident};\n use parse::token::{is_ident_or_path};\n use parse::token::{is_plain_ident, INTERPOLATED, keywords, special_idents};\n@@ -2445,8 +2446,7 @@ impl Parser {\n                 pat = self.parse_pat_ident(bind_by_ref(mutbl));\n             } else if self.eat_keyword(keywords::Copy) {\n                 // parse copy pat\n-                self.warn(\"copy keyword in patterns no longer has any effect, \\\n-                           remove it\");\n+                self.obsolete(*self.span, ObsoletePatternCopyKeyword);\n                 pat = self.parse_pat_ident(bind_infer);\n             } else {\n                 let can_be_enum_or_struct;"}, {"sha": "45cb137b08459a7dfc24b801ca9a54839dd2105d", "filename": "src/test/compile-fail/rcmut-not-const-and-not-owned.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/src%2Ftest%2Fcompile-fail%2Frcmut-not-const-and-not-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fcd4dca301d01c41a7db7f9023bc11be1025fc7/src%2Ftest%2Fcompile-fail%2Frcmut-not-const-and-not-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frcmut-not-const-and-not-owned.rs?ref=3fcd4dca301d01c41a7db7f9023bc11be1025fc7", "patch": "@@ -10,11 +10,11 @@\n \n extern mod extra;\n \n-fn o<T: Owned>(_: &T) {}\n-fn c<T: Const>(_: &T) {}\n+fn o<T: Send>(_: &T) {}\n+fn c<T: Freeze>(_: &T) {}\n \n fn main() {\n     let x = extra::rc::rc_mut_from_owned(0);\n-    o(&x); //~ ERROR instantiating a type parameter with an incompatible type `extra::rc::RcMut<int>`, which does not fulfill `Owned`\n-    c(&x); //~ ERROR instantiating a type parameter with an incompatible type `extra::rc::RcMut<int>`, which does not fulfill `Const`\n+    o(&x); //~ ERROR instantiating a type parameter with an incompatible type `extra::rc::RcMut<int>`, which does not fulfill `Send`\n+    c(&x); //~ ERROR instantiating a type parameter with an incompatible type `extra::rc::RcMut<int>`, which does not fulfill `Freeze`\n }"}]}