{"sha": "62812f1e38f438dfc666cd9d164b4377063f8794", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyODEyZjFlMzhmNDM4ZGZjNjY2Y2Q5ZDE2NGI0Mzc3MDYzZjg3OTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-09T17:41:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-09T17:41:31Z"}, "message": "auto merge of #9386 : Geal/rust/base64-doc, r=alexcrichton\n\nStandard is now uppercase in the base64 module, and from_base64 now returns a Result", "tree": {"sha": "14c877c843fe71f1aa15a10ab7cb43b76027ab24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14c877c843fe71f1aa15a10ab7cb43b76027ab24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62812f1e38f438dfc666cd9d164b4377063f8794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62812f1e38f438dfc666cd9d164b4377063f8794", "html_url": "https://github.com/rust-lang/rust/commit/62812f1e38f438dfc666cd9d164b4377063f8794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62812f1e38f438dfc666cd9d164b4377063f8794/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fd7f852e131ad8c9935fd9577c071be5b4635ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fd7f852e131ad8c9935fd9577c071be5b4635ec", "html_url": "https://github.com/rust-lang/rust/commit/4fd7f852e131ad8c9935fd9577c071be5b4635ec"}, {"sha": "0b4f052422829106b0aadb3b66af671b4e0a0c99", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b4f052422829106b0aadb3b66af671b4e0a0c99", "html_url": "https://github.com/rust-lang/rust/commit/0b4f052422829106b0aadb3b66af671b4e0a0c99"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "5d9c38c954304bbdd0f460aa6b2f5446f9347c0e", "filename": "src/libextra/base64.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/62812f1e38f438dfc666cd9d164b4377063f8794/src%2Flibextra%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62812f1e38f438dfc666cd9d164b4377063f8794/src%2Flibextra%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbase64.rs?ref=62812f1e38f438dfc666cd9d164b4377063f8794", "patch": "@@ -64,11 +64,11 @@ impl<'self> ToBase64 for &'self [u8] {\n      *\n      * ```rust\n      * extern mod extra;\n-     * use extra::base64::{ToBase64, standard};\n+     * use extra::base64::{ToBase64, STANDARD};\n      *\n      * fn main () {\n-     *     let str = [52,32].to_base64(standard);\n-     *     println!(\"{}\", str);\n+     *     let str = [52,32].to_base64(STANDARD);\n+     *     println!(\"base 64 output: {}\", str);\n      * }\n      * ```\n      */\n@@ -172,16 +172,19 @@ impl<'self> FromBase64 for &'self str {\n      *\n      * ```rust\n      * extern mod extra;\n-     * use extra::base64::{ToBase64, FromBase64, standard};\n+     * use extra::base64::{ToBase64, FromBase64, STANDARD};\n      * use std::str;\n      *\n      * fn main () {\n-     *     let hello_str = \"Hello, World\".to_base64(standard);\n-     *     println!(\"{}\", hello_str);\n-     *     let bytes = hello_str.from_base64();\n-     *     println!(\"{:?}\", bytes);\n-     *     let result_str = str::from_utf8(bytes);\n-     *     println!(\"{}\", result_str);\n+     *     let hello_str = bytes!(\"Hello, World\").to_base64(STANDARD);\n+     *     println!(\"base64 output: {}\", hello_str);\n+     *     let res = hello_str.from_base64();\n+     *     if res.is_ok() {\n+     *       let optBytes = str::from_utf8_opt(res.unwrap());\n+     *       if optBytes.is_some() {\n+     *         println!(\"decoded from base64: {}\", optBytes.unwrap());\n+     *       }\n+     *     }\n      * }\n      * ```\n      */"}]}