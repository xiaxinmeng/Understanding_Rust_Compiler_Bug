{"sha": "ea873f57c9e2bd8d184d45737a4c581ee28523d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhODczZjU3YzllMmJkOGQxODRkNDU3MzdhNGM1ODFlZTI4NTIzZDE=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-12-03T13:11:53Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-12-07T13:05:58Z"}, "message": "Introduce constraint category for yields.\n\nThis commit adds a new `ConstraintCategory` for yield points - this\nallows for differentiation between a normal return and a yield in the\ndiagnostics.", "tree": {"sha": "6e346b4a476e49eafb33e89c62a4f58aa4396610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e346b4a476e49eafb33e89c62a4f58aa4396610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea873f57c9e2bd8d184d45737a4c581ee28523d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlwKcDYACgkQAXYLT59T\n8VSOkhAAmI794e0UUBF6y6KQvb7duIaQRrallb5n44x5Fcg14IIfk5Meqo9dyjLG\nB0EzF5/hk66hXBrZJLgYVEC8efljtsHPrW7c+YaN51zU5ymmXB3YsVjey8yAK70r\n5qUkmgrKeJTCXDz07ND30aV1BWEsh1knM6ZwXVv833HAZmjLvM4nLuigpAdvgGBO\n47ckBNas38oWkyV8ysu76CC50eStEmgQyFQr4ouhgyUuDqFOwc+NlzEZ5/PLwnNk\na6ozxR3pm0cva896/aRd0JCCCD2BZ2BlosLhNOIyKvXoT2xQmdQ3z0k+s5cBwDfR\nxzWFNTsxfmN36JZyjjENbSIcOpAyAD7v43N3PNrqTgmQXDzEXPUsriUo5+D7v9J2\nf4F6qx7qup3Rd8wq0H09y32d/pZQ5FCqW5q0W8VoIAu9fHvqkQ0/oIzDUmjOIQT3\nFwuqw1tR5n3rHz52Ay0ng1/wgkBeek98hjDcLO4X1KrkgXFvqqYW7daTtPP56oW9\nEzmrCBPE0zWkAd1vXOcxF/k2NE3296OkbHrai+CxRRZiXJXCEXgLPwSlEQAN14KF\nS76KUpqjyMriC8ZfIrnsLMYz+OPwFPl3gx37jDN5rmTeLhm3P+W0ttKaKPEYkzf5\nj0fJVxdvSoHCDFeFzoOizbqb2mab4ZQ1XDZ+wbrbV9ywFwMLMR4=\n=p50y\n-----END PGP SIGNATURE-----", "payload": "tree 6e346b4a476e49eafb33e89c62a4f58aa4396610\nparent fc84f5f837a3e1b9b9bc992dd603d3d968502288\nauthor David Wood <david@davidtw.co> 1543842713 +0100\ncommitter David Wood <david@davidtw.co> 1544187958 +0100\n\nIntroduce constraint category for yields.\n\nThis commit adds a new `ConstraintCategory` for yield points - this\nallows for differentiation between a normal return and a yield in the\ndiagnostics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea873f57c9e2bd8d184d45737a4c581ee28523d1", "html_url": "https://github.com/rust-lang/rust/commit/ea873f57c9e2bd8d184d45737a4c581ee28523d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea873f57c9e2bd8d184d45737a4c581ee28523d1/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc84f5f837a3e1b9b9bc992dd603d3d968502288", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc84f5f837a3e1b9b9bc992dd603d3d968502288", "html_url": "https://github.com/rust-lang/rust/commit/fc84f5f837a3e1b9b9bc992dd603d3d968502288"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "a46e12be1aeace57d5b28a503e8f90111c98e075", "filename": "src/librustc/ich/impls_mir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_mir.rs?ref=ea873f57c9e2bd8d184d45737a4c581ee28523d1", "patch": "@@ -471,6 +471,7 @@ impl_stable_hash_for!(struct mir::ClosureOutlivesRequirement<'tcx> {\n \n impl_stable_hash_for!(enum mir::ConstraintCategory {\n     Return,\n+    Yield,\n     UseAsConst,\n     UseAsStatic,\n     TypeAnnotation,"}, {"sha": "6ff60b39bd341298097050ca2a0cbe50d77808a9", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=ea873f57c9e2bd8d184d45737a4c581ee28523d1", "patch": "@@ -2905,6 +2905,7 @@ pub struct ClosureOutlivesRequirement<'tcx> {\n #[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Ord, Hash, RustcEncodable, RustcDecodable)]\n pub enum ConstraintCategory {\n     Return,\n+    Yield,\n     UseAsConst,\n     UseAsStatic,\n     TypeAnnotation,"}, {"sha": "940f9d6040cf522b825df6f67e682e6d4ac96afc", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=ea873f57c9e2bd8d184d45737a4c581ee28523d1", "patch": "@@ -38,6 +38,7 @@ impl ConstraintDescription for ConstraintCategory {\n         match self {\n             ConstraintCategory::Assignment => \"assignment \",\n             ConstraintCategory::Return => \"returning this value \",\n+            ConstraintCategory::Yield => \"yielding this value \",\n             ConstraintCategory::UseAsConst => \"using this value as a constant \",\n             ConstraintCategory::UseAsStatic => \"using this value as a static \",\n             ConstraintCategory::Cast => \"cast \",\n@@ -133,11 +134,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             let constraint_sup_scc = self.constraint_sccs.scc(constraint.sup);\n \n             match categorized_path[i].0 {\n-                ConstraintCategory::OpaqueType\n-                | ConstraintCategory::Boring\n-                | ConstraintCategory::BoringNoLocation\n-                | ConstraintCategory::Internal => false,\n-                ConstraintCategory::TypeAnnotation | ConstraintCategory::Return => true,\n+                ConstraintCategory::OpaqueType | ConstraintCategory::Boring |\n+                ConstraintCategory::BoringNoLocation | ConstraintCategory::Internal => false,\n+                ConstraintCategory::TypeAnnotation | ConstraintCategory::Return |\n+                ConstraintCategory::Yield => true,\n                 _ => constraint_sup_scc != target_scc,\n             }\n         });"}, {"sha": "33346a584e5a47e6f659e93b370ccfa3b3644840", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea873f57c9e2bd8d184d45737a4c581ee28523d1/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=ea873f57c9e2bd8d184d45737a4c581ee28523d1", "patch": "@@ -1467,7 +1467,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                             value_ty,\n                             ty,\n                             term_location.to_locations(),\n-                            ConstraintCategory::Return,\n+                            ConstraintCategory::Yield,\n                         ) {\n                             span_mirbug!(\n                                 self,"}]}