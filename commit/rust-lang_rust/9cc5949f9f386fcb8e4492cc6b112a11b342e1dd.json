{"sha": "9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "node_id": "C_kwDOAAsO6NoAKDljYzU5NDlmOWYzODZmY2I4ZTQ0OTJjYzZiMTEyYTExYjM0MmUxZGQ", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-04-20T18:18:22Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-04-24T14:16:14Z"}, "message": "Update tests.", "tree": {"sha": "053683ab1f9d6bddd34db995b3855af145e18ced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/053683ab1f9d6bddd34db995b3855af145e18ced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "html_url": "https://github.com/rust-lang/rust/commit/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a289777402157caafcd868078814e07c0b71e5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a289777402157caafcd868078814e07c0b71e5b", "html_url": "https://github.com/rust-lang/rust/commit/0a289777402157caafcd868078814e07c0b71e5b"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "9bda5f575c99f0069d0b35972794c758af95c035", "filename": "tests/mir-opt/sroa/lifetimes.foo.ScalarReplacementOfAggregates.diff", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fmir-opt%2Fsroa%2Flifetimes.foo.ScalarReplacementOfAggregates.diff", "raw_url": "https://github.com/rust-lang/rust/raw/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fmir-opt%2Fsroa%2Flifetimes.foo.ScalarReplacementOfAggregates.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsroa%2Flifetimes.foo.ScalarReplacementOfAggregates.diff?ref=9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "patch": "@@ -15,14 +15,14 @@\n       let mut _13: &[&str; 3];             // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n       let _14: &[&str; 3];                 // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n       let _15: [&str; 3];                  // in scope 0 at $DIR/lifetimes.rs:+10:19: +10:28\n-      let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _17: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _18: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _19: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at $DIR/lifetimes.rs:+10:20: +10:23\n+      let mut _16: &[core::fmt::rt::Argument<'_>]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _17: &[core::fmt::rt::Argument<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let _18: &[core::fmt::rt::Argument<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let _19: [core::fmt::rt::Argument<'_>; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _20: core::fmt::rt::Argument<'_>; // in scope 0 at $DIR/lifetimes.rs:+10:20: +10:23\n       let mut _21: &std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at $DIR/lifetimes.rs:+10:20: +10:23\n       let _22: &std::boxed::Box<dyn std::fmt::Display>; // in scope 0 at $DIR/lifetimes.rs:+10:20: +10:23\n-      let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at $DIR/lifetimes.rs:+10:24: +10:27\n+      let mut _23: core::fmt::rt::Argument<'_>; // in scope 0 at $DIR/lifetimes.rs:+10:24: +10:27\n       let mut _24: &u32;                   // in scope 0 at $DIR/lifetimes.rs:+10:24: +10:27\n       let _25: &u32;                       // in scope 0 at $DIR/lifetimes.rs:+10:24: +10:27\n       let mut _27: bool;                   // in scope 0 at $DIR/lifetimes.rs:+12:1: +12:2\n@@ -113,11 +113,11 @@\n           StorageLive(_22);                // scope 4 at $DIR/lifetimes.rs:+10:20: +10:23\n           _22 = &_8;                       // scope 4 at $DIR/lifetimes.rs:+10:20: +10:23\n           _21 = &(*_22);                   // scope 4 at $DIR/lifetimes.rs:+10:20: +10:23\n-          _20 = core::fmt::ArgumentV1::<'_>::new_display::<Box<dyn std::fmt::Display>>(move _21) -> [return: bb3, unwind unreachable]; // scope 4 at $DIR/lifetimes.rs:+10:20: +10:23\n+          _20 = core::fmt::rt::Argument::<'_>::new_display::<Box<dyn std::fmt::Display>>(move _21) -> [return: bb3, unwind unreachable]; // scope 4 at $DIR/lifetimes.rs:+10:20: +10:23\n                                            // mir::Constant\n                                            // + span: $DIR/lifetimes.rs:27:20: 27:23\n                                            // + user_ty: UserType(4)\n-                                           // + literal: Const { ty: for<'b> fn(&'b Box<dyn std::fmt::Display>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<Box<dyn std::fmt::Display>>}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: for<'b> fn(&'b Box<dyn std::fmt::Display>) -> core::fmt::rt::Argument<'b> {core::fmt::rt::Argument::<'_>::new_display::<Box<dyn std::fmt::Display>>}, val: Value(<ZST>) }\n       }\n   \n       bb3: {\n@@ -127,11 +127,11 @@\n           StorageLive(_25);                // scope 4 at $DIR/lifetimes.rs:+10:24: +10:27\n           _25 = &_6;                       // scope 4 at $DIR/lifetimes.rs:+10:24: +10:27\n           _24 = &(*_25);                   // scope 4 at $DIR/lifetimes.rs:+10:24: +10:27\n-          _23 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(move _24) -> [return: bb4, unwind unreachable]; // scope 4 at $DIR/lifetimes.rs:+10:24: +10:27\n+          _23 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _24) -> [return: bb4, unwind unreachable]; // scope 4 at $DIR/lifetimes.rs:+10:24: +10:27\n                                            // mir::Constant\n                                            // + span: $DIR/lifetimes.rs:27:24: 27:27\n                                            // + user_ty: UserType(5)\n-                                           // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::rt::Argument<'b> {core::fmt::rt::Argument::<'_>::new_display::<u32>}, val: Value(<ZST>) }\n       }\n   \n       bb4: {\n@@ -141,13 +141,13 @@\n           StorageDead(_20);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           _18 = &_19;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           _17 = &(*_18);                   // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _16 = move _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _16 = move _17 as &[core::fmt::rt::Argument<'_>] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           StorageDead(_17);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           _11 = Arguments::<'_>::new_v1(move _12, move _16) -> [return: bb5, unwind unreachable]; // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n                                            // + user_ty: UserType(3)\n-                                           // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }\n+                                           // + literal: Const { ty: fn(&[&'static str], &[core::fmt::rt::Argument<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }\n       }\n   \n       bb5: {"}, {"sha": "ed008c454a31ceb9df071bfd931e26edd85fcab6", "filename": "tests/ui/fmt/ifmt-bad-arg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fui%2Ffmt%2Fifmt-bad-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fui%2Ffmt%2Fifmt-bad-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fifmt-bad-arg.stderr?ref=9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "patch": "@@ -307,7 +307,7 @@ LL |     println!(\"{} {:.*} {}\", 1, 3.2, 4);\n    = note: expected reference `&usize`\n               found reference `&{float}`\n note: associated function defined here\n-  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+  --> $SRC_DIR/core/src/fmt/rt.rs:LL:COL\n    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0308]: mismatched types\n@@ -321,7 +321,7 @@ LL |     println!(\"{} {:07$.*} {}\", 1, 3.2, 4);\n    = note: expected reference `&usize`\n               found reference `&{float}`\n note: associated function defined here\n-  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+  --> $SRC_DIR/core/src/fmt/rt.rs:LL:COL\n    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 38 previous errors"}, {"sha": "cc316e55f5cb673e3dc164a9148fa6c03a0d2c90", "filename": "tests/ui/fmt/ifmt-unimpl.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fui%2Ffmt%2Fifmt-unimpl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fui%2Ffmt%2Fifmt-unimpl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fifmt-unimpl.stderr?ref=9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "patch": "@@ -17,9 +17,9 @@ LL |     format!(\"{:X}\", \"3\");\n              NonZeroIsize\n            and 21 others\n    = note: required for `&str` to implement `UpperHex`\n-note: required by a bound in `core::fmt::ArgumentV1::<'a>::new_upper_hex`\n-  --> $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-   = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `arg_new` (in Nightly builds, run with -Z macro-backtrace for more info)\n+note: required by a bound in `core::fmt::rt::Argument::<'a>::new_upper_hex`\n+  --> $SRC_DIR/core/src/fmt/rt.rs:LL:COL\n+   = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n "}, {"sha": "b517a342e634d16d341f9a5dbf7d23c161d1a37a", "filename": "tests/ui/fmt/send-sync.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fui%2Ffmt%2Fsend-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd/tests%2Fui%2Ffmt%2Fsend-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fsend-sync.stderr?ref=9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "patch": "@@ -1,36 +1,36 @@\n-error[E0277]: `core::fmt::Opaque` cannot be shared between threads safely\n+error[E0277]: `core::fmt::rt::Opaque` cannot be shared between threads safely\n   --> $DIR/send-sync.rs:8:10\n    |\n LL |     send(format_args!(\"{:?}\", c));\n-   |     ---- ^^^^^^^^^^^^^^^^^^^^^^^ `core::fmt::Opaque` cannot be shared between threads safely\n+   |     ---- ^^^^^^^^^^^^^^^^^^^^^^^ `core::fmt::rt::Opaque` cannot be shared between threads safely\n    |     |\n    |     required by a bound introduced by this call\n    |\n-   = help: within `[core::fmt::ArgumentV1<'_>]`, the trait `Sync` is not implemented for `core::fmt::Opaque`\n-   = note: required because it appears within the type `&core::fmt::Opaque`\n-   = note: required because it appears within the type `ArgumentV1<'_>`\n-   = note: required because it appears within the type `[ArgumentV1<'_>]`\n-   = note: required for `&[core::fmt::ArgumentV1<'_>]` to implement `Send`\n+   = help: within `[core::fmt::rt::Argument<'_>]`, the trait `Sync` is not implemented for `core::fmt::rt::Opaque`\n+   = note: required because it appears within the type `&core::fmt::rt::Opaque`\n+   = note: required because it appears within the type `Argument<'_>`\n+   = note: required because it appears within the type `[Argument<'_>]`\n+   = note: required for `&[core::fmt::rt::Argument<'_>]` to implement `Send`\n    = note: required because it appears within the type `Arguments<'_>`\n note: required by a bound in `send`\n   --> $DIR/send-sync.rs:1:12\n    |\n LL | fn send<T: Send>(_: T) {}\n    |            ^^^^ required by this bound in `send`\n \n-error[E0277]: `core::fmt::Opaque` cannot be shared between threads safely\n+error[E0277]: `core::fmt::rt::Opaque` cannot be shared between threads safely\n   --> $DIR/send-sync.rs:9:10\n    |\n LL |     sync(format_args!(\"{:?}\", c));\n-   |     ---- ^^^^^^^^^^^^^^^^^^^^^^^ `core::fmt::Opaque` cannot be shared between threads safely\n+   |     ---- ^^^^^^^^^^^^^^^^^^^^^^^ `core::fmt::rt::Opaque` cannot be shared between threads safely\n    |     |\n    |     required by a bound introduced by this call\n    |\n-   = help: within `Arguments<'_>`, the trait `Sync` is not implemented for `core::fmt::Opaque`\n-   = note: required because it appears within the type `&core::fmt::Opaque`\n-   = note: required because it appears within the type `ArgumentV1<'_>`\n-   = note: required because it appears within the type `[ArgumentV1<'_>]`\n-   = note: required because it appears within the type `&[ArgumentV1<'_>]`\n+   = help: within `Arguments<'_>`, the trait `Sync` is not implemented for `core::fmt::rt::Opaque`\n+   = note: required because it appears within the type `&core::fmt::rt::Opaque`\n+   = note: required because it appears within the type `Argument<'_>`\n+   = note: required because it appears within the type `[Argument<'_>]`\n+   = note: required because it appears within the type `&[Argument<'_>]`\n    = note: required because it appears within the type `Arguments<'_>`\n note: required by a bound in `sync`\n   --> $DIR/send-sync.rs:2:12"}]}