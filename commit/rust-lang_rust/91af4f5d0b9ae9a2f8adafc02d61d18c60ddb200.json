{"sha": "91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "node_id": "C_kwDOAAsO6NoAKDkxYWY0ZjVkMGI5YWU5YTJmOGFkYWZjMDJkNjFkMThjNjBkZGIyMDA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T00:19:28Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T17:10:58Z"}, "message": "Don't hash non-fresh Ty::Infer or RegionKind::Infer", "tree": {"sha": "aaa9ad26d6bdbccecc695560dc00c4ca348d25c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaa9ad26d6bdbccecc695560dc00c4ca348d25c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "html_url": "https://github.com/rust-lang/rust/commit/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b8f4319954ff2642690b9e5cbe4af352d095bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "html_url": "https://github.com/rust-lang/rust/commit/4b8f4319954ff2642690b9e5cbe4af352d095bf6"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "b4971ce6ae55032e25c40980ef257149180e903f", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "patch": "@@ -198,9 +198,11 @@ impl<'tcx> CtxtInterners<'tcx> {\n                 .intern(kind, |kind| {\n                     let flags = super::flags::FlagComputation::for_kind(&kind);\n \n-                    // It's impossible to hash inference regions (and will ICE), so we don't need to try to cache them.\n+                    // It's impossible to hash inference variables (and will ICE), so we don't need to try to cache them.\n                     // Without incremental, we rarely stable-hash types, so let's not do it proactively.\n-                    let stable_hash = if flags.flags.intersects(TypeFlags::HAS_RE_INFER)\n+                    let stable_hash = if flags\n+                        .flags\n+                        .intersects(TypeFlags::HAS_RE_INFER | TypeFlags::HAS_TY_INFER)\n                         || sess.opts.incremental.is_none()\n                     {\n                         Fingerprint::ZERO"}, {"sha": "c950e4e500c9a75dbc13bd8e71be65172860c3c5", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "patch": "@@ -675,9 +675,9 @@ impl<CTX> HashStable<CTX> for InferTy {\n         use InferTy::*;\n         discriminant(self).hash_stable(ctx, hasher);\n         match self {\n-            TyVar(v) => v.as_u32().hash_stable(ctx, hasher),\n-            IntVar(v) => v.index.hash_stable(ctx, hasher),\n-            FloatVar(v) => v.index.hash_stable(ctx, hasher),\n+            TyVar(_) | IntVar(_) | FloatVar(_) => {\n+                panic!(\"inference variables should not be hashed: {self:?}\")\n+            }\n             FreshTy(v) | FreshIntTy(v) | FreshFloatTy(v) => v.hash_stable(ctx, hasher),\n         }\n     }"}, {"sha": "a4fb1480fa4487c06cd51cd6c40d59fe3a3c2e16", "filename": "compiler/rustc_type_ir/src/sty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs?ref=91af4f5d0b9ae9a2f8adafc02d61d18c60ddb200", "patch": "@@ -1332,8 +1332,8 @@ where\n             RePlaceholder(p) => {\n                 p.hash_stable(hcx, hasher);\n             }\n-            ReVar(reg) => {\n-                reg.hash_stable(hcx, hasher);\n+            ReVar(_) => {\n+                panic!(\"region variables should not be hashed: {self:?}\")\n             }\n         }\n     }"}]}