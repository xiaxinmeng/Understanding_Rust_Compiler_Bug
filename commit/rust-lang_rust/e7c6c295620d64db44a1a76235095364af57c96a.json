{"sha": "e7c6c295620d64db44a1a76235095364af57c96a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YzZjMjk1NjIwZDY0ZGI0NGExYTc2MjM1MDk1MzY0YWY1N2M5NmE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-07-01T01:46:32Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-07-01T01:46:32Z"}, "message": "Avoid panicking on deeply nested expressions", "tree": {"sha": "1d58bfc5fb8b73607e1493e79805cc22a1d9271a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d58bfc5fb8b73607e1493e79805cc22a1d9271a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7c6c295620d64db44a1a76235095364af57c96a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c6c295620d64db44a1a76235095364af57c96a", "html_url": "https://github.com/rust-lang/rust/commit/e7c6c295620d64db44a1a76235095364af57c96a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7c6c295620d64db44a1a76235095364af57c96a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0206f53d21e2ab9ff43fb65b5cf16a7ece97f08", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0206f53d21e2ab9ff43fb65b5cf16a7ece97f08", "html_url": "https://github.com/rust-lang/rust/commit/a0206f53d21e2ab9ff43fb65b5cf16a7ece97f08"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "8fccf3da735e4e19f8e68e29db2284ed84d02aa5", "filename": "src/overflow.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e7c6c295620d64db44a1a76235095364af57c96a/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7c6c295620d64db44a1a76235095364af57c96a/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=e7c6c295620d64db44a1a76235095364af57c96a", "patch": "@@ -511,21 +511,18 @@ fn shape_from_indent_style(\n     overhead: usize,\n     offset: usize,\n ) -> Shape {\n-    if context.use_block_indent() {\n-        // 1 = \",\"\n-        shape\n+    let (shape, overhead) = if context.use_block_indent() {\n+        let shape = shape\n             .block()\n             .block_indent(context.config.tab_spaces())\n-            .with_max_width(context.config)\n-            .sub_width(1)\n-            .unwrap()\n+            .with_max_width(context.config);\n+        (shape, 1) // 1 = \",\"\n     } else {\n-        let shape = shape.visual_indent(offset);\n-        if let Some(shape) = shape.sub_width(overhead) {\n-            shape\n-        } else {\n-            Shape { width: 0, ..shape }\n-        }\n+        (shape.visual_indent(offset), overhead)\n+    };\n+    Shape {\n+        width: shape.width.saturating_sub(overhead),\n+        ..shape\n     }\n }\n "}]}