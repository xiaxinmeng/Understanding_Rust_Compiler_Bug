{"sha": "552c164a46051cdd78f86d8587c57f9a0c4668b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MmMxNjRhNDYwNTFjZGQ3OGY4NmQ4NTg3YzU3ZjlhMGM0NjY4Yjk=", "commit": {"author": {"name": "Ryan Scheel", "email": "ryan.havvy@gmail.com", "date": "2012-07-08T20:58:37Z"}, "committer": {"name": "Ryan Scheel", "email": "ryan.havvy@gmail.com", "date": "2012-07-08T20:58:37Z"}, "message": "Parameter/Variable names for for_rev and map extended.", "tree": {"sha": "c4393300095c31c2ceab3dcb8aa26b28b0ac4afe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4393300095c31c2ceab3dcb8aa26b28b0ac4afe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/552c164a46051cdd78f86d8587c57f9a0c4668b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/552c164a46051cdd78f86d8587c57f9a0c4668b9", "html_url": "https://github.com/rust-lang/rust/commit/552c164a46051cdd78f86d8587c57f9a0c4668b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/552c164a46051cdd78f86d8587c57f9a0c4668b9/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a3b9ac699168ae536b79422141e5fa923369b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a3b9ac699168ae536b79422141e5fa923369b2", "html_url": "https://github.com/rust-lang/rust/commit/e4a3b9ac699168ae536b79422141e5fa923369b2"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "dec2ab29caa791eb79f3074c30efa630acd7e82d", "filename": "doc/tutorial.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/552c164a46051cdd78f86d8587c57f9a0c4668b9/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/552c164a46051cdd78f86d8587c57f9a0c4668b9/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=552c164a46051cdd78f86d8587c57f9a0c4668b9", "patch": "@@ -1971,18 +1971,18 @@ they apply to.  Thus, Rust allows functions and datatypes to have type\n parameters.\n \n ~~~~\n-fn for_rev<T>(v: ~[T], act: fn(T)) {\n-    let mut i = vec::len(v);\n+fn for_rev<T>(vector: ~[T], action fn(T)) {\n+    let mut i = vec::len(vector);\n     while i > 0u {\n         i -= 1u;\n-        act(v[i]);\n+        action(vector[i]);\n     }\n }\n \n-fn map<T, U>(v: ~[T], f: fn(T) -> U) -> ~[U] {\n-    let mut acc = ~[];\n-    for v.each |elt| { vec::push(acc, f(elt)); }\n-    ret acc;\n+fn map<T, U>(vector: ~[T], function :fn(T) -> U) -> ~[U] {\n+    let mut accumulator = ~[];\n+    for vector.each |elt| { vec::push(accumulator, function(elt)); }\n+    ret accumulator;\n }\n ~~~~\n "}]}