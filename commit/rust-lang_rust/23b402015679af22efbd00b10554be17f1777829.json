{"sha": "23b402015679af22efbd00b10554be17f1777829", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYjQwMjAxNTY3OWFmMjJlZmJkMDBiMTA1NTRiZTE3ZjE3Nzc4Mjk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-09-19T19:50:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-19T19:50:23Z"}, "message": "Rollup merge of #44689 - behnam:unicode, r=sfackler\n\n[libstd_unicode] Expose UnicodeVersion type\n\nIn <https://github.com/rust-lang/rust/pull/42998>, we added an\nuninstantiable type for the internal `UNICODE_VERSION` value,\n`UnicodeVersion`, but it was not made public to the outside of the\ncrate, resulting in the value becoming less useful. Here we make the\ntype accessible from the outside.\n\nAlso add a run-pass test to make sure the type and value can be accessed\nas intended.", "tree": {"sha": "536ce8051018f720af9d1a951d05fef73a56eed4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/536ce8051018f720af9d1a951d05fef73a56eed4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23b402015679af22efbd00b10554be17f1777829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23b402015679af22efbd00b10554be17f1777829", "html_url": "https://github.com/rust-lang/rust/commit/23b402015679af22efbd00b10554be17f1777829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23b402015679af22efbd00b10554be17f1777829/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64fa14e97705d4bb72c410a60a2f48cf64603d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/64fa14e97705d4bb72c410a60a2f48cf64603d31", "html_url": "https://github.com/rust-lang/rust/commit/64fa14e97705d4bb72c410a60a2f48cf64603d31"}, {"sha": "86a79c97104983503e2088b182bab77d1f243bde", "url": "https://api.github.com/repos/rust-lang/rust/commits/86a79c97104983503e2088b182bab77d1f243bde", "html_url": "https://github.com/rust-lang/rust/commit/86a79c97104983503e2088b182bab77d1f243bde"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "5c0c7a4fbca35c52a842f2f414f460f4ec0303ce", "filename": "src/libstd_unicode/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23b402015679af22efbd00b10554be17f1777829/src%2Flibstd_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b402015679af22efbd00b10554be17f1777829/src%2Flibstd_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fchar.rs?ref=23b402015679af22efbd00b10554be17f1777829", "patch": "@@ -47,7 +47,7 @@ pub use core::char::CharTryFromError;\n #[unstable(feature = \"decode_utf8\", issue = \"33906\")]\n pub use core::char::{DecodeUtf8, decode_utf8};\n #[unstable(feature = \"unicode\", issue = \"27783\")]\n-pub use tables::UNICODE_VERSION;\n+pub use tables::{UnicodeVersion, UNICODE_VERSION};\n \n /// Returns an iterator that yields the lowercase equivalent of a `char`.\n ///"}, {"sha": "b4884acdd078f7edb56dc875d5a421f77e02d151", "filename": "src/test/run-pass/char_unicode.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23b402015679af22efbd00b10554be17f1777829/src%2Ftest%2Frun-pass%2Fchar_unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23b402015679af22efbd00b10554be17f1777829/src%2Ftest%2Frun-pass%2Fchar_unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchar_unicode.rs?ref=23b402015679af22efbd00b10554be17f1777829", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+#![feature(unicode)]\n+\n+\n+/// Tests access to the internal Unicode Version type and value.\n+pub fn main() {\n+    check(std::char::UNICODE_VERSION);\n+}\n+\n+pub fn check(unicode_version: std::char::UnicodeVersion) {\n+    assert!(unicode_version.major >= 10);\n+}"}]}