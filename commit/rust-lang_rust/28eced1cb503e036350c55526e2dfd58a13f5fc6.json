{"sha": "28eced1cb503e036350c55526e2dfd58a13f5fc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZWNlZDFjYjUwM2UwMzYzNTBjNTU1MjZlMmRmZDU4YTEzZjVmYzY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-19T23:15:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-19T23:15:18Z"}, "message": "Rollup merge of #49004 - wesleywiser:incr_specialization_graph_query, r=michaelwoerister\n\nCache the specialization_graph query\n\nFixes #48987\n\nr? @michaelwoerister", "tree": {"sha": "7c185e686e98c56c61002d47e909473aa7a620cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c185e686e98c56c61002d47e909473aa7a620cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28eced1cb503e036350c55526e2dfd58a13f5fc6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJasESGCRBK7hj4Ov3rIwAAdHIIAF1g7nKHbvO6Ta9AzxyJR+3m\nSrvSEidWpoOwzngoLfeEV2ojKfhPExu7OOwuRlAJkc53L4DI4CAij2oYCoXCbJJa\nNVx7yE74Jysz3bV6KWXxCnrI494yByX1dsO9bss23iB/aujk72wUcZ6OPYPc93Wx\n+/CNuFidGxNwClfllUBGP32dVsevd0QbHRxZJnAk0zIhWbVtWrJvJdgt/svz4rRa\nKuFF0K8rriK20T1Q9yS1jBn6PjJrKFjw9v3ysed0rtKAPlybnjYr6yO+N3zU9mCl\nAgk88HVWTAeSo+VfrvKERohbc9HBGL2bSm7DT/yQF6Y5P8ehrFUb+D9VTh8YJXU=\n=2vcB\n-----END PGP SIGNATURE-----\n", "payload": "tree 7c185e686e98c56c61002d47e909473aa7a620cd\nparent 7aa66515f6e60cb7a85d3d6008f282e3099a2e9c\nparent 5766e71fa7b3378d0b30d026eae23293e8e8bb32\nauthor kennytm <kennytm@gmail.com> 1521501318 +0800\ncommitter GitHub <noreply@github.com> 1521501318 +0800\n\nRollup merge of #49004 - wesleywiser:incr_specialization_graph_query, r=michaelwoerister\n\nCache the specialization_graph query\n\nFixes #48987\n\nr? @michaelwoerister\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28eced1cb503e036350c55526e2dfd58a13f5fc6", "html_url": "https://github.com/rust-lang/rust/commit/28eced1cb503e036350c55526e2dfd58a13f5fc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28eced1cb503e036350c55526e2dfd58a13f5fc6/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aa66515f6e60cb7a85d3d6008f282e3099a2e9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aa66515f6e60cb7a85d3d6008f282e3099a2e9c", "html_url": "https://github.com/rust-lang/rust/commit/7aa66515f6e60cb7a85d3d6008f282e3099a2e9c"}, {"sha": "5766e71fa7b3378d0b30d026eae23293e8e8bb32", "url": "https://api.github.com/repos/rust-lang/rust/commits/5766e71fa7b3378d0b30d026eae23293e8e8bb32", "html_url": "https://github.com/rust-lang/rust/commit/5766e71fa7b3378d0b30d026eae23293e8e8bb32"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "e0d662657b7de60574a69a9bf59ecbcb60bdde54", "filename": "src/librustc/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=28eced1cb503e036350c55526e2dfd58a13f5fc6", "patch": "@@ -36,6 +36,7 @@ use util::nodemap::{DefIdMap, FxHashMap};\n ///   parents of a given specializing impl, which is needed for extracting\n ///   default items amongst other things. In the simple \"chain\" rule, every impl\n ///   has at most one parent.\n+#[derive(RustcEncodable, RustcDecodable)]\n pub struct Graph {\n     // all impls have a parent; the \"root\" impls have as their parent the def_id\n     // of the trait\n@@ -47,6 +48,7 @@ pub struct Graph {\n \n /// Children of a given impl, grouped into blanket/non-blanket varieties as is\n /// done in `TraitDef`.\n+#[derive(RustcEncodable, RustcDecodable)]\n struct Children {\n     // Impls of a trait (or specializations of a given impl). To allow for\n     // quicker lookup, the impls are indexed by a simplified version of their"}, {"sha": "31b3ca44700e96676f076782f02d0af0797279f1", "filename": "src/librustc/ty/fast_reject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffast_reject.rs?ref=28eced1cb503e036350c55526e2dfd58a13f5fc6", "patch": "@@ -28,7 +28,7 @@ pub type SimplifiedType = SimplifiedTypeGen<DefId>;\n /// because we sometimes need to use SimplifiedTypeGen values as stable sorting\n /// keys (in which case we use a DefPathHash as id-type) but in the general case\n /// the non-stable but fast to construct DefId-version is the better choice.\n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n+#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, RustcEncodable, RustcDecodable)]\n pub enum SimplifiedTypeGen<D>\n     where D: Copy + Debug + Ord + Eq + Hash\n {"}, {"sha": "117d92193123564fffb7365427601f2a0a81b0d1", "filename": "src/librustc/ty/maps/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs?ref=28eced1cb503e036350c55526e2dfd58a13f5fc6", "patch": "@@ -727,3 +727,4 @@ impl_disk_cacheable_query!(type_of, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(predicates_of, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(used_trait_imports, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(trans_fn_attrs, |_| true);\n+impl_disk_cacheable_query!(specialization_graph_of, |_| true);"}, {"sha": "04437a1c9e2c2053a9a70c0117e7c8b9a9fc0e8a", "filename": "src/librustc/ty/maps/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs?ref=28eced1cb503e036350c55526e2dfd58a13f5fc6", "patch": "@@ -232,6 +232,7 @@ impl<'sess> OnDiskCache<'sess> {\n                 encode_query_results::<symbol_name, _>(tcx, enc, qri)?;\n                 encode_query_results::<check_match, _>(tcx, enc, qri)?;\n                 encode_query_results::<trans_fn_attrs, _>(tcx, enc, qri)?;\n+                encode_query_results::<specialization_graph_of, _>(tcx, enc, qri)?;\n \n                 // const eval is special, it only encodes successfully evaluated constants\n                 use ty::maps::plumbing::GetCacheInternal;"}, {"sha": "c514679042527f3cbb225dffa0897b93a2519c91", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28eced1cb503e036350c55526e2dfd58a13f5fc6/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=28eced1cb503e036350c55526e2dfd58a13f5fc6", "patch": "@@ -1003,4 +1003,5 @@ impl_load_from_cache!(\n     PredicatesOfItem => predicates_of,\n     UsedTraitImports => used_trait_imports,\n     TransFnAttrs => trans_fn_attrs,\n+    SpecializationGraph => specialization_graph_of,\n );"}]}