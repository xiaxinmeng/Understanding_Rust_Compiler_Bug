{"sha": "5cb5c85152e2a8b7f3480a46f4619b572f162056", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYjVjODUxNTJlMmE4YjdmMzQ4MGE0NmY0NjE5YjU3MmYxNjIwNTY=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-10-31T20:00:32Z"}, "committer": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-10-31T21:44:52Z"}, "message": "rustbuild+configure: improve bin/exe joining", "tree": {"sha": "638b29c929f921c17f86c848168f4817e7a35cb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/638b29c929f921c17f86c848168f4817e7a35cb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cb5c85152e2a8b7f3480a46f4619b572f162056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cb5c85152e2a8b7f3480a46f4619b572f162056", "html_url": "https://github.com/rust-lang/rust/commit/5cb5c85152e2a8b7f3480a46f4619b572f162056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cb5c85152e2a8b7f3480a46f4619b572f162056/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dce460028e9c21ebadb28f6744d4b10bf0e8d501", "url": "https://api.github.com/repos/rust-lang/rust/commits/dce460028e9c21ebadb28f6744d4b10bf0e8d501", "html_url": "https://github.com/rust-lang/rust/commit/dce460028e9c21ebadb28f6744d4b10bf0e8d501"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "9f6e91c85661cc89a8a340021c78c87b5f2c48db", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cb5c85152e2a8b7f3480a46f4619b572f162056/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb5c85152e2a8b7f3480a46f4619b572f162056/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5cb5c85152e2a8b7f3480a46f4619b572f162056", "patch": "@@ -23,6 +23,7 @@ use std::process;\n use num_cpus;\n use rustc_serialize::Decodable;\n use toml::{Parser, Decoder, Value};\n+use util::push_exe_path;\n \n /// Global configuration for the entire build and/or bootstrap.\n ///\n@@ -417,7 +418,7 @@ impl Config {\n                     let target = self.target_config.entry(self.build.clone())\n                                      .or_insert(Target::default());\n                     let root = PathBuf::from(value);\n-                    target.llvm_config = Some(root.join(\"bin/llvm-config\"));\n+                    target.llvm_config = Some(push_exe_path(root, &[\"bin\", \"llvm-config\"]));\n                 }\n                 \"CFG_JEMALLOC_ROOT\" if value.len() > 0 => {\n                     let target = self.target_config.entry(self.build.clone())\n@@ -449,8 +450,9 @@ impl Config {\n                     target.ndk = Some(PathBuf::from(value));\n                 }\n                 \"CFG_LOCAL_RUST_ROOT\" if value.len() > 0 => {\n-                    self.rustc = Some(PathBuf::from(value).join(\"bin/rustc\"));\n-                    self.cargo = Some(PathBuf::from(value).join(\"bin/cargo\"));\n+                    let path = PathBuf::from(value);\n+                    self.rustc = Some(push_exe_path(path.clone(), &[\"bin\", \"rustc\"]));\n+                    self.cargo = Some(push_exe_path(path, &[\"bin\", \"cargo\"]));\n                 }\n                 _ => {}\n             }"}, {"sha": "84ba03b2502e23feadfcb89edbd9f1521c8efc69", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5cb5c85152e2a8b7f3480a46f4619b572f162056/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb5c85152e2a8b7f3480a46f4619b572f162056/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=5cb5c85152e2a8b7f3480a46f4619b572f162056", "patch": "@@ -172,3 +172,21 @@ pub fn dylib_path() -> Vec<PathBuf> {\n     env::split_paths(&env::var_os(dylib_path_var()).unwrap_or(OsString::new()))\n         .collect()\n }\n+\n+/// `push` all components to `buf`. On windows, append `.exe` to the last component.\n+pub fn push_exe_path(mut buf: PathBuf, components: &[&str]) -> PathBuf {\n+    let (&file, components) = components.split_last().expect(\"at least one component required\");\n+    let mut file = file.to_owned();\n+\n+    if cfg!(windows) {\n+        file.push_str(\".exe\");\n+    }\n+\n+    for c in components {\n+        buf.push(c);\n+    }\n+\n+    buf.push(file);\n+\n+    buf\n+}"}]}