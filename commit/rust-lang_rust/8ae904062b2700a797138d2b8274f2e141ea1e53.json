{"sha": "8ae904062b2700a797138d2b8274f2e141ea1e53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZTkwNDA2MmIyNzAwYTc5NzEzOGQyYjgyNzRmMmUxNDFlYTFlNTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-16T00:52:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-16T00:52:35Z"}, "message": "Auto merge of #38352 - bluss:unaligned-metadata, r=eddyb\n\nFix unaligned loads in librustc_metadata\n\nCreating a `&[u32]` from an `&[u8]` is not necessarily valid, and crashes\non certain platforms if the data is not well aligned.", "tree": {"sha": "553d6d10c11789417c8dbf00727d3716644519f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/553d6d10c11789417c8dbf00727d3716644519f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ae904062b2700a797138d2b8274f2e141ea1e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae904062b2700a797138d2b8274f2e141ea1e53", "html_url": "https://github.com/rust-lang/rust/commit/8ae904062b2700a797138d2b8274f2e141ea1e53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ae904062b2700a797138d2b8274f2e141ea1e53/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f02c429ad3e2ad687a222d1daae2e04bb9bb876", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f02c429ad3e2ad687a222d1daae2e04bb9bb876", "html_url": "https://github.com/rust-lang/rust/commit/8f02c429ad3e2ad687a222d1daae2e04bb9bb876"}, {"sha": "7bc10545d635bc1f4a5632703823a6f18113df9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc10545d635bc1f4a5632703823a6f18113df9c", "html_url": "https://github.com/rust-lang/rust/commit/7bc10545d635bc1f4a5632703823a6f18113df9c"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "5b52b268849d3d6c2c080806531c62cdf6ed5d8b", "filename": "src/librustc_metadata/index.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8ae904062b2700a797138d2b8274f2e141ea1e53/src%2Flibrustc_metadata%2Findex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ae904062b2700a797138d2b8274f2e141ea1e53/src%2Flibrustc_metadata%2Findex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Findex.rs?ref=8ae904062b2700a797138d2b8274f2e141ea1e53", "patch": "@@ -70,7 +70,7 @@ impl<'tcx> LazySeq<Index> {\n                index,\n                words.len());\n \n-        let position = u32::from_le(words[index]);\n+        let position = u32::from_le(words[index].get());\n         if position == u32::MAX {\n             debug!(\"Index::lookup: position=u32::MAX\");\n             None\n@@ -84,7 +84,7 @@ impl<'tcx> LazySeq<Index> {\n                                bytes: &'a [u8])\n                                -> impl Iterator<Item = (DefIndex, Lazy<Entry<'tcx>>)> + 'a {\n         let words = &bytes_to_words(&bytes[self.position..])[..self.len];\n-        words.iter().enumerate().filter_map(|(index, &position)| {\n+        words.iter().map(|word| word.get()).enumerate().filter_map(|(index, position)| {\n             if position == u32::MAX {\n                 None\n             } else {\n@@ -95,8 +95,16 @@ impl<'tcx> LazySeq<Index> {\n     }\n }\n \n-fn bytes_to_words(b: &[u8]) -> &[u32] {\n-    unsafe { slice::from_raw_parts(b.as_ptr() as *const u32, b.len() / 4) }\n+#[repr(packed)]\n+#[derive(Copy, Clone)]\n+struct Unaligned<T>(T);\n+\n+impl<T> Unaligned<T> {\n+    fn get(self) -> T { self.0 }\n+}\n+\n+fn bytes_to_words(b: &[u8]) -> &[Unaligned<u32>] {\n+    unsafe { slice::from_raw_parts(b.as_ptr() as *const Unaligned<u32>, b.len() / 4) }\n }\n \n fn words_to_bytes(w: &[u32]) -> &[u8] {"}]}