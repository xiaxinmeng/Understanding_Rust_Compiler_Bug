{"sha": "962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MmUyMTA1ZGYyZmQ4ZDlkODI5YmY4ZjdlNGE3YWI0YjdmZDExNjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-25T08:15:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-25T08:32:15Z"}, "message": "remove an unnecessary as_str", "tree": {"sha": "c2105528f7db1b150e9b0005ebf63d7885e43b68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2105528f7db1b150e9b0005ebf63d7885e43b68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168", "html_url": "https://github.com/rust-lang/rust/commit/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47b91e619adffd19c60a5c20709f216c32e34c54", "url": "https://api.github.com/repos/rust-lang/rust/commits/47b91e619adffd19c60a5c20709f216c32e34c54", "html_url": "https://github.com/rust-lang/rust/commit/47b91e619adffd19c60a5c20709f216c32e34c54"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "73e7ce665b85857331477854e66669c206536379", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168", "patch": "@@ -106,8 +106,7 @@ impl MemoryExtra {\n     pub fn init_extern_statics<'tcx, 'mir>(\n         this: &mut MiriEvalContext<'mir, 'tcx>,\n     ) -> InterpResult<'tcx> {\n-        let target_os = this.tcx.sess.target.target.target_os.as_str();\n-        match target_os {\n+        match this.tcx.sess.target.target.target_os.as_str() {\n             \"linux\" => {\n                 // \"__cxa_thread_atexit_impl\"\n                 // This should be all-zero, pointer-sized."}, {"sha": "b779bf165d2b4505c0347068cb162f92193290dc", "filename": "src/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=962e2105df2fd8d9d829bf8f7e4a7ab4b7fd1168", "patch": "@@ -802,7 +802,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         this.check_no_isolation(\"mkdir\")?;\n \n-        let _mode = if this.tcx.sess.target.target.target_os.as_str() == \"macos\" {\n+        let _mode = if this.tcx.sess.target.target.target_os == \"macos\" {\n             u32::from(this.read_scalar(mode_op)?.not_undef()?.to_u16()?)\n         } else {\n             this.read_scalar(mode_op)?.to_u32()?"}]}