{"sha": "e0a4988fcc716e349fd801d98182c0d984a2ee3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYTQ5ODhmY2M3MTZlMzQ5ZmQ4MDFkOTgxODJjMGQ5ODRhMmVlM2Y=", "commit": {"author": {"name": "Christoph Walcher", "email": "christoph-wa@gmx.de", "date": "2020-08-04T18:23:14Z"}, "committer": {"name": "Christoph Walcher", "email": "christoph-wa@gmx.de", "date": "2020-08-07T16:08:51Z"}, "message": "Lint against `Self` as an arbitrary self type\n\nFixes #5861", "tree": {"sha": "85a02d4a16bdd994340b4c5b9af3804098111d47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85a02d4a16bdd994340b4c5b9af3804098111d47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0a4988fcc716e349fd801d98182c0d984a2ee3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE2xeoiquC04hUiBqUoZMWSk0F7kQFAl8tfJMACgkQoZMWSk0F\n7kTrogf9H5EP9wGi1eQaA4LE8k2+39DZOWHqHlRkdCcJUVN9FpzJdOfLqbn4BxKm\nMzyZsp8eLAHOh0Gxst7I8LnNOk0NNSa02dNNtzbR5Nvns2EmwzUvmahd0cWLi9Et\nLGK0VGqQN+CumXWIWn/K0G1EMq9W7TEnMs6y8pryLgB+uoNqCxHkRzRYAq9czaW2\n2H3zi8KuUDDDU6Wzv5VP3EUiJTs8Kc5JyQ6Xr1wsM6WzP/b/xn3V7MzZk9EMXJ/N\n6Sa8XEL/bY8F3ZGxLkZ+nZEfr+KCPuuEi0f8QglWZmWenBr9jr3FaznhRoHFrhAj\nsOebdsYDKz/s0pYMJ0FEjsyLQSnpHw==\n=RTOX\n-----END PGP SIGNATURE-----", "payload": "tree 85a02d4a16bdd994340b4c5b9af3804098111d47\nparent 2d4c3379d355c436342113a302421faf3990fb29\nauthor Christoph Walcher <christoph-wa@gmx.de> 1596565394 +0200\ncommitter Christoph Walcher <christoph-wa@gmx.de> 1596816531 +0200\n\nLint against `Self` as an arbitrary self type\n\nFixes #5861\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a4988fcc716e349fd801d98182c0d984a2ee3f", "html_url": "https://github.com/rust-lang/rust/commit/e0a4988fcc716e349fd801d98182c0d984a2ee3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0a4988fcc716e349fd801d98182c0d984a2ee3f/comments", "author": {"login": "wiomoc", "id": 10638299, "node_id": "MDQ6VXNlcjEwNjM4Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/10638299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiomoc", "html_url": "https://github.com/wiomoc", "followers_url": "https://api.github.com/users/wiomoc/followers", "following_url": "https://api.github.com/users/wiomoc/following{/other_user}", "gists_url": "https://api.github.com/users/wiomoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiomoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiomoc/subscriptions", "organizations_url": "https://api.github.com/users/wiomoc/orgs", "repos_url": "https://api.github.com/users/wiomoc/repos", "events_url": "https://api.github.com/users/wiomoc/events{/privacy}", "received_events_url": "https://api.github.com/users/wiomoc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wiomoc", "id": 10638299, "node_id": "MDQ6VXNlcjEwNjM4Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/10638299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiomoc", "html_url": "https://github.com/wiomoc", "followers_url": "https://api.github.com/users/wiomoc/followers", "following_url": "https://api.github.com/users/wiomoc/following{/other_user}", "gists_url": "https://api.github.com/users/wiomoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiomoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiomoc/subscriptions", "organizations_url": "https://api.github.com/users/wiomoc/orgs", "repos_url": "https://api.github.com/users/wiomoc/repos", "events_url": "https://api.github.com/users/wiomoc/events{/privacy}", "received_events_url": "https://api.github.com/users/wiomoc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d4c3379d355c436342113a302421faf3990fb29", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4c3379d355c436342113a302421faf3990fb29", "html_url": "https://github.com/rust-lang/rust/commit/2d4c3379d355c436342113a302421faf3990fb29"}], "stats": {"total": 116, "additions": 115, "deletions": 1}, "files": [{"sha": "179ecee03da66f866d1ddb758ccef15842f619e2", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -1622,6 +1622,7 @@ Released 2018-09-13\n [`needless_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect\n [`needless_continue`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue\n [`needless_doctest_main`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\n+[`needless_fn_self_type`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_fn_self_type\n [`needless_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n [`needless_pass_by_value`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value\n [`needless_range_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop"}, {"sha": "80c85e70e898ccb666e43a7d586df3375a48a1bd", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -254,6 +254,7 @@ mod needless_bool;\n mod needless_borrow;\n mod needless_borrowed_ref;\n mod needless_continue;\n+mod needless_fn_self_type;\n mod needless_pass_by_value;\n mod needless_update;\n mod neg_cmp_op_on_partial_ord;\n@@ -722,6 +723,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &needless_borrow::NEEDLESS_BORROW,\n         &needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE,\n         &needless_continue::NEEDLESS_CONTINUE,\n+        &needless_fn_self_type::NEEDLESS_FN_SELF_TYPE,\n         &needless_pass_by_value::NEEDLESS_PASS_BY_VALUE,\n         &needless_update::NEEDLESS_UPDATE,\n         &neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD,\n@@ -1027,6 +1029,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box items_after_statements::ItemsAfterStatements);\n     store.register_early_pass(|| box precedence::Precedence);\n     store.register_early_pass(|| box needless_continue::NeedlessContinue);\n+    store.register_early_pass(|| box needless_fn_self_type::NeedlessFnSelfType);\n     store.register_early_pass(|| box redundant_static_lifetimes::RedundantStaticLifetimes);\n     store.register_late_pass(|| box cargo_common_metadata::CargoCommonMetadata);\n     store.register_late_pass(|| box multiple_crate_versions::MultipleCrateVersions);\n@@ -1374,6 +1377,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&needless_bool::BOOL_COMPARISON),\n         LintId::of(&needless_bool::NEEDLESS_BOOL),\n         LintId::of(&needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n+        LintId::of(&needless_fn_self_type::NEEDLESS_FN_SELF_TYPE),\n         LintId::of(&needless_update::NEEDLESS_UPDATE),\n         LintId::of(&neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),\n         LintId::of(&neg_multiply::NEG_MULTIPLY),\n@@ -1534,6 +1538,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&misc_early::MIXED_CASE_HEX_LITERALS),\n         LintId::of(&misc_early::REDUNDANT_PATTERN),\n         LintId::of(&mut_reference::UNNECESSARY_MUT_PASSED),\n+        LintId::of(&needless_fn_self_type::NEEDLESS_FN_SELF_TYPE),\n         LintId::of(&neg_multiply::NEG_MULTIPLY),\n         LintId::of(&new_without_default::NEW_WITHOUT_DEFAULT),\n         LintId::of(&non_expressive_names::JUST_UNDERSCORES_AND_DIGITS),"}, {"sha": "050a03467fb0174e71f9e8b776dec75a03161e1c", "filename": "clippy_lints/src/needless_fn_self_type.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/clippy_lints%2Fsrc%2Fneedless_fn_self_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/clippy_lints%2Fsrc%2Fneedless_fn_self_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_fn_self_type.rs?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -0,0 +1,64 @@\n+use crate::utils::span_lint_and_help;\n+use if_chain::if_chain;\n+use rustc_ast::ast::{Param, TyKind};\n+use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// **What it does:** The lint checks for `self` fn fn parameters that explicitly\n+    /// specify the `Self`-type explicitly\n+    /// **Why is this bad?** Increases the amount and decreases the readability of code\n+    ///\n+    /// **Known problems:** None\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// impl ValType {\n+    ///     pub fn bytes(self: Self) -> usize {\n+    ///         match self {\n+    ///             Self::I32 | Self::F32 => 4,\n+    ///             Self::I64 | Self::F64 => 8,\n+    ///         }\n+    ///     }\n+    /// }\n+    /// ```\n+    ///\n+    /// Could be rewritten as\n+    ///\n+    /// ```rust\n+    /// impl ValType {\n+    ///     pub fn bytes(self) -> usize {\n+    ///         match self {\n+    ///             Self::I32 | Self::F32 => 4,\n+    ///             Self::I64 | Self::F64 => 8,\n+    ///         }\n+    ///     }\n+    /// }\n+    /// ```\n+    pub NEEDLESS_FN_SELF_TYPE,\n+    style,\n+    \"type of `self` parameter is already by default `Self`\"\n+}\n+\n+declare_lint_pass!(NeedlessFnSelfType => [NEEDLESS_FN_SELF_TYPE]);\n+\n+impl EarlyLintPass for NeedlessFnSelfType {\n+    fn check_param(&mut self, cx: &EarlyContext<'_>, p: &Param) {\n+        if_chain! {\n+            if p.is_self();\n+            if let TyKind::Path(None, path) = &p.ty.kind;\n+            if let Some(segment) = path.segments.first();\n+            if segment.ident.as_str() == sym!(Self).as_str();\n+            then {\n+                span_lint_and_help(\n+                    cx,\n+                    NEEDLESS_FN_SELF_TYPE,\n+                    p.ty.span,\n+                    \"the type of the `self` parameter is already by default `Self`\",\n+                    None,\n+                    \"consider removing the type specification\",\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "d4acf8df46d8a5323d64613c38de7ef7abbb8dd1", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -50,7 +50,7 @@ declare_clippy_lint! {\n     /// fn func<T: Clone + Default>(arg: T) {}\n     /// ```\n     /// or\n-    ///  ///\n+    ///\n     /// ```rust\n     /// fn func<T>(arg: T) where T: Clone + Default {}\n     /// ```"}, {"sha": "a20e410f79b17a2caf714a7d2b864a05239efd93", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -1501,6 +1501,13 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"doc\",\n     },\n+    Lint {\n+        name: \"needless_fn_self_type\",\n+        group: \"style\",\n+        desc: \"type of `self` parameter is already by default `Self`\",\n+        deprecation: None,\n+        module: \"needless_fn_self_type\",\n+    },\n     Lint {\n         name: \"needless_lifetimes\",\n         group: \"complexity\","}, {"sha": "12bb84582ff9fc72f9f1d3ff84206699dbeee15f", "filename": "tests/ui/needless_fn_self_type.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/tests%2Fui%2Fneedless_fn_self_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/tests%2Fui%2Fneedless_fn_self_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_fn_self_type.rs?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -0,0 +1,26 @@\n+#![warn(clippy::style, clippy::needless_fn_self_type)]\n+\n+pub enum ValType {\n+    I32,\n+    I64,\n+    F32,\n+    F64,\n+}\n+\n+impl ValType {\n+    pub fn bytes_bad(self: Self) -> usize {\n+        match self {\n+            Self::I32 | Self::F32 => 4,\n+            Self::I64 | Self::F64 => 8,\n+        }\n+    }\n+\n+    pub fn bytes_good(self) -> usize {\n+        match self {\n+            Self::I32 | Self::F32 => 4,\n+            Self::I64 | Self::F64 => 8,\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "703705c78428652d0c3f4e29ddbead7df2173752", "filename": "tests/ui/needless_fn_self_type.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e0a4988fcc716e349fd801d98182c0d984a2ee3f/tests%2Fui%2Fneedless_fn_self_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0a4988fcc716e349fd801d98182c0d984a2ee3f/tests%2Fui%2Fneedless_fn_self_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_fn_self_type.stderr?ref=e0a4988fcc716e349fd801d98182c0d984a2ee3f", "patch": "@@ -0,0 +1,11 @@\n+error: the type of the `self` parameter is already by default `Self`\n+  --> $DIR/needless_fn_self_type.rs:11:28\n+   |\n+LL |     pub fn bytes_bad(self: Self) -> usize {\n+   |                            ^^^^\n+   |\n+   = note: `-D clippy::needless-fn-self-type` implied by `-D warnings`\n+   = help: consider removing the type specification\n+\n+error: aborting due to previous error\n+"}]}