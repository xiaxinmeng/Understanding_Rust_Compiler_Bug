{"sha": "54aa8a7858cf539336c5639e35c4013dc25abd7b", "node_id": "C_kwDOAAsO6NoAKDU0YWE4YTc4NThjZjUzOTMzNmM1NjM5ZTM1YzQwMTNkYzI1YWJkN2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-06T23:53:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-06T23:53:07Z"}, "message": "Auto merge of #97809 - matthiaskrgr:rollup-ajyvjd3, r=matthiaskrgr\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #97700 (Add note to documentation of HashSet::intersection)\n - #97792 (More eslint checks)\n - #97794 (Fix typo in redundant_pattern_match.rs)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "f4408afc226cef8f0bee4040941ee14474177677", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4408afc226cef8f0bee4040941ee14474177677"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54aa8a7858cf539336c5639e35c4013dc25abd7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54aa8a7858cf539336c5639e35c4013dc25abd7b", "html_url": "https://github.com/rust-lang/rust/commit/54aa8a7858cf539336c5639e35c4013dc25abd7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54aa8a7858cf539336c5639e35c4013dc25abd7b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50b00252aeb77b10db04d65dc9e12ce758def4b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/50b00252aeb77b10db04d65dc9e12ce758def4b5", "html_url": "https://github.com/rust-lang/rust/commit/50b00252aeb77b10db04d65dc9e12ce758def4b5"}, {"sha": "fece76d7bc0674626aab7f73df76370f2af467f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fece76d7bc0674626aab7f73df76370f2af467f5", "html_url": "https://github.com/rust-lang/rust/commit/fece76d7bc0674626aab7f73df76370f2af467f5"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "fa498a987d6aff786dd49209771ab4cf8efecd97", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/54aa8a7858cf539336c5639e35c4013dc25abd7b/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54aa8a7858cf539336c5639e35c4013dc25abd7b/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=54aa8a7858cf539336c5639e35c4013dc25abd7b", "patch": "@@ -588,6 +588,12 @@ where\n     /// Visits the values representing the intersection,\n     /// i.e., the values that are both in `self` and `other`.\n     ///\n+    /// When an equal element is present in `self` and `other`\n+    /// then the resulting `Intersection` may yield references to\n+    /// one or the other. This can be relevant if `T` contains fields which\n+    /// are not compared by its `Eq` implementation, and may hold different\n+    /// value between the two equal copies of `T` in the two sets.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "9088e06e50803b64a6742409399d918dcd289496", "filename": "src/librustdoc/html/static/.eslintrc.js", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/54aa8a7858cf539336c5639e35c4013dc25abd7b/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/54aa8a7858cf539336c5639e35c4013dc25abd7b/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js?ref=54aa8a7858cf539336c5639e35c4013dc25abd7b", "patch": "@@ -78,5 +78,11 @@ module.exports = {\n         \"block-scoped-var\": \"error\",\n         \"guard-for-in\": \"error\",\n         \"no-alert\": \"error\",\n+        \"no-confusing-arrow\": \"error\",\n+        \"no-div-regex\": \"error\",\n+        \"no-floating-decimal\": \"error\",\n+        \"no-implicit-globals\": \"error\",\n+        \"no-implied-eval\": \"error\",\n+        \"no-label-var\": \"error\",\n     }\n };"}, {"sha": "414bca850e3dcc8a78d9cd0c39bd583bed73c7d1", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54aa8a7858cf539336c5639e35c4013dc25abd7b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/54aa8a7858cf539336c5639e35c4013dc25abd7b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=54aa8a7858cf539336c5639e35c4013dc25abd7b", "patch": "@@ -882,7 +882,7 @@ function loadCss(cssFileName) {\n             [\"-\", \"Collapse all sections\"],\n         ].map(x => \"<dt>\" +\n             x[0].split(\" \")\n-                .map((y, index) => (index & 1) === 0 ? \"<kbd>\" + y + \"</kbd>\" : \" \" + y + \" \")\n+                .map((y, index) => ((index & 1) === 0 ? \"<kbd>\" + y + \"</kbd>\" : \" \" + y + \" \"))\n                 .join(\"\") + \"</dt><dd>\" + x[1] + \"</dd>\").join(\"\");\n         const div_shortcuts = document.createElement(\"div\");\n         addClass(div_shortcuts, \"shortcuts\");"}, {"sha": "0ea3f3b673b7d95e0595847bbfae86df23af9c63", "filename": "src/tools/clippy/clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54aa8a7858cf539336c5639e35c4013dc25abd7b/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54aa8a7858cf539336c5639e35c4013dc25abd7b/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=54aa8a7858cf539336c5639e35c4013dc25abd7b", "patch": "@@ -70,7 +70,7 @@ fn temporaries_need_ordered_drop<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<\n                         }\n                     }\n                 },\n-                // the base type is alway taken by reference.\n+                // the base type is always taken by reference.\n                 // e.g. In `(vec![0])[0]` the vector is a temporary value.\n                 ExprKind::Index(base, index) => {\n                     if !matches!(base.kind, ExprKind::Path(_)) {"}]}