{"sha": "2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "node_id": "C_kwDOAAsO6NoAKDJhM2ZkNTA1M2Y5Y2Q1ODk3YzRhNWVlZDJiNzQyNjk5YWFiMjc5YTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-03T06:54:21Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-03T07:01:49Z"}, "message": "Don't suggest field method if it's just missing some bounds", "tree": {"sha": "d244ef54c37c92210153263de9ef587a42a06e67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d244ef54c37c92210153263de9ef587a42a06e67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "html_url": "https://github.com/rust-lang/rust/commit/2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4df6cbe96fe3e356aff89155f58a497d48bc78ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/4df6cbe96fe3e356aff89155f58a497d48bc78ee", "html_url": "https://github.com/rust-lang/rust/commit/4df6cbe96fe3e356aff89155f58a497d48bc78ee"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "f73d0fbb277163acfa2541162a924b2ef1e9fe6c", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "patch": "@@ -1000,7 +1000,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     label_span_not_found(&mut err);\n                 }\n \n-                self.check_for_field_method(&mut err, source, span, actual, item_name);\n+                // Don't suggest (for example) `expr.field.method()` if `expr.method()`\n+                // doesn't exist due to unsatisfied predicates.\n+                if unsatisfied_predicates.is_empty() {\n+                    self.check_for_field_method(&mut err, source, span, actual, item_name);\n+                }\n \n                 self.check_for_unwrap_self(&mut err, source, span, actual, item_name);\n "}, {"sha": "ffe3d7b81f51eca8b207d10a60cd3f5154cef018", "filename": "src/test/ui/hrtb/issue-30786.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/src%2Ftest%2Fui%2Fhrtb%2Fissue-30786.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/src%2Ftest%2Fui%2Fhrtb%2Fissue-30786.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fissue-30786.stderr?ref=2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "patch": "@@ -18,10 +18,6 @@ note: the following trait bounds were not satisfied:\n    |\n LL | impl<T> StreamExt for T where for<'a> &'a mut T: Stream {}\n    |         ---------     -                          ^^^^^^ unsatisfied trait bound introduced here\n-help: one of the expressions' fields has a method of the same name\n-   |\n-LL |     let filter = map.stream.filterx(|x: &_| true);\n-   |                      +++++++\n \n error[E0599]: the method `countx` exists for struct `Filter<Map<Repeat, for<'r> fn(&'r u64) -> &'r u64 {identity::<u64>}>, [closure@$DIR/issue-30786.rs:129:30: 129:37]>`, but its trait bounds were not satisfied\n   --> $DIR/issue-30786.rs:130:24\n@@ -43,10 +39,6 @@ note: the following trait bounds were not satisfied:\n    |\n LL | impl<T> StreamExt for T where for<'a> &'a mut T: Stream {}\n    |         ---------     -                          ^^^^^^ unsatisfied trait bound introduced here\n-help: one of the expressions' fields has a method of the same name\n-   |\n-LL |     let count = filter.stream.countx();\n-   |                        +++++++\n \n error: aborting due to 2 previous errors\n "}, {"sha": "148fb5046705bf6265734a1586f09556bd73a58f", "filename": "src/test/ui/union/union-derive-clone.mirunsafeck.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.mirunsafeck.stderr?ref=2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "patch": "@@ -42,10 +42,6 @@ help: consider annotating `CloneNoCopy` with `#[derive(Clone, Copy)]`\n    |\n LL | #[derive(Clone, Copy)]\n    |\n-help: one of the expressions' fields has a method of the same name\n-   |\n-LL |     let w = u.a.clone();\n-   |               ++\n \n error: aborting due to 2 previous errors\n "}, {"sha": "148fb5046705bf6265734a1586f09556bd73a58f", "filename": "src/test/ui/union/union-derive-clone.thirunsafeck.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a3fd5053f9cd5897c4a5eed2b742699aab279a4/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.thirunsafeck.stderr?ref=2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "patch": "@@ -42,10 +42,6 @@ help: consider annotating `CloneNoCopy` with `#[derive(Clone, Copy)]`\n    |\n LL | #[derive(Clone, Copy)]\n    |\n-help: one of the expressions' fields has a method of the same name\n-   |\n-LL |     let w = u.a.clone();\n-   |               ++\n \n error: aborting due to 2 previous errors\n "}]}