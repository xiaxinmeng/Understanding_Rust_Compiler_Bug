{"sha": "f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzY2I5NjJmNjNlOGU1YmZjMTVlZjc3OWQxMGRlZDVmYmZmYzMwYTc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-23T18:02:10Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-03T05:02:36Z"}, "message": "Perform manual fixups", "tree": {"sha": "a3fa0f55058a86b213240f63d74f2aea14af43a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3fa0f55058a86b213240f63d74f2aea14af43a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7", "html_url": "https://github.com/rust-lang/rust/commit/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69c53ac9046f7481cfbff0f9663a6a782d3aef92", "url": "https://api.github.com/repos/rust-lang/rust/commits/69c53ac9046f7481cfbff0f9663a6a782d3aef92", "html_url": "https://github.com/rust-lang/rust/commit/69c53ac9046f7481cfbff0f9663a6a782d3aef92"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "61fae4609d54fe7813b76857c5baa5fb6e48ed09", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7", "patch": "@@ -19,6 +19,8 @@ use dep_graph::{DepGraph, DepNode, DepKind, DepNodeIndex};\n \n use hir::def_id::{CRATE_DEF_INDEX, DefId, LocalDefId, DefIndexAddressSpace};\n \n+use middle::cstore::CrateStore;\n+\n use syntax::abi::Abi;\n use syntax::ast::{self, Name, NodeId, CRATE_NODE_ID};\n use syntax::codemap::Spanned;\n@@ -1136,8 +1138,9 @@ impl Named for StructField { fn name(&self) -> Name { self.name } }\n impl Named for TraitItem { fn name(&self) -> Name { self.name } }\n impl Named for ImplItem { fn name(&self) -> Name { self.name } }\n \n+\n pub fn map_crate<'hir>(sess: &::session::Session,\n-                       cstore: &dyn ::middle::cstore::CrateStore,\n+                       cstore: &dyn CrateStore,\n                        forest: &'hir mut Forest,\n                        definitions: &'hir Definitions)\n                        -> Map<'hir> {"}, {"sha": "ca17e18beccba4b418224a2e3f774393a6fd912e", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=f3cb962f63e8e5bfc15ef779d10ded5fbffc30a7", "patch": "@@ -341,7 +341,7 @@ macro_rules! hash_option {\n     ($opt_name:ident, $opt_expr:expr, $sub_hashes:expr, [UNTRACKED]) => ({});\n     ($opt_name:ident, $opt_expr:expr, $sub_hashes:expr, [TRACKED]) => ({\n         if $sub_hashes.insert(stringify!($opt_name),\n-                              $opt_expr as &dyn dep_tracking::DepTrackingHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHashHash).is_some() {\n+                              $opt_expr as &dyn dep_tracking::DepTrackingHash).is_some() {\n             bug!(\"Duplicate key in CLI DepTrackingHash: {}\", stringify!($opt_name))\n         }\n     });"}]}