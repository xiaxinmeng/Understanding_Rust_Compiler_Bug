{"sha": "7605bac2cb72627e29d0a82a70d5496a5a7a1827", "node_id": "C_kwDOAAsO6NoAKDc2MDViYWMyY2I3MjYyN2UyOWQwYTgyYTcwZDU0OTZhNWE3YTE4Mjc", "commit": {"author": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-16T14:07:19Z"}, "committer": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-16T14:07:19Z"}, "message": "resolve CI", "tree": {"sha": "a145577df8f19519a359f6e3e9cdb497c4bb8793", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a145577df8f19519a359f6e3e9cdb497c4bb8793"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7605bac2cb72627e29d0a82a70d5496a5a7a1827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7605bac2cb72627e29d0a82a70d5496a5a7a1827", "html_url": "https://github.com/rust-lang/rust/commit/7605bac2cb72627e29d0a82a70d5496a5a7a1827", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7605bac2cb72627e29d0a82a70d5496a5a7a1827/comments", "author": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "committer": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a30fdcd3c5ab9803983671a4452dff7e31f9e80", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a30fdcd3c5ab9803983671a4452dff7e31f9e80", "html_url": "https://github.com/rust-lang/rust/commit/0a30fdcd3c5ab9803983671a4452dff7e31f9e80"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b56528388925c77d063c67b87fdfcdbffa385112", "filename": "clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7605bac2cb72627e29d0a82a70d5496a5a7a1827/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7605bac2cb72627e29d0a82a70d5496a5a7a1827/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=7605bac2cb72627e29d0a82a70d5496a5a7a1827", "patch": "@@ -72,10 +72,10 @@ pub(super) fn check<'tcx>(\n \n     if is_option {\n         let self_snippet = snippet(cx, recv.span, \"..\");\n-        if let hir::ExprKind::Closure(_, _, id, span, _) = map_arg.kind {\n+        if_chain! {\n+        if let hir::ExprKind::Closure(_, _, id, span, _) = map_arg.kind;\n             let arg_snippet = snippet(cx, span, \"..\");\n             let body = cx.tcx.hir().body(id);\n-            if_chain! {\n                 if let Some((func, arg_char)) = reduce_unit_expression(cx, &body.value);\n                 if arg_char.len() == 1;\n                 if let hir::ExprKind::Path(ref qpath) = func.kind;\n@@ -95,7 +95,7 @@ pub(super) fn check<'tcx>(\n                         Applicability::MachineApplicable,\n                     );\n                 }\n-            }\n+\n         }\n \n         let func_snippet = snippet(cx, map_arg.span, \"..\");"}]}