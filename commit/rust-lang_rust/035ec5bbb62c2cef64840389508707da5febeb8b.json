{"sha": "035ec5bbb62c2cef64840389508707da5febeb8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNWVjNWJiYjYyYzJjZWY2NDg0MDM4OTUwODcwN2RhNWZlYmViOGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-03-31T12:49:56Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-16T21:33:43Z"}, "message": "Add warning if a resolution failed", "tree": {"sha": "20f6c104ea30733a26fc3b37b80dd633dcca06c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20f6c104ea30733a26fc3b37b80dd633dcca06c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/035ec5bbb62c2cef64840389508707da5febeb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/035ec5bbb62c2cef64840389508707da5febeb8b", "html_url": "https://github.com/rust-lang/rust/commit/035ec5bbb62c2cef64840389508707da5febeb8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/035ec5bbb62c2cef64840389508707da5febeb8b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49317cd511fbb60178bd5122e484609568938468", "url": "https://api.github.com/repos/rust-lang/rust/commits/49317cd511fbb60178bd5122e484609568938468", "html_url": "https://github.com/rust-lang/rust/commit/49317cd511fbb60178bd5122e484609568938468"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "e7610976f8e35a2eee09d4470a2c3022669151a9", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/035ec5bbb62c2cef64840389508707da5febeb8b/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035ec5bbb62c2cef64840389508707da5febeb8b/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=035ec5bbb62c2cef64840389508707da5febeb8b", "patch": "@@ -514,6 +514,41 @@ impl Step for RustdocJS {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct RustdocUi {\n+    pub host: Interned<String>,\n+    pub target: Interned<String>,\n+    pub compiler: Compiler,\n+}\n+\n+impl Step for RustdocUi {\n+    type Output = ();\n+    const DEFAULT: bool = true;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        run.path(\"src/test/rustdoc-ui\")\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        let compiler = run.builder.compiler(run.builder.top_stage, run.host);\n+        run.builder.ensure(RustdocUi {\n+            host: run.host,\n+            target: run.target,\n+            compiler,\n+        });\n+    }\n+\n+    fn run(self, builder: &Builder) {\n+        builder.ensure(Compiletest {\n+            compiler: self.compiler,\n+            target: self.target,\n+            mode: \"ui\",\n+            suite: \"rustdoc-ui\",\n+        })\n+    }\n+}\n+\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Tidy;\n "}, {"sha": "443caa7618d7414f81896fe56e01cacb021d3d94", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/035ec5bbb62c2cef64840389508707da5febeb8b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/035ec5bbb62c2cef64840389508707da5febeb8b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=035ec5bbb62c2cef64840389508707da5febeb8b", "patch": "@@ -1178,6 +1178,10 @@ enum PathKind {\n     Type,\n }\n \n+fn resolution_failure(cx: &DocContext, path_str: &str) {\n+    cx.sess().warn(&format!(\"[{}] cannot be resolved, ignoring it...\", path_str));\n+}\n+\n impl Clean<Attributes> for [ast::Attribute] {\n     fn clean(&self, cx: &DocContext) -> Attributes {\n         let mut attrs = Attributes::from_ast(cx.sess().diagnostic(), self);\n@@ -1228,6 +1232,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             if let Ok(def) = resolve(cx, path_str, true) {\n                                 def\n                             } else {\n+                                resolution_failure(cx, path_str);\n                                 // this could just be a normal link or a broken link\n                                 // we could potentially check if something is\n                                 // \"intra-doc-link-like\" and warn in that case\n@@ -1238,6 +1243,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             if let Ok(def) = resolve(cx, path_str, false) {\n                                 def\n                             } else {\n+                                resolution_failure(cx, path_str);\n                                 // this could just be a normal link\n                                 continue;\n                             }\n@@ -1282,6 +1288,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             } else if let Ok(value_def) = resolve(cx, path_str, true) {\n                                 value_def\n                             } else {\n+                                resolution_failure(cx, path_str);\n                                 // this could just be a normal link\n                                 continue;\n                             }\n@@ -1290,6 +1297,7 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             if let Some(def) = macro_resolve(cx, path_str) {\n                                 (def, None)\n                             } else {\n+                                resolution_failure(cx, path_str);\n                                 continue\n                             }\n                         }"}]}