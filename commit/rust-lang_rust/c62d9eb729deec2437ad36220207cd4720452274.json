{"sha": "c62d9eb729deec2437ad36220207cd4720452274", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MmQ5ZWI3MjlkZWVjMjQzN2FkMzYyMjAyMDdjZDQ3MjA0NTIyNzQ=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-03-11T01:03:51Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-03-16T06:52:16Z"}, "message": "fix formatting", "tree": {"sha": "f90d52c95907a57e4f05309fe94e3e9b3c272170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f90d52c95907a57e4f05309fe94e3e9b3c272170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c62d9eb729deec2437ad36220207cd4720452274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c62d9eb729deec2437ad36220207cd4720452274", "html_url": "https://github.com/rust-lang/rust/commit/c62d9eb729deec2437ad36220207cd4720452274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c62d9eb729deec2437ad36220207cd4720452274/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b111e677c6bd58cf046d925493c5413c05773fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b111e677c6bd58cf046d925493c5413c05773fe", "html_url": "https://github.com/rust-lang/rust/commit/0b111e677c6bd58cf046d925493c5413c05773fe"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "bcd7a3e7cd347ea0746ff67abd1cfd24197e9511", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c62d9eb729deec2437ad36220207cd4720452274/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c62d9eb729deec2437ad36220207cd4720452274/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=c62d9eb729deec2437ad36220207cd4720452274", "patch": "@@ -54,16 +54,16 @@ impl Origin {\n \n pub trait BorrowckErrors<'cx> {\n     fn struct_span_err_with_code<S: Into<MultiSpan>>(self,\n-                                                         sp: S,\n-                                                         msg: &str,\n-                                                         code: DiagnosticId)\n-                                                         -> DiagnosticBuilder<'cx>\n+                                                     sp: S,\n+                                                     msg: &str,\n+                                                     code: DiagnosticId)\n+                                                     -> DiagnosticBuilder<'cx>\n         where Self: Sized + Copy;\n \n     fn struct_span_err<S: Into<MultiSpan>>(self,\n-                                               sp: S,\n-                                               msg: &str)\n-                                               -> DiagnosticBuilder<'cx>\n+                                           sp: S,\n+                                           msg: &str)\n+                                           -> DiagnosticBuilder<'cx>\n         where Self: Sized + Copy;\n \n     /// Cancels the given error if we shouldn't emit errors for a given\n@@ -72,9 +72,9 @@ pub trait BorrowckErrors<'cx> {\n     /// Always make sure that the error gets passed through this function\n     /// before you return it.\n     fn cancel_if_wrong_origin(self,\n-                                diag: DiagnosticBuilder<'cx>,\n-                                o: Origin)\n-                                -> DiagnosticBuilder<'cx>\n+                              diag: DiagnosticBuilder<'cx>,\n+                              o: Origin)\n+                              -> DiagnosticBuilder<'cx>\n         where Self: Sized + Copy;\n \n     fn cannot_move_when_borrowed(self, span: Span, desc: &str, o: Origin)"}]}