{"sha": "2018cd912cc98e0c3555b3ca827ad504fe02c3d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMThjZDkxMmNjOThlMGMzNTU1YjNjYTgyN2FkNTA0ZmUwMmMzZDQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-16T02:06:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-16T02:06:19Z"}, "message": "Update keywords in codemirror-rust.js", "tree": {"sha": "4bfeb7b0919f0d5f1157fbb2535e52665119c24c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bfeb7b0919f0d5f1157fbb2535e52665119c24c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2018cd912cc98e0c3555b3ca827ad504fe02c3d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2018cd912cc98e0c3555b3ca827ad504fe02c3d4", "html_url": "https://github.com/rust-lang/rust/commit/2018cd912cc98e0c3555b3ca827ad504fe02c3d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2018cd912cc98e0c3555b3ca827ad504fe02c3d4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78525299d5ca7344242c061a130c9806a385bd5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/78525299d5ca7344242c061a130c9806a385bd5b", "html_url": "https://github.com/rust-lang/rust/commit/78525299d5ca7344242c061a130c9806a385bd5b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ac12bd5a0256c67c65df29803fd8a9e39a8362b0", "filename": "doc/lib/codemirror-rust.js", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2018cd912cc98e0c3555b3ca827ad504fe02c3d4/doc%2Flib%2Fcodemirror-rust.js", "raw_url": "https://github.com/rust-lang/rust/raw/2018cd912cc98e0c3555b3ca827ad504fe02c3d4/doc%2Flib%2Fcodemirror-rust.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Flib%2Fcodemirror-rust.js?ref=2018cd912cc98e0c3555b3ca827ad504fe02c3d4", "patch": "@@ -2,14 +2,14 @@ CodeMirror.defineMode(\"rust\", function() {\n   var indentUnit = 4, altIndentUnit = 2;\n   var valKeywords = {\n     \"if\": \"if-style\", \"while\": \"if-style\", \"loop\": \"if-style\", \"else\": \"else-style\",\n-    \"do\": \"else-style\", \"ret\": \"else-style\", \"fail\": \"else-style\",\n+    \"do\": \"else-style\", \"return\": \"else-style\", \"fail\": \"else-style\",\n     \"break\": \"atom\", \"cont\": \"atom\", \"const\": \"let\", \"resource\": \"fn\",\n-    \"let\": \"let\", \"fn\": \"fn\", \"for\": \"for\", \"alt\": \"alt\", \"trait\": \"trait\",\n+    \"let\": \"let\", \"fn\": \"fn\", \"for\": \"for\", \"match\": \"match\", \"trait\": \"trait\",\n     \"impl\": \"impl\", \"type\": \"type\", \"enum\": \"enum\", \"class\": \"atom\", \"mod\": \"mod\",\n     \"as\": \"op\", \"true\": \"atom\", \"false\": \"atom\", \"assert\": \"op\", \"check\": \"op\",\n     \"claim\": \"op\", \"extern\": \"ignore\", \"unsafe\": \"ignore\", \"import\": \"else-style\",\n-    \"export\": \"else-style\", \"copy\": \"op\", \"log\": \"op\", \"log_err\": \"op\",\n-    \"use\": \"op\", \"bind\": \"op\", \"self\": \"atom\", \"new\": \"atom\"\n+    \"export\": \"else-style\", \"copy\": \"op\", \"log\": \"op\",\n+    \"use\": \"op\", \"self\": \"atom\"\n   };\n   var typeKeywords = function() {\n     var keywords = {\"fn\": \"fn\"};\n@@ -197,7 +197,7 @@ CodeMirror.defineMode(\"rust\", function() {\n     if (type == \"if-style\") return cont(expression, expression);\n     if (type == \"else-style\" || type == \"op\") return cont(expression);\n     if (type == \"for\") return cont(pattern, maybetype, inop, expression, expression);\n-    if (type == \"alt\") return cont(expression, altbody);\n+    if (type == \"match\") return cont(expression, altbody);\n     if (type == \"fn\") return cont(fndef);\n     if (type == \"macro\") return cont(macro);\n     return cont();\n@@ -346,7 +346,7 @@ CodeMirror.defineMode(\"rust\", function() {\n     else return pass();\n   }\n   function altbody(type) {\n-    if (type == \"{\") return cont(pushlex(\"}\", \"alt\"), altblock1, poplex);\n+    if (type == \"{\") return cont(pushlex(\"}\", \"match\"), altblock1, poplex);\n     return pass();\n   }\n   function altblock1(type) {\n@@ -357,7 +357,7 @@ CodeMirror.defineMode(\"rust\", function() {\n     return pass(pattern, altblock2);\n   }\n   function altblock2(type) {\n-    if (type == \"{\") return cont(pushlex(\"}\", \"alt\"), block, poplex, altblock1);\n+    if (type == \"{\") return cont(pushlex(\"}\", \"match\"), block, poplex, altblock1);\n     else return pass(altblock1);\n   }\n \n@@ -422,7 +422,7 @@ CodeMirror.defineMode(\"rust\", function() {\n           type = lexical.type, closing = firstChar == type;\n       if (type == \"stat\") return lexical.indented + indentUnit;\n       if (lexical.align) return lexical.column + (closing ? 0 : 1);\n-      return lexical.indented + (closing ? 0 : (lexical.info == \"alt\" ? altIndentUnit : indentUnit));\n+      return lexical.indented + (closing ? 0 : (lexical.info == \"match\" ? altIndentUnit : indentUnit));\n     },\n \n     electricChars: \"{}\""}]}