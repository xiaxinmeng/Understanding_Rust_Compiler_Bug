{"sha": "959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "node_id": "C_kwDOAAsO6NoAKDk1OWJmMmJjMmU3OWRlZmQwZmU3ZDNjOTk4N2E2MDIzZWI4NTAzY2Q", "commit": {"author": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-11T19:59:06Z"}, "committer": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-11T19:59:06Z"}, "message": "rustc_pass_by_value: handle generic and const type parameters", "tree": {"sha": "b0e1b5402b5091c4c9132c8fa126302b91f67e3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0e1b5402b5091c4c9132c8fa126302b91f67e3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYxDoXUzfgu5d8FXXuroRW98MWYoFAmHd4hUACgkQuroRW98M\nWYrx3g//bVNd4/J4utfJeLvR8M3/vvsLR6L8JUjoQYkLu9ED1kmdpzv8p0RT8d7z\n9UgOY667DD0qDTXanX8Cu0aC+JkWalvaOqbq7/4JcKDWuCK2VZRwAcH1k1SfQEI0\nGRLi3leTT/AxjeQEcSihXY5Z3pW0+PfzBnkJToIlry8G4yqL3SMeu5ga7tfzLHKY\nO1M4AvvhWphbbbrnFZBjIcqz8p/o0L2kUhcWSiZxy5nF+Bm+1tKG4J2KrQvH159v\nUzf260AKOWT9Hlm81eQEnBtphnZXbzlmFR07tPCTs62mf7GKiRsBUz6ax7xNbdL3\nr8Fuu2nV6dSsBuOLyCorf8U3ObLuqBzkUsADiZF9rG5ob23tDptJWm+Pb6U5wmnZ\ngr4wMwKyn70PgwDrefc8IcgokXpqIgdagW3dkHvopj8X2RVkX+G5Rm7QF9hW/e2R\nUU8s3sYNwiANgei/EMjxgt4HEzU4IwjfCIwNhIBWT/9Ou72uPkEK+y+YOVkHYCb2\nZWJvobWpHecTMYryyBCxVgcpm3G3+gJtexWEK6WWCGf5ExlCaswMbODZ68kKqNTC\nB9Hzzc4UMITagBFkRiFQ/o6H1wlrz7Ir0dbatJcl2yjPa104MqTzdR65BgG+QYtv\nm3p7w6m9uA310Q5uEyjpcnma0OMK/gR/vcR3YMaDr14rmezwXzU=\n=zp9/\n-----END PGP SIGNATURE-----", "payload": "tree b0e1b5402b5091c4c9132c8fa126302b91f67e3a\nparent a6762e962e50d5b6f864e33ebb27878e90651f22\nauthor Mahdi Dibaiee <mdibaiee@pm.me> 1641931146 +0000\ncommitter Mahdi Dibaiee <mdibaiee@pm.me> 1641931146 +0000\n\nrustc_pass_by_value: handle generic and const type parameters\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "html_url": "https://github.com/rust-lang/rust/commit/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/comments", "author": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6762e962e50d5b6f864e33ebb27878e90651f22", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6762e962e50d5b6f864e33ebb27878e90651f22", "html_url": "https://github.com/rust-lang/rust/commit/a6762e962e50d5b6f864e33ebb27878e90651f22"}], "stats": {"total": 90, "additions": 74, "deletions": 16}, "files": [{"sha": "3435a5a6c82db7cb45fee000bb5edaec3334386e", "filename": "compiler/rustc_lint/src/pass_by_value.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs?ref=959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "patch": "@@ -51,15 +51,13 @@ fn path_for_pass_by_value(cx: &LateContext<'_>, ty: &hir::Ty<'_>) -> Option<Stri\n         match path.res {\n             Res::Def(_, def_id) if cx.tcx.has_attr(def_id, sym::rustc_pass_by_value) => {\n                 let name = cx.tcx.item_name(def_id).to_ident_string();\n-                return Some(format!(\"{}{}\", name, gen_args(path.segments.last().unwrap())));\n+                let path_segment = path.segments.last().unwrap();\n+                return Some(format!(\"{}{}\", name, gen_args(cx, path_segment)));\n             }\n             Res::SelfTy(None, Some((did, _))) => {\n                 if let ty::Adt(adt, substs) = cx.tcx.type_of(did).kind() {\n                     if cx.tcx.has_attr(adt.did, sym::rustc_pass_by_value) {\n-                        let name = cx.tcx.item_name(adt.did).to_ident_string();\n-                        let param =\n-                            substs.first().map(|s| format!(\"<{}>\", s)).unwrap_or(\"\".to_string());\n-                        return Some(format!(\"{}{}\", name, param));\n+                        return Some(cx.tcx.def_path_str_with_substs(adt.did, substs));\n                     }\n                 }\n             }\n@@ -70,22 +68,29 @@ fn path_for_pass_by_value(cx: &LateContext<'_>, ty: &hir::Ty<'_>) -> Option<Stri\n     None\n }\n \n-fn gen_args(segment: &PathSegment<'_>) -> String {\n+fn gen_args(cx: &LateContext<'_>, segment: &PathSegment<'_>) -> String {\n     if let Some(args) = &segment.args {\n-        let lifetimes = args\n+        let params = args\n             .args\n             .iter()\n-            .filter_map(|arg| {\n-                if let GenericArg::Lifetime(lt) = arg {\n-                    Some(lt.name.ident().to_string())\n-                } else {\n-                    None\n+            .filter_map(|arg| match arg {\n+                GenericArg::Lifetime(lt) => Some(lt.name.ident().to_string()),\n+                GenericArg::Type(ty) => {\n+                    let snippet =\n+                        cx.tcx.sess.source_map().span_to_snippet(ty.span).unwrap_or_default();\n+                    Some(snippet)\n                 }\n+                GenericArg::Const(c) => {\n+                    let snippet =\n+                        cx.tcx.sess.source_map().span_to_snippet(c.span).unwrap_or_default();\n+                    Some(snippet)\n+                }\n+                _ => None,\n             })\n             .collect::<Vec<_>>();\n \n-        if !lifetimes.is_empty() {\n-            return format!(\"<{}>\", lifetimes.join(\", \"));\n+        if !params.is_empty() {\n+            return format!(\"<{}>\", params.join(\", \"));\n         }\n     }\n "}, {"sha": "f8ab0f056d79ff06af57b9e1f2446971467c7faa", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.rs?ref=959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "patch": "@@ -98,4 +98,19 @@ impl CustomStruct {\n     }\n }\n \n+#[rustc_pass_by_value]\n+struct WithParameters<T, const N: usize, M = u32> {\n+    slice: [T; N],\n+    m: M,\n+}\n+\n+impl<T> WithParameters<T, 1> {\n+    fn test(\n+        value: WithParameters<T, 1>,\n+        reference: &WithParameters<T, 1>, //~ ERROR passing `WithParameters<T, 1>` by reference\n+        reference_with_m: &WithParameters<T, 1, u32>, //~ ERROR passing `WithParameters<T, 1, u32>` by reference\n+    ) {\n+    }\n+}\n+\n fn main() {}"}, {"sha": "c5307f0f67d9b406e9b0d04d9646801701bf541b", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value.stderr?ref=959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "patch": "@@ -100,5 +100,17 @@ error: passing `CustomAlias<>` by reference\n LL |         reference: &CustomAlias,\n    |                    ^^^^^^^^^^^^ help: try passing by value: `CustomAlias<>`\n \n-error: aborting due to 16 previous errors\n+error: passing `WithParameters<T, 1>` by reference\n+  --> $DIR/rustc_pass_by_value.rs:110:20\n+   |\n+LL |         reference: &WithParameters<T, 1>,\n+   |                    ^^^^^^^^^^^^^^^^^^^^^ help: try passing by value: `WithParameters<T, 1>`\n+\n+error: passing `WithParameters<T, 1, u32>` by reference\n+  --> $DIR/rustc_pass_by_value.rs:111:27\n+   |\n+LL |         reference_with_m: &WithParameters<T, 1, u32>,\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try passing by value: `WithParameters<T, 1, u32>`\n+\n+error: aborting due to 18 previous errors\n "}, {"sha": "2868517774d46bc2c9b72dfe1d92cd0e0bac7cb1", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value_self.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.rs?ref=959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "patch": "@@ -37,4 +37,18 @@ impl Foo {\n     fn with_ref(&self) {} //~ ERROR passing `Foo` by reference\n }\n \n+#[rustc_pass_by_value]\n+struct WithParameters<T, const N: usize, M = u32> {\n+    slice: [T; N],\n+    m: M,\n+}\n+\n+impl<T> WithParameters<T, 1> {\n+    fn with_ref(&self) {} //~ ERROR passing `WithParameters<T, 1_usize>` by reference\n+}\n+\n+impl<T> WithParameters<T, 1, u8> {\n+    fn with_ref(&self) {} //~ ERROR passing `WithParameters<T, 1_usize, u8>` by reference\n+}\n+\n fn main() {}"}, {"sha": "54a7cf7cab7570bf01f976f02e9df27ebfef6952", "filename": "src/test/ui-fulldeps/internal-lints/rustc_pass_by_value_self.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/959bf2bc2e79defd0fe7d3c9987a6023eb8503cd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Frustc_pass_by_value_self.stderr?ref=959bf2bc2e79defd0fe7d3c9987a6023eb8503cd", "patch": "@@ -22,5 +22,17 @@ error: passing `Foo` by reference\n LL |     fn with_ref(&self) {}\n    |                 ^^^^^ help: try passing by value: `Foo`\n \n-error: aborting due to 3 previous errors\n+error: passing `WithParameters<T, 1_usize>` by reference\n+  --> $DIR/rustc_pass_by_value_self.rs:47:17\n+   |\n+LL |     fn with_ref(&self) {}\n+   |                 ^^^^^ help: try passing by value: `WithParameters<T, 1_usize>`\n+\n+error: passing `WithParameters<T, 1_usize, u8>` by reference\n+  --> $DIR/rustc_pass_by_value_self.rs:51:17\n+   |\n+LL |     fn with_ref(&self) {}\n+   |                 ^^^^^ help: try passing by value: `WithParameters<T, 1_usize, u8>`\n+\n+error: aborting due to 5 previous errors\n "}]}