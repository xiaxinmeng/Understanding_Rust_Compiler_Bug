{"sha": "804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNGNhMWQ1YjcyMjNhODc5NmRmMWRmMmNiZTBjMjk0N2VmMGYwZjM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-13T14:26:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-13T14:26:16Z"}, "message": "Rollup merge of #78984 - GuillaumeGomez:rustdoc-check-option, r=jyn514\n\nRustdoc check option\n\nThe ultimate goal behind this option would be to have `rustdoc --check` being run when you use `cargo check` as a second step.\n\nr? `@jyn514`", "tree": {"sha": "cfe447a01dc92107091566202a4ed3ced2832411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfe447a01dc92107091566202a4ed3ced2832411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfrpeICRBK7hj4Ov3rIwAAdHIIACq3Tz/pEvsKCdS3ppN9Cwml\nxt58FS/0/4maz2juUQP1PwAo2oVv/8oxW2BI6CA3H60vuH/vtg+fTAAvyvACcynS\nYHPTorJ5atiCkbuy/W4wTR3YH0X7G/Q5OcNZT35Q8+WD6mpyFCI8c20KKLZI3WF3\nTsSmnZEr3imQ14vp2Fm7m8LwxcuLU8GiyMpcnxCUpRRUeoCLhT/wewvwPmnG7Fkk\ndnmTfFYTC9GHI/2Y8tVFG0J01iKX//Qcwl5oi200YM9Xa9dfxLmGTAJp5OYZXww/\nXCfbcFUM/R+G0PUmgF+Mvl4hIDX9sd0Kde+4dxF3zYQpoZMcDWcdeFflvscA87g=\n=EeDb\n-----END PGP SIGNATURE-----\n", "payload": "tree cfe447a01dc92107091566202a4ed3ced2832411\nparent 0b7a7930b4e47c828c6521ee4d9c3fcd477e51cb\nparent a06fd1f4f4b71b0571f2c1f35e981a1863638765\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1605277576 +0100\ncommitter GitHub <noreply@github.com> 1605277576 +0100\n\nRollup merge of #78984 - GuillaumeGomez:rustdoc-check-option, r=jyn514\n\nRustdoc check option\n\nThe ultimate goal behind this option would be to have `rustdoc --check` being run when you use `cargo check` as a second step.\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "html_url": "https://github.com/rust-lang/rust/commit/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7a7930b4e47c828c6521ee4d9c3fcd477e51cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7a7930b4e47c828c6521ee4d9c3fcd477e51cb", "html_url": "https://github.com/rust-lang/rust/commit/0b7a7930b4e47c828c6521ee4d9c3fcd477e51cb"}, {"sha": "a06fd1f4f4b71b0571f2c1f35e981a1863638765", "url": "https://api.github.com/repos/rust-lang/rust/commits/a06fd1f4f4b71b0571f2c1f35e981a1863638765", "html_url": "https://github.com/rust-lang/rust/commit/a06fd1f4f4b71b0571f2c1f35e981a1863638765"}], "stats": {"total": 154, "additions": 154, "deletions": 0}, "files": [{"sha": "c248d57a9ddf4bc4f9dc16de9b85c215ea603111", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -145,6 +145,9 @@ pub struct Options {\n     pub render_options: RenderOptions,\n     /// Output format rendering (used only for \"show-coverage\" option for the moment)\n     pub output_format: Option<OutputFormat>,\n+    /// If this option is set to `true`, rustdoc will only run checks and not generate\n+    /// documentation.\n+    pub run_check: bool,\n }\n \n impl fmt::Debug for Options {\n@@ -185,6 +188,7 @@ impl fmt::Debug for Options {\n             .field(\"runtool\", &self.runtool)\n             .field(\"runtool_args\", &self.runtool_args)\n             .field(\"enable-per-target-ignores\", &self.enable_per_target_ignores)\n+            .field(\"run_check\", &self.run_check)\n             .finish()\n     }\n }\n@@ -581,6 +585,7 @@ impl Options {\n         let enable_per_target_ignores = matches.opt_present(\"enable-per-target-ignores\");\n         let document_private = matches.opt_present(\"document-private-items\");\n         let document_hidden = matches.opt_present(\"document-hidden-items\");\n+        let run_check = matches.opt_present(\"check\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -616,6 +621,7 @@ impl Options {\n             runtool_args,\n             enable_per_target_ignores,\n             test_builder,\n+            run_check,\n             render_options: RenderOptions {\n                 output,\n                 external_html,"}, {"sha": "a88efba77b41cc7efb0406d4971166a098c0022e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -423,6 +423,7 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"specified the rustc-like binary to use as the test builder\",\n             )\n         }),\n+        unstable(\"check\", |o| o.optflag(\"\", \"check\", \"Run rustdoc checks\")),\n     ]\n }\n \n@@ -515,6 +516,7 @@ fn main_options(options: config::Options) -> MainResult {\n     // but we can't crates the Handler ahead of time because it's not Send\n     let diag_opts = (options.error_format, options.edition, options.debugging_opts.clone());\n     let show_coverage = options.show_coverage;\n+    let run_check = options.run_check;\n \n     // First, parse the crate and extract all relevant information.\n     info!(\"starting to run rustc\");\n@@ -540,6 +542,9 @@ fn main_options(options: config::Options) -> MainResult {\n         // if we ran coverage, bail early, we don't need to also generate docs at this point\n         // (also we didn't load in any of the useful passes)\n         return Ok(());\n+    } else if run_check {\n+        // Since we're in \"check\" mode, no need to generate anything beyond this point.\n+        return Ok(());\n     }\n \n     info!(\"going to format\");"}, {"sha": "291fc112c3407191e14ce33fc1f7b5798f228ce3", "filename": "src/test/rustdoc-ui/check-fail.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.rs?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -0,0 +1,21 @@\n+// compile-flags: -Z unstable-options --check\n+\n+#![deny(missing_docs)]\n+#![deny(rustdoc)]\n+\n+//! ```rust,testharness\n+//~^ ERROR\n+//! let x = 12;\n+//! ```\n+\n+pub fn foo() {}\n+//~^ ERROR\n+//~^^ ERROR\n+\n+/// hello\n+//~^ ERROR\n+///\n+/// ```rust,testharness\n+/// let x = 12;\n+/// ```\n+pub fn bar() {}"}, {"sha": "b4f255642da5355e242ce7443f009a176de77a4d", "filename": "src/test/rustdoc-ui/check-fail.stderr", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.stderr?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -0,0 +1,57 @@\n+error: missing documentation for a function\n+  --> $DIR/check-fail.rs:11:1\n+   |\n+LL | pub fn foo() {}\n+   | ^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check-fail.rs:3:9\n+   |\n+LL | #![deny(missing_docs)]\n+   |         ^^^^^^^^^^^^\n+\n+error: missing code example in this documentation\n+  --> $DIR/check-fail.rs:11:1\n+   |\n+LL | pub fn foo() {}\n+   | ^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check-fail.rs:4:9\n+   |\n+LL | #![deny(rustdoc)]\n+   |         ^^^^^^^\n+   = note: `#[deny(missing_doc_code_examples)]` implied by `#[deny(rustdoc)]`\n+\n+error: unknown attribute `testharness`. Did you mean `test_harness`?\n+  --> $DIR/check-fail.rs:6:1\n+   |\n+LL | / //! ```rust,testharness\n+LL | |\n+LL | | //! let x = 12;\n+LL | | //! ```\n+   | |_______^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check-fail.rs:4:9\n+   |\n+LL | #![deny(rustdoc)]\n+   |         ^^^^^^^\n+   = note: `#[deny(invalid_codeblock_attributes)]` implied by `#[deny(rustdoc)]`\n+   = help: the code block will either not be tested if not marked as a rust one or the code will be wrapped inside a main function\n+\n+error: unknown attribute `testharness`. Did you mean `test_harness`?\n+  --> $DIR/check-fail.rs:15:1\n+   |\n+LL | / /// hello\n+LL | |\n+LL | | ///\n+LL | | /// ```rust,testharness\n+LL | | /// let x = 12;\n+LL | | /// ```\n+   | |_______^\n+   |\n+   = help: the code block will either not be tested if not marked as a rust one or the code will be wrapped inside a main function\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "022c56214d451fafd197e8b13c21d3d27c6b1253", "filename": "src/test/rustdoc-ui/check.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck.rs?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+// compile-flags: -Z unstable-options --check\n+\n+#![warn(missing_docs)]\n+//~^ WARN\n+//~^^ WARN\n+#![warn(rustdoc)]\n+\n+pub fn foo() {}\n+//~^ WARN\n+//~^^ WARN"}, {"sha": "27e5a736148e103d9eb1c4f223228d26afa6ee70", "filename": "src/test/rustdoc-ui/check.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -0,0 +1,49 @@\n+warning: missing documentation for the crate\n+  --> $DIR/check.rs:4:1\n+   |\n+LL | / #![warn(missing_docs)]\n+LL | |\n+LL | |\n+LL | | #![warn(rustdoc)]\n+LL | |\n+LL | | pub fn foo() {}\n+   | |_______________^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check.rs:4:9\n+   |\n+LL | #![warn(missing_docs)]\n+   |         ^^^^^^^^^^^^\n+\n+warning: missing documentation for a function\n+  --> $DIR/check.rs:9:1\n+   |\n+LL | pub fn foo() {}\n+   | ^^^^^^^^^^^^\n+\n+warning: missing code example in this documentation\n+  --> $DIR/check.rs:4:1\n+   |\n+LL | / #![warn(missing_docs)]\n+LL | |\n+LL | |\n+LL | | #![warn(rustdoc)]\n+LL | |\n+LL | | pub fn foo() {}\n+   | |_______________^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check.rs:7:9\n+   |\n+LL | #![warn(rustdoc)]\n+   |         ^^^^^^^\n+   = note: `#[warn(missing_doc_code_examples)]` implied by `#[warn(rustdoc)]`\n+\n+warning: missing code example in this documentation\n+  --> $DIR/check.rs:9:1\n+   |\n+LL | pub fn foo() {}\n+   | ^^^^^^^^^^^^^^^\n+\n+warning: 4 warnings emitted\n+"}, {"sha": "1fb4b35ddbe86fa33a8873201417d5db6e65234d", "filename": "src/test/rustdoc/check.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3/src%2Ftest%2Frustdoc%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcheck.rs?ref=804ca1d5b7223a8796df1df2cbe0c2947ef0f0f3", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags: -Z unstable-options --check\n+\n+// @!has check/fn.foo.html\n+// @!has check/index.html\n+pub fn foo() {}"}]}