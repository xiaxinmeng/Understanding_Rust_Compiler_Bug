{"sha": "538ebd197c52f2551f550d7aa5c82f7b3412c99d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzOGViZDE5N2M1MmYyNTUxZjU1MGQ3YWE1YzgyZjdiMzQxMmM5OWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-05-08T19:58:20Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-06-05T20:09:27Z"}, "message": "Added some comments, made `add_bounds` private.", "tree": {"sha": "d481a5ab2152fc1580dd9b0d9d59521fd0e44c54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d481a5ab2152fc1580dd9b0d9d59521fd0e44c54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/538ebd197c52f2551f550d7aa5c82f7b3412c99d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/538ebd197c52f2551f550d7aa5c82f7b3412c99d", "html_url": "https://github.com/rust-lang/rust/commit/538ebd197c52f2551f550d7aa5c82f7b3412c99d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/538ebd197c52f2551f550d7aa5c82f7b3412c99d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f4a5ca33ceb22edd4f2cd12a03806331a2883ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4a5ca33ceb22edd4f2cd12a03806331a2883ed", "html_url": "https://github.com/rust-lang/rust/commit/0f4a5ca33ceb22edd4f2cd12a03806331a2883ed"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "fe17d902c617c8c78f7ed7f8453c95a29a4e9092", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/538ebd197c52f2551f550d7aa5c82f7b3412c99d/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538ebd197c52f2551f550d7aa5c82f7b3412c99d/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=538ebd197c52f2551f550d7aa5c82f7b3412c99d", "patch": "@@ -699,6 +699,15 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n             },\n         );\n \n+        // Convert associated-type bindings or constraints into a separate vector.\n+        // Example: Given this:\n+        //\n+        //     T: Iterator<Item = u32>\n+        //\n+        // The `T` is passed in as a self-type; the `Item = u32` is\n+        // not a \"type parameter\" of the `Iterator` trait, but rather\n+        // a restriction on `<T as Iterator>::Item`, so it is passed\n+        // back separately.\n         let assoc_bindings = generic_args.bindings.iter()\n             .map(|binding| {\n                 let kind = if let hir::TyKind::AssocTyExistential(ref bounds) = binding.ty.node {\n@@ -899,7 +908,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n         true\n     }\n \n-    pub fn add_bounds(&self,\n+    fn add_bounds(&self,\n         param_ty: Ty<'tcx>,\n         ast_bounds: &[hir::GenericBound],\n         bounds: &mut Bounds<'tcx>,\n@@ -1065,6 +1074,10 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n \n         match binding.kind {\n             ConvertedBindingKind::Equality(ref ty) => {\n+                // \"Desugar\" a constraint like `T: Iterator<Item = u32>` this to\n+                // the \"projection predicate\" for:\n+                //\n+                // `<T as Iterator>::Item = u32`\n                 bounds.projection_bounds.push((candidate.map_bound(|trait_ref| {\n                     ty::ProjectionPredicate {\n                         projection_ty: ty::ProjectionTy::from_ref_and_name("}]}