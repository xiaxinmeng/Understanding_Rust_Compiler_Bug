{"sha": "9b88a2b295e51803a74ad8bb852549693815e0c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliODhhMmIyOTVlNTE4MDNhNzRhZDhiYjg1MjU0OTY5MzgxNWUwYzA=", "commit": {"author": {"name": "Mikhail Babenko", "email": "misha-babenko@yandex.ru", "date": "2020-01-28T09:28:11Z"}, "committer": {"name": "Areredify", "email": "misha-babenko@yandex.ru", "date": "2020-01-30T13:51:23Z"}, "message": "decouple 'let_underscore' tests", "tree": {"sha": "44838032a30f8360951e31281dcc01ac2b0ce9c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44838032a30f8360951e31281dcc01ac2b0ce9c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b88a2b295e51803a74ad8bb852549693815e0c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b88a2b295e51803a74ad8bb852549693815e0c0", "html_url": "https://github.com/rust-lang/rust/commit/9b88a2b295e51803a74ad8bb852549693815e0c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b88a2b295e51803a74ad8bb852549693815e0c0/comments", "author": {"login": "basil-cow", "id": 25266609, "node_id": "MDQ6VXNlcjI1MjY2NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/25266609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basil-cow", "html_url": "https://github.com/basil-cow", "followers_url": "https://api.github.com/users/basil-cow/followers", "following_url": "https://api.github.com/users/basil-cow/following{/other_user}", "gists_url": "https://api.github.com/users/basil-cow/gists{/gist_id}", "starred_url": "https://api.github.com/users/basil-cow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basil-cow/subscriptions", "organizations_url": "https://api.github.com/users/basil-cow/orgs", "repos_url": "https://api.github.com/users/basil-cow/repos", "events_url": "https://api.github.com/users/basil-cow/events{/privacy}", "received_events_url": "https://api.github.com/users/basil-cow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "basil-cow", "id": 25266609, "node_id": "MDQ6VXNlcjI1MjY2NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/25266609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basil-cow", "html_url": "https://github.com/basil-cow", "followers_url": "https://api.github.com/users/basil-cow/followers", "following_url": "https://api.github.com/users/basil-cow/following{/other_user}", "gists_url": "https://api.github.com/users/basil-cow/gists{/gist_id}", "starred_url": "https://api.github.com/users/basil-cow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basil-cow/subscriptions", "organizations_url": "https://api.github.com/users/basil-cow/orgs", "repos_url": "https://api.github.com/users/basil-cow/repos", "events_url": "https://api.github.com/users/basil-cow/events{/privacy}", "received_events_url": "https://api.github.com/users/basil-cow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1f862171150f91c114eb126c559e90873c8dc00", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1f862171150f91c114eb126c559e90873c8dc00", "html_url": "https://github.com/rust-lang/rust/commit/d1f862171150f91c114eb126c559e90873c8dc00"}], "stats": {"total": 101, "additions": 53, "deletions": 48}, "files": [{"sha": "b68eb3ed7fab8beaf433b2e369efcfebd789f004", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -6,7 +6,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 350 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 351 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "a43674316a1e5cedd5d656036f25e65fcbcf699b", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -80,7 +80,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnderscore {\n                             cx,\n                             LET_UNDERSCORE_LOCK,\n                             stmt.span,\n-                            \"non-binding let on an a synchronization lock\",\n+                            \"non-binding let on a synchronization lock\",\n                             \"consider using an underscore-prefixed named binding\"\n                         )\n                     } else {"}, {"sha": "0c5b8146b136114e453297f82fbde96a75ee76b1", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 350] = [\n+pub const ALL_LINTS: [Lint; 351] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\","}, {"sha": "f4a33c3606605826eab2e59ca55b86fcc096de47", "filename": "tests/ui/let_underscore_lock.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_lock.rs?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -0,0 +1,10 @@\n+#![warn(clippy::let_underscore_lock)]\n+\n+fn main() {\n+    let m = std::sync::Mutex::new(());\n+    let rw = std::sync::RwLock::new(());\n+\n+    let _ = m.lock();\n+    let _ = rw.read();\n+    let _ = rw.write();\n+}"}, {"sha": "bd297f6020cc5beeda4fb1141559ffd2db377c02", "filename": "tests/ui/let_underscore_lock.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_lock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_lock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_lock.stderr?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -0,0 +1,27 @@\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:7:5\n+   |\n+LL |     let _ = m.lock();\n+   |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::let-underscore-lock` implied by `-D warnings`\n+   = help: consider using an underscore-prefixed named binding\n+\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:8:5\n+   |\n+LL |     let _ = rw.read();\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using an underscore-prefixed named binding\n+\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:9:5\n+   |\n+LL |     let _ = rw.write();\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using an underscore-prefixed named binding\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "7f481542fa73b2579257b83337bd57fd763c6d51", "filename": "tests/ui/let_underscore_must_use.rs", "status": "renamed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_must_use.rs?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -88,11 +88,4 @@ fn main() {\n     let _ = a.map(|_| ());\n \n     let _ = a;\n-\n-    let m = std::sync::Mutex::new(());\n-    let rw = std::sync::RwLock::new(());\n-\n-    let _ = m.lock();\n-    let _ = rw.read();\n-    let _ = rw.write();\n }", "previous_filename": "tests/ui/let_underscore.rs"}, {"sha": "447f2419e3bdb50932203b3ca2af5d7a33a3b1a8", "filename": "tests/ui/let_underscore_must_use.stderr", "status": "renamed", "additions": 13, "deletions": 38, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b88a2b295e51803a74ad8bb852549693815e0c0/tests%2Fui%2Flet_underscore_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_must_use.stderr?ref=9b88a2b295e51803a74ad8bb852549693815e0c0", "patch": "@@ -1,5 +1,5 @@\n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:66:5\n+  --> $DIR/let_underscore_must_use.rs:66:5\n    |\n LL |     let _ = f();\n    |     ^^^^^^^^^^^^\n@@ -8,117 +8,92 @@ LL |     let _ = f();\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:67:5\n+  --> $DIR/let_underscore_must_use.rs:67:5\n    |\n LL |     let _ = g();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:69:5\n+  --> $DIR/let_underscore_must_use.rs:69:5\n    |\n LL |     let _ = l(0_u32);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:73:5\n+  --> $DIR/let_underscore_must_use.rs:73:5\n    |\n LL |     let _ = s.f();\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:74:5\n+  --> $DIR/let_underscore_must_use.rs:74:5\n    |\n LL |     let _ = s.g();\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:77:5\n+  --> $DIR/let_underscore_must_use.rs:77:5\n    |\n LL |     let _ = S::h();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:78:5\n+  --> $DIR/let_underscore_must_use.rs:78:5\n    |\n LL |     let _ = S::p();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:80:5\n+  --> $DIR/let_underscore_must_use.rs:80:5\n    |\n LL |     let _ = S::a();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:82:5\n+  --> $DIR/let_underscore_must_use.rs:82:5\n    |\n LL |     let _ = if true { Ok(()) } else { Err(()) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:86:5\n+  --> $DIR/let_underscore_must_use.rs:86:5\n    |\n LL |     let _ = a.is_ok();\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:88:5\n+  --> $DIR/let_underscore_must_use.rs:88:5\n    |\n LL |     let _ = a.map(|_| ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:90:5\n+  --> $DIR/let_underscore_must_use.rs:90:5\n    |\n LL |     let _ = a;\n    |     ^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n-error: non-binding let on an a synchronization lock\n-  --> $DIR/let_underscore.rs:95:5\n-   |\n-LL |     let _ = m.lock();\n-   |     ^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[deny(clippy::let_underscore_lock)]` on by default\n-   = help: consider using an underscore-prefixed named binding\n-\n-error: non-binding let on an a synchronization lock\n-  --> $DIR/let_underscore.rs:96:5\n-   |\n-LL |     let _ = rw.read();\n-   |     ^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using an underscore-prefixed named binding\n-\n-error: non-binding let on an a synchronization lock\n-  --> $DIR/let_underscore.rs:97:5\n-   |\n-LL |     let _ = rw.write();\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using an underscore-prefixed named binding\n-\n-error: aborting due to 15 previous errors\n+error: aborting due to 12 previous errors\n ", "previous_filename": "tests/ui/let_underscore.stderr"}]}