{"sha": "6a5b97adb4da4b0f913d19765e91d4322ef6542e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNWI5N2FkYjRkYTRiMGY5MTNkMTk3NjVlOTFkNDMyMmVmNjU0MmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-21T12:21:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-21T12:21:19Z"}, "message": "Auto merge of #86210 - ehuss:rustfix-update, r=Mark-Simulacrum\n\nRustfix update\n\nThis updates to rustfix 0.6.0. One of the key changes here is https://github.com/rust-lang/rustfix/pull/195 which changes rustfix to apply multi-part suggestions. One of the tests needs to updated because there are some overlapping suggestions which rustfix cannot handle. The solution is to only apply the machine-applicable suggestions to avoid the overlapping issue.\n\nThis also includes a minor change to compiletest to provide better error messages with rustfix.", "tree": {"sha": "3032f3b0de196f0dabda79d943bc0adfe00f66a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3032f3b0de196f0dabda79d943bc0adfe00f66a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a5b97adb4da4b0f913d19765e91d4322ef6542e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a5b97adb4da4b0f913d19765e91d4322ef6542e", "html_url": "https://github.com/rust-lang/rust/commit/6a5b97adb4da4b0f913d19765e91d4322ef6542e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a5b97adb4da4b0f913d19765e91d4322ef6542e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d93819fa7ae40376ac1f563a858d2ba5f3b0277", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d93819fa7ae40376ac1f563a858d2ba5f3b0277", "html_url": "https://github.com/rust-lang/rust/commit/9d93819fa7ae40376ac1f563a858d2ba5f3b0277"}, {"sha": "35bf1becaac46ae79c92ee8b87a05b02687eeae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/35bf1becaac46ae79c92ee8b87a05b02687eeae7", "html_url": "https://github.com/rust-lang/rust/commit/35bf1becaac46ae79c92ee8b87a05b02687eeae7"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "86dd4695aa4fe5b2aa1066c6e69b03598bf73efd", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -673,7 +673,7 @@ dependencies = [\n  \"libc\",\n  \"miow 0.3.6\",\n  \"regex\",\n- \"rustfix 0.5.1\",\n+ \"rustfix 0.6.0\",\n  \"serde\",\n  \"serde_json\",\n  \"tracing\","}, {"sha": "c217ab9774fd23c63c2f2096c61326a46fb8c8c7", "filename": "src/test/ui/parser/expr-as-stmt.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+// rustfix-only-machine-applicable\n #![allow(unused_variables)]\n #![allow(dead_code)]\n #![allow(unused_must_use)]"}, {"sha": "b04025faaec63caabf71a1c9d8fdf47a38860f28", "filename": "src/test/ui/parser/expr-as-stmt.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+// rustfix-only-machine-applicable\n #![allow(unused_variables)]\n #![allow(dead_code)]\n #![allow(unused_must_use)]"}, {"sha": "067b7edc7709447e6e2e78b1a8e80a1ea040d7bd", "filename": "src/test/ui/parser/expr-as-stmt.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -1,29 +1,29 @@\n error: expected expression, found `+`\n-  --> $DIR/expr-as-stmt.rs:7:9\n+  --> $DIR/expr-as-stmt.rs:8:9\n    |\n LL |     {2} + {2}\n    |     --- ^ expected expression\n    |     |\n    |     help: parentheses are required to parse this as an expression: `({2})`\n \n error: expected expression, found `+`\n-  --> $DIR/expr-as-stmt.rs:12:9\n+  --> $DIR/expr-as-stmt.rs:13:9\n    |\n LL |     {2} + 2\n    |     --- ^ expected expression\n    |     |\n    |     help: parentheses are required to parse this as an expression: `({2})`\n \n error: expected expression, found `+`\n-  --> $DIR/expr-as-stmt.rs:18:12\n+  --> $DIR/expr-as-stmt.rs:19:12\n    |\n LL |     { 42 } + foo;\n    |     ------ ^ expected expression\n    |     |\n    |     help: parentheses are required to parse this as an expression: `({ 42 })`\n \n error: expected expression, found `>`\n-  --> $DIR/expr-as-stmt.rs:31:7\n+  --> $DIR/expr-as-stmt.rs:32:7\n    |\n LL |     } > 0\n    |       ^ expected expression\n@@ -36,7 +36,7 @@ LL |     }) > 0\n    |\n \n error[E0308]: mismatched types\n-  --> $DIR/expr-as-stmt.rs:7:6\n+  --> $DIR/expr-as-stmt.rs:8:6\n    |\n LL |     {2} + {2}\n    |      ^ expected `()`, found integer\n@@ -47,7 +47,7 @@ LL |     {return 2;} + {2}\n    |      ^^^^^^  ^\n \n error[E0308]: mismatched types\n-  --> $DIR/expr-as-stmt.rs:12:6\n+  --> $DIR/expr-as-stmt.rs:13:6\n    |\n LL |     {2} + 2\n    |      ^ expected `()`, found integer\n@@ -58,7 +58,7 @@ LL |     {return 2;} + 2\n    |      ^^^^^^  ^\n \n error[E0308]: mismatched types\n-  --> $DIR/expr-as-stmt.rs:18:7\n+  --> $DIR/expr-as-stmt.rs:19:7\n    |\n LL |     { 42 } + foo;\n    |       ^^ expected `()`, found integer\n@@ -69,7 +69,7 @@ LL |     { return 42; } + foo;\n    |       ^^^^^^   ^\n \n error[E0308]: mismatched types\n-  --> $DIR/expr-as-stmt.rs:24:7\n+  --> $DIR/expr-as-stmt.rs:25:7\n    |\n LL |     { 3 } * 3\n    |       ^ expected `()`, found integer\n@@ -80,7 +80,7 @@ LL |     { return 3; } * 3\n    |       ^^^^^^  ^\n \n error[E0614]: type `{integer}` cannot be dereferenced\n-  --> $DIR/expr-as-stmt.rs:24:11\n+  --> $DIR/expr-as-stmt.rs:25:11\n    |\n LL |     { 3 } * 3\n    |     ----- ^^^"}, {"sha": "771e36e4d2c49fb1af716587ac0d5b9960b559b4", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -14,7 +14,7 @@ tracing-subscriber = { version = \"0.2\", default-features = false, features = [\"f\n regex = \"1.0\"\n serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0\"\n-rustfix = \"0.5.0\"\n+rustfix = \"0.6.0\"\n lazy_static = \"1.0\"\n walkdir = \"2\"\n glob = \"0.3.0\""}, {"sha": "6a1faee1d8e097bd01d80cbc03a0c7203d6bf635", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -3328,8 +3328,11 @@ impl<'test> TestCx<'test> {\n                 },\n             )\n             .unwrap();\n-            let fixed_code = apply_suggestions(&unfixed_code, &suggestions).unwrap_or_else(|_| {\n-                panic!(\"failed to apply suggestions for {:?} with rustfix\", self.testpaths.file)\n+            let fixed_code = apply_suggestions(&unfixed_code, &suggestions).unwrap_or_else(|e| {\n+                panic!(\n+                    \"failed to apply suggestions for {:?} with rustfix: {}\",\n+                    self.testpaths.file, e\n+                )\n             });\n \n             errors += self.compare_output(\"fixed\", &fixed_code, &expected_fixed);"}, {"sha": "ea587210b4f4e786fa485fd24863b274bcb642dd", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a5b97adb4da4b0f913d19765e91d4322ef6542e/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=6a5b97adb4da4b0f913d19765e91d4322ef6542e", "patch": "@@ -287,6 +287,7 @@ pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n     check_exceptions(&metadata, EXCEPTIONS, runtime_ids, bad);\n     check_dependencies(&metadata, PERMITTED_DEPENDENCIES, RESTRICTED_DEPENDENCY_CRATES, bad);\n     check_crate_duplicate(&metadata, FORBIDDEN_TO_HAVE_DUPLICATES, bad);\n+    check_rustfix(&metadata, bad);\n \n     // Check rustc_codegen_cranelift independently as it has it's own workspace.\n     let mut cmd = cargo_metadata::MetadataCommand::new();\n@@ -547,3 +548,22 @@ fn normal_deps_of_r<'a>(\n         normal_deps_of_r(resolve, &dep.pkg, result);\n     }\n }\n+\n+fn check_rustfix(metadata: &Metadata, bad: &mut bool) {\n+    let cargo = pkg_from_name(metadata, \"cargo\");\n+    let compiletest = pkg_from_name(metadata, \"compiletest\");\n+    let cargo_deps = deps_of(metadata, &cargo.id);\n+    let compiletest_deps = deps_of(metadata, &compiletest.id);\n+    let cargo_rustfix = cargo_deps.iter().find(|p| p.name == \"rustfix\").unwrap();\n+    let compiletest_rustfix = compiletest_deps.iter().find(|p| p.name == \"rustfix\").unwrap();\n+    if cargo_rustfix.version != compiletest_rustfix.version {\n+        tidy_error!(\n+            bad,\n+            \"cargo's rustfix version {} does not match compiletest's rustfix version {}\\n\\\n+             rustfix should be kept in sync, update the cargo side first, and then update \\\n+             compiletest along with cargo.\",\n+            cargo_rustfix.version,\n+            compiletest_rustfix.version\n+        );\n+    }\n+}"}]}