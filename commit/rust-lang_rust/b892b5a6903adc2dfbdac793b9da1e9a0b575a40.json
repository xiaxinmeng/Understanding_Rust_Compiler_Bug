{"sha": "b892b5a6903adc2dfbdac793b9da1e9a0b575a40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4OTJiNWE2OTAzYWRjMmRmYmRhYzc5M2I5ZGExZTlhMGI1NzVhNDA=", "commit": {"author": {"name": "Boris Egorov", "email": "egorov@linux.com", "date": "2015-11-25T07:59:21Z"}, "committer": {"name": "Boris Egorov", "email": "egorov@linux.com", "date": "2015-11-25T08:07:43Z"}, "message": "trpl: Fix example logic in error handling chapter", "tree": {"sha": "a6887e9c8547b243655b31020bb5340f27ca5b7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6887e9c8547b243655b31020bb5340f27ca5b7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b892b5a6903adc2dfbdac793b9da1e9a0b575a40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b892b5a6903adc2dfbdac793b9da1e9a0b575a40", "html_url": "https://github.com/rust-lang/rust/commit/b892b5a6903adc2dfbdac793b9da1e9a0b575a40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b892b5a6903adc2dfbdac793b9da1e9a0b575a40/comments", "author": {"login": "JIghtuse", "id": 908960, "node_id": "MDQ6VXNlcjkwODk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/908960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JIghtuse", "html_url": "https://github.com/JIghtuse", "followers_url": "https://api.github.com/users/JIghtuse/followers", "following_url": "https://api.github.com/users/JIghtuse/following{/other_user}", "gists_url": "https://api.github.com/users/JIghtuse/gists{/gist_id}", "starred_url": "https://api.github.com/users/JIghtuse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JIghtuse/subscriptions", "organizations_url": "https://api.github.com/users/JIghtuse/orgs", "repos_url": "https://api.github.com/users/JIghtuse/repos", "events_url": "https://api.github.com/users/JIghtuse/events{/privacy}", "received_events_url": "https://api.github.com/users/JIghtuse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JIghtuse", "id": 908960, "node_id": "MDQ6VXNlcjkwODk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/908960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JIghtuse", "html_url": "https://github.com/JIghtuse", "followers_url": "https://api.github.com/users/JIghtuse/followers", "following_url": "https://api.github.com/users/JIghtuse/following{/other_user}", "gists_url": "https://api.github.com/users/JIghtuse/gists{/gist_id}", "starred_url": "https://api.github.com/users/JIghtuse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JIghtuse/subscriptions", "organizations_url": "https://api.github.com/users/JIghtuse/orgs", "repos_url": "https://api.github.com/users/JIghtuse/repos", "events_url": "https://api.github.com/users/JIghtuse/events{/privacy}", "received_events_url": "https://api.github.com/users/JIghtuse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fa2c6ca31ae7ad8beb35ed11493339684786a10", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fa2c6ca31ae7ad8beb35ed11493339684786a10", "html_url": "https://github.com/rust-lang/rust/commit/7fa2c6ca31ae7ad8beb35ed11493339684786a10"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "af6846e65de67ec66945d33b75ee543e31485d7f", "filename": "src/doc/book/error-handling.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b892b5a6903adc2dfbdac793b9da1e9a0b575a40/src%2Fdoc%2Fbook%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/b892b5a6903adc2dfbdac793b9da1e9a0b575a40/src%2Fdoc%2Fbook%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ferror-handling.md?ref=b892b5a6903adc2dfbdac793b9da1e9a0b575a40", "patch": "@@ -681,6 +681,7 @@ fn double_arg(mut argv: env::Args) -> Result<i32, String> {\n     argv.nth(1)\n         .ok_or(\"Please give at least one argument\".to_owned())\n         .and_then(|arg| arg.parse::<i32>().map_err(|err| err.to_string()))\n+        .map(|n| 2 * n)\n }\n \n fn main() {"}]}