{"sha": "0997388b8719cda70c73758056496ab210726572", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OTczODhiODcxOWNkYTcwYzczNzU4MDU2NDk2YWIyMTA3MjY1NzI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-07T17:12:06Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-08T21:09:42Z"}, "message": "normalize rustc::hir::intravisit imports", "tree": {"sha": "e2c106c6e25a4868dc18c0ce42b8d5d47a91bfa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2c106c6e25a4868dc18c0ce42b8d5d47a91bfa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0997388b8719cda70c73758056496ab210726572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0997388b8719cda70c73758056496ab210726572", "html_url": "https://github.com/rust-lang/rust/commit/0997388b8719cda70c73758056496ab210726572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0997388b8719cda70c73758056496ab210726572/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "922f8b70f2201279d711d255610b8410729e22c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/922f8b70f2201279d711d255610b8410729e22c7", "html_url": "https://github.com/rust-lang/rust/commit/922f8b70f2201279d711d255610b8410729e22c7"}], "stats": {"total": 105, "additions": 50, "deletions": 55}, "files": [{"sha": "06b7b3194defd020fea99afe3f6041f79674dfd4", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -4,7 +4,6 @@\n //! conflicts between multiple such attributes attached to the same\n //! item.\n \n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::map::Map;\n use crate::lint::builtin::UNUSED_ATTRIBUTES;\n use crate::ty::query::Providers;\n@@ -14,6 +13,7 @@ use errors::struct_span_err;\n use rustc_error_codes::*;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::DUMMY_HIR_ID;\n use rustc_hir::{self, HirId, Item, ItemKind, TraitItem, TraitItemKind};\n use rustc_span::symbol::sym;"}, {"sha": "016fc939a7a172bfb17d2230b9368efd46704879", "filename": "src/librustc/hir/map/blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -11,9 +11,9 @@\n //! nested within a uniquely determined `FnLike`), and users can ask\n //! for the `Code` associated with a particular NodeId.\n \n-use crate::hir::intravisit::FnKind;\n use crate::hir::map::Map;\n use rustc_hir as hir;\n+use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Expr, FnDecl, Node};\n use rustc_span::Span;\n use syntax::ast::{Attribute, Ident};"}, {"sha": "b6be4bb00199656f8948306b21d37a200f56271b", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,5 +1,4 @@\n use crate::dep_graph::{DepGraph, DepKind, DepNode, DepNodeIndex};\n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::map::definitions::{self, DefPathHash};\n use crate::hir::map::{Entry, HirEntryMap, Map};\n use crate::ich::StableHashingContext;\n@@ -11,6 +10,7 @@ use rustc_data_structures::svh::Svh;\n use rustc_hir as hir;\n use rustc_hir::def_id::CRATE_DEF_INDEX;\n use rustc_hir::def_id::{CrateNum, DefIndex, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n use rustc_index::vec::IndexVec;\n use rustc_session::{CrateDisambiguator, Session};"}, {"sha": "76e42b8af2874a674a2a4fbd8af6abfd9f6c8a24", "filename": "src/librustc/hir/map/hir_id_validator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,9 +1,9 @@\n-use crate::hir::intravisit;\n use crate::hir::map::Map;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::{par_iter, Lock, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n+use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirId, ItemLocalId};\n "}, {"sha": "e18ab7848feaae9c3707b3031fa1903721288b95", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -4,13 +4,13 @@ pub use self::definitions::{\n };\n \n use crate::dep_graph::{DepGraph, DepKind, DepNode, DepNodeIndex};\n-use crate::hir::intravisit;\n use crate::middle::cstore::CrateStoreDyn;\n use crate::ty::query::Providers;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n+use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::print::Nested;\n use rustc_hir::*;"}, {"sha": "97c14dd7e00541f180cbc407dc07d0ed11eca243", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -7,8 +7,6 @@ pub mod exports;\n pub mod map;\n pub mod upvars;\n \n-pub use rustc_hir::intravisit;\n-\n use crate::ty::query::Providers;\n \n pub fn provide(providers: &mut Providers<'_>) {"}, {"sha": "4ca294f48615536a01498979d659079c165fe092", "filename": "src/librustc/hir/upvars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fupvars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fhir%2Fupvars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fupvars.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,12 +1,12 @@\n //! Upvar (closure capture) collection from cross-body HIR uses of `Res::Local`s.\n \n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::map::Map;\n use crate::ty::query::Providers;\n use crate::ty::TyCtxt;\n use rustc_data_structures::fx::{FxHashSet, FxIndexMap};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{self, HirId};\n use rustc_span::Span;\n "}, {"sha": "16cfaec5ee91b852480cd5029fc5fd4d835ed2cb", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,4 +1,3 @@\n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::map::Map;\n use crate::infer::type_variable::TypeVariableOriginKind;\n use crate::infer::InferCtxt;\n@@ -7,6 +6,7 @@ use crate::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FunctionRetTy, HirId, Local, Pat};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::symbol::kw;"}, {"sha": "8e2592b5318855a9ac70ad62c69a1ac12828cc30", "filename": "src/librustc/infer/error_reporting/nice_region_error/find_anon_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,9 +1,9 @@\n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::map::Map;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::middle::resolve_lifetime as rl;\n use crate::ty::{self, Region, TyCtxt};\n use rustc_hir as hir;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::Node;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "3f43800590353dea0c72e619a27a73707c16e376", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -21,11 +21,10 @@\n pub use self::Level::*;\n pub use self::LintSource::*;\n \n-use rustc_data_structures::sync;\n-\n use crate::lint::builtin::BuiltinLintDiagnostics;\n use crate::ty::TyCtxt;\n use errors::{DiagnosticBuilder, DiagnosticId};\n+use rustc_data_structures::sync;\n use rustc_hir as hir;\n use rustc_session::node_id::NodeMap;\n use rustc_session::{DiagnosticMessageId, Session};\n@@ -109,13 +108,13 @@ macro_rules! late_lint_methods {\n             fn check_where_predicate(a: &$hir hir::WherePredicate<$hir>);\n             fn check_poly_trait_ref(a: &$hir hir::PolyTraitRef<$hir>, b: hir::TraitBoundModifier);\n             fn check_fn(\n-                a: $crate::hir::intravisit::FnKind<$hir>,\n+                a: rustc_hir::intravisit::FnKind<$hir>,\n                 b: &$hir hir::FnDecl<$hir>,\n                 c: &$hir hir::Body<$hir>,\n                 d: Span,\n                 e: hir::HirId);\n             fn check_fn_post(\n-                a: $crate::hir::intravisit::FnKind<$hir>,\n+                a: rustc_hir::intravisit::FnKind<$hir>,\n                 b: &$hir hir::FnDecl<$hir>,\n                 c: &$hir hir::Body<$hir>,\n                 d: Span,"}, {"sha": "89f385a51bc6a186339efa84650430854f57b700", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -3,14 +3,13 @@\n use crate::middle::lang_items;\n use crate::session::config;\n \n-use crate::hir::intravisit;\n-use crate::hir::intravisit::{NestedVisitorMap, Visitor};\n use crate::hir::map::Map;\n use crate::ty::TyCtxt;\n use errors::struct_span_err;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::PanicStrategy;"}, {"sha": "385153b62ce8296082bb2119f9749f89ee273f1f", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -36,7 +36,6 @@\n \n use rustc::arena::Arena;\n use rustc::dep_graph::DepGraph;\n-use rustc::hir::intravisit;\n use rustc::hir::map::definitions::{DefKey, DefPathData, Definitions};\n use rustc::hir::map::Map;\n use rustc::lint;\n@@ -52,6 +51,7 @@ use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};\n use rustc_hir::def_id::{DefId, DefIdMap, DefIndex, CRATE_DEF_INDEX};\n+use rustc_hir::intravisit;\n use rustc_hir::{ConstArg, GenericArg, ParamName};\n use rustc_index::vec::IndexVec;\n use rustc_session::config::nightly_options;"}, {"sha": "9490128e32d6a3e6eed9edcb46c2e0dc2f89a939", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -36,13 +36,13 @@\n use graphviz as dot;\n use rustc::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n use rustc::dep_graph::{DepGraphQuery, DepKind, DepNode};\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;"}, {"sha": "ddfed53fa33491895e08504ae7727129af63ad74", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -14,13 +14,13 @@\n //! the required condition is not met.\n \n use rustc::dep_graph::{label_strs, DepNode};\n-use rustc::hir::intravisit;\n use rustc::hir::map::Map;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::Node as HirNode;\n use rustc_hir::{ImplItemKind, ItemKind as HirItem, TraitItemKind};"}, {"sha": "23740af525971e98d34e0b8b5cd1811cce7bc462", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1089,7 +1089,7 @@ impl TypeAliasBounds {\n         // bound.  Let's see if this type does that.\n \n         // We use a HIR visitor to walk the type.\n-        use rustc::hir::intravisit::{self, Visitor};\n+        use rustc_hir::intravisit::{self, Visitor};\n         struct WalkAssocTypes<'a, 'db> {\n             err: &'a mut DiagnosticBuilder<'db>,\n         }"}, {"sha": "a37e3be9ced92fedc4a0074dc2bea6e3dd9bde86", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -14,8 +14,6 @@\n //! upon. As the ast is traversed, this keeps track of the current lint level\n //! for all lint attributes.\n \n-use rustc::hir::intravisit as hir_visit;\n-use rustc::hir::intravisit::Visitor;\n use rustc::hir::map::Map;\n use rustc::lint::LateContext;\n use rustc::lint::LintPass;\n@@ -24,6 +22,8 @@ use rustc::ty::{self, TyCtxt};\n use rustc_data_structures::sync::{join, par_iter, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::intravisit as hir_visit;\n+use rustc_hir::intravisit::Visitor;\n use rustc_span::Span;\n use std::slice;\n use syntax::ast;"}, {"sha": "3d3e57fe2bae30bcd14038c660dbb544821fab67", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,10 +1,10 @@\n-use rustc::hir::intravisit;\n use rustc::hir::map::Map;\n use rustc::lint::{LintLevelMap, LintLevelSets, LintLevelsBuilder, LintStore};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n+use rustc_hir::intravisit;\n use syntax::ast;\n \n pub use rustc_session::lint::{FutureIncompatibleInfo, Level, Lint, LintId};"}, {"sha": "13e57ecf1469c4a59de3437b786bd90b903ae92a", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,10 +1,10 @@\n use lint::{EarlyContext, LateContext, LintArray, LintContext};\n use lint::{EarlyLintPass, LateLintPass, LintPass};\n-use rustc::hir::intravisit::FnKind;\n use rustc::lint;\n use rustc::ty;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::intravisit::FnKind;\n use rustc_hir::{GenericParamKind, PatKind};\n use rustc_span::symbol::sym;\n use rustc_span::{symbol::Ident, BytePos, Span};"}, {"sha": "952d3bb8582768bc87249424d773b4a402b28100", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -36,9 +36,8 @@ use syntax::ast;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n \n-use rustc::hir::intravisit;\n-use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc_hir as hir;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n \n struct EncodeContext<'tcx> {"}, {"sha": "ce0c081bc160863d90f00acbd04e3048ac62201e", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -4,7 +4,6 @@ use super::_match::{expand_pattern, is_useful, MatchCheckCtxt, Matrix, PatStack}\n \n use super::{PatCtxt, PatKind, PatternError};\n \n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::session::Session;\n@@ -15,6 +14,7 @@ use rustc_errors::{error_code, struct_span_err, Applicability, DiagnosticBuilder\n use rustc_hir as hir;\n use rustc_hir::def::*;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{HirId, Pat};\n use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span};"}, {"sha": "a58d17569ef7181060d08335a57bc7900e8aae49", "filename": "src/librustc_mir/lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flints.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,10 +1,10 @@\n-use rustc::hir::intravisit::FnKind;\n use rustc::hir::map::blocks::FnLikeNode;\n use rustc::lint::builtin::UNCONDITIONAL_RECURSION;\n use rustc::mir::{self, Body, TerminatorKind};\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, AssocItem, AssocItemContainer, Instance, TyCtxt};\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::FnKind;\n use rustc_index::bit_set::BitSet;\n \n pub fn check(tcx: TyCtxt<'tcx>, body: &Body<'tcx>, def_id: DefId) {"}, {"sha": "fd0373fb29cecf24676388a54ab7f61080ae9e87", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,4 +1,3 @@\n-use rustc::hir::intravisit;\n use rustc::hir::map::Map;\n use rustc::lint::builtin::{SAFE_PACKED_BORROWS, UNUSED_UNSAFE};\n use rustc::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n@@ -10,6 +9,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit;\n use rustc_hir::Node;\n use rustc_span::symbol::{sym, Symbol};\n "}, {"sha": "a2f76042ea72b965e06ac2b0f7cf64d852a8d6ce", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,12 +1,12 @@\n use crate::{build, shim};\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::mir::{BodyAndCache, ConstQualifs, MirPhase, Promoted};\n use rustc::ty::query::Providers;\n use rustc::ty::steal::Steal;\n use rustc::ty::{InstanceDef, TyCtxt, TypeFoldable};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdSet, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_index::vec::IndexVec;\n use rustc_span::Span;\n use std::borrow::Cow;"}, {"sha": "47e6e5ccc24fe2cc6666c419a8cb6da4b352c2f5", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -8,14 +8,14 @@\n //! through, but errors for structured control flow in a `const` should be emitted here.\n \n use errors::struct_span_err;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::session::config::nightly_options;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_error_codes::*;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::{sym, Span, Symbol};\n use syntax::ast::Mutability;\n use syntax::feature_gate::feature_err;"}, {"sha": "f626a5f8cb0d1bd3c31f111c9a269275c991514a", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -2,7 +2,6 @@\n // closely. The idea is that all reachable symbols are live, codes called\n // from live codes are live, and everything else is dead.\n \n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n@@ -12,6 +11,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{Node, PatKind, TyKind};\n "}, {"sha": "b6ca2b3a595db4d052557ad7af0f6e882bb7d907", "filename": "src/librustc_passes/hir_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fhir_stats.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -2,11 +2,11 @@\n // pieces of AST and HIR. The resulting numbers are good approximations but not\n // completely accurate (some things might be counted twice, others missed).\n \n-use rustc::hir::intravisit as hir_visit;\n use rustc::hir::map::Map;\n use rustc::util::common::to_readable_str;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n+use rustc_hir::intravisit as hir_visit;\n use rustc_hir::HirId;\n use rustc_span::Span;\n use syntax::ast::{self, AttrId, NodeId};"}, {"sha": "ae8ac2e2c2e358ea601797ecc2799d5454ad24d2", "filename": "src/librustc_passes/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fintrinsicck.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,12 +1,12 @@\n use errors::struct_span_err;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::ty::layout::{LayoutError, Pointer, SizeSkeleton, VariantIdx};\n use rustc::ty::query::Providers;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_index::vec::Idx;\n use rustc_span::{sym, Span};\n use rustc_target::spec::abi::Abi::RustIntrinsic;"}, {"sha": "e7d490d6d8ddbe332f811d4a067f802d443a3f1b", "filename": "src/librustc_passes/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib_features.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -5,12 +5,12 @@\n // (unlike lang features), which means we need to collect them instead.\n \n use errors::struct_span_err;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::middle::lib_features::LibFeatures;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::symbol::Symbol;\n use rustc_span::{sym, Span};\n use syntax::ast::{Attribute, MetaItem, MetaItemKind};"}, {"sha": "5c1bc4d1eaa87f1d5babe8111e741579547bd9fa", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -97,7 +97,6 @@ use self::LiveNodeKind::*;\n use self::VarKind::*;\n \n use errors::Applicability;\n-use rustc::hir::intravisit::{self, FnKind, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::ty::query::Providers;\n@@ -106,6 +105,7 @@ use rustc_data_structures::fx::FxIndexMap;\n use rustc_hir as hir;\n use rustc_hir::def::*;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{Expr, HirId, HirIdMap, HirIdSet, Node};\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "333b39c3bb30277027d2d26260bd5cdfe41e2d58", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -3,12 +3,12 @@ use Context::*;\n use rustc::session::Session;\n \n use errors::{struct_span_err, Applicability};\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Destination, Movability, Node};\n use rustc_span::Span;\n "}, {"sha": "5ce677f52cea670a016596344af2f270a0aad1ce", "filename": "src/librustc_passes/reachable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Freachable.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -5,8 +5,6 @@\n // makes all other generics or inline functions that it references\n // reachable as well.\n \n-use rustc::hir::intravisit;\n-use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc::middle::privacy;\n@@ -19,6 +17,8 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::intravisit;\n+use rustc_hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirIdSet, Node};\n use rustc_target::spec::abi::Abi;"}, {"sha": "e79ca5c78d6d64bd5e8dc31961e2b40db38d82d8", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -6,14 +6,14 @@\n //!\n //! [rustc guide]: https://rust-lang.github.io/rustc-guide/mir/borrowck.html\n \n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::middle::region::*;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Arm, Block, Expr, Local, Node, Pat, PatKind, Stmt};\n use rustc_index::vec::Idx;\n use rustc_span::source_map;"}, {"sha": "be098543a2ff2cb837c2e500b66f7b029465de8d", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -2,7 +2,6 @@\n //! propagating default levels lexically from parent to children ast nodes.\n \n use errors::struct_span_err;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::middle::privacy::AccessLevels;\n@@ -15,6 +14,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Generics, HirId, Item, StructField, Variant};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;"}, {"sha": "a96d59340237defd64630410ca9053e9962321a2", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -4,7 +4,6 @@\n #![recursion_limit = \"256\"]\n \n use rustc::bug;\n-use rustc::hir::intravisit::{self, DeepVisitor, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::middle::privacy::{AccessLevel, AccessLevels};\n@@ -17,6 +16,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, DeepVisitor, NestedVisitorMap, Visitor};\n use rustc_hir::{AssocItemKind, HirIdSet, Node, PatKind};\n use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "469e1b9aa62077e3c2be9a32eb03b8afb930b765", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -6,7 +6,6 @@\n //! way. Therefore, we break lifetime name resolution into a separate pass.\n \n use errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::lint;\n use rustc::middle::resolve_lifetime::*;\n@@ -17,6 +16,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{GenericArg, GenericParam, LifetimeName, Node, ParamName, QPath};\n use rustc_hir::{GenericParamKind, HirIdMap, HirIdSet, LifetimeParamKind};\n use rustc_span::symbol::{kw, sym};"}, {"sha": "4b4fa4b7147fc0a780109ab8c2a57c4b3e440e99", "filename": "src/librustc_traits/lowering/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fmod.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,6 +1,5 @@\n mod environment;\n \n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::definitions::DefPathData;\n use rustc::hir::map::Map;\n use rustc::traits::{\n@@ -13,6 +12,7 @@ use rustc::ty::{self, List, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::symbol::sym;\n use syntax::ast;\n "}, {"sha": "0233b68a7ce21c30cac8aa7eb3ea01178806cf25", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -10,7 +10,6 @@ use crate::namespace::Namespace;\n use crate::require_c_abi_if_c_variadic;\n use crate::util::common::ErrorReported;\n use errors::{struct_span_err, Applicability, DiagnosticId};\n-use rustc::hir::intravisit::Visitor;\n use rustc::lint::builtin::AMBIGUOUS_ASSOCIATED_ITEMS;\n use rustc::traits;\n use rustc::traits::astconv_object_safety_violations;\n@@ -23,6 +22,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::Visitor;\n use rustc_hir::print;\n use rustc_hir::{ExprKind, GenericArg, GenericArgs};\n use rustc_span::symbol::sym;"}, {"sha": "449c2e90ff202cb1d224f51f03eb6d6288eeb5c0", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,5 +1,4 @@\n use errors::{pluralize, struct_span_err, Applicability, DiagnosticId};\n-use rustc::hir::intravisit;\n use rustc::hir::map::Map;\n use rustc::infer::{self, InferOk};\n use rustc::traits::{self, ObligationCause, ObligationCauseCode, Reveal};\n@@ -10,6 +9,7 @@ use rustc::ty::{self, GenericParamDefKind, TyCtxt};\n use rustc::util::common::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::intravisit;\n use rustc_hir::{GenericParamKind, ImplItemKind, TraitItemKind};\n use rustc_span::Span;\n "}, {"sha": "9d8805f225d7e1452816d10dddd764d83d7da4e5", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -4,14 +4,14 @@\n //! types computed here.\n \n use super::FnCtxt;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::middle::region::{self, YieldData};\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Expr, ExprKind, Pat, PatKind};\n use rustc_span::Span;\n "}, {"sha": "4f55d9ab70edee3eee10a547bc359668de00b5f8", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -5,7 +5,6 @@ use crate::check::FnCtxt;\n use crate::middle::lang_items::FnOnceTraitLangItem;\n use crate::namespace::Namespace;\n use errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n-use rustc::hir::intravisit;\n use rustc::hir::map as hir_map;\n use rustc::hir::map::Map;\n use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n@@ -16,6 +15,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::intravisit;\n use rustc_hir::{ExprKind, Node, QPath};\n use rustc_span::{source_map, FileName, Span};\n use syntax::ast;"}, {"sha": "f10edc1a468b40cd60a68c091ac278ecdaa23f0c", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -91,7 +91,6 @@ use crate::astconv::{AstConv, PathSeg};\n use crate::middle::lang_items;\n use crate::namespace::Namespace;\n use errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};\n use rustc::infer::error_reporting::TypeAnnotationNeeded::E0282;\n@@ -119,6 +118,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{ExprKind, GenericArg, HirIdMap, ItemKind, Node, PatKind, QPath};\n use rustc_index::vec::Idx;"}, {"sha": "967741092febe41b6b277a382d2bd506e0739a86", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -76,7 +76,6 @@ use crate::check::dropck;\n use crate::check::FnCtxt;\n use crate::mem_categorization as mc;\n use crate::middle::region;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::infer::outlives::env::OutlivesEnvironment;\n use rustc::infer::{self, RegionObligation, SuppressRegionErrors};\n@@ -85,6 +84,7 @@ use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::PatKind;\n use rustc_span::Span;\n use std::mem;"}, {"sha": "9b4bd6d78ff28896aacc23bdacec4444b8eac70a", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -35,14 +35,14 @@ use super::FnCtxt;\n use crate::expr_use_visitor as euv;\n use crate::mem_categorization as mc;\n use crate::mem_categorization::PlaceBase;\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::infer::UpvarRegion;\n use rustc::ty::{self, Ty, TyCtxt, UpvarSubsts};\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::def_id::LocalDefId;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::Span;\n use syntax::ast;\n "}, {"sha": "b4798fb67f80f42ae99ade0af70c0cd4ba44f71b", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -4,7 +4,6 @@\n \n use crate::check::FnCtxt;\n \n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc::infer::InferCtxt;\n@@ -14,6 +13,7 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIdSet, DefIndex};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "84f2e186eaa356fb90adc8c0ecde323020873097", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -21,7 +21,6 @@ use crate::lint;\n use crate::middle::resolve_lifetime as rl;\n use crate::middle::weak_lang_items;\n use errors::{struct_span_err, Applicability, StashKey};\n-use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::map::Map;\n use rustc::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc::mir::mono::Linkage;\n@@ -38,6 +37,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{GenericParamKind, Node, Unsafety};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "94e31108901eae8f12ef2a53f2103aad2997c8f6", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -1,10 +1,10 @@\n-use rustc::hir::intravisit;\n use rustc::hir::map::Map;\n use rustc::session::{self, config, DiagnosticOutput};\n use rustc::util::common::ErrorReported;\n use rustc_data_structures::sync::Lrc;\n use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n+use rustc_hir::intravisit;\n use rustc_interface::interface;\n use rustc_span::edition::Edition;\n use rustc_span::source_map::SourceMap;"}, {"sha": "abb2e93757ed395777406a1ed94805c49b6ec5de", "filename": "src/test/ui-fulldeps/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0997388b8719cda70c73758056496ab210726572/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0997388b8719cda70c73758056496ab210726572/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs?ref=0997388b8719cda70c73758056496ab210726572", "patch": "@@ -8,7 +8,7 @@ extern crate rustc_hir;\n extern crate rustc_span;\n extern crate syntax;\n \n-use rustc::hir::intravisit;\n+use rustc_hir::intravisit;\n use rustc_hir as hir;\n use rustc_hir::Node;\n use rustc::lint::{LateContext, LintPass, LintArray, LateLintPass, LintContext};"}]}