{"sha": "636728e39464b678646bdedfc47327898b464a66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNjcyOGUzOTQ2NGI2Nzg2NDZiZGVkZmM0NzMyNzg5OGI0NjRhNjY=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-10-13T17:25:17Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-10-14T10:40:53Z"}, "message": "x.py setup: Avoid infinite loop if stdin is /dev/null\n\nEOF is not an error; it just causes read_line to produce \"\".\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "62fb6a82b2bf90b92fbaf8ab3d9dab4f45be29bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62fb6a82b2bf90b92fbaf8ab3d9dab4f45be29bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/636728e39464b678646bdedfc47327898b464a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/636728e39464b678646bdedfc47327898b464a66", "html_url": "https://github.com/rust-lang/rust/commit/636728e39464b678646bdedfc47327898b464a66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/636728e39464b678646bdedfc47327898b464a66/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9058571ce97dc8f3e5551ad38d1d59c2caa1c48", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9058571ce97dc8f3e5551ad38d1d59c2caa1c48", "html_url": "https://github.com/rust-lang/rust/commit/e9058571ce97dc8f3e5551ad38d1d59c2caa1c48"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "a281061ace15b9338fa2428618807652448482c4", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/636728e39464b678646bdedfc47327898b464a66/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/636728e39464b678646bdedfc47327898b464a66/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=636728e39464b678646bdedfc47327898b464a66", "patch": "@@ -152,6 +152,10 @@ pub fn interactive_path() -> io::Result<Profile> {\n         io::stdout().flush()?;\n         let mut input = String::new();\n         io::stdin().read_line(&mut input)?;\n+        if input == \"\" {\n+            eprintln!(\"EOF on stdin, when expecting answer to question.  Giving up.\");\n+            std::process::exit(1);\n+        }\n         break match parse_with_abbrev(&input) {\n             Ok(profile) => profile,\n             Err(err) => {"}]}