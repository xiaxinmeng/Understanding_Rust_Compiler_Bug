{"sha": "78d9088e7784849dbfe14f1e550a08111d547622", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZDkwODhlNzc4NDg0OWRiZmUxNGYxZTU1MGEwODExMWQ1NDc2MjI=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-24T21:26:21Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-10T11:52:07Z"}, "message": "Replace is_doc_reachable with is_public", "tree": {"sha": "6b4b3ca0ef14c44e981c5686b62a60402cc31e0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b4b3ca0ef14c44e981c5686b62a60402cc31e0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78d9088e7784849dbfe14f1e550a08111d547622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78d9088e7784849dbfe14f1e550a08111d547622", "html_url": "https://github.com/rust-lang/rust/commit/78d9088e7784849dbfe14f1e550a08111d547622", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78d9088e7784849dbfe14f1e550a08111d547622/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c36e0c04243c2aa5e6fb9289345e9215ea0ebde5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c36e0c04243c2aa5e6fb9289345e9215ea0ebde5", "html_url": "https://github.com/rust-lang/rust/commit/c36e0c04243c2aa5e6fb9289345e9215ea0ebde5"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "64cffaec2eaf3a6fc5ba61aecfab96bf8ffe0e12", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=78d9088e7784849dbfe14f1e550a08111d547622", "patch": "@@ -5,8 +5,6 @@ use rustc::ty::subst::Subst;\n use rustc::infer::InferOk;\n use syntax_pos::DUMMY_SP;\n \n-use crate::core::DocAccessLevels;\n-\n use super::*;\n \n pub struct BlanketImplFinder<'a, 'tcx> {\n@@ -30,7 +28,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n         debug!(\"get_blanket_impls({:?})\", ty);\n         let mut impls = Vec::new();\n         for &trait_def_id in self.cx.all_traits.iter() {\n-            if !self.cx.renderinfo.borrow().access_levels.is_doc_reachable(trait_def_id) ||\n+            if !self.cx.renderinfo.borrow().access_levels.is_public(trait_def_id) ||\n                self.cx.generated_synthetics\n                       .borrow_mut()\n                       .get(&(ty, trait_def_id))"}, {"sha": "d2a6dcf19bcca2b51cdab0dd5adf4748dd46508b", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=78d9088e7784849dbfe14f1e550a08111d547622", "patch": "@@ -14,7 +14,7 @@ use rustc_metadata::cstore::LoadedMacro;\n use rustc::ty;\n use rustc::util::nodemap::FxHashSet;\n \n-use crate::core::{DocContext, DocAccessLevels};\n+use crate::core::DocContext;\n use crate::doctree;\n use crate::clean::{\n     self,\n@@ -326,7 +326,7 @@ pub fn build_impl(cx: &DocContext<'_>, did: DefId, attrs: Option<Attrs<'_>>,\n     // reachable in rustdoc generated documentation\n     if !did.is_local() {\n         if let Some(traitref) = associated_trait {\n-            if !cx.renderinfo.borrow().access_levels.is_doc_reachable(traitref.def_id) {\n+            if !cx.renderinfo.borrow().access_levels.is_public(traitref.def_id) {\n                 return\n             }\n         }\n@@ -347,7 +347,7 @@ pub fn build_impl(cx: &DocContext<'_>, did: DefId, attrs: Option<Attrs<'_>>,\n     // reachable in rustdoc generated documentation\n     if !did.is_local() {\n         if let Some(did) = for_.def_id() {\n-            if !cx.renderinfo.borrow().access_levels.is_doc_reachable(did) {\n+            if !cx.renderinfo.borrow().access_levels.is_public(did) {\n                 return\n             }\n         }"}, {"sha": "2d19cfacd964e5e94fc862cb7e477c038d80bf38", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=78d9088e7784849dbfe14f1e550a08111d547622", "patch": "@@ -178,16 +178,6 @@ impl<'tcx> DocContext<'tcx> {\n     }\n }\n \n-pub trait DocAccessLevels {\n-    fn is_doc_reachable(&self, did: DefId) -> bool;\n-}\n-\n-impl DocAccessLevels for AccessLevels<DefId> {\n-    fn is_doc_reachable(&self, did: DefId) -> bool {\n-        self.is_public(did)\n-    }\n-}\n-\n /// Creates a new diagnostic `Handler` that can be used to emit warnings and errors.\n ///\n /// If the given `error_format` is `ErrorOutputType::Json` and no `SourceMap` is given, a new one"}, {"sha": "9c22837bdae8799c2c98f79d85ce082e55f75533", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=78d9088e7784849dbfe14f1e550a08111d547622", "patch": "@@ -14,7 +14,6 @@ use rustc_target::spec::abi::Abi;\n use rustc::hir;\n \n use crate::clean::{self, PrimitiveType};\n-use crate::core::DocAccessLevels;\n use crate::html::item_type::ItemType;\n use crate::html::render::{self, cache, CURRENT_LOCATION_KEY};\n \n@@ -404,7 +403,7 @@ impl fmt::Display for clean::Path {\n \n pub fn href(did: DefId) -> Option<(String, ItemType, Vec<String>)> {\n     let cache = cache();\n-    if !did.is_local() && !cache.access_levels.is_doc_reachable(did) {\n+    if !did.is_local() && !cache.access_levels.is_public(did) {\n         return None\n     }\n "}, {"sha": "4e10b46bc8a6f05587ed3415061060b0ba0846e6", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d9088e7784849dbfe14f1e550a08111d547622/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=78d9088e7784849dbfe14f1e550a08111d547622", "patch": "@@ -10,7 +10,7 @@ use syntax_pos::{DUMMY_SP, InnerSpan, Span};\n use std::ops::Range;\n \n use crate::clean::{self, GetDefId, Item};\n-use crate::core::{DocContext, DocAccessLevels};\n+use crate::core::DocContext;\n use crate::fold::{DocFolder, StripItem};\n use crate::html::markdown::{find_testable_code, ErrorCodes, LangString};\n \n@@ -347,7 +347,7 @@ pub fn look_for_tests<'tcx>(\n         diag.emit();\n     } else if check_missing_code == false &&\n               tests.found_tests > 0 &&\n-              !cx.renderinfo.borrow().access_levels.is_doc_reachable(item.def_id) {\n+              !cx.renderinfo.borrow().access_levels.is_public(item.def_id) {\n         let mut diag = cx.tcx.struct_span_lint_hir(\n             lint::builtin::PRIVATE_DOC_TESTS,\n             hir_id,"}]}