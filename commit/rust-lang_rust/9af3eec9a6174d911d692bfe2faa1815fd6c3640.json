{"sha": "9af3eec9a6174d911d692bfe2faa1815fd6c3640", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZjNlZWM5YTYxNzRkOTExZDY5MmJmZTJmYWExODE1ZmQ2YzM2NDA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-10T19:33:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-10T19:33:00Z"}, "message": "Rollup merge of #67154 - kraai:alloc-typos, r=Dylan-DPC\n\nFix typos in src/libcore/alloc.rs docs", "tree": {"sha": "fe50e4b308957b50416350d0214ca4af981faca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe50e4b308957b50416350d0214ca4af981faca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9af3eec9a6174d911d692bfe2faa1815fd6c3640", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd7/LsCRBK7hj4Ov3rIwAAdHIIAGaLvTIKfqATHnRCjE3rwlks\nEgAsTWKD6t4DFCrzQ839QooUsYA3xZv4zI88eS468VOSLJ0FizzG9+pB+Z7+/Cbj\niVWrHW6nsHxO+c2wM5jAqMKGsaN7/Bbq+W16J0AGsclqTsmZgYgmjekDF+Yj6C4s\nGWoui90JuQTPiIMdk778kcRVrT3btIZkFFXNDXQ5nf7tWHrI2b4GaI2QAFu0yQff\nNfmF57UGEZx4mROORHEQXTrpcc2PCqCAfEhUdSeTGN7UC4Etul01xAC11MQ/sX71\nNG/HvDD3m4tEFvEnka7NFpd+l+pxoIFnjVOOfs2juXdm264hH1ZFl8Ns2chQbc4=\n=MGpS\n-----END PGP SIGNATURE-----\n", "payload": "tree fe50e4b308957b50416350d0214ca4af981faca9\nparent 071acdf88e32beadea00788b28b0c67aa73b6768\nparent 9e8505d79e6f44803b7b75b8405b193e1f63dab6\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1576006380 +0900\ncommitter GitHub <noreply@github.com> 1576006380 +0900\n\nRollup merge of #67154 - kraai:alloc-typos, r=Dylan-DPC\n\nFix typos in src/libcore/alloc.rs docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9af3eec9a6174d911d692bfe2faa1815fd6c3640", "html_url": "https://github.com/rust-lang/rust/commit/9af3eec9a6174d911d692bfe2faa1815fd6c3640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9af3eec9a6174d911d692bfe2faa1815fd6c3640/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "071acdf88e32beadea00788b28b0c67aa73b6768", "url": "https://api.github.com/repos/rust-lang/rust/commits/071acdf88e32beadea00788b28b0c67aa73b6768", "html_url": "https://github.com/rust-lang/rust/commit/071acdf88e32beadea00788b28b0c67aa73b6768"}, {"sha": "9e8505d79e6f44803b7b75b8405b193e1f63dab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8505d79e6f44803b7b75b8405b193e1f63dab6", "html_url": "https://github.com/rust-lang/rust/commit/9e8505d79e6f44803b7b75b8405b193e1f63dab6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4cfd6527deb0a556cef9c7db657dc5bc5ac39a83", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9af3eec9a6174d911d692bfe2faa1815fd6c3640/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9af3eec9a6174d911d692bfe2faa1815fd6c3640/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=9af3eec9a6174d911d692bfe2faa1815fd6c3640", "patch": "@@ -253,7 +253,7 @@ impl Layout {\n \n     /// Creates a layout describing the record for `self` followed by\n     /// `next`, including any necessary padding to ensure that `next`\n-    /// will be properly aligned. Note that the result layout will\n+    /// will be properly aligned. Note that the resulting layout will\n     /// satisfy the alignment properties of both `self` and `next`.\n     ///\n     /// The resulting layout will be the same as that of a C struct containing\n@@ -387,7 +387,7 @@ impl fmt::Display for CannotReallocInPlace {\n }\n \n /// A memory allocator that can be registered as the standard library\u2019s default\n-/// though the `#[global_allocator]` attributes.\n+/// through the `#[global_allocator]` attribute.\n ///\n /// Some of the methods require that a memory block be *currently\n /// allocated* via an allocator. This means that:\n@@ -458,7 +458,7 @@ pub unsafe trait GlobalAlloc {\n     /// # Errors\n     ///\n     /// Returning a null pointer indicates that either memory is exhausted\n-    /// or `layout` does not meet allocator's size or alignment constraints.\n+    /// or `layout` does not meet this allocator's size or alignment constraints.\n     ///\n     /// Implementations are encouraged to return null on memory\n     /// exhaustion rather than aborting, but this is not\n@@ -1045,7 +1045,7 @@ pub unsafe trait Alloc {\n     /// Captures a common usage pattern for allocators.\n     ///\n     /// The returned block is suitable for passing to the\n-    /// `alloc`/`realloc` methods of this allocator.\n+    /// `realloc`/`dealloc` methods of this allocator.\n     ///\n     /// Note to implementors: If this returns `Ok(ptr)`, then `ptr`\n     /// must be considered \"currently allocated\" and must be\n@@ -1111,7 +1111,7 @@ pub unsafe trait Alloc {\n     /// Captures a common usage pattern for allocators.\n     ///\n     /// The returned block is suitable for passing to the\n-    /// `alloc`/`realloc` methods of this allocator.\n+    /// `realloc`/`dealloc` methods of this allocator.\n     ///\n     /// Note to implementors: If this returns `Ok(ptr)`, then `ptr`\n     /// must be considered \"currently allocated\" and must be\n@@ -1158,7 +1158,7 @@ pub unsafe trait Alloc {\n     /// Captures a common usage pattern for allocators.\n     ///\n     /// The returned block is suitable for passing to the\n-    /// `alloc`/`realloc` methods of this allocator.\n+    /// `realloc`/`dealloc` methods of this allocator.\n     ///\n     /// # Safety\n     ///"}]}