{"sha": "1225faf1a410cbb6df347bd135fb3460cfd2a5ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMjVmYWYxYTQxMGNiYjZkZjM0N2JkMTM1ZmIzNDYwY2ZkMmE1Y2U=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-06-05T14:33:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-05T14:33:45Z"}, "message": "Rollup merge of #51183 - teiesti:rustdoc-book-termination, r=steveklabnik\n\nUpdate rustdoc book to suggest using Termination trait instead of hidden \u2018foo\u2019 function\n\nCloses #50721.\n\nI suggest that someone double-checks my English since I am not a native speaker.\n\nr? @steveklabnik", "tree": {"sha": "bcce48f79fc2a44e0fe75d1616c67e9f16367aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcce48f79fc2a44e0fe75d1616c67e9f16367aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1225faf1a410cbb6df347bd135fb3460cfd2a5ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbFp9JCRBK7hj4Ov3rIwAAdHIIAJ8tYeWpbwXYphcWfAjOWC73\n+P26RUUiO4iJi+xr9qp766WB7HyDejJ7rGEeSKFWnkH+dhZRhCpErR1XjcNXwuQg\nLrsKYOg+u9ML2JDDRBf+pSD0VavXIAexC5QJhfio5TpwUUJYSJCevRuUYc+r5RBr\nRJN5IjfMqoEZppR1OvcyEpx/EThiN1id3LNzSiaXRwMIwIbk6wZlZQlKL11zYnh1\nm5Zt4/0s6BlHOmOoZLGGm+Igaau37+3mCPdvnxXk/3s4uPVevGTO6UES647B7nYu\neLvux6QweEdqtkWoEPWPaPbUNsN+w36+T0oliY0MRNSRmJAWjV1OHt2OO0z4uaI=\n=vH/d\n-----END PGP SIGNATURE-----\n", "payload": "tree bcce48f79fc2a44e0fe75d1616c67e9f16367aa7\nparent bcba3b9968acfa1f371a57026a0563c9a7954189\nparent 089da06cc437aa4764f958ff441e79d7fca6b148\nauthor Mark Simulacrum <mark.simulacrum@gmail.com> 1528209225 -0600\ncommitter GitHub <noreply@github.com> 1528209225 -0600\n\nRollup merge of #51183 - teiesti:rustdoc-book-termination, r=steveklabnik\n\nUpdate rustdoc book to suggest using Termination trait instead of hidden \u2018foo\u2019 function\n\nCloses #50721.\n\nI suggest that someone double-checks my English since I am not a native speaker.\n\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1225faf1a410cbb6df347bd135fb3460cfd2a5ce", "html_url": "https://github.com/rust-lang/rust/commit/1225faf1a410cbb6df347bd135fb3460cfd2a5ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1225faf1a410cbb6df347bd135fb3460cfd2a5ce/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcba3b9968acfa1f371a57026a0563c9a7954189", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcba3b9968acfa1f371a57026a0563c9a7954189", "html_url": "https://github.com/rust-lang/rust/commit/bcba3b9968acfa1f371a57026a0563c9a7954189"}, {"sha": "089da06cc437aa4764f958ff441e79d7fca6b148", "url": "https://api.github.com/repos/rust-lang/rust/commits/089da06cc437aa4764f958ff441e79d7fca6b148", "html_url": "https://github.com/rust-lang/rust/commit/089da06cc437aa4764f958ff441e79d7fca6b148"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "cb233cc84cbed8fd95ddbce645dcabfe35a0cd45", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/1225faf1a410cbb6df347bd135fb3460cfd2a5ce/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/1225faf1a410cbb6df347bd135fb3460cfd2a5ce/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=1225faf1a410cbb6df347bd135fb3460cfd2a5ce", "patch": "@@ -170,37 +170,56 @@ By repeating all parts of the example, you can ensure that your example still\n compiles, while only showing the parts that are relevant to that part of your\n explanation.\n \n-Another case where the use of `#` is handy is when you want to ignore\n-error handling. Lets say you want the following,\n+\n+## Using `?` in doc tests\n+\n+When writing an example, it is rarely useful to include a complete error\n+handling, as it would add significant amounts of boilerplate code. Instead, you\n+may want the following:\n \n ```ignore\n+/// ```\n /// use std::io;\n /// let mut input = String::new();\n /// io::stdin().read_line(&mut input)?;\n+/// ```\n ```\n \n-The problem is that `?` returns a `Result<T, E>` and test functions\n-don't return anything so this will give a mismatched types error.\n+The problem is that `?` returns a `Result<T, E>` and test functions don't\n+return anything, so this will give a mismatched types error.\n+\n+You can get around this limitation by manually adding a `main` that returns\n+`Result<T, E>`, because `Result<T, E>` implements the `Termination` trait:\n \n ```ignore\n /// A doc test using ?\n ///\n /// ```\n /// use std::io;\n-/// # fn foo() -> io::Result<()> {\n+///\n+/// fn main() -> io::Result<()> {\n+///     let mut input = String::new();\n+///     io::stdin().read_line(&mut input)?;\n+///     Ok(())\n+/// }\n+/// ```\n+```\n+\n+Together with the `# ` from the section above, you arrive at a solution that\n+appears to the reader as the initial idea but works with doc tests:\n+\n+```ignore\n+/// ```\n+/// use std::io;\n+/// # fn main() -> io::Result<()> {\n /// let mut input = String::new();\n /// io::stdin().read_line(&mut input)?;\n /// # Ok(())\n /// # }\n /// ```\n-# fn foo() {}\n ```\n \n-You can get around this by wrapping the code in a function. This catches\n-and swallows the `Result<T, E>` when running tests on the docs. This\n-pattern appears regularly in the standard library.\n-\n-### Documenting macros\n+## Documenting macros\n \n Here\u2019s an example of documenting a macro:\n "}]}