{"sha": "03d38d42b7dd890744aecce0a008d25e34c95048", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZDM4ZDQyYjdkZDg5MDc0NGFlY2NlMGEwMDhkMjVlMzRjOTUwNDg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-08-18T11:44:57Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-08-18T11:46:11Z"}, "message": "Address review comments", "tree": {"sha": "c1d4be30f7345e5a0e2a49d3c26813a87252c0f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d4be30f7345e5a0e2a49d3c26813a87252c0f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03d38d42b7dd890744aecce0a008d25e34c95048", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03d38d42b7dd890744aecce0a008d25e34c95048", "html_url": "https://github.com/rust-lang/rust/commit/03d38d42b7dd890744aecce0a008d25e34c95048", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03d38d42b7dd890744aecce0a008d25e34c95048/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de7c83660726b7028433941ab74043a79c65f28b", "url": "https://api.github.com/repos/rust-lang/rust/commits/de7c83660726b7028433941ab74043a79c65f28b", "html_url": "https://github.com/rust-lang/rust/commit/de7c83660726b7028433941ab74043a79c65f28b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "45b39c2fb67cacc1979e3c1ea27ee4a7162921af", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=03d38d42b7dd890744aecce0a008d25e34c95048", "patch": "@@ -101,7 +101,7 @@ pub enum MirPhase {\n     /// After this phase, generators are explicit state machines (no more `Yield`).\n     /// `AggregateKind::Generator` is gone for good.\n     GeneratorLowering = 4,\n-    Optimized = 5,\n+    Optimization = 5,\n }\n \n impl MirPhase {"}, {"sha": "606be7cad2ba04036ada09257e36cb0e3c8e8bec", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=03d38d42b7dd890744aecce0a008d25e34c95048", "patch": "@@ -436,7 +436,7 @@ impl<'mir, 'tcx: 'mir, M: super::intern::CompileTimeMachine<'mir, 'tcx>> InterpC\n     /// A helper function that allocates memory for the layout given and gives you access to mutate\n     /// it. Once your own mutation code is done, the backing `Allocation` is removed from the\n     /// current `Memory` and returned.\n-    pub(crate) fn with_temp_alloc(\n+    pub(crate) fn intern_with_temp_alloc(\n         &mut self,\n         layout: TyAndLayout<'tcx>,\n         f: impl FnOnce("}, {"sha": "7b4582abe5eea221160629313ded386570492916", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=03d38d42b7dd890744aecce0a008d25e34c95048", "patch": "@@ -845,7 +845,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                                 if ty_is_scalar(ty1) && ty_is_scalar(ty2) {\n                                     let alloc = this\n                                         .ecx\n-                                        .with_temp_alloc(value.layout, |ecx, dest| {\n+                                        .intern_with_temp_alloc(value.layout, |ecx, dest| {\n                                             ecx.write_immediate_to_mplace(*imm, dest)\n                                         })\n                                         .unwrap();"}, {"sha": "06114a6aeaf245d6f748936a430c1f401dcd0bcb", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03d38d42b7dd890744aecce0a008d25e34c95048/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=03d38d42b7dd890744aecce0a008d25e34c95048", "patch": "@@ -228,7 +228,7 @@ pub fn run_passes(\n \n     body.phase = mir_phase;\n \n-    if mir_phase == MirPhase::Optimized {\n+    if mir_phase == MirPhase::Optimization {\n         validate::Validator { when: format!(\"end of phase {:?}\", mir_phase), mir_phase }\n             .run_pass(tcx, source, body);\n     }\n@@ -504,7 +504,7 @@ fn run_optimization_passes<'tcx>(\n         body,\n         InstanceDef::Item(ty::WithOptConstParam::unknown(def_id.to_def_id())),\n         promoted,\n-        MirPhase::Optimized,\n+        MirPhase::Optimization,\n         &[\n             if mir_opt_level > 0 { optimizations } else { no_optimizations },\n             pre_codegen_cleanup,"}]}