{"sha": "5a191132bb995558ae20da5db21a3fccb534d5cc", "node_id": "C_kwDOAAsO6NoAKDVhMTkxMTMyYmI5OTU1NThhZTIwZGE1ZGIyMWEzZmNjYjUzNGQ1Y2M", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2023-05-28T06:29:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-28T06:29:36Z"}, "message": "Rollup merge of #112005 - sladyn98:item-foreign-types, r=GuillaumeGomez\n\nMigrate `item_foreign_type` to Askama\n\nThis PR continues the migration of `print_item.rs` functions to Askama. This piece of work migrates the function `item_foreign_type`\n\nRefers https://github.com/rust-lang/rust/issues/108868", "tree": {"sha": "b0e31c4f26d6769cd776226b88f03df4b742f922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0e31c4f26d6769cd776226b88f03df4b742f922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a191132bb995558ae20da5db21a3fccb534d5cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkcvTQCRBK7hj4Ov3rIwAAUfAIACyCzYMX2a4E1b0WfowkN92y\nkpg9Ned6D7kA6YvRjPpndDBBYIC4pQ9g47M1kHVEJChFONSs3r7iFHc8Nseqrxv+\naHLKHTWXiJ5tu2ngKdHlIBz+YGp7kuKzozjNvba5tS+bX/VkZZf3XmLp8A4f6u/R\nvn41WDoy2i4JPvfmeL9qvRLPGyZ/tmm5HWwluVqdK0JbuNZTPNN6y/NqCEYxiX9b\nunR/d/hfwTpcQu2Lb7vCXYbfVtXVOGMYqwx2SLewekPhY5qsb3EiDeXfkg50MoaC\nGJqRB6bwOiG7qK7C2wJy3NCB1fjgXwjkEZlcmzPUdFP43RqJddm5x4STOhhAT+c=\n=z1fk\n-----END PGP SIGNATURE-----\n", "payload": "tree b0e31c4f26d6769cd776226b88f03df4b742f922\nparent ea1c3e623fbfb47b1a9b1ad1d96c7bec363418a0\nparent a7329cd66bdd58fce76fd8105911838dae7dc275\nauthor fee1-dead <ent3rm4n@gmail.com> 1685255376 +0000\ncommitter GitHub <noreply@github.com> 1685255376 +0000\n\nRollup merge of #112005 - sladyn98:item-foreign-types, r=GuillaumeGomez\n\nMigrate `item_foreign_type` to Askama\n\nThis PR continues the migration of `print_item.rs` functions to Askama. This piece of work migrates the function `item_foreign_type`\n\nRefers https://github.com/rust-lang/rust/issues/108868\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a191132bb995558ae20da5db21a3fccb534d5cc", "html_url": "https://github.com/rust-lang/rust/commit/5a191132bb995558ae20da5db21a3fccb534d5cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a191132bb995558ae20da5db21a3fccb534d5cc/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1c3e623fbfb47b1a9b1ad1d96c7bec363418a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1c3e623fbfb47b1a9b1ad1d96c7bec363418a0", "html_url": "https://github.com/rust-lang/rust/commit/ea1c3e623fbfb47b1a9b1ad1d96c7bec363418a0"}, {"sha": "a7329cd66bdd58fce76fd8105911838dae7dc275", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7329cd66bdd58fce76fd8105911838dae7dc275", "html_url": "https://github.com/rust-lang/rust/commit/a7329cd66bdd58fce76fd8105911838dae7dc275"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "d2dc47af7ac4f95693a4de267f93265e7cb20d3b", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a191132bb995558ae20da5db21a3fccb534d5cc/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a191132bb995558ae20da5db21a3fccb534d5cc/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=5a191132bb995558ae20da5db21a3fccb534d5cc", "patch": "@@ -1578,21 +1578,23 @@ fn item_static(w: &mut impl fmt::Write, cx: &mut Context<'_>, it: &clean::Item,\n     write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2)).unwrap();\n }\n \n-fn item_foreign_type(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n-    wrap_item(w, |w| {\n-        w.write_str(\"extern {\\n\");\n-        render_attributes_in_code(w, it, cx.tcx());\n+fn item_foreign_type(w: &mut impl fmt::Write, cx: &mut Context<'_>, it: &clean::Item) {\n+    let mut buffer = Buffer::new();\n+    wrap_item(&mut buffer, |buffer| {\n+        buffer.write_str(\"extern {\\n\");\n+        render_attributes_in_code(buffer, it, cx.tcx());\n         write!(\n-            w,\n+            buffer,\n             \"    {}type {};\\n}}\",\n             visibility_print_with_space(it.visibility(cx.tcx()), it.item_id, cx),\n             it.name.unwrap(),\n         );\n     });\n \n-    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2));\n+    write!(w, \"{}{}\", buffer.into_inner(), document(cx, it, None, HeadingOffset::H2)).unwrap();\n \n     write!(w, \"{}\", render_assoc_items(cx, it, it.item_id.expect_def_id(), AssocItemRender::All))\n+        .unwrap();\n }\n \n fn item_keyword(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {"}]}