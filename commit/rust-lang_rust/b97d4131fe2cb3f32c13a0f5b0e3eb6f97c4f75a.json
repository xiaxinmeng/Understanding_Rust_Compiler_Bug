{"sha": "b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5N2Q0MTMxZmUyY2IzZjMyYzEzYTBmNWIwZTNlYjZmOTdjNGY3NWE=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-08-20T09:37:00Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-09-05T04:51:17Z"}, "message": "Refactor byteorder to std in rustc_middle\n\nUse std::io::{Read, Write} and {to, from}_{le, be}_bytes methods in\norder to remove byteorder from librustc_middle's dependency graph.", "tree": {"sha": "cbe4814db970076dae891acadc699ee2f353f7e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbe4814db970076dae891acadc699ee2f353f7e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "html_url": "https://github.com/rust-lang/rust/commit/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3364780d2cfddfe329f62a3ec138fd4f9a60e27", "html_url": "https://github.com/rust-lang/rust/commit/c3364780d2cfddfe329f62a3ec138fd4f9a60e27"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b84f6ef51ac201ef8c5ad342c05cd7bb0ffc72b5", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "patch": "@@ -3722,7 +3722,6 @@ name = \"rustc_middle\"\n version = \"0.0.0\"\n dependencies = [\n  \"bitflags\",\n- \"byteorder\",\n  \"chalk-ir\",\n  \"measureme\",\n  \"polonius-engine\","}, {"sha": "a5a860a38b3e8f45d4d24f868ba37be82c911326", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "patch": "@@ -26,7 +26,6 @@ rustc_index = { path = \"../rustc_index\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-byteorder = { version = \"1.3\" }\n chalk-ir = \"0.21.0\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n measureme = \"0.7.1\""}, {"sha": "afbb67555df4f958ece13031c66a6cb54b515006", "filename": "compiler/rustc_middle/src/mir/interpret/mod.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs?ref=b97d4131fe2cb3f32c13a0f5b0e3eb6f97c4f75a", "patch": "@@ -98,10 +98,10 @@ mod value;\n use std::convert::TryFrom;\n use std::fmt;\n use std::io;\n+use std::io::{Read, Write};\n use std::num::NonZeroU32;\n use std::sync::atomic::{AtomicU32, Ordering};\n \n-use byteorder::{BigEndian, LittleEndian, ReadBytesExt, WriteBytesExt};\n use rustc_ast::LitKind;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{HashMapExt, Lock};\n@@ -561,18 +561,20 @@ pub fn write_target_uint(\n     mut target: &mut [u8],\n     data: u128,\n ) -> Result<(), io::Error> {\n-    let len = target.len();\n     match endianness {\n-        Endian::Little => target.write_uint128::<LittleEndian>(data, len),\n-        Endian::Big => target.write_uint128::<BigEndian>(data, len),\n-    }\n+        Endian::Little => target.write(&data.to_le_bytes())?,\n+        Endian::Big => target.write(&data.to_be_bytes())?,\n+    };\n+    Ok(())\n }\n \n #[inline]\n pub fn read_target_uint(endianness: Endian, mut source: &[u8]) -> Result<u128, io::Error> {\n+    let mut buf = [0; 16];\n+    source.read(&mut buf)?;\n     match endianness {\n-        Endian::Little => source.read_uint128::<LittleEndian>(source.len()),\n-        Endian::Big => source.read_uint128::<BigEndian>(source.len()),\n+        Endian::Little => Ok(u128::from_le_bytes(buf)),\n+        Endian::Big => Ok(u128::from_be_bytes(buf)),\n     }\n }\n "}]}