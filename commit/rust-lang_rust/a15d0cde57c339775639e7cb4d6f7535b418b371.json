{"sha": "a15d0cde57c339775639e7cb4d6f7535b418b371", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNWQwY2RlNTdjMzM5Nzc1NjM5ZTdjYjRkNmY3NTM1YjQxOGIzNzE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-06T23:16:19Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:44:12Z"}, "message": "extract parse_tuple_field_access_expr", "tree": {"sha": "8f18175f4996f3b7eca9bee13f5b5bee5af2dcd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f18175f4996f3b7eca9bee13f5b5bee5af2dcd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a15d0cde57c339775639e7cb4d6f7535b418b371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a15d0cde57c339775639e7cb4d6f7535b418b371", "html_url": "https://github.com/rust-lang/rust/commit/a15d0cde57c339775639e7cb4d6f7535b418b371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a15d0cde57c339775639e7cb4d6f7535b418b371/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287ba5d0c8383c011b248db5b8a7a65b52fdd242", "url": "https://api.github.com/repos/rust-lang/rust/commits/287ba5d0c8383c011b248db5b8a7a65b52fdd242", "html_url": "https://github.com/rust-lang/rust/commit/287ba5d0c8383c011b248db5b8a7a65b52fdd242"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "d1b133d6c63bdb5423726b5b4991ba0dd43059ca", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a15d0cde57c339775639e7cb4d6f7535b418b371/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a15d0cde57c339775639e7cb4d6f7535b418b371/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=a15d0cde57c339775639e7cb4d6f7535b418b371", "patch": "@@ -708,12 +708,7 @@ impl<'a> Parser<'a> {\n                         e = self.parse_dot_suffix(e, lo)?;\n                     }\n                     token::Literal(token::Lit { kind: token::Integer, symbol, suffix }) => {\n-                        let span = self.token.span;\n-                        self.bump();\n-                        let field = ExprKind::Field(e, Ident::new(symbol, span));\n-                        e = self.mk_expr(lo.to(span), field, AttrVec::new());\n-\n-                        self.expect_no_suffix(span, \"a tuple index\", suffix);\n+                        e = self.parse_tuple_field_access_expr(lo, e, symbol, suffix);\n                     }\n                     token::Literal(token::Lit { kind: token::Float, symbol, .. }) => {\n                         self.bump();\n@@ -756,14 +751,28 @@ impl<'a> Parser<'a> {\n                 break;\n             }\n             match self.token.kind {\n-                token::OpenDelim(token::Paren) => e = Ok(self.parse_fn_call_expr(lo, e)),\n+                token::OpenDelim(token::Paren) => e = self.parse_fn_call_expr(lo, e),\n                 token::OpenDelim(token::Bracket) => e = self.parse_index_expr(lo, e)?,\n                 _ => return Ok(e),\n             }\n         }\n         return Ok(e);\n     }\n \n+    fn parse_tuple_field_access_expr(\n+        &mut self,\n+        lo: Span,\n+        base: P<Expr>,\n+        field: Symbol,\n+        suffix: Option<Symbol>,\n+    ) -> P<Expr> {\n+        let span = self.token.span;\n+        self.bump();\n+        let field = ExprKind::Field(base, Ident::new(field, span));\n+        self.expect_no_suffix(span, \"a tuple index\", suffix);\n+        self.mk_expr(lo.to(span), field, AttrVec::new())\n+    }\n+\n     /// Parse a function call expression, `expr(...)`.\n     fn parse_fn_call_expr(&mut self, lo: Span, fun: P<Expr>) -> P<Expr> {\n         let seq = self.parse_paren_expr_seq().map(|args| {"}]}