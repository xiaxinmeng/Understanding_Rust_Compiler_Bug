{"sha": "a266ea0bd03508724341a2382b5ba8a22aa6e667", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNjZlYTBiZDAzNTA4NzI0MzQxYTIzODJiNWJhOGEyMmFhNmU2Njc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-12-02T15:44:16Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-12-02T16:33:26Z"}, "message": "rustc: allow non-empty ParamEnv's in global trait select/eval caches.", "tree": {"sha": "76b742c75975ad23e820783a532945af424f32db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76b742c75975ad23e820783a532945af424f32db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a266ea0bd03508724341a2382b5ba8a22aa6e667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a266ea0bd03508724341a2382b5ba8a22aa6e667", "html_url": "https://github.com/rust-lang/rust/commit/a266ea0bd03508724341a2382b5ba8a22aa6e667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a266ea0bd03508724341a2382b5ba8a22aa6e667/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d1298ea5f83b1e6714f25b0b63a78c37712b240", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1298ea5f83b1e6714f25b0b63a78c37712b240", "html_url": "https://github.com/rust-lang/rust/commit/1d1298ea5f83b1e6714f25b0b63a78c37712b240"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "94a77c553e53a9affa863ab135cf0bdca421f819", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a266ea0bd03508724341a2382b5ba8a22aa6e667/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a266ea0bd03508724341a2382b5ba8a22aa6e667/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=a266ea0bd03508724341a2382b5ba8a22aa6e667", "patch": "@@ -1572,14 +1572,10 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n     /// Do note that if the type itself is not in the\n     /// global tcx, the local caches will be used.\n     fn can_use_global_caches(&self, param_env: ty::ParamEnv<'tcx>) -> bool {\n-        // If there are any where-clauses in scope, then we always use\n-        // a cache local to this particular scope. Otherwise, we\n-        // switch to a global cache. We used to try and draw\n-        // finer-grained distinctions, but that led to a serious of\n-        // annoying and weird bugs like #22019 and #18290. This simple\n-        // rule seems to be pretty clearly safe and also still retains\n-        // a very high hit rate (~95% when compiling rustc).\n-        if !param_env.caller_bounds.is_empty() {\n+        // If there are any e.g. inference variables in the `ParamEnv`, then we\n+        // always use a cache local to this particular scope. Otherwise, we\n+        // switch to a global cache.\n+        if param_env.has_local_value() {\n             return false;\n         }\n "}]}