{"sha": "b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZjdmNzU4YjFmM2RmOGMxZDJkZWQ4MDg0OTJiNDUyZTRiMGUxYTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-09-04T23:31:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-09-05T21:21:57Z"}, "message": "std::rt: Some I/O cleanup", "tree": {"sha": "d516152ed789cc4794af2d016afd42b7de51d5d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d516152ed789cc4794af2d016afd42b7de51d5d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0", "html_url": "https://github.com/rust-lang/rust/commit/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d84a7b5ae3b3a820fb0a26292632856ceb959b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d84a7b5ae3b3a820fb0a26292632856ceb959b3e", "html_url": "https://github.com/rust-lang/rust/commit/d84a7b5ae3b3a820fb0a26292632856ceb959b3e"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "440b5c395c7f03b6ca34d56d549688e52be4b988", "filename": "src/libstd/rt/uv/file.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0/src%2Flibstd%2Frt%2Fuv%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0/src%2Flibstd%2Frt%2Fuv%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Ffile.rs?ref=b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0", "patch": "@@ -139,15 +139,17 @@ impl NativeHandle<*uvll::uv_fs_t> for FsRequest {\n         match self { &FsRequest(ptr) => ptr }\n     }\n }\n-    fn sync_cleanup(loop_: &Loop, result: int)\n-          -> Result<int, UvError> {\n-        match status_to_maybe_uv_error_with_loop(loop_.native_handle(), result as i32) {\n-            Some(err) => Err(err),\n-            None => Ok(result)\n-        }\n+\n+fn sync_cleanup(loop_: &Loop, result: int)\n+    -> Result<int, UvError> {\n+    match status_to_maybe_uv_error_with_loop(loop_.native_handle(), result as i32) {\n+        Some(err) => Err(err),\n+        None => Ok(result)\n     }\n+}\n \n pub struct FileDescriptor(c_int);\n+\n impl FileDescriptor {\n     fn new(fd: c_int) -> FileDescriptor {\n         FileDescriptor(fd)"}, {"sha": "ea4562068b4c3850e2c265892779c6c5aab4175d", "filename": "src/libstd/rt/uv/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fmod.rs?ref=b3f7f758b1f3df8c1d2ded808492b452e4b0e1a0", "patch": "@@ -132,7 +132,8 @@ pub type UdpReceiveCallback = ~fn(UdpWatcher, int, Buf, SocketAddr, uint, Option\n pub type UdpSendCallback = ~fn(UdpWatcher, Option<UvError>);\n \n \n-/// Callbacks used by StreamWatchers, set as custom data on the foreign handle\n+/// Callbacks used by StreamWatchers, set as custom data on the foreign handle.\n+/// XXX: Would be better not to have all watchers allocate room for all callback types.\n struct WatcherData {\n     read_cb: Option<ReadCallback>,\n     write_cb: Option<ConnectionCallback>,"}]}