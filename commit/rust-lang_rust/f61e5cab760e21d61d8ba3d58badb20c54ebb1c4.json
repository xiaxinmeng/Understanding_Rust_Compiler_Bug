{"sha": "f61e5cab760e21d61d8ba3d58badb20c54ebb1c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MWU1Y2FiNzYwZTIxZDYxZDhiYTNkNThiYWRiMjBjNTRlYmIxYzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-12T23:01:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-12T23:01:25Z"}, "message": "Auto merge of #79976 - jyn514:assertion-failure, r=jyn514\n\nRemove incorrect assert\n\nFixes an assertion failure when resolving `::std` (or any other crate that uses the `::` style, see https://github.com/rust-lang/rust/pull/79809/files#r541776478, https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Perf.20failing).\n\nUnblocks https://github.com/rust-lang/rustc-perf/pull/806.\n\nr? `@ghost` - this is a trivial fix and breaking rustc-perf so I'm going to approve it unilaterally. cc `@Mark-Simulacrum` `@Eric-Arellano`", "tree": {"sha": "4628174489bccf3a4058430e7720f46b51327d2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4628174489bccf3a4058430e7720f46b51327d2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f61e5cab760e21d61d8ba3d58badb20c54ebb1c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f61e5cab760e21d61d8ba3d58badb20c54ebb1c4", "html_url": "https://github.com/rust-lang/rust/commit/f61e5cab760e21d61d8ba3d58badb20c54ebb1c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f61e5cab760e21d61d8ba3d58badb20c54ebb1c4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7efc097c4fe6e97f54a44cee91c56189e9ddb41c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7efc097c4fe6e97f54a44cee91c56189e9ddb41c", "html_url": "https://github.com/rust-lang/rust/commit/7efc097c4fe6e97f54a44cee91c56189e9ddb41c"}, {"sha": "130dbe46427068bf642697f70f68938117e13625", "url": "https://api.github.com/repos/rust-lang/rust/commits/130dbe46427068bf642697f70f68938117e13625", "html_url": "https://github.com/rust-lang/rust/commit/130dbe46427068bf642697f70f68938117e13625"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e2fdf369087b158c082e76300f7c077e526b5a71", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f61e5cab760e21d61d8ba3d58badb20c54ebb1c4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f61e5cab760e21d61d8ba3d58badb20c54ebb1c4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=f61e5cab760e21d61d8ba3d58badb20c54ebb1c4", "patch": "@@ -436,8 +436,8 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n         // Try looking for methods and associated items.\n         let mut split = path_str.rsplitn(2, \"::\");\n         // NB: `split`'s first element is always defined, even if the delimiter was not present.\n+        // NB: `item_str` could be empty when resolving in the root namespace (e.g. `::std`).\n         let item_str = split.next().unwrap();\n-        assert!(!item_str.is_empty());\n         let item_name = Symbol::intern(item_str);\n         let path_root = split\n             .next()"}]}