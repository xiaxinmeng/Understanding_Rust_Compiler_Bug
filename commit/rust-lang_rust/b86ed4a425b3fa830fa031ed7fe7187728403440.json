{"sha": "b86ed4a425b3fa830fa031ed7fe7187728403440", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NmVkNGE0MjViM2ZhODMwZmEwMzFlZDdmZTcxODc3Mjg0MDM0NDA=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-09T19:22:12Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-09T19:22:12Z"}, "message": "panic when trying to destructure union as enum", "tree": {"sha": "af5a194051195cff5e06de7f1f6cef68fc7759de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af5a194051195cff5e06de7f1f6cef68fc7759de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b86ed4a425b3fa830fa031ed7fe7187728403440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b86ed4a425b3fa830fa031ed7fe7187728403440", "html_url": "https://github.com/rust-lang/rust/commit/b86ed4a425b3fa830fa031ed7fe7187728403440", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b86ed4a425b3fa830fa031ed7fe7187728403440/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df3e003378b8b896a9e4eecbd944c83d38d831f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/df3e003378b8b896a9e4eecbd944c83d38d831f4", "html_url": "https://github.com/rust-lang/rust/commit/df3e003378b8b896a9e4eecbd944c83d38d831f4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c3af98fae9d5974a9cc1878f8c6fdfbb58ca8d4a", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b86ed4a425b3fa830fa031ed7fe7187728403440/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b86ed4a425b3fa830fa031ed7fe7187728403440/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=b86ed4a425b3fa830fa031ed7fe7187728403440", "patch": "@@ -201,14 +201,14 @@ impl<'a, 'tcx> Visitor<'a, 'tcx> for UnsafetyVisitor<'a, 'tcx> {\n                     AscribeUserType { .. } |\n                     // creating a union literal\n                     Constant { .. } => {},\n-                    Variant { .. } | Leaf { .. } | Or { .. } => {\n+                    Leaf { .. } | Or { .. } => {\n                         // pattern matching with a union and not doing something like v = Union { bar: 5 }\n                         self.in_union_destructure = true;\n                         visit::walk_pat(self, pat);\n                         self.in_union_destructure = false;\n                         return; // don't walk pattern\n                     }\n-                    Deref { .. } | Range { .. } | Slice { .. } | Array { .. } =>\n+                    Variant { .. } | Deref { .. } | Range { .. } | Slice { .. } | Array { .. } =>\n                         unreachable!(\"impossible union destructuring type\"),\n                 }\n             }"}]}