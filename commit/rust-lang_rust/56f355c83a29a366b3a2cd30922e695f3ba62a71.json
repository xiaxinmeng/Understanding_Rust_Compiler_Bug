{"sha": "56f355c83a29a366b3a2cd30922e695f3ba62a71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZjM1NWM4M2EyOWEzNjZiM2EyY2QzMDkyMmU2OTVmM2JhNjJhNzE=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-12-03T04:56:20Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-03T07:48:29Z"}, "message": "Fix build after rebase", "tree": {"sha": "a4eb2799b4861406fe196ac5997e2a3ab5267693", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4eb2799b4861406fe196ac5997e2a3ab5267693"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56f355c83a29a366b3a2cd30922e695f3ba62a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56f355c83a29a366b3a2cd30922e695f3ba62a71", "html_url": "https://github.com/rust-lang/rust/commit/56f355c83a29a366b3a2cd30922e695f3ba62a71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56f355c83a29a366b3a2cd30922e695f3ba62a71/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2827aa9bc58383c20d92fc1c5a5003160565884", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2827aa9bc58383c20d92fc1c5a5003160565884", "html_url": "https://github.com/rust-lang/rust/commit/d2827aa9bc58383c20d92fc1c5a5003160565884"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1d0e95245ea2dd31793a14079f3b145b0326b7cb", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56f355c83a29a366b3a2cd30922e695f3ba62a71/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56f355c83a29a366b3a2cd30922e695f3ba62a71/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=56f355c83a29a366b3a2cd30922e695f3ba62a71", "patch": "@@ -888,7 +888,7 @@ impl<'tcx> Lvalue<'tcx> {\n         self.elem(ProjectionElem::Deref)\n     }\n \n-    pub fn downcast(self, adt_def: AdtDef<'tcx>, variant_index: usize) -> Lvalue<'tcx> {\n+    pub fn downcast(self, adt_def: &'tcx AdtDef, variant_index: usize) -> Lvalue<'tcx> {\n         self.elem(ProjectionElem::Downcast(adt_def, variant_index))\n     }\n "}]}