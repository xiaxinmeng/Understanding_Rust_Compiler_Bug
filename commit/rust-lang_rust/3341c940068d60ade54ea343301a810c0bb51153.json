{"sha": "3341c940068d60ade54ea343301a810c0bb51153", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNDFjOTQwMDY4ZDYwYWRlNTRlYTM0MzMwMWE4MTBjMGJiNTExNTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-11T07:19:21Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-13T09:40:17Z"}, "message": "ast_validation: tweak diagnostic output", "tree": {"sha": "ede7d803f3bb3be1ccb66878238c605d8f1f9594", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ede7d803f3bb3be1ccb66878238c605d8f1f9594"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3341c940068d60ade54ea343301a810c0bb51153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3341c940068d60ade54ea343301a810c0bb51153", "html_url": "https://github.com/rust-lang/rust/commit/3341c940068d60ade54ea343301a810c0bb51153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3341c940068d60ade54ea343301a810c0bb51153/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d139ac7056d0102db605715f354689b0214705", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d139ac7056d0102db605715f354689b0214705", "html_url": "https://github.com/rust-lang/rust/commit/79d139ac7056d0102db605715f354689b0214705"}], "stats": {"total": 177, "additions": 96, "deletions": 81}, "files": [{"sha": "2f0495b8b5a48ec71e10259dc54f5271b9fadc54", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -223,21 +223,29 @@ impl<'a> AstValidator<'a> {\n \n     fn check_trait_fn_not_async(&self, fn_span: Span, asyncness: Async) {\n         if let Async::Yes { span, .. } = asyncness {\n-            struct_span_err!(self.session, fn_span, E0706, \"trait fns cannot be declared `async`\")\n-                .span_label(span, \"`async` because of this\")\n-                .note(\"`async` trait functions are not currently supported\")\n-                .note(\n-                    \"consider using the `async-trait` crate: https://crates.io/crates/async-trait\",\n-                )\n-                .emit();\n+            struct_span_err!(\n+                self.session,\n+                fn_span,\n+                E0706,\n+                \"functions in traits cannot be declared `async`\"\n+            )\n+            .span_label(span, \"`async` because of this\")\n+            .note(\"`async` trait functions are not currently supported\")\n+            .note(\"consider using the `async-trait` crate: https://crates.io/crates/async-trait\")\n+            .emit();\n         }\n     }\n \n     fn check_trait_fn_not_const(&self, constness: Const) {\n         if let Const::Yes(span) = constness {\n-            struct_span_err!(self.session, span, E0379, \"trait fns cannot be declared const\")\n-                .span_label(span, \"trait fns cannot be const\")\n-                .emit();\n+            struct_span_err!(\n+                self.session,\n+                span,\n+                E0379,\n+                \"functions in traits cannot be declared const\"\n+            )\n+            .span_label(span, \"functions in traits cannot be const\")\n+            .emit();\n         }\n     }\n \n@@ -513,8 +521,11 @@ impl<'a> AstValidator<'a> {\n             for param in &generics.params {\n                 if let GenericParamKind::Const { .. } = param.kind {\n                     self.err_handler()\n-                        .struct_span_err(span, \"const parameters are not permitted in `const fn`\")\n-                        .span_label(const_span, \"`const fn` because of this\")\n+                        .struct_span_err(\n+                            span,\n+                            \"const parameters are not permitted in const functions\",\n+                        )\n+                        .span_label(const_span, \"`const` because of this\")\n                         .emit();\n                 }\n             }"}, {"sha": "f0403b76620c1ba076a7c07303783c7b420d141b", "filename": "src/test/ui/async-await/async-trait-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,7 +1,7 @@\n // edition:2018\n trait T {\n-    async fn foo() {} //~ ERROR trait fns cannot be declared `async`\n-    async fn bar(&self) {} //~ ERROR trait fns cannot be declared `async`\n+    async fn foo() {} //~ ERROR functions in traits cannot be declared `async`\n+    async fn bar(&self) {} //~ ERROR functions in traits cannot be declared `async`\n }\n \n fn main() {}"}, {"sha": "6080b2815eeb8cd3577aaa74515ff4c3632f066a", "filename": "src/test/ui/async-await/async-trait-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,4 +1,4 @@\n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/async-trait-fn.rs:3:5\n    |\n LL |     async fn foo() {}\n@@ -9,7 +9,7 @@ LL |     async fn foo() {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/async-trait-fn.rs:4:5\n    |\n LL |     async fn bar(&self) {}"}, {"sha": "5d2d186137e164405f4c9170413236c7a949cf21", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -16,7 +16,7 @@ impl Foo {\n \n trait Bar {\n     async fn foo() {} //~ ERROR `async fn` is not permitted in the 2015 edition\n-                      //~^ ERROR trait fns cannot be declared `async`\n+                      //~^ ERROR functions in traits cannot be declared `async`\n }\n \n fn main() {"}, {"sha": "f3d982801bb992d5c196ebfe0bbb0f95908d08c4", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -88,7 +88,7 @@ LL |             async fn bar() {}\n    = help: set `edition = \"2018\"` in `Cargo.toml`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/edition-deny-async-fns-2015.rs:18:5\n    |\n LL |     async fn foo() {}"}, {"sha": "e9e236be556300d819da13aebee6fe28276f3619", "filename": "src/test/ui/const-generics/const-fn-with-const-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -2,7 +2,7 @@\n //~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n const fn const_u32_identity<const X: u32>() -> u32 {\n-    //~^ ERROR const parameters are not permitted in `const fn`\n+    //~^ ERROR const parameters are not permitted in const functions\n     X\n }\n "}, {"sha": "ca31d695361f406539b7f8106b215977ca4edea8", "filename": "src/test/ui/const-generics/const-fn-with-const-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,10 +1,10 @@\n-error: const parameters are not permitted in `const fn`\n+error: const parameters are not permitted in const functions\n   --> $DIR/const-fn-with-const-param.rs:4:1\n    |\n LL |   const fn const_u32_identity<const X: u32>() -> u32 {\n    |   ^----\n    |   |\n-   |  _`const fn` because of this\n+   |  _`const` because of this\n    | |\n LL | |\n LL | |     X"}, {"sha": "d4cfba6460c45a2cd85faa5606616b130152b34a", "filename": "src/test/ui/consts/const-fn-mismatch.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-mismatch.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -10,8 +10,10 @@ trait Foo {\n }\n \n impl Foo for u32 {\n-    const fn f() -> u32 { 22 }\n-    //~^ ERROR trait fns cannot be declared const\n+    const fn f() -> u32 {\n+        //~^ ERROR functions in traits cannot be declared const\n+        22\n+    }\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "0f4ce010fee00709b47cba4216a645f3dc0dfb02", "filename": "src/test/ui/consts/const-fn-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-mismatch.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,8 +1,8 @@\n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/const-fn-mismatch.rs:13:5\n    |\n-LL |     const fn f() -> u32 { 22 }\n-   |     ^^^^^ trait fns cannot be const\n+LL |     const fn f() -> u32 {\n+   |     ^^^^^ functions in traits cannot be const\n \n error: aborting due to previous error\n "}, {"sha": "1006d854688a4ca860179e81bb17f897d1907bc6", "filename": "src/test/ui/consts/const-fn-not-in-trait.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -5,9 +5,11 @@\n \n trait Foo {\n     const fn f() -> u32;\n-    //~^ ERROR trait fns cannot be declared const\n-    const fn g() -> u32 { 0 }\n-    //~^ ERROR trait fns cannot be declared const\n+    //~^ ERROR functions in traits cannot be declared const\n+    const fn g() -> u32 {\n+        //~^ ERROR functions in traits cannot be declared const\n+        0\n+    }\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "12ce3066037d1692a587b5c8e6c98345d143a19d", "filename": "src/test/ui/consts/const-fn-not-in-trait.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,14 +1,14 @@\n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/const-fn-not-in-trait.rs:7:5\n    |\n LL |     const fn f() -> u32;\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/const-fn-not-in-trait.rs:9:5\n    |\n-LL |     const fn g() -> u32 { 0 }\n-   |     ^^^^^ trait fns cannot be const\n+LL |     const fn g() -> u32 {\n+   |     ^^^^^ functions in traits cannot be const\n \n error: aborting due to 2 previous errors\n "}, {"sha": "691c367aeb8597d9074f657c5cd702178e5ea014", "filename": "src/test/ui/feature-gates/feature-gate-const_fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -4,13 +4,13 @@ const fn foo() -> usize { 0 } // ok\n \n trait Foo {\n     const fn foo() -> u32; //~ ERROR const fn is unstable\n-                           //~| ERROR trait fns cannot be declared const\n+                           //~| ERROR functions in traits cannot be declared const\n     const fn bar() -> u32 { 0 } //~ ERROR const fn is unstable\n-                                //~| ERROR trait fns cannot be declared const\n+                                //~| ERROR functions in traits cannot be declared const\n }\n \n impl Foo for u32 {\n-    const fn foo() -> u32 { 0 } //~ ERROR trait fns cannot be declared const\n+    const fn foo() -> u32 { 0 } //~ ERROR functions in traits cannot be declared const\n }\n \n trait Bar {}"}, {"sha": "843e56301375aaadd67f0166d922ac94a862ef93", "filename": "src/test/ui/feature-gates/feature-gate-const_fn.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,20 +1,20 @@\n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/feature-gate-const_fn.rs:6:5\n    |\n LL |     const fn foo() -> u32;\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/feature-gate-const_fn.rs:8:5\n    |\n LL |     const fn bar() -> u32 { 0 }\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/feature-gate-const_fn.rs:13:5\n    |\n LL |     const fn foo() -> u32 { 0 }\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n error[E0658]: const fn is unstable\n   --> $DIR/feature-gate-const_fn.rs:6:5"}, {"sha": "5a01e053ed038e13b3a48c2ac1a1e2e43a684c28", "filename": "src/test/ui/feature-gates/feature-gate-min_const_fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -4,13 +4,13 @@ const fn foo() -> usize { 0 } // stabilized\n \n trait Foo {\n     const fn foo() -> u32; //~ ERROR const fn is unstable\n-                           //~| ERROR trait fns cannot be declared const\n+                           //~| ERROR functions in traits cannot be declared const\n     const fn bar() -> u32 { 0 } //~ ERROR const fn is unstable\n-                                //~| ERROR trait fns cannot be declared const\n+                                //~| ERROR functions in traits cannot be declared const\n }\n \n impl Foo for u32 {\n-    const fn foo() -> u32 { 0 } //~ ERROR trait fns cannot be declared const\n+    const fn foo() -> u32 { 0 } //~ ERROR functions in traits cannot be declared const\n }\n \n trait Bar {}"}, {"sha": "56a882e30fc4af88c075b8e05752bcd459830aa1", "filename": "src/test/ui/feature-gates/feature-gate-min_const_fn.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,20 +1,20 @@\n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/feature-gate-min_const_fn.rs:6:5\n    |\n LL |     const fn foo() -> u32;\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/feature-gate-min_const_fn.rs:8:5\n    |\n LL |     const fn bar() -> u32 { 0 }\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/feature-gate-min_const_fn.rs:13:5\n    |\n LL |     const fn foo() -> u32 { 0 }\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n error[E0658]: const fn is unstable\n   --> $DIR/feature-gate-min_const_fn.rs:6:5"}, {"sha": "3d6355f5c5978f6cfb516c2dfb85087a787a52ac", "filename": "src/test/ui/issues/issue-54954.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fissues%2Fissue-54954.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fissues%2Fissue-54954.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54954.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -5,7 +5,7 @@ const ARR_LEN: usize = Tt::const_val::<[i8; 123]>();\n \n trait Tt {\n     const fn const_val<T: Sized>() -> usize {\n-    //~^ ERROR trait fns cannot be declared const\n+        //~^ ERROR functions in traits cannot be declared const\n         core::mem::size_of::<T>()\n     }\n }"}, {"sha": "4967b82216e46bb689e89e50f20786ff598074b0", "filename": "src/test/ui/issues/issue-54954.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,8 +1,8 @@\n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/issue-54954.rs:7:5\n    |\n LL |     const fn const_val<T: Sized>() -> usize {\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n error[E0283]: type annotations needed\n   --> $DIR/issue-54954.rs:3:24"}, {"sha": "817582df27db1c9a0770936a44bd4874266b4a77", "filename": "src/test/ui/mismatched_types/const-fn-in-trait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -1,14 +1,14 @@\n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/const-fn-in-trait.rs:7:5\n    |\n LL |     const fn g();\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/const-fn-in-trait.rs:11:5\n    |\n LL |     const fn f() -> u32 { 22 }\n-   |     ^^^^^ trait fns cannot be const\n+   |     ^^^^^ functions in traits cannot be const\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c327667f4cdc7344f1ced7f0fbf8ac6c908c7c7f", "filename": "src/test/ui/parser/fn-header-semantic-fail.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.rs?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -14,26 +14,26 @@ fn main() {\n     //~^ ERROR functions cannot be both `const` and `async`\n \n     trait X {\n-        async fn ft1(); //~ ERROR trait fns cannot be declared `async`\n+        async fn ft1(); //~ ERROR functions in traits cannot be declared `async`\n         unsafe fn ft2(); // OK.\n-        const fn ft3(); //~ ERROR trait fns cannot be declared const\n+        const fn ft3(); //~ ERROR functions in traits cannot be declared const\n         extern \"C\" fn ft4(); // OK.\n         const async unsafe extern \"C\" fn ft5();\n-        //~^ ERROR trait fns cannot be declared `async`\n-        //~| ERROR trait fns cannot be declared const\n+        //~^ ERROR functions in traits cannot be declared `async`\n+        //~| ERROR functions in traits cannot be declared const\n         //~| ERROR functions cannot be both `const` and `async`\n     }\n \n     struct Y;\n     impl X for Y {\n-        async fn ft1() {} //~ ERROR trait fns cannot be declared `async`\n+        async fn ft1() {} //~ ERROR functions in traits cannot be declared `async`\n         //~^ ERROR method `ft1` has an incompatible type for trait\n         unsafe fn ft2() {} // OK.\n-        const fn ft3() {} //~ ERROR trait fns cannot be declared const\n+        const fn ft3() {} //~ ERROR functions in traits cannot be declared const\n         extern \"C\" fn ft4() {}\n         const async unsafe extern \"C\" fn ft5() {}\n-        //~^ ERROR trait fns cannot be declared `async`\n-        //~| ERROR trait fns cannot be declared const\n+        //~^ ERROR functions in traits cannot be declared `async`\n+        //~| ERROR functions in traits cannot be declared const\n         //~| ERROR method `ft5` has an incompatible type for trait\n         //~| ERROR functions cannot be both `const` and `async`\n     }"}, {"sha": "1142cee9851b02c6c1397cd701f371441d05598f", "filename": "src/test/ui/parser/fn-header-semantic-fail.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3341c940068d60ade54ea343301a810c0bb51153/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr?ref=3341c940068d60ade54ea343301a810c0bb51153", "patch": "@@ -7,7 +7,7 @@ LL |     const async unsafe extern \"C\" fn ff5() {} // OK.\n    |     |     `async` because of this\n    |     `const` because of this\n \n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:17:9\n    |\n LL |         async fn ft1();\n@@ -18,19 +18,19 @@ LL |         async fn ft1();\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/fn-header-semantic-fail.rs:19:9\n    |\n LL |         const fn ft3();\n-   |         ^^^^^ trait fns cannot be const\n+   |         ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/fn-header-semantic-fail.rs:21:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5();\n-   |         ^^^^^ trait fns cannot be const\n+   |         ^^^^^ functions in traits cannot be const\n \n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:21:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5();\n@@ -50,7 +50,7 @@ LL |         const async unsafe extern \"C\" fn ft5();\n    |         |     `async` because of this\n    |         `const` because of this\n \n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:29:9\n    |\n LL |         async fn ft1() {}\n@@ -61,19 +61,19 @@ LL |         async fn ft1() {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/fn-header-semantic-fail.rs:32:9\n    |\n LL |         const fn ft3() {}\n-   |         ^^^^^ trait fns cannot be const\n+   |         ^^^^^ functions in traits cannot be const\n \n-error[E0379]: trait fns cannot be declared const\n+error[E0379]: functions in traits cannot be declared const\n   --> $DIR/fn-header-semantic-fail.rs:34:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5() {}\n-   |         ^^^^^ trait fns cannot be const\n+   |         ^^^^^ functions in traits cannot be const\n \n-error[E0706]: trait fns cannot be declared `async`\n+error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:34:9\n    |\n LL |         const async unsafe extern \"C\" fn ft5() {}"}]}