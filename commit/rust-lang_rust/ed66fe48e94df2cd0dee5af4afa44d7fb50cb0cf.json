{"sha": "ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNjZmZTQ4ZTk0ZGYyY2QwZGVlNWFmNGFmYTQ0ZDdmYjUwY2IwY2Y=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-05T05:11:28Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-07T16:14:33Z"}, "message": "Implement RFC 1440 \"Allow Drop types in statics/const functions\".", "tree": {"sha": "0a875e37191033361b5c3a04aa8494551157922a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a875e37191033361b5c3a04aa8494551157922a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "html_url": "https://github.com/rust-lang/rust/commit/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f5900aefac42cec488a68c041ecd538c04b84fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f5900aefac42cec488a68c041ecd538c04b84fd", "html_url": "https://github.com/rust-lang/rust/commit/4f5900aefac42cec488a68c041ecd538c04b84fd"}], "stats": {"total": 77, "additions": 54, "deletions": 23}, "files": [{"sha": "65d51d205285a6c1836da6eee8676ac8366c3f6c", "filename": "src/librustc_mir/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Flibrustc_mir%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Flibrustc_mir%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdiagnostics.rs?ref=ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "patch": "@@ -345,7 +345,7 @@ impl Drop for Foo {\n const F : Foo = Foo { a : 0 };\n // error: constants are not allowed to have destructors\n static S : Foo = Foo { a : 0 };\n-// error: statics are not allowed to have destructors\n+// error: destructors in statics are an unstable feature\n ```\n \n To solve this issue, please use a type which does allow the usage of type with"}, {"sha": "90823528973b9ff8fd88a0bed67e3088672d8019", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "patch": "@@ -222,13 +222,40 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx> {\n     }\n \n     /// Check for NEEDS_DROP (from an ADT or const fn call) and\n-    /// error, unless we're in a function.\n+    /// error, unless we're in a function, or the feature-gate\n+    /// for globals with destructors is enabled.\n     fn deny_drop(&self) {\n-        if self.mode != Mode::Fn && self.qualif.intersects(Qualif::NEEDS_DROP) {\n-            span_err!(self.tcx.sess, self.span, E0493,\n-                      \"{}s are not allowed to have destructors\",\n-                      self.mode);\n+        if self.mode == Mode::Fn || !self.qualif.intersects(Qualif::NEEDS_DROP) {\n+            return;\n+        }\n+\n+        // Static and const fn's allow destructors, but they're feature-gated.\n+        let msg = if self.mode != Mode::Const {\n+            // Feature-gate for globals with destructors is enabled.\n+            if self.tcx.sess.features.borrow().drop_types_in_const {\n+                return;\n+            }\n+\n+            // This comes from a macro that has #[allow_internal_unstable].\n+            if self.tcx.sess.codemap().span_allows_unstable(self.span) {\n+                return;\n+            }\n+\n+            format!(\"destructors in {}s are an unstable feature\",\n+                    self.mode)\n+        } else {\n+            format!(\"{}s are not allowed to have destructors\",\n+                    self.mode)\n+        };\n+\n+        let mut err =\n+            struct_span_err!(self.tcx.sess, self.span, E0493, \"{}\", msg);\n+        if self.mode != Mode::Const {\n+            help!(&mut err,\n+                  \"in Nightly builds, add `#![feature(drop_types_in_const)]` \\\n+                   to the crate attributes to enable\");\n         }\n+        err.emit();\n     }\n \n     /// Check if an Lvalue with the current qualifications could"}, {"sha": "7f01821b00433aa4c507497a5ae1011cdb2b5a12", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "patch": "@@ -266,7 +266,10 @@ declare_features! (\n     (active, specialization, \"1.7.0\", Some(31844)),\n \n     // pub(restricted) visibilities (RFC 1422)\n-    (active, pub_restricted, \"1.9.0\", Some(32409))\n+    (active, pub_restricted, \"1.9.0\", Some(32409)),\n+\n+     // Allow Drop types in statics/const functions (RFC 1440)\n+    (active, drop_types_in_const, \"1.9.0\", Some(33156))\n );\n \n declare_features! ("}, {"sha": "df22e2ea4de130aa9d7f338d434f0501f45863b8", "filename": "src/test/compile-fail/check-static-values-constraints.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcheck-static-values-constraints.rs?ref=ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "patch": "@@ -37,7 +37,7 @@ static STATIC2: SafeEnum = SafeEnum::Variant2(0);\n \n // This one should fail\n static STATIC3: SafeEnum = SafeEnum::Variant3(WithDtor);\n-//~^ ERROR statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n \n \n // This enum will be used to test that variants\n@@ -54,9 +54,9 @@ impl Drop for UnsafeEnum {\n \n \n static STATIC4: UnsafeEnum = UnsafeEnum::Variant5;\n-//~^ ERROR statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n static STATIC5: UnsafeEnum = UnsafeEnum::Variant6(0);\n-//~^ ERROR statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n \n \n struct SafeStruct {\n@@ -71,7 +71,7 @@ static STATIC6: SafeStruct = SafeStruct{field1: SafeEnum::Variant1, field2: Safe\n // field2 has an unsafe value, hence this should fail\n static STATIC7: SafeStruct = SafeStruct{field1: SafeEnum::Variant1,\n                                         field2: SafeEnum::Variant3(WithDtor)};\n-//~^ ERROR statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n \n // Test variadic constructor for structs. The base struct should be examined\n // as well as every field present in the constructor.\n@@ -84,7 +84,7 @@ static STATIC8: SafeStruct = SafeStruct{field1: SafeEnum::Variant1,\n static STATIC9: SafeStruct = SafeStruct{field1: SafeEnum::Variant1,\n                                         ..SafeStruct{field1: SafeEnum::Variant3(WithDtor),\n                                                      field2: SafeEnum::Variant1}};\n-//~^^ ERROR statics are not allowed to have destructors\n+//~^^ ERROR destructors in statics are an unstable feature\n \n struct UnsafeStruct;\n \n@@ -94,7 +94,7 @@ impl Drop for UnsafeStruct {\n \n // Types with destructors are not allowed for statics\n static STATIC10: UnsafeStruct = UnsafeStruct;\n-//~^ ERROR statics are not allowed to have destructor\n+//~^ ERROR destructors in statics are an unstable feature\n \n struct MyOwned;\n \n@@ -105,19 +105,19 @@ static STATIC11: Box<MyOwned> = box MyOwned;\n // to have types with destructors\n // These should fail\n static mut STATIC12: UnsafeStruct = UnsafeStruct;\n-//~^ ERROR mutable statics are not allowed to have destructors\n-//~^^ ERROR statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n+//~^^ ERROR destructors in statics are an unstable feature\n \n static mut STATIC13: SafeStruct = SafeStruct{field1: SafeEnum::Variant1,\n-//~^ ERROR mutable statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n                                              field2: SafeEnum::Variant3(WithDtor)};\n-//~^ ERROR: statics are not allowed to have destructors\n+//~^ ERROR: destructors in statics are an unstable feature\n \n static mut STATIC14: SafeStruct = SafeStruct {\n-//~^ ERROR mutable statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n     field1: SafeEnum::Variant1,\n     field2: SafeEnum::Variant4(\"str\".to_string())\n-//~^ ERROR method calls in statics are limited to constant inherent methods\n+//~^ ERROR calls in statics are limited to constant functions\n };\n \n static STATIC15: &'static [Box<MyOwned>] = &[\n@@ -131,7 +131,7 @@ static STATIC16: (&'static Box<MyOwned>, &'static Box<MyOwned>) = (\n );\n \n static mut STATIC17: SafeEnum = SafeEnum::Variant1;\n-//~^ ERROR mutable statics are not allowed to have destructors\n+//~^ ERROR destructors in statics are an unstable feature\n \n static STATIC19: Box<isize> =\n     box 3;"}, {"sha": "58bdff6c0414b809562330b194f40a17bc04ad3d", "filename": "src/test/compile-fail/issue-9243.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Ftest%2Fcompile-fail%2Fissue-9243.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Ftest%2Fcompile-fail%2Fissue-9243.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-9243.rs?ref=ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "patch": "@@ -10,11 +10,12 @@\n \n // Regression test for issue 9243\n \n-struct Test {\n+pub struct Test {\n     mem: isize,\n }\n \n-pub static g_test: Test = Test {mem: 0}; //~ ERROR statics are not allowed to have destructors\n+pub static g_test: Test = Test {mem: 0};\n+//~^ ERROR destructors in statics are an unstable feature\n \n impl Drop for Test {\n     fn drop(&mut self) {}"}, {"sha": "9b83c42609aa5cf39cc43feeb6d03ea580c88a0c", "filename": "src/test/compile-fail/static-mut-not-constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-mut-not-constant.rs?ref=ed66fe48e94df2cd0dee5af4afa44d7fb50cb0cf", "patch": "@@ -12,6 +12,6 @@\n \n static mut a: Box<isize> = box 3;\n //~^ ERROR allocations are not allowed in statics\n-//~^^ ERROR mutable statics are not allowed to have boxes\n+//~^^ ERROR destructors in statics are an unstable feature\n \n fn main() {}"}]}