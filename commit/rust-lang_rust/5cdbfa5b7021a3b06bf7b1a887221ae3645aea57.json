{"sha": "5cdbfa5b7021a3b06bf7b1a887221ae3645aea57", "node_id": "C_kwDOAAsO6NoAKDVjZGJmYTViNzAyMWEzYjA2YmY3YjFhODg3MjIxYWUzNjQ1YWVhNTc", "commit": {"author": {"name": "Ole Strohm", "email": "strohm99@gmail.com", "date": "2022-02-22T22:48:44Z"}, "committer": {"name": "Ole Strohm", "email": "strohm99@gmail.com", "date": "2022-02-22T22:48:44Z"}, "message": "Added test", "tree": {"sha": "60838786ebf7529d7fa7422ffd512a13c9bd9f07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60838786ebf7529d7fa7422ffd512a13c9bd9f07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cdbfa5b7021a3b06bf7b1a887221ae3645aea57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cdbfa5b7021a3b06bf7b1a887221ae3645aea57", "html_url": "https://github.com/rust-lang/rust/commit/5cdbfa5b7021a3b06bf7b1a887221ae3645aea57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cdbfa5b7021a3b06bf7b1a887221ae3645aea57/comments", "author": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a221ae8df006d48909e26b0583d212d6892aef", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a221ae8df006d48909e26b0583d212d6892aef", "html_url": "https://github.com/rust-lang/rust/commit/94a221ae8df006d48909e26b0583d212d6892aef"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "e8309364ceaaea8a13effd1b5fb51472542f7e72", "filename": "crates/ide_assists/src/handlers/add_missing_match_arms.rs", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5cdbfa5b7021a3b06bf7b1a887221ae3645aea57/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cdbfa5b7021a3b06bf7b1a887221ae3645aea57/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs?ref=5cdbfa5b7021a3b06bf7b1a887221ae3645aea57", "patch": "@@ -79,10 +79,10 @@ pub(crate) fn add_missing_match_arms(acc: &mut Assists, ctx: &AssistContext) ->\n         Peekable<Box<dyn Iterator<Item = (ast::Pat, bool)>>>,\n         bool,\n     ) = if let Some(enum_def) = resolve_enum_def(&ctx.sema, &expr) {\n-        let variants = enum_def.variants(ctx.db());\n-\n         let is_non_exhaustive = enum_def.is_non_exhaustive(ctx.db());\n \n+        let variants = enum_def.variants(ctx.db());\n+\n         let missing_pats = variants\n             .into_iter()\n             .filter_map(|variant| {\n@@ -1598,7 +1598,7 @@ fn foo(t: E, b: bool) {\n     }\n \n     #[test]\n-    fn does_notfill_wildcard_with_partial_wildcard_and_wildcard() {\n+    fn does_not_fill_wildcard_with_partial_wildcard_and_wildcard() {\n         check_assist(\n             add_missing_match_arms,\n             r#\"\n@@ -1618,6 +1618,30 @@ fn foo(t: E, b: bool) {\n         _ if b => todo!(),\n         _ => todo!(),\n     }\n+}\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn non_exhaustive_doc_hidden_tuple_fills_wildcard() {\n+        check_assist(\n+            add_missing_match_arms,\n+            r#\"\n+enum E { A, #[doc(hidden)] B, }\n+\n+fn foo(t: E, b: bool) {\n+    match $0(t, b) {\n+    }\n+}\"#,\n+            r#\"\n+enum E { A, #[doc(hidden)] B, }\n+\n+fn foo(t: E, b: bool) {\n+    match (t, b) {\n+        $0(E::A, true) => todo!(),\n+        (E::A, false) => todo!(),\n+        _ => todo!(),\n+    }\n }\"#,\n         );\n     }"}]}