{"sha": "201a86046c3b08820c6b44b85c640c187d87756b", "node_id": "C_kwDOAAsO6NoAKDIwMWE4NjA0NmMzYjA4ODIwYzZiNDRiODVjNjQwYzE4N2Q4Nzc1NmI", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-03-18T07:56:43Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-03-18T07:56:43Z"}, "message": "use `self.create_snapshot_for_diagnostic` instead of `self.clone()`", "tree": {"sha": "4578c3397723f45c5d2b4b940854f17d783ea76d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4578c3397723f45c5d2b4b940854f17d783ea76d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/201a86046c3b08820c6b44b85c640c187d87756b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/201a86046c3b08820c6b44b85c640c187d87756b", "html_url": "https://github.com/rust-lang/rust/commit/201a86046c3b08820c6b44b85c640c187d87756b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/201a86046c3b08820c6b44b85c640c187d87756b/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6f3a4ecb48ead838638e902f2fa4e5f3059779b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f3a4ecb48ead838638e902f2fa4e5f3059779b", "html_url": "https://github.com/rust-lang/rust/commit/d6f3a4ecb48ead838638e902f2fa4e5f3059779b"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "a907f50a11bbff139c327e7684fe3ed115a4455a", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/201a86046c3b08820c6b44b85c640c187d87756b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/201a86046c3b08820c6b44b85c640c187d87756b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=201a86046c3b08820c6b44b85c640c187d87756b", "patch": "@@ -1,9 +1,10 @@\n+use super::diagnostics::SnapshotParser;\n use super::pat::{CommaRecoveryMode, RecoverColon, RecoverComma, PARAM_EXPECTED};\n use super::ty::{AllowPlus, RecoverQPath, RecoverReturnSign};\n use super::{\n-    AttrWrapper, BlockMode, ClosureSpans, ForceCollect, Parser, PathStyle, Restrictions, TokenType,\n+    AttrWrapper, BlockMode, ClosureSpans, ForceCollect, Parser, PathStyle, Restrictions,\n+    SemiColonMode, SeqSep, TokenExpectType, TokenType, TrailingToken,\n };\n-use super::{SemiColonMode, SeqSep, TokenExpectType, TrailingToken};\n use crate::maybe_recover_from_interpolated_ty_qpath;\n \n use ast::token::DelimToken;\n@@ -1105,7 +1106,7 @@ impl<'a> Parser<'a> {\n         let snapshot = if self.token.kind == token::OpenDelim(token::Paren)\n             && self.look_ahead_type_ascription_as_field()\n         {\n-            Some((self.clone(), fun.kind.clone()))\n+            Some((self.create_snapshot_for_diagnostic(), fun.kind.clone()))\n         } else {\n             None\n         };\n@@ -1130,7 +1131,7 @@ impl<'a> Parser<'a> {\n         lo: Span,\n         open_paren: Span,\n         seq: &mut PResult<'a, P<Expr>>,\n-        snapshot: Option<(Self, ExprKind)>,\n+        snapshot: Option<(SnapshotParser<'a>, ExprKind)>,\n     ) -> Option<P<Expr>> {\n         match (seq.as_mut(), snapshot) {\n             (Err(err), Some((mut snapshot, ExprKind::Path(None, path)))) => {\n@@ -1140,7 +1141,7 @@ impl<'a> Parser<'a> {\n                     Ok((fields, ..)) if snapshot.eat(&token::CloseDelim(token::Paren)) => {\n                         // We are certain we have `Enum::Foo(a: 3, b: 4)`, suggest\n                         // `Enum::Foo { a: 3, b: 4 }` or `Enum::Foo(3, 4)`.\n-                        *self = snapshot;\n+                        self.restore_snapshot(snapshot);\n                         let close_paren = self.prev_token.span;\n                         let span = lo.to(self.prev_token.span);\n                         if !fields.is_empty() {"}]}