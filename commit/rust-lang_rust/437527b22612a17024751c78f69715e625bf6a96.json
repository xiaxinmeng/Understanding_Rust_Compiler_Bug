{"sha": "437527b22612a17024751c78f69715e625bf6a96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNzUyN2IyMjYxMmExNzAyNDc1MWM3OGY2OTcxNWU2MjViZjZhOTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-12T19:52:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-12T19:52:07Z"}, "message": "Merge #7986\n\n7986: Simplify a bit r=flodiebold a=flodiebold\n\n\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "f36391dfb670f7ce5ac4b7bbddcb59bf6d045c02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f36391dfb670f7ce5ac4b7bbddcb59bf6d045c02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/437527b22612a17024751c78f69715e625bf6a96", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgS8ZnCRBK7hj4Ov3rIwAAdHIIAJQH6Z3PORymIOPy4EzSwkdu\nufiWD/dO4sWayRz8dgg43/HN/EgDXkOPfZq87kYlA75Ew2jH7fTObuszlWharL+G\nEeGUFbDE68P8Et+CBYySvVjhh3EyPKprvQYAv/3d4rHff7OsbzGCBui5Q4dVUJJK\n/qjDY8yuHGUkGg9Zm71DgohRpVIt95znPz2ty5f9OtqjamTpRSnzawz4XKUQOw4j\ny26gwyoq+LUPRk3dO9zGaTMHuezNVJ7foF5oj2dakoJo53qGJAbETWfkUqQ8Q+eA\n1gm/lca4KJ1zCBE18i2HdZRGpkHmY/0Uuzn+2FCGR0whK5T91pyD2RFoVbw/f/Q=\n=8wUk\n-----END PGP SIGNATURE-----\n", "payload": "tree f36391dfb670f7ce5ac4b7bbddcb59bf6d045c02\nparent 05814e542fe6a303aa2a0d23411391d904d1fa26\nparent 784636f1c15c2b29d9cbdb5b40acfdc519cc601d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615578727 +0000\ncommitter GitHub <noreply@github.com> 1615578727 +0000\n\nMerge #7986\n\n7986: Simplify a bit r=flodiebold a=flodiebold\n\n\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/437527b22612a17024751c78f69715e625bf6a96", "html_url": "https://github.com/rust-lang/rust/commit/437527b22612a17024751c78f69715e625bf6a96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/437527b22612a17024751c78f69715e625bf6a96/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05814e542fe6a303aa2a0d23411391d904d1fa26", "url": "https://api.github.com/repos/rust-lang/rust/commits/05814e542fe6a303aa2a0d23411391d904d1fa26", "html_url": "https://github.com/rust-lang/rust/commit/05814e542fe6a303aa2a0d23411391d904d1fa26"}, {"sha": "784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "url": "https://api.github.com/repos/rust-lang/rust/commits/784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "html_url": "https://github.com/rust-lang/rust/commit/784636f1c15c2b29d9cbdb5b40acfdc519cc601d"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "1a2a3a8c7f1fa8a2d8b0be1c0ebf3449d0027f03", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/437527b22612a17024751c78f69715e625bf6a96/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/437527b22612a17024751c78f69715e625bf6a96/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=437527b22612a17024751c78f69715e625bf6a96", "patch": "@@ -487,19 +487,14 @@ pub(crate) fn struct_datum_query(\n     struct_id: AdtId,\n ) -> Arc<StructDatum> {\n     debug!(\"struct_datum {:?}\", struct_id);\n-    let type_ctor = Ty::Adt(struct_id, Substs::empty());\n     let chalk_ir::AdtId(adt_id) = struct_id;\n-    debug!(\"struct {:?} = {:?}\", struct_id, type_ctor);\n     let num_params = generics(db.upcast(), adt_id.into()).len();\n     let upstream = adt_id.module(db.upcast()).krate() != krate;\n-    let where_clauses = type_ctor\n-        .as_generic_def()\n-        .map(|generic_def| {\n-            let generic_params = generics(db.upcast(), generic_def);\n-            let bound_vars = Substs::bound_vars(&generic_params, DebruijnIndex::INNERMOST);\n-            convert_where_clauses(db, generic_def, &bound_vars)\n-        })\n-        .unwrap_or_else(Vec::new);\n+    let where_clauses = {\n+        let generic_params = generics(db.upcast(), adt_id.into());\n+        let bound_vars = Substs::bound_vars(&generic_params, DebruijnIndex::INNERMOST);\n+        convert_where_clauses(db, adt_id.into(), &bound_vars)\n+    };\n     let flags = rust_ir::AdtFlags {\n         upstream,\n         // FIXME set fundamental and phantom_data flags correctly"}]}