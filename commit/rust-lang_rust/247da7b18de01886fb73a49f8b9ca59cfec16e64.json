{"sha": "247da7b18de01886fb73a49f8b9ca59cfec16e64", "node_id": "C_kwDOAAsO6NoAKDI0N2RhN2IxOGRlMDE4ODZmYjczYTQ5ZjhiOWNhNTljZmVjMTZlNjQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-13T16:24:27Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-13T16:24:27Z"}, "message": "Bless tests", "tree": {"sha": "d12467d81ca0e43aa8ba865a3a605bb87515caa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d12467d81ca0e43aa8ba865a3a605bb87515caa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/247da7b18de01886fb73a49f8b9ca59cfec16e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/247da7b18de01886fb73a49f8b9ca59cfec16e64", "html_url": "https://github.com/rust-lang/rust/commit/247da7b18de01886fb73a49f8b9ca59cfec16e64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/247da7b18de01886fb73a49f8b9ca59cfec16e64/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1452fc1c99bc6d126a096694b0f70d9fe4734b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1452fc1c99bc6d126a096694b0f70d9fe4734b6", "html_url": "https://github.com/rust-lang/rust/commit/f1452fc1c99bc6d126a096694b0f70d9fe4734b6"}], "stats": {"total": 70, "additions": 47, "deletions": 23}, "files": [{"sha": "e58085f701ac26975c6e82c0be88bc0a3feca9db", "filename": "src/test/mir-opt/enum_cast.bar.mir_map.0.mir", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.bar.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.bar.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fenum_cast.bar.mir_map.0.mir?ref=247da7b18de01886fb73a49f8b9ca59cfec16e64", "patch": "@@ -3,11 +3,15 @@\n fn bar(_1: Bar) -> usize {\n     debug bar => _1;                     // in scope 0 at $DIR/enum_cast.rs:+0:8: +0:11\n     let mut _0: usize;                   // return place in scope 0 at $DIR/enum_cast.rs:+0:21: +0:26\n-    let mut _2: isize;                   // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+    let _2: Bar;                         // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+    let mut _3: isize;                   // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n \n     bb0: {\n-        _2 = discriminant(_1);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n-        _0 = move _2 as usize (IntToInt); // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        StorageLive(_2);                 // scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+        _2 = move _1;                    // scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+        _3 = discriminant(_2);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        _0 = move _3 as usize (IntToInt); // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        StorageDead(_2);                 // scope 0 at $DIR/enum_cast.rs:+1:16: +1:17\n         return;                          // scope 0 at $DIR/enum_cast.rs:+2:2: +2:2\n     }\n }"}, {"sha": "525c6234ed31de432f11b761cdf404cf8cb6187a", "filename": "src/test/mir-opt/enum_cast.boo.mir_map.0.mir", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.boo.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.boo.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fenum_cast.boo.mir_map.0.mir?ref=247da7b18de01886fb73a49f8b9ca59cfec16e64", "patch": "@@ -3,11 +3,15 @@\n fn boo(_1: Boo) -> usize {\n     debug boo => _1;                     // in scope 0 at $DIR/enum_cast.rs:+0:8: +0:11\n     let mut _0: usize;                   // return place in scope 0 at $DIR/enum_cast.rs:+0:21: +0:26\n-    let mut _2: u8;                      // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+    let _2: Boo;                         // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+    let mut _3: u8;                      // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n \n     bb0: {\n-        _2 = discriminant(_1);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n-        _0 = move _2 as usize (IntToInt); // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        StorageLive(_2);                 // scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+        _2 = move _1;                    // scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+        _3 = discriminant(_2);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        _0 = move _3 as usize (IntToInt); // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        StorageDead(_2);                 // scope 0 at $DIR/enum_cast.rs:+1:16: +1:17\n         return;                          // scope 0 at $DIR/enum_cast.rs:+2:2: +2:2\n     }\n }"}, {"sha": "bb5faa48047a95b737b95218544ea0d7b154271c", "filename": "src/test/mir-opt/enum_cast.droppy.mir_map.0.mir", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.droppy.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.droppy.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fenum_cast.droppy.mir_map.0.mir?ref=247da7b18de01886fb73a49f8b9ca59cfec16e64", "patch": "@@ -4,8 +4,9 @@ fn droppy() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/enum_cast.rs:+0:13: +0:13\n     let _1: ();                          // in scope 0 at $DIR/enum_cast.rs:+1:5: +6:6\n     let _2: Droppy;                      // in scope 0 at $DIR/enum_cast.rs:+2:13: +2:14\n-    let mut _4: isize;                   // in scope 0 at $DIR/enum_cast.rs:+5:17: +5:18\n-    let _5: Droppy;                      // in scope 0 at $DIR/enum_cast.rs:+7:9: +7:10\n+    let _4: Droppy;                      // in scope 0 at $DIR/enum_cast.rs:+5:17: +5:18\n+    let mut _5: isize;                   // in scope 0 at $DIR/enum_cast.rs:+5:17: +5:18\n+    let _6: Droppy;                      // in scope 0 at $DIR/enum_cast.rs:+7:9: +7:10\n     scope 1 {\n         debug x => _2;                   // in scope 1 at $DIR/enum_cast.rs:+2:13: +2:14\n         scope 2 {\n@@ -16,7 +17,7 @@ fn droppy() -> () {\n         }\n     }\n     scope 4 {\n-        debug z => _5;                   // in scope 4 at $DIR/enum_cast.rs:+7:9: +7:10\n+        debug z => _6;                   // in scope 4 at $DIR/enum_cast.rs:+7:9: +7:10\n     }\n \n     bb0: {\n@@ -25,30 +26,41 @@ fn droppy() -> () {\n         _2 = Droppy::C;                  // scope 0 at $DIR/enum_cast.rs:+2:17: +2:26\n         FakeRead(ForLet(None), _2);      // scope 0 at $DIR/enum_cast.rs:+2:13: +2:14\n         StorageLive(_3);                 // scope 3 at $DIR/enum_cast.rs:+5:13: +5:14\n-        _4 = discriminant(_2);           // scope 3 at $DIR/enum_cast.rs:+5:17: +5:27\n-        _3 = move _4 as usize (IntToInt); // scope 3 at $DIR/enum_cast.rs:+5:17: +5:27\n+        StorageLive(_4);                 // scope 3 at $DIR/enum_cast.rs:+5:17: +5:18\n+        _4 = move _2;                    // scope 3 at $DIR/enum_cast.rs:+5:17: +5:18\n+        _5 = discriminant(_4);           // scope 3 at $DIR/enum_cast.rs:+5:17: +5:27\n+        _3 = move _5 as usize (IntToInt); // scope 3 at $DIR/enum_cast.rs:+5:17: +5:27\n+        drop(_4) -> [return: bb1, unwind: bb4]; // scope 3 at $DIR/enum_cast.rs:+5:26: +5:27\n+    }\n+\n+    bb1: {\n+        StorageDead(_4);                 // scope 3 at $DIR/enum_cast.rs:+5:26: +5:27\n         FakeRead(ForLet(None), _3);      // scope 3 at $DIR/enum_cast.rs:+5:13: +5:14\n         _1 = const ();                   // scope 0 at $DIR/enum_cast.rs:+1:5: +6:6\n         StorageDead(_3);                 // scope 1 at $DIR/enum_cast.rs:+6:5: +6:6\n-        drop(_2) -> [return: bb1, unwind: bb3]; // scope 0 at $DIR/enum_cast.rs:+6:5: +6:6\n+        drop(_2) -> [return: bb2, unwind: bb5]; // scope 0 at $DIR/enum_cast.rs:+6:5: +6:6\n     }\n \n-    bb1: {\n+    bb2: {\n         StorageDead(_2);                 // scope 0 at $DIR/enum_cast.rs:+6:5: +6:6\n         StorageDead(_1);                 // scope 0 at $DIR/enum_cast.rs:+6:5: +6:6\n-        StorageLive(_5);                 // scope 0 at $DIR/enum_cast.rs:+7:9: +7:10\n-        _5 = Droppy::B;                  // scope 0 at $DIR/enum_cast.rs:+7:13: +7:22\n-        FakeRead(ForLet(None), _5);      // scope 0 at $DIR/enum_cast.rs:+7:9: +7:10\n+        StorageLive(_6);                 // scope 0 at $DIR/enum_cast.rs:+7:9: +7:10\n+        _6 = Droppy::B;                  // scope 0 at $DIR/enum_cast.rs:+7:13: +7:22\n+        FakeRead(ForLet(None), _6);      // scope 0 at $DIR/enum_cast.rs:+7:9: +7:10\n         _0 = const ();                   // scope 0 at $DIR/enum_cast.rs:+0:13: +8:2\n-        drop(_5) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/enum_cast.rs:+8:1: +8:2\n+        drop(_6) -> [return: bb3, unwind: bb5]; // scope 0 at $DIR/enum_cast.rs:+8:1: +8:2\n     }\n \n-    bb2: {\n-        StorageDead(_5);                 // scope 0 at $DIR/enum_cast.rs:+8:1: +8:2\n+    bb3: {\n+        StorageDead(_6);                 // scope 0 at $DIR/enum_cast.rs:+8:1: +8:2\n         return;                          // scope 0 at $DIR/enum_cast.rs:+8:2: +8:2\n     }\n \n-    bb3 (cleanup): {\n+    bb4 (cleanup): {\n+        drop(_2) -> bb5;                 // scope 0 at $DIR/enum_cast.rs:+6:5: +6:6\n+    }\n+\n+    bb5 (cleanup): {\n         resume;                          // scope 0 at $DIR/enum_cast.rs:+0:1: +8:2\n     }\n }"}, {"sha": "a1d29a0b9032065d7cf6d4e6f04eecd0feb06452", "filename": "src/test/mir-opt/enum_cast.foo.mir_map.0.mir", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.foo.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/247da7b18de01886fb73a49f8b9ca59cfec16e64/src%2Ftest%2Fmir-opt%2Fenum_cast.foo.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fenum_cast.foo.mir_map.0.mir?ref=247da7b18de01886fb73a49f8b9ca59cfec16e64", "patch": "@@ -3,11 +3,15 @@\n fn foo(_1: Foo) -> usize {\n     debug foo => _1;                     // in scope 0 at $DIR/enum_cast.rs:+0:8: +0:11\n     let mut _0: usize;                   // return place in scope 0 at $DIR/enum_cast.rs:+0:21: +0:26\n-    let mut _2: isize;                   // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+    let _2: Foo;                         // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+    let mut _3: isize;                   // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n \n     bb0: {\n-        _2 = discriminant(_1);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n-        _0 = move _2 as usize (IntToInt); // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        StorageLive(_2);                 // scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+        _2 = move _1;                    // scope 0 at $DIR/enum_cast.rs:+1:5: +1:8\n+        _3 = discriminant(_2);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        _0 = move _3 as usize (IntToInt); // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17\n+        StorageDead(_2);                 // scope 0 at $DIR/enum_cast.rs:+1:16: +1:17\n         return;                          // scope 0 at $DIR/enum_cast.rs:+2:2: +2:2\n     }\n }"}]}