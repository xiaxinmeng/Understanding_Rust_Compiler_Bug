{"sha": "edd9e5b7b12ed1093a87ba51e25443f7e1098c4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZDllNWI3YjEyZWQxMDkzYTg3YmE1MWUyNTQ0M2Y3ZTEwOThjNGY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-13T16:22:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-22T16:42:01Z"}, "message": "test BTree a bit more", "tree": {"sha": "8c9f710717050c4b44fc6ce9843affc445204d9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c9f710717050c4b44fc6ce9843affc445204d9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edd9e5b7b12ed1093a87ba51e25443f7e1098c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edd9e5b7b12ed1093a87ba51e25443f7e1098c4f", "html_url": "https://github.com/rust-lang/rust/commit/edd9e5b7b12ed1093a87ba51e25443f7e1098c4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edd9e5b7b12ed1093a87ba51e25443f7e1098c4f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76138c56575c347207039bdeafb8456bd72116ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/76138c56575c347207039bdeafb8456bd72116ad", "html_url": "https://github.com/rust-lang/rust/commit/76138c56575c347207039bdeafb8456bd72116ad"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "e2049d9480322b4337f7356f3b5dd2a81016d0d1", "filename": "tests/run-pass/btreemap.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/edd9e5b7b12ed1093a87ba51e25443f7e1098c4f/tests%2Frun-pass%2Fbtreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd9e5b7b12ed1093a87ba51e25443f7e1098c4f/tests%2Frun-pass%2Fbtreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbtreemap.rs?ref=edd9e5b7b12ed1093a87ba51e25443f7e1098c4f", "patch": "@@ -1,3 +1,5 @@\n+use std::collections::{BTreeMap, BTreeSet};\n+\n #[derive(PartialEq, Eq, PartialOrd, Ord)]\n pub enum Foo {\n     A(&'static str),\n@@ -6,11 +8,22 @@ pub enum Foo {\n }\n \n pub fn main() {\n-    let mut b = std::collections::BTreeSet::new();\n+    let mut b = BTreeSet::new();\n     b.insert(Foo::A(\"\\'\"));\n     b.insert(Foo::A(\"/=\"));\n     b.insert(Foo::A(\"#\"));\n     b.insert(Foo::A(\"0o\"));\n     assert!(b.remove(&Foo::A(\"/=\")));\n     assert!(!b.remove(&Foo::A(\"/=\")));\n+\n+    // Also test a lower-alignment type, where the NodeHeader overlaps with\n+    // the keys.\n+    let mut b = BTreeSet::new();\n+    b.insert(1024);\n+    b.insert(7);\n+\n+    let mut b = BTreeMap::new();\n+    b.insert(\"bar\", 1024);\n+    b.insert(\"baz\", 7);\n+    for _val in b.iter_mut() {}\n }"}]}