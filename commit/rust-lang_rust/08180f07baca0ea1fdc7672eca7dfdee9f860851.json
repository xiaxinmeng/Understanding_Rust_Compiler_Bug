{"sha": "08180f07baca0ea1fdc7672eca7dfdee9f860851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MTgwZjA3YmFjYTBlYTFmZGM3NjcyZWNhN2RmZGVlOWY4NjA4NTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-07T12:07:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-07T13:44:30Z"}, "message": "update docs", "tree": {"sha": "80e9015dde42ce77c8be9ffe23a3045461963e00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80e9015dde42ce77c8be9ffe23a3045461963e00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08180f07baca0ea1fdc7672eca7dfdee9f860851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08180f07baca0ea1fdc7672eca7dfdee9f860851", "html_url": "https://github.com/rust-lang/rust/commit/08180f07baca0ea1fdc7672eca7dfdee9f860851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08180f07baca0ea1fdc7672eca7dfdee9f860851/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1889b9fe5a25f4fa2f5f29fd694afe8158ac0886", "url": "https://api.github.com/repos/rust-lang/rust/commits/1889b9fe5a25f4fa2f5f29fd694afe8158ac0886", "html_url": "https://github.com/rust-lang/rust/commit/1889b9fe5a25f4fa2f5f29fd694afe8158ac0886"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1d97b61f43d56fdd19a02d1480cf6d61fa1af072", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08180f07baca0ea1fdc7672eca7dfdee9f860851/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/08180f07baca0ea1fdc7672eca7dfdee9f860851/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=08180f07baca0ea1fdc7672eca7dfdee9f860851", "patch": "@@ -48,12 +48,12 @@ Now you can run your project in Miri:\n 3. If you have a binary project, you can run it through Miri using `cargo\n    +nightly miri run`.\n \n-When running code via `cargo miri`, the `cargo-miri` feature is set.  You can\n+When running code via `cargo miri`, the `miri` config flag is set.  You can\n use this to exclude test cases that will fail under Miri because they do things\n Miri does not support:\n \n ```rust\n-#[cfg(not(feature = \"cargo-miri\"))]\n+#[cfg(not(miri))]\n #[test]\n fn does_not_work_on_miri() {\n     let x = 0u8;"}]}