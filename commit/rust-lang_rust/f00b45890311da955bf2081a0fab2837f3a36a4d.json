{"sha": "f00b45890311da955bf2081a0fab2837f3a36a4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMGI0NTg5MDMxMWRhOTU1YmYyMDgxYTBmYWIyODM3ZjNhMzZhNGQ=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2021-01-07T17:32:42Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2021-01-07T17:32:42Z"}, "message": "Tighten/clarify documentation of rc data_offset", "tree": {"sha": "fb1cdffaccceec60d35cbe95dc846d8fdfc55668", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb1cdffaccceec60d35cbe95dc846d8fdfc55668"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f00b45890311da955bf2081a0fab2837f3a36a4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f00b45890311da955bf2081a0fab2837f3a36a4d", "html_url": "https://github.com/rust-lang/rust/commit/f00b45890311da955bf2081a0fab2837f3a36a4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f00b45890311da955bf2081a0fab2837f3a36a4d/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc772cdc0a9021a6286ebd550c2f6221179f21d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc772cdc0a9021a6286ebd550c2f6221179f21d", "html_url": "https://github.com/rust-lang/rust/commit/6bc772cdc0a9021a6286ebd550c2f6221179f21d"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "61d70a62dcaeab1bd4e6ed336e7e0e2fc43e7df9", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f00b45890311da955bf2081a0fab2837f3a36a4d/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f00b45890311da955bf2081a0fab2837f3a36a4d/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=f00b45890311da955bf2081a0fab2837f3a36a4d", "patch": "@@ -2325,11 +2325,8 @@ impl<T: ?Sized> Unpin for Rc<T> {}\n ///\n /// # Safety\n ///\n-/// This has the same safety requirements as `align_of_val_raw`. In effect:\n-///\n-/// - This function is safe for any argument if `T` is sized, and\n-/// - if `T` is unsized, the pointer must have appropriate pointer metadata\n-///   acquired from the real instance that you are getting this offset for.\n+/// The pointer must point to (and have valid metadata for) a previously\n+/// valid instance of T, but the T is allowed to be dropped.\n unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Align the unsized value to the end of the `RcBox`.\n     // Because it is ?Sized, it will always be the last field in memory."}, {"sha": "1ca6b6d633590f48cfc61793deb989885206076a", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f00b45890311da955bf2081a0fab2837f3a36a4d/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f00b45890311da955bf2081a0fab2837f3a36a4d/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=f00b45890311da955bf2081a0fab2837f3a36a4d", "patch": "@@ -2476,11 +2476,8 @@ impl<T: ?Sized> Unpin for Arc<T> {}\n ///\n /// # Safety\n ///\n-/// This has the same safety requirements as `align_of_val_raw`. In effect:\n-///\n-/// - This function is safe for any argument if `T` is sized, and\n-/// - if `T` is unsized, the pointer must have appropriate pointer metadata\n-///   acquired from the real instance that you are getting this offset for.\n+/// The pointer must point to (and have valid metadata for) a previously\n+/// valid instance of T, but the T is allowed to be dropped.\n unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Align the unsized value to the end of the `ArcInner`.\n     // Because it is `?Sized`, it will always be the last field in memory."}]}