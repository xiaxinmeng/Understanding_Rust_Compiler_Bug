{"sha": "8337dcd9e277feac8e9cff621c752a3e86ba19e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMzdkY2Q5ZTI3N2ZlYWM4ZTljZmY2MjFjNzUyYTNlODZiYTE5ZTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-07T13:21:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-07T13:21:02Z"}, "message": "Merge #3047\n\n3047: Update async unsafe fn ordering in parser r=matklad a=kiljacken\n\nAs of rust-lang/rust#61319 the correct order for functions that are both unsafe and async is: `async unsafe fn` and not `unsafe async fn`.\r\n\r\nThis commit updates the parser tests to reflect this, and corrects parsing behavior to accept the correct ordering.\r\n\r\nFixes #3025\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>", "tree": {"sha": "f9658afc43f76b864a7a6e49b6349d12283632c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9658afc43f76b864a7a6e49b6349d12283632c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8337dcd9e277feac8e9cff621c752a3e86ba19e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJePWQ+CRBK7hj4Ov3rIwAAdHIIAKI/H5Q7p/dW8Qwq9CkxkNXu\n5C0+YcaiglrXmec1T8ShsdkvW80Hm1jfd0B7f9YVSKF4ZcYH/EO6c1S2ytqVjkip\nsf/CMY6yX2KIefkt1oZtb0xYi63ZYOFXET69l4vbuodqtrFA/wZ04ouMOccNwMRM\ntf1+wNJqpbUhHkliFiAFBl5ME3GNYgzL2xJjarfzbfVUqpdlkEKhPCOLCDsnwI5H\nSShVvJ4LyRaScr2Z0kWRYjkQQ+9mTrbrpBhHvLmBx2o11zRp0Om1mlTS4dh2+lEa\nQAG2C7wijDfV44y1DempBxYocGsQ0IHmvJQoQmjvNvrszJ07G/eUp7HiCcRJyr8=\n=gQyJ\n-----END PGP SIGNATURE-----\n", "payload": "tree f9658afc43f76b864a7a6e49b6349d12283632c8\nparent 6d6a995e09c74a8b1075842fb3cd7232354389ae\nparent 73ec2ab184f6d8828ebcdca418a7ae83bb60b0bc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581081662 +0000\ncommitter GitHub <noreply@github.com> 1581081662 +0000\n\nMerge #3047\n\n3047: Update async unsafe fn ordering in parser r=matklad a=kiljacken\n\nAs of rust-lang/rust#61319 the correct order for functions that are both unsafe and async is: `async unsafe fn` and not `unsafe async fn`.\r\n\r\nThis commit updates the parser tests to reflect this, and corrects parsing behavior to accept the correct ordering.\r\n\r\nFixes #3025\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8337dcd9e277feac8e9cff621c752a3e86ba19e6", "html_url": "https://github.com/rust-lang/rust/commit/8337dcd9e277feac8e9cff621c752a3e86ba19e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8337dcd9e277feac8e9cff621c752a3e86ba19e6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d6a995e09c74a8b1075842fb3cd7232354389ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d6a995e09c74a8b1075842fb3cd7232354389ae", "html_url": "https://github.com/rust-lang/rust/commit/6d6a995e09c74a8b1075842fb3cd7232354389ae"}, {"sha": "73ec2ab184f6d8828ebcdca418a7ae83bb60b0bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/73ec2ab184f6d8828ebcdca418a7ae83bb60b0bc", "html_url": "https://github.com/rust-lang/rust/commit/73ec2ab184f6d8828ebcdca418a7ae83bb60b0bc"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "54284c933eb5c19d18b507647d704ba952932efa", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=8337dcd9e277feac8e9cff621c752a3e86ba19e6", "patch": "@@ -91,20 +91,20 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n     // modifiers\n     has_mods |= p.eat(T![const]);\n \n-    // test_err unsafe_block_in_mod\n-    // fn foo(){} unsafe { } fn bar(){}\n-    if p.at(T![unsafe]) && p.nth(1) != T!['{'] {\n-        p.eat(T![unsafe]);\n-        has_mods = true;\n-    }\n-\n     // test_err async_without_semicolon\n     // fn foo() { let _ = async {} }\n     if p.at(T![async]) && p.nth(1) != T!['{'] && p.nth(1) != T![move] && p.nth(1) != T![|] {\n         p.eat(T![async]);\n         has_mods = true;\n     }\n \n+    // test_err unsafe_block_in_mod\n+    // fn foo(){} unsafe { } fn bar(){}\n+    if p.at(T![unsafe]) && p.nth(1) != T!['{'] {\n+        p.eat(T![unsafe]);\n+        has_mods = true;\n+    }\n+\n     if p.at(T![extern]) {\n         has_mods = true;\n         abi(p);\n@@ -157,11 +157,11 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         // unsafe fn foo() {}\n \n         // test combined_fns\n-        // unsafe async fn foo() {}\n+        // async unsafe fn foo() {}\n         // const unsafe fn bar() {}\n \n         // test_err wrong_order_fns\n-        // async unsafe fn foo() {}\n+        // unsafe async fn foo() {}\n         // unsafe const fn bar() {}\n         T![fn] => {\n             fn_def(p);"}, {"sha": "731e58013bd87ce4eb651d49acb1c7900d9fde79", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rs?ref=8337dcd9e277feac8e9cff621c752a3e86ba19e6", "patch": "@@ -1,2 +1,2 @@\n-async unsafe fn foo() {}\n+unsafe async fn foo() {}\n unsafe const fn bar() {}"}, {"sha": "289193b9e7fdd2f89257bfe4e99abc93466644b9", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.txt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.txt?ref=8337dcd9e277feac8e9cff621c752a3e86ba19e6", "patch": "@@ -1,9 +1,9 @@\n SOURCE_FILE@[0; 50)\n-  ERROR@[0; 5)\n-    ASYNC_KW@[0; 5) \"async\"\n-  WHITESPACE@[5; 6) \" \"\n-  FN_DEF@[6; 24)\n-    UNSAFE_KW@[6; 12) \"unsafe\"\n+  ERROR@[0; 6)\n+    UNSAFE_KW@[0; 6) \"unsafe\"\n+  WHITESPACE@[6; 7) \" \"\n+  FN_DEF@[7; 24)\n+    ASYNC_KW@[7; 12) \"async\"\n     WHITESPACE@[12; 13) \" \"\n     FN_KW@[13; 15) \"fn\"\n     WHITESPACE@[15; 16) \" \"\n@@ -37,5 +37,5 @@ SOURCE_FILE@[0; 50)\n         L_CURLY@[47; 48) \"{\"\n         R_CURLY@[48; 49) \"}\"\n   WHITESPACE@[49; 50) \"\\n\"\n-error 5: expected existential, fn, trait or impl\n+error 6: expected existential, fn, trait or impl\n error 31: expected existential, fn, trait or impl"}, {"sha": "12628714532d41149bfad1228747d9c8727d4576", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0128_combined_fns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rs?ref=8337dcd9e277feac8e9cff621c752a3e86ba19e6", "patch": "@@ -1,2 +1,2 @@\n-unsafe async fn foo() {}\n+async unsafe fn foo() {}\n const unsafe fn bar() {}"}, {"sha": "8a972cdb25fd0c4cbaa5c0e13cceaba6cab41202", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0128_combined_fns.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8337dcd9e277feac8e9cff621c752a3e86ba19e6/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.txt?ref=8337dcd9e277feac8e9cff621c752a3e86ba19e6", "patch": "@@ -1,8 +1,8 @@\n SOURCE_FILE@[0; 50)\n   FN_DEF@[0; 24)\n-    UNSAFE_KW@[0; 6) \"unsafe\"\n-    WHITESPACE@[6; 7) \" \"\n-    ASYNC_KW@[7; 12) \"async\"\n+    ASYNC_KW@[0; 5) \"async\"\n+    WHITESPACE@[5; 6) \" \"\n+    UNSAFE_KW@[6; 12) \"unsafe\"\n     WHITESPACE@[12; 13) \" \"\n     FN_KW@[13; 15) \"fn\"\n     WHITESPACE@[15; 16) \" \""}]}