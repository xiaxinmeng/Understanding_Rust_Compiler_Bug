{"sha": "080449de0c3f5ad56189439e50ece02115c1778a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MDQ0OWRlMGMzZjVhZDU2MTg5NDM5ZTUwZWNlMDIxMTVjMTc3OGE=", "commit": {"author": {"name": "Clark Gaebel", "email": "cgaebel@mozilla.com", "date": "2014-08-28T21:57:16Z"}, "committer": {"name": "Clark Gaebel", "email": "cgaebel@mozilla.com", "date": "2014-08-28T21:57:16Z"}, "message": "Fixed misleading docs in liballoc", "tree": {"sha": "72625120ce9ca1fa8a569b38cf969d76934749e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72625120ce9ca1fa8a569b38cf969d76934749e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/080449de0c3f5ad56189439e50ece02115c1778a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/080449de0c3f5ad56189439e50ece02115c1778a", "html_url": "https://github.com/rust-lang/rust/commit/080449de0c3f5ad56189439e50ece02115c1778a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/080449de0c3f5ad56189439e50ece02115c1778a/comments", "author": null, "committer": null, "parents": [{"sha": "ba39b50943aa55790f79ccdebc446b0f7e6d0d3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba39b50943aa55790f79ccdebc446b0f7e6d0d3f", "html_url": "https://github.com/rust-lang/rust/commit/ba39b50943aa55790f79ccdebc446b0f7e6d0d3f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "503c484e469d7eebfaff61c65697221fc6e5ced3", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/080449de0c3f5ad56189439e50ece02115c1778a/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/080449de0c3f5ad56189439e50ece02115c1778a/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=080449de0c3f5ad56189439e50ece02115c1778a", "patch": "@@ -12,7 +12,7 @@\n //!\n //! This is the lowest level library through which allocation in Rust can be\n //! performed where the allocation is assumed to succeed. This library will\n-//! trigger a task failure when allocation fails.\n+//! abort the process when allocation fails.\n //!\n //! This library, like libcore, is not intended for general usage, but rather as\n //! a building block of other libraries. The types and interfaces in this"}]}