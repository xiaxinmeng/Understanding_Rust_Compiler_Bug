{"sha": "96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae", "node_id": "C_kwDOAAsO6NoAKDk2Y2ZjOWU3M2E2ZjY4YmRlOTQwZDY4ZGMwNjlkODRlOGM4ZmM2YWU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-11-16T00:14:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-16T00:14:19Z"}, "message": "Rollup merge of #90835 - sunfishcode:sunfishcode/wasi-char-device, r=alexcrichton\n\nRename WASI's `is_character_device` to `is_char_device`.\n\nRename WASI's `FileTypeExt::is_character_device` to\n`FileTypeExt::is_char_device`, for consistency with the Unix\n`FileTypeExt::is_char_device`.\n\nAlso, add a `FileTypeExt::is_socket` function, for consistency with the\nUnix `FileTypeExt::is_socket` function.\n\nr? `@alexcrichton`", "tree": {"sha": "0f2fce5894af9ed7f49b5b4afb001ba7607e9303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f2fce5894af9ed7f49b5b4afb001ba7607e9303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhkvfcCRBK7hj4Ov3rIwAAZNcIADOsO8hIFyQEzuahurAR3oV2\n45dnPN0anNjZ8PVRMlcNXkQ/DbVoMPbJ7ePXH2TCy4PGUHXZnotu/G59W+eArmqc\nmHwaCcW/HZ4E/Hb3bfyo+1lCnOrYqJIAZ5SbkMpTfnnABGT/nJHWjgaTOhsqLF37\nbZMnM1sW/NlIDid0WIAvFiLwxO5JNSTrvRUWRU2la2KoyWA8810j7CtYiHYNiOYZ\nr3uHvg/gV4txRsEvkd1KWZuJ8wJ+7AlcoWaKcSGSalSpeXzWbjdV9IMJeO293B+0\nyVHDrdRcv4NZDBOdWZj0fQcFBLYQvUZVqO1mXZtnWts2aSYvbQ7jqwjFMCs10iA=\n=9Cni\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f2fce5894af9ed7f49b5b4afb001ba7607e9303\nparent ed7ed5fc9019f7968502d01270a82a9fa3685ee4\nparent 2d46d1bec94ba9239f9c2305c574b34b853de1e5\nauthor Yuki Okushi <jtitor@2k36.org> 1637021659 +0900\ncommitter GitHub <noreply@github.com> 1637021659 +0900\n\nRollup merge of #90835 - sunfishcode:sunfishcode/wasi-char-device, r=alexcrichton\n\nRename WASI's `is_character_device` to `is_char_device`.\n\nRename WASI's `FileTypeExt::is_character_device` to\n`FileTypeExt::is_char_device`, for consistency with the Unix\n`FileTypeExt::is_char_device`.\n\nAlso, add a `FileTypeExt::is_socket` function, for consistency with the\nUnix `FileTypeExt::is_socket` function.\n\nr? `@alexcrichton`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae", "html_url": "https://github.com/rust-lang/rust/commit/96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed7ed5fc9019f7968502d01270a82a9fa3685ee4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed7ed5fc9019f7968502d01270a82a9fa3685ee4", "html_url": "https://github.com/rust-lang/rust/commit/ed7ed5fc9019f7968502d01270a82a9fa3685ee4"}, {"sha": "2d46d1bec94ba9239f9c2305c574b34b853de1e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d46d1bec94ba9239f9c2305c574b34b853de1e5", "html_url": "https://github.com/rust-lang/rust/commit/2d46d1bec94ba9239f9c2305c574b34b853de1e5"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5c62679f552d659d06e8e0f810fa93700dd62141", "filename": "library/std/src/os/wasi/fs.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Ffs.rs?ref=96cfc9e73a6f68bde940d68dc069d84e8c8fc6ae", "patch": "@@ -444,18 +444,22 @@ pub trait FileTypeExt {\n     /// Returns `true` if this file type is a block device.\n     fn is_block_device(&self) -> bool;\n     /// Returns `true` if this file type is a character device.\n-    fn is_character_device(&self) -> bool;\n+    fn is_char_device(&self) -> bool;\n     /// Returns `true` if this file type is a socket datagram.\n     fn is_socket_dgram(&self) -> bool;\n     /// Returns `true` if this file type is a socket stream.\n     fn is_socket_stream(&self) -> bool;\n+    /// Returns `true` if this file type is any type of socket.\n+    fn is_socket(&self) -> bool {\n+        self.is_socket_stream() || self.is_socket_dgram()\n+    }\n }\n \n impl FileTypeExt for fs::FileType {\n     fn is_block_device(&self) -> bool {\n         self.as_inner().bits() == wasi::FILETYPE_BLOCK_DEVICE\n     }\n-    fn is_character_device(&self) -> bool {\n+    fn is_char_device(&self) -> bool {\n         self.as_inner().bits() == wasi::FILETYPE_CHARACTER_DEVICE\n     }\n     fn is_socket_dgram(&self) -> bool {"}]}