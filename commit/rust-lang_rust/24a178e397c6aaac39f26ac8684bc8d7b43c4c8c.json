{"sha": "24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YTE3OGUzOTdjNmFhYWMzOWYyNmFjODY4NGJjOGQ3YjQzYzRjOGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-29T00:01:57Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-30T08:43:32Z"}, "message": "--bless tests due to INCOMPLETE_FEATURES being a lint.", "tree": {"sha": "88894a013f1959d81c0ab3ab7cf31dc6167cfe80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88894a013f1959d81c0ab3ab7cf31dc6167cfe80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "html_url": "https://github.com/rust-lang/rust/commit/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a9017323904e7047a7e69f0b07dd57938942697", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9017323904e7047a7e69f0b07dd57938942697", "html_url": "https://github.com/rust-lang/rust/commit/8a9017323904e7047a7e69f0b07dd57938942697"}], "stats": {"total": 217, "additions": 163, "deletions": 54}, "files": [{"sha": "7f14a033688bdb4f5e9ab32717c4ab9b6e4b3ac9", "filename": "src/test/ui/associated-type-bounds/duplicate.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0719]: the value of the associated type `Item` (from the trait `std::iter::Iterator`) is already specified\n   --> $DIR/duplicate.rs:12:36"}, {"sha": "1b3975f0999b656dc5aa383f24a05a0c1a9a0e99", "filename": "src/test/ui/associated-type-bounds/dyn-lcsit.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fdyn-lcsit.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "7c4349541e000f5929b963241260174b6c72acf3", "filename": "src/test/ui/associated-type-bounds/lcsit.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Flcsit.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "c4ad38a571170d7db9ce141f884957c73b7f8e46", "filename": "src/test/ui/const-generics/apit-with-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fapit-with-const-param.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "5a5eaba0b197e58143e994b49e1e1715c60a4908", "filename": "src/test/ui/const-generics/array-wrapper-struct-ctor.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-wrapper-struct-ctor.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "51de98ad5237af9e799ef1e759bcb7e2108d2750", "filename": "src/test/ui/const-generics/broken-mir-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-1.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "b72bc6a46a05615089b5cfd17945bf0c7f5bca8b", "filename": "src/test/ui/const-generics/broken-mir-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fbroken-mir-2.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0277]: arrays only have std trait implementations for lengths 0..=32\n   --> $DIR/broken-mir-2.rs:7:36"}, {"sha": "32adc63156a37b6dc2193d89e0a52bffc470b182", "filename": "src/test/ui/const-generics/cannot-infer-const-args.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-const-args.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0282]: type annotations needed\n   --> $DIR/cannot-infer-const-args.rs:9:5"}, {"sha": "00a98e3ba9b3ecf2e490a45ef4790fb47a8ee396", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "0392488fce1c75bc6f14a908bd89f10d7e5fa6d5", "filename": "src/test/ui/const-generics/concrete-const-as-fn-arg.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-as-fn-arg.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "5e730b5643a7dcff7bbf4c423c5887c5984efed5", "filename": "src/test/ui/const-generics/concrete-const-impl-method.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconcrete-const-impl-method.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "c9e22ab39018b43802116432fc4952a7d8c538dc", "filename": "src/test/ui/const-generics/condition-in-trait-const-arg.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcondition-in-trait-const-arg.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "61ba9cdaf55b4f4d273e76248a7b85917af6857b", "filename": "src/test/ui/const-generics/const-arg-in-fn.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-fn.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "7311e27c289f764adec0e5c78cf01965d8aca07e", "filename": "src/test/ui/const-generics/const-expression-parameter.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -9,6 +9,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: aborting due to previous error\n "}, {"sha": "3437ed33d0c6f660d4ae56a3febae514f718f6df", "filename": "src/test/ui/const-generics/const-fn-with-const-param.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,9 +1,3 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n-  --> $DIR/const-fn-with-const-param.rs:1:12\n-   |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n-\n error: const parameters are not permitted in `const fn`\n   --> $DIR/const-fn-with-const-param.rs:4:1\n    |\n@@ -13,5 +7,13 @@ LL | |     X\n LL | | }\n    | |_^\n \n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/const-fn-with-const-param.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n error: aborting due to previous error\n "}, {"sha": "5c7b6a70d3b3f99d4a6e76f5eaa1671f5cf9bb6a", "filename": "src/test/ui/const-generics/const-generic-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-array-wrapper.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "5bdbfd8ff1f3907ba6dce0faaa0004261a8c2c76", "filename": "src/test/ui/const-generics/const-param-before-other-params.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.rs?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,5 +1,4 @@\n #![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n fn bar<const X: (), 'a>(_: &'a ()) {\n     //~^ ERROR lifetime parameters must be declared prior to const parameters"}, {"sha": "87622f7e50010d5c57a282cd515164afeccffcd3", "filename": "src/test/ui/const-generics/const-param-before-other-params.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,17 +1,11 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n-  --> $DIR/const-param-before-other-params.rs:1:12\n-   |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n-\n error: lifetime parameters must be declared prior to const parameters\n-  --> $DIR/const-param-before-other-params.rs:4:21\n+  --> $DIR/const-param-before-other-params.rs:3:21\n    |\n LL | fn bar<const X: (), 'a>(_: &'a ()) {\n    |       --------------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, const X: ()>`\n \n error: type parameters must be declared prior to const parameters\n-  --> $DIR/const-param-before-other-params.rs:8:21\n+  --> $DIR/const-param-before-other-params.rs:7:21\n    |\n LL | fn foo<const X: (), T>(_: &T) {\n    |       --------------^- help: reorder the parameters: lifetimes, then types, then consts: `<T, const X: ()>`"}, {"sha": "90ca85cd62f92bf29c45df22a571b48e27f8af88", "filename": "src/test/ui/const-generics/const-param-from-outer-fn.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,9 +1,3 @@\n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n-  --> $DIR/const-param-from-outer-fn.rs:1:12\n-   |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n-\n error[E0401]: can't use generic parameters from outer function\n   --> $DIR/const-param-from-outer-fn.rs:6:9\n    |\n@@ -14,6 +8,14 @@ LL |     fn bar() -> u32 {\n LL |         X\n    |         ^ use of generic parameter from outer function\n \n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/const-param-from-outer-fn.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0401`."}, {"sha": "c45523d2fa6f6aac6f441f04456f35d1fe18534c", "filename": "src/test/ui/const-generics/const-param-in-trait.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "142efe45ac2d7ce8a042fdbad6dd7be1b53bf89d", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,14 +1,16 @@\n+error[E0671]: const parameters cannot depend on type parameters\n+  --> $DIR/const-param-type-depends-on-type-param.rs:9:34\n+   |\n+LL | pub struct Dependent<T, const X: T>([(); X]);\n+   |                                  ^ const parameter depends on type parameter\n+\n warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n   --> $DIR/const-param-type-depends-on-type-param.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n-\n-error[E0671]: const parameters cannot depend on type parameters\n-  --> $DIR/const-param-type-depends-on-type-param.rs:9:34\n    |\n-LL | pub struct Dependent<T, const X: T>([(); X]);\n-   |                                  ^ const parameter depends on type parameter\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0392]: parameter `T` is never used\n   --> $DIR/const-param-type-depends-on-type-param.rs:9:22"}, {"sha": "fddb06981bc734754c1093921f252ec01acba8c6", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: const parameter `x` should have an upper case name\n   --> $DIR/const-parameter-uppercase-lint.rs:6:15"}, {"sha": "ca3d7810ca530566aefa86e8470053635e8e0b18", "filename": "src/test/ui/const-generics/const-types.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-types.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "08a9037a207b3a79094754a65922efea60701724", "filename": "src/test/ui/const-generics/derive-debug-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fderive-debug-array-wrapper.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0277]: arrays only have std trait implementations for lengths 0..=32\n   --> $DIR/derive-debug-array-wrapper.rs:6:5"}, {"sha": "d7f8f1364eef84346917fbc377dbf0772ba3b6bf", "filename": "src/test/ui/const-generics/fn-taking-const-generic-array.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ffn-taking-const-generic-array.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "1eae9c4038959a9232b7f80dd8dbeb87a8a94693", "filename": "src/test/ui/const-generics/impl-const-generic-struct.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fimpl-const-generic-struct.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "6aa1c23176bfaf44d5eff49db12fe6ccc2590997", "filename": "src/test/ui/const-generics/incorrect-number-of-const-args.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fincorrect-number-of-const-args.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0107]: wrong number of const arguments: expected 2, found 1\n   --> $DIR/incorrect-number-of-const-args.rs:9:5"}, {"sha": "3e0cd8168818f426f3932e95c9edd88e0e1681ea", "filename": "src/test/ui/const-generics/issue-60818-struct-constructors.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-60818-struct-constructors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-60818-struct-constructors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-60818-struct-constructors.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "949fa896d8780bfee6151da612a488bed1f0e51b", "filename": "src/test/ui/const-generics/issue-61336-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-1.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: array lengths can't depend on generic parameters\n   --> $DIR/issue-61336-1.rs:5:9"}, {"sha": "63f86c81b1e7f0a727778c44e2afef0c33e3abb4", "filename": "src/test/ui/const-generics/issue-61336-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: array lengths can't depend on generic parameters\n   --> $DIR/issue-61336-2.rs:5:9"}, {"sha": "f96e8e02d4ec03ca347561411e397ed1b8cb0c8f", "filename": "src/test/ui/const-generics/issue-61336.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: array lengths can't depend on generic parameters\n   --> $DIR/issue-61336.rs:5:9"}, {"sha": "166bd3c2d3b67a65d717b383bee81344d1c55acf", "filename": "src/test/ui/const-generics/issue-61422.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61422.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61422.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61422.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "bd7ae49193eed357941c657928ed0bc37b6efb6f", "filename": "src/test/ui/const-generics/mut-ref-const-param-array.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmut-ref-const-param-array.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "dfa2557e9f6f8479da5fc852a40ac943b169fe2c", "filename": "src/test/ui/const-generics/struct-with-invalid-const-param.stderr", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fstruct-with-invalid-const-param.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,14 +1,16 @@\n+error[E0573]: expected type, found const parameter `C`\n+  --> $DIR/struct-with-invalid-const-param.rs:4:23\n+   |\n+LL | struct S<const C: u8>(C);\n+   |                       ^ help: a struct with a similar name exists: `S`\n+\n warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n   --> $DIR/struct-with-invalid-const-param.rs:1:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n-\n-error[E0573]: expected type, found const parameter `C`\n-  --> $DIR/struct-with-invalid-const-param.rs:4:23\n    |\n-LL | struct S<const C: u8>(C);\n-   |                       ^ help: a struct with a similar name exists: `S`\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: aborting due to previous error\n "}, {"sha": "156eddafff0104c2b029a6f81484d783df1df9f5", "filename": "src/test/ui/const-generics/transparent-maybeunit-array-wrapper.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftransparent-maybeunit-array-wrapper.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "3c05a354440f0847b53d1e10f016081e647e9eb8", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-1.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-1.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "f27fc531031f9b9e95b7520955a4d043e327c247", "filename": "src/test/ui/const-generics/uninferred-consts-during-codegen-2.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funinferred-consts-during-codegen-2.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "27f023eeeff4c465544353db75df9fab3a440da8", "filename": "src/test/ui/const-generics/unused-const-param.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused-const-param.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "9309ee99064c968db3cc8a8a1940d6f27f5aac45", "filename": "src/test/ui/error-codes/E0730.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0730.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0730]: cannot pattern-match on an array without a fixed length\n   --> $DIR/E0730.rs:6:9"}, {"sha": "81754c8f706b59d5feeabfab13a69228e845408e", "filename": "src/test/ui/existential_types/existential_type_const.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fexistential_types%2Fexistential_type_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fexistential_types%2Fexistential_type_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fexistential_type_const.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "b3e4fef08c20ecd1b36cd8a37ee3f9a94216b84a", "filename": "src/test/ui/hygiene/generic_params.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fgeneric_params.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(decl_macro, rustc_attrs, const_generics)]\n    |                                     ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "c9aac6609a184c99b718f71142dcf1b09924f5c7", "filename": "src/test/ui/hygiene/issue-61574-const-parameters.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fissue-61574-const-parameters.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "629089d8c5c5ddc8a460f0e47a3e5eca3eddf994", "filename": "src/test/ui/impl-trait-in-bindings.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait-in-bindings.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "ad108173a7a1e79e558c125226cead8efbfc1fb1", "filename": "src/test/ui/impl-trait/bindings-opaque.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings-opaque.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0599]: no method named `count_ones` found for type `impl std::marker::Copy` in the current scope\n   --> $DIR/bindings-opaque.rs:11:17"}, {"sha": "e93859551978429d83183ce92981a9bfc443bcdb", "filename": "src/test/ui/impl-trait/bindings.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,9 +1,3 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n-  --> $DIR/bindings.rs:1:12\n-   |\n-LL | #![feature(impl_trait_in_bindings)]\n-   |            ^^^^^^^^^^^^^^^^^^^^^^\n-\n error[E0435]: attempt to use a non-constant value in a constant\n   --> $DIR/bindings.rs:5:29\n    |\n@@ -28,6 +22,14 @@ error[E0435]: attempt to use a non-constant value in a constant\n LL |         const foo: impl Clone = x;\n    |                                 ^ non-constant value\n \n+warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n+  --> $DIR/bindings.rs:1:12\n+   |\n+LL | #![feature(impl_trait_in_bindings)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0435`."}, {"sha": "24a687491e529754d88c54dea5485de0a73c657e", "filename": "src/test/ui/impl-trait/bound-normalization-fail.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0271]: type mismatch resolving `<Foo<()> as FooLike>::Output == <T as impl_trait::Trait>::Assoc`\n   --> $DIR/bound-normalization-fail.rs:30:32"}, {"sha": "229acdb2b144abcf1e5c27717badc0825dacf087", "filename": "src/test/ui/impl-trait/bound-normalization-pass.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-pass.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `impl_trait_in_bindings` is incomplete and may cause the co\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "dd78c7c83134c715d275e6f73890c5534ae017eb", "filename": "src/test/ui/issues/issue-59508-1.stderr", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59508-1.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -1,14 +1,16 @@\n+error: lifetime parameters must be declared prior to type parameters\n+  --> $DIR/issue-59508-1.rs:12:25\n+   |\n+LL |     pub fn do_things<T, 'a, 'b: 'a>() {\n+   |                     ----^^--^^----- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b: 'a, T>`\n+\n warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n   --> $DIR/issue-59508-1.rs:2:12\n    |\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n-\n-error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-59508-1.rs:12:25\n    |\n-LL |     pub fn do_things<T, 'a, 'b: 'a>() {\n-   |                     ----^^--^^----- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b: 'a, T>`\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: aborting due to previous error\n "}, {"sha": "4edc00efc7e722cb37a4bfde5984912ef9c80f2e", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -4,18 +4,6 @@ error: expected one of `,` or `>`, found `&&`\n LL |         true && let 1 = 1\n    |              ^^ expected one of `,` or `>` here\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n-  --> $DIR/disallowed-positions.rs:20:12\n-   |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n-\n-warning: the feature `let_chains` is incomplete and may cause the compiler to crash\n-  --> $DIR/disallowed-positions.rs:22:12\n-   |\n-LL | #![feature(let_chains)] // Avoid inflating `.stderr` with overzealous gates in this test.\n-   |            ^^^^^^^^^^\n-\n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:32:9\n    |\n@@ -511,6 +499,20 @@ LL |         true && let 1 = 1\n    = note: only supported directly in conditions of `if`- and `while`-expressions\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/disallowed-positions.rs:20:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: the feature `let_chains` is incomplete and may cause the compiler to crash\n+  --> $DIR/disallowed-positions.rs:22:12\n+   |\n+LL | #![feature(let_chains)] // Avoid inflating `.stderr` with overzealous gates in this test.\n+   |            ^^^^^^^^^^\n+\n error[E0308]: mismatched types\n   --> $DIR/disallowed-positions.rs:32:8\n    |"}, {"sha": "fa8fcc99240c69c8c0d311681841425d69037b93", "filename": "src/test/ui/rfc1598-generic-associated-types/collections.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fcollections.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0109]: type arguments are not allowed for this type\n   --> $DIR/collections.rs:56:90"}, {"sha": "ab161ae21bb67c84c4603c09304d65c4b9e9e9ce", "filename": "src/test/ui/rfc1598-generic-associated-types/construct_with_other_type.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0109]: lifetime arguments are not allowed for this type\n   --> $DIR/construct_with_other_type.rs:17:46"}, {"sha": "749032dbcc2205f0e3b36f9ab1e0d2e42febfa39", "filename": "src/test/ui/rfc1598-generic-associated-types/empty_generics.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -9,6 +9,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error: aborting due to previous error\n "}, {"sha": "d75f9fb8451b9d6856b8fdc0d5d31208fe4fe4c4", "filename": "src/test/ui/rfc1598-generic-associated-types/gat-incomplete-warning.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgat-incomplete-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgat-incomplete-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgat-incomplete-warning.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "0d319a7a599f68a91b22711019213e724aebe0cd", "filename": "src/test/ui/rfc1598-generic-associated-types/generic-associated-types-where.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "40ea42f62431dd7254e900afc1c86cb5492f10f5", "filename": "src/test/ui/rfc1598-generic-associated-types/generic_associated_type_undeclared_lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/generic_associated_type_undeclared_lifetimes.rs:13:37"}, {"sha": "51246d3c9027fa795308bea1dd6666a4f595ea18", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0109]: lifetime arguments are not allowed for this type\n   --> $DIR/iterable.rs:11:47"}, {"sha": "65dbd00c5b12138ed726fad09392e5711859d306", "filename": "src/test/ui/rfc1598-generic-associated-types/parameter_number_and_kind.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparameter_number_and_kind.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0109]: lifetime arguments are not allowed for this type\n   --> $DIR/parameter_number_and_kind.rs:17:27"}, {"sha": "626495350a7e6940cc3b9e75d5dc95422430e474", "filename": "src/test/ui/rfc1598-generic-associated-types/pointer_family.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0109]: type arguments are not allowed for this type\n   --> $DIR/pointer_family.rs:37:21"}, {"sha": "9526df258c497128ba0ea6adf237e011b8f2d6f1", "filename": "src/test/ui/rfc1598-generic-associated-types/shadowing.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fshadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fshadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fshadowing.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,4 +3,6 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n "}, {"sha": "09dd654b575afaff9a2608e33678c958852d37f2", "filename": "src/test/ui/rfc1598-generic-associated-types/streaming_iterator.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24a178e397c6aaac39f26ac8684bc8d7b43c4c8c/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr?ref=24a178e397c6aaac39f26ac8684bc8d7b43c4c8c", "patch": "@@ -3,6 +3,8 @@ warning: the feature `generic_associated_types` is incomplete and may cause the\n    |\n LL | #![feature(generic_associated_types)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n \n error[E0109]: lifetime arguments are not allowed for this type\n   --> $DIR/streaming_iterator.rs:18:41"}]}