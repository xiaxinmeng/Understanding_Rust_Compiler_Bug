{"sha": "e94e82cb8ef0491667bc8041d370199aed838f2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NGU4MmNiOGVmMDQ5MTY2N2JjODA0MWQzNzAxOTlhZWQ4MzhmMmQ=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2012-10-12T23:41:16Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-17T18:19:38Z"}, "message": "Extraneous sigil patrol: ~\"string literals\"", "tree": {"sha": "7559e80fd7728366d7a70a5591a3d7635b755e05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7559e80fd7728366d7a70a5591a3d7635b755e05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e94e82cb8ef0491667bc8041d370199aed838f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e94e82cb8ef0491667bc8041d370199aed838f2d", "html_url": "https://github.com/rust-lang/rust/commit/e94e82cb8ef0491667bc8041d370199aed838f2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e94e82cb8ef0491667bc8041d370199aed838f2d/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "html_url": "https://github.com/rust-lang/rust/commit/5cf0c658f3c26a6df730ec3eb0b447234d210c9d"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "b411e1232b7200da886f77ff4f81774f9105e6c2", "filename": "doc/tutorial.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e94e82cb8ef0491667bc8041d370199aed838f2d/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/e94e82cb8ef0491667bc8041d370199aed838f2d/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=e94e82cb8ef0491667bc8041d370199aed838f2d", "patch": "@@ -1502,7 +1502,7 @@ and [`core::str`]. Here are some examples.\n # fn unwrap_crayon(c: Crayon) -> int { 0 }\n # fn eat_crayon_wax(i: int) { }\n # fn store_crayon_in_nasal_cavity(i: uint, c: Crayon) { }\n-# fn crayon_to_str(c: Crayon) -> ~str { ~\"\" }\n+# fn crayon_to_str(c: Crayon) -> &str { \"\" }\n \n let crayons = &[Almond, AntiqueBrass, Apricot];\n \n@@ -1649,11 +1649,11 @@ callers may pass any kind of closure.\n \n ~~~~\n fn call_twice(f: fn()) { f(); f(); }\n-call_twice(|| { ~\"I am an inferred stack closure\"; } );\n-call_twice(fn&() { ~\"I am also a stack closure\"; } );\n-call_twice(fn@() { ~\"I am a managed closure\"; });\n-call_twice(fn~() { ~\"I am an owned closure\"; });\n-fn bare_function() { ~\"I am a plain function\"; }\n+call_twice(|| { \"I am an inferred stack closure\"; } );\n+call_twice(fn&() { \"I am also a stack closure\"; } );\n+call_twice(fn@() { \"I am a managed closure\"; });\n+call_twice(fn~() { \"I am an owned closure\"; });\n+fn bare_function() { \"I am a plain function\"; }\n call_twice(bare_function);\n ~~~~\n \n@@ -1767,7 +1767,7 @@ And using this function to iterate over a vector:\n # use println = io::println;\n each(&[2, 4, 8, 5, 16], |n| {\n     if *n % 2 != 0 {\n-        println(~\"found odd number!\");\n+        println(\"found odd number!\");\n         false\n     } else { true }\n });\n@@ -1784,7 +1784,7 @@ to the next iteration, write `loop`.\n # use println = io::println;\n for each(&[2, 4, 8, 5, 16]) |n| {\n     if *n % 2 != 0 {\n-        println(~\"found odd number!\");\n+        println(\"found odd number!\");\n         break;\n     }\n }\n@@ -1967,12 +1967,12 @@ impl int: Printable {\n     fn print() { io::println(fmt!(\"%d\", self)) }\n }\n \n-impl ~str: Printable {\n+impl &str: Printable {\n     fn print() { io::println(self) }\n }\n \n # 1.print();\n-# (~\"foo\").print();\n+# (\"foo\").print();\n ~~~~\n \n Methods defined in an implementation of a trait may be called just like\n@@ -2162,8 +2162,8 @@ additional modules.\n \n ~~~~\n mod farm {\n-    pub fn chicken() -> ~str { ~\"cluck cluck\" }\n-    pub fn cow() -> ~str { ~\"mooo\" }\n+    pub fn chicken() -> &str { \"cluck cluck\" }\n+    pub fn cow() -> &str { \"mooo\" }\n }\n \n fn main() {\n@@ -2360,13 +2360,13 @@ these two files:\n ~~~~\n // world.rs\n #[link(name = \"world\", vers = \"1.0\")];\n-pub fn explore() -> ~str { ~\"world\" }\n+pub fn explore() -> &str { \"world\" }\n ~~~~\n \n ~~~~ {.xfail-test}\n // main.rs\n extern mod world;\n-fn main() { io::println(~\"hello \" + world::explore()); }\n+fn main() { io::println(\"hello \" + world::explore()); }\n ~~~~\n \n Now compile and run like this (adjust to your platform if necessary):"}]}