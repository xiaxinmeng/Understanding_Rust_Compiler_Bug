{"sha": "ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMmE2NDNmMjc4ZDA5YzNmY2MxNDBlY2I0YzdjZWNiZjFhZmYzYzQ=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2011-12-30T09:54:31Z"}, "committer": {"name": "Lenny222", "email": "github@kudling.de", "date": "2011-12-30T09:54:31Z"}, "message": "add test for list:is_empty()", "tree": {"sha": "4346135b40bb4581acae084ad358d7a43cc2badb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4346135b40bb4581acae084ad358d7a43cc2badb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4", "html_url": "https://github.com/rust-lang/rust/commit/ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4/comments", "author": null, "committer": null, "parents": [{"sha": "d07c6e8a0ede3114ebfd8c3ea6cc161cf009f072", "url": "https://api.github.com/repos/rust-lang/rust/commits/d07c6e8a0ede3114ebfd8c3ea6cc161cf009f072", "html_url": "https://github.com/rust-lang/rust/commit/d07c6e8a0ede3114ebfd8c3ea6cc161cf009f072"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "b96bc9cd16a56b9ae856a00995d3fc1c17d66b18", "filename": "src/test/stdtest/list.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4/src%2Ftest%2Fstdtest%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4/src%2Ftest%2Fstdtest%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Flist.rs?ref=ab2a643f278d09c3fcc140ecb4c7cecbf1aff3c4", "patch": "@@ -2,9 +2,24 @@ import core::*;\n \n use std;\n import std::list;\n-import std::list::{from_vec, head, is_not_empty, tail};\n+import std::list::{from_vec, head, is_empty, is_not_empty, tail};\n import option;\n \n+#[test]\n+fn test_is_empty() {\n+    let empty : list::list<int> = from_vec([]);\n+    let full1 = from_vec([1]);\n+    let full2 = from_vec(['r', 'u']);\n+\n+    assert is_empty(empty);\n+    assert !is_empty(full1);\n+    assert !is_empty(full2);\n+\n+    assert !is_not_empty(empty);\n+    assert is_not_empty(full1);\n+    assert is_not_empty(full2);\n+}\n+\n #[test]\n fn test_from_vec() {\n     let l = from_vec([0, 1, 2]);"}]}