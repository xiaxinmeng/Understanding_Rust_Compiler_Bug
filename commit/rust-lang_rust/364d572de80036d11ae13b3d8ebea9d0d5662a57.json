{"sha": "364d572de80036d11ae13b3d8ebea9d0d5662a57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NGQ1NzJkZTgwMDM2ZDExYWUxM2IzZDhlYmVhOWQwZDU2NjJhNTc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-20T17:12:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-20T17:12:41Z"}, "message": "Merge #7730\n\n7730: Fix #7712 retain visibility extracting mod to file r=lnicola a=mattyhall\n\n\n\nCo-authored-by: Matt Hall <matthew@quickbeam.me.uk>", "tree": {"sha": "08118d1edaf39059fe328c854a07ad294513ce05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08118d1edaf39059fe328c854a07ad294513ce05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/364d572de80036d11ae13b3d8ebea9d0d5662a57", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgMUMJCRBK7hj4Ov3rIwAAdHIIADs8PnHMCUNswBICvhnOAS81\n0WAi7yFEXzEEEh6wQ/xdMSrJ5bWAEFDPkFhzuGNAMJeYjqsePYMVimoy2DZqfU9w\nqs4JTrRMKEHlofN4hEq2pEr7xyVvFH2FIAKNH+tz7vhcC8OmrX9/Mj8Z87RiKBvW\nuHMobk8MxaIt8v5rN6aowWrPTI9hkJ898FZu6t7TeKWPgN0xEOcb6E/zKRTibApQ\n/v+wNp5rs0HN5hQL7WnyLHHVrnnhOhh3nPSuH4k7AkhPOoL8pFLOxigvwda8vLGM\nyeeUob3yEozcsncgsz4KWkU1t8ZwMSGmzGhaX+T90h/DMOwWSNR5j6L5//88zh0=\n=z+Ti\n-----END PGP SIGNATURE-----\n", "payload": "tree 08118d1edaf39059fe328c854a07ad294513ce05\nparent de67469f59d5c16e9b4ca106a0265bb8b1585c83\nparent 8497b5bd75159cf3e491af8dadb4b1b0da95477d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613841161 +0000\ncommitter GitHub <noreply@github.com> 1613841161 +0000\n\nMerge #7730\n\n7730: Fix #7712 retain visibility extracting mod to file r=lnicola a=mattyhall\n\n\n\nCo-authored-by: Matt Hall <matthew@quickbeam.me.uk>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/364d572de80036d11ae13b3d8ebea9d0d5662a57", "html_url": "https://github.com/rust-lang/rust/commit/364d572de80036d11ae13b3d8ebea9d0d5662a57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/364d572de80036d11ae13b3d8ebea9d0d5662a57/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de67469f59d5c16e9b4ca106a0265bb8b1585c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/de67469f59d5c16e9b4ca106a0265bb8b1585c83", "html_url": "https://github.com/rust-lang/rust/commit/de67469f59d5c16e9b4ca106a0265bb8b1585c83"}, {"sha": "8497b5bd75159cf3e491af8dadb4b1b0da95477d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8497b5bd75159cf3e491af8dadb4b1b0da95477d", "html_url": "https://github.com/rust-lang/rust/commit/8497b5bd75159cf3e491af8dadb4b1b0da95477d"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "91c395c1b2067cef13848b290315302bcafdf288", "filename": "crates/assists/src/handlers/move_module_to_file.rs", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/364d572de80036d11ae13b3d8ebea9d0d5662a57/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/364d572de80036d11ae13b3d8ebea9d0d5662a57/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_module_to_file.rs?ref=364d572de80036d11ae13b3d8ebea9d0d5662a57", "patch": "@@ -1,5 +1,6 @@\n-use ast::edit::IndentLevel;\n+use ast::{edit::IndentLevel, VisibilityOwner};\n use ide_db::base_db::AnchoredPathBuf;\n+use stdx::format_to;\n use syntax::{\n     ast::{self, edit::AstNodeEdit, NameOwner},\n     AstNode, TextRange,\n@@ -59,7 +60,13 @@ pub(crate) fn move_module_to_file(acc: &mut Assists, ctx: &AssistContext) -> Opt\n                 items\n             };\n \n-            builder.replace(module_ast.syntax().text_range(), format!(\"mod {};\", module_name));\n+            let mut buf = String::new();\n+            if let Some(v) = module_ast.visibility() {\n+                format_to!(buf, \"{} \", v);\n+            }\n+            format_to!(buf, \"mod {};\", module_name);\n+\n+            builder.replace(module_ast.syntax().text_range(), buf);\n \n             let dst = AnchoredPathBuf { anchor: ctx.frange.file_id, path };\n             builder.create_file(dst, contents);\n@@ -137,6 +144,42 @@ fn f() {}\n         );\n     }\n \n+    #[test]\n+    fn extract_public() {\n+        check_assist(\n+            move_module_to_file,\n+            r#\"\n+pub mod $0tests {\n+    #[test] fn t() {}\n+}\n+\"#,\n+            r#\"\n+//- /main.rs\n+pub mod tests;\n+//- /tests.rs\n+#[test] fn t() {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn extract_public_crate() {\n+        check_assist(\n+            move_module_to_file,\n+            r#\"\n+pub(crate) mod $0tests {\n+    #[test] fn t() {}\n+}\n+\"#,\n+            r#\"\n+//- /main.rs\n+pub(crate) mod tests;\n+//- /tests.rs\n+#[test] fn t() {}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn available_before_curly() {\n         mark::check!(available_before_curly);"}]}