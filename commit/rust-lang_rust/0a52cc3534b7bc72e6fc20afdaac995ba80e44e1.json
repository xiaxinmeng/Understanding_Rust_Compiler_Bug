{"sha": "0a52cc3534b7bc72e6fc20afdaac995ba80e44e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNTJjYzM1MzRiN2JjNzJlNmZjMjBhZmRhYWM5OTViYTgwZTQ0ZTE=", "commit": {"author": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2014-11-08T09:23:27Z"}, "committer": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2014-11-11T00:53:26Z"}, "message": "syntax: improve message for misused inner attributes", "tree": {"sha": "2651e66cc8cee0a6e53ee612d5573d7cdacfae85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2651e66cc8cee0a6e53ee612d5573d7cdacfae85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a52cc3534b7bc72e6fc20afdaac995ba80e44e1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a52cc3534b7bc72e6fc20afdaac995ba80e44e1", "html_url": "https://github.com/rust-lang/rust/commit/0a52cc3534b7bc72e6fc20afdaac995ba80e44e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a52cc3534b7bc72e6fc20afdaac995ba80e44e1/comments", "author": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f89e975685a3a9f258c996865cdd144a0f30f83c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f89e975685a3a9f258c996865cdd144a0f30f83c", "html_url": "https://github.com/rust-lang/rust/commit/f89e975685a3a9f258c996865cdd144a0f30f83c"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0c919daa8ed11ce2514c6014a523f09a0ddcc37b", "filename": "src/libsyntax/parse/attr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a52cc3534b7bc72e6fc20afdaac995ba80e44e1/src%2Flibsyntax%2Fparse%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a52cc3534b7bc72e6fc20afdaac995ba80e44e1/src%2Flibsyntax%2Fparse%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fattr.rs?ref=0a52cc3534b7bc72e6fc20afdaac995ba80e44e1", "patch": "@@ -75,6 +75,8 @@ impl<'a> ParserAttr for Parser<'a> {\n                         self.span_err(span,\n                                       \"an inner attribute is not permitted in \\\n                                        this context\");\n+                        self.span_help(span,\n+                                       \"place inner attribute at the top of the module or block\");\n                     }\n                     ast::AttrInner\n                 } else {"}]}