{"sha": "b43bcd43c604126c2b250a30cc56459be754572a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0M2JjZDQzYzYwNDEyNmMyYjI1MGEzMGNjNTY0NTliZTc1NDU3MmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-16T17:53:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-16T17:53:19Z"}, "message": "fix tests", "tree": {"sha": "75f6dacf0c0a8a1c19c7f1ac8b369e6f49048115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75f6dacf0c0a8a1c19c7f1ac8b369e6f49048115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43bcd43c604126c2b250a30cc56459be754572a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43bcd43c604126c2b250a30cc56459be754572a", "html_url": "https://github.com/rust-lang/rust/commit/b43bcd43c604126c2b250a30cc56459be754572a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43bcd43c604126c2b250a30cc56459be754572a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b6d4983de85fcf9f84ed50c9973a1df612e5038", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6d4983de85fcf9f84ed50c9973a1df612e5038", "html_url": "https://github.com/rust-lang/rust/commit/0b6d4983de85fcf9f84ed50c9973a1df612e5038"}], "stats": {"total": 69, "additions": 23, "deletions": 46}, "files": [{"sha": "444745be5dc4ce7292a31fb34dcd568ef02525d6", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b43bcd43c604126c2b250a30cc56459be754572a/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43bcd43c604126c2b250a30cc56459be754572a/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=b43bcd43c604126c2b250a30cc56459be754572a", "patch": "@@ -1,13 +1,15 @@\n extern crate itertools;\n-#[macro_use]\n extern crate failure;\n+extern crate teraron;\n \n-use itertools::Itertools;\n use std::{\n-    fs,\n     path::{Path, PathBuf},\n };\n \n+use itertools::Itertools;\n+\n+pub use teraron::{Mode, Verify, Overwrite};\n+\n pub type Result<T> = ::std::result::Result<T, failure::Error>;\n \n pub const GRAMMAR: &str = \"ra_syntax/src/grammar.ron\";\n@@ -54,22 +56,23 @@ pub fn collect_tests(s: &str) -> Vec<(usize, Test)> {\n     res\n }\n \n-pub fn update(path: &Path, contents: &str, verify: bool) -> Result<()> {\n-    match fs::read_to_string(path) {\n-        Ok(ref old_contents) if old_contents == contents => {\n-            return Ok(());\n-        }\n-        _ => (),\n-    }\n-    if verify {\n-        bail!(\"`{}` is not up-to-date\", path.display());\n-    }\n-    eprintln!(\"updating {}\", path.display());\n-    fs::write(path, contents)?;\n+pub fn generate(mode: Mode) -> Result<()> {\n+    let grammar = project_root().join(GRAMMAR);\n+    let syntax_kinds = project_root().join(SYNTAX_KINDS);\n+    let ast = project_root().join(AST);\n+    teraron::generate(\n+        &syntax_kinds,\n+        &grammar,\n+        mode,\n+    )?;\n+    teraron::generate(\n+        &ast,\n+        &grammar,\n+        mode,\n+    )?;\n     Ok(())\n }\n \n-\n pub fn project_root() -> PathBuf {\n     Path::new(&std::env::var(\"CARGO_MANIFEST_DIR\").unwrap())\n         .parent()"}, {"sha": "965bc772967a5a76cf33e5f898643649e440c8b0", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b43bcd43c604126c2b250a30cc56459be754572a/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43bcd43c604126c2b250a30cc56459be754572a/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=b43bcd43c604126c2b250a30cc56459be754572a", "patch": "@@ -13,9 +13,8 @@ use std::{\n     process::Command,\n };\n use tools::{\n-    collect_tests, project_root, Result, Test, AST, SYNTAX_KINDS, GRAMMAR,\n+    collect_tests, Result, Test, generate, Mode, Overwrite, Verify,\n };\n-use teraron::{Mode, Verify, Overwrite};\n \n const GRAMMAR_DIR: &str = \"./crates/ra_syntax/src/grammar\";\n const INLINE_TESTS_DIR: &str = \"./crates/ra_syntax/tests/data/parser/inline\";\n@@ -41,21 +40,7 @@ fn main() -> Result<()> {\n     match matches.subcommand() {\n         (\"install-code\", _) => install_code_extension()?,\n         (\"gen-tests\", _) => gen_tests(mode)?,\n-        (\"gen-kinds\", _) => {\n-            let grammar = project_root().join(GRAMMAR);\n-            let syntax_kinds = project_root().join(SYNTAX_KINDS);\n-            let ast = project_root().join(AST);\n-            teraron::generate(\n-                &syntax_kinds,\n-                &grammar,\n-                mode,\n-            )?;\n-            teraron::generate(\n-                &ast,\n-                &grammar,\n-                mode,\n-            )?;\n-        }\n+        (\"gen-kinds\", _) => generate(Overwrite)?,\n         _ => unreachable!(),\n     }\n     Ok(())"}, {"sha": "0bb5d15d8e183f892c1f7ec0e16ec8fe45dba0e3", "filename": "crates/tools/tests/cli.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b43bcd43c604126c2b250a30cc56459be754572a/crates%2Ftools%2Ftests%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43bcd43c604126c2b250a30cc56459be754572a/crates%2Ftools%2Ftests%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Ftests%2Fcli.rs?ref=b43bcd43c604126c2b250a30cc56459be754572a", "patch": "@@ -1,23 +1,12 @@\n extern crate tools;\n \n use tools::{\n-    project_root, render_template, update, AST, AST_TEMPLATE, SYNTAX_KINDS, SYNTAX_KINDS_TEMPLATE,\n+    generate, Verify\n };\n \n #[test]\n fn verify_template_generation() {\n-    if let Err(error) = update(\n-        &project_root().join(SYNTAX_KINDS),\n-        &render_template(&project_root().join(SYNTAX_KINDS_TEMPLATE)).unwrap(),\n-        true,\n-    ) {\n-        panic!(\"{}. Please update it by running `cargo gen-kinds`\", error);\n-    }\n-    if let Err(error) = update(\n-        &project_root().join(AST),\n-        &render_template(&project_root().join(AST_TEMPLATE)).unwrap(),\n-        true,\n-    ) {\n+    if let Err(error) = generate(Verify) {\n         panic!(\"{}. Please update it by running `cargo gen-kinds`\", error);\n     }\n }"}]}