{"sha": "2a4076c14d0e3f7ae03908c2b9cd1a52851d401c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNDA3NmMxNGQwZTNmN2FlMDM5MDhjMmI5Y2QxYTUyODUxZDQwMWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-26T18:10:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-26T18:10:07Z"}, "message": "Merge #7794\n\n7794: Disable \"Flip comma\" assist inside a macro call r=Veykril a=greenhat\n\nFix #7693 \r\n\r\nDisables \"Flip comma\" assist if called inside a macro call.\n\nCo-authored-by: Denys Zadorozhnyi <denys@zadorozhnyi.com>", "tree": {"sha": "da8ac119f7c6caee49fda4bcd2cdb593e9f2b22b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da8ac119f7c6caee49fda4bcd2cdb593e9f2b22b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a4076c14d0e3f7ae03908c2b9cd1a52851d401c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOTl/CRBK7hj4Ov3rIwAAdHIIAHVFqL2ckVHjAZj/sWRr5wNK\nW+iFMdPKopQRFJ70wsgZIWYJvqF7YTZ8v3YoqWhfZzq58REUP78vrQzDwjHuTGY4\nGb2Ac5DThkKBXQqMtPGH3I/Lrujj1n+JnywzbAMVofQ6fGKYW5KPYhX+uMHJJ+nL\nsQaqL7zWnSxqZcM1rUDz44KShgwsuPCvv/xhKLcHY/1/V42CmRU54p2HQcM0AemX\nuKUMBCN7o7kL9rZjc2wruLj7laaNnmBhQ6WXyEUub5NqXEaMwIUWb1/+IRTF02uS\nHN8xxwuU7EKaP87clVNR90jXh3qDaFEChjKGfh/0o9//gdsdmeOH9KSf+LCW2kQ=\n=DYwa\n-----END PGP SIGNATURE-----\n", "payload": "tree da8ac119f7c6caee49fda4bcd2cdb593e9f2b22b\nparent d5b8a401f38f88ecb0d894c88dcbab3d338a0ef2\nparent eb3c23588df888454b943bb6feb82a7e97ce1a9b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614363007 +0000\ncommitter GitHub <noreply@github.com> 1614363007 +0000\n\nMerge #7794\n\n7794: Disable \"Flip comma\" assist inside a macro call r=Veykril a=greenhat\n\nFix #7693 \r\n\r\nDisables \"Flip comma\" assist if called inside a macro call.\n\nCo-authored-by: Denys Zadorozhnyi <denys@zadorozhnyi.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a4076c14d0e3f7ae03908c2b9cd1a52851d401c", "html_url": "https://github.com/rust-lang/rust/commit/2a4076c14d0e3f7ae03908c2b9cd1a52851d401c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a4076c14d0e3f7ae03908c2b9cd1a52851d401c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5b8a401f38f88ecb0d894c88dcbab3d338a0ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b8a401f38f88ecb0d894c88dcbab3d338a0ef2", "html_url": "https://github.com/rust-lang/rust/commit/d5b8a401f38f88ecb0d894c88dcbab3d338a0ef2"}, {"sha": "eb3c23588df888454b943bb6feb82a7e97ce1a9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb3c23588df888454b943bb6feb82a7e97ce1a9b", "html_url": "https://github.com/rust-lang/rust/commit/eb3c23588df888454b943bb6feb82a7e97ce1a9b"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "7f5e75d34506981ca5ae18f2f7b0871570320d27", "filename": "crates/ide_assists/src/handlers/flip_comma.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2a4076c14d0e3f7ae03908c2b9cd1a52851d401c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a4076c14d0e3f7ae03908c2b9cd1a52851d401c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fflip_comma.rs?ref=2a4076c14d0e3f7ae03908c2b9cd1a52851d401c", "patch": "@@ -1,4 +1,4 @@\n-use syntax::{algo::non_trivia_sibling, Direction, T};\n+use syntax::{algo::non_trivia_sibling, Direction, SyntaxKind, T};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n \n@@ -28,6 +28,12 @@ pub(crate) fn flip_comma(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n         return None;\n     }\n \n+    // Don't apply a \"flip\" inside the macro call\n+    // since macro input are just mere tokens\n+    if comma.ancestors().any(|it| it.kind() == SyntaxKind::MACRO_CALL) {\n+        return None;\n+    }\n+\n     acc.add(\n         AssistId(\"flip_comma\", AssistKind::RefactorRewrite),\n         \"Flip comma\",\n@@ -43,7 +49,7 @@ pub(crate) fn flip_comma(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n mod tests {\n     use super::*;\n \n-    use crate::tests::{check_assist, check_assist_target};\n+    use crate::tests::{check_assist, check_assist_not_applicable, check_assist_target};\n \n     #[test]\n     fn flip_comma_works_for_function_parameters() {\n@@ -81,4 +87,20 @@ mod tests {\n             \",\",\n         );\n     }\n+\n+    #[test]\n+    fn flip_comma_works() {\n+        check_assist(\n+            flip_comma,\n+            r#\"fn main() {((1, 2),$0 (3, 4));}\"#,\n+            r#\"fn main() {((3, 4), (1, 2));}\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn flip_comma_not_applicable_for_macro_input() {\n+        // \"Flip comma\" assist shouldn't be applicable inside the macro call\n+        // See https://github.com/rust-analyzer/rust-analyzer/issues/7693\n+        check_assist_not_applicable(flip_comma, r#\"bar!(a,$0 b)\"#);\n+    }\n }"}]}