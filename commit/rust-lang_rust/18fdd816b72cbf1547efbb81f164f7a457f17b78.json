{"sha": "18fdd816b72cbf1547efbb81f164f7a457f17b78", "node_id": "C_kwDOAAsO6NoAKDE4ZmRkODE2YjcyY2JmMTU0N2VmYmI4MWYxNjRmN2E0NTdmMTdiNzg", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-11-04T20:59:35Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-05T16:04:15Z"}, "message": "Allow adding a set of cfg's to hide from being implicitly doc(cfg)'d\n\nBy adding #![doc(cfg_hide(foobar))] to the crate attributes the cfg\n #[cfg(foobar)] (and _only_ that _exact_ cfg) will not be implicitly\ntreated as a doc(cfg) to render a message in the documentation.", "tree": {"sha": "838520193f9832ddafa6ab4977b415edf5f0208a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/838520193f9832ddafa6ab4977b415edf5f0208a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18fdd816b72cbf1547efbb81f164f7a457f17b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18fdd816b72cbf1547efbb81f164f7a457f17b78", "html_url": "https://github.com/rust-lang/rust/commit/18fdd816b72cbf1547efbb81f164f7a457f17b78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18fdd816b72cbf1547efbb81f164f7a457f17b78/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10cdbd847fd00d093ce89a4fffde5d90c8bb9817", "url": "https://api.github.com/repos/rust-lang/rust/commits/10cdbd847fd00d093ce89a4fffde5d90c8bb9817", "html_url": "https://github.com/rust-lang/rust/commit/10cdbd847fd00d093ce89a4fffde5d90c8bb9817"}], "stats": {"total": 83, "additions": 74, "deletions": 9}, "files": [{"sha": "bce5cd8174d086458980d1d65244b9369896b0c4", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -279,6 +279,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n                 gate_doc!(\n                     cfg => doc_cfg\n+                    cfg_hide => doc_cfg_hide\n                     masked => doc_masked\n                     notable_trait => doc_notable_trait\n                     keyword => doc_keyword"}, {"sha": "e5c57d0ee3023ef47241f048d0e48bb650272ab7", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -380,6 +380,9 @@ declare_features! (\n     /// Allows `#[doc(cfg(...))]`.\n     (active, doc_cfg, \"1.21.0\", Some(43781), None),\n \n+    /// Allows `#[doc(cfg_hide(...))]`.\n+    (active, doc_cfg_hide, \"1.49.0\", Some(43781), None),\n+\n     /// Allows `#[doc(masked)]`.\n     (active, doc_masked, \"1.21.0\", Some(44027), None),\n "}, {"sha": "382dbc377d63e8a313514ffc145b2f697fb79a60", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -399,6 +399,7 @@ symbols! {\n         cfg_attr_multi,\n         cfg_doctest,\n         cfg_eval,\n+        cfg_hide,\n         cfg_panic,\n         cfg_sanitize,\n         cfg_target_abi,\n@@ -547,6 +548,7 @@ symbols! {\n         doc,\n         doc_alias,\n         doc_cfg,\n+        doc_cfg_hide,\n         doc_keyword,\n         doc_masked,\n         doc_notable_trait,"}, {"sha": "b463c1dc7146b6d5f9b6f98f915b6bc0a7d229cb", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -318,10 +318,10 @@ fn merge_attrs(\n             } else {\n                 Attributes::from_ast(&both, None)\n             },\n-            both.cfg(cx.tcx),\n+            both.cfg(cx.tcx, &cx.cache.hidden_cfg),\n         )\n     } else {\n-        (old_attrs.clean(cx), old_attrs.cfg(cx.tcx))\n+        (old_attrs.clean(cx), old_attrs.cfg(cx.tcx, &cx.cache.hidden_cfg))\n     }\n }\n "}, {"sha": "969d15dd6a160e10a7a1b521a85eefffc4f37728", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -1973,7 +1973,7 @@ fn clean_extern_crate(\n         def_id: crate_def_id.into(),\n         visibility: krate.vis.clean(cx),\n         kind: box ExternCrateItem { src: orig_name },\n-        cfg: attrs.cfg(cx.tcx),\n+        cfg: attrs.cfg(cx.tcx, &cx.cache.hidden_cfg),\n     }]\n }\n "}, {"sha": "ebbf280d96d29700be68840ef2c3201fd92474da", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -421,7 +421,7 @@ impl Item {\n             kind,\n             box ast_attrs.clean(cx),\n             cx,\n-            ast_attrs.cfg(cx.tcx),\n+            ast_attrs.cfg(cx.tcx, &cx.cache.hidden_cfg),\n         )\n     }\n \n@@ -747,7 +747,7 @@ crate trait AttributesExt {\n \n     fn other_attrs(&self) -> Vec<ast::Attribute>;\n \n-    fn cfg(&self, tcx: TyCtxt<'_>) -> Option<Arc<Cfg>>;\n+    fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>>;\n }\n \n impl AttributesExt for [ast::Attribute] {\n@@ -772,7 +772,7 @@ impl AttributesExt for [ast::Attribute] {\n         self.iter().filter(|attr| attr.doc_str().is_none()).cloned().collect()\n     }\n \n-    fn cfg(&self, tcx: TyCtxt<'_>) -> Option<Arc<Cfg>> {\n+    fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>> {\n         let sess = tcx.sess;\n         let doc_cfg_active = tcx.features().doc_cfg;\n \n@@ -813,6 +813,7 @@ impl AttributesExt for [ast::Attribute] {\n                     .filter_map(|attr| {\n                         Cfg::parse(&attr).map_err(|e| sess.diagnostic().span_err(e.span, e.msg)).ok()\n                     })\n+                    .filter(|cfg| !hidden_cfg.contains(cfg))\n                     .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n             }\n         } else {\n@@ -844,6 +845,8 @@ impl AttributesExt for [ast::Attribute] {\n             }\n         }\n \n+        // treat #[target_feature(enable = \"feat\")] attributes as if they were\n+        // #[doc(cfg(target_feature = \"feat\"))] attributes as well\n         for attr in self.lists(sym::target_feature) {\n             if attr.has_name(sym::enable) {\n                 if let Some(feat) = attr.value_str() {"}, {"sha": "9e64d200b437339abf5d20ba337c43f0e63bea69", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -1123,7 +1123,7 @@ impl<'a, 'hir, 'tcx> HirCollector<'a, 'hir, 'tcx> {\n         let ast_attrs = self.tcx.hir().attrs(hir_id);\n         let mut attrs = Attributes::from_ast(ast_attrs, None);\n \n-        if let Some(ref cfg) = ast_attrs.cfg(self.tcx) {\n+        if let Some(ref cfg) = ast_attrs.cfg(self.tcx, &FxHashSet::default()) {\n             if !cfg.matches(&self.sess.parse_sess, Some(&self.sess.features_untracked())) {\n                 return;\n             }"}, {"sha": "cc9e081add199baac86fa3d2c85a43eda1d425a7", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -119,6 +119,8 @@ crate struct Cache {\n     ///\n     /// Links are indexed by the DefId of the item they document.\n     crate intra_doc_links: FxHashMap<ItemId, Vec<clean::ItemLink>>,\n+    /// Cfg that have been hidden via #![doc(cfg_hide(...))]\n+    crate hidden_cfg: FxHashSet<clean::cfg::Cfg>,\n }\n \n /// This struct is used to wrap the `cache` and `tcx` in order to run `DocFolder`."}, {"sha": "e3ffc1e3f21f3f9356fc4064f603fc1f0872f26c", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -323,7 +323,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     let import_item = clean::Item {\n                         def_id: import_def_id.into(),\n                         attrs: import_attrs,\n-                        cfg: ast_attrs.cfg(cx.tcx()),\n+                        cfg: ast_attrs.cfg(cx.tcx(), &cx.cache().hidden_cfg),\n                         ..myitem.clone()\n                     };\n "}, {"sha": "cd657fa01d45332d81e66cd6805aa482cffc4299", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -3,6 +3,7 @@\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n+use rustc_hir::CRATE_HIR_ID;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n@@ -15,7 +16,7 @@ use rustc_span::symbol::{kw, sym, Symbol};\n \n use std::mem;\n \n-use crate::clean::{self, AttributesExt, NestedAttributesExt};\n+use crate::clean::{self, cfg::Cfg, AttributesExt, NestedAttributesExt};\n use crate::core;\n use crate::doctree::*;\n \n@@ -97,6 +98,27 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 }\n             }\n         }\n+\n+        self.cx.cache.hidden_cfg = self.cx.tcx.hir().attrs(CRATE_HIR_ID)\n+            .iter()\n+            .filter(|attr| attr.has_name(sym::doc))\n+            .flat_map(|attr| attr.meta_item_list().into_iter().flatten())\n+            .filter(|attr| attr.has_name(sym::cfg_hide))\n+            .flat_map(|attr| {\n+                attr.meta_item_list()\n+                    .unwrap_or(&[])\n+                    .iter()\n+                    .filter_map(|attr| {\n+                        Some(\n+                            Cfg::parse(attr.meta_item()?)\n+                                .map_err(|e| self.cx.sess().diagnostic().span_err(e.span, e.msg))\n+                                .ok()?,\n+                        )\n+                    })\n+                    .collect::<Vec<_>>()\n+            })\n+            .collect();\n+\n         self.cx.cache.exact_paths = self.exact_paths;\n         top_level_module\n     }"}, {"sha": "b9d0d32313723ddb1128b563e33237881ef7ab11", "filename": "src/test/rustdoc/doc-cfg-hide.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18fdd816b72cbf1547efbb81f164f7a457f17b78/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs?ref=18fdd816b72cbf1547efbb81f164f7a457f17b78", "patch": "@@ -0,0 +1,32 @@\n+#![crate_name = \"oud\"]\n+#![feature(doc_cfg, doc_cfg_hide)]\n+\n+#![doc(cfg_hide(feature = \"solecism\"))]\n+\n+// @has 'oud/struct.Solecism.html'\n+// @count   - '//*[@class=\"stab portability\"]' 0\n+// compile-flags:--cfg feature=\"solecism\"\n+#[cfg(feature = \"solecism\")]\n+pub struct Solecism;\n+\n+// @has 'oud/struct.Scribacious.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature solecism'\n+#[cfg(feature = \"solecism\")]\n+#[doc(cfg(feature = \"solecism\"))]\n+pub struct Scribacious;\n+\n+// @has 'oud/struct.Hyperdulia.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature hyperdulia'\n+// compile-flags:--cfg feature=\"hyperdulia\"\n+#[cfg(feature = \"solecism\")]\n+#[cfg(feature = \"hyperdulia\")]\n+pub struct Hyperdulia;\n+\n+// @has 'oud/struct.Oystercatcher.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate features solecism and oystercatcher'\n+// compile-flags:--cfg feature=\"oystercatcher\"\n+#[cfg(all(feature = \"solecism\", feature = \"oystercatcher\"))]\n+pub struct Oystercatcher;"}]}