{"sha": "02f669ca6759f94deb87fb8dc3303eb08544c5a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZjY2OWNhNjc1OWY5NGRlYjg3ZmI4ZGMzMzAzZWIwODU0NGM1YTA=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-09T20:35:54Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-09T20:35:54Z"}, "message": "Pass the task pointer as just another i32.", "tree": {"sha": "f40d09891bca785a194fec72ad7e34605a94240d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f40d09891bca785a194fec72ad7e34605a94240d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02f669ca6759f94deb87fb8dc3303eb08544c5a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02f669ca6759f94deb87fb8dc3303eb08544c5a0", "html_url": "https://github.com/rust-lang/rust/commit/02f669ca6759f94deb87fb8dc3303eb08544c5a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02f669ca6759f94deb87fb8dc3303eb08544c5a0/comments", "author": null, "committer": null, "parents": [{"sha": "10d8b4e861faedb734636a80dc4963392f1f82c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/10d8b4e861faedb734636a80dc4963392f1f82c5", "html_url": "https://github.com/rust-lang/rust/commit/10d8b4e861faedb734636a80dc4963392f1f82c5"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "0b513744bdee8bc815f57def25cea8972377eddf", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/02f669ca6759f94deb87fb8dc3303eb08544c5a0/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02f669ca6759f94deb87fb8dc3303eb08544c5a0/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=02f669ca6759f94deb87fb8dc3303eb08544c5a0", "patch": "@@ -832,7 +832,7 @@ fn decl_upcall_glue(ModuleRef llmod, type_names tn, uint _n) -> ValueRef {\n     let str s = abi.upcall_glue_name(n);\n     let vec[TypeRef] args =\n         vec(T_int(),     // callee\n-            T_taskptr(tn)) // taskptr\n+            T_int()) // taskptr\n         + _vec.init_elt[TypeRef](T_int(), n as uint);\n \n     ret decl_fastcall_fn(llmod, s, T_fn(args, T_int()));\n@@ -856,7 +856,8 @@ fn trans_upcall(@block_ctxt cx, str name, vec[ValueRef] args) -> result {\n     llupcall = llvm.LLVMConstPointerCast(llupcall, T_int());\n \n     let ValueRef llglue = cx.fcx.ccx.glues.upcall_glues.(n);\n-    let vec[ValueRef] call_args = vec(llupcall, cx.fcx.lltaskptr);\n+    let vec[ValueRef] call_args = vec(llupcall);\n+    call_args += cx.build.PtrToInt(cx.fcx.lltaskptr, T_int());\n \n     for (ValueRef a in args) {\n         call_args += cx.build.ZExtOrBitCast(a, T_int());"}]}