{"sha": "6d599337fa7047307ba72786bbabe6b9c9e4daac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNTk5MzM3ZmE3MDQ3MzA3YmE3Mjc4NmJiYWJlNmI5YzllNGRhYWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-22T16:30:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-22T16:30:42Z"}, "message": "Auto merge of #60168 - varkor:tidy-leading-newline, r=alexcrichton\n\nAdd a tidy check for leading newlines\n\nThis is fairly uncommon, but it can slip through when refactoring (as evidenced by the files with leading newlines here).", "tree": {"sha": "d4106c9f2054889c819d9cfd485fee77254579fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4106c9f2054889c819d9cfd485fee77254579fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d599337fa7047307ba72786bbabe6b9c9e4daac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d599337fa7047307ba72786bbabe6b9c9e4daac", "html_url": "https://github.com/rust-lang/rust/commit/6d599337fa7047307ba72786bbabe6b9c9e4daac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d599337fa7047307ba72786bbabe6b9c9e4daac/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21fbfe7e310b9055ed6b7c46b7d37b831a516e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c21fbfe7e310b9055ed6b7c46b7d37b831a516e3", "html_url": "https://github.com/rust-lang/rust/commit/c21fbfe7e310b9055ed6b7c46b7d37b831a516e3"}, {"sha": "096495531c89076a9a68c01a0b32e6559a23b1d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/096495531c89076a9a68c01a0b32e6559a23b1d8", "html_url": "https://github.com/rust-lang/rust/commit/096495531c89076a9a68c01a0b32e6559a23b1d8"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "4a1786f89ed556b4c174209d35f2624135263ade", "filename": "src/rustc/rustc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Frustc%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Frustc%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,4 +1,3 @@\n-\n fn main() {\n     // Pull in jemalloc when enabled.\n     //"}, {"sha": "fd16ad2dca419e393e73d7d0e77662ce32397651", "filename": "src/test/incremental/change_name_of_static_in_fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fincremental%2Fchange_name_of_static_in_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fincremental%2Fchange_name_of_static_in_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_name_of_static_in_fn.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,4 +1,3 @@\n-\n // revisions:rpass1 rpass2 rpass3\n \n // See issue #57692."}, {"sha": "e63457e6eb9535041a23a3a3c1987fd874646e01", "filename": "src/test/run-make-fulldeps/lto-dylib-dep/a_dylib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Frun-make-fulldeps%2Flto-dylib-dep%2Fa_dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Frun-make-fulldeps%2Flto-dylib-dep%2Fa_dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flto-dylib-dep%2Fa_dylib.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,4 +1,3 @@\n-\n pub fn foo() {\n     println!(\"bar\");\n }"}, {"sha": "4fb3c4730b2c64d106dd33651e709a8664cf6091", "filename": "src/test/run-make-fulldeps/lto-dylib-dep/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Frun-make-fulldeps%2Flto-dylib-dep%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Frun-make-fulldeps%2Flto-dylib-dep%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flto-dylib-dep%2Fmain.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,4 +1,3 @@\n-\n extern crate a_dylib;\n \n fn main() {"}, {"sha": "41b9d64d5f71e88a0d348fecf6151f1d437a4bc3", "filename": "src/test/run-pass/coherence/auxiliary/re_rebalance_coherence_lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Frun-pass%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Frun-pass%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,5 +1,4 @@\n-\n-pub trait Backend{}\n+pub trait Backend {}\n pub trait SupportsDefaultKeyword {}\n \n impl SupportsDefaultKeyword for Postgres {}"}, {"sha": "41b9d64d5f71e88a0d348fecf6151f1d437a4bc3", "filename": "src/test/ui/coherence/auxiliary/re_rebalance_coherence_lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,5 +1,4 @@\n-\n-pub trait Backend{}\n+pub trait Backend {}\n pub trait SupportsDefaultKeyword {}\n \n impl SupportsDefaultKeyword for Postgres {}"}, {"sha": "c9db2bab183b4d48c300d6c8357e565a88abbaa9", "filename": "src/test/ui/e0119/conflict-with-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,4 +1,3 @@\n-\n use std::marker::PhantomData;\n use std::convert::{TryFrom, AsRef};\n "}, {"sha": "3e0c71e907481dcc435a51d7ebc5f1505e69ed11", "filename": "src/test/ui/e0119/conflict-with-std.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fe0119%2Fconflict-with-std.stderr?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,5 +1,5 @@\n error[E0119]: conflicting implementations of trait `std::convert::AsRef<Q>` for type `std::boxed::Box<Q>`:\n-  --> $DIR/conflict-with-std.rs:6:1\n+  --> $DIR/conflict-with-std.rs:5:1\n    |\n LL | impl AsRef<Q> for Box<Q> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -9,7 +9,7 @@ LL | impl AsRef<Q> for Box<Q> {\n              where T: ?Sized;\n \n error[E0119]: conflicting implementations of trait `std::convert::From<S>` for type `S`:\n-  --> $DIR/conflict-with-std.rs:13:1\n+  --> $DIR/conflict-with-std.rs:12:1\n    |\n LL | impl From<S> for S {\n    | ^^^^^^^^^^^^^^^^^^\n@@ -18,7 +18,7 @@ LL | impl From<S> for S {\n            - impl<T> std::convert::From<T> for T;\n \n error[E0119]: conflicting implementations of trait `std::convert::TryFrom<X>` for type `X`:\n-  --> $DIR/conflict-with-std.rs:20:1\n+  --> $DIR/conflict-with-std.rs:19:1\n    |\n LL | impl TryFrom<X> for X {\n    | ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "41b9d64d5f71e88a0d348fecf6151f1d437a4bc3", "filename": "src/test/ui/feature-gates/auxiliary/re_rebalance_coherence_lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Ffeature-gates%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Ffeature-gates%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fauxiliary%2Fre_rebalance_coherence_lib.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,5 +1,4 @@\n-\n-pub trait Backend{}\n+pub trait Backend {}\n pub trait SupportsDefaultKeyword {}\n \n impl SupportsDefaultKeyword for Postgres {}"}, {"sha": "9328d1a9045e57b4483d7cd1a5ce01e8f48217df", "filename": "src/test/ui/mod-subitem-as-enum-variant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,4 +1,3 @@\n-\n mod Mod {\n     pub struct FakeVariant<T>(pub T);\n }"}, {"sha": "d6815c91e5e9ec477ea32e3dcb736961d431fbba", "filename": "src/test/ui/mod-subitem-as-enum-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.stderr?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -1,5 +1,5 @@\n error[E0109]: type arguments are not allowed for this type\n-  --> $DIR/mod-subitem-as-enum-variant.rs:8:11\n+  --> $DIR/mod-subitem-as-enum-variant.rs:7:11\n    |\n LL |     Mod::<i32>::FakeVariant(0);\n    |           ^^^ type argument not allowed"}, {"sha": "528a5063ee46c04b9ee0921352b539be2d8285db", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d599337fa7047307ba72786bbabe6b9c9e4daac/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=6d599337fa7047307ba72786bbabe6b9c9e4daac", "patch": "@@ -112,6 +112,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n         let skip_length = contents.contains(\"ignore-tidy-linelength\");\n         let skip_end_whitespace = contents.contains(\"ignore-tidy-end-whitespace\");\n         let skip_copyright = contents.contains(\"ignore-tidy-copyright\");\n+        let mut leading_new_lines = false;\n         let mut trailing_new_lines = 0;\n         for (i, line) in contents.split('\\n').enumerate() {\n             let mut err = |msg: &str| {\n@@ -152,11 +153,17 @@ pub fn check(path: &Path, bad: &mut bool) {\n                 err(LLVM_UNREACHABLE_INFO);\n             }\n             if line.is_empty() {\n+                if i == 0 {\n+                    leading_new_lines = true;\n+                }\n                 trailing_new_lines += 1;\n             } else {\n                 trailing_new_lines = 0;\n             }\n         }\n+        if leading_new_lines {\n+            tidy_error!(bad, \"{}: leading newline\", file.display());\n+        }\n         match trailing_new_lines {\n             0 => tidy_error!(bad, \"{}: missing trailing newline\", file.display()),\n             1 | 2 => {}"}]}