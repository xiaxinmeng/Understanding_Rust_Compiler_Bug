{"sha": "0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "node_id": "C_kwDOAAsO6NoAKDA1NTdkMDJhOWRjY2EyZDBmMmUzYzZhNWEwYTY5OTM1ZGE0Y2YxZjU", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-22T12:42:30Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T07:53:42Z"}, "message": "privacy: port unnamed \"item is private\" diag\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "61ea63a3ed58fb2509977b55ee9a3a90d4545663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61ea63a3ed58fb2509977b55ee9a3a90d4545663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "html_url": "https://github.com/rust-lang/rust/commit/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70", "html_url": "https://github.com/rust-lang/rust/commit/cb90a4f30c9f34b0f2b9c55daedb4fa832bbcf70"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "de5b94e391650c5f4a6daac7779975624ca3c6b7", "filename": "compiler/rustc_error_messages/locales/en-US/privacy.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl?ref=0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "patch": "@@ -4,3 +4,5 @@ privacy-field-is-private-label = private field\n \n privacy-item-is-private = {$kind} `{$descr}` is private\n     .label = private {$kind}\n+privacy-unnamed-item-is-private = {$kind} is private\n+    .label = private {$kind}"}, {"sha": "4db712ac8adc1d90883bfcd815ff9f1a866666d1", "filename": "compiler/rustc_privacy/src/errors.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Ferrors.rs?ref=0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "patch": "@@ -37,3 +37,11 @@ pub struct ItemIsPrivate<'a> {\n     pub kind: &'a str,\n     pub descr: String,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(privacy::unnamed_item_is_private)]\n+pub struct UnnamedItemIsPrivate {\n+    #[primary_span]\n+    pub span: Span,\n+    pub kind: &'static str,\n+}"}, {"sha": "59064563de5cecee3113e47ed8b479607cbe64b1", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=0557d02a9dcca2d0f2e3c6a5a0a69935da4cf1f5", "patch": "@@ -36,7 +36,7 @@ use std::marker::PhantomData;\n use std::ops::ControlFlow;\n use std::{cmp, fmt, mem};\n \n-use errors::{FieldIsPrivate, FieldIsPrivateLabel, ItemIsPrivate};\n+use errors::{FieldIsPrivate, FieldIsPrivateLabel, ItemIsPrivate, UnnamedItemIsPrivate};\n \n ////////////////////////////////////////////////////////////////////////////////\n /// Generic infrastructure used to implement specific visitors below.\n@@ -1248,13 +1248,10 @@ impl<'tcx> Visitor<'tcx> for TypePrivacyVisitor<'tcx> {\n                     hir::QPath::TypeRelative(_, segment) => Some(segment.ident.to_string()),\n                 };\n                 let kind = kind.descr(def_id);\n-                let msg = match name {\n-                    Some(name) => format!(\"{} `{}` is private\", kind, name),\n-                    None => format!(\"{} is private\", kind),\n+                let _ = match name {\n+                    Some(name) => sess.emit_err(ItemIsPrivate { span, kind, descr: name }),\n+                    None => sess.emit_err(UnnamedItemIsPrivate { span, kind }),\n                 };\n-                sess.struct_span_err(span, &msg)\n-                    .span_label(span, &format!(\"private {}\", kind))\n-                    .emit();\n                 return;\n             }\n         }"}]}