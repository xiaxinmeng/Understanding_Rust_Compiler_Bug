{"sha": "3bde2b742388f3ec3bb08841f93a06a62be04e4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZGUyYjc0MjM4OGYzZWMzYmIwODg0MWY5M2EwNmE2MmJlMDRlNGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-07T14:40:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-07T14:40:39Z"}, "message": "A more precise panic macro", "tree": {"sha": "32da4e54e9e9e82b69cc1456cc0eb11b840af384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32da4e54e9e9e82b69cc1456cc0eb11b840af384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bde2b742388f3ec3bb08841f93a06a62be04e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bde2b742388f3ec3bb08841f93a06a62be04e4d", "html_url": "https://github.com/rust-lang/rust/commit/3bde2b742388f3ec3bb08841f93a06a62be04e4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bde2b742388f3ec3bb08841f93a06a62be04e4d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5540193fc87a33a6c141956a63f9f56fe6207ee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5540193fc87a33a6c141956a63f9f56fe6207ee8", "html_url": "https://github.com/rust-lang/rust/commit/5540193fc87a33a6c141956a63f9f56fe6207ee8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "79f5c8c8f9ea778c45d8585d08297611b57b99af", "filename": "crates/ra_ide/src/completion/complete_record.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bde2b742388f3ec3bb08841f93a06a62be04e4d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bde2b742388f3ec3bb08841f93a06a62be04e4d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs?ref=3bde2b742388f3ec3bb08841f93a06a62be04e4d", "patch": "@@ -7,7 +7,7 @@ pub(super) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) ->\n     let (ty, variant, already_present_fields) =\n         match (ctx.record_lit_pat.as_ref(), ctx.record_lit_syntax.as_ref()) {\n             (None, None) => return None,\n-            (Some(_), Some(_)) => panic!(\"A record cannot be both a literal and a pattern\"),\n+            (Some(_), Some(_)) => unreachable!(\"A record cannot be both a literal and a pattern\"),\n             (Some(record_pat), _) => (\n                 ctx.sema.type_of_pat(&record_pat.clone().into())?,\n                 ctx.sema.resolve_record_pattern(record_pat)?,"}]}