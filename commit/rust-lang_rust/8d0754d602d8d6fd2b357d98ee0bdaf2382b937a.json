{"sha": "8d0754d602d8d6fd2b357d98ee0bdaf2382b937a", "node_id": "C_kwDOAAsO6NoAKDhkMDc1NGQ2MDJkOGQ2ZmQyYjM1N2Q5OGVlMGJkYWYyMzgyYjkzN2E", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-30T06:50:02Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-03T00:42:29Z"}, "message": "Inline and remove `parse_token_tree_non_delim_non_eof`.\n\nIt has a single call site.", "tree": {"sha": "fa6de9aa9501467e309c89648e728bc960bdf924", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa6de9aa9501467e309c89648e728bc960bdf924"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d0754d602d8d6fd2b357d98ee0bdaf2382b937a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0754d602d8d6fd2b357d98ee0bdaf2382b937a", "html_url": "https://github.com/rust-lang/rust/commit/8d0754d602d8d6fd2b357d98ee0bdaf2382b937a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d0754d602d8d6fd2b357d98ee0bdaf2382b937a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce7676829e4786a44e8199e5df6e0cf9035a6d0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce7676829e4786a44e8199e5df6e0cf9035a6d0f", "html_url": "https://github.com/rust-lang/rust/commit/ce7676829e4786a44e8199e5df6e0cf9035a6d0f"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "e3ccfc654623a6a105b6cfe6f1eacb9ee00dca97", "filename": "compiler/rustc_parse/src/lexer/tokentrees.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8d0754d602d8d6fd2b357d98ee0bdaf2382b937a/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d0754d602d8d6fd2b357d98ee0bdaf2382b937a/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs?ref=8d0754d602d8d6fd2b357d98ee0bdaf2382b937a", "patch": "@@ -64,7 +64,20 @@ impl<'a> TokenTreesReader<'a> {\n                     }\n                     return Ok(buf.into_token_stream());\n                 }\n-                _ => buf.push(self.parse_token_tree_non_delim_non_eof()),\n+                _ => {\n+                    // `this_spacing` for the returned token refers to whether the token is\n+                    // immediately followed by another op token. It is determined by the\n+                    // next token: its kind and its `preceded_by_whitespace` status.\n+                    let (next_tok, is_next_tok_preceded_by_whitespace) =\n+                        self.string_reader.next_token();\n+                    let this_spacing = if is_next_tok_preceded_by_whitespace || !next_tok.is_op() {\n+                        Spacing::Alone\n+                    } else {\n+                        Spacing::Joint\n+                    };\n+                    let this_tok = std::mem::replace(&mut self.token, next_tok);\n+                    buf.push(TokenTree::Token(this_tok, this_spacing))\n+                }\n             }\n         }\n     }\n@@ -235,21 +248,6 @@ impl<'a> TokenTreesReader<'a> {\n         err.span_label(self.token.span, \"unexpected closing delimiter\");\n         err\n     }\n-\n-    #[inline]\n-    fn parse_token_tree_non_delim_non_eof(&mut self) -> TokenTree {\n-        // `this_spacing` for the returned token refers to whether the token is\n-        // immediately followed by another op token. It is determined by the\n-        // next token: its kind and its `preceded_by_whitespace` status.\n-        let (next_tok, is_next_tok_preceded_by_whitespace) = self.string_reader.next_token();\n-        let this_spacing = if is_next_tok_preceded_by_whitespace || !next_tok.is_op() {\n-            Spacing::Alone\n-        } else {\n-            Spacing::Joint\n-        };\n-        let this_tok = std::mem::replace(&mut self.token, next_tok);\n-        TokenTree::Token(this_tok, this_spacing)\n-    }\n }\n \n #[derive(Default)]"}]}