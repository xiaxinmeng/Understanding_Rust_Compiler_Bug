{"sha": "c3179bc44bcba851f08e25acab44097c06b27b52", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTc5YmM0NGJjYmE4NTFmMDhlMjVhY2FiNDQwOTdjMDZiMjdiNTI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-21T18:49:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-21T18:49:51Z"}, "message": "Rustup to rustc 1.50.0-nightly (593fe977a 2020-11-20)", "tree": {"sha": "fc4560af2ea8d197fb555c7af49d98f8450373f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc4560af2ea8d197fb555c7af49d98f8450373f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3179bc44bcba851f08e25acab44097c06b27b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3179bc44bcba851f08e25acab44097c06b27b52", "html_url": "https://github.com/rust-lang/rust/commit/c3179bc44bcba851f08e25acab44097c06b27b52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3179bc44bcba851f08e25acab44097c06b27b52/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e90f1cb55c6608891c38e158e17d6e0537472e", "url": "https://api.github.com/repos/rust-lang/rust/commits/77e90f1cb55c6608891c38e158e17d6e0537472e", "html_url": "https://github.com/rust-lang/rust/commit/77e90f1cb55c6608891c38e158e17d6e0537472e"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "63909f92952cd474eae4373cf3084f451afa3e56", "filename": "build_sysroot/Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3179bc44bcba851f08e25acab44097c06b27b52/build_sysroot%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c3179bc44bcba851f08e25acab44097c06b27b52/build_sysroot%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.lock?ref=c3179bc44bcba851f08e25acab44097c06b27b52", "patch": "@@ -76,9 +76,9 @@ version = \"0.0.0\"\n \n [[package]]\n name = \"dlmalloc\"\n-version = \"0.1.4\"\n+version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"35055b1021724f4eb5262eb49130eebff23fc59fc5a14160e05faad8eeb36673\"\n+checksum = \"332570860c2edf2d57914987bf9e24835425f75825086b6ba7d1e6a3e4f1f254\"\n dependencies = [\n  \"compiler_builtins\",\n  \"libc\","}, {"sha": "b38e25328a4eece82b29334128f293e498a4b188", "filename": "example/std_example.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3179bc44bcba851f08e25acab44097c06b27b52/example%2Fstd_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3179bc44bcba851f08e25acab44097c06b27b52/example%2Fstd_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fstd_example.rs?ref=c3179bc44bcba851f08e25acab44097c06b27b52", "patch": "@@ -53,6 +53,7 @@ fn main() {\n \n     assert_eq!(0b0000000000000000000000000010000010000000000000000000000000000000_0000000000100000000000000000000000001000000000000100000000000000u128.leading_zeros(), 26);\n     assert_eq!(0b0000000000000000000000000010000000000000000000000000000000000000_0000000000000000000000000000000000001000000000000000000010000000u128.trailing_zeros(), 7);\n+    assert_eq!(core::intrinsics::saturating_sub(0, -170141183460469231731687303715884105728i128), 170141183460469231731687303715884105727i128);\n \n     let _d = 0i128.checked_div(2i128);\n     let _d = 0u128.checked_div(2u128);"}, {"sha": "8cfffe580a1f0ef9be7dc3f207d4d399465de3de", "filename": "patches/0022-core-Disable-not-compiling-tests.patch", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c3179bc44bcba851f08e25acab44097c06b27b52/patches%2F0022-core-Disable-not-compiling-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/c3179bc44bcba851f08e25acab44097c06b27b52/patches%2F0022-core-Disable-not-compiling-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0022-core-Disable-not-compiling-tests.patch?ref=c3179bc44bcba851f08e25acab44097c06b27b52", "patch": "@@ -52,8 +52,8 @@ index 0475aeb..9558198 100644\n              fn test_rotate() {\n                  assert_eq!(A.rotate_left(6).rotate_right(2).rotate_right(4), A);\n @@ -112,6 +113,7 @@ mod tests {\n-                 assert_eq!(B.rotate_left(64), B);\n-                 assert_eq!(C.rotate_left(64), C);\n+                 assert_eq!(B.rotate_left(128), B);\n+                 assert_eq!(C.rotate_left(128), C);\n              }\n +            */\n  \n@@ -72,8 +72,8 @@ index 04ed14f..a6e372e 100644\n              fn test_rotate() {\n                  assert_eq!(A.rotate_left(6).rotate_right(2).rotate_right(4), A);\n @@ -76,6 +77,7 @@ mod tests {\n-                 assert_eq!(B.rotate_left(64), B);\n-                 assert_eq!(C.rotate_left(64), C);\n+                 assert_eq!(B.rotate_left(128), B);\n+                 assert_eq!(C.rotate_left(128), C);\n              }\n +            */\n  "}, {"sha": "6ad89abbc06d41e6ee0532e68bd6af71e452fa19", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3179bc44bcba851f08e25acab44097c06b27b52/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/c3179bc44bcba851f08e25acab44097c06b27b52/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=c3179bc44bcba851f08e25acab44097c06b27b52", "patch": "@@ -1 +1 @@\n-nightly-2020-11-13\n+nightly-2020-11-21"}, {"sha": "1485d4451b815bb01261b85cdb931f1107ec3af6", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3179bc44bcba851f08e25acab44097c06b27b52/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3179bc44bcba851f08e25acab44097c06b27b52/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=c3179bc44bcba851f08e25acab44097c06b27b52", "patch": "@@ -233,7 +233,7 @@ pub(crate) fn type_min_max_value(\n             let min_msb = bcx.ins().iconst(types::I64, (min >> 64) as u64 as i64);\n             let min = bcx.ins().iconcat(min_lsb, min_msb);\n \n-            let max = i128::MIN as u128;\n+            let max = i128::MAX as u128;\n             let max_lsb = bcx.ins().iconst(types::I64, max as u64 as i64);\n             let max_msb = bcx.ins().iconst(types::I64, (max >> 64) as u64 as i64);\n             let max = bcx.ins().iconcat(max_lsb, max_msb);"}]}