{"sha": "86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZDJiYTRmNTkxZmMyNmFhMWM2N2RhOWZmZWE0ZGU3NTBmMGFjZmQ=", "commit": {"author": {"name": "steveklabnik", "email": "steve@steveklabnik.com", "date": "2018-07-11T13:08:27Z"}, "committer": {"name": "steveklabnik", "email": "steve@steveklabnik.com", "date": "2018-07-24T20:44:52Z"}, "message": "remove pluginmanager", "tree": {"sha": "59a7c12d390ff899c1e2f8bcbeb15a4bbfde31c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59a7c12d390ff899c1e2f8bcbeb15a4bbfde31c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "html_url": "https://github.com/rust-lang/rust/commit/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e6fc3e2c060b8b093a49e6a10e3468ca644d963", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e6fc3e2c060b8b093a49e6a10e3468ca644d963", "html_url": "https://github.com/rust-lang/rust/commit/2e6fc3e2c060b8b093a49e6a10e3468ca644d963"}], "stats": {"total": 87, "additions": 18, "deletions": 69}, "files": [{"sha": "be7ab8804b09156ec5891b82f7a4cbd19a77707f", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -90,7 +90,6 @@ pub mod html {\n }\n pub mod markdown;\n pub mod passes;\n-pub mod plugins;\n pub mod visit_ast;\n pub mod visit_lib;\n pub mod test;\n@@ -750,25 +749,27 @@ where R: 'static + Send,\n             eprintln!(\"WARNING: --plugin-path no longer functions; see CVE-2018-1000622\");\n         }\n \n-        // Load all plugins/passes into a PluginManager\n-        let mut pm = plugins::PluginManager::new();\n+        info!(\"Executing passes\");\n+\n         for pass in &passes {\n-            let plugin = match passes::PASSES.iter()\n+            // determine if we know about this pass\n+            let pass = match passes::PASSES.iter().find(|(p, ..)| p == pass) {\n+            /*\n                                              .position(|&(p, ..)| {\n                                                  p == *pass\n                                              }) {\n-                Some(i) => passes::PASSES[i].1,\n+                                                 */\n+                Some(pass) => pass.1,\n                 None => {\n                     error!(\"unknown pass {}, skipping\", *pass);\n+\n                     continue\n                 },\n             };\n-            pm.add_plugin(plugin);\n-        }\n \n-        // Run everything!\n-        info!(\"Executing passes/plugins\");\n-        let krate = pm.run_plugins(krate);\n+            // run it\n+            krate = pass(krate);\n+        }\n \n         tx.send(f(Output { krate: krate, renderinfo: renderinfo, passes: passes })).unwrap();\n     }));"}, {"sha": "6f70fcf1099e634dbecc643b5b14c8e756db6487", "filename": "src/librustdoc/passes/collapse_docs.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fcollapse_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fcollapse_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollapse_docs.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use clean::{self, DocFragment, Item};\n-use plugins;\n use fold;\n use fold::DocFolder;\n use std::mem::replace;\n@@ -31,7 +30,7 @@ impl DocFragment {\n     }\n }\n \n-pub fn collapse_docs(krate: clean::Crate) -> plugins::PluginResult {\n+pub fn collapse_docs(krate: clean::Crate) -> clean::Crate {\n     Collapser.fold_crate(krate)\n }\n "}, {"sha": "63b74ceafacb466cde15c71ece1e74c6eef4754e", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -16,7 +16,6 @@ use std::mem;\n use clean::{self, GetDefId, Item};\n use fold;\n use fold::FoldItem::Strip;\n-use plugins;\n \n mod collapse_docs;\n pub use self::collapse_docs::collapse_docs;\n@@ -37,7 +36,7 @@ mod propagate_doc_cfg;\n pub use self::propagate_doc_cfg::propagate_doc_cfg;\n \n type Pass = (&'static str,                                      // name\n-             fn(clean::Crate) -> plugins::PluginResult,         // fn\n+             fn(clean::Crate) -> clean::Crate,                  // fn\n              &'static str);                                     // description\n \n pub const PASSES: &'static [Pass] = &["}, {"sha": "572a8d3f470f2ac24ad038d5b9e2a94c4154786d", "filename": "src/librustdoc/passes/propagate_doc_cfg.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fpropagate_doc_cfg.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -13,9 +13,8 @@ use std::sync::Arc;\n use clean::{Crate, Item};\n use clean::cfg::Cfg;\n use fold::DocFolder;\n-use plugins::PluginResult;\n \n-pub fn propagate_doc_cfg(cr: Crate) -> PluginResult {\n+pub fn propagate_doc_cfg(cr: Crate) -> Crate {\n     CfgPropagator { parent_cfg: None }.fold_crate(cr)\n }\n "}, {"sha": "b1545233f8a2b52f4fc0d039ddef8d3816b496b9", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -13,14 +13,13 @@ use std::mem;\n \n use clean::{self, AttributesExt, NestedAttributesExt};\n use clean::Item;\n-use plugins;\n use fold;\n use fold::DocFolder;\n use fold::FoldItem::Strip;\n use passes::ImplStripper;\n \n /// Strip items marked `#[doc(hidden)]`\n-pub fn strip_hidden(krate: clean::Crate) -> plugins::PluginResult {\n+pub fn strip_hidden(krate: clean::Crate) -> clean::Crate {\n     let mut retained = DefIdSet();\n \n     // strip all #[doc(hidden)] items"}, {"sha": "c4640839923bdc2d781decc786d16a48f8c2bd1d", "filename": "src/librustdoc/passes/strip_priv_imports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -10,9 +10,8 @@\n \n use clean;\n use fold::DocFolder;\n-use plugins;\n use passes::ImportStripper;\n \n-pub fn strip_priv_imports(krate: clean::Crate)  -> plugins::PluginResult {\n+pub fn strip_priv_imports(krate: clean::Crate)  -> clean::Crate {\n     ImportStripper.fold_crate(krate)\n }"}, {"sha": "45f706590e32e558d6a9af4d001b60402ff75339", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -11,13 +11,12 @@\n use rustc::util::nodemap::DefIdSet;\n \n use clean;\n-use plugins;\n use fold::DocFolder;\n use passes::{ImplStripper, ImportStripper, Stripper};\n \n /// Strip private items from the point of view of a crate or externally from a\n /// crate, specified by the `xcrate` flag.\n-pub fn strip_private(mut krate: clean::Crate) -> plugins::PluginResult {\n+pub fn strip_private(mut krate: clean::Crate) -> clean::Crate {\n     // This stripper collects all *retained* nodes.\n     let mut retained = DefIdSet();\n     let access_levels = krate.access_levels.clone();"}, {"sha": "2510ec011b64ca499227e915100e538489fb1fd3", "filename": "src/librustdoc/passes/unindent_comments.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d2ba4f591fc26aa1c67da9ffea4de750f0acfd/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs?ref=86d2ba4f591fc26aa1c67da9ffea4de750f0acfd", "patch": "@@ -13,10 +13,9 @@ use std::string::String;\n use std::usize;\n \n use clean::{self, DocFragment, Item};\n-use plugins;\n use fold::{self, DocFolder};\n \n-pub fn unindent_comments(krate: clean::Crate) -> plugins::PluginResult {\n+pub fn unindent_comments(krate: clean::Crate) -> clean::Crate {\n     CommentCleaner.fold_crate(krate)\n }\n "}, {"sha": "261ff728aef605aabe41a2a10cbc50134c1271f5", "filename": "src/librustdoc/plugins.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2e6fc3e2c060b8b093a49e6a10e3468ca644d963/src%2Flibrustdoc%2Fplugins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6fc3e2c060b8b093a49e6a10e3468ca644d963/src%2Flibrustdoc%2Fplugins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fplugins.rs?ref=2e6fc3e2c060b8b093a49e6a10e3468ca644d963", "patch": "@@ -1,45 +0,0 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![allow(deprecated)]\n-\n-use clean;\n-\n-pub type PluginResult = clean::Crate;\n-pub type PluginCallback = fn (clean::Crate) -> PluginResult;\n-\n-/// Manages loading and running of plugins\n-pub struct PluginManager {\n-    callbacks: Vec<PluginCallback> ,\n-}\n-\n-impl PluginManager {\n-    /// Create a new plugin manager\n-    pub fn new() -> PluginManager {\n-        PluginManager {\n-            callbacks: Vec::new(),\n-        }\n-    }\n-\n-    /// Load a normal Rust function as a plugin.\n-    ///\n-    /// This is to run passes over the cleaned crate. Plugins run this way\n-    /// correspond to the A-aux tag on Github.\n-    pub fn add_plugin(&mut self, plugin: PluginCallback) {\n-        self.callbacks.push(plugin);\n-    }\n-    /// Run all the loaded plugins over the crate, returning their results\n-    pub fn run_plugins(&self, mut krate: clean::Crate) -> clean::Crate {\n-        for &callback in &self.callbacks {\n-            krate = callback(krate);\n-        }\n-        krate\n-    }\n-}"}]}