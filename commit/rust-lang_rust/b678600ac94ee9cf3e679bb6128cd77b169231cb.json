{"sha": "b678600ac94ee9cf3e679bb6128cd77b169231cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2Nzg2MDBhYzk0ZWU5Y2YzZTY3OWJiNjEyOGNkNzdiMTY5MjMxY2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-30T01:03:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-30T01:03:35Z"}, "message": "Auto merge of #32576 - alexcrichton:metadata-for-our-crates, r=brson\n\nmk: Fix cross-host builds\n\nThe change in b20e748 had the unintended consequence of breaking cross-host\nbuilds as we apparently relied on the incorrect definition of this variable in\nthe makefiles. That change, however, was required to get tests passing so we\ncouldn't just revert it.\n\nThis commit fixes the underlying bug by leaving the \"more correct\" definition of\n`LD_LIBRARY_PATH_ENV_TARGETDIR` (also fixing it with a hardcoded reference to\n`CFG_BUILD`) and updating the `RPATH_VAR` definition below. Turned out we\nalready had special-casing logic for passing `--cfg stage1` during the\nwell-we-print-this-as-stage0 build of a cross-host. That logic was just updated\nto pull from a different variable as opposed to relying on the definition of\nthat variable to accommodate this.\n\nCloses #32568", "tree": {"sha": "d893572cf57e5dfb7baa5b0a540911575b69c6b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d893572cf57e5dfb7baa5b0a540911575b69c6b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b678600ac94ee9cf3e679bb6128cd77b169231cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b678600ac94ee9cf3e679bb6128cd77b169231cb", "html_url": "https://github.com/rust-lang/rust/commit/b678600ac94ee9cf3e679bb6128cd77b169231cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b678600ac94ee9cf3e679bb6128cd77b169231cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec666a597743ad57f514d8f271291a8a1f5a0ff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec666a597743ad57f514d8f271291a8a1f5a0ff0", "html_url": "https://github.com/rust-lang/rust/commit/ec666a597743ad57f514d8f271291a8a1f5a0ff0"}, {"sha": "694d88394b824fecf90176c9d1a38631fd33d468", "url": "https://api.github.com/repos/rust-lang/rust/commits/694d88394b824fecf90176c9d1a38631fd33d468", "html_url": "https://github.com/rust-lang/rust/commit/694d88394b824fecf90176c9d1a38631fd33d468"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "a32658ddcefdc86d76699e31e2f1714e57fe80fb", "filename": "mk/main.mk", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b678600ac94ee9cf3e679bb6128cd77b169231cb/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b678600ac94ee9cf3e679bb6128cd77b169231cb/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=b678600ac94ee9cf3e679bb6128cd77b169231cb", "patch": "@@ -493,7 +493,7 @@ endif\n LD_LIBRARY_PATH_ENV_HOSTDIR$(1)_T_$(2)_H_$(3) := \\\n     $$(CURDIR)/$$(HLIB$(1)_H_$(3)):$$(CFG_LLVM_INST_DIR_$(3))/lib\n LD_LIBRARY_PATH_ENV_TARGETDIR$(1)_T_$(2)_H_$(3) := \\\n-    $$(CURDIR)/$$(TLIB$(1)_T_$(2)_H_$(CFG_BUILD))\n+    $$(CURDIR)/$$(TLIB$(1)_T_$(2)_H_$(3))\n \n HOST_RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n   $$(LD_LIBRARY_PATH_ENV_NAME$(1)_T_$(2)_H_$(3))=$$(LD_LIBRARY_PATH_ENV_HOSTDIR$(1)_T_$(2)_H_$(3)):$$$$$$(LD_LIBRARY_PATH_ENV_NAME$(1)_T_$(2)_H_$(3))\n@@ -506,18 +506,14 @@ RPATH_VAR$(1)_T_$(2)_H_$(3) := $$(HOST_RPATH_VAR$(1)_T_$(2)_H_$(3))\n # if you're building a cross config, the host->* parts are\n # effectively stage1, since it uses the just-built stage0.\n #\n-# This logic is similar to how the LD_LIBRARY_PATH variable must\n-# change be slightly different when doing cross compilations.\n-# The build doesn't copy over all target libraries into\n-# a new directory, so we need to point the library path at\n-# the build directory where all the target libraries came\n-# from (the stage0 build host). Otherwise the relative rpaths\n-# inside of the rustc binary won't get resolved correctly.\n+# Also be sure to use the right rpath because we're loading libraries from the\n+# CFG_BUILD's stage1 directory for our target, so switch this one instance of\n+# `RPATH_VAR` to get the bootstrap working.\n ifeq ($(1),0)\n ifneq ($(strip $(CFG_BUILD)),$(strip $(3)))\n CFGFLAG$(1)_T_$(2)_H_$(3) = stage1\n \n-RPATH_VAR$(1)_T_$(2)_H_$(3) := $$(TARGET_RPATH_VAR$(1)_T_$(2)_H_$(3))\n+RPATH_VAR$(1)_T_$(2)_H_$(3) := $$(TARGET_RPATH_VAR1_T_$(2)_H_$$(CFG_BUILD))\n endif\n endif\n "}]}