{"sha": "2c2c1593acc5479a4b502d51bb5fea239766c235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMmMxNTkzYWNjNTQ3OWE0YjUwMmQ1MWJiNWZlYTIzOTc2NmMyMzU=", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-03-17T03:52:02Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-05-19T22:54:56Z"}, "message": "Move the implementation of `Path::exists` to `sys_common::fs` so platforms can specialize it\n\nWindows implementation of `fs::try_exists`", "tree": {"sha": "80b1cf6e859bb5f57199bb645e8bd6c91ec0b654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80b1cf6e859bb5f57199bb645e8bd6c91ec0b654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c2c1593acc5479a4b502d51bb5fea239766c235", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmCll2UACgkQcTRy8vRW\nJ979PhAAsYBWvZqgVGpXBCnvWMIwIG0QQZjCz4uuBC8xdHoJykNUh0x40ErXMtN0\nzIIjHJ9vYU4xTnQ21QWJDgOpZe+Q0h31g3JNcW5klA0WashQZzxJfXSaCGyGASGO\np379rdhofdomyYQQDMGcshnI4aCtqanDTAFDwcY2CNlnKM/gEGZp5cSxuUjmSHo8\nQlrCQnW/x1jOzNSZtJmxut+6zJJ/GKG+BGIvyNyzhO6F+RdtbP34mcfTBF6KkiKd\n+jV4JGjw+SDPILt2HxUfmnJp1aH0GPgVjgFUG728BolIvOAI80kFUmMhqE1/P0vQ\nGDJfjLyYEAy+iY3OweZp0VTkCDPp0FQKt1jvMF4F1EyttFyfEjsZkmy9QRjPCscY\ne8+xO6Z4UsUoKGuk2sVCTQT4636e8dh8xy7C8u3Ve1sbTz8rUowY7aq2TE+zYLa8\nlbxm3xpZOaePeU70552lhzdTvwxHdbOmsRmgW12haMYBmNq7hL8Z+2iC7sSAxRQ7\nmRy1AENbATli4SKW63NTQOLWuV75F4hYH+Paz/2KVDGei8uwKIh9iZUbgTcEz8+N\nmF3ZHFv6GfbZn+mniF+gVQ6+++3tLx1PkOBLfZyVRmGwe8p9Se8n/+77j0GbF5f7\n4EAAw3G6lKtBJ88cCWiQbAjDy8oXmFkLxX8nQ2/mlLsKa7Ernc8=\n=xiTi\n-----END PGP SIGNATURE-----", "payload": "tree 80b1cf6e859bb5f57199bb645e8bd6c91ec0b654\nparent 3e827cc21e0734edd26170e8d1481f0d66a1426b\nauthor Chris Denton <christophersdenton@gmail.com> 1615953122 +0000\ncommitter Chris Denton <christophersdenton@gmail.com> 1621464896 +0100\n\nMove the implementation of `Path::exists` to `sys_common::fs` so platforms can specialize it\n\nWindows implementation of `fs::try_exists`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c2c1593acc5479a4b502d51bb5fea239766c235", "html_url": "https://github.com/rust-lang/rust/commit/2c2c1593acc5479a4b502d51bb5fea239766c235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c2c1593acc5479a4b502d51bb5fea239766c235/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e827cc21e0734edd26170e8d1481f0d66a1426b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e827cc21e0734edd26170e8d1481f0d66a1426b", "html_url": "https://github.com/rust-lang/rust/commit/3e827cc21e0734edd26170e8d1481f0d66a1426b"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "a1636e2f604cf772a547048a2f3ac7903de09031", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -2208,3 +2208,29 @@ impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n         &mut self.inner\n     }\n }\n+\n+/// Returns `Ok(true)` if the path points at an existing entity.\n+///\n+/// This function will traverse symbolic links to query information about the\n+/// destination file. In case of broken symbolic links this will return `Ok(false)`.\n+///\n+/// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+/// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n+/// denied on some of the parent directories.)\n+///\n+/// # Examples\n+///\n+/// ```no_run\n+/// #![feature(path_try_exists)]\n+/// use std::fs;\n+///\n+/// assert!(!fs::try_exists(\"does_not_exist.txt\").expect(\"Can't check existence of file does_not_exist.txt\"));\n+/// assert!(fs::try_exists(\"/root/secret_file.txt\").is_err());\n+/// ```\n+// FIXME: stabilization should modify documentation of `exists()` to recommend this method\n+// instead.\n+#[unstable(feature = \"path_try_exists\", issue = \"83186\")]\n+#[inline]\n+pub fn try_exists<P: AsRef<Path>>(path: P) -> io::Result<bool> {\n+    fs_imp::try_exists(path.as_ref())\n+}"}, {"sha": "9c5615f58c4363274b00a1e42f3c4f46b371bb64", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -2507,11 +2507,7 @@ impl Path {\n     #[unstable(feature = \"path_try_exists\", issue = \"83186\")]\n     #[inline]\n     pub fn try_exists(&self) -> io::Result<bool> {\n-        match fs::metadata(self) {\n-            Ok(_) => Ok(true),\n-            Err(error) if error.kind() == io::ErrorKind::NotFound => Ok(false),\n-            Err(error) => Err(error),\n-        }\n+        fs::try_exists(self)\n     }\n \n     /// Returns `true` if the path exists on disk and is pointing at a regular file."}, {"sha": "76ea70d997f5d7044ed0479354142d45def9b956", "filename": "library/std/src/sys/hermit/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -12,7 +12,7 @@ use crate::sys::time::SystemTime;\n use crate::sys::unsupported;\n use crate::sys_common::os_str_bytes::OsStrExt;\n \n-pub use crate::sys_common::fs::copy;\n+pub use crate::sys_common::fs::{copy, try_exists};\n //pub use crate::sys_common::fs::remove_dir_all;\n \n fn cstr(path: &Path) -> io::Result<CString> {"}, {"sha": "ef14865fbcd39dc174197f68b21a1cd26896fb2a", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -48,7 +48,7 @@ use libc::{\n     dirent64, fstat64, ftruncate64, lseek64, lstat64, off64_t, open64, readdir64_r, stat64,\n };\n \n-pub use crate::sys_common::fs::remove_dir_all;\n+pub use crate::sys_common::fs::{remove_dir_all, try_exists};\n \n pub struct File(FileDesc);\n "}, {"sha": "6b45e29c1458e25c789d10e845a685be09cea970", "filename": "library/std/src/sys/unsupported/fs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -275,6 +275,10 @@ pub fn remove_dir_all(_path: &Path) -> io::Result<()> {\n     unsupported()\n }\n \n+pub fn try_exists(_path: &Path) -> io::Result<bool> {\n+    unsupported()\n+}\n+\n pub fn readlink(_p: &Path) -> io::Result<PathBuf> {\n     unsupported()\n }"}, {"sha": "45e38f68b8c37882bcb49e2ae8f3e81df7dcab7d", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -14,7 +14,7 @@ use crate::sys::time::SystemTime;\n use crate::sys::unsupported;\n use crate::sys_common::FromInner;\n \n-pub use crate::sys_common::fs::remove_dir_all;\n+pub use crate::sys_common::fs::{remove_dir_all, try_exists};\n \n pub struct File {\n     fd: WasiFd,"}, {"sha": "36b395507b129d95ba21ad4f6227f40ea0c109a7", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -11,6 +11,7 @@ use crate::sync::Arc;\n use crate::sys::handle::Handle;\n use crate::sys::time::SystemTime;\n use crate::sys::{c, cvt};\n+pub use crate::sys_common::fs::try_exists;\n use crate::sys_common::FromInner;\n \n use super::to_u16s;"}, {"sha": "309f5483874e00c7b8d16b582905a78edfce3862", "filename": "library/std/src/sys_common/fs.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c2c1593acc5479a4b502d51bb5fea239766c235/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Ffs.rs?ref=2c2c1593acc5479a4b502d51bb5fea239766c235", "patch": "@@ -41,3 +41,11 @@ fn remove_dir_all_recursive(path: &Path) -> io::Result<()> {\n     }\n     fs::remove_dir(path)\n }\n+\n+pub fn try_exists(path: &Path) -> io::Result<bool> {\n+    match fs::metadata(path) {\n+        Ok(_) => Ok(true),\n+        Err(error) if error.kind() == io::ErrorKind::NotFound => Ok(false),\n+        Err(error) => Err(error),\n+    }\n+}"}]}