{"sha": "834ef9f08ae3429a05dead80237bb4bd04769895", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNGVmOWYwOGFlMzQyOWEwNWRlYWQ4MDIzN2JiNGJkMDQ3Njk4OTU=", "commit": {"author": {"name": "Nicolas Koch", "email": "nioko1337@gmail.com", "date": "2018-05-15T13:25:09Z"}, "committer": {"name": "Nicolas Koch", "email": "nioko1337@gmail.com", "date": "2018-05-15T13:25:09Z"}, "message": "fs: use copy_file_range on linux", "tree": {"sha": "8df8fc109050c67cda769de3cdfc03ce761b1b4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8df8fc109050c67cda769de3cdfc03ce761b1b4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/834ef9f08ae3429a05dead80237bb4bd04769895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/834ef9f08ae3429a05dead80237bb4bd04769895", "html_url": "https://github.com/rust-lang/rust/commit/834ef9f08ae3429a05dead80237bb4bd04769895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/834ef9f08ae3429a05dead80237bb4bd04769895/comments", "author": {"login": "nicokoch", "id": 3924281, "node_id": "MDQ6VXNlcjM5MjQyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3924281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicokoch", "html_url": "https://github.com/nicokoch", "followers_url": "https://api.github.com/users/nicokoch/followers", "following_url": "https://api.github.com/users/nicokoch/following{/other_user}", "gists_url": "https://api.github.com/users/nicokoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicokoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicokoch/subscriptions", "organizations_url": "https://api.github.com/users/nicokoch/orgs", "repos_url": "https://api.github.com/users/nicokoch/repos", "events_url": "https://api.github.com/users/nicokoch/events{/privacy}", "received_events_url": "https://api.github.com/users/nicokoch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nicokoch", "id": 3924281, "node_id": "MDQ6VXNlcjM5MjQyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3924281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicokoch", "html_url": "https://github.com/nicokoch", "followers_url": "https://api.github.com/users/nicokoch/followers", "following_url": "https://api.github.com/users/nicokoch/following{/other_user}", "gists_url": "https://api.github.com/users/nicokoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicokoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicokoch/subscriptions", "organizations_url": "https://api.github.com/users/nicokoch/orgs", "repos_url": "https://api.github.com/users/nicokoch/repos", "events_url": "https://api.github.com/users/nicokoch/events{/privacy}", "received_events_url": "https://api.github.com/users/nicokoch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76027ed2ad16cbb57919fe9c4dd3849469650570", "url": "https://api.github.com/repos/rust-lang/rust/commits/76027ed2ad16cbb57919fe9c4dd3849469650570", "html_url": "https://github.com/rust-lang/rust/commit/76027ed2ad16cbb57919fe9c4dd3849469650570"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "b9f0f39bbe2afa03692ce9126388d66f651c3884", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/834ef9f08ae3429a05dead80237bb4bd04769895/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834ef9f08ae3429a05dead80237bb4bd04769895/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=834ef9f08ae3429a05dead80237bb4bd04769895", "patch": "@@ -761,6 +761,7 @@ pub fn canonicalize(p: &Path) -> io::Result<PathBuf> {\n     Ok(PathBuf::from(OsString::from_vec(buf)))\n }\n \n+#[cfg(not(target_os = \"linux\"))]\n pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n     use fs::{File, set_permissions};\n     if !from.is_file() {\n@@ -776,3 +777,69 @@ pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n     set_permissions(to, perm)?;\n     Ok(ret)\n }\n+\n+#[cfg(target_os = \"linux\")]\n+pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n+    use fs::{File, set_permissions};\n+\n+    unsafe fn copy_file_range(\n+        fd_in: libc::c_int,\n+        off_in: *mut libc::loff_t,\n+        fd_out: libc::c_int,\n+        off_out: *mut libc::loff_t,\n+        len: libc::size_t,\n+        flags: libc::c_uint,\n+    ) -> libc::c_long {\n+        libc::syscall(\n+            libc::SYS_copy_file_range,\n+            fd_in,\n+            off_in,\n+            fd_out,\n+            off_out,\n+            len,\n+            flags,\n+        )\n+    }\n+\n+    if !from.is_file() {\n+        return Err(Error::new(ErrorKind::InvalidInput,\n+                              \"the source path is not an existing regular file\"))\n+    }\n+\n+    let mut reader = File::open(from)?;\n+    let mut writer = File::create(to)?;\n+    let (perm, len) = {\n+        let metadata = reader.metadata()?;\n+        (metadata.permissions(), metadata.size())\n+    };\n+    \n+    let mut written = 0u64;\n+    while written < len {\n+        let copy_result = unsafe {\n+            cvt(copy_file_range(reader.as_raw_fd(),\n+                                ptr::null_mut(),\n+                                writer.as_raw_fd(),\n+                                ptr::null_mut(),\n+                                len as usize,\n+                                0)\n+                )\n+        };\n+        match copy_result {\n+            Ok(ret) => written += ret as u64,\n+            Err(err) => {\n+                match err.raw_os_error() {\n+                    Some(os_err) if os_err == libc::ENOSYS || os_err == libc::EXDEV => {\n+                        // Either kernel is too old or the files are not mounted on the same fs.\n+                        // Try again with fallback method\n+                        let ret = io::copy(&mut reader, &mut writer)?;\n+                        set_permissions(to, perm)?;\n+                        return Ok(ret)\n+                    },\n+                    _ => return Err(err),\n+                }\n+            }\n+        }\n+    }\n+    set_permissions(to, perm)?;\n+    Ok(written)\n+}"}]}