{"sha": "78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZjdlODU0Zjk4MWM1ZjBjMjNmMGVhZjRjNzUwY2UxYWE1ODFhYzY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-11-25T21:51:23Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-12-16T23:59:32Z"}, "message": "address review comments", "tree": {"sha": "2dac869562a343bca3a916530013ca74b59c1da6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dac869562a343bca3a916530013ca74b59c1da6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6", "html_url": "https://github.com/rust-lang/rust/commit/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95bec6ed0987227be8228ea87e002a17c1cc8ed6", "url": "https://api.github.com/repos/rust-lang/rust/commits/95bec6ed0987227be8228ea87e002a17c1cc8ed6", "html_url": "https://github.com/rust-lang/rust/commit/95bec6ed0987227be8228ea87e002a17c1cc8ed6"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "8f044f9a7c35f6f0ff4e4467cea8d60b5c7c9139", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6", "patch": "@@ -2743,14 +2743,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             trait_ref, self_ty, expected_vid\n         );\n         match self_ty.sty {\n-            ty::Infer(ty::TyVar(v)) => {\n-                let root_vid = self.root_var(v);\n-                debug!(\"self_type_matches_expected_vid - root_vid={:?}\", root_vid);\n-                if root_vid == expected_vid {\n-                    true\n-                } else {\n-                    false\n-                }\n+            ty::Infer(ty::TyVar(found_vid)) => {\n+                let found_vid = self.root_var(found_vid);\n+                debug!(\"self_type_matches_expected_vid - found_vid={:?}\", found_vid);\n+                expected_vid == found_vid\n             }\n             _ => false\n         }"}, {"sha": "407484e3d266572266e1ea192791e637ea443208", "filename": "src/test/ui/coercion/coerce-issue-49593-box-never.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6/src%2Ftest%2Fui%2Fcoercion%2Fcoerce-issue-49593-box-never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6/src%2Ftest%2Fui%2Fcoercion%2Fcoerce-issue-49593-box-never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion%2Fcoerce-issue-49593-box-never.rs?ref=78f7e854f981c5f0c23f0eaf4c750ce1aa581ac6", "patch": "@@ -14,21 +14,21 @@\n #![allow(unreachable_code)]\n \n use std::error::Error;\n-use std::char::ParseCharError; /* some Error */\n+use std::mem;\n \n fn raw_ptr_box<T>(t: T) -> *mut T {\n     panic!()\n }\n \n-fn foo(x: !) -> Box<Error> {\n-    /* *mut $0 is coerced to *mut Error here */ Box::<_ /* ! */>::new(x)\n+fn foo(x: !) -> Box<dyn Error> {\n+    /* *mut $0 is coerced to Box<dyn Error> here */ Box::<_ /* ! */>::new(x)\n }\n \n-fn foo_raw_ptr(x: !) -> *mut Error {\n+fn foo_raw_ptr(x: !) -> *mut dyn Error {\n     /* *mut $0 is coerced to *mut Error here */ raw_ptr_box::<_ /* ! */>(x)\n }\n \n-fn no_coercion(d: *mut Error) -> *mut Error {\n+fn no_coercion(d: *mut dyn Error) -> *mut dyn Error {\n     /* an unsize coercion won't compile here, and it is indeed not used\n        because there is nothing requiring the _ to be Sized */\n     d as *mut _\n@@ -41,17 +41,21 @@ impl Xyz for S {}\n impl Xyz for T {}\n \n fn foo_no_never() {\n-    let mut x /* : Box<S> */ = None;\n+    let mut x /* : Option<S> */ = None;\n     let mut first_iter = false;\n     loop {\n         if !first_iter {\n-            let y: Box<Xyz>\n+            let y: Box<dyn Xyz>\n                 = /* Box<$0> is coerced to Box<Xyz> here */ Box::new(x.unwrap());\n         }\n \n         x = Some(S);\n         first_iter = true;\n     }\n+\n+    let mut y : Option<S> = None;\n+    // assert types are equal\n+    mem::replace(&mut x, &mut y);\n }\n \n fn main() {"}]}