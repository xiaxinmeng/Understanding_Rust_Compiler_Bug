{"sha": "3f43b0168182aa970390004aaad08f73f2915a7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDNiMDE2ODE4MmFhOTcwMzkwMDA0YWFhZDA4ZjczZjI5MTVhN2U=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-06-21T21:54:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-21T21:54:28Z"}, "message": "Rollup merge of #34356 - matklad:cstr-docs, r=GuillaumeGomez\n\nDocument `CStr::as_ptr` dangers.\n\nr? @steveklabnik\n\nHi! I've tried to document `CString::new(\"hello\").unwrap().as_ptr()` footgun. Related [RFC] and the original [discussion].\n\n[RFC]: https://github.com/rust-lang/rfcs/pull/1642\n[discussion]: https://users.rust-lang.org/t/you-should-stop-telling-people-that-safe-rust-is-always-safe/6094", "tree": {"sha": "89a1c6c0c336a85fd441f40ea9accd223d49af54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89a1c6c0c336a85fd441f40ea9accd223d49af54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f43b0168182aa970390004aaad08f73f2915a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f43b0168182aa970390004aaad08f73f2915a7e", "html_url": "https://github.com/rust-lang/rust/commit/3f43b0168182aa970390004aaad08f73f2915a7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f43b0168182aa970390004aaad08f73f2915a7e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe96928d7de991e527a7ed7b88bb30aa965c8a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe96928d7de991e527a7ed7b88bb30aa965c8a08", "html_url": "https://github.com/rust-lang/rust/commit/fe96928d7de991e527a7ed7b88bb30aa965c8a08"}, {"sha": "677aa47d68b7db8bb51c651dcb73a3225b8c7d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/677aa47d68b7db8bb51c651dcb73a3225b8c7d64", "html_url": "https://github.com/rust-lang/rust/commit/677aa47d68b7db8bb51c651dcb73a3225b8c7d64"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "0d3e18f9b966a2848781cafd10f2944d14ec2156", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3f43b0168182aa970390004aaad08f73f2915a7e/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f43b0168182aa970390004aaad08f73f2915a7e/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=3f43b0168182aa970390004aaad08f73f2915a7e", "patch": "@@ -509,6 +509,38 @@ impl CStr {\n     /// The returned pointer will be valid for as long as `self` is and points\n     /// to a contiguous region of memory terminated with a 0 byte to represent\n     /// the end of the string.\n+    ///\n+    /// **WARNING**\n+    ///\n+    /// It is your responsibility to make sure that the underlying memory is not\n+    /// freed too early. For example, the following code will cause undefined\n+    /// behaviour when `ptr` is used inside the `unsafe` block:\n+    ///\n+    /// ```no_run\n+    /// use std::ffi::{CString};\n+    ///\n+    /// let ptr = CString::new(\"Hello\").unwrap().as_ptr();\n+    /// unsafe {\n+    ///     // `ptr` is dangling\n+    ///     *ptr;\n+    /// }\n+    /// ```\n+    ///\n+    /// This happens because the pointer returned by `as_ptr` does not carry any\n+    /// lifetime information and the string is deallocated immediately after\n+    /// the `CString::new(\"Hello\").unwrap().as_ptr()` expression is evaluated.\n+    /// To fix the problem, bind the string to a local variable:\n+    ///\n+    /// ```no_run\n+    /// use std::ffi::{CString};\n+    ///\n+    /// let hello = CString::new(\"Hello\").unwrap();\n+    /// let ptr = hello.as_ptr();\n+    /// unsafe {\n+    ///     // `ptr` is valid because `hello` is in scope\n+    ///     *ptr;\n+    /// }\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn as_ptr(&self) -> *const c_char {\n         self.inner.as_ptr()"}]}