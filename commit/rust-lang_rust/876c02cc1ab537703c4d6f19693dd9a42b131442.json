{"sha": "876c02cc1ab537703c4d6f19693dd9a42b131442", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NmMwMmNjMWFiNTM3NzAzYzRkNmYxOTY5M2RkOWE0MmIxMzE0NDI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-08-21T11:33:28Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-08-21T11:37:33Z"}, "message": "cstring: avoid excessive growth just to 0-terminate\n\nBased on following what happens in CString::new(\"string literal\"):\n\n1. Using `Into<Vec<u8>>`, a Vec is allocated with capacity exactly equal\n   to the string's input length.\n2. By `v.push(0)`, the Vec is grown to twice capacity, since it was full.\n3. By `v.into_boxed_slice()`, the Vec capacity is shrunk to fit the length again.\n\nIf we use `.reserve_exact(1)` just before the push, then we avoid the\ncapacity doubling that we're going to have to shrink anyway.\n\nGrowing by just 1 byte means that the step (2) is less likely to have to\nmove the memory to a larger allocation chunk, and that the step (3) does\nnot have to reallocate.", "tree": {"sha": "ee270c5f75895f0282d61db82ebf34ded55d2c96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee270c5f75895f0282d61db82ebf34ded55d2c96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/876c02cc1ab537703c4d6f19693dd9a42b131442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/876c02cc1ab537703c4d6f19693dd9a42b131442", "html_url": "https://github.com/rust-lang/rust/commit/876c02cc1ab537703c4d6f19693dd9a42b131442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/876c02cc1ab537703c4d6f19693dd9a42b131442/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e25542cb02d946959517ebb68e2f7b1318817237", "url": "https://api.github.com/repos/rust-lang/rust/commits/e25542cb02d946959517ebb68e2f7b1318817237", "html_url": "https://github.com/rust-lang/rust/commit/e25542cb02d946959517ebb68e2f7b1318817237"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "6f217be31fe678e513fbf5a3ac95a9b5d1b1cd1a", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/876c02cc1ab537703c4d6f19693dd9a42b131442/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876c02cc1ab537703c4d6f19693dd9a42b131442/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=876c02cc1ab537703c4d6f19693dd9a42b131442", "patch": "@@ -213,6 +213,7 @@ impl CString {\n     /// byte vector, not anything that can be converted to one with Into.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub unsafe fn from_vec_unchecked(mut v: Vec<u8>) -> CString {\n+        v.reserve_exact(1);\n         v.push(0);\n         CString { inner: v.into_boxed_slice() }\n     }"}]}