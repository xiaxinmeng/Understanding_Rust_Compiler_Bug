{"sha": "95bef0d5d7cbbc1e40fc22b6189bbff303406a98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YmVmMGQ1ZDdjYmJjMWU0MGZjMjJiNjE4OWJiZmYzMDM0MDZhOTg=", "commit": {"author": {"name": "djzin", "email": "noreply@github.com", "date": "2016-12-24T23:45:30Z"}, "committer": {"name": "djzin", "email": "noreply@github.com", "date": "2017-01-14T16:51:51Z"}, "message": "use str range for string btreemap in test", "tree": {"sha": "b1339c9a2e48704bf60c671c059e7d901334f396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1339c9a2e48704bf60c671c059e7d901334f396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95bef0d5d7cbbc1e40fc22b6189bbff303406a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95bef0d5d7cbbc1e40fc22b6189bbff303406a98", "html_url": "https://github.com/rust-lang/rust/commit/95bef0d5d7cbbc1e40fc22b6189bbff303406a98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95bef0d5d7cbbc1e40fc22b6189bbff303406a98/comments", "author": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5f1f5bc2596f9f6c2726b04189275ac6adc7133", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5f1f5bc2596f9f6c2726b04189275ac6adc7133", "html_url": "https://github.com/rust-lang/rust/commit/d5f1f5bc2596f9f6c2726b04189275ac6adc7133"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "44bdf6f7fbfa961a0f47727a57f89ad44dea94ca", "filename": "src/libcollectionstest/btree/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95bef0d5d7cbbc1e40fc22b6189bbff303406a98/src%2Flibcollectionstest%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95bef0d5d7cbbc1e40fc22b6189bbff303406a98/src%2Flibcollectionstest%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fbtree%2Fmap.rs?ref=95bef0d5d7cbbc1e40fc22b6189bbff303406a98", "patch": "@@ -208,8 +208,8 @@ fn test_range_borrowed_key() {\n     map.insert(\"baboon\".to_string(), 2);\n     map.insert(\"coyote\".to_string(), 3);\n     map.insert(\"dingo\".to_string(), 4);\n-    // NOTE: would like to use simply \"a\"..\"d\" here...\n-    let mut iter = map.range(\"b\".to_string()..\"d\".to_string());\n+    // NOTE: would like to use simply \"b\"..\"d\" here...\n+    let mut iter = map.range::<str, _>((Included(\"b\"),Excluded(\"d\")));\n     assert_eq!(iter.next(), Some((&\"baboon\".to_string(), &2)));\n     assert_eq!(iter.next(), Some((&\"coyote\".to_string(), &3)));\n     assert_eq!(iter.next(), None);"}]}