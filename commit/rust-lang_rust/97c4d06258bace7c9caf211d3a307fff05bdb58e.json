{"sha": "97c4d06258bace7c9caf211d3a307fff05bdb58e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YzRkMDYyNThiYWNlN2M5Y2FmMjExZDNhMzA3ZmZmMDViZGI1OGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-24T13:02:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-24T13:02:37Z"}, "message": "Merge #5015 #5027 #5028\n\n5015: Account for updated module ids when determining whether a resolution is changed r=matklad a=Nashenas88\n\nFixes #4943\n\n5027: Make Debug less verbose for VfsPath and use Display in analysis-stats r=matklad a=lnicola\n\n\n\n5028: Remove namedExports config r=matklad a=lnicola\n\nFixes a warning:\r\n\r\n```\r\n(!) Plugin commonjs: The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.\r\n```\n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "d3f0965bcd14f5c6c79a973a2542eadef88c63df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3f0965bcd14f5c6c79a973a2542eadef88c63df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97c4d06258bace7c9caf211d3a307fff05bdb58e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe807tCRBK7hj4Ov3rIwAAdHIIAH1msZRgqf2YSuKdEzMOTo69\nOIk2CdwzSwRMIUqeeuywDFDWsfXvCITk1gSRKvM+9Kom/g6oeymthTg1F8R6qzrS\nVLlVyJDBQFMjj1STl+huVEbX5sRMZ5WReYcDmObFtDVanG55h0L4qRbaOl5y3z58\nVfP+aXsdbqkJbGUkaLZbveOGpU0zNMc+sFtOGOoF2y3j/Ymlv+C9AhYHWVo9UoRZ\nGG8QUgqYZFrcY+jGhaWtgxnL+YLsRod6Bj2O7K3NlqAmF2D6cOH1hAgIEB7+Atb9\nb0MpTVCxD4qV081ZDmqVLAc6fVv5tHmRCK9KPfu/xdZ0mDZu9FAjreGfCZqEong=\n=Ysde\n-----END PGP SIGNATURE-----\n", "payload": "tree d3f0965bcd14f5c6c79a973a2542eadef88c63df\nparent 44721dca66ae8c10011b369c4ef5e7f60dab4d5e\nparent 43c6f6c039985923c3039808834892206c81684d\nparent c15c22139faacd41cc7e098a15aa6b820e0a20ab\nparent 3d872b233b0bbf46eb47a1027759c20023ff9704\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593003757 +0000\ncommitter GitHub <noreply@github.com> 1593003757 +0000\n\nMerge #5015 #5027 #5028\n\n5015: Account for updated module ids when determining whether a resolution is changed r=matklad a=Nashenas88\n\nFixes #4943\n\n5027: Make Debug less verbose for VfsPath and use Display in analysis-stats r=matklad a=lnicola\n\n\n\n5028: Remove namedExports config r=matklad a=lnicola\n\nFixes a warning:\r\n\r\n```\r\n(!) Plugin commonjs: The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.\r\n```\n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97c4d06258bace7c9caf211d3a307fff05bdb58e", "html_url": "https://github.com/rust-lang/rust/commit/97c4d06258bace7c9caf211d3a307fff05bdb58e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97c4d06258bace7c9caf211d3a307fff05bdb58e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44721dca66ae8c10011b369c4ef5e7f60dab4d5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/44721dca66ae8c10011b369c4ef5e7f60dab4d5e", "html_url": "https://github.com/rust-lang/rust/commit/44721dca66ae8c10011b369c4ef5e7f60dab4d5e"}, {"sha": "43c6f6c039985923c3039808834892206c81684d", "url": "https://api.github.com/repos/rust-lang/rust/commits/43c6f6c039985923c3039808834892206c81684d", "html_url": "https://github.com/rust-lang/rust/commit/43c6f6c039985923c3039808834892206c81684d"}, {"sha": "c15c22139faacd41cc7e098a15aa6b820e0a20ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c15c22139faacd41cc7e098a15aa6b820e0a20ab", "html_url": "https://github.com/rust-lang/rust/commit/c15c22139faacd41cc7e098a15aa6b820e0a20ab"}, {"sha": "3d872b233b0bbf46eb47a1027759c20023ff9704", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d872b233b0bbf46eb47a1027759c20023ff9704", "html_url": "https://github.com/rust-lang/rust/commit/3d872b233b0bbf46eb47a1027759c20023ff9704"}], "stats": {"total": 106, "additions": 86, "deletions": 20}, "files": [{"sha": "c81b966c398dd94c78b3e549d3dbd60d95defce6", "filename": "crates/ra_hir_def/src/item_scope.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs?ref=97c4d06258bace7c9caf211d3a307fff05bdb58e", "patch": "@@ -5,6 +5,7 @@ use hir_expand::name::Name;\n use once_cell::sync::Lazy;\n use ra_db::CrateId;\n use rustc_hash::FxHashMap;\n+use test_utils::mark;\n \n use crate::{\n     db::DefDatabase, per_ns::PerNs, visibility::Visibility, AdtId, BuiltinType, HasModule, ImplId,\n@@ -126,19 +127,27 @@ impl ItemScope {\n         let mut changed = false;\n         let existing = self.visible.entry(name).or_default();\n \n-        if existing.types.is_none() && def.types.is_some() {\n-            existing.types = def.types;\n-            changed = true;\n-        }\n-        if existing.values.is_none() && def.values.is_some() {\n-            existing.values = def.values;\n-            changed = true;\n-        }\n-        if existing.macros.is_none() && def.macros.is_some() {\n-            existing.macros = def.macros;\n-            changed = true;\n+        macro_rules! check_changed {\n+            ($changed:ident, $existing:expr, $def:expr) => {\n+                match ($existing, $def) {\n+                    (None, Some(_)) => {\n+                        $existing = $def;\n+                        $changed = true;\n+                    }\n+                    (Some(e), Some(d)) if e.0 != d.0 => {\n+                        mark::hit!(import_shadowed);\n+                        $existing = $def;\n+                        $changed = true;\n+                    }\n+                    _ => {}\n+                }\n+            };\n         }\n \n+        check_changed!(changed, existing.types, def.types);\n+        check_changed!(changed, existing.values, def.values);\n+        check_changed!(changed, existing.macros, def.macros);\n+\n         changed\n     }\n "}, {"sha": "2f440975a9706f839cbfdcb0ea5e52516066b13c", "filename": "crates/ra_hir_def/src/nameres/tests/globs.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs?ref=97c4d06258bace7c9caf211d3a307fff05bdb58e", "patch": "@@ -229,3 +229,50 @@ fn glob_enum_group() {\n     \"###\n     );\n }\n+\n+#[test]\n+fn glob_shadowed_def() {\n+    mark::check!(import_shadowed);\n+    let map = def_map(\n+        r###\"\n+        //- /lib.rs\n+        mod foo;\n+        mod bar;\n+\n+        use foo::*;\n+        use bar::baz;\n+\n+        use baz::Bar;\n+\n+        //- /foo.rs\n+        pub mod baz {\n+            pub struct Foo;\n+        }\n+\n+        //- /bar.rs\n+        pub mod baz {\n+            pub struct Bar;\n+        }\n+        \"###,\n+    );\n+    assert_snapshot!(map, @r###\"\n+        \u22eecrate\n+        \u22eeBar: t v\n+        \u22eebar: t\n+        \u22eebaz: t\n+        \u22eefoo: t\n+        \u22ee\n+        \u22eecrate::bar\n+        \u22eebaz: t\n+        \u22ee\n+        \u22eecrate::bar::baz\n+        \u22eeBar: t v\n+        \u22ee\n+        \u22eecrate::foo\n+        \u22eebaz: t\n+        \u22ee\n+        \u22eecrate::foo::baz\n+        \u22eeFoo: t v\n+    \"###\n+    );\n+}"}, {"sha": "2f4c29e068249295b9f1d54583a265db9ecef8d1", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=97c4d06258bace7c9caf211d3a307fff05bdb58e", "patch": "@@ -121,7 +121,7 @@ pub fn analysis_stats(\n             let original_file = src.file_id.original_file(db);\n             let path = vfs.file_path(original_file);\n             let syntax_range = src.value.syntax().text_range();\n-            format_to!(msg, \" ({:?} {:?})\", path, syntax_range);\n+            format_to!(msg, \" ({} {:?})\", path, syntax_range);\n         }\n         if verbosity.is_spammy() {\n             bar.println(msg.to_string());"}, {"sha": "940f91d0e5a213e1ae9f3e090d48d0a42e676eb5", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97c4d06258bace7c9caf211d3a307fff05bdb58e/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=97c4d06258bace7c9caf211d3a307fff05bdb58e", "patch": "@@ -5,7 +5,7 @@ use paths::{AbsPath, AbsPathBuf};\n \n /// Long-term, we want to support files which do not reside in the file-system,\n /// so we treat VfsPaths as opaque identifiers.\n-#[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n+#[derive(Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n pub struct VfsPath(VfsPathRepr);\n \n impl VfsPath {\n@@ -50,7 +50,7 @@ impl VfsPath {\n     }\n }\n \n-#[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n+#[derive(Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n enum VfsPathRepr {\n     PathBuf(AbsPathBuf),\n     VirtualPath(VirtualPath),\n@@ -71,6 +71,21 @@ impl fmt::Display for VfsPath {\n     }\n }\n \n+impl fmt::Debug for VfsPath {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        fmt::Debug::fmt(&self.0, f)\n+    }\n+}\n+\n+impl fmt::Debug for VfsPathRepr {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match &self {\n+            VfsPathRepr::PathBuf(it) => fmt::Debug::fmt(&it.display(), f),\n+            VfsPathRepr::VirtualPath(VirtualPath(it)) => fmt::Debug::fmt(&it, f),\n+        }\n+    }\n+}\n+\n #[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n struct VirtualPath(String);\n "}, {"sha": "4b4c47f4a3741375facf949b59d7b1b26414b31c", "filename": "editors/code/rollup.config.js", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/97c4d06258bace7c9caf211d3a307fff05bdb58e/editors%2Fcode%2Frollup.config.js", "raw_url": "https://github.com/rust-lang/rust/raw/97c4d06258bace7c9caf211d3a307fff05bdb58e/editors%2Fcode%2Frollup.config.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Frollup.config.js?ref=97c4d06258bace7c9caf211d3a307fff05bdb58e", "patch": "@@ -11,12 +11,7 @@ export default {\n         resolve({\n             preferBuiltins: true\n         }),\n-        commonjs({\n-            namedExports: {\n-                // squelch missing import warnings\n-                'vscode-languageclient': ['CreateFile', 'RenameFile', 'ErrorCodes', 'WorkDoneProgress', 'WorkDoneProgressBegin', 'WorkDoneProgressReport', 'WorkDoneProgressEnd']\n-            }\n-        })\n+        commonjs()\n     ],\n     external: [...nodeBuiltins, 'vscode'],\n     output: {"}]}